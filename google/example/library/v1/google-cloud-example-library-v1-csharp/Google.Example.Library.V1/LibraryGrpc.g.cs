// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/example/library/v1/library.proto
// </auto-generated>
// Original file comments:
// Copyright 2019 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Example.Library.V1 {
  /// <summary>
  /// This API represents a simple digital library. It lets you manage Shelf
  /// resources and Book resources in the library. It defines the following
  /// resource model:
  ///
  /// - The API has a collection of [Shelf][google.example.library.v1.Shelf]
  ///   resources, named `shelves/*`
  ///
  /// - Each Shelf has a collection of [Book][google.example.library.v1.Book]
  ///   resources, named `shelves/*/books/*`
  /// </summary>
  public static partial class LibraryService
  {
    static readonly string __ServiceName = "google.example.library.v1.LibraryService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.CreateShelfRequest> __Marshaller_google_example_library_v1_CreateShelfRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.CreateShelfRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.Shelf> __Marshaller_google_example_library_v1_Shelf = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.Shelf.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.GetShelfRequest> __Marshaller_google_example_library_v1_GetShelfRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.GetShelfRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.ListShelvesRequest> __Marshaller_google_example_library_v1_ListShelvesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.ListShelvesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.ListShelvesResponse> __Marshaller_google_example_library_v1_ListShelvesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.ListShelvesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.DeleteShelfRequest> __Marshaller_google_example_library_v1_DeleteShelfRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.DeleteShelfRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.MergeShelvesRequest> __Marshaller_google_example_library_v1_MergeShelvesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.MergeShelvesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.CreateBookRequest> __Marshaller_google_example_library_v1_CreateBookRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.CreateBookRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.Book> __Marshaller_google_example_library_v1_Book = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.Book.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.GetBookRequest> __Marshaller_google_example_library_v1_GetBookRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.GetBookRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.ListBooksRequest> __Marshaller_google_example_library_v1_ListBooksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.ListBooksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.ListBooksResponse> __Marshaller_google_example_library_v1_ListBooksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.ListBooksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.DeleteBookRequest> __Marshaller_google_example_library_v1_DeleteBookRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.DeleteBookRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.UpdateBookRequest> __Marshaller_google_example_library_v1_UpdateBookRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.UpdateBookRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Example.Library.V1.MoveBookRequest> __Marshaller_google_example_library_v1_MoveBookRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Example.Library.V1.MoveBookRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Example.Library.V1.CreateShelfRequest, global::Google.Example.Library.V1.Shelf> __Method_CreateShelf = new grpc::Method<global::Google.Example.Library.V1.CreateShelfRequest, global::Google.Example.Library.V1.Shelf>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateShelf",
        __Marshaller_google_example_library_v1_CreateShelfRequest,
        __Marshaller_google_example_library_v1_Shelf);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Example.Library.V1.GetShelfRequest, global::Google.Example.Library.V1.Shelf> __Method_GetShelf = new grpc::Method<global::Google.Example.Library.V1.GetShelfRequest, global::Google.Example.Library.V1.Shelf>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetShelf",
        __Marshaller_google_example_library_v1_GetShelfRequest,
        __Marshaller_google_example_library_v1_Shelf);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Example.Library.V1.ListShelvesRequest, global::Google.Example.Library.V1.ListShelvesResponse> __Method_ListShelves = new grpc::Method<global::Google.Example.Library.V1.ListShelvesRequest, global::Google.Example.Library.V1.ListShelvesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListShelves",
        __Marshaller_google_example_library_v1_ListShelvesRequest,
        __Marshaller_google_example_library_v1_ListShelvesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Example.Library.V1.DeleteShelfRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteShelf = new grpc::Method<global::Google.Example.Library.V1.DeleteShelfRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteShelf",
        __Marshaller_google_example_library_v1_DeleteShelfRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Example.Library.V1.MergeShelvesRequest, global::Google.Example.Library.V1.Shelf> __Method_MergeShelves = new grpc::Method<global::Google.Example.Library.V1.MergeShelvesRequest, global::Google.Example.Library.V1.Shelf>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MergeShelves",
        __Marshaller_google_example_library_v1_MergeShelvesRequest,
        __Marshaller_google_example_library_v1_Shelf);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Example.Library.V1.CreateBookRequest, global::Google.Example.Library.V1.Book> __Method_CreateBook = new grpc::Method<global::Google.Example.Library.V1.CreateBookRequest, global::Google.Example.Library.V1.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBook",
        __Marshaller_google_example_library_v1_CreateBookRequest,
        __Marshaller_google_example_library_v1_Book);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Example.Library.V1.GetBookRequest, global::Google.Example.Library.V1.Book> __Method_GetBook = new grpc::Method<global::Google.Example.Library.V1.GetBookRequest, global::Google.Example.Library.V1.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBook",
        __Marshaller_google_example_library_v1_GetBookRequest,
        __Marshaller_google_example_library_v1_Book);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Example.Library.V1.ListBooksRequest, global::Google.Example.Library.V1.ListBooksResponse> __Method_ListBooks = new grpc::Method<global::Google.Example.Library.V1.ListBooksRequest, global::Google.Example.Library.V1.ListBooksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBooks",
        __Marshaller_google_example_library_v1_ListBooksRequest,
        __Marshaller_google_example_library_v1_ListBooksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Example.Library.V1.DeleteBookRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteBook = new grpc::Method<global::Google.Example.Library.V1.DeleteBookRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBook",
        __Marshaller_google_example_library_v1_DeleteBookRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Example.Library.V1.UpdateBookRequest, global::Google.Example.Library.V1.Book> __Method_UpdateBook = new grpc::Method<global::Google.Example.Library.V1.UpdateBookRequest, global::Google.Example.Library.V1.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBook",
        __Marshaller_google_example_library_v1_UpdateBookRequest,
        __Marshaller_google_example_library_v1_Book);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Example.Library.V1.MoveBookRequest, global::Google.Example.Library.V1.Book> __Method_MoveBook = new grpc::Method<global::Google.Example.Library.V1.MoveBookRequest, global::Google.Example.Library.V1.Book>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MoveBook",
        __Marshaller_google_example_library_v1_MoveBookRequest,
        __Marshaller_google_example_library_v1_Book);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Example.Library.V1.LibraryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of LibraryService</summary>
    [grpc::BindServiceMethod(typeof(LibraryService), "BindService")]
    public abstract partial class LibraryServiceBase
    {
      /// <summary>
      /// Creates a shelf, and returns the new Shelf.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Shelf> CreateShelf(global::Google.Example.Library.V1.CreateShelfRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Shelf> GetShelf(global::Google.Example.Library.V1.GetShelfRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists shelves. The order is unspecified but deterministic. Newly created
      /// shelves will not necessarily be added to the end of this list.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.ListShelvesResponse> ListShelves(global::Google.Example.Library.V1.ListShelvesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteShelf(global::Google.Example.Library.V1.DeleteShelfRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Merges two shelves by adding all books from the shelf named
      /// `other_shelf_name` to shelf `name`, and deletes
      /// `other_shelf_name`. Returns the updated shelf.
      /// The book ids of the moved books may not be the same as the original books.
      ///
      /// Returns NOT_FOUND if either shelf does not exist.
      /// This call is a no-op if the specified shelves are the same.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Shelf> MergeShelves(global::Google.Example.Library.V1.MergeShelvesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a book, and returns the new Book.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Book> CreateBook(global::Google.Example.Library.V1.CreateBookRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Book> GetBook(global::Google.Example.Library.V1.GetBookRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists books in a shelf. The order is unspecified but deterministic. Newly
      /// created books will not necessarily be added to the end of this list.
      /// Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.ListBooksResponse> ListBooks(global::Google.Example.Library.V1.ListBooksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBook(global::Google.Example.Library.V1.DeleteBookRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a book. Returns INVALID_ARGUMENT if the name of the book
      /// is non-empty and does not equal the existing name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Book> UpdateBook(global::Google.Example.Library.V1.UpdateBookRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Moves a book to another shelf, and returns the new book. The book
      /// id of the new book may not be the same as the original book.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Example.Library.V1.Book> MoveBook(global::Google.Example.Library.V1.MoveBookRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for LibraryService</summary>
    public partial class LibraryServiceClient : grpc::ClientBase<LibraryServiceClient>
    {
      /// <summary>Creates a new client for LibraryService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LibraryServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for LibraryService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LibraryServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LibraryServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LibraryServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a shelf, and returns the new Shelf.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Shelf CreateShelf(global::Google.Example.Library.V1.CreateShelfRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateShelf(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a shelf, and returns the new Shelf.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Shelf CreateShelf(global::Google.Example.Library.V1.CreateShelfRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateShelf, null, options, request);
      }
      /// <summary>
      /// Creates a shelf, and returns the new Shelf.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Shelf> CreateShelfAsync(global::Google.Example.Library.V1.CreateShelfRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateShelfAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a shelf, and returns the new Shelf.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Shelf> CreateShelfAsync(global::Google.Example.Library.V1.CreateShelfRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateShelf, null, options, request);
      }
      /// <summary>
      /// Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Shelf GetShelf(global::Google.Example.Library.V1.GetShelfRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetShelf(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Shelf GetShelf(global::Google.Example.Library.V1.GetShelfRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetShelf, null, options, request);
      }
      /// <summary>
      /// Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Shelf> GetShelfAsync(global::Google.Example.Library.V1.GetShelfRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetShelfAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Shelf> GetShelfAsync(global::Google.Example.Library.V1.GetShelfRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetShelf, null, options, request);
      }
      /// <summary>
      /// Lists shelves. The order is unspecified but deterministic. Newly created
      /// shelves will not necessarily be added to the end of this list.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.ListShelvesResponse ListShelves(global::Google.Example.Library.V1.ListShelvesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListShelves(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists shelves. The order is unspecified but deterministic. Newly created
      /// shelves will not necessarily be added to the end of this list.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.ListShelvesResponse ListShelves(global::Google.Example.Library.V1.ListShelvesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListShelves, null, options, request);
      }
      /// <summary>
      /// Lists shelves. The order is unspecified but deterministic. Newly created
      /// shelves will not necessarily be added to the end of this list.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.ListShelvesResponse> ListShelvesAsync(global::Google.Example.Library.V1.ListShelvesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListShelvesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists shelves. The order is unspecified but deterministic. Newly created
      /// shelves will not necessarily be added to the end of this list.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.ListShelvesResponse> ListShelvesAsync(global::Google.Example.Library.V1.ListShelvesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListShelves, null, options, request);
      }
      /// <summary>
      /// Deletes a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteShelf(global::Google.Example.Library.V1.DeleteShelfRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteShelf(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteShelf(global::Google.Example.Library.V1.DeleteShelfRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteShelf, null, options, request);
      }
      /// <summary>
      /// Deletes a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteShelfAsync(global::Google.Example.Library.V1.DeleteShelfRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteShelfAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a shelf. Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteShelfAsync(global::Google.Example.Library.V1.DeleteShelfRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteShelf, null, options, request);
      }
      /// <summary>
      /// Merges two shelves by adding all books from the shelf named
      /// `other_shelf_name` to shelf `name`, and deletes
      /// `other_shelf_name`. Returns the updated shelf.
      /// The book ids of the moved books may not be the same as the original books.
      ///
      /// Returns NOT_FOUND if either shelf does not exist.
      /// This call is a no-op if the specified shelves are the same.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Shelf MergeShelves(global::Google.Example.Library.V1.MergeShelvesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MergeShelves(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Merges two shelves by adding all books from the shelf named
      /// `other_shelf_name` to shelf `name`, and deletes
      /// `other_shelf_name`. Returns the updated shelf.
      /// The book ids of the moved books may not be the same as the original books.
      ///
      /// Returns NOT_FOUND if either shelf does not exist.
      /// This call is a no-op if the specified shelves are the same.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Shelf MergeShelves(global::Google.Example.Library.V1.MergeShelvesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MergeShelves, null, options, request);
      }
      /// <summary>
      /// Merges two shelves by adding all books from the shelf named
      /// `other_shelf_name` to shelf `name`, and deletes
      /// `other_shelf_name`. Returns the updated shelf.
      /// The book ids of the moved books may not be the same as the original books.
      ///
      /// Returns NOT_FOUND if either shelf does not exist.
      /// This call is a no-op if the specified shelves are the same.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Shelf> MergeShelvesAsync(global::Google.Example.Library.V1.MergeShelvesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MergeShelvesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Merges two shelves by adding all books from the shelf named
      /// `other_shelf_name` to shelf `name`, and deletes
      /// `other_shelf_name`. Returns the updated shelf.
      /// The book ids of the moved books may not be the same as the original books.
      ///
      /// Returns NOT_FOUND if either shelf does not exist.
      /// This call is a no-op if the specified shelves are the same.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Shelf> MergeShelvesAsync(global::Google.Example.Library.V1.MergeShelvesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MergeShelves, null, options, request);
      }
      /// <summary>
      /// Creates a book, and returns the new Book.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Book CreateBook(global::Google.Example.Library.V1.CreateBookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBook(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a book, and returns the new Book.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Book CreateBook(global::Google.Example.Library.V1.CreateBookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBook, null, options, request);
      }
      /// <summary>
      /// Creates a book, and returns the new Book.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Book> CreateBookAsync(global::Google.Example.Library.V1.CreateBookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBookAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a book, and returns the new Book.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Book> CreateBookAsync(global::Google.Example.Library.V1.CreateBookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBook, null, options, request);
      }
      /// <summary>
      /// Gets a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Book GetBook(global::Google.Example.Library.V1.GetBookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBook(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Book GetBook(global::Google.Example.Library.V1.GetBookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBook, null, options, request);
      }
      /// <summary>
      /// Gets a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Book> GetBookAsync(global::Google.Example.Library.V1.GetBookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBookAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Book> GetBookAsync(global::Google.Example.Library.V1.GetBookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBook, null, options, request);
      }
      /// <summary>
      /// Lists books in a shelf. The order is unspecified but deterministic. Newly
      /// created books will not necessarily be added to the end of this list.
      /// Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.ListBooksResponse ListBooks(global::Google.Example.Library.V1.ListBooksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBooks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists books in a shelf. The order is unspecified but deterministic. Newly
      /// created books will not necessarily be added to the end of this list.
      /// Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.ListBooksResponse ListBooks(global::Google.Example.Library.V1.ListBooksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBooks, null, options, request);
      }
      /// <summary>
      /// Lists books in a shelf. The order is unspecified but deterministic. Newly
      /// created books will not necessarily be added to the end of this list.
      /// Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.ListBooksResponse> ListBooksAsync(global::Google.Example.Library.V1.ListBooksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBooksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists books in a shelf. The order is unspecified but deterministic. Newly
      /// created books will not necessarily be added to the end of this list.
      /// Returns NOT_FOUND if the shelf does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.ListBooksResponse> ListBooksAsync(global::Google.Example.Library.V1.ListBooksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBooks, null, options, request);
      }
      /// <summary>
      /// Deletes a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBook(global::Google.Example.Library.V1.DeleteBookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBook(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBook(global::Google.Example.Library.V1.DeleteBookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBook, null, options, request);
      }
      /// <summary>
      /// Deletes a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBookAsync(global::Google.Example.Library.V1.DeleteBookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBookAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a book. Returns NOT_FOUND if the book does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBookAsync(global::Google.Example.Library.V1.DeleteBookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBook, null, options, request);
      }
      /// <summary>
      /// Updates a book. Returns INVALID_ARGUMENT if the name of the book
      /// is non-empty and does not equal the existing name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Book UpdateBook(global::Google.Example.Library.V1.UpdateBookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBook(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a book. Returns INVALID_ARGUMENT if the name of the book
      /// is non-empty and does not equal the existing name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Book UpdateBook(global::Google.Example.Library.V1.UpdateBookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBook, null, options, request);
      }
      /// <summary>
      /// Updates a book. Returns INVALID_ARGUMENT if the name of the book
      /// is non-empty and does not equal the existing name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Book> UpdateBookAsync(global::Google.Example.Library.V1.UpdateBookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBookAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a book. Returns INVALID_ARGUMENT if the name of the book
      /// is non-empty and does not equal the existing name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Book> UpdateBookAsync(global::Google.Example.Library.V1.UpdateBookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBook, null, options, request);
      }
      /// <summary>
      /// Moves a book to another shelf, and returns the new book. The book
      /// id of the new book may not be the same as the original book.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Book MoveBook(global::Google.Example.Library.V1.MoveBookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveBook(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Moves a book to another shelf, and returns the new book. The book
      /// id of the new book may not be the same as the original book.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Example.Library.V1.Book MoveBook(global::Google.Example.Library.V1.MoveBookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MoveBook, null, options, request);
      }
      /// <summary>
      /// Moves a book to another shelf, and returns the new book. The book
      /// id of the new book may not be the same as the original book.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Book> MoveBookAsync(global::Google.Example.Library.V1.MoveBookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveBookAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Moves a book to another shelf, and returns the new book. The book
      /// id of the new book may not be the same as the original book.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Example.Library.V1.Book> MoveBookAsync(global::Google.Example.Library.V1.MoveBookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MoveBook, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override LibraryServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new LibraryServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(LibraryServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateShelf, serviceImpl.CreateShelf)
          .AddMethod(__Method_GetShelf, serviceImpl.GetShelf)
          .AddMethod(__Method_ListShelves, serviceImpl.ListShelves)
          .AddMethod(__Method_DeleteShelf, serviceImpl.DeleteShelf)
          .AddMethod(__Method_MergeShelves, serviceImpl.MergeShelves)
          .AddMethod(__Method_CreateBook, serviceImpl.CreateBook)
          .AddMethod(__Method_GetBook, serviceImpl.GetBook)
          .AddMethod(__Method_ListBooks, serviceImpl.ListBooks)
          .AddMethod(__Method_DeleteBook, serviceImpl.DeleteBook)
          .AddMethod(__Method_UpdateBook, serviceImpl.UpdateBook)
          .AddMethod(__Method_MoveBook, serviceImpl.MoveBook).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LibraryServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateShelf, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Example.Library.V1.CreateShelfRequest, global::Google.Example.Library.V1.Shelf>(serviceImpl.CreateShelf));
      serviceBinder.AddMethod(__Method_GetShelf, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Example.Library.V1.GetShelfRequest, global::Google.Example.Library.V1.Shelf>(serviceImpl.GetShelf));
      serviceBinder.AddMethod(__Method_ListShelves, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Example.Library.V1.ListShelvesRequest, global::Google.Example.Library.V1.ListShelvesResponse>(serviceImpl.ListShelves));
      serviceBinder.AddMethod(__Method_DeleteShelf, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Example.Library.V1.DeleteShelfRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteShelf));
      serviceBinder.AddMethod(__Method_MergeShelves, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Example.Library.V1.MergeShelvesRequest, global::Google.Example.Library.V1.Shelf>(serviceImpl.MergeShelves));
      serviceBinder.AddMethod(__Method_CreateBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Example.Library.V1.CreateBookRequest, global::Google.Example.Library.V1.Book>(serviceImpl.CreateBook));
      serviceBinder.AddMethod(__Method_GetBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Example.Library.V1.GetBookRequest, global::Google.Example.Library.V1.Book>(serviceImpl.GetBook));
      serviceBinder.AddMethod(__Method_ListBooks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Example.Library.V1.ListBooksRequest, global::Google.Example.Library.V1.ListBooksResponse>(serviceImpl.ListBooks));
      serviceBinder.AddMethod(__Method_DeleteBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Example.Library.V1.DeleteBookRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteBook));
      serviceBinder.AddMethod(__Method_UpdateBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Example.Library.V1.UpdateBookRequest, global::Google.Example.Library.V1.Book>(serviceImpl.UpdateBook));
      serviceBinder.AddMethod(__Method_MoveBook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Example.Library.V1.MoveBookRequest, global::Google.Example.Library.V1.Book>(serviceImpl.MoveBook));
    }

  }
}
#endregion
