// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/admob/v1/admob_resources.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.Admob.V1 {

  /// <summary>Holder for reflection information generated from google/ads/admob/v1/admob_resources.proto</summary>
  public static partial class AdmobResourcesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/admob/v1/admob_resources.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AdmobResourcesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvYWRzL2FkbW9iL3YxL2FkbW9iX3Jlc291cmNlcy5wcm90bxIT",
            "Z29vZ2xlLmFkcy5hZG1vYi52MRofZ29vZ2xlL2FwaS9maWVsZF9iZWhhdmlv",
            "ci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxoWZ29vZ2xlL3R5",
            "cGUvZGF0ZS5wcm90byKsAQoQUHVibGlzaGVyQWNjb3VudBIMCgRuYW1lGAEg",
            "ASgJEhQKDHB1Ymxpc2hlcl9pZBgCIAEoCRIbChNyZXBvcnRpbmdfdGltZV96",
            "b25lGAMgASgJEhUKDWN1cnJlbmN5X2NvZGUYBCABKAk6QOpBPQolYWRtb2Iu",
            "Z29vZ2xlYXBpcy5jb20vUHVibGlzaGVyQWNjb3VudBIUYWNjb3VudHMve3B1",
            "Ymxpc2hlcn0irgkKEU5ldHdvcmtSZXBvcnRTcGVjEjIKCmRhdGVfcmFuZ2UY",
            "ASABKAsyHi5nb29nbGUuYWRzLmFkbW9iLnYxLkRhdGVSYW5nZRJECgpkaW1l",
            "bnNpb25zGAIgAygOMjAuZ29vZ2xlLmFkcy5hZG1vYi52MS5OZXR3b3JrUmVw",
            "b3J0U3BlYy5EaW1lbnNpb24SPgoHbWV0cmljcxgDIAMoDjItLmdvb2dsZS5h",
            "ZHMuYWRtb2IudjEuTmV0d29ya1JlcG9ydFNwZWMuTWV0cmljElEKEWRpbWVu",
            "c2lvbl9maWx0ZXJzGAQgAygLMjYuZ29vZ2xlLmFkcy5hZG1vYi52MS5OZXR3",
            "b3JrUmVwb3J0U3BlYy5EaW1lbnNpb25GaWx0ZXISTQoPc29ydF9jb25kaXRp",
            "b25zGAUgAygLMjQuZ29vZ2xlLmFkcy5hZG1vYi52MS5OZXR3b3JrUmVwb3J0",
            "U3BlYy5Tb3J0Q29uZGl0aW9uEkgKFWxvY2FsaXphdGlvbl9zZXR0aW5ncxgG",
            "IAEoCzIpLmdvb2dsZS5hZHMuYWRtb2IudjEuTG9jYWxpemF0aW9uU2V0dGlu",
            "Z3MSFwoPbWF4X3JlcG9ydF9yb3dzGAcgASgFEhEKCXRpbWVfem9uZRgIIAEo",
            "CRqaAQoPRGltZW5zaW9uRmlsdGVyEjYKC21hdGNoZXNfYW55GAIgASgLMh8u",
            "Z29vZ2xlLmFkcy5hZG1vYi52MS5TdHJpbmdMaXN0SAASQwoJZGltZW5zaW9u",
            "GAEgASgOMjAuZ29vZ2xlLmFkcy5hZG1vYi52MS5OZXR3b3JrUmVwb3J0U3Bl",
            "Yy5EaW1lbnNpb25CCgoIb3BlcmF0b3Ia0QEKDVNvcnRDb25kaXRpb24SRQoJ",
            "ZGltZW5zaW9uGAEgASgOMjAuZ29vZ2xlLmFkcy5hZG1vYi52MS5OZXR3b3Jr",
            "UmVwb3J0U3BlYy5EaW1lbnNpb25IABI/CgZtZXRyaWMYAiABKA4yLS5nb29n",
            "bGUuYWRzLmFkbW9iLnYxLk5ldHdvcmtSZXBvcnRTcGVjLk1ldHJpY0gAEi0K",
            "BW9yZGVyGAMgASgOMh4uZ29vZ2xlLmFkcy5hZG1vYi52MS5Tb3J0T3JkZXJC",
            "CQoHc29ydF9vbiKPAQoJRGltZW5zaW9uEhkKFURJTUVOU0lPTl9VTlNQRUNJ",
            "RklFRBAAEggKBERBVEUQARIJCgVNT05USBACEggKBFdFRUsQAxILCgdBRF9V",
            "TklUEAQSBwoDQVBQEAUSCwoHQURfVFlQRRAGEgsKB0NPVU5UUlkQBxIKCgZG",
            "T1JNQVQQCBIMCghQTEFURk9STRAJIsMBCgZNZXRyaWMSFgoSTUVUUklDX1VO",
            "U1BFQ0lGSUVEEAASDwoLQURfUkVRVUVTVFMQARIKCgZDTElDS1MQAhIWChJF",
            "U1RJTUFURURfRUFSTklOR1MQAxIPCgtJTVBSRVNTSU9OUxAEEhIKDklNUFJF",
            "U1NJT05fQ1RSEAUSEgoOSU1QUkVTU0lPTl9SUE0QBhIUChBNQVRDSEVEX1JF",
            "UVVFU1RTEAcSDgoKTUFUQ0hfUkFURRAIEg0KCVNIT1dfUkFURRAJIt0JChNN",
            "ZWRpYXRpb25SZXBvcnRTcGVjEjIKCmRhdGVfcmFuZ2UYASABKAsyHi5nb29n",
            "bGUuYWRzLmFkbW9iLnYxLkRhdGVSYW5nZRJGCgpkaW1lbnNpb25zGAIgAygO",
            "MjIuZ29vZ2xlLmFkcy5hZG1vYi52MS5NZWRpYXRpb25SZXBvcnRTcGVjLkRp",
            "bWVuc2lvbhJACgdtZXRyaWNzGAMgAygOMi8uZ29vZ2xlLmFkcy5hZG1vYi52",
            "MS5NZWRpYXRpb25SZXBvcnRTcGVjLk1ldHJpYxJTChFkaW1lbnNpb25fZmls",
            "dGVycxgEIAMoCzI4Lmdvb2dsZS5hZHMuYWRtb2IudjEuTWVkaWF0aW9uUmVw",
            "b3J0U3BlYy5EaW1lbnNpb25GaWx0ZXISTwoPc29ydF9jb25kaXRpb25zGAUg",
            "AygLMjYuZ29vZ2xlLmFkcy5hZG1vYi52MS5NZWRpYXRpb25SZXBvcnRTcGVj",
            "LlNvcnRDb25kaXRpb24SSAoVbG9jYWxpemF0aW9uX3NldHRpbmdzGAYgASgL",
            "MikuZ29vZ2xlLmFkcy5hZG1vYi52MS5Mb2NhbGl6YXRpb25TZXR0aW5ncxIX",
            "Cg9tYXhfcmVwb3J0X3Jvd3MYByABKAUSEQoJdGltZV96b25lGAggASgJGpwB",
            "Cg9EaW1lbnNpb25GaWx0ZXISNgoLbWF0Y2hlc19hbnkYAiABKAsyHy5nb29n",
            "bGUuYWRzLmFkbW9iLnYxLlN0cmluZ0xpc3RIABJFCglkaW1lbnNpb24YASAB",
            "KA4yMi5nb29nbGUuYWRzLmFkbW9iLnYxLk1lZGlhdGlvblJlcG9ydFNwZWMu",
            "RGltZW5zaW9uQgoKCG9wZXJhdG9yGtUBCg1Tb3J0Q29uZGl0aW9uEkcKCWRp",
            "bWVuc2lvbhgBIAEoDjIyLmdvb2dsZS5hZHMuYWRtb2IudjEuTWVkaWF0aW9u",
            "UmVwb3J0U3BlYy5EaW1lbnNpb25IABJBCgZtZXRyaWMYAiABKA4yLy5nb29n",
            "bGUuYWRzLmFkbW9iLnYxLk1lZGlhdGlvblJlcG9ydFNwZWMuTWV0cmljSAAS",
            "LQoFb3JkZXIYAyABKA4yHi5nb29nbGUuYWRzLmFkbW9iLnYxLlNvcnRPcmRl",
            "ckIJCgdzb3J0X29uIr4BCglEaW1lbnNpb24SGQoVRElNRU5TSU9OX1VOU1BF",
            "Q0lGSUVEEAASCAoEREFURRABEgkKBU1PTlRIEAISCAoEV0VFSxADEg0KCUFE",
            "X1NPVVJDRRAEEhYKEkFEX1NPVVJDRV9JTlNUQU5DRRAFEgsKB0FEX1VOSVQQ",
            "BhIHCgNBUFAQBxITCg9NRURJQVRJT05fR1JPVVAQCxILCgdDT1VOVFJZEAgS",
            "CgoGRk9STUFUEAkSDAoIUExBVEZPUk0QCiKzAQoGTWV0cmljEhYKEk1FVFJJ",
            "Q19VTlNQRUNJRklFRBAAEg8KC0FEX1JFUVVFU1RTEAESCgoGQ0xJQ0tTEAIS",
            "FgoSRVNUSU1BVEVEX0VBUk5JTkdTEAMSDwoLSU1QUkVTU0lPTlMQBBISCg5J",
            "TVBSRVNTSU9OX0NUUhAFEhQKEE1BVENIRURfUkVRVUVTVFMQBhIOCgpNQVRD",
            "SF9SQVRFEAcSEQoNT0JTRVJWRURfRUNQTRAIIoQECglSZXBvcnRSb3cSTQoQ",
            "ZGltZW5zaW9uX3ZhbHVlcxgBIAMoCzIzLmdvb2dsZS5hZHMuYWRtb2IudjEu",
            "UmVwb3J0Um93LkRpbWVuc2lvblZhbHVlc0VudHJ5EkcKDW1ldHJpY192YWx1",
            "ZXMYAiADKAsyMC5nb29nbGUuYWRzLmFkbW9iLnYxLlJlcG9ydFJvdy5NZXRy",
            "aWNWYWx1ZXNFbnRyeRo2Cg5EaW1lbnNpb25WYWx1ZRINCgV2YWx1ZRgBIAEo",
            "CRIVCg1kaXNwbGF5X2xhYmVsGAIgASgJGl8KC01ldHJpY1ZhbHVlEhcKDWlu",
            "dGVnZXJfdmFsdWUYASABKANIABIWCgxkb3VibGVfdmFsdWUYAiABKAFIABIW",
            "CgxtaWNyb3NfdmFsdWUYAyABKANIAEIHCgV2YWx1ZRplChREaW1lbnNpb25W",
            "YWx1ZXNFbnRyeRILCgNrZXkYASABKAkSPAoFdmFsdWUYAiABKAsyLS5nb29n",
            "bGUuYWRzLmFkbW9iLnYxLlJlcG9ydFJvdy5EaW1lbnNpb25WYWx1ZToCOAEa",
            "XwoRTWV0cmljVmFsdWVzRW50cnkSCwoDa2V5GAEgASgJEjkKBXZhbHVlGAIg",
            "ASgLMiouZ29vZ2xlLmFkcy5hZG1vYi52MS5SZXBvcnRSb3cuTWV0cmljVmFs",
            "dWU6AjgBIuoBCg1SZXBvcnRXYXJuaW5nEjUKBHR5cGUYASABKA4yJy5nb29n",
            "bGUuYWRzLmFkbW9iLnYxLlJlcG9ydFdhcm5pbmcuVHlwZRITCgtkZXNjcmlw",
            "dGlvbhgCIAEoCSKMAQoEVHlwZRIUChBUWVBFX1VOU1BFQ0lGSUVEEAASJwoj",
            "REFUQV9CRUZPUkVfQUNDT1VOVF9USU1FWk9ORV9DSEFOR0UQARIQCgxEQVRB",
            "X0RFTEFZRUQQAhIJCgVPVEhFUhADEigKJFJFUE9SVF9DVVJSRU5DWV9OT1Rf",
            "QUNDT1VOVF9DVVJSRU5DWRAEIqkBCgxSZXBvcnRIZWFkZXISMgoKZGF0ZV9y",
            "YW5nZRgBIAEoCzIeLmdvb2dsZS5hZHMuYWRtb2IudjEuRGF0ZVJhbmdlEkgK",
            "FWxvY2FsaXphdGlvbl9zZXR0aW5ncxgCIAEoCzIpLmdvb2dsZS5hZHMuYWRt",
            "b2IudjEuTG9jYWxpemF0aW9uU2V0dGluZ3MSGwoTcmVwb3J0aW5nX3RpbWVf",
            "em9uZRgDIAEoCSJgCgxSZXBvcnRGb290ZXISNAoId2FybmluZ3MYASADKAsy",
            "Ii5nb29nbGUuYWRzLmFkbW9iLnYxLlJlcG9ydFdhcm5pbmcSGgoSbWF0Y2hp",
            "bmdfcm93X2NvdW50GAIgASgDIlcKCURhdGVSYW5nZRIlCgpzdGFydF9kYXRl",
            "GAEgASgLMhEuZ29vZ2xlLnR5cGUuRGF0ZRIjCghlbmRfZGF0ZRgCIAEoCzIR",
            "Lmdvb2dsZS50eXBlLkRhdGUiRAoUTG9jYWxpemF0aW9uU2V0dGluZ3MSFQoN",
            "Y3VycmVuY3lfY29kZRgBIAEoCRIVCg1sYW5ndWFnZV9jb2RlGAIgASgJIhwK",
            "ClN0cmluZ0xpc3QSDgoGdmFsdWVzGAEgAygJKkYKCVNvcnRPcmRlchIaChZT",
            "T1JUX09SREVSX1VOU1BFQ0lGSUVEEAASDQoJQVNDRU5ESU5HEAESDgoKREVT",
            "Q0VORElORxACQmgKF2NvbS5nb29nbGUuYWRzLmFkbW9iLnYxQhNBZE1vYlJl",
            "c291cmNlc1Byb3RvWjhnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29n",
            "bGVhcGlzL2Fkcy9hZG1vYi92MTthZG1vYmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Type.DateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Ads.Admob.V1.SortOrder), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.PublisherAccount), global::Google.Ads.Admob.V1.PublisherAccount.Parser, new[]{ "Name", "PublisherId", "ReportingTimeZone", "CurrencyCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.NetworkReportSpec), global::Google.Ads.Admob.V1.NetworkReportSpec.Parser, new[]{ "DateRange", "Dimensions", "Metrics", "DimensionFilters", "SortConditions", "LocalizationSettings", "MaxReportRows", "TimeZone" }, null, new[]{ typeof(global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension), typeof(global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Metric) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.NetworkReportSpec.Types.DimensionFilter), global::Google.Ads.Admob.V1.NetworkReportSpec.Types.DimensionFilter.Parser, new[]{ "MatchesAny", "Dimension" }, new[]{ "Operator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.NetworkReportSpec.Types.SortCondition), global::Google.Ads.Admob.V1.NetworkReportSpec.Types.SortCondition.Parser, new[]{ "Dimension", "Metric", "Order" }, new[]{ "SortOn" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.MediationReportSpec), global::Google.Ads.Admob.V1.MediationReportSpec.Parser, new[]{ "DateRange", "Dimensions", "Metrics", "DimensionFilters", "SortConditions", "LocalizationSettings", "MaxReportRows", "TimeZone" }, null, new[]{ typeof(global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension), typeof(global::Google.Ads.Admob.V1.MediationReportSpec.Types.Metric) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.MediationReportSpec.Types.DimensionFilter), global::Google.Ads.Admob.V1.MediationReportSpec.Types.DimensionFilter.Parser, new[]{ "MatchesAny", "Dimension" }, new[]{ "Operator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.MediationReportSpec.Types.SortCondition), global::Google.Ads.Admob.V1.MediationReportSpec.Types.SortCondition.Parser, new[]{ "Dimension", "Metric", "Order" }, new[]{ "SortOn" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.ReportRow), global::Google.Ads.Admob.V1.ReportRow.Parser, new[]{ "DimensionValues", "MetricValues" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.ReportRow.Types.DimensionValue), global::Google.Ads.Admob.V1.ReportRow.Types.DimensionValue.Parser, new[]{ "Value", "DisplayLabel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.ReportRow.Types.MetricValue), global::Google.Ads.Admob.V1.ReportRow.Types.MetricValue.Parser, new[]{ "IntegerValue", "DoubleValue", "MicrosValue" }, new[]{ "Value" }, null, null, null),
            null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.ReportWarning), global::Google.Ads.Admob.V1.ReportWarning.Parser, new[]{ "Type", "Description" }, null, new[]{ typeof(global::Google.Ads.Admob.V1.ReportWarning.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.ReportHeader), global::Google.Ads.Admob.V1.ReportHeader.Parser, new[]{ "DateRange", "LocalizationSettings", "ReportingTimeZone" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.ReportFooter), global::Google.Ads.Admob.V1.ReportFooter.Parser, new[]{ "Warnings", "MatchingRowCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.DateRange), global::Google.Ads.Admob.V1.DateRange.Parser, new[]{ "StartDate", "EndDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.LocalizationSettings), global::Google.Ads.Admob.V1.LocalizationSettings.Parser, new[]{ "CurrencyCode", "LanguageCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.Admob.V1.StringList), global::Google.Ads.Admob.V1.StringList.Parser, new[]{ "Values" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The sorting order.
  /// </summary>
  public enum SortOrder {
    /// <summary>
    /// Default value for an unset field. Do not use.
    /// </summary>
    [pbr::OriginalName("SORT_ORDER_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Sort dimension value or metric value in ascending order.
    /// </summary>
    [pbr::OriginalName("ASCENDING")] Ascending = 1,
    /// <summary>
    /// Sort dimension value or metric value in descending order.
    /// </summary>
    [pbr::OriginalName("DESCENDING")] Descending = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// A publisher account contains information relevant to the use of this API,
  /// such as the time zone used for the reports.
  /// </summary>
  public sealed partial class PublisherAccount : pb::IMessage<PublisherAccount>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublisherAccount> _parser = new pb::MessageParser<PublisherAccount>(() => new PublisherAccount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublisherAccount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.Admob.V1.AdmobResourcesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublisherAccount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublisherAccount(PublisherAccount other) : this() {
      name_ = other.name_;
      publisherId_ = other.publisherId_;
      reportingTimeZone_ = other.reportingTimeZone_;
      currencyCode_ = other.currencyCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublisherAccount Clone() {
      return new PublisherAccount(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Resource name of this account.
    /// Format is accounts/{publisher_id}.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "publisher_id" field.</summary>
    public const int PublisherIdFieldNumber = 2;
    private string publisherId_ = "";
    /// <summary>
    /// The unique ID by which this publisher account can be identified
    /// in the API requests (for example, pub-1234567890).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublisherId {
      get { return publisherId_; }
      set {
        publisherId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reporting_time_zone" field.</summary>
    public const int ReportingTimeZoneFieldNumber = 3;
    private string reportingTimeZone_ = "";
    /// <summary>
    /// The time zone that is used in reports that are generated for this account.
    /// The value is a time-zone ID as specified by the CLDR project,
    /// for example, "America/Los_Angeles".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReportingTimeZone {
      get { return reportingTimeZone_; }
      set {
        reportingTimeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 4;
    private string currencyCode_ = "";
    /// <summary>
    /// Currency code of the earning-related metrics, which is the 3-letter code
    /// defined in ISO 4217. The daily average rate is used for the currency
    /// conversion.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublisherAccount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublisherAccount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (PublisherId != other.PublisherId) return false;
      if (ReportingTimeZone != other.ReportingTimeZone) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PublisherId.Length != 0) hash ^= PublisherId.GetHashCode();
      if (ReportingTimeZone.Length != 0) hash ^= ReportingTimeZone.GetHashCode();
      if (CurrencyCode.Length != 0) hash ^= CurrencyCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (PublisherId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PublisherId);
      }
      if (ReportingTimeZone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReportingTimeZone);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CurrencyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (PublisherId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PublisherId);
      }
      if (ReportingTimeZone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReportingTimeZone);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CurrencyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PublisherId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublisherId);
      }
      if (ReportingTimeZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReportingTimeZone);
      }
      if (CurrencyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublisherAccount other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PublisherId.Length != 0) {
        PublisherId = other.PublisherId;
      }
      if (other.ReportingTimeZone.Length != 0) {
        ReportingTimeZone = other.ReportingTimeZone;
      }
      if (other.CurrencyCode.Length != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            PublisherId = input.ReadString();
            break;
          }
          case 26: {
            ReportingTimeZone = input.ReadString();
            break;
          }
          case 34: {
            CurrencyCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            PublisherId = input.ReadString();
            break;
          }
          case 26: {
            ReportingTimeZone = input.ReadString();
            break;
          }
          case 34: {
            CurrencyCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The specification for generating an AdMob Network report.
  /// For example, the specification to get clicks and estimated earnings for only
  /// the 'US' and 'CN' countries can look like the following example:
  ///
  ///     {
  ///       'date_range': {
  ///         'start_date': {'year': 2018, 'month': 9, 'day': 1},
  ///         'end_date': {'year': 2018, 'month': 9, 'day': 30}
  ///       },
  ///       'dimensions': ['DATE', 'APP', 'COUNTRY'],
  ///       'metrics': ['CLICKS', 'ESTIMATED_EARNINGS'],
  ///       'dimension_filters': [
  ///         {
  ///           'dimension': 'COUNTRY',
  ///           'matches_any': {'values': [{'value': 'US', 'value': 'CN'}]}
  ///         }
  ///       ],
  ///       'sort_conditions': [
  ///         {'dimension':'APP', order: 'ASCENDING'},
  ///         {'metric':'CLICKS', order: 'DESCENDING'}
  ///       ],
  ///       'localization_settings': {
  ///         'currency_code': 'USD',
  ///         'language_code': 'en-US'
  ///       }
  ///     }
  ///
  /// For a better understanding, you can treat the preceding specification like
  /// the following pseudo SQL:
  ///
  ///     SELECT DATE, APP, COUNTRY, CLICKS, ESTIMATED_EARNINGS
  ///     FROM NETWORK_REPORT
  ///     WHERE DATE >= '2018-09-01' AND DATE &lt;= '2018-09-30'
  ///         AND COUNTRY IN ('US', 'CN')
  ///     GROUP BY DATE, APP, COUNTRY
  ///     ORDER BY APP ASC, CLICKS DESC;
  /// </summary>
  public sealed partial class NetworkReportSpec : pb::IMessage<NetworkReportSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NetworkReportSpec> _parser = new pb::MessageParser<NetworkReportSpec>(() => new NetworkReportSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkReportSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.Admob.V1.AdmobResourcesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkReportSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkReportSpec(NetworkReportSpec other) : this() {
      dateRange_ = other.dateRange_ != null ? other.dateRange_.Clone() : null;
      dimensions_ = other.dimensions_.Clone();
      metrics_ = other.metrics_.Clone();
      dimensionFilters_ = other.dimensionFilters_.Clone();
      sortConditions_ = other.sortConditions_.Clone();
      localizationSettings_ = other.localizationSettings_ != null ? other.localizationSettings_.Clone() : null;
      maxReportRows_ = other.maxReportRows_;
      timeZone_ = other.timeZone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkReportSpec Clone() {
      return new NetworkReportSpec(this);
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 1;
    private global::Google.Ads.Admob.V1.DateRange dateRange_;
    /// <summary>
    /// The date range for which the report is generated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.Admob.V1.DateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "dimensions" field.</summary>
    public const int DimensionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension> _repeated_dimensions_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension) x);
    private readonly pbc::RepeatedField<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension> dimensions_ = new pbc::RepeatedField<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension>();
    /// <summary>
    /// List of dimensions of the report. The value combination of these dimensions
    /// determines the row of the report. If no dimensions are specified, the
    /// report returns a single row of requested metrics for the entire account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension> Dimensions {
      get { return dimensions_; }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Metric> _repeated_metrics_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Metric) x);
    private readonly pbc::RepeatedField<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Metric> metrics_ = new pbc::RepeatedField<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Metric>();
    /// <summary>
    /// List of metrics of the report. A report must specify at least one metric.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Metric> Metrics {
      get { return metrics_; }
    }

    /// <summary>Field number for the "dimension_filters" field.</summary>
    public const int DimensionFiltersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.DimensionFilter> _repeated_dimensionFilters_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Ads.Admob.V1.NetworkReportSpec.Types.DimensionFilter.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.DimensionFilter> dimensionFilters_ = new pbc::RepeatedField<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.DimensionFilter>();
    /// <summary>
    /// Describes which report rows to match based on their dimension values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.DimensionFilter> DimensionFilters {
      get { return dimensionFilters_; }
    }

    /// <summary>Field number for the "sort_conditions" field.</summary>
    public const int SortConditionsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.SortCondition> _repeated_sortConditions_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Ads.Admob.V1.NetworkReportSpec.Types.SortCondition.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.SortCondition> sortConditions_ = new pbc::RepeatedField<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.SortCondition>();
    /// <summary>
    /// Describes the sorting of report rows. The order of the condition in the
    /// list defines its precedence; the earlier the condition, the higher its
    /// precedence. If no sort conditions are specified, the row ordering is
    /// undefined.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.Admob.V1.NetworkReportSpec.Types.SortCondition> SortConditions {
      get { return sortConditions_; }
    }

    /// <summary>Field number for the "localization_settings" field.</summary>
    public const int LocalizationSettingsFieldNumber = 6;
    private global::Google.Ads.Admob.V1.LocalizationSettings localizationSettings_;
    /// <summary>
    /// Localization settings of the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.Admob.V1.LocalizationSettings LocalizationSettings {
      get { return localizationSettings_; }
      set {
        localizationSettings_ = value;
      }
    }

    /// <summary>Field number for the "max_report_rows" field.</summary>
    public const int MaxReportRowsFieldNumber = 7;
    private int maxReportRows_;
    /// <summary>
    /// Maximum number of report data rows to return. If the value is not set, the
    /// API returns as many rows as possible, up to 100000. Acceptable values are
    /// 1-100000, inclusive. Any other values are treated as 100000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxReportRows {
      get { return maxReportRows_; }
      set {
        maxReportRows_ = value;
      }
    }

    /// <summary>Field number for the "time_zone" field.</summary>
    public const int TimeZoneFieldNumber = 8;
    private string timeZone_ = "";
    /// <summary>
    /// A report time zone. Accepts an IANA TZ name values, such as
    /// "America/Los_Angeles."  If no time zone is defined, the account default
    /// takes effect. Check default value by the get account action.
    ///
    /// **Warning:** The "America/Los_Angeles" is the only supported value at
    /// the moment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkReportSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkReportSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if(!dimensions_.Equals(other.dimensions_)) return false;
      if(!metrics_.Equals(other.metrics_)) return false;
      if(!dimensionFilters_.Equals(other.dimensionFilters_)) return false;
      if(!sortConditions_.Equals(other.sortConditions_)) return false;
      if (!object.Equals(LocalizationSettings, other.LocalizationSettings)) return false;
      if (MaxReportRows != other.MaxReportRows) return false;
      if (TimeZone != other.TimeZone) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      hash ^= dimensions_.GetHashCode();
      hash ^= metrics_.GetHashCode();
      hash ^= dimensionFilters_.GetHashCode();
      hash ^= sortConditions_.GetHashCode();
      if (localizationSettings_ != null) hash ^= LocalizationSettings.GetHashCode();
      if (MaxReportRows != 0) hash ^= MaxReportRows.GetHashCode();
      if (TimeZone.Length != 0) hash ^= TimeZone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dateRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateRange);
      }
      dimensions_.WriteTo(output, _repeated_dimensions_codec);
      metrics_.WriteTo(output, _repeated_metrics_codec);
      dimensionFilters_.WriteTo(output, _repeated_dimensionFilters_codec);
      sortConditions_.WriteTo(output, _repeated_sortConditions_codec);
      if (localizationSettings_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LocalizationSettings);
      }
      if (MaxReportRows != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxReportRows);
      }
      if (TimeZone.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TimeZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dateRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateRange);
      }
      dimensions_.WriteTo(ref output, _repeated_dimensions_codec);
      metrics_.WriteTo(ref output, _repeated_metrics_codec);
      dimensionFilters_.WriteTo(ref output, _repeated_dimensionFilters_codec);
      sortConditions_.WriteTo(ref output, _repeated_sortConditions_codec);
      if (localizationSettings_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LocalizationSettings);
      }
      if (MaxReportRows != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxReportRows);
      }
      if (TimeZone.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TimeZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      size += dimensions_.CalculateSize(_repeated_dimensions_codec);
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      size += dimensionFilters_.CalculateSize(_repeated_dimensionFilters_codec);
      size += sortConditions_.CalculateSize(_repeated_sortConditions_codec);
      if (localizationSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizationSettings);
      }
      if (MaxReportRows != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxReportRows);
      }
      if (TimeZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeZone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkReportSpec other) {
      if (other == null) {
        return;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          DateRange = new global::Google.Ads.Admob.V1.DateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      dimensions_.Add(other.dimensions_);
      metrics_.Add(other.metrics_);
      dimensionFilters_.Add(other.dimensionFilters_);
      sortConditions_.Add(other.sortConditions_);
      if (other.localizationSettings_ != null) {
        if (localizationSettings_ == null) {
          LocalizationSettings = new global::Google.Ads.Admob.V1.LocalizationSettings();
        }
        LocalizationSettings.MergeFrom(other.LocalizationSettings);
      }
      if (other.MaxReportRows != 0) {
        MaxReportRows = other.MaxReportRows;
      }
      if (other.TimeZone.Length != 0) {
        TimeZone = other.TimeZone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dateRange_ == null) {
              DateRange = new global::Google.Ads.Admob.V1.DateRange();
            }
            input.ReadMessage(DateRange);
            break;
          }
          case 18:
          case 16: {
            dimensions_.AddEntriesFrom(input, _repeated_dimensions_codec);
            break;
          }
          case 26:
          case 24: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
          case 34: {
            dimensionFilters_.AddEntriesFrom(input, _repeated_dimensionFilters_codec);
            break;
          }
          case 42: {
            sortConditions_.AddEntriesFrom(input, _repeated_sortConditions_codec);
            break;
          }
          case 50: {
            if (localizationSettings_ == null) {
              LocalizationSettings = new global::Google.Ads.Admob.V1.LocalizationSettings();
            }
            input.ReadMessage(LocalizationSettings);
            break;
          }
          case 56: {
            MaxReportRows = input.ReadInt32();
            break;
          }
          case 66: {
            TimeZone = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dateRange_ == null) {
              DateRange = new global::Google.Ads.Admob.V1.DateRange();
            }
            input.ReadMessage(DateRange);
            break;
          }
          case 18:
          case 16: {
            dimensions_.AddEntriesFrom(ref input, _repeated_dimensions_codec);
            break;
          }
          case 26:
          case 24: {
            metrics_.AddEntriesFrom(ref input, _repeated_metrics_codec);
            break;
          }
          case 34: {
            dimensionFilters_.AddEntriesFrom(ref input, _repeated_dimensionFilters_codec);
            break;
          }
          case 42: {
            sortConditions_.AddEntriesFrom(ref input, _repeated_sortConditions_codec);
            break;
          }
          case 50: {
            if (localizationSettings_ == null) {
              LocalizationSettings = new global::Google.Ads.Admob.V1.LocalizationSettings();
            }
            input.ReadMessage(LocalizationSettings);
            break;
          }
          case 56: {
            MaxReportRows = input.ReadInt32();
            break;
          }
          case 66: {
            TimeZone = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the NetworkReportSpec message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The dimensions of the network report. Dimensions are data attributes to
      /// break down or refine the quantitative measurements (metrics) by certain
      /// attributes, such as the ad format or the platform an ad was viewed on.
      /// </summary>
      public enum Dimension {
        /// <summary>
        /// Default value for an unset field. Do not use.
        /// </summary>
        [pbr::OriginalName("DIMENSION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A date in the YYYY-MM-DD format (for example, "2018-12-21"). Requests can
        /// specify at most one time dimension.
        /// </summary>
        [pbr::OriginalName("DATE")] Date = 1,
        /// <summary>
        /// A month in the YYYY-MM format (for example, "2018-12"). Requests can
        /// specify at most one time dimension.
        /// </summary>
        [pbr::OriginalName("MONTH")] Month = 2,
        /// <summary>
        /// The date of the first day of a week in the YYYY-MM-DD format
        /// (for example, "2018-12-21"). Requests can specify at most one time
        /// dimension.
        /// </summary>
        [pbr::OriginalName("WEEK")] Week = 3,
        /// <summary>
        /// The unique ID of the ad unit (for example, "ca-app-pub-1234/1234").
        /// If AD_UNIT dimension is specified, then APP is included automatically.
        /// </summary>
        [pbr::OriginalName("AD_UNIT")] AdUnit = 4,
        /// <summary>
        /// The unique ID of the mobile application (for example,
        /// "ca-app-pub-1234~1234").
        /// </summary>
        [pbr::OriginalName("APP")] App = 5,
        /// <summary>
        /// Type of the ad (for example, "text" or "image"), an ad delivery
        /// dimension.
        ///
        /// **Warning:** The dimension is incompatible with
        /// [AD_REQUESTS](#Metric.ENUM_VALUES.AD_REQUESTS),
        /// [MATCH_RATE](#Metric.ENUM_VALUES.MATCH_RATE) and
        /// [IMPRESSION_RPM](#Metric.ENUM_VALUES.IMPRESSION_RPM) metrics.
        /// </summary>
        [pbr::OriginalName("AD_TYPE")] AdType = 6,
        /// <summary>
        /// CLDR country code of the place where the ad views/clicks occur (for
        /// example, "US" or "FR"). This is a geography dimension.
        /// </summary>
        [pbr::OriginalName("COUNTRY")] Country = 7,
        /// <summary>
        /// Format of the ad unit (for example, "banner", "native"), an ad delivery
        /// dimension.
        /// </summary>
        [pbr::OriginalName("FORMAT")] Format = 8,
        /// <summary>
        /// Mobile OS platform of the app (for example, "Android" or "iOS").
        /// </summary>
        [pbr::OriginalName("PLATFORM")] Platform = 9,
      }

      /// <summary>
      /// The metrics of the network report. Metrics are quantitative measurements
      /// indicating how the publisher business is performing. They are aggregated
      /// from the individual ad events and grouped by the report dimensions. The
      /// metric value is either integer, or decimal (without rounding).
      /// </summary>
      public enum Metric {
        /// <summary>
        /// Default value for an unset field. Do not use.
        /// </summary>
        [pbr::OriginalName("METRIC_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The number of ad requests. The value is an integer.
        ///
        /// **Warning:** The metric is incompatible with
        /// [AD_TYPE](#Dimension.ENUM_VALUES.AD_TYPE) dimension.
        /// </summary>
        [pbr::OriginalName("AD_REQUESTS")] AdRequests = 1,
        /// <summary>
        /// The number of times a user clicks an ad. The value is an integer.
        /// </summary>
        [pbr::OriginalName("CLICKS")] Clicks = 2,
        /// <summary>
        /// The estimated earnings of the AdMob publisher. The currency unit (USD,
        /// EUR, or other) of the earning metrics are determined by the localization
        /// setting for currency. The amount is in micros. For example, $6.50 would
        /// be represented as 6500000.
        /// </summary>
        [pbr::OriginalName("ESTIMATED_EARNINGS")] EstimatedEarnings = 3,
        /// <summary>
        /// The total number of ads shown to users. The value is an integer.
        /// </summary>
        [pbr::OriginalName("IMPRESSIONS")] Impressions = 4,
        /// <summary>
        /// The ratio of clicks over impressions. The value is a double precision
        /// (approximate) decimal value.
        /// </summary>
        [pbr::OriginalName("IMPRESSION_CTR")] ImpressionCtr = 5,
        /// <summary>
        /// The estimated earnings per thousand ad impressions. The value is in
        /// micros. For example, $1.03 would be represented as 1030000.
        ///
        /// **Warning:** The metric is incompatible with
        /// [AD_TYPE](#Dimension.ENUM_VALUES.AD_TYPE) dimension.
        /// </summary>
        [pbr::OriginalName("IMPRESSION_RPM")] ImpressionRpm = 6,
        /// <summary>
        /// The number of times ads are returned in response to a request. The value
        /// is an integer.
        /// </summary>
        [pbr::OriginalName("MATCHED_REQUESTS")] MatchedRequests = 7,
        /// <summary>
        /// The ratio of matched ad requests over the total ad requests. The value is
        /// a double precision (approximate) decimal value.
        ///
        /// **Warning:** The metric is incompatible with
        /// [AD_TYPE](#Dimension.ENUM_VALUES.AD_TYPE) dimension.
        /// </summary>
        [pbr::OriginalName("MATCH_RATE")] MatchRate = 8,
        /// <summary>
        /// The ratio of ads that are displayed over ads that are returned, defined
        /// as impressions / matched requests. The value is a double precision
        /// (approximate) decimal value.
        /// </summary>
        [pbr::OriginalName("SHOW_RATE")] ShowRate = 9,
      }

      /// <summary>
      /// Describes which report rows to match based on their dimension values.
      /// </summary>
      public sealed partial class DimensionFilter : pb::IMessage<DimensionFilter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DimensionFilter> _parser = new pb::MessageParser<DimensionFilter>(() => new DimensionFilter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DimensionFilter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.Admob.V1.NetworkReportSpec.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DimensionFilter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DimensionFilter(DimensionFilter other) : this() {
          dimension_ = other.dimension_;
          switch (other.OperatorCase) {
            case OperatorOneofCase.MatchesAny:
              MatchesAny = other.MatchesAny.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DimensionFilter Clone() {
          return new DimensionFilter(this);
        }

        /// <summary>Field number for the "matches_any" field.</summary>
        public const int MatchesAnyFieldNumber = 2;
        /// <summary>
        /// Matches a row if its value for the specified dimension is in one of the
        /// values specified in this condition.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.Admob.V1.StringList MatchesAny {
          get { return operatorCase_ == OperatorOneofCase.MatchesAny ? (global::Google.Ads.Admob.V1.StringList) operator_ : null; }
          set {
            operator_ = value;
            operatorCase_ = value == null ? OperatorOneofCase.None : OperatorOneofCase.MatchesAny;
          }
        }

        /// <summary>Field number for the "dimension" field.</summary>
        public const int DimensionFieldNumber = 1;
        private global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension dimension_ = global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension.Unspecified;
        /// <summary>
        /// Applies the filter criterion to the specified dimension.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension Dimension {
          get { return dimension_; }
          set {
            dimension_ = value;
          }
        }

        private object operator_;
        /// <summary>Enum of possible cases for the "operator" oneof.</summary>
        public enum OperatorOneofCase {
          None = 0,
          MatchesAny = 2,
        }
        private OperatorOneofCase operatorCase_ = OperatorOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OperatorOneofCase OperatorCase {
          get { return operatorCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearOperator() {
          operatorCase_ = OperatorOneofCase.None;
          operator_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DimensionFilter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DimensionFilter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(MatchesAny, other.MatchesAny)) return false;
          if (Dimension != other.Dimension) return false;
          if (OperatorCase != other.OperatorCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (operatorCase_ == OperatorOneofCase.MatchesAny) hash ^= MatchesAny.GetHashCode();
          if (Dimension != global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension.Unspecified) hash ^= Dimension.GetHashCode();
          hash ^= (int) operatorCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Dimension != global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (operatorCase_ == OperatorOneofCase.MatchesAny) {
            output.WriteRawTag(18);
            output.WriteMessage(MatchesAny);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Dimension != global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (operatorCase_ == OperatorOneofCase.MatchesAny) {
            output.WriteRawTag(18);
            output.WriteMessage(MatchesAny);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (operatorCase_ == OperatorOneofCase.MatchesAny) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchesAny);
          }
          if (Dimension != global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dimension);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DimensionFilter other) {
          if (other == null) {
            return;
          }
          if (other.Dimension != global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension.Unspecified) {
            Dimension = other.Dimension;
          }
          switch (other.OperatorCase) {
            case OperatorOneofCase.MatchesAny:
              if (MatchesAny == null) {
                MatchesAny = new global::Google.Ads.Admob.V1.StringList();
              }
              MatchesAny.MergeFrom(other.MatchesAny);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Dimension = (global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension) input.ReadEnum();
                break;
              }
              case 18: {
                global::Google.Ads.Admob.V1.StringList subBuilder = new global::Google.Ads.Admob.V1.StringList();
                if (operatorCase_ == OperatorOneofCase.MatchesAny) {
                  subBuilder.MergeFrom(MatchesAny);
                }
                input.ReadMessage(subBuilder);
                MatchesAny = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Dimension = (global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension) input.ReadEnum();
                break;
              }
              case 18: {
                global::Google.Ads.Admob.V1.StringList subBuilder = new global::Google.Ads.Admob.V1.StringList();
                if (operatorCase_ == OperatorOneofCase.MatchesAny) {
                  subBuilder.MergeFrom(MatchesAny);
                }
                input.ReadMessage(subBuilder);
                MatchesAny = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Sorting direction to be applied on a dimension or a metric.
      /// </summary>
      public sealed partial class SortCondition : pb::IMessage<SortCondition>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SortCondition> _parser = new pb::MessageParser<SortCondition>(() => new SortCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SortCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.Admob.V1.NetworkReportSpec.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SortCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SortCondition(SortCondition other) : this() {
          order_ = other.order_;
          switch (other.SortOnCase) {
            case SortOnOneofCase.Dimension:
              Dimension = other.Dimension;
              break;
            case SortOnOneofCase.Metric:
              Metric = other.Metric;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SortCondition Clone() {
          return new SortCondition(this);
        }

        /// <summary>Field number for the "dimension" field.</summary>
        public const int DimensionFieldNumber = 1;
        /// <summary>
        /// Sort by the specified dimension.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension Dimension {
          get { return sortOnCase_ == SortOnOneofCase.Dimension ? (global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension) sortOn_ : global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Dimension.Unspecified; }
          set {
            sortOn_ = value;
            sortOnCase_ = SortOnOneofCase.Dimension;
          }
        }

        /// <summary>Field number for the "metric" field.</summary>
        public const int MetricFieldNumber = 2;
        /// <summary>
        /// Sort by the specified metric.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Metric Metric {
          get { return sortOnCase_ == SortOnOneofCase.Metric ? (global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Metric) sortOn_ : global::Google.Ads.Admob.V1.NetworkReportSpec.Types.Metric.Unspecified; }
          set {
            sortOn_ = value;
            sortOnCase_ = SortOnOneofCase.Metric;
          }
        }

        /// <summary>Field number for the "order" field.</summary>
        public const int OrderFieldNumber = 3;
        private global::Google.Ads.Admob.V1.SortOrder order_ = global::Google.Ads.Admob.V1.SortOrder.Unspecified;
        /// <summary>
        /// Sorting order of the dimension or metric.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.Admob.V1.SortOrder Order {
          get { return order_; }
          set {
            order_ = value;
          }
        }

        private object sortOn_;
        /// <summary>Enum of possible cases for the "sort_on" oneof.</summary>
        public enum SortOnOneofCase {
          None = 0,
          Dimension = 1,
          Metric = 2,
        }
        private SortOnOneofCase sortOnCase_ = SortOnOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SortOnOneofCase SortOnCase {
          get { return sortOnCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSortOn() {
          sortOnCase_ = SortOnOneofCase.None;
          sortOn_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SortCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SortCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Dimension != other.Dimension) return false;
          if (Metric != other.Metric) return false;
          if (Order != other.Order) return false;
          if (SortOnCase != other.SortOnCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (sortOnCase_ == SortOnOneofCase.Dimension) hash ^= Dimension.GetHashCode();
          if (sortOnCase_ == SortOnOneofCase.Metric) hash ^= Metric.GetHashCode();
          if (Order != global::Google.Ads.Admob.V1.SortOrder.Unspecified) hash ^= Order.GetHashCode();
          hash ^= (int) sortOnCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (sortOnCase_ == SortOnOneofCase.Dimension) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (sortOnCase_ == SortOnOneofCase.Metric) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Metric);
          }
          if (Order != global::Google.Ads.Admob.V1.SortOrder.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Order);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (sortOnCase_ == SortOnOneofCase.Dimension) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (sortOnCase_ == SortOnOneofCase.Metric) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Metric);
          }
          if (Order != global::Google.Ads.Admob.V1.SortOrder.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Order);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (sortOnCase_ == SortOnOneofCase.Dimension) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dimension);
          }
          if (sortOnCase_ == SortOnOneofCase.Metric) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Metric);
          }
          if (Order != global::Google.Ads.Admob.V1.SortOrder.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Order);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SortCondition other) {
          if (other == null) {
            return;
          }
          if (other.Order != global::Google.Ads.Admob.V1.SortOrder.Unspecified) {
            Order = other.Order;
          }
          switch (other.SortOnCase) {
            case SortOnOneofCase.Dimension:
              Dimension = other.Dimension;
              break;
            case SortOnOneofCase.Metric:
              Metric = other.Metric;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                sortOn_ = input.ReadEnum();
                sortOnCase_ = SortOnOneofCase.Dimension;
                break;
              }
              case 16: {
                sortOn_ = input.ReadEnum();
                sortOnCase_ = SortOnOneofCase.Metric;
                break;
              }
              case 24: {
                Order = (global::Google.Ads.Admob.V1.SortOrder) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                sortOn_ = input.ReadEnum();
                sortOnCase_ = SortOnOneofCase.Dimension;
                break;
              }
              case 16: {
                sortOn_ = input.ReadEnum();
                sortOnCase_ = SortOnOneofCase.Metric;
                break;
              }
              case 24: {
                Order = (global::Google.Ads.Admob.V1.SortOrder) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// The specification for generating an AdMob Mediation report.
  /// For example, the specification to get observed ECPM sliced by ad source and
  /// app for the 'US' and 'CN' countries can look like the following example:
  ///
  ///     {
  ///       "date_range": {
  ///         "start_date": {"year": 2018, "month": 9, "day": 1},
  ///         "end_date": {"year": 2018, "month": 9, "day": 30}
  ///       },
  ///       "dimensions": ["AD_SOURCE", "APP", "COUNTRY"],
  ///       "metrics": ["OBSERVED_ECPM"],
  ///       "dimension_filters": [
  ///         {
  ///           "dimension": "COUNTRY",
  ///           "matches_any": {"values": [{"value": "US", "value": "CN"}]}
  ///         }
  ///       ],
  ///       "sort_conditions": [
  ///         {"dimension":"APP", order: "ASCENDING"}
  ///       ],
  ///       "localization_settings": {
  ///         "currency_code": "USD",
  ///         "language_code": "en-US"
  ///       }
  ///     }
  ///
  /// For a better understanding, you can treat the preceding specification like
  /// the following pseudo SQL:
  ///
  ///     SELECT AD_SOURCE, APP, COUNTRY, OBSERVED_ECPM
  ///     FROM MEDIATION_REPORT
  ///     WHERE DATE >= '2018-09-01' AND DATE &lt;= '2018-09-30'
  ///         AND COUNTRY IN ('US', 'CN')
  ///     GROUP BY AD_SOURCE, APP, COUNTRY
  ///     ORDER BY APP ASC;
  /// </summary>
  public sealed partial class MediationReportSpec : pb::IMessage<MediationReportSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MediationReportSpec> _parser = new pb::MessageParser<MediationReportSpec>(() => new MediationReportSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediationReportSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.Admob.V1.AdmobResourcesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediationReportSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediationReportSpec(MediationReportSpec other) : this() {
      dateRange_ = other.dateRange_ != null ? other.dateRange_.Clone() : null;
      dimensions_ = other.dimensions_.Clone();
      metrics_ = other.metrics_.Clone();
      dimensionFilters_ = other.dimensionFilters_.Clone();
      sortConditions_ = other.sortConditions_.Clone();
      localizationSettings_ = other.localizationSettings_ != null ? other.localizationSettings_.Clone() : null;
      maxReportRows_ = other.maxReportRows_;
      timeZone_ = other.timeZone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediationReportSpec Clone() {
      return new MediationReportSpec(this);
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 1;
    private global::Google.Ads.Admob.V1.DateRange dateRange_;
    /// <summary>
    /// The date range for which the report is generated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.Admob.V1.DateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "dimensions" field.</summary>
    public const int DimensionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension> _repeated_dimensions_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension) x);
    private readonly pbc::RepeatedField<global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension> dimensions_ = new pbc::RepeatedField<global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension>();
    /// <summary>
    /// List of dimensions of the report. The value combination of these dimensions
    /// determines the row of the report. If no dimensions are specified, the
    /// report returns a single row of requested metrics for the entire account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension> Dimensions {
      get { return dimensions_; }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.Admob.V1.MediationReportSpec.Types.Metric> _repeated_metrics_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Google.Ads.Admob.V1.MediationReportSpec.Types.Metric) x);
    private readonly pbc::RepeatedField<global::Google.Ads.Admob.V1.MediationReportSpec.Types.Metric> metrics_ = new pbc::RepeatedField<global::Google.Ads.Admob.V1.MediationReportSpec.Types.Metric>();
    /// <summary>
    /// List of metrics of the report. A report must specify at least one metric.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.Admob.V1.MediationReportSpec.Types.Metric> Metrics {
      get { return metrics_; }
    }

    /// <summary>Field number for the "dimension_filters" field.</summary>
    public const int DimensionFiltersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Ads.Admob.V1.MediationReportSpec.Types.DimensionFilter> _repeated_dimensionFilters_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Ads.Admob.V1.MediationReportSpec.Types.DimensionFilter.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.Admob.V1.MediationReportSpec.Types.DimensionFilter> dimensionFilters_ = new pbc::RepeatedField<global::Google.Ads.Admob.V1.MediationReportSpec.Types.DimensionFilter>();
    /// <summary>
    /// Describes which report rows to match based on their dimension values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.Admob.V1.MediationReportSpec.Types.DimensionFilter> DimensionFilters {
      get { return dimensionFilters_; }
    }

    /// <summary>Field number for the "sort_conditions" field.</summary>
    public const int SortConditionsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Ads.Admob.V1.MediationReportSpec.Types.SortCondition> _repeated_sortConditions_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Ads.Admob.V1.MediationReportSpec.Types.SortCondition.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.Admob.V1.MediationReportSpec.Types.SortCondition> sortConditions_ = new pbc::RepeatedField<global::Google.Ads.Admob.V1.MediationReportSpec.Types.SortCondition>();
    /// <summary>
    /// Describes the sorting of report rows. The order of the condition in the
    /// list defines its precedence; the earlier the condition, the higher its
    /// precedence. If no sort conditions are specified, the row ordering is
    /// undefined.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.Admob.V1.MediationReportSpec.Types.SortCondition> SortConditions {
      get { return sortConditions_; }
    }

    /// <summary>Field number for the "localization_settings" field.</summary>
    public const int LocalizationSettingsFieldNumber = 6;
    private global::Google.Ads.Admob.V1.LocalizationSettings localizationSettings_;
    /// <summary>
    /// Localization settings of the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.Admob.V1.LocalizationSettings LocalizationSettings {
      get { return localizationSettings_; }
      set {
        localizationSettings_ = value;
      }
    }

    /// <summary>Field number for the "max_report_rows" field.</summary>
    public const int MaxReportRowsFieldNumber = 7;
    private int maxReportRows_;
    /// <summary>
    /// Maximum number of report data rows to return. If the value is not set, the
    /// API returns as many rows as possible, up to 100000. Acceptable values are
    /// 1-100000, inclusive. Any other values are treated as 100000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxReportRows {
      get { return maxReportRows_; }
      set {
        maxReportRows_ = value;
      }
    }

    /// <summary>Field number for the "time_zone" field.</summary>
    public const int TimeZoneFieldNumber = 8;
    private string timeZone_ = "";
    /// <summary>
    /// A report time zone. Accepts an IANA TZ name values, such as
    /// "America/Los_Angeles."  If no time zone is defined, the account default
    /// takes effect. Check default value by the get account action.
    ///
    /// **Warning:** The "America/Los_Angeles" is the only supported value at
    /// the moment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediationReportSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediationReportSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if(!dimensions_.Equals(other.dimensions_)) return false;
      if(!metrics_.Equals(other.metrics_)) return false;
      if(!dimensionFilters_.Equals(other.dimensionFilters_)) return false;
      if(!sortConditions_.Equals(other.sortConditions_)) return false;
      if (!object.Equals(LocalizationSettings, other.LocalizationSettings)) return false;
      if (MaxReportRows != other.MaxReportRows) return false;
      if (TimeZone != other.TimeZone) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      hash ^= dimensions_.GetHashCode();
      hash ^= metrics_.GetHashCode();
      hash ^= dimensionFilters_.GetHashCode();
      hash ^= sortConditions_.GetHashCode();
      if (localizationSettings_ != null) hash ^= LocalizationSettings.GetHashCode();
      if (MaxReportRows != 0) hash ^= MaxReportRows.GetHashCode();
      if (TimeZone.Length != 0) hash ^= TimeZone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dateRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateRange);
      }
      dimensions_.WriteTo(output, _repeated_dimensions_codec);
      metrics_.WriteTo(output, _repeated_metrics_codec);
      dimensionFilters_.WriteTo(output, _repeated_dimensionFilters_codec);
      sortConditions_.WriteTo(output, _repeated_sortConditions_codec);
      if (localizationSettings_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LocalizationSettings);
      }
      if (MaxReportRows != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxReportRows);
      }
      if (TimeZone.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TimeZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dateRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateRange);
      }
      dimensions_.WriteTo(ref output, _repeated_dimensions_codec);
      metrics_.WriteTo(ref output, _repeated_metrics_codec);
      dimensionFilters_.WriteTo(ref output, _repeated_dimensionFilters_codec);
      sortConditions_.WriteTo(ref output, _repeated_sortConditions_codec);
      if (localizationSettings_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LocalizationSettings);
      }
      if (MaxReportRows != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxReportRows);
      }
      if (TimeZone.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TimeZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      size += dimensions_.CalculateSize(_repeated_dimensions_codec);
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      size += dimensionFilters_.CalculateSize(_repeated_dimensionFilters_codec);
      size += sortConditions_.CalculateSize(_repeated_sortConditions_codec);
      if (localizationSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizationSettings);
      }
      if (MaxReportRows != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxReportRows);
      }
      if (TimeZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeZone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediationReportSpec other) {
      if (other == null) {
        return;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          DateRange = new global::Google.Ads.Admob.V1.DateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      dimensions_.Add(other.dimensions_);
      metrics_.Add(other.metrics_);
      dimensionFilters_.Add(other.dimensionFilters_);
      sortConditions_.Add(other.sortConditions_);
      if (other.localizationSettings_ != null) {
        if (localizationSettings_ == null) {
          LocalizationSettings = new global::Google.Ads.Admob.V1.LocalizationSettings();
        }
        LocalizationSettings.MergeFrom(other.LocalizationSettings);
      }
      if (other.MaxReportRows != 0) {
        MaxReportRows = other.MaxReportRows;
      }
      if (other.TimeZone.Length != 0) {
        TimeZone = other.TimeZone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dateRange_ == null) {
              DateRange = new global::Google.Ads.Admob.V1.DateRange();
            }
            input.ReadMessage(DateRange);
            break;
          }
          case 18:
          case 16: {
            dimensions_.AddEntriesFrom(input, _repeated_dimensions_codec);
            break;
          }
          case 26:
          case 24: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
          case 34: {
            dimensionFilters_.AddEntriesFrom(input, _repeated_dimensionFilters_codec);
            break;
          }
          case 42: {
            sortConditions_.AddEntriesFrom(input, _repeated_sortConditions_codec);
            break;
          }
          case 50: {
            if (localizationSettings_ == null) {
              LocalizationSettings = new global::Google.Ads.Admob.V1.LocalizationSettings();
            }
            input.ReadMessage(LocalizationSettings);
            break;
          }
          case 56: {
            MaxReportRows = input.ReadInt32();
            break;
          }
          case 66: {
            TimeZone = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dateRange_ == null) {
              DateRange = new global::Google.Ads.Admob.V1.DateRange();
            }
            input.ReadMessage(DateRange);
            break;
          }
          case 18:
          case 16: {
            dimensions_.AddEntriesFrom(ref input, _repeated_dimensions_codec);
            break;
          }
          case 26:
          case 24: {
            metrics_.AddEntriesFrom(ref input, _repeated_metrics_codec);
            break;
          }
          case 34: {
            dimensionFilters_.AddEntriesFrom(ref input, _repeated_dimensionFilters_codec);
            break;
          }
          case 42: {
            sortConditions_.AddEntriesFrom(ref input, _repeated_sortConditions_codec);
            break;
          }
          case 50: {
            if (localizationSettings_ == null) {
              LocalizationSettings = new global::Google.Ads.Admob.V1.LocalizationSettings();
            }
            input.ReadMessage(LocalizationSettings);
            break;
          }
          case 56: {
            MaxReportRows = input.ReadInt32();
            break;
          }
          case 66: {
            TimeZone = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MediationReportSpec message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The dimensions of the mediation report. Dimensions are data attributes to
      /// break down or refine the quantitative measurements (metrics) by certain
      /// attributes, such as the ad format or the platform an ad was viewed on.
      /// </summary>
      public enum Dimension {
        /// <summary>
        /// Default value for an unset field. Do not use.
        /// </summary>
        [pbr::OriginalName("DIMENSION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A date in the YYYY-MM-DD format (for example, "2018-12-21"). Requests can
        /// specify at most one time dimension.
        /// </summary>
        [pbr::OriginalName("DATE")] Date = 1,
        /// <summary>
        /// A month in the YYYY-MM format (for example, "2018-12"). Requests can
        /// specify at most one time dimension.
        /// </summary>
        [pbr::OriginalName("MONTH")] Month = 2,
        /// <summary>
        /// The date of the first day of a week in the YYYY-MM-DD format
        /// (for example, "2018-12-21"). Requests can specify at most one time
        /// dimension.
        /// </summary>
        [pbr::OriginalName("WEEK")] Week = 3,
        /// <summary>
        /// The [unique ID of the ad source](/admob/api/v1/ad_sources) (for example,
        /// "5450213213286189855" and "AdMob Network" as label value).
        /// </summary>
        [pbr::OriginalName("AD_SOURCE")] AdSource = 4,
        /// <summary>
        /// The unique ID of the ad source instance (for example,
        /// "ca-app-pub-1234#5678" and "AdMob (default)" as label value).
        /// </summary>
        [pbr::OriginalName("AD_SOURCE_INSTANCE")] AdSourceInstance = 5,
        /// <summary>
        /// The unique ID of the ad unit (for example, "ca-app-pub-1234/8790").
        /// If AD_UNIT dimension is specified, then APP is included automatically.
        /// </summary>
        [pbr::OriginalName("AD_UNIT")] AdUnit = 6,
        /// <summary>
        /// The unique ID of the mobile application (for example,
        /// "ca-app-pub-1234~1234").
        /// </summary>
        [pbr::OriginalName("APP")] App = 7,
        /// <summary>
        /// The unique ID of the mediation group (for example,
        /// "ca-app-pub-1234:mg:1234" and "AdMob (default)" as label value).
        /// </summary>
        [pbr::OriginalName("MEDIATION_GROUP")] MediationGroup = 11,
        /// <summary>
        /// CLDR country code of the place where the ad views/clicks occur (for
        /// example, "US" or "FR"). This is a geography dimension.
        /// </summary>
        [pbr::OriginalName("COUNTRY")] Country = 8,
        /// <summary>
        /// Format of the ad unit (for example, "banner", "native"), an ad delivery
        /// dimension.
        /// </summary>
        [pbr::OriginalName("FORMAT")] Format = 9,
        /// <summary>
        /// Mobile OS platform of the app (for example, "Android" or "iOS").
        /// </summary>
        [pbr::OriginalName("PLATFORM")] Platform = 10,
      }

      /// <summary>
      /// The metrics of the mediation report. Metrics are quantitative measurements
      /// indicating how the publisher business is performing. They are aggregated
      /// from the individual ad events and grouped by the report dimensions. The
      /// metric value is either integer, or decimal (without rounding).
      /// </summary>
      public enum Metric {
        /// <summary>
        /// Default value for an unset field. Do not use.
        /// </summary>
        [pbr::OriginalName("METRIC_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The number of requests. The value is an integer.
        /// </summary>
        [pbr::OriginalName("AD_REQUESTS")] AdRequests = 1,
        /// <summary>
        /// The number of times a user clicks an ad. The value is an integer.
        /// </summary>
        [pbr::OriginalName("CLICKS")] Clicks = 2,
        /// <summary>
        /// The estimated earnings of the AdMob publisher. The currency unit (USD,
        /// EUR, or other) of the earning metrics are determined by the localization
        /// setting for currency. The amount is in micros. For example, $6.50 would
        /// be represented as 6500000.
        ///
        /// Estimated earnings per mediation group and per ad source instance level
        /// is supported dating back to October 20, 2019. Third-party estimated
        /// earnings will show 0 for dates prior to October 20, 2019.
        /// </summary>
        [pbr::OriginalName("ESTIMATED_EARNINGS")] EstimatedEarnings = 3,
        /// <summary>
        /// The total number of ads shown to users. The value is an integer.
        /// </summary>
        [pbr::OriginalName("IMPRESSIONS")] Impressions = 4,
        /// <summary>
        /// The ratio of clicks over impressions. The value is a double precision
        /// (approximate) decimal value.
        /// </summary>
        [pbr::OriginalName("IMPRESSION_CTR")] ImpressionCtr = 5,
        /// <summary>
        /// The number of times ads are returned in response to a request. The value
        /// is an integer.
        /// </summary>
        [pbr::OriginalName("MATCHED_REQUESTS")] MatchedRequests = 6,
        /// <summary>
        /// The ratio of matched ad requests over the total ad requests. The value is
        /// a double precision (approximate) decimal value.
        /// </summary>
        [pbr::OriginalName("MATCH_RATE")] MatchRate = 7,
        /// <summary>
        /// The third-party ad network's estimated average eCPM. The currency unit
        /// (USD, EUR, or other) of the earning metrics are determined by the
        /// localization setting for currency. The amount is in micros. For example,
        /// $2.30 would be represented as 2300000.
        ///
        /// The estimated average eCPM per mediation group and per ad source instance
        /// level is supported dating back to October 20, 2019. Third-party estimated
        /// average eCPM will show 0 for dates prior to October 20, 2019.
        /// </summary>
        [pbr::OriginalName("OBSERVED_ECPM")] ObservedEcpm = 8,
      }

      /// <summary>
      /// Describes which report rows to match based on their dimension values.
      /// </summary>
      public sealed partial class DimensionFilter : pb::IMessage<DimensionFilter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DimensionFilter> _parser = new pb::MessageParser<DimensionFilter>(() => new DimensionFilter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DimensionFilter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.Admob.V1.MediationReportSpec.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DimensionFilter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DimensionFilter(DimensionFilter other) : this() {
          dimension_ = other.dimension_;
          switch (other.OperatorCase) {
            case OperatorOneofCase.MatchesAny:
              MatchesAny = other.MatchesAny.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DimensionFilter Clone() {
          return new DimensionFilter(this);
        }

        /// <summary>Field number for the "matches_any" field.</summary>
        public const int MatchesAnyFieldNumber = 2;
        /// <summary>
        /// Matches a row if its value for the specified dimension is in one of the
        /// values specified in this condition.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.Admob.V1.StringList MatchesAny {
          get { return operatorCase_ == OperatorOneofCase.MatchesAny ? (global::Google.Ads.Admob.V1.StringList) operator_ : null; }
          set {
            operator_ = value;
            operatorCase_ = value == null ? OperatorOneofCase.None : OperatorOneofCase.MatchesAny;
          }
        }

        /// <summary>Field number for the "dimension" field.</summary>
        public const int DimensionFieldNumber = 1;
        private global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension dimension_ = global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension.Unspecified;
        /// <summary>
        /// Applies the filter criterion to the specified dimension.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension Dimension {
          get { return dimension_; }
          set {
            dimension_ = value;
          }
        }

        private object operator_;
        /// <summary>Enum of possible cases for the "operator" oneof.</summary>
        public enum OperatorOneofCase {
          None = 0,
          MatchesAny = 2,
        }
        private OperatorOneofCase operatorCase_ = OperatorOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OperatorOneofCase OperatorCase {
          get { return operatorCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearOperator() {
          operatorCase_ = OperatorOneofCase.None;
          operator_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DimensionFilter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DimensionFilter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(MatchesAny, other.MatchesAny)) return false;
          if (Dimension != other.Dimension) return false;
          if (OperatorCase != other.OperatorCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (operatorCase_ == OperatorOneofCase.MatchesAny) hash ^= MatchesAny.GetHashCode();
          if (Dimension != global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension.Unspecified) hash ^= Dimension.GetHashCode();
          hash ^= (int) operatorCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Dimension != global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (operatorCase_ == OperatorOneofCase.MatchesAny) {
            output.WriteRawTag(18);
            output.WriteMessage(MatchesAny);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Dimension != global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (operatorCase_ == OperatorOneofCase.MatchesAny) {
            output.WriteRawTag(18);
            output.WriteMessage(MatchesAny);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (operatorCase_ == OperatorOneofCase.MatchesAny) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchesAny);
          }
          if (Dimension != global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dimension);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DimensionFilter other) {
          if (other == null) {
            return;
          }
          if (other.Dimension != global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension.Unspecified) {
            Dimension = other.Dimension;
          }
          switch (other.OperatorCase) {
            case OperatorOneofCase.MatchesAny:
              if (MatchesAny == null) {
                MatchesAny = new global::Google.Ads.Admob.V1.StringList();
              }
              MatchesAny.MergeFrom(other.MatchesAny);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Dimension = (global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension) input.ReadEnum();
                break;
              }
              case 18: {
                global::Google.Ads.Admob.V1.StringList subBuilder = new global::Google.Ads.Admob.V1.StringList();
                if (operatorCase_ == OperatorOneofCase.MatchesAny) {
                  subBuilder.MergeFrom(MatchesAny);
                }
                input.ReadMessage(subBuilder);
                MatchesAny = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Dimension = (global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension) input.ReadEnum();
                break;
              }
              case 18: {
                global::Google.Ads.Admob.V1.StringList subBuilder = new global::Google.Ads.Admob.V1.StringList();
                if (operatorCase_ == OperatorOneofCase.MatchesAny) {
                  subBuilder.MergeFrom(MatchesAny);
                }
                input.ReadMessage(subBuilder);
                MatchesAny = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Sorting direction to be applied on a dimension or a metric.
      /// </summary>
      public sealed partial class SortCondition : pb::IMessage<SortCondition>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SortCondition> _parser = new pb::MessageParser<SortCondition>(() => new SortCondition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SortCondition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.Admob.V1.MediationReportSpec.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SortCondition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SortCondition(SortCondition other) : this() {
          order_ = other.order_;
          switch (other.SortOnCase) {
            case SortOnOneofCase.Dimension:
              Dimension = other.Dimension;
              break;
            case SortOnOneofCase.Metric:
              Metric = other.Metric;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SortCondition Clone() {
          return new SortCondition(this);
        }

        /// <summary>Field number for the "dimension" field.</summary>
        public const int DimensionFieldNumber = 1;
        /// <summary>
        /// Sort by the specified dimension.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension Dimension {
          get { return sortOnCase_ == SortOnOneofCase.Dimension ? (global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension) sortOn_ : global::Google.Ads.Admob.V1.MediationReportSpec.Types.Dimension.Unspecified; }
          set {
            sortOn_ = value;
            sortOnCase_ = SortOnOneofCase.Dimension;
          }
        }

        /// <summary>Field number for the "metric" field.</summary>
        public const int MetricFieldNumber = 2;
        /// <summary>
        /// Sort by the specified metric.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.Admob.V1.MediationReportSpec.Types.Metric Metric {
          get { return sortOnCase_ == SortOnOneofCase.Metric ? (global::Google.Ads.Admob.V1.MediationReportSpec.Types.Metric) sortOn_ : global::Google.Ads.Admob.V1.MediationReportSpec.Types.Metric.Unspecified; }
          set {
            sortOn_ = value;
            sortOnCase_ = SortOnOneofCase.Metric;
          }
        }

        /// <summary>Field number for the "order" field.</summary>
        public const int OrderFieldNumber = 3;
        private global::Google.Ads.Admob.V1.SortOrder order_ = global::Google.Ads.Admob.V1.SortOrder.Unspecified;
        /// <summary>
        /// Sorting order of the dimension or metric.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.Admob.V1.SortOrder Order {
          get { return order_; }
          set {
            order_ = value;
          }
        }

        private object sortOn_;
        /// <summary>Enum of possible cases for the "sort_on" oneof.</summary>
        public enum SortOnOneofCase {
          None = 0,
          Dimension = 1,
          Metric = 2,
        }
        private SortOnOneofCase sortOnCase_ = SortOnOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SortOnOneofCase SortOnCase {
          get { return sortOnCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSortOn() {
          sortOnCase_ = SortOnOneofCase.None;
          sortOn_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SortCondition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SortCondition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Dimension != other.Dimension) return false;
          if (Metric != other.Metric) return false;
          if (Order != other.Order) return false;
          if (SortOnCase != other.SortOnCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (sortOnCase_ == SortOnOneofCase.Dimension) hash ^= Dimension.GetHashCode();
          if (sortOnCase_ == SortOnOneofCase.Metric) hash ^= Metric.GetHashCode();
          if (Order != global::Google.Ads.Admob.V1.SortOrder.Unspecified) hash ^= Order.GetHashCode();
          hash ^= (int) sortOnCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (sortOnCase_ == SortOnOneofCase.Dimension) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (sortOnCase_ == SortOnOneofCase.Metric) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Metric);
          }
          if (Order != global::Google.Ads.Admob.V1.SortOrder.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Order);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (sortOnCase_ == SortOnOneofCase.Dimension) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (sortOnCase_ == SortOnOneofCase.Metric) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Metric);
          }
          if (Order != global::Google.Ads.Admob.V1.SortOrder.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Order);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (sortOnCase_ == SortOnOneofCase.Dimension) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dimension);
          }
          if (sortOnCase_ == SortOnOneofCase.Metric) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Metric);
          }
          if (Order != global::Google.Ads.Admob.V1.SortOrder.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Order);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SortCondition other) {
          if (other == null) {
            return;
          }
          if (other.Order != global::Google.Ads.Admob.V1.SortOrder.Unspecified) {
            Order = other.Order;
          }
          switch (other.SortOnCase) {
            case SortOnOneofCase.Dimension:
              Dimension = other.Dimension;
              break;
            case SortOnOneofCase.Metric:
              Metric = other.Metric;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                sortOn_ = input.ReadEnum();
                sortOnCase_ = SortOnOneofCase.Dimension;
                break;
              }
              case 16: {
                sortOn_ = input.ReadEnum();
                sortOnCase_ = SortOnOneofCase.Metric;
                break;
              }
              case 24: {
                Order = (global::Google.Ads.Admob.V1.SortOrder) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                sortOn_ = input.ReadEnum();
                sortOnCase_ = SortOnOneofCase.Dimension;
                break;
              }
              case 16: {
                sortOn_ = input.ReadEnum();
                sortOnCase_ = SortOnOneofCase.Metric;
                break;
              }
              case 24: {
                Order = (global::Google.Ads.Admob.V1.SortOrder) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// A row of the returning report.
  /// </summary>
  public sealed partial class ReportRow : pb::IMessage<ReportRow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportRow> _parser = new pb::MessageParser<ReportRow>(() => new ReportRow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportRow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.Admob.V1.AdmobResourcesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportRow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportRow(ReportRow other) : this() {
      dimensionValues_ = other.dimensionValues_.Clone();
      metricValues_ = other.metricValues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportRow Clone() {
      return new ReportRow(this);
    }

    /// <summary>Field number for the "dimension_values" field.</summary>
    public const int DimensionValuesFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Google.Ads.Admob.V1.ReportRow.Types.DimensionValue>.Codec _map_dimensionValues_codec
        = new pbc::MapField<string, global::Google.Ads.Admob.V1.ReportRow.Types.DimensionValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Ads.Admob.V1.ReportRow.Types.DimensionValue.Parser), 10);
    private readonly pbc::MapField<string, global::Google.Ads.Admob.V1.ReportRow.Types.DimensionValue> dimensionValues_ = new pbc::MapField<string, global::Google.Ads.Admob.V1.ReportRow.Types.DimensionValue>();
    /// <summary>
    /// Map of dimension values in a row, with keys as enum name of the dimensions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Ads.Admob.V1.ReportRow.Types.DimensionValue> DimensionValues {
      get { return dimensionValues_; }
    }

    /// <summary>Field number for the "metric_values" field.</summary>
    public const int MetricValuesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Google.Ads.Admob.V1.ReportRow.Types.MetricValue>.Codec _map_metricValues_codec
        = new pbc::MapField<string, global::Google.Ads.Admob.V1.ReportRow.Types.MetricValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Ads.Admob.V1.ReportRow.Types.MetricValue.Parser), 18);
    private readonly pbc::MapField<string, global::Google.Ads.Admob.V1.ReportRow.Types.MetricValue> metricValues_ = new pbc::MapField<string, global::Google.Ads.Admob.V1.ReportRow.Types.MetricValue>();
    /// <summary>
    /// Map of metric values in a row, with keys as enum name of the metrics. If
    /// a metric being requested has no value returned, the map will not include
    /// it.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Ads.Admob.V1.ReportRow.Types.MetricValue> MetricValues {
      get { return metricValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportRow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportRow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DimensionValues.Equals(other.DimensionValues)) return false;
      if (!MetricValues.Equals(other.MetricValues)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DimensionValues.GetHashCode();
      hash ^= MetricValues.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dimensionValues_.WriteTo(output, _map_dimensionValues_codec);
      metricValues_.WriteTo(output, _map_metricValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dimensionValues_.WriteTo(ref output, _map_dimensionValues_codec);
      metricValues_.WriteTo(ref output, _map_metricValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dimensionValues_.CalculateSize(_map_dimensionValues_codec);
      size += metricValues_.CalculateSize(_map_metricValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportRow other) {
      if (other == null) {
        return;
      }
      dimensionValues_.Add(other.dimensionValues_);
      metricValues_.Add(other.metricValues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dimensionValues_.AddEntriesFrom(input, _map_dimensionValues_codec);
            break;
          }
          case 18: {
            metricValues_.AddEntriesFrom(input, _map_metricValues_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dimensionValues_.AddEntriesFrom(ref input, _map_dimensionValues_codec);
            break;
          }
          case 18: {
            metricValues_.AddEntriesFrom(ref input, _map_metricValues_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReportRow message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Representation of a dimension value.
      /// </summary>
      public sealed partial class DimensionValue : pb::IMessage<DimensionValue>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DimensionValue> _parser = new pb::MessageParser<DimensionValue>(() => new DimensionValue());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DimensionValue> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.Admob.V1.ReportRow.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DimensionValue() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DimensionValue(DimensionValue other) : this() {
          value_ = other.value_;
          displayLabel_ = other.displayLabel_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DimensionValue Clone() {
          return new DimensionValue(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private string value_ = "";
        /// <summary>
        /// Dimension value in the format specified in the report's spec Dimension
        /// enum.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "display_label" field.</summary>
        public const int DisplayLabelFieldNumber = 2;
        private string displayLabel_ = "";
        /// <summary>
        /// The localized string representation of the value. If unspecified, the
        /// display label should be derived from the value.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DisplayLabel {
          get { return displayLabel_; }
          set {
            displayLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DimensionValue);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DimensionValue other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Value != other.Value) return false;
          if (DisplayLabel != other.DisplayLabel) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (DisplayLabel.Length != 0) hash ^= DisplayLabel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Value.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Value);
          }
          if (DisplayLabel.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DisplayLabel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Value.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Value);
          }
          if (DisplayLabel.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DisplayLabel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (DisplayLabel.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayLabel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DimensionValue other) {
          if (other == null) {
            return;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          if (other.DisplayLabel.Length != 0) {
            DisplayLabel = other.DisplayLabel;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Value = input.ReadString();
                break;
              }
              case 18: {
                DisplayLabel = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Value = input.ReadString();
                break;
              }
              case 18: {
                DisplayLabel = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Representation of a metric value.
      /// </summary>
      public sealed partial class MetricValue : pb::IMessage<MetricValue>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MetricValue> _parser = new pb::MessageParser<MetricValue>(() => new MetricValue());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MetricValue> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.Admob.V1.ReportRow.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetricValue() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetricValue(MetricValue other) : this() {
          switch (other.ValueCase) {
            case ValueOneofCase.IntegerValue:
              IntegerValue = other.IntegerValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueOneofCase.MicrosValue:
              MicrosValue = other.MicrosValue;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetricValue Clone() {
          return new MetricValue(this);
        }

        /// <summary>Field number for the "integer_value" field.</summary>
        public const int IntegerValueFieldNumber = 1;
        /// <summary>
        /// Metric integer value.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long IntegerValue {
          get { return valueCase_ == ValueOneofCase.IntegerValue ? (long) value_ : 0L; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.IntegerValue;
          }
        }

        /// <summary>Field number for the "double_value" field.</summary>
        public const int DoubleValueFieldNumber = 2;
        /// <summary>
        /// Double precision (approximate) decimal values. Rates are from 0 to 1.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double DoubleValue {
          get { return valueCase_ == ValueOneofCase.DoubleValue ? (double) value_ : 0D; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.DoubleValue;
          }
        }

        /// <summary>Field number for the "micros_value" field.</summary>
        public const int MicrosValueFieldNumber = 3;
        /// <summary>
        /// Amount in micros. One million is equivalent to one unit. Currency value
        /// is in the unit (USD, EUR or other) specified by the request.
        /// For example, $6.50 whould be represented as 6500000 micros.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MicrosValue {
          get { return valueCase_ == ValueOneofCase.MicrosValue ? (long) value_ : 0L; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.MicrosValue;
          }
        }

        private object value_;
        /// <summary>Enum of possible cases for the "value" oneof.</summary>
        public enum ValueOneofCase {
          None = 0,
          IntegerValue = 1,
          DoubleValue = 2,
          MicrosValue = 3,
        }
        private ValueOneofCase valueCase_ = ValueOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ValueOneofCase ValueCase {
          get { return valueCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearValue() {
          valueCase_ = ValueOneofCase.None;
          value_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MetricValue);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MetricValue other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (IntegerValue != other.IntegerValue) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
          if (MicrosValue != other.MicrosValue) return false;
          if (ValueCase != other.ValueCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (valueCase_ == ValueOneofCase.IntegerValue) hash ^= IntegerValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.DoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
          if (valueCase_ == ValueOneofCase.MicrosValue) hash ^= MicrosValue.GetHashCode();
          hash ^= (int) valueCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (valueCase_ == ValueOneofCase.IntegerValue) {
            output.WriteRawTag(8);
            output.WriteInt64(IntegerValue);
          }
          if (valueCase_ == ValueOneofCase.DoubleValue) {
            output.WriteRawTag(17);
            output.WriteDouble(DoubleValue);
          }
          if (valueCase_ == ValueOneofCase.MicrosValue) {
            output.WriteRawTag(24);
            output.WriteInt64(MicrosValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (valueCase_ == ValueOneofCase.IntegerValue) {
            output.WriteRawTag(8);
            output.WriteInt64(IntegerValue);
          }
          if (valueCase_ == ValueOneofCase.DoubleValue) {
            output.WriteRawTag(17);
            output.WriteDouble(DoubleValue);
          }
          if (valueCase_ == ValueOneofCase.MicrosValue) {
            output.WriteRawTag(24);
            output.WriteInt64(MicrosValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (valueCase_ == ValueOneofCase.IntegerValue) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(IntegerValue);
          }
          if (valueCase_ == ValueOneofCase.DoubleValue) {
            size += 1 + 8;
          }
          if (valueCase_ == ValueOneofCase.MicrosValue) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MicrosValue);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MetricValue other) {
          if (other == null) {
            return;
          }
          switch (other.ValueCase) {
            case ValueOneofCase.IntegerValue:
              IntegerValue = other.IntegerValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueOneofCase.MicrosValue:
              MicrosValue = other.MicrosValue;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                IntegerValue = input.ReadInt64();
                break;
              }
              case 17: {
                DoubleValue = input.ReadDouble();
                break;
              }
              case 24: {
                MicrosValue = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                IntegerValue = input.ReadInt64();
                break;
              }
              case 17: {
                DoubleValue = input.ReadDouble();
                break;
              }
              case 24: {
                MicrosValue = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Warnings associated with generation of the report.
  /// </summary>
  public sealed partial class ReportWarning : pb::IMessage<ReportWarning>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportWarning> _parser = new pb::MessageParser<ReportWarning>(() => new ReportWarning());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportWarning> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.Admob.V1.AdmobResourcesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportWarning() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportWarning(ReportWarning other) : this() {
      type_ = other.type_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportWarning Clone() {
      return new ReportWarning(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Google.Ads.Admob.V1.ReportWarning.Types.Type type_ = global::Google.Ads.Admob.V1.ReportWarning.Types.Type.Unspecified;
    /// <summary>
    /// Type of the warning.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.Admob.V1.ReportWarning.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Describes the details of the warning message, in English.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportWarning);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportWarning other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Google.Ads.Admob.V1.ReportWarning.Types.Type.Unspecified) hash ^= Type.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Google.Ads.Admob.V1.ReportWarning.Types.Type.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Google.Ads.Admob.V1.ReportWarning.Types.Type.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Google.Ads.Admob.V1.ReportWarning.Types.Type.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportWarning other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Google.Ads.Admob.V1.ReportWarning.Types.Type.Unspecified) {
        Type = other.Type;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Google.Ads.Admob.V1.ReportWarning.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Google.Ads.Admob.V1.ReportWarning.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReportWarning message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Warning type.
      /// </summary>
      public enum Type {
        /// <summary>
        /// Default value for an unset field. Do not use.
        /// </summary>
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Some data in this report is aggregated based on a time zone different
        /// from the requested time zone. This could happen if a local time-zone
        /// report has the start time before the last time this time zone changed.
        /// The description field will contain the date of the last time zone
        /// change.
        /// </summary>
        [pbr::OriginalName("DATA_BEFORE_ACCOUNT_TIMEZONE_CHANGE")] DataBeforeAccountTimezoneChange = 1,
        /// <summary>
        /// There is an unusual delay in processing the source data for the
        /// requested date range. The report results might be less up to date than
        /// usual. AdMob is aware of the issue and is actively working to resolve
        /// it.
        /// </summary>
        [pbr::OriginalName("DATA_DELAYED")] DataDelayed = 2,
        /// <summary>
        /// Warnings that are exposed without a specific type. Useful when new
        /// warning types are added but the API is not changed yet.
        /// </summary>
        [pbr::OriginalName("OTHER")] Other = 3,
        /// <summary>
        /// The currency being requested is not the account currency. The earning
        /// metrics will be based on the requested currency, and thus not a good
        /// estimation of the final payment anymore, due to the currency rate
        /// fluctuation.
        /// </summary>
        [pbr::OriginalName("REPORT_CURRENCY_NOT_ACCOUNT_CURRENCY")] ReportCurrencyNotAccountCurrency = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Groups data helps to treat the generated report. Always sent as a first
  /// message in the stream response.
  /// </summary>
  public sealed partial class ReportHeader : pb::IMessage<ReportHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportHeader> _parser = new pb::MessageParser<ReportHeader>(() => new ReportHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.Admob.V1.AdmobResourcesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportHeader(ReportHeader other) : this() {
      dateRange_ = other.dateRange_ != null ? other.dateRange_.Clone() : null;
      localizationSettings_ = other.localizationSettings_ != null ? other.localizationSettings_.Clone() : null;
      reportingTimeZone_ = other.reportingTimeZone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportHeader Clone() {
      return new ReportHeader(this);
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 1;
    private global::Google.Ads.Admob.V1.DateRange dateRange_;
    /// <summary>
    /// The date range for which the report is generated. This is identical to the
    /// range specified in the report request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.Admob.V1.DateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "localization_settings" field.</summary>
    public const int LocalizationSettingsFieldNumber = 2;
    private global::Google.Ads.Admob.V1.LocalizationSettings localizationSettings_;
    /// <summary>
    /// Localization settings of the report. This is identical to the settings
    /// in the report request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.Admob.V1.LocalizationSettings LocalizationSettings {
      get { return localizationSettings_; }
      set {
        localizationSettings_ = value;
      }
    }

    /// <summary>Field number for the "reporting_time_zone" field.</summary>
    public const int ReportingTimeZoneFieldNumber = 3;
    private string reportingTimeZone_ = "";
    /// <summary>
    /// The report time zone. The value is a time-zone ID as specified by the CLDR
    /// project, for example, "America/Los_Angeles".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReportingTimeZone {
      get { return reportingTimeZone_; }
      set {
        reportingTimeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (!object.Equals(LocalizationSettings, other.LocalizationSettings)) return false;
      if (ReportingTimeZone != other.ReportingTimeZone) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (localizationSettings_ != null) hash ^= LocalizationSettings.GetHashCode();
      if (ReportingTimeZone.Length != 0) hash ^= ReportingTimeZone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dateRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateRange);
      }
      if (localizationSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LocalizationSettings);
      }
      if (ReportingTimeZone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReportingTimeZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dateRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateRange);
      }
      if (localizationSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LocalizationSettings);
      }
      if (ReportingTimeZone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReportingTimeZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (localizationSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizationSettings);
      }
      if (ReportingTimeZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReportingTimeZone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportHeader other) {
      if (other == null) {
        return;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          DateRange = new global::Google.Ads.Admob.V1.DateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.localizationSettings_ != null) {
        if (localizationSettings_ == null) {
          LocalizationSettings = new global::Google.Ads.Admob.V1.LocalizationSettings();
        }
        LocalizationSettings.MergeFrom(other.LocalizationSettings);
      }
      if (other.ReportingTimeZone.Length != 0) {
        ReportingTimeZone = other.ReportingTimeZone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dateRange_ == null) {
              DateRange = new global::Google.Ads.Admob.V1.DateRange();
            }
            input.ReadMessage(DateRange);
            break;
          }
          case 18: {
            if (localizationSettings_ == null) {
              LocalizationSettings = new global::Google.Ads.Admob.V1.LocalizationSettings();
            }
            input.ReadMessage(LocalizationSettings);
            break;
          }
          case 26: {
            ReportingTimeZone = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dateRange_ == null) {
              DateRange = new global::Google.Ads.Admob.V1.DateRange();
            }
            input.ReadMessage(DateRange);
            break;
          }
          case 18: {
            if (localizationSettings_ == null) {
              LocalizationSettings = new global::Google.Ads.Admob.V1.LocalizationSettings();
            }
            input.ReadMessage(LocalizationSettings);
            break;
          }
          case 26: {
            ReportingTimeZone = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Groups data available after report generation, for example, warnings and row
  /// counts. Always sent as the last message in the stream response.
  /// </summary>
  public sealed partial class ReportFooter : pb::IMessage<ReportFooter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportFooter> _parser = new pb::MessageParser<ReportFooter>(() => new ReportFooter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportFooter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.Admob.V1.AdmobResourcesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportFooter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportFooter(ReportFooter other) : this() {
      warnings_ = other.warnings_.Clone();
      matchingRowCount_ = other.matchingRowCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportFooter Clone() {
      return new ReportFooter(this);
    }

    /// <summary>Field number for the "warnings" field.</summary>
    public const int WarningsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.Admob.V1.ReportWarning> _repeated_warnings_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.Admob.V1.ReportWarning.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.Admob.V1.ReportWarning> warnings_ = new pbc::RepeatedField<global::Google.Ads.Admob.V1.ReportWarning>();
    /// <summary>
    /// Warnings associated with generation of the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.Admob.V1.ReportWarning> Warnings {
      get { return warnings_; }
    }

    /// <summary>Field number for the "matching_row_count" field.</summary>
    public const int MatchingRowCountFieldNumber = 2;
    private long matchingRowCount_;
    /// <summary>
    /// Total number of rows that matched the request.
    ///
    /// Warning: This count does NOT always match the number of rows in the
    /// response. Do not make that assumption when processing the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MatchingRowCount {
      get { return matchingRowCount_; }
      set {
        matchingRowCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportFooter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportFooter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!warnings_.Equals(other.warnings_)) return false;
      if (MatchingRowCount != other.MatchingRowCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= warnings_.GetHashCode();
      if (MatchingRowCount != 0L) hash ^= MatchingRowCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      warnings_.WriteTo(output, _repeated_warnings_codec);
      if (MatchingRowCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MatchingRowCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      warnings_.WriteTo(ref output, _repeated_warnings_codec);
      if (MatchingRowCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MatchingRowCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += warnings_.CalculateSize(_repeated_warnings_codec);
      if (MatchingRowCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MatchingRowCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportFooter other) {
      if (other == null) {
        return;
      }
      warnings_.Add(other.warnings_);
      if (other.MatchingRowCount != 0L) {
        MatchingRowCount = other.MatchingRowCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            warnings_.AddEntriesFrom(input, _repeated_warnings_codec);
            break;
          }
          case 16: {
            MatchingRowCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            warnings_.AddEntriesFrom(ref input, _repeated_warnings_codec);
            break;
          }
          case 16: {
            MatchingRowCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specification of a single date range. Both dates are inclusive.
  /// </summary>
  public sealed partial class DateRange : pb::IMessage<DateRange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DateRange> _parser = new pb::MessageParser<DateRange>(() => new DateRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DateRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.Admob.V1.AdmobResourcesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateRange(DateRange other) : this() {
      startDate_ = other.startDate_ != null ? other.startDate_.Clone() : null;
      endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateRange Clone() {
      return new DateRange(this);
    }

    /// <summary>Field number for the "start_date" field.</summary>
    public const int StartDateFieldNumber = 1;
    private global::Google.Type.Date startDate_;
    /// <summary>
    /// Start date of the date range, inclusive. Must be less than or equal to the
    /// end date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "end_date" field.</summary>
    public const int EndDateFieldNumber = 2;
    private global::Google.Type.Date endDate_;
    /// <summary>
    /// End date of the date range, inclusive. Must be greater than or equal to the
    /// start date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DateRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DateRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartDate, other.StartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DateRange other) {
      if (other == null) {
        return;
      }
      if (other.startDate_ != null) {
        if (startDate_ == null) {
          StartDate = new global::Google.Type.Date();
        }
        StartDate.MergeFrom(other.StartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          EndDate = new global::Google.Type.Date();
        }
        EndDate.MergeFrom(other.EndDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startDate_ == null) {
              StartDate = new global::Google.Type.Date();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 18: {
            if (endDate_ == null) {
              EndDate = new global::Google.Type.Date();
            }
            input.ReadMessage(EndDate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startDate_ == null) {
              StartDate = new global::Google.Type.Date();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 18: {
            if (endDate_ == null) {
              EndDate = new global::Google.Type.Date();
            }
            input.ReadMessage(EndDate);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Localization settings for reports, such as currency and language. It affects
  /// how metrics are calculated.
  /// </summary>
  public sealed partial class LocalizationSettings : pb::IMessage<LocalizationSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalizationSettings> _parser = new pb::MessageParser<LocalizationSettings>(() => new LocalizationSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocalizationSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.Admob.V1.AdmobResourcesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocalizationSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocalizationSettings(LocalizationSettings other) : this() {
      currencyCode_ = other.currencyCode_;
      languageCode_ = other.languageCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocalizationSettings Clone() {
      return new LocalizationSettings(this);
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 1;
    private string currencyCode_ = "";
    /// <summary>
    /// Currency code of the earning related metrics, which is the 3-letter code
    /// defined in ISO 4217. The daily average rate is used for the currency
    /// conversion. Defaults to the account currency code if unspecified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 2;
    private string languageCode_ = "";
    /// <summary>
    /// Language used for any localized text, such as some dimension value display
    /// labels. The language tag defined in the IETF BCP47. Defaults to 'en-US' if
    /// unspecified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocalizationSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocalizationSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrencyCode != other.CurrencyCode) return false;
      if (LanguageCode != other.LanguageCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrencyCode.Length != 0) hash ^= CurrencyCode.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CurrencyCode);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CurrencyCode);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrencyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocalizationSettings other) {
      if (other == null) {
        return;
      }
      if (other.CurrencyCode.Length != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 18: {
            LanguageCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 18: {
            LanguageCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of string values.
  /// </summary>
  public sealed partial class StringList : pb::IMessage<StringList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StringList> _parser = new pb::MessageParser<StringList>(() => new StringList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.Admob.V1.AdmobResourcesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringList(StringList other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringList Clone() {
      return new StringList(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_values_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> values_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The string values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringList other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
