# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/iam/admin/v1/iam.proto for package 'google.iam.admin.v1'
# Original file comments:
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/iam/admin/v1/iam_pb'

module Google
  module Iam
    module Admin
      module V1
        module IAM
          # Creates and manages Identity and Access Management (IAM) resources.
          #
          # You can use this service to work with all of the following resources:
          #
          # * **Service accounts**, which identify an application or a virtual machine
          #   (VM) instance rather than a person
          # * **Service account keys**, which service accounts use to authenticate with
          #   Google APIs
          # * **IAM policies for service accounts**, which specify the roles that a
          #   member has for the service account
          # * **IAM custom roles**, which help you limit the number of permissions that
          #   you grant to members
          #
          # In addition, you can use this service to complete the following tasks, among
          # others:
          #
          # * Test whether a service account can use specific permissions
          # * Check which roles you can grant for a specific resource
          # * Lint, or validate, condition expressions in an IAM policy
          class Service

            include ::GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'google.iam.admin.v1.IAM'

            # Lists every [ServiceAccount][google.iam.admin.v1.ServiceAccount] that belongs to a specific project.
            rpc :ListServiceAccounts, ::Google::Iam::Admin::V1::ListServiceAccountsRequest, ::Google::Iam::Admin::V1::ListServiceAccountsResponse
            # Gets a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            rpc :GetServiceAccount, ::Google::Iam::Admin::V1::GetServiceAccountRequest, ::Google::Iam::Admin::V1::ServiceAccount
            # Creates a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            rpc :CreateServiceAccount, ::Google::Iam::Admin::V1::CreateServiceAccountRequest, ::Google::Iam::Admin::V1::ServiceAccount
            # **Note:** We are in the process of deprecating this method. Use
            # [PatchServiceAccount][google.iam.admin.v1.IAM.PatchServiceAccount] instead.
            #
            # Updates a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            #
            # You can update only the `display_name` and `description` fields.
            rpc :UpdateServiceAccount, ::Google::Iam::Admin::V1::ServiceAccount, ::Google::Iam::Admin::V1::ServiceAccount
            # Patches a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            rpc :PatchServiceAccount, ::Google::Iam::Admin::V1::PatchServiceAccountRequest, ::Google::Iam::Admin::V1::ServiceAccount
            # Deletes a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            #
            # **Warning:** After you delete a service account, you might not be able to
            # undelete it. If you know that you need to re-enable the service account in
            # the future, use [DisableServiceAccount][google.iam.admin.v1.IAM.DisableServiceAccount] instead.
            #
            # If you delete a service account, IAM permanently removes the service
            # account 30 days later. Google Cloud cannot recover the service account
            # after it is permanently removed, even if you file a support request.
            #
            # To help avoid unplanned outages, we recommend that you disable the service
            # account before you delete it. Use [DisableServiceAccount][google.iam.admin.v1.IAM.DisableServiceAccount] to disable the
            # service account, then wait at least 24 hours and watch for unintended
            # consequences. If there are no unintended consequences, you can delete the
            # service account.
            rpc :DeleteServiceAccount, ::Google::Iam::Admin::V1::DeleteServiceAccountRequest, ::Google::Protobuf::Empty
            # Restores a deleted [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            #
            # **Important:** It is not always possible to restore a deleted service
            # account. Use this method only as a last resort.
            #
            # After you delete a service account, IAM permanently removes the service
            # account 30 days later. There is no way to restore a deleted service account
            # that has been permanently removed.
            rpc :UndeleteServiceAccount, ::Google::Iam::Admin::V1::UndeleteServiceAccountRequest, ::Google::Iam::Admin::V1::UndeleteServiceAccountResponse
            # Enables a [ServiceAccount][google.iam.admin.v1.ServiceAccount] that was disabled by
            # [DisableServiceAccount][google.iam.admin.v1.IAM.DisableServiceAccount].
            #
            # If the service account is already enabled, then this method has no effect.
            #
            # If the service account was disabled by other means—for example, if Google
            # disabled the service account because it was compromised—you cannot use this
            # method to enable the service account.
            rpc :EnableServiceAccount, ::Google::Iam::Admin::V1::EnableServiceAccountRequest, ::Google::Protobuf::Empty
            # Disables a [ServiceAccount][google.iam.admin.v1.ServiceAccount] immediately.
            #
            # If an application uses the service account to authenticate, that
            # application can no longer call Google APIs or access Google Cloud
            # resources. Existing access tokens for the service account are rejected, and
            # requests for new access tokens will fail.
            #
            # To re-enable the service account, use [EnableServiceAccount][google.iam.admin.v1.IAM.EnableServiceAccount]. After you
            # re-enable the service account, its existing access tokens will be accepted,
            # and you can request new access tokens.
            #
            # To help avoid unplanned outages, we recommend that you disable the service
            # account before you delete it. Use this method to disable the service
            # account, then wait at least 24 hours and watch for unintended consequences.
            # If there are no unintended consequences, you can delete the service account
            # with [DeleteServiceAccount][google.iam.admin.v1.IAM.DeleteServiceAccount].
            rpc :DisableServiceAccount, ::Google::Iam::Admin::V1::DisableServiceAccountRequest, ::Google::Protobuf::Empty
            # Lists every [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey] for a service account.
            rpc :ListServiceAccountKeys, ::Google::Iam::Admin::V1::ListServiceAccountKeysRequest, ::Google::Iam::Admin::V1::ListServiceAccountKeysResponse
            # Gets a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey].
            rpc :GetServiceAccountKey, ::Google::Iam::Admin::V1::GetServiceAccountKeyRequest, ::Google::Iam::Admin::V1::ServiceAccountKey
            # Creates a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey].
            rpc :CreateServiceAccountKey, ::Google::Iam::Admin::V1::CreateServiceAccountKeyRequest, ::Google::Iam::Admin::V1::ServiceAccountKey
            # Creates a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey], using a public key that you provide.
            rpc :UploadServiceAccountKey, ::Google::Iam::Admin::V1::UploadServiceAccountKeyRequest, ::Google::Iam::Admin::V1::ServiceAccountKey
            # Deletes a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]. Deleting a service account key does not
            # revoke short-lived credentials that have been issued based on the service
            # account key.
            rpc :DeleteServiceAccountKey, ::Google::Iam::Admin::V1::DeleteServiceAccountKeyRequest, ::Google::Protobuf::Empty
            # **Note:** This method is deprecated. Use the
            # [`signBlob`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signBlob)
            # method in the IAM Service Account Credentials API instead. If you currently
            # use this method, see the [migration
            # guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
            # instructions.
            #
            # Signs a blob using the system-managed private key for a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            rpc :SignBlob, ::Google::Iam::Admin::V1::SignBlobRequest, ::Google::Iam::Admin::V1::SignBlobResponse
            # **Note:** This method is deprecated. Use the
            # [`signJwt`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signJwt)
            # method in the IAM Service Account Credentials API instead. If you currently
            # use this method, see the [migration
            # guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
            # instructions.
            #
            # Signs a JSON Web Token (JWT) using the system-managed private key for a
            # [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            rpc :SignJwt, ::Google::Iam::Admin::V1::SignJwtRequest, ::Google::Iam::Admin::V1::SignJwtResponse
            # Gets the IAM policy that is attached to a [ServiceAccount][google.iam.admin.v1.ServiceAccount]. This IAM
            # policy specifies which members have access to the service account.
            #
            # This method does not tell you whether the service account has been granted
            # any roles on other resources. To check whether a service account has role
            # grants on a resource, use the `getIamPolicy` method for that resource. For
            # example, to view the role grants for a project, call the Resource Manager
            # API's
            # [`projects.getIamPolicy`](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getIamPolicy)
            # method.
            rpc :GetIamPolicy, ::Google::Iam::V1::GetIamPolicyRequest, ::Google::Iam::V1::Policy
            # Sets the IAM policy that is attached to a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            #
            # Use this method to grant or revoke access to the service account. For
            # example, you could grant a member the ability to impersonate the service
            # account.
            #
            # This method does not enable the service account to access other resources.
            # To grant roles to a service account on a resource, follow these steps:
            #
            # 1. Call the resource's `getIamPolicy` method to get its current IAM policy.
            # 2. Edit the policy so that it binds the service account to an IAM role for
            # the resource.
            # 3. Call the resource's `setIamPolicy` method to update its IAM policy.
            #
            # For detailed instructions, see
            # [Granting roles to a service account for specific
            # resources](https://cloud.google.com/iam/help/service-accounts/granting-access-to-service-accounts).
            rpc :SetIamPolicy, ::Google::Iam::V1::SetIamPolicyRequest, ::Google::Iam::V1::Policy
            # Tests whether the caller has the specified permissions on a
            # [ServiceAccount][google.iam.admin.v1.ServiceAccount].
            rpc :TestIamPermissions, ::Google::Iam::V1::TestIamPermissionsRequest, ::Google::Iam::V1::TestIamPermissionsResponse
            # Lists roles that can be granted on a Google Cloud resource. A role is
            # grantable if the IAM policy for the resource can contain bindings to the
            # role.
            rpc :QueryGrantableRoles, ::Google::Iam::Admin::V1::QueryGrantableRolesRequest, ::Google::Iam::Admin::V1::QueryGrantableRolesResponse
            # Lists every predefined [Role][google.iam.admin.v1.Role] that IAM supports, or every custom role
            # that is defined for an organization or project.
            rpc :ListRoles, ::Google::Iam::Admin::V1::ListRolesRequest, ::Google::Iam::Admin::V1::ListRolesResponse
            # Gets the definition of a [Role][google.iam.admin.v1.Role].
            rpc :GetRole, ::Google::Iam::Admin::V1::GetRoleRequest, ::Google::Iam::Admin::V1::Role
            # Creates a new custom [Role][google.iam.admin.v1.Role].
            rpc :CreateRole, ::Google::Iam::Admin::V1::CreateRoleRequest, ::Google::Iam::Admin::V1::Role
            # Updates the definition of a custom [Role][google.iam.admin.v1.Role].
            rpc :UpdateRole, ::Google::Iam::Admin::V1::UpdateRoleRequest, ::Google::Iam::Admin::V1::Role
            # Deletes a custom [Role][google.iam.admin.v1.Role].
            #
            # When you delete a custom role, the following changes occur immediately:
            #
            # * You cannot bind a member to the custom role in an IAM
            # [Policy][google.iam.v1.Policy].
            # * Existing bindings to the custom role are not changed, but they have no
            # effect.
            # * By default, the response from [ListRoles][google.iam.admin.v1.IAM.ListRoles] does not include the custom
            # role.
            #
            # You have 7 days to undelete the custom role. After 7 days, the following
            # changes occur:
            #
            # * The custom role is permanently deleted and cannot be recovered.
            # * If an IAM policy contains a binding to the custom role, the binding is
            # permanently removed.
            rpc :DeleteRole, ::Google::Iam::Admin::V1::DeleteRoleRequest, ::Google::Iam::Admin::V1::Role
            # Undeletes a custom [Role][google.iam.admin.v1.Role].
            rpc :UndeleteRole, ::Google::Iam::Admin::V1::UndeleteRoleRequest, ::Google::Iam::Admin::V1::Role
            # Lists every permission that you can test on a resource. A permission is
            # testable if you can check whether a member has that permission on the
            # resource.
            rpc :QueryTestablePermissions, ::Google::Iam::Admin::V1::QueryTestablePermissionsRequest, ::Google::Iam::Admin::V1::QueryTestablePermissionsResponse
            # Returns a list of services that allow you to opt into audit logs that are
            # not generated by default.
            #
            # To learn more about audit logs, see the [Logging
            # documentation](https://cloud.google.com/logging/docs/audit).
            rpc :QueryAuditableServices, ::Google::Iam::Admin::V1::QueryAuditableServicesRequest, ::Google::Iam::Admin::V1::QueryAuditableServicesResponse
            # Lints, or validates, an IAM policy. Currently checks the
            # [google.iam.v1.Binding.condition][google.iam.v1.Binding.condition] field, which contains a condition
            # expression for a role binding.
            #
            # Successful calls to this method always return an HTTP `200 OK` status code,
            # even if the linter detects an issue in the IAM policy.
            rpc :LintPolicy, ::Google::Iam::Admin::V1::LintPolicyRequest, ::Google::Iam::Admin::V1::LintPolicyResponse
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
