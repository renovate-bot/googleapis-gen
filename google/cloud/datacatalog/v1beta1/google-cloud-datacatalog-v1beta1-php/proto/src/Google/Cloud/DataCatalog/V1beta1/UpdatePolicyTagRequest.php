<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datacatalog/v1beta1/policytagmanager.proto

namespace Google\Cloud\DataCatalog\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [UpdatePolicyTag][google.cloud.datacatalog.v1beta1.PolicyTagManager.UpdatePolicyTag].
 *
 * Generated from protobuf message <code>google.cloud.datacatalog.v1beta1.UpdatePolicyTagRequest</code>
 */
class UpdatePolicyTagRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The policy tag to update. Only the description, display_name, and
     * parent_policy_tag fields can be updated.
     *
     * Generated from protobuf field <code>.google.cloud.datacatalog.v1beta1.PolicyTag policy_tag = 1;</code>
     */
    protected $policy_tag = null;
    /**
     * The update mask applies to the resource. Only display_name, description and
     * parent_policy_tag can be updated and thus can be listed in the mask. If
     * update_mask is not provided, all allowed fields (i.e. display_name,
     * description and parent) will be updated. For more information including the
     * `FieldMask` definition, see
     * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
     * If not set, defaults to all of the fields that are allowed to update.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     */
    protected $update_mask = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\DataCatalog\V1beta1\PolicyTag $policy_tag
     *           The policy tag to update. Only the description, display_name, and
     *           parent_policy_tag fields can be updated.
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           The update mask applies to the resource. Only display_name, description and
     *           parent_policy_tag can be updated and thus can be listed in the mask. If
     *           update_mask is not provided, all allowed fields (i.e. display_name,
     *           description and parent) will be updated. For more information including the
     *           `FieldMask` definition, see
     *           https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
     *           If not set, defaults to all of the fields that are allowed to update.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Datacatalog\V1Beta1\Policytagmanager::initOnce();
        parent::__construct($data);
    }

    /**
     * The policy tag to update. Only the description, display_name, and
     * parent_policy_tag fields can be updated.
     *
     * Generated from protobuf field <code>.google.cloud.datacatalog.v1beta1.PolicyTag policy_tag = 1;</code>
     * @return \Google\Cloud\DataCatalog\V1beta1\PolicyTag|null
     */
    public function getPolicyTag()
    {
        return $this->policy_tag;
    }

    public function hasPolicyTag()
    {
        return isset($this->policy_tag);
    }

    public function clearPolicyTag()
    {
        unset($this->policy_tag);
    }

    /**
     * The policy tag to update. Only the description, display_name, and
     * parent_policy_tag fields can be updated.
     *
     * Generated from protobuf field <code>.google.cloud.datacatalog.v1beta1.PolicyTag policy_tag = 1;</code>
     * @param \Google\Cloud\DataCatalog\V1beta1\PolicyTag $var
     * @return $this
     */
    public function setPolicyTag($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DataCatalog\V1beta1\PolicyTag::class);
        $this->policy_tag = $var;

        return $this;
    }

    /**
     * The update mask applies to the resource. Only display_name, description and
     * parent_policy_tag can be updated and thus can be listed in the mask. If
     * update_mask is not provided, all allowed fields (i.e. display_name,
     * description and parent) will be updated. For more information including the
     * `FieldMask` definition, see
     * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
     * If not set, defaults to all of the fields that are allowed to update.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * The update mask applies to the resource. Only display_name, description and
     * parent_policy_tag can be updated and thus can be listed in the mask. If
     * update_mask is not provided, all allowed fields (i.e. display_name,
     * description and parent) will be updated. For more information including the
     * `FieldMask` definition, see
     * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
     * If not set, defaults to all of the fields that are allowed to update.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

}

