// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/datacatalog/v1beta1/policytagmanagerserialization.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.DataCatalog.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/datacatalog/v1beta1/policytagmanagerserialization.proto</summary>
  public static partial class PolicytagmanagerserializationReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/datacatalog/v1beta1/policytagmanagerserialization.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PolicytagmanagerserializationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkRnb29nbGUvY2xvdWQvZGF0YWNhdGFsb2cvdjFiZXRhMS9wb2xpY3l0YWdt",
            "YW5hZ2Vyc2VyaWFsaXphdGlvbi5wcm90bxIgZ29vZ2xlLmNsb3VkLmRhdGFj",
            "YXRhbG9nLnYxYmV0YTEaHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8a",
            "H2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aGWdvb2dsZS9hcGkv",
            "cmVzb3VyY2UucHJvdG8aN2dvb2dsZS9jbG91ZC9kYXRhY2F0YWxvZy92MWJl",
            "dGExL3BvbGljeXRhZ21hbmFnZXIucHJvdG8aGmdvb2dsZS9pYW0vdjEvcG9s",
            "aWN5LnByb3RvGhdnb29nbGUvYXBpL2NsaWVudC5wcm90byKQAQoSU2VyaWFs",
            "aXplZFRheG9ub215EhkKDGRpc3BsYXlfbmFtZRgBIAEoCUID4EECEhMKC2Rl",
            "c2NyaXB0aW9uGAIgASgJEkoKC3BvbGljeV90YWdzGAMgAygLMjUuZ29vZ2xl",
            "LmNsb3VkLmRhdGFjYXRhbG9nLnYxYmV0YTEuU2VyaWFsaXplZFBvbGljeVRh",
            "ZyKXAQoTU2VyaWFsaXplZFBvbGljeVRhZxIZCgxkaXNwbGF5X25hbWUYAiAB",
            "KAlCA+BBAhITCgtkZXNjcmlwdGlvbhgDIAEoCRJQChFjaGlsZF9wb2xpY3lf",
            "dGFncxgEIAMoCzI1Lmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGEx",
            "LlNlcmlhbGl6ZWRQb2xpY3lUYWciqQEKF0ltcG9ydFRheG9ub21pZXNSZXF1",
            "ZXN0EjsKBnBhcmVudBgBIAEoCUIr4EEC+kElEiNkYXRhY2F0YWxvZy5nb29n",
            "bGVhcGlzLmNvbS9UYXhvbm9teRJHCg1pbmxpbmVfc291cmNlGAIgASgLMi4u",
            "Z29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxYmV0YTEuSW5saW5lU291cmNl",
            "SABCCAoGc291cmNlIl0KDElubGluZVNvdXJjZRJNCgp0YXhvbm9taWVzGAEg",
            "AygLMjQuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxYmV0YTEuU2VyaWFs",
            "aXplZFRheG9ub215QgPgQQIiWgoYSW1wb3J0VGF4b25vbWllc1Jlc3BvbnNl",
            "Ej4KCnRheG9ub21pZXMYASADKAsyKi5nb29nbGUuY2xvdWQuZGF0YWNhdGFs",
            "b2cudjFiZXRhMS5UYXhvbm9teSLHAQoXRXhwb3J0VGF4b25vbWllc1JlcXVl",
            "c3QSOwoGcGFyZW50GAEgASgJQivgQQL6QSUSI2RhdGFjYXRhbG9nLmdvb2ds",
            "ZWFwaXMuY29tL1RheG9ub215Ej8KCnRheG9ub21pZXMYAiADKAlCK+BBAvpB",
            "JQojZGF0YWNhdGFsb2cuZ29vZ2xlYXBpcy5jb20vVGF4b25vbXkSHwoVc2Vy",
            "aWFsaXplZF90YXhvbm9taWVzGAMgASgISABCDQoLZGVzdGluYXRpb24iZAoY",
            "RXhwb3J0VGF4b25vbWllc1Jlc3BvbnNlEkgKCnRheG9ub21pZXMYASADKAsy",
            "NC5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5TZXJpYWxpemVk",
            "VGF4b25vbXkykgQKHVBvbGljeVRhZ01hbmFnZXJTZXJpYWxpemF0aW9uEtAB",
            "ChBJbXBvcnRUYXhvbm9taWVzEjkuZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9n",
            "LnYxYmV0YTEuSW1wb3J0VGF4b25vbWllc1JlcXVlc3QaOi5nb29nbGUuY2xv",
            "dWQuZGF0YWNhdGFsb2cudjFiZXRhMS5JbXBvcnRUYXhvbm9taWVzUmVzcG9u",
            "c2UiRYLT5JMCPyI6L3YxYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0",
            "aW9ucy8qfS90YXhvbm9taWVzOmltcG9ydDoBKhLNAQoQRXhwb3J0VGF4b25v",
            "bWllcxI5Lmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLkV4cG9y",
            "dFRheG9ub21pZXNSZXF1ZXN0GjouZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9n",
            "LnYxYmV0YTEuRXhwb3J0VGF4b25vbWllc1Jlc3BvbnNlIkKC0+STAjwSOi92",
            "MWJldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vdGF4b25v",
            "bWllczpleHBvcnQaTspBGmRhdGFjYXRhbG9nLmdvb2dsZWFwaXMuY29t0kEu",
            "aHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9y",
            "bUKIAgokY29tLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExQiJQ",
            "b2xpY3lUYWdNYW5hZ2VyU2VyaWFsaXphdGlvblByb3RvUAFaS2dvb2dsZS5n",
            "b2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvY2xvdWQvZGF0YWNhdGFs",
            "b2cvdjFiZXRhMTtkYXRhY2F0YWxvZ/gBAaoCIEdvb2dsZS5DbG91ZC5EYXRh",
            "Q2F0YWxvZy5WMUJldGExygIgR29vZ2xlXENsb3VkXERhdGFDYXRhbG9nXFYx",
            "YmV0YTHqAiNHb29nbGU6OkNsb3VkOjpEYXRhQ2F0YWxvZzo6VjFiZXRhMWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.DataCatalog.V1Beta1.PolicytagmanagerReflection.Descriptor, global::Google.Cloud.Iam.V1.PolicyReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.SerializedTaxonomy), global::Google.Cloud.DataCatalog.V1Beta1.SerializedTaxonomy.Parser, new[]{ "DisplayName", "Description", "PolicyTags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.SerializedPolicyTag), global::Google.Cloud.DataCatalog.V1Beta1.SerializedPolicyTag.Parser, new[]{ "DisplayName", "Description", "ChildPolicyTags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.ImportTaxonomiesRequest), global::Google.Cloud.DataCatalog.V1Beta1.ImportTaxonomiesRequest.Parser, new[]{ "Parent", "InlineSource" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.InlineSource), global::Google.Cloud.DataCatalog.V1Beta1.InlineSource.Parser, new[]{ "Taxonomies" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.ImportTaxonomiesResponse), global::Google.Cloud.DataCatalog.V1Beta1.ImportTaxonomiesResponse.Parser, new[]{ "Taxonomies" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.ExportTaxonomiesRequest), global::Google.Cloud.DataCatalog.V1Beta1.ExportTaxonomiesRequest.Parser, new[]{ "Parent", "Taxonomies", "SerializedTaxonomies" }, new[]{ "Destination" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.ExportTaxonomiesResponse), global::Google.Cloud.DataCatalog.V1Beta1.ExportTaxonomiesResponse.Parser, new[]{ "Taxonomies" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Message capturing a taxonomy and its policy tag hierarchy as a nested proto.
  /// Used for taxonomy import/export and mutation.
  /// </summary>
  public sealed partial class SerializedTaxonomy : pb::IMessage<SerializedTaxonomy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SerializedTaxonomy> _parser = new pb::MessageParser<SerializedTaxonomy>(() => new SerializedTaxonomy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SerializedTaxonomy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.PolicytagmanagerserializationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializedTaxonomy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializedTaxonomy(SerializedTaxonomy other) : this() {
      displayName_ = other.displayName_;
      description_ = other.description_;
      policyTags_ = other.policyTags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializedTaxonomy Clone() {
      return new SerializedTaxonomy(this);
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 1;
    private string displayName_ = "";
    /// <summary>
    /// Required. Display name of the taxonomy. Max 200 bytes when encoded in UTF-8.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Description of the serialized taxonomy. The length of the
    /// description is limited to 2000 bytes when encoded in UTF-8. If not set,
    /// defaults to an empty description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "policy_tags" field.</summary>
    public const int PolicyTagsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.DataCatalog.V1Beta1.SerializedPolicyTag> _repeated_policyTags_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.DataCatalog.V1Beta1.SerializedPolicyTag.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.SerializedPolicyTag> policyTags_ = new pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.SerializedPolicyTag>();
    /// <summary>
    /// Top level policy tags associated with the taxonomy if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.SerializedPolicyTag> PolicyTags {
      get { return policyTags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SerializedTaxonomy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SerializedTaxonomy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if (Description != other.Description) return false;
      if(!policyTags_.Equals(other.policyTags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= policyTags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      policyTags_.WriteTo(output, _repeated_policyTags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      policyTags_.WriteTo(ref output, _repeated_policyTags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += policyTags_.CalculateSize(_repeated_policyTags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SerializedTaxonomy other) {
      if (other == null) {
        return;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      policyTags_.Add(other.policyTags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            policyTags_.AddEntriesFrom(input, _repeated_policyTags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            policyTags_.AddEntriesFrom(ref input, _repeated_policyTags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message representing one policy tag when exported as a nested proto.
  /// </summary>
  public sealed partial class SerializedPolicyTag : pb::IMessage<SerializedPolicyTag>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SerializedPolicyTag> _parser = new pb::MessageParser<SerializedPolicyTag>(() => new SerializedPolicyTag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SerializedPolicyTag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.PolicytagmanagerserializationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializedPolicyTag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializedPolicyTag(SerializedPolicyTag other) : this() {
      displayName_ = other.displayName_;
      description_ = other.description_;
      childPolicyTags_ = other.childPolicyTags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializedPolicyTag Clone() {
      return new SerializedPolicyTag(this);
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// Required. Display name of the policy tag. Max 200 bytes when encoded in UTF-8.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Description of the serialized policy tag. The length of the
    /// description is limited to 2000 bytes when encoded in UTF-8. If not set,
    /// defaults to an empty description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "child_policy_tags" field.</summary>
    public const int ChildPolicyTagsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.DataCatalog.V1Beta1.SerializedPolicyTag> _repeated_childPolicyTags_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.DataCatalog.V1Beta1.SerializedPolicyTag.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.SerializedPolicyTag> childPolicyTags_ = new pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.SerializedPolicyTag>();
    /// <summary>
    /// Children of the policy tag if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.SerializedPolicyTag> ChildPolicyTags {
      get { return childPolicyTags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SerializedPolicyTag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SerializedPolicyTag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if (Description != other.Description) return false;
      if(!childPolicyTags_.Equals(other.childPolicyTags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= childPolicyTags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      childPolicyTags_.WriteTo(output, _repeated_childPolicyTags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      childPolicyTags_.WriteTo(ref output, _repeated_childPolicyTags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += childPolicyTags_.CalculateSize(_repeated_childPolicyTags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SerializedPolicyTag other) {
      if (other == null) {
        return;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      childPolicyTags_.Add(other.childPolicyTags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            childPolicyTags_.AddEntriesFrom(input, _repeated_childPolicyTags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            childPolicyTags_.AddEntriesFrom(ref input, _repeated_childPolicyTags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for
  /// [ImportTaxonomies][google.cloud.datacatalog.v1beta1.PolicyTagManagerSerialization.ImportTaxonomies].
  /// </summary>
  public sealed partial class ImportTaxonomiesRequest : pb::IMessage<ImportTaxonomiesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImportTaxonomiesRequest> _parser = new pb::MessageParser<ImportTaxonomiesRequest>(() => new ImportTaxonomiesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImportTaxonomiesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.PolicytagmanagerserializationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportTaxonomiesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportTaxonomiesRequest(ImportTaxonomiesRequest other) : this() {
      parent_ = other.parent_;
      switch (other.SourceCase) {
        case SourceOneofCase.InlineSource:
          InlineSource = other.InlineSource.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportTaxonomiesRequest Clone() {
      return new ImportTaxonomiesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Resource name of project that the newly created taxonomies will
    /// belong to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inline_source" field.</summary>
    public const int InlineSourceFieldNumber = 2;
    /// <summary>
    /// Inline source used for taxonomies import
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataCatalog.V1Beta1.InlineSource InlineSource {
      get { return sourceCase_ == SourceOneofCase.InlineSource ? (global::Google.Cloud.DataCatalog.V1Beta1.InlineSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.InlineSource;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      InlineSource = 2,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImportTaxonomiesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImportTaxonomiesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(InlineSource, other.InlineSource)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (sourceCase_ == SourceOneofCase.InlineSource) hash ^= InlineSource.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (sourceCase_ == SourceOneofCase.InlineSource) {
        output.WriteRawTag(18);
        output.WriteMessage(InlineSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (sourceCase_ == SourceOneofCase.InlineSource) {
        output.WriteRawTag(18);
        output.WriteMessage(InlineSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (sourceCase_ == SourceOneofCase.InlineSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InlineSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImportTaxonomiesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.InlineSource:
          if (InlineSource == null) {
            InlineSource = new global::Google.Cloud.DataCatalog.V1Beta1.InlineSource();
          }
          InlineSource.MergeFrom(other.InlineSource);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.DataCatalog.V1Beta1.InlineSource subBuilder = new global::Google.Cloud.DataCatalog.V1Beta1.InlineSource();
            if (sourceCase_ == SourceOneofCase.InlineSource) {
              subBuilder.MergeFrom(InlineSource);
            }
            input.ReadMessage(subBuilder);
            InlineSource = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.DataCatalog.V1Beta1.InlineSource subBuilder = new global::Google.Cloud.DataCatalog.V1Beta1.InlineSource();
            if (sourceCase_ == SourceOneofCase.InlineSource) {
              subBuilder.MergeFrom(InlineSource);
            }
            input.ReadMessage(subBuilder);
            InlineSource = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Inline source used for taxonomies import.
  /// </summary>
  public sealed partial class InlineSource : pb::IMessage<InlineSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InlineSource> _parser = new pb::MessageParser<InlineSource>(() => new InlineSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InlineSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.PolicytagmanagerserializationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InlineSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InlineSource(InlineSource other) : this() {
      taxonomies_ = other.taxonomies_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InlineSource Clone() {
      return new InlineSource(this);
    }

    /// <summary>Field number for the "taxonomies" field.</summary>
    public const int TaxonomiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.DataCatalog.V1Beta1.SerializedTaxonomy> _repeated_taxonomies_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.DataCatalog.V1Beta1.SerializedTaxonomy.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.SerializedTaxonomy> taxonomies_ = new pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.SerializedTaxonomy>();
    /// <summary>
    /// Required. Taxonomies to be imported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.SerializedTaxonomy> Taxonomies {
      get { return taxonomies_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InlineSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InlineSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!taxonomies_.Equals(other.taxonomies_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= taxonomies_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      taxonomies_.WriteTo(output, _repeated_taxonomies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      taxonomies_.WriteTo(ref output, _repeated_taxonomies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += taxonomies_.CalculateSize(_repeated_taxonomies_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InlineSource other) {
      if (other == null) {
        return;
      }
      taxonomies_.Add(other.taxonomies_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            taxonomies_.AddEntriesFrom(input, _repeated_taxonomies_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            taxonomies_.AddEntriesFrom(ref input, _repeated_taxonomies_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for
  /// [ImportTaxonomies][google.cloud.datacatalog.v1beta1.PolicyTagManagerSerialization.ImportTaxonomies].
  /// </summary>
  public sealed partial class ImportTaxonomiesResponse : pb::IMessage<ImportTaxonomiesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImportTaxonomiesResponse> _parser = new pb::MessageParser<ImportTaxonomiesResponse>(() => new ImportTaxonomiesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImportTaxonomiesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.PolicytagmanagerserializationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportTaxonomiesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportTaxonomiesResponse(ImportTaxonomiesResponse other) : this() {
      taxonomies_ = other.taxonomies_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportTaxonomiesResponse Clone() {
      return new ImportTaxonomiesResponse(this);
    }

    /// <summary>Field number for the "taxonomies" field.</summary>
    public const int TaxonomiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.DataCatalog.V1Beta1.Taxonomy> _repeated_taxonomies_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.DataCatalog.V1Beta1.Taxonomy.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.Taxonomy> taxonomies_ = new pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.Taxonomy>();
    /// <summary>
    /// Taxonomies that were imported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.Taxonomy> Taxonomies {
      get { return taxonomies_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImportTaxonomiesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImportTaxonomiesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!taxonomies_.Equals(other.taxonomies_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= taxonomies_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      taxonomies_.WriteTo(output, _repeated_taxonomies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      taxonomies_.WriteTo(ref output, _repeated_taxonomies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += taxonomies_.CalculateSize(_repeated_taxonomies_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImportTaxonomiesResponse other) {
      if (other == null) {
        return;
      }
      taxonomies_.Add(other.taxonomies_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            taxonomies_.AddEntriesFrom(input, _repeated_taxonomies_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            taxonomies_.AddEntriesFrom(ref input, _repeated_taxonomies_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for
  /// [ExportTaxonomies][google.cloud.datacatalog.v1beta1.PolicyTagManagerSerialization.ExportTaxonomies].
  /// </summary>
  public sealed partial class ExportTaxonomiesRequest : pb::IMessage<ExportTaxonomiesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExportTaxonomiesRequest> _parser = new pb::MessageParser<ExportTaxonomiesRequest>(() => new ExportTaxonomiesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExportTaxonomiesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.PolicytagmanagerserializationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportTaxonomiesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportTaxonomiesRequest(ExportTaxonomiesRequest other) : this() {
      parent_ = other.parent_;
      taxonomies_ = other.taxonomies_.Clone();
      switch (other.DestinationCase) {
        case DestinationOneofCase.SerializedTaxonomies:
          SerializedTaxonomies = other.SerializedTaxonomies;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportTaxonomiesRequest Clone() {
      return new ExportTaxonomiesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Resource name of the project that taxonomies to be exported
    /// will share.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taxonomies" field.</summary>
    public const int TaxonomiesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_taxonomies_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> taxonomies_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. Resource names of the taxonomies to be exported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Taxonomies {
      get { return taxonomies_; }
    }

    /// <summary>Field number for the "serialized_taxonomies" field.</summary>
    public const int SerializedTaxonomiesFieldNumber = 3;
    /// <summary>
    /// Export taxonomies as serialized taxonomies.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SerializedTaxonomies {
      get { return destinationCase_ == DestinationOneofCase.SerializedTaxonomies ? (bool) destination_ : false; }
      set {
        destination_ = value;
        destinationCase_ = DestinationOneofCase.SerializedTaxonomies;
      }
    }

    private object destination_;
    /// <summary>Enum of possible cases for the "destination" oneof.</summary>
    public enum DestinationOneofCase {
      None = 0,
      SerializedTaxonomies = 3,
    }
    private DestinationOneofCase destinationCase_ = DestinationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationOneofCase DestinationCase {
      get { return destinationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDestination() {
      destinationCase_ = DestinationOneofCase.None;
      destination_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExportTaxonomiesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExportTaxonomiesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if(!taxonomies_.Equals(other.taxonomies_)) return false;
      if (SerializedTaxonomies != other.SerializedTaxonomies) return false;
      if (DestinationCase != other.DestinationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      hash ^= taxonomies_.GetHashCode();
      if (destinationCase_ == DestinationOneofCase.SerializedTaxonomies) hash ^= SerializedTaxonomies.GetHashCode();
      hash ^= (int) destinationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      taxonomies_.WriteTo(output, _repeated_taxonomies_codec);
      if (destinationCase_ == DestinationOneofCase.SerializedTaxonomies) {
        output.WriteRawTag(24);
        output.WriteBool(SerializedTaxonomies);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      taxonomies_.WriteTo(ref output, _repeated_taxonomies_codec);
      if (destinationCase_ == DestinationOneofCase.SerializedTaxonomies) {
        output.WriteRawTag(24);
        output.WriteBool(SerializedTaxonomies);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      size += taxonomies_.CalculateSize(_repeated_taxonomies_codec);
      if (destinationCase_ == DestinationOneofCase.SerializedTaxonomies) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExportTaxonomiesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      taxonomies_.Add(other.taxonomies_);
      switch (other.DestinationCase) {
        case DestinationOneofCase.SerializedTaxonomies:
          SerializedTaxonomies = other.SerializedTaxonomies;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            taxonomies_.AddEntriesFrom(input, _repeated_taxonomies_codec);
            break;
          }
          case 24: {
            SerializedTaxonomies = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            taxonomies_.AddEntriesFrom(ref input, _repeated_taxonomies_codec);
            break;
          }
          case 24: {
            SerializedTaxonomies = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for
  /// [ExportTaxonomies][google.cloud.datacatalog.v1beta1.PolicyTagManagerSerialization.ExportTaxonomies].
  /// </summary>
  public sealed partial class ExportTaxonomiesResponse : pb::IMessage<ExportTaxonomiesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExportTaxonomiesResponse> _parser = new pb::MessageParser<ExportTaxonomiesResponse>(() => new ExportTaxonomiesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExportTaxonomiesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.PolicytagmanagerserializationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportTaxonomiesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportTaxonomiesResponse(ExportTaxonomiesResponse other) : this() {
      taxonomies_ = other.taxonomies_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportTaxonomiesResponse Clone() {
      return new ExportTaxonomiesResponse(this);
    }

    /// <summary>Field number for the "taxonomies" field.</summary>
    public const int TaxonomiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.DataCatalog.V1Beta1.SerializedTaxonomy> _repeated_taxonomies_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.DataCatalog.V1Beta1.SerializedTaxonomy.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.SerializedTaxonomy> taxonomies_ = new pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.SerializedTaxonomy>();
    /// <summary>
    /// List of taxonomies and policy tags in a tree structure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.SerializedTaxonomy> Taxonomies {
      get { return taxonomies_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExportTaxonomiesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExportTaxonomiesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!taxonomies_.Equals(other.taxonomies_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= taxonomies_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      taxonomies_.WriteTo(output, _repeated_taxonomies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      taxonomies_.WriteTo(ref output, _repeated_taxonomies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += taxonomies_.CalculateSize(_repeated_taxonomies_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExportTaxonomiesResponse other) {
      if (other == null) {
        return;
      }
      taxonomies_.Add(other.taxonomies_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            taxonomies_.AddEntriesFrom(input, _repeated_taxonomies_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            taxonomies_.AddEntriesFrom(ref input, _repeated_taxonomies_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
