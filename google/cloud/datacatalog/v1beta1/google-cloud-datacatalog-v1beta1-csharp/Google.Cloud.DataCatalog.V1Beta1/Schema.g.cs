// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/datacatalog/v1beta1/schema.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.DataCatalog.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/datacatalog/v1beta1/schema.proto</summary>
  public static partial class SchemaReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/datacatalog/v1beta1/schema.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SchemaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1nb29nbGUvY2xvdWQvZGF0YWNhdGFsb2cvdjFiZXRhMS9zY2hlbWEucHJv",
            "dG8SIGdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExGh9nb29nbGUv",
            "YXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvIk4KBlNjaGVtYRJECgdjb2x1bW5z",
            "GAIgAygLMi4uZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYxYmV0YTEuQ29s",
            "dW1uU2NoZW1hQgPgQQIirAEKDENvbHVtblNjaGVtYRITCgZjb2x1bW4YBiAB",
            "KAlCA+BBAhIRCgR0eXBlGAEgASgJQgPgQQISGAoLZGVzY3JpcHRpb24YAiAB",
            "KAlCA+BBARIRCgRtb2RlGAMgASgJQgPgQQESRwoKc3ViY29sdW1ucxgHIAMo",
            "CzIuLmdvb2dsZS5jbG91ZC5kYXRhY2F0YWxvZy52MWJldGExLkNvbHVtblNj",
            "aGVtYUID4EEBQuQBCiRjb20uZ29vZ2xlLmNsb3VkLmRhdGFjYXRhbG9nLnYx",
            "YmV0YTFQAVpLZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBp",
            "cy9jbG91ZC9kYXRhY2F0YWxvZy92MWJldGExO2RhdGFjYXRhbG9n+AEBqgIg",
            "R29vZ2xlLkNsb3VkLkRhdGFDYXRhbG9nLlYxQmV0YTHKAiBHb29nbGVcQ2xv",
            "dWRcRGF0YUNhdGFsb2dcVjFiZXRhMeoCI0dvb2dsZTo6Q2xvdWQ6OkRhdGFD",
            "YXRhbG9nOjpWMWJldGExYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.Schema), global::Google.Cloud.DataCatalog.V1Beta1.Schema.Parser, new[]{ "Columns" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.ColumnSchema), global::Google.Cloud.DataCatalog.V1Beta1.ColumnSchema.Parser, new[]{ "Column", "Type", "Description", "Mode", "Subcolumns" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).
  /// </summary>
  public sealed partial class Schema : pb::IMessage<Schema>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schema> _parser = new pb::MessageParser<Schema>(() => new Schema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Schema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.SchemaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema(Schema other) : this() {
      columns_ = other.columns_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema Clone() {
      return new Schema(this);
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.DataCatalog.V1Beta1.ColumnSchema> _repeated_columns_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.DataCatalog.V1Beta1.ColumnSchema.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.ColumnSchema> columns_ = new pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.ColumnSchema>();
    /// <summary>
    /// Required. Schema of columns. A maximum of 10,000 columns and sub-columns can be
    /// specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.ColumnSchema> Columns {
      get { return columns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Schema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Schema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!columns_.Equals(other.columns_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= columns_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      columns_.WriteTo(output, _repeated_columns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      columns_.WriteTo(ref output, _repeated_columns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += columns_.CalculateSize(_repeated_columns_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Schema other) {
      if (other == null) {
        return;
      }
      columns_.Add(other.columns_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Representation of a column within a schema. Columns could be nested inside
  /// other columns.
  /// </summary>
  public sealed partial class ColumnSchema : pb::IMessage<ColumnSchema>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ColumnSchema> _parser = new pb::MessageParser<ColumnSchema>(() => new ColumnSchema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ColumnSchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.SchemaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnSchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnSchema(ColumnSchema other) : this() {
      column_ = other.column_;
      type_ = other.type_;
      description_ = other.description_;
      mode_ = other.mode_;
      subcolumns_ = other.subcolumns_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnSchema Clone() {
      return new ColumnSchema(this);
    }

    /// <summary>Field number for the "column" field.</summary>
    public const int ColumnFieldNumber = 6;
    private string column_ = "";
    /// <summary>
    /// Required. Name of the column.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Column {
      get { return column_; }
      set {
        column_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    /// <summary>
    /// Required. Type of the column.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Optional. Description of the column. Default value is an empty string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 3;
    private string mode_ = "";
    /// <summary>
    /// Optional. A column's mode indicates whether the values in this column are required,
    /// nullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are supported.
    /// Default mode is `NULLABLE`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mode {
      get { return mode_; }
      set {
        mode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subcolumns" field.</summary>
    public const int SubcolumnsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Cloud.DataCatalog.V1Beta1.ColumnSchema> _repeated_subcolumns_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Cloud.DataCatalog.V1Beta1.ColumnSchema.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.ColumnSchema> subcolumns_ = new pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.ColumnSchema>();
    /// <summary>
    /// Optional. Schema of sub-columns. A column can have zero or more sub-columns.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DataCatalog.V1Beta1.ColumnSchema> Subcolumns {
      get { return subcolumns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ColumnSchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ColumnSchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Column != other.Column) return false;
      if (Type != other.Type) return false;
      if (Description != other.Description) return false;
      if (Mode != other.Mode) return false;
      if(!subcolumns_.Equals(other.subcolumns_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Column.Length != 0) hash ^= Column.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Mode.Length != 0) hash ^= Mode.GetHashCode();
      hash ^= subcolumns_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Mode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Mode);
      }
      if (Column.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Column);
      }
      subcolumns_.WriteTo(output, _repeated_subcolumns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Mode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Mode);
      }
      if (Column.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Column);
      }
      subcolumns_.WriteTo(ref output, _repeated_subcolumns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Column.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Column);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Mode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mode);
      }
      size += subcolumns_.CalculateSize(_repeated_subcolumns_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ColumnSchema other) {
      if (other == null) {
        return;
      }
      if (other.Column.Length != 0) {
        Column = other.Column;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Mode.Length != 0) {
        Mode = other.Mode;
      }
      subcolumns_.Add(other.subcolumns_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Mode = input.ReadString();
            break;
          }
          case 50: {
            Column = input.ReadString();
            break;
          }
          case 58: {
            subcolumns_.AddEntriesFrom(input, _repeated_subcolumns_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Mode = input.ReadString();
            break;
          }
          case 50: {
            Column = input.ReadString();
            break;
          }
          case 58: {
            subcolumns_.AddEntriesFrom(ref input, _repeated_subcolumns_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
