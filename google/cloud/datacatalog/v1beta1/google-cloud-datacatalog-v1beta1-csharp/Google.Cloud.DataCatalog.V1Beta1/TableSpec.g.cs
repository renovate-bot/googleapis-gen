// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/datacatalog/v1beta1/table_spec.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.DataCatalog.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/datacatalog/v1beta1/table_spec.proto</summary>
  public static partial class TableSpecReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/datacatalog/v1beta1/table_spec.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TableSpecReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFnb29nbGUvY2xvdWQvZGF0YWNhdGFsb2cvdjFiZXRhMS90YWJsZV9zcGVj",
            "LnByb3RvEiBnb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMRofZ29v",
            "Z2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNv",
            "dXJjZS5wcm90byL3AQoRQmlnUXVlcnlUYWJsZVNwZWMSUQoRdGFibGVfc291",
            "cmNlX3R5cGUYASABKA4yMS5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFi",
            "ZXRhMS5UYWJsZVNvdXJjZVR5cGVCA+BBAxI/Cgl2aWV3X3NwZWMYAiABKAsy",
            "Ki5nb29nbGUuY2xvdWQuZGF0YWNhdGFsb2cudjFiZXRhMS5WaWV3U3BlY0gA",
            "EkEKCnRhYmxlX3NwZWMYAyABKAsyKy5nb29nbGUuY2xvdWQuZGF0YWNhdGFs",
            "b2cudjFiZXRhMS5UYWJsZVNwZWNIAEILCgl0eXBlX3NwZWMiIwoIVmlld1Nw",
            "ZWMSFwoKdmlld19xdWVyeRgBIAEoCUID4EEDIkwKCVRhYmxlU3BlYxI/Cg1n",
            "cm91cGVkX2VudHJ5GAEgASgJQijgQQP6QSIKIGRhdGFjYXRhbG9nLmdvb2ds",
            "ZWFwaXMuY29tL0VudHJ5IokBChdCaWdRdWVyeURhdGVTaGFyZGVkU3BlYxI5",
            "CgdkYXRhc2V0GAEgASgJQijgQQP6QSIKIGRhdGFjYXRhbG9nLmdvb2dsZWFw",
            "aXMuY29tL0VudHJ5EhkKDHRhYmxlX3ByZWZpeBgCIAEoCUID4EEDEhgKC3No",
            "YXJkX2NvdW50GAMgASgDQgPgQQMqWwoPVGFibGVTb3VyY2VUeXBlEiEKHVRB",
            "QkxFX1NPVVJDRV9UWVBFX1VOU1BFQ0lGSUVEEAASEQoNQklHUVVFUllfVklF",
            "VxACEhIKDkJJR1FVRVJZX1RBQkxFEAVC5AEKJGNvbS5nb29nbGUuY2xvdWQu",
            "ZGF0YWNhdGFsb2cudjFiZXRhMVABWktnb29nbGUuZ29sYW5nLm9yZy9nZW5w",
            "cm90by9nb29nbGVhcGlzL2Nsb3VkL2RhdGFjYXRhbG9nL3YxYmV0YTE7ZGF0",
            "YWNhdGFsb2f4AQGqAiBHb29nbGUuQ2xvdWQuRGF0YUNhdGFsb2cuVjFCZXRh",
            "McoCIEdvb2dsZVxDbG91ZFxEYXRhQ2F0YWxvZ1xWMWJldGEx6gIjR29vZ2xl",
            "OjpDbG91ZDo6RGF0YUNhdGFsb2c6OlYxYmV0YTFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.DataCatalog.V1Beta1.TableSourceType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.BigQueryTableSpec), global::Google.Cloud.DataCatalog.V1Beta1.BigQueryTableSpec.Parser, new[]{ "TableSourceType", "ViewSpec", "TableSpec" }, new[]{ "TypeSpec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.ViewSpec), global::Google.Cloud.DataCatalog.V1Beta1.ViewSpec.Parser, new[]{ "ViewQuery" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.TableSpec), global::Google.Cloud.DataCatalog.V1Beta1.TableSpec.Parser, new[]{ "GroupedEntry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataCatalog.V1Beta1.BigQueryDateShardedSpec), global::Google.Cloud.DataCatalog.V1Beta1.BigQueryDateShardedSpec.Parser, new[]{ "Dataset", "TablePrefix", "ShardCount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Table source type.
  /// </summary>
  public enum TableSourceType {
    /// <summary>
    /// Default unknown type.
    /// </summary>
    [pbr::OriginalName("TABLE_SOURCE_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Table view.
    /// </summary>
    [pbr::OriginalName("BIGQUERY_VIEW")] BigqueryView = 2,
    /// <summary>
    /// BigQuery native table.
    /// </summary>
    [pbr::OriginalName("BIGQUERY_TABLE")] BigqueryTable = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Describes a BigQuery table.
  /// </summary>
  public sealed partial class BigQueryTableSpec : pb::IMessage<BigQueryTableSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BigQueryTableSpec> _parser = new pb::MessageParser<BigQueryTableSpec>(() => new BigQueryTableSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BigQueryTableSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.TableSpecReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryTableSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryTableSpec(BigQueryTableSpec other) : this() {
      tableSourceType_ = other.tableSourceType_;
      switch (other.TypeSpecCase) {
        case TypeSpecOneofCase.ViewSpec:
          ViewSpec = other.ViewSpec.Clone();
          break;
        case TypeSpecOneofCase.TableSpec:
          TableSpec = other.TableSpec.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryTableSpec Clone() {
      return new BigQueryTableSpec(this);
    }

    /// <summary>Field number for the "table_source_type" field.</summary>
    public const int TableSourceTypeFieldNumber = 1;
    private global::Google.Cloud.DataCatalog.V1Beta1.TableSourceType tableSourceType_ = global::Google.Cloud.DataCatalog.V1Beta1.TableSourceType.Unspecified;
    /// <summary>
    /// Output only. The table source type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataCatalog.V1Beta1.TableSourceType TableSourceType {
      get { return tableSourceType_; }
      set {
        tableSourceType_ = value;
      }
    }

    /// <summary>Field number for the "view_spec" field.</summary>
    public const int ViewSpecFieldNumber = 2;
    /// <summary>
    /// Table view specification. This field should only be populated if
    /// `table_source_type` is `BIGQUERY_VIEW`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataCatalog.V1Beta1.ViewSpec ViewSpec {
      get { return typeSpecCase_ == TypeSpecOneofCase.ViewSpec ? (global::Google.Cloud.DataCatalog.V1Beta1.ViewSpec) typeSpec_ : null; }
      set {
        typeSpec_ = value;
        typeSpecCase_ = value == null ? TypeSpecOneofCase.None : TypeSpecOneofCase.ViewSpec;
      }
    }

    /// <summary>Field number for the "table_spec" field.</summary>
    public const int TableSpecFieldNumber = 3;
    /// <summary>
    /// Spec of a BigQuery table. This field should only be populated if
    /// `table_source_type` is `BIGQUERY_TABLE`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataCatalog.V1Beta1.TableSpec TableSpec {
      get { return typeSpecCase_ == TypeSpecOneofCase.TableSpec ? (global::Google.Cloud.DataCatalog.V1Beta1.TableSpec) typeSpec_ : null; }
      set {
        typeSpec_ = value;
        typeSpecCase_ = value == null ? TypeSpecOneofCase.None : TypeSpecOneofCase.TableSpec;
      }
    }

    private object typeSpec_;
    /// <summary>Enum of possible cases for the "type_spec" oneof.</summary>
    public enum TypeSpecOneofCase {
      None = 0,
      ViewSpec = 2,
      TableSpec = 3,
    }
    private TypeSpecOneofCase typeSpecCase_ = TypeSpecOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeSpecOneofCase TypeSpecCase {
      get { return typeSpecCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTypeSpec() {
      typeSpecCase_ = TypeSpecOneofCase.None;
      typeSpec_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BigQueryTableSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BigQueryTableSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableSourceType != other.TableSourceType) return false;
      if (!object.Equals(ViewSpec, other.ViewSpec)) return false;
      if (!object.Equals(TableSpec, other.TableSpec)) return false;
      if (TypeSpecCase != other.TypeSpecCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableSourceType != global::Google.Cloud.DataCatalog.V1Beta1.TableSourceType.Unspecified) hash ^= TableSourceType.GetHashCode();
      if (typeSpecCase_ == TypeSpecOneofCase.ViewSpec) hash ^= ViewSpec.GetHashCode();
      if (typeSpecCase_ == TypeSpecOneofCase.TableSpec) hash ^= TableSpec.GetHashCode();
      hash ^= (int) typeSpecCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableSourceType != global::Google.Cloud.DataCatalog.V1Beta1.TableSourceType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TableSourceType);
      }
      if (typeSpecCase_ == TypeSpecOneofCase.ViewSpec) {
        output.WriteRawTag(18);
        output.WriteMessage(ViewSpec);
      }
      if (typeSpecCase_ == TypeSpecOneofCase.TableSpec) {
        output.WriteRawTag(26);
        output.WriteMessage(TableSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableSourceType != global::Google.Cloud.DataCatalog.V1Beta1.TableSourceType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TableSourceType);
      }
      if (typeSpecCase_ == TypeSpecOneofCase.ViewSpec) {
        output.WriteRawTag(18);
        output.WriteMessage(ViewSpec);
      }
      if (typeSpecCase_ == TypeSpecOneofCase.TableSpec) {
        output.WriteRawTag(26);
        output.WriteMessage(TableSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableSourceType != global::Google.Cloud.DataCatalog.V1Beta1.TableSourceType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TableSourceType);
      }
      if (typeSpecCase_ == TypeSpecOneofCase.ViewSpec) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ViewSpec);
      }
      if (typeSpecCase_ == TypeSpecOneofCase.TableSpec) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableSpec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BigQueryTableSpec other) {
      if (other == null) {
        return;
      }
      if (other.TableSourceType != global::Google.Cloud.DataCatalog.V1Beta1.TableSourceType.Unspecified) {
        TableSourceType = other.TableSourceType;
      }
      switch (other.TypeSpecCase) {
        case TypeSpecOneofCase.ViewSpec:
          if (ViewSpec == null) {
            ViewSpec = new global::Google.Cloud.DataCatalog.V1Beta1.ViewSpec();
          }
          ViewSpec.MergeFrom(other.ViewSpec);
          break;
        case TypeSpecOneofCase.TableSpec:
          if (TableSpec == null) {
            TableSpec = new global::Google.Cloud.DataCatalog.V1Beta1.TableSpec();
          }
          TableSpec.MergeFrom(other.TableSpec);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TableSourceType = (global::Google.Cloud.DataCatalog.V1Beta1.TableSourceType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Google.Cloud.DataCatalog.V1Beta1.ViewSpec subBuilder = new global::Google.Cloud.DataCatalog.V1Beta1.ViewSpec();
            if (typeSpecCase_ == TypeSpecOneofCase.ViewSpec) {
              subBuilder.MergeFrom(ViewSpec);
            }
            input.ReadMessage(subBuilder);
            ViewSpec = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.DataCatalog.V1Beta1.TableSpec subBuilder = new global::Google.Cloud.DataCatalog.V1Beta1.TableSpec();
            if (typeSpecCase_ == TypeSpecOneofCase.TableSpec) {
              subBuilder.MergeFrom(TableSpec);
            }
            input.ReadMessage(subBuilder);
            TableSpec = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TableSourceType = (global::Google.Cloud.DataCatalog.V1Beta1.TableSourceType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Google.Cloud.DataCatalog.V1Beta1.ViewSpec subBuilder = new global::Google.Cloud.DataCatalog.V1Beta1.ViewSpec();
            if (typeSpecCase_ == TypeSpecOneofCase.ViewSpec) {
              subBuilder.MergeFrom(ViewSpec);
            }
            input.ReadMessage(subBuilder);
            ViewSpec = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.DataCatalog.V1Beta1.TableSpec subBuilder = new global::Google.Cloud.DataCatalog.V1Beta1.TableSpec();
            if (typeSpecCase_ == TypeSpecOneofCase.TableSpec) {
              subBuilder.MergeFrom(TableSpec);
            }
            input.ReadMessage(subBuilder);
            TableSpec = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Table view specification.
  /// </summary>
  public sealed partial class ViewSpec : pb::IMessage<ViewSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ViewSpec> _parser = new pb::MessageParser<ViewSpec>(() => new ViewSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.TableSpecReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewSpec(ViewSpec other) : this() {
      viewQuery_ = other.viewQuery_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewSpec Clone() {
      return new ViewSpec(this);
    }

    /// <summary>Field number for the "view_query" field.</summary>
    public const int ViewQueryFieldNumber = 1;
    private string viewQuery_ = "";
    /// <summary>
    /// Output only. The query that defines the table view.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ViewQuery {
      get { return viewQuery_; }
      set {
        viewQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ViewQuery != other.ViewQuery) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ViewQuery.Length != 0) hash ^= ViewQuery.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ViewQuery.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ViewQuery);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ViewQuery.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ViewQuery);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ViewQuery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewQuery);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewSpec other) {
      if (other == null) {
        return;
      }
      if (other.ViewQuery.Length != 0) {
        ViewQuery = other.ViewQuery;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ViewQuery = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ViewQuery = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Normal BigQuery table spec.
  /// </summary>
  public sealed partial class TableSpec : pb::IMessage<TableSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TableSpec> _parser = new pb::MessageParser<TableSpec>(() => new TableSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.TableSpecReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableSpec(TableSpec other) : this() {
      groupedEntry_ = other.groupedEntry_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableSpec Clone() {
      return new TableSpec(this);
    }

    /// <summary>Field number for the "grouped_entry" field.</summary>
    public const int GroupedEntryFieldNumber = 1;
    private string groupedEntry_ = "";
    /// <summary>
    /// Output only. If the table is a dated shard, i.e., with name pattern `[prefix]YYYYMMDD`,
    /// `grouped_entry` is the Data Catalog resource name of the date sharded
    /// grouped entry, for example,
    /// `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.
    /// Otherwise, `grouped_entry` is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupedEntry {
      get { return groupedEntry_; }
      set {
        groupedEntry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupedEntry != other.GroupedEntry) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupedEntry.Length != 0) hash ^= GroupedEntry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroupedEntry.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupedEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroupedEntry.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupedEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupedEntry.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupedEntry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableSpec other) {
      if (other == null) {
        return;
      }
      if (other.GroupedEntry.Length != 0) {
        GroupedEntry = other.GroupedEntry;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupedEntry = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GroupedEntry = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`.
  /// Context:
  /// https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding
  /// </summary>
  public sealed partial class BigQueryDateShardedSpec : pb::IMessage<BigQueryDateShardedSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BigQueryDateShardedSpec> _parser = new pb::MessageParser<BigQueryDateShardedSpec>(() => new BigQueryDateShardedSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BigQueryDateShardedSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataCatalog.V1Beta1.TableSpecReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryDateShardedSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryDateShardedSpec(BigQueryDateShardedSpec other) : this() {
      dataset_ = other.dataset_;
      tablePrefix_ = other.tablePrefix_;
      shardCount_ = other.shardCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryDateShardedSpec Clone() {
      return new BigQueryDateShardedSpec(this);
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 1;
    private string dataset_ = "";
    /// <summary>
    /// Output only. The Data Catalog resource name of the dataset entry the current table
    /// belongs to, for example,
    /// `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "table_prefix" field.</summary>
    public const int TablePrefixFieldNumber = 2;
    private string tablePrefix_ = "";
    /// <summary>
    /// Output only. The table name prefix of the shards. The name of any given shard is
    /// `[table_prefix]YYYYMMDD`, for example, for shard `MyTable20180101`, the
    /// `table_prefix` is `MyTable`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TablePrefix {
      get { return tablePrefix_; }
      set {
        tablePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shard_count" field.</summary>
    public const int ShardCountFieldNumber = 3;
    private long shardCount_;
    /// <summary>
    /// Output only. Total number of shards.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShardCount {
      get { return shardCount_; }
      set {
        shardCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BigQueryDateShardedSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BigQueryDateShardedSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dataset != other.Dataset) return false;
      if (TablePrefix != other.TablePrefix) return false;
      if (ShardCount != other.ShardCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      if (TablePrefix.Length != 0) hash ^= TablePrefix.GetHashCode();
      if (ShardCount != 0L) hash ^= ShardCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Dataset.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Dataset);
      }
      if (TablePrefix.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TablePrefix);
      }
      if (ShardCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ShardCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Dataset.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Dataset);
      }
      if (TablePrefix.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TablePrefix);
      }
      if (ShardCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ShardCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      if (TablePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TablePrefix);
      }
      if (ShardCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShardCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BigQueryDateShardedSpec other) {
      if (other == null) {
        return;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      if (other.TablePrefix.Length != 0) {
        TablePrefix = other.TablePrefix;
      }
      if (other.ShardCount != 0L) {
        ShardCount = other.ShardCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Dataset = input.ReadString();
            break;
          }
          case 18: {
            TablePrefix = input.ReadString();
            break;
          }
          case 24: {
            ShardCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Dataset = input.ReadString();
            break;
          }
          case 18: {
            TablePrefix = input.ReadString();
            break;
          }
          case 24: {
            ShardCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
