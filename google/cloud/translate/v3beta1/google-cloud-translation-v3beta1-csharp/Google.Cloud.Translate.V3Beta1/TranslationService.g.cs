// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/translate/v3beta1/translation_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Translate.V3Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/translate/v3beta1/translation_service.proto</summary>
  public static partial class TranslationServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/translate/v3beta1/translation_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TranslationServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjhnb29nbGUvY2xvdWQvdHJhbnNsYXRlL3YzYmV0YTEvdHJhbnNsYXRpb25f",
            "c2VydmljZS5wcm90bxIgZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0",
            "YTEaHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aF2dvb2dsZS9hcGkv",
            "Y2xpZW50LnByb3RvGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3Rv",
            "Ghlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGiNnb29nbGUvbG9uZ3J1bm5p",
            "bmcvb3BlcmF0aW9ucy5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFt",
            "cC5wcm90byJOChtUcmFuc2xhdGVUZXh0R2xvc3NhcnlDb25maWcSFQoIZ2xv",
            "c3NhcnkYASABKAlCA+BBAhIYCgtpZ25vcmVfY2FzZRgCIAEoCEID4EEBIr8D",
            "ChRUcmFuc2xhdGVUZXh0UmVxdWVzdBIVCghjb250ZW50cxgBIAMoCUID4EEC",
            "EhYKCW1pbWVfdHlwZRgDIAEoCUID4EEBEiEKFHNvdXJjZV9sYW5ndWFnZV9j",
            "b2RlGAQgASgJQgPgQQESIQoUdGFyZ2V0X2xhbmd1YWdlX2NvZGUYBSABKAlC",
            "A+BBAhI5CgZwYXJlbnQYCCABKAlCKeBBAvpBIwohbG9jYXRpb25zLmdvb2ds",
            "ZWFwaXMuY29tL0xvY2F0aW9uEhIKBW1vZGVsGAYgASgJQgPgQQESWwoPZ2xv",
            "c3NhcnlfY29uZmlnGAcgASgLMj0uZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9u",
            "LnYzYmV0YTEuVHJhbnNsYXRlVGV4dEdsb3NzYXJ5Q29uZmlnQgPgQQESVwoG",
            "bGFiZWxzGAogAygLMkIuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0",
            "YTEuVHJhbnNsYXRlVGV4dFJlcXVlc3QuTGFiZWxzRW50cnlCA+BBARotCgtM",
            "YWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIqoB",
            "ChVUcmFuc2xhdGVUZXh0UmVzcG9uc2USQwoMdHJhbnNsYXRpb25zGAEgAygL",
            "Mi0uZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuVHJhbnNsYXRp",
            "b24STAoVZ2xvc3NhcnlfdHJhbnNsYXRpb25zGAMgAygLMi0uZ29vZ2xlLmNs",
            "b3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuVHJhbnNsYXRpb24irQEKC1RyYW5z",
            "bGF0aW9uEhcKD3RyYW5zbGF0ZWRfdGV4dBgBIAEoCRINCgVtb2RlbBgCIAEo",
            "CRIeChZkZXRlY3RlZF9sYW5ndWFnZV9jb2RlGAQgASgJElYKD2dsb3NzYXJ5",
            "X2NvbmZpZxgDIAEoCzI9Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52M2Jl",
            "dGExLlRyYW5zbGF0ZVRleHRHbG9zc2FyeUNvbmZpZyKkAgoVRGV0ZWN0TGFu",
            "Z3VhZ2VSZXF1ZXN0EjkKBnBhcmVudBgFIAEoCUIp4EEC+kEjCiFsb2NhdGlv",
            "bnMuZ29vZ2xlYXBpcy5jb20vTG9jYXRpb24SEgoFbW9kZWwYBCABKAlCA+BB",
            "ARIRCgdjb250ZW50GAEgASgJSAASFgoJbWltZV90eXBlGAMgASgJQgPgQQES",
            "WAoGbGFiZWxzGAYgAygLMkMuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYz",
            "YmV0YTEuRGV0ZWN0TGFuZ3VhZ2VSZXF1ZXN0LkxhYmVsc0VudHJ5QgPgQQEa",
            "LQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4",
            "AUIICgZzb3VyY2UiPQoQRGV0ZWN0ZWRMYW5ndWFnZRIVCg1sYW5ndWFnZV9j",
            "b2RlGAEgASgJEhIKCmNvbmZpZGVuY2UYAiABKAIiXwoWRGV0ZWN0TGFuZ3Vh",
            "Z2VSZXNwb25zZRJFCglsYW5ndWFnZXMYASADKAsyMi5nb29nbGUuY2xvdWQu",
            "dHJhbnNsYXRpb24udjNiZXRhMS5EZXRlY3RlZExhbmd1YWdlIpEBChxHZXRT",
            "dXBwb3J0ZWRMYW5ndWFnZXNSZXF1ZXN0EjkKBnBhcmVudBgDIAEoCUIp4EEC",
            "+kEjCiFsb2NhdGlvbnMuZ29vZ2xlYXBpcy5jb20vTG9jYXRpb24SIgoVZGlz",
            "cGxheV9sYW5ndWFnZV9jb2RlGAEgASgJQgPgQQESEgoFbW9kZWwYAiABKAlC",
            "A+BBASJcChJTdXBwb3J0ZWRMYW5ndWFnZXMSRgoJbGFuZ3VhZ2VzGAEgAygL",
            "MjMuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuU3VwcG9ydGVk",
            "TGFuZ3VhZ2UicAoRU3VwcG9ydGVkTGFuZ3VhZ2USFQoNbGFuZ3VhZ2VfY29k",
            "ZRgBIAEoCRIUCgxkaXNwbGF5X25hbWUYAiABKAkSFgoOc3VwcG9ydF9zb3Vy",
            "Y2UYAyABKAgSFgoOc3VwcG9ydF90YXJnZXQYBCABKAgiIwoJR2NzU291cmNl",
            "EhYKCWlucHV0X3VyaRgBIAEoCUID4EECInIKC0lucHV0Q29uZmlnEhYKCW1p",
            "bWVfdHlwZRgBIAEoCUID4EEBEkEKCmdjc19zb3VyY2UYAiABKAsyKy5nb29n",
            "bGUuY2xvdWQudHJhbnNsYXRpb24udjNiZXRhMS5HY3NTb3VyY2VIAEIICgZz",
            "b3VyY2UiMAoOR2NzRGVzdGluYXRpb24SHgoRb3V0cHV0X3VyaV9wcmVmaXgY",
            "ASABKAlCA+BBAiJqCgxPdXRwdXRDb25maWcSSwoPZ2NzX2Rlc3RpbmF0aW9u",
            "GAEgASgLMjAuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuR2Nz",
            "RGVzdGluYXRpb25IAEINCgtkZXN0aW5hdGlvbiKIAQoTRG9jdW1lbnRJbnB1",
            "dENvbmZpZxIRCgdjb250ZW50GAEgASgMSAASQQoKZ2NzX3NvdXJjZRgCIAEo",
            "CzIrLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52M2JldGExLkdjc1NvdXJj",
            "ZUgAEhEKCW1pbWVfdHlwZRgEIAEoCUIICgZzb3VyY2UijwEKFERvY3VtZW50",
            "T3V0cHV0Q29uZmlnElAKD2djc19kZXN0aW5hdGlvbhgBIAEoCzIwLmdvb2ds",
            "ZS5jbG91ZC50cmFuc2xhdGlvbi52M2JldGExLkdjc0Rlc3RpbmF0aW9uQgPg",
            "QQFIABIWCgltaW1lX3R5cGUYAyABKAlCA+BBAUINCgtkZXN0aW5hdGlvbiKq",
            "BAoYVHJhbnNsYXRlRG9jdW1lbnRSZXF1ZXN0EhMKBnBhcmVudBgBIAEoCUID",
            "4EECEiEKFHNvdXJjZV9sYW5ndWFnZV9jb2RlGAIgASgJQgPgQQESIQoUdGFy",
            "Z2V0X2xhbmd1YWdlX2NvZGUYAyABKAlCA+BBAhJZChVkb2N1bWVudF9pbnB1",
            "dF9jb25maWcYBCABKAsyNS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjNi",
            "ZXRhMS5Eb2N1bWVudElucHV0Q29uZmlnQgPgQQISWwoWZG9jdW1lbnRfb3V0",
            "cHV0X2NvbmZpZxgFIAEoCzI2Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52",
            "M2JldGExLkRvY3VtZW50T3V0cHV0Q29uZmlnQgPgQQESEgoFbW9kZWwYBiAB",
            "KAlCA+BBARJbCg9nbG9zc2FyeV9jb25maWcYByABKAsyPS5nb29nbGUuY2xv",
            "dWQudHJhbnNsYXRpb24udjNiZXRhMS5UcmFuc2xhdGVUZXh0R2xvc3NhcnlD",
            "b25maWdCA+BBARJbCgZsYWJlbHMYCCADKAsyRi5nb29nbGUuY2xvdWQudHJh",
            "bnNsYXRpb24udjNiZXRhMS5UcmFuc2xhdGVEb2N1bWVudFJlcXVlc3QuTGFi",
            "ZWxzRW50cnlCA+BBARotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoF",
            "dmFsdWUYAiABKAk6AjgBImUKE0RvY3VtZW50VHJhbnNsYXRpb24SGwoTYnl0",
            "ZV9zdHJlYW1fb3V0cHV0cxgBIAMoDBIRCgltaW1lX3R5cGUYAiABKAkSHgoW",
            "ZGV0ZWN0ZWRfbGFuZ3VhZ2VfY29kZRgDIAEoCSK1AgoZVHJhbnNsYXRlRG9j",
            "dW1lbnRSZXNwb25zZRJTChRkb2N1bWVudF90cmFuc2xhdGlvbhgBIAEoCzI1",
            "Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52M2JldGExLkRvY3VtZW50VHJh",
            "bnNsYXRpb24SXAodZ2xvc3NhcnlfZG9jdW1lbnRfdHJhbnNsYXRpb24YAiAB",
            "KAsyNS5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjNiZXRhMS5Eb2N1bWVu",
            "dFRyYW5zbGF0aW9uEg0KBW1vZGVsGAMgASgJElYKD2dsb3NzYXJ5X2NvbmZp",
            "ZxgEIAEoCzI9Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52M2JldGExLlRy",
            "YW5zbGF0ZVRleHRHbG9zc2FyeUNvbmZpZyKmBgoZQmF0Y2hUcmFuc2xhdGVU",
            "ZXh0UmVxdWVzdBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIwohbG9jYXRpb25z",
            "Lmdvb2dsZWFwaXMuY29tL0xvY2F0aW9uEiEKFHNvdXJjZV9sYW5ndWFnZV9j",
            "b2RlGAIgASgJQgPgQQISIgoVdGFyZ2V0X2xhbmd1YWdlX2NvZGVzGAMgAygJ",
            "QgPgQQISXAoGbW9kZWxzGAQgAygLMkcuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0",
            "aW9uLnYzYmV0YTEuQmF0Y2hUcmFuc2xhdGVUZXh0UmVxdWVzdC5Nb2RlbHNF",
            "bnRyeUID4EEBEkkKDWlucHV0X2NvbmZpZ3MYBSADKAsyLS5nb29nbGUuY2xv",
            "dWQudHJhbnNsYXRpb24udjNiZXRhMS5JbnB1dENvbmZpZ0ID4EECEkoKDW91",
            "dHB1dF9jb25maWcYBiABKAsyLi5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24u",
            "djNiZXRhMS5PdXRwdXRDb25maWdCA+BBAhJkCgpnbG9zc2FyaWVzGAcgAygL",
            "MksuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuQmF0Y2hUcmFu",
            "c2xhdGVUZXh0UmVxdWVzdC5HbG9zc2FyaWVzRW50cnlCA+BBARJcCgZsYWJl",
            "bHMYCSADKAsyRy5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjNiZXRhMS5C",
            "YXRjaFRyYW5zbGF0ZVRleHRSZXF1ZXN0LkxhYmVsc0VudHJ5QgPgQQEaLQoL",
            "TW9kZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ARpw",
            "Cg9HbG9zc2FyaWVzRW50cnkSCwoDa2V5GAEgASgJEkwKBXZhbHVlGAIgASgL",
            "Mj0uZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuVHJhbnNsYXRl",
            "VGV4dEdsb3NzYXJ5Q29uZmlnOgI4ARotCgtMYWJlbHNFbnRyeRILCgNrZXkY",
            "ASABKAkSDQoFdmFsdWUYAiABKAk6AjgBItMCChZCYXRjaFRyYW5zbGF0ZU1l",
            "dGFkYXRhEk0KBXN0YXRlGAEgASgOMj4uZ29vZ2xlLmNsb3VkLnRyYW5zbGF0",
            "aW9uLnYzYmV0YTEuQmF0Y2hUcmFuc2xhdGVNZXRhZGF0YS5TdGF0ZRIdChV0",
            "cmFuc2xhdGVkX2NoYXJhY3RlcnMYAiABKAMSGQoRZmFpbGVkX2NoYXJhY3Rl",
            "cnMYAyABKAMSGAoQdG90YWxfY2hhcmFjdGVycxgEIAEoAxIvCgtzdWJtaXRf",
            "dGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiZQoFU3Rh",
            "dGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABILCgdSVU5OSU5HEAESDQoJU1VD",
            "Q0VFREVEEAISCgoGRkFJTEVEEAMSDgoKQ0FOQ0VMTElORxAEEg0KCUNBTkNF",
            "TExFRBAFIssBChZCYXRjaFRyYW5zbGF0ZVJlc3BvbnNlEhgKEHRvdGFsX2No",
            "YXJhY3RlcnMYASABKAMSHQoVdHJhbnNsYXRlZF9jaGFyYWN0ZXJzGAIgASgD",
            "EhkKEWZhaWxlZF9jaGFyYWN0ZXJzGAMgASgDEi8KC3N1Ym1pdF90aW1lGAQg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgF",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiYgoTR2xvc3NhcnlJ",
            "bnB1dENvbmZpZxJBCgpnY3Nfc291cmNlGAEgASgLMisuZ29vZ2xlLmNsb3Vk",
            "LnRyYW5zbGF0aW9uLnYzYmV0YTEuR2NzU291cmNlSABCCAoGc291cmNlIo4F",
            "CghHbG9zc2FyeRIRCgRuYW1lGAEgASgJQgPgQQISVAoNbGFuZ3VhZ2VfcGFp",
            "chgDIAEoCzI7Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52M2JldGExLkds",
            "b3NzYXJ5Lkxhbmd1YWdlQ29kZVBhaXJIABJZChJsYW5ndWFnZV9jb2Rlc19z",
            "ZXQYBCABKAsyOy5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjNiZXRhMS5H",
            "bG9zc2FyeS5MYW5ndWFnZUNvZGVzU2V0SAASSwoMaW5wdXRfY29uZmlnGAUg",
            "ASgLMjUuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuR2xvc3Nh",
            "cnlJbnB1dENvbmZpZxIYCgtlbnRyeV9jb3VudBgGIAEoBUID4EEDEjQKC3N1",
            "Ym1pdF90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID",
            "4EEDEjEKCGVuZF90aW1lGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcEID4EEDGk4KEExhbmd1YWdlQ29kZVBhaXISHAoUc291cmNlX2xhbmd1",
            "YWdlX2NvZGUYASABKAkSHAoUdGFyZ2V0X2xhbmd1YWdlX2NvZGUYAiABKAka",
            "KgoQTGFuZ3VhZ2VDb2Rlc1NldBIWCg5sYW5ndWFnZV9jb2RlcxgBIAMoCTpl",
            "6kFiCiF0cmFuc2xhdGUuZ29vZ2xlYXBpcy5jb20vR2xvc3NhcnkSPXByb2pl",
            "Y3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9nbG9zc2FyaWVz",
            "L3tnbG9zc2FyeX1CCwoJbGFuZ3VhZ2VzIpUBChVDcmVhdGVHbG9zc2FyeVJl",
            "cXVlc3QSOQoGcGFyZW50GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29n",
            "bGVhcGlzLmNvbS9Mb2NhdGlvbhJBCghnbG9zc2FyeRgCIAEoCzIqLmdvb2ds",
            "ZS5jbG91ZC50cmFuc2xhdGlvbi52M2JldGExLkdsb3NzYXJ5QgPgQQIiTQoS",
            "R2V0R2xvc3NhcnlSZXF1ZXN0EjcKBG5hbWUYASABKAlCKeBBAvpBIwohdHJh",
            "bnNsYXRlLmdvb2dsZWFwaXMuY29tL0dsb3NzYXJ5IlAKFURlbGV0ZUdsb3Nz",
            "YXJ5UmVxdWVzdBI3CgRuYW1lGAEgASgJQingQQL6QSMKIXRyYW5zbGF0ZS5n",
            "b29nbGVhcGlzLmNvbS9HbG9zc2FyeSKYAQoVTGlzdEdsb3NzYXJpZXNSZXF1",
            "ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjCiFsb2NhdGlvbnMuZ29vZ2xl",
            "YXBpcy5jb20vTG9jYXRpb24SFgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoK",
            "cGFnZV90b2tlbhgDIAEoCUID4EEBEhMKBmZpbHRlchgEIAEoCUID4EEBInEK",
            "Fkxpc3RHbG9zc2FyaWVzUmVzcG9uc2USPgoKZ2xvc3NhcmllcxgBIAMoCzIq",
            "Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52M2JldGExLkdsb3NzYXJ5EhcK",
            "D25leHRfcGFnZV90b2tlbhgCIAEoCSKNAgoWQ3JlYXRlR2xvc3NhcnlNZXRh",
            "ZGF0YRIMCgRuYW1lGAEgASgJEk0KBXN0YXRlGAIgASgOMj4uZ29vZ2xlLmNs",
            "b3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuQ3JlYXRlR2xvc3NhcnlNZXRhZGF0",
            "YS5TdGF0ZRIvCgtzdWJtaXRfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXAiZQoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIL",
            "CgdSVU5OSU5HEAESDQoJU1VDQ0VFREVEEAISCgoGRkFJTEVEEAMSDgoKQ0FO",
            "Q0VMTElORxAEEg0KCUNBTkNFTExFRBAFIo0CChZEZWxldGVHbG9zc2FyeU1l",
            "dGFkYXRhEgwKBG5hbWUYASABKAkSTQoFc3RhdGUYAiABKA4yPi5nb29nbGUu",
            "Y2xvdWQudHJhbnNsYXRpb24udjNiZXRhMS5EZWxldGVHbG9zc2FyeU1ldGFk",
            "YXRhLlN0YXRlEi8KC3N1Ym1pdF90aW1lGAMgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcCJlCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAA",
            "EgsKB1JVTk5JTkcQARINCglTVUNDRUVERUQQAhIKCgZGQUlMRUQQAxIOCgpD",
            "QU5DRUxMSU5HEAQSDQoJQ0FOQ0VMTEVEEAUihQEKFkRlbGV0ZUdsb3NzYXJ5",
            "UmVzcG9uc2USDAoEbmFtZRgBIAEoCRIvCgtzdWJtaXRfdGltZRgCIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIZW5kX3RpbWUYAyABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIr8FCh1CYXRjaFRyYW5zbGF0",
            "ZURvY3VtZW50UmVxdWVzdBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIwohbG9j",
            "YXRpb25zLmdvb2dsZWFwaXMuY29tL0xvY2F0aW9uEiEKFHNvdXJjZV9sYW5n",
            "dWFnZV9jb2RlGAIgASgJQgPgQQISIgoVdGFyZ2V0X2xhbmd1YWdlX2NvZGVz",
            "GAMgAygJQgPgQQISVgoNaW5wdXRfY29uZmlncxgEIAMoCzI6Lmdvb2dsZS5j",
            "bG91ZC50cmFuc2xhdGlvbi52M2JldGExLkJhdGNoRG9jdW1lbnRJbnB1dENv",
            "bmZpZ0ID4EECElcKDW91dHB1dF9jb25maWcYBSABKAsyOy5nb29nbGUuY2xv",
            "dWQudHJhbnNsYXRpb24udjNiZXRhMS5CYXRjaERvY3VtZW50T3V0cHV0Q29u",
            "ZmlnQgPgQQISYAoGbW9kZWxzGAYgAygLMksuZ29vZ2xlLmNsb3VkLnRyYW5z",
            "bGF0aW9uLnYzYmV0YTEuQmF0Y2hUcmFuc2xhdGVEb2N1bWVudFJlcXVlc3Qu",
            "TW9kZWxzRW50cnlCA+BBARJoCgpnbG9zc2FyaWVzGAcgAygLMk8uZ29vZ2xl",
            "LmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuQmF0Y2hUcmFuc2xhdGVEb2N1",
            "bWVudFJlcXVlc3QuR2xvc3Nhcmllc0VudHJ5QgPgQQEaLQoLTW9kZWxzRW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ARpwCg9HbG9zc2Fy",
            "aWVzRW50cnkSCwoDa2V5GAEgASgJEkwKBXZhbHVlGAIgASgLMj0uZ29vZ2xl",
            "LmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuVHJhbnNsYXRlVGV4dEdsb3Nz",
            "YXJ5Q29uZmlnOgI4ASJnChhCYXRjaERvY3VtZW50SW5wdXRDb25maWcSQQoK",
            "Z2NzX3NvdXJjZRgBIAEoCzIrLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52",
            "M2JldGExLkdjc1NvdXJjZUgAQggKBnNvdXJjZSJ3ChlCYXRjaERvY3VtZW50",
            "T3V0cHV0Q29uZmlnEksKD2djc19kZXN0aW5hdGlvbhgBIAEoCzIwLmdvb2ds",
            "ZS5jbG91ZC50cmFuc2xhdGlvbi52M2JldGExLkdjc0Rlc3RpbmF0aW9uSABC",
            "DQoLZGVzdGluYXRpb24i2QIKHkJhdGNoVHJhbnNsYXRlRG9jdW1lbnRSZXNw",
            "b25zZRITCgt0b3RhbF9wYWdlcxgBIAEoAxIYChB0cmFuc2xhdGVkX3BhZ2Vz",
            "GAIgASgDEhQKDGZhaWxlZF9wYWdlcxgDIAEoAxIcChR0b3RhbF9iaWxsYWJs",
            "ZV9wYWdlcxgEIAEoAxIYChB0b3RhbF9jaGFyYWN0ZXJzGAUgASgDEh0KFXRy",
            "YW5zbGF0ZWRfY2hhcmFjdGVycxgGIAEoAxIZChFmYWlsZWRfY2hhcmFjdGVy",
            "cxgHIAEoAxIhChl0b3RhbF9iaWxsYWJsZV9jaGFyYWN0ZXJzGAggASgDEi8K",
            "C3N1Ym1pdF90aW1lGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cBIsCghlbmRfdGltZRgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXAi6QMKHkJhdGNoVHJhbnNsYXRlRG9jdW1lbnRNZXRhZGF0YRJVCgVzdGF0",
            "ZRgBIAEoDjJGLmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52M2JldGExLkJh",
            "dGNoVHJhbnNsYXRlRG9jdW1lbnRNZXRhZGF0YS5TdGF0ZRITCgt0b3RhbF9w",
            "YWdlcxgCIAEoAxIYChB0cmFuc2xhdGVkX3BhZ2VzGAMgASgDEhQKDGZhaWxl",
            "ZF9wYWdlcxgEIAEoAxIcChR0b3RhbF9iaWxsYWJsZV9wYWdlcxgFIAEoAxIY",
            "ChB0b3RhbF9jaGFyYWN0ZXJzGAYgASgDEh0KFXRyYW5zbGF0ZWRfY2hhcmFj",
            "dGVycxgHIAEoAxIZChFmYWlsZWRfY2hhcmFjdGVycxgIIAEoAxIhChl0b3Rh",
            "bF9iaWxsYWJsZV9jaGFyYWN0ZXJzGAkgASgDEi8KC3N1Ym1pdF90aW1lGAog",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJlCgVTdGF0ZRIVChFT",
            "VEFURV9VTlNQRUNJRklFRBAAEgsKB1JVTk5JTkcQARINCglTVUNDRUVERUQQ",
            "AhIKCgZGQUlMRUQQAxIOCgpDQU5DRUxMSU5HEAQSDQoJQ0FOQ0VMTEVEEAUy",
            "8hMKElRyYW5zbGF0aW9uU2VydmljZRL0AQoNVHJhbnNsYXRlVGV4dBI2Lmdv",
            "b2dsZS5jbG91ZC50cmFuc2xhdGlvbi52M2JldGExLlRyYW5zbGF0ZVRleHRS",
            "ZXF1ZXN0GjcuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuVHJh",
            "bnNsYXRlVGV4dFJlc3BvbnNlInKC0+STAmwiNi92M2JldGExL3twYXJlbnQ9",
            "cHJvamVjdHMvKi9sb2NhdGlvbnMvKn06dHJhbnNsYXRlVGV4dDoBKlovIiov",
            "djNiZXRhMS97cGFyZW50PXByb2plY3RzLyp9OnRyYW5zbGF0ZVRleHQ6ASoS",
            "kwIKDkRldGVjdExhbmd1YWdlEjcuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9u",
            "LnYzYmV0YTEuRGV0ZWN0TGFuZ3VhZ2VSZXF1ZXN0GjguZ29vZ2xlLmNsb3Vk",
            "LnRyYW5zbGF0aW9uLnYzYmV0YTEuRGV0ZWN0TGFuZ3VhZ2VSZXNwb25zZSKN",
            "AYLT5JMCbiI3L3YzYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9u",
            "cy8qfTpkZXRlY3RMYW5ndWFnZToBKlowIisvdjNiZXRhMS97cGFyZW50PXBy",
            "b2plY3RzLyp9OmRldGVjdExhbmd1YWdlOgEq2kEWcGFyZW50LG1vZGVsLG1p",
            "bWVfdHlwZRKrAgoVR2V0U3VwcG9ydGVkTGFuZ3VhZ2VzEj4uZ29vZ2xlLmNs",
            "b3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuR2V0U3VwcG9ydGVkTGFuZ3VhZ2Vz",
            "UmVxdWVzdBo0Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52M2JldGExLlN1",
            "cHBvcnRlZExhbmd1YWdlcyKbAYLT5JMCcBI7L3YzYmV0YTEve3BhcmVudD1w",
            "cm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9zdXBwb3J0ZWRMYW5ndWFnZXNaMRIv",
            "L3YzYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qfS9zdXBwb3J0ZWRMYW5ndWFn",
            "ZXPaQSJwYXJlbnQsZGlzcGxheV9sYW5ndWFnZV9jb2RlLG1vZGVsEtMBChFU",
            "cmFuc2xhdGVEb2N1bWVudBI6Lmdvb2dsZS5jbG91ZC50cmFuc2xhdGlvbi52",
            "M2JldGExLlRyYW5zbGF0ZURvY3VtZW50UmVxdWVzdBo7Lmdvb2dsZS5jbG91",
            "ZC50cmFuc2xhdGlvbi52M2JldGExLlRyYW5zbGF0ZURvY3VtZW50UmVzcG9u",
            "c2UiRYLT5JMCPyI6L3YzYmV0YTEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0",
            "aW9ucy8qfTp0cmFuc2xhdGVEb2N1bWVudDoBKhLrAQoSQmF0Y2hUcmFuc2xh",
            "dGVUZXh0EjsuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuQmF0",
            "Y2hUcmFuc2xhdGVUZXh0UmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5P",
            "cGVyYXRpb24ieYLT5JMCQCI7L3YzYmV0YTEve3BhcmVudD1wcm9qZWN0cy8q",
            "L2xvY2F0aW9ucy8qfTpiYXRjaFRyYW5zbGF0ZVRleHQ6ASrKQTAKFkJhdGNo",
            "VHJhbnNsYXRlUmVzcG9uc2USFkJhdGNoVHJhbnNsYXRlTWV0YWRhdGESiAIK",
            "FkJhdGNoVHJhbnNsYXRlRG9jdW1lbnQSPy5nb29nbGUuY2xvdWQudHJhbnNs",
            "YXRpb24udjNiZXRhMS5CYXRjaFRyYW5zbGF0ZURvY3VtZW50UmVxdWVzdBod",
            "Lmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24ijQGC0+STAkQiPy92M2Jl",
            "dGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn06YmF0Y2hUcmFu",
            "c2xhdGVEb2N1bWVudDoBKspBQAoeQmF0Y2hUcmFuc2xhdGVEb2N1bWVudFJl",
            "c3BvbnNlEh5CYXRjaFRyYW5zbGF0ZURvY3VtZW50TWV0YWRhdGES5gEKDkNy",
            "ZWF0ZUdsb3NzYXJ5EjcuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0",
            "YTEuQ3JlYXRlR2xvc3NhcnlSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5n",
            "Lk9wZXJhdGlvbiJ8gtPkkwI/IjMvdjNiZXRhMS97cGFyZW50PXByb2plY3Rz",
            "LyovbG9jYXRpb25zLyp9L2dsb3NzYXJpZXM6CGdsb3NzYXJ52kEPcGFyZW50",
            "LGdsb3NzYXJ5ykEiCghHbG9zc2FyeRIWQ3JlYXRlR2xvc3NhcnlNZXRhZGF0",
            "YRLQAQoOTGlzdEdsb3NzYXJpZXMSNy5nb29nbGUuY2xvdWQudHJhbnNsYXRp",
            "b24udjNiZXRhMS5MaXN0R2xvc3Nhcmllc1JlcXVlc3QaOC5nb29nbGUuY2xv",
            "dWQudHJhbnNsYXRpb24udjNiZXRhMS5MaXN0R2xvc3Nhcmllc1Jlc3BvbnNl",
            "IkuC0+STAjUSMy92M2JldGExL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlv",
            "bnMvKn0vZ2xvc3Nhcmllc9pBDXBhcmVudCxmaWx0ZXISswEKC0dldEdsb3Nz",
            "YXJ5EjQuZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0YTEuR2V0R2xv",
            "c3NhcnlSZXF1ZXN0GiouZ29vZ2xlLmNsb3VkLnRyYW5zbGF0aW9uLnYzYmV0",
            "YTEuR2xvc3NhcnkiQoLT5JMCNRIzL3YzYmV0YTEve25hbWU9cHJvamVjdHMv",
            "Ki9sb2NhdGlvbnMvKi9nbG9zc2FyaWVzLyp92kEEbmFtZRLfAQoORGVsZXRl",
            "R2xvc3NhcnkSNy5nb29nbGUuY2xvdWQudHJhbnNsYXRpb24udjNiZXRhMS5E",
            "ZWxldGVHbG9zc2FyeVJlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3Bl",
            "cmF0aW9uInWC0+STAjUqMy92M2JldGExL3tuYW1lPXByb2plY3RzLyovbG9j",
            "YXRpb25zLyovZ2xvc3Nhcmllcy8qfdpBBG5hbWXKQTAKFkRlbGV0ZUdsb3Nz",
            "YXJ5UmVzcG9uc2USFkRlbGV0ZUdsb3NzYXJ5TWV0YWRhdGEafspBGHRyYW5z",
            "bGF0ZS5nb29nbGVhcGlzLmNvbdJBYGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMu",
            "Y29tL2F1dGgvY2xvdWQtcGxhdGZvcm0saHR0cHM6Ly93d3cuZ29vZ2xlYXBp",
            "cy5jb20vYXV0aC9jbG91ZC10cmFuc2xhdGlvbkLxAQoiY29tLmdvb2dsZS5j",
            "bG91ZC50cmFuc2xhdGUudjNiZXRhMUIXVHJhbnNsYXRpb25TZXJ2aWNlUHJv",
            "dG9QAVpHZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9j",
            "bG91ZC90cmFuc2xhdGUvdjNiZXRhMTt0cmFuc2xhdGX4AQGqAh5Hb29nbGUu",
            "Q2xvdWQuVHJhbnNsYXRlLlYzQmV0YTHKAh5Hb29nbGVcQ2xvdWRcVHJhbnNs",
            "YXRlXFYzYmV0YTHqAiFHb29nbGU6OkNsb3VkOjpUcmFuc2xhdGU6OlYzYmV0",
            "YTFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig), global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig.Parser, new[]{ "Glossary", "IgnoreCase" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.TranslateTextRequest), global::Google.Cloud.Translate.V3Beta1.TranslateTextRequest.Parser, new[]{ "Contents", "MimeType", "SourceLanguageCode", "TargetLanguageCode", "Parent", "Model", "GlossaryConfig", "Labels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.TranslateTextResponse), global::Google.Cloud.Translate.V3Beta1.TranslateTextResponse.Parser, new[]{ "Translations", "GlossaryTranslations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.Translation), global::Google.Cloud.Translate.V3Beta1.Translation.Parser, new[]{ "TranslatedText", "Model", "DetectedLanguageCode", "GlossaryConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.DetectLanguageRequest), global::Google.Cloud.Translate.V3Beta1.DetectLanguageRequest.Parser, new[]{ "Parent", "Model", "Content", "MimeType", "Labels" }, new[]{ "Source" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.DetectedLanguage), global::Google.Cloud.Translate.V3Beta1.DetectedLanguage.Parser, new[]{ "LanguageCode", "Confidence" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.DetectLanguageResponse), global::Google.Cloud.Translate.V3Beta1.DetectLanguageResponse.Parser, new[]{ "Languages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.GetSupportedLanguagesRequest), global::Google.Cloud.Translate.V3Beta1.GetSupportedLanguagesRequest.Parser, new[]{ "Parent", "DisplayLanguageCode", "Model" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.SupportedLanguages), global::Google.Cloud.Translate.V3Beta1.SupportedLanguages.Parser, new[]{ "Languages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.SupportedLanguage), global::Google.Cloud.Translate.V3Beta1.SupportedLanguage.Parser, new[]{ "LanguageCode", "DisplayName", "SupportSource", "SupportTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.GcsSource), global::Google.Cloud.Translate.V3Beta1.GcsSource.Parser, new[]{ "InputUri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.InputConfig), global::Google.Cloud.Translate.V3Beta1.InputConfig.Parser, new[]{ "MimeType", "GcsSource" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.GcsDestination), global::Google.Cloud.Translate.V3Beta1.GcsDestination.Parser, new[]{ "OutputUriPrefix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.OutputConfig), global::Google.Cloud.Translate.V3Beta1.OutputConfig.Parser, new[]{ "GcsDestination" }, new[]{ "Destination" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.DocumentInputConfig), global::Google.Cloud.Translate.V3Beta1.DocumentInputConfig.Parser, new[]{ "Content", "GcsSource", "MimeType" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.DocumentOutputConfig), global::Google.Cloud.Translate.V3Beta1.DocumentOutputConfig.Parser, new[]{ "GcsDestination", "MimeType" }, new[]{ "Destination" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.TranslateDocumentRequest), global::Google.Cloud.Translate.V3Beta1.TranslateDocumentRequest.Parser, new[]{ "Parent", "SourceLanguageCode", "TargetLanguageCode", "DocumentInputConfig", "DocumentOutputConfig", "Model", "GlossaryConfig", "Labels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.DocumentTranslation), global::Google.Cloud.Translate.V3Beta1.DocumentTranslation.Parser, new[]{ "ByteStreamOutputs", "MimeType", "DetectedLanguageCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.TranslateDocumentResponse), global::Google.Cloud.Translate.V3Beta1.TranslateDocumentResponse.Parser, new[]{ "DocumentTranslation", "GlossaryDocumentTranslation", "Model", "GlossaryConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.BatchTranslateTextRequest), global::Google.Cloud.Translate.V3Beta1.BatchTranslateTextRequest.Parser, new[]{ "Parent", "SourceLanguageCode", "TargetLanguageCodes", "Models", "InputConfigs", "OutputConfig", "Glossaries", "Labels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata), global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata.Parser, new[]{ "State", "TranslatedCharacters", "FailedCharacters", "TotalCharacters", "SubmitTime" }, null, new[]{ typeof(global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.BatchTranslateResponse), global::Google.Cloud.Translate.V3Beta1.BatchTranslateResponse.Parser, new[]{ "TotalCharacters", "TranslatedCharacters", "FailedCharacters", "SubmitTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.GlossaryInputConfig), global::Google.Cloud.Translate.V3Beta1.GlossaryInputConfig.Parser, new[]{ "GcsSource" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.Glossary), global::Google.Cloud.Translate.V3Beta1.Glossary.Parser, new[]{ "Name", "LanguagePair", "LanguageCodesSet", "InputConfig", "EntryCount", "SubmitTime", "EndTime" }, new[]{ "Languages" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodePair), global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodePair.Parser, new[]{ "SourceLanguageCode", "TargetLanguageCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodesSet), global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodesSet.Parser, new[]{ "LanguageCodes" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.CreateGlossaryRequest), global::Google.Cloud.Translate.V3Beta1.CreateGlossaryRequest.Parser, new[]{ "Parent", "Glossary" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.GetGlossaryRequest), global::Google.Cloud.Translate.V3Beta1.GetGlossaryRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryRequest), global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.ListGlossariesRequest), global::Google.Cloud.Translate.V3Beta1.ListGlossariesRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.ListGlossariesResponse), global::Google.Cloud.Translate.V3Beta1.ListGlossariesResponse.Parser, new[]{ "Glossaries", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata), global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata.Parser, new[]{ "Name", "State", "SubmitTime" }, null, new[]{ typeof(global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata), global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata.Parser, new[]{ "Name", "State", "SubmitTime" }, null, new[]{ typeof(global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryResponse), global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryResponse.Parser, new[]{ "Name", "SubmitTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentRequest), global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentRequest.Parser, new[]{ "Parent", "SourceLanguageCode", "TargetLanguageCodes", "InputConfigs", "OutputConfig", "Models", "Glossaries" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.BatchDocumentInputConfig), global::Google.Cloud.Translate.V3Beta1.BatchDocumentInputConfig.Parser, new[]{ "GcsSource" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.BatchDocumentOutputConfig), global::Google.Cloud.Translate.V3Beta1.BatchDocumentOutputConfig.Parser, new[]{ "GcsDestination" }, new[]{ "Destination" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentResponse), global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentResponse.Parser, new[]{ "TotalPages", "TranslatedPages", "FailedPages", "TotalBillablePages", "TotalCharacters", "TranslatedCharacters", "FailedCharacters", "TotalBillableCharacters", "SubmitTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata), global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata.Parser, new[]{ "State", "TotalPages", "TranslatedPages", "FailedPages", "TotalBillablePages", "TotalCharacters", "TranslatedCharacters", "FailedCharacters", "TotalBillableCharacters", "SubmitTime" }, null, new[]{ typeof(global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata.Types.State) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Configures which glossary should be used for a specific target language,
  /// and defines options for applying that glossary.
  /// </summary>
  public sealed partial class TranslateTextGlossaryConfig : pb::IMessage<TranslateTextGlossaryConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TranslateTextGlossaryConfig> _parser = new pb::MessageParser<TranslateTextGlossaryConfig>(() => new TranslateTextGlossaryConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TranslateTextGlossaryConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateTextGlossaryConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateTextGlossaryConfig(TranslateTextGlossaryConfig other) : this() {
      glossary_ = other.glossary_;
      ignoreCase_ = other.ignoreCase_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateTextGlossaryConfig Clone() {
      return new TranslateTextGlossaryConfig(this);
    }

    /// <summary>Field number for the "glossary" field.</summary>
    public const int GlossaryFieldNumber = 1;
    private string glossary_ = "";
    /// <summary>
    /// Required. Specifies the glossary used for this translation. Use
    /// this format: projects/*/locations/*/glossaries/*
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Glossary {
      get { return glossary_; }
      set {
        glossary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ignore_case" field.</summary>
    public const int IgnoreCaseFieldNumber = 2;
    private bool ignoreCase_;
    /// <summary>
    /// Optional. Indicates match is case-insensitive.
    /// Default value is false if missing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IgnoreCase {
      get { return ignoreCase_; }
      set {
        ignoreCase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TranslateTextGlossaryConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TranslateTextGlossaryConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Glossary != other.Glossary) return false;
      if (IgnoreCase != other.IgnoreCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Glossary.Length != 0) hash ^= Glossary.GetHashCode();
      if (IgnoreCase != false) hash ^= IgnoreCase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Glossary.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Glossary);
      }
      if (IgnoreCase != false) {
        output.WriteRawTag(16);
        output.WriteBool(IgnoreCase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Glossary.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Glossary);
      }
      if (IgnoreCase != false) {
        output.WriteRawTag(16);
        output.WriteBool(IgnoreCase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Glossary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Glossary);
      }
      if (IgnoreCase != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TranslateTextGlossaryConfig other) {
      if (other == null) {
        return;
      }
      if (other.Glossary.Length != 0) {
        Glossary = other.Glossary;
      }
      if (other.IgnoreCase != false) {
        IgnoreCase = other.IgnoreCase;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Glossary = input.ReadString();
            break;
          }
          case 16: {
            IgnoreCase = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Glossary = input.ReadString();
            break;
          }
          case 16: {
            IgnoreCase = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request message for synchronous translation.
  /// </summary>
  public sealed partial class TranslateTextRequest : pb::IMessage<TranslateTextRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TranslateTextRequest> _parser = new pb::MessageParser<TranslateTextRequest>(() => new TranslateTextRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TranslateTextRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateTextRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateTextRequest(TranslateTextRequest other) : this() {
      contents_ = other.contents_.Clone();
      mimeType_ = other.mimeType_;
      sourceLanguageCode_ = other.sourceLanguageCode_;
      targetLanguageCode_ = other.targetLanguageCode_;
      parent_ = other.parent_;
      model_ = other.model_;
      glossaryConfig_ = other.glossaryConfig_ != null ? other.glossaryConfig_.Clone() : null;
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateTextRequest Clone() {
      return new TranslateTextRequest(this);
    }

    /// <summary>Field number for the "contents" field.</summary>
    public const int ContentsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_contents_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> contents_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. The content of the input in string format.
    /// We recommend the total content be less than 30k codepoints. The max length
    /// of this field is 1024.
    /// Use BatchTranslateText for larger text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Contents {
      get { return contents_; }
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 3;
    private string mimeType_ = "";
    /// <summary>
    /// Optional. The format of the source text, for example, "text/html",
    ///  "text/plain". If left blank, the MIME type defaults to "text/html".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_language_code" field.</summary>
    public const int SourceLanguageCodeFieldNumber = 4;
    private string sourceLanguageCode_ = "";
    /// <summary>
    /// Optional. The BCP-47 language code of the input text if
    /// known, for example, "en-US" or "sr-Latn". Supported language codes are
    /// listed in Language Support. If the source language isn't specified, the API
    /// attempts to identify the source language automatically and returns the
    /// source language within the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceLanguageCode {
      get { return sourceLanguageCode_; }
      set {
        sourceLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_language_code" field.</summary>
    public const int TargetLanguageCodeFieldNumber = 5;
    private string targetLanguageCode_ = "";
    /// <summary>
    /// Required. The BCP-47 language code to use for translation of the input
    /// text, set to one of the language codes listed in Language Support.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetLanguageCode {
      get { return targetLanguageCode_; }
      set {
        targetLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 8;
    private string parent_ = "";
    /// <summary>
    /// Required. Project or location to make a call. Must refer to a caller's
    /// project.
    ///
    /// Format: `projects/{project-number-or-id}` or
    /// `projects/{project-number-or-id}/locations/{location-id}`.
    ///
    /// For global calls, use `projects/{project-number-or-id}/locations/global` or
    /// `projects/{project-number-or-id}`.
    ///
    /// Non-global location is required for requests using AutoML models or
    /// custom glossaries.
    ///
    /// Models and glossaries must be within the same region (have same
    /// location-id), otherwise an INVALID_ARGUMENT (400) error is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 6;
    private string model_ = "";
    /// <summary>
    /// Optional. The `model` type requested for this translation.
    ///
    /// The format depends on model type:
    ///
    /// - AutoML Translation models:
    ///   `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}`
    ///
    /// - General (built-in) models:
    ///   `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`,
    ///
    /// For global (non-regionalized) requests, use `location-id` `global`.
    /// For example,
    /// `projects/{project-number-or-id}/locations/global/models/general/nmt`.
    ///
    /// If not provided, the default Google model (NMT) will be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "glossary_config" field.</summary>
    public const int GlossaryConfigFieldNumber = 7;
    private global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig glossaryConfig_;
    /// <summary>
    /// Optional. Glossary to be applied. The glossary must be
    /// within the same region (have the same location-id) as the model, otherwise
    /// an INVALID_ARGUMENT (400) error is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig GlossaryConfig {
      get { return glossaryConfig_; }
      set {
        glossaryConfig_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 10;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 82);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. The labels with user-defined metadata for the request.
    ///
    /// Label keys and values can be no longer than 63 characters
    /// (Unicode codepoints), can only contain lowercase letters, numeric
    /// characters, underscores and dashes. International characters are allowed.
    /// Label values are optional. Label keys must start with a letter.
    ///
    /// See https://cloud.google.com/translate/docs/labels for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TranslateTextRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TranslateTextRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!contents_.Equals(other.contents_)) return false;
      if (MimeType != other.MimeType) return false;
      if (SourceLanguageCode != other.SourceLanguageCode) return false;
      if (TargetLanguageCode != other.TargetLanguageCode) return false;
      if (Parent != other.Parent) return false;
      if (Model != other.Model) return false;
      if (!object.Equals(GlossaryConfig, other.GlossaryConfig)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= contents_.GetHashCode();
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      if (SourceLanguageCode.Length != 0) hash ^= SourceLanguageCode.GetHashCode();
      if (TargetLanguageCode.Length != 0) hash ^= TargetLanguageCode.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (glossaryConfig_ != null) hash ^= GlossaryConfig.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      contents_.WriteTo(output, _repeated_contents_codec);
      if (MimeType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MimeType);
      }
      if (SourceLanguageCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceLanguageCode);
      }
      if (TargetLanguageCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TargetLanguageCode);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Model);
      }
      if (glossaryConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(GlossaryConfig);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Parent);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      contents_.WriteTo(ref output, _repeated_contents_codec);
      if (MimeType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MimeType);
      }
      if (SourceLanguageCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceLanguageCode);
      }
      if (TargetLanguageCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TargetLanguageCode);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Model);
      }
      if (glossaryConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(GlossaryConfig);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Parent);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += contents_.CalculateSize(_repeated_contents_codec);
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (SourceLanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceLanguageCode);
      }
      if (TargetLanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetLanguageCode);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (glossaryConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GlossaryConfig);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TranslateTextRequest other) {
      if (other == null) {
        return;
      }
      contents_.Add(other.contents_);
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      if (other.SourceLanguageCode.Length != 0) {
        SourceLanguageCode = other.SourceLanguageCode;
      }
      if (other.TargetLanguageCode.Length != 0) {
        TargetLanguageCode = other.TargetLanguageCode;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.glossaryConfig_ != null) {
        if (glossaryConfig_ == null) {
          GlossaryConfig = new global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig();
        }
        GlossaryConfig.MergeFrom(other.GlossaryConfig);
      }
      labels_.Add(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            contents_.AddEntriesFrom(input, _repeated_contents_codec);
            break;
          }
          case 26: {
            MimeType = input.ReadString();
            break;
          }
          case 34: {
            SourceLanguageCode = input.ReadString();
            break;
          }
          case 42: {
            TargetLanguageCode = input.ReadString();
            break;
          }
          case 50: {
            Model = input.ReadString();
            break;
          }
          case 58: {
            if (glossaryConfig_ == null) {
              GlossaryConfig = new global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig();
            }
            input.ReadMessage(GlossaryConfig);
            break;
          }
          case 66: {
            Parent = input.ReadString();
            break;
          }
          case 82: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            contents_.AddEntriesFrom(ref input, _repeated_contents_codec);
            break;
          }
          case 26: {
            MimeType = input.ReadString();
            break;
          }
          case 34: {
            SourceLanguageCode = input.ReadString();
            break;
          }
          case 42: {
            TargetLanguageCode = input.ReadString();
            break;
          }
          case 50: {
            Model = input.ReadString();
            break;
          }
          case 58: {
            if (glossaryConfig_ == null) {
              GlossaryConfig = new global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig();
            }
            input.ReadMessage(GlossaryConfig);
            break;
          }
          case 66: {
            Parent = input.ReadString();
            break;
          }
          case 82: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TranslateTextResponse : pb::IMessage<TranslateTextResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TranslateTextResponse> _parser = new pb::MessageParser<TranslateTextResponse>(() => new TranslateTextResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TranslateTextResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateTextResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateTextResponse(TranslateTextResponse other) : this() {
      translations_ = other.translations_.Clone();
      glossaryTranslations_ = other.glossaryTranslations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateTextResponse Clone() {
      return new TranslateTextResponse(this);
    }

    /// <summary>Field number for the "translations" field.</summary>
    public const int TranslationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Translate.V3Beta1.Translation> _repeated_translations_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Translate.V3Beta1.Translation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.Translation> translations_ = new pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.Translation>();
    /// <summary>
    /// Text translation responses with no glossary applied.
    /// This field has the same length as
    /// [`contents`][google.cloud.translation.v3beta1.TranslateTextRequest.contents].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.Translation> Translations {
      get { return translations_; }
    }

    /// <summary>Field number for the "glossary_translations" field.</summary>
    public const int GlossaryTranslationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Translate.V3Beta1.Translation> _repeated_glossaryTranslations_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Translate.V3Beta1.Translation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.Translation> glossaryTranslations_ = new pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.Translation>();
    /// <summary>
    /// Text translation responses if a glossary is provided in the request.
    /// This can be the same as
    /// [`translations`][google.cloud.translation.v3beta1.TranslateTextResponse.translations]
    /// if no terms apply. This field has the same length as
    /// [`contents`][google.cloud.translation.v3beta1.TranslateTextRequest.contents].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.Translation> GlossaryTranslations {
      get { return glossaryTranslations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TranslateTextResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TranslateTextResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!translations_.Equals(other.translations_)) return false;
      if(!glossaryTranslations_.Equals(other.glossaryTranslations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= translations_.GetHashCode();
      hash ^= glossaryTranslations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      translations_.WriteTo(output, _repeated_translations_codec);
      glossaryTranslations_.WriteTo(output, _repeated_glossaryTranslations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      translations_.WriteTo(ref output, _repeated_translations_codec);
      glossaryTranslations_.WriteTo(ref output, _repeated_glossaryTranslations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += translations_.CalculateSize(_repeated_translations_codec);
      size += glossaryTranslations_.CalculateSize(_repeated_glossaryTranslations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TranslateTextResponse other) {
      if (other == null) {
        return;
      }
      translations_.Add(other.translations_);
      glossaryTranslations_.Add(other.glossaryTranslations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            translations_.AddEntriesFrom(input, _repeated_translations_codec);
            break;
          }
          case 26: {
            glossaryTranslations_.AddEntriesFrom(input, _repeated_glossaryTranslations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            translations_.AddEntriesFrom(ref input, _repeated_translations_codec);
            break;
          }
          case 26: {
            glossaryTranslations_.AddEntriesFrom(ref input, _repeated_glossaryTranslations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A single translation response.
  /// </summary>
  public sealed partial class Translation : pb::IMessage<Translation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Translation> _parser = new pb::MessageParser<Translation>(() => new Translation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Translation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Translation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Translation(Translation other) : this() {
      translatedText_ = other.translatedText_;
      model_ = other.model_;
      detectedLanguageCode_ = other.detectedLanguageCode_;
      glossaryConfig_ = other.glossaryConfig_ != null ? other.glossaryConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Translation Clone() {
      return new Translation(this);
    }

    /// <summary>Field number for the "translated_text" field.</summary>
    public const int TranslatedTextFieldNumber = 1;
    private string translatedText_ = "";
    /// <summary>
    /// Text translated into the target language.
    /// If an error occurs during translation, this field might be excluded from
    /// the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TranslatedText {
      get { return translatedText_; }
      set {
        translatedText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 2;
    private string model_ = "";
    /// <summary>
    /// Only present when `model` is present in the request.
    /// `model` here is normalized to have project number.
    ///
    /// For example:
    /// If the `model` requested in TranslationTextRequest is
    /// `projects/{project-id}/locations/{location-id}/models/general/nmt` then
    /// `model` here would be normalized to
    /// `projects/{project-number}/locations/{location-id}/models/general/nmt`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detected_language_code" field.</summary>
    public const int DetectedLanguageCodeFieldNumber = 4;
    private string detectedLanguageCode_ = "";
    /// <summary>
    /// The BCP-47 language code of source text in the initial request, detected
    /// automatically, if no source language was passed within the initial
    /// request. If the source language was passed, auto-detection of the language
    /// does not occur and this field is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetectedLanguageCode {
      get { return detectedLanguageCode_; }
      set {
        detectedLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "glossary_config" field.</summary>
    public const int GlossaryConfigFieldNumber = 3;
    private global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig glossaryConfig_;
    /// <summary>
    /// The `glossary_config` used for this translation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig GlossaryConfig {
      get { return glossaryConfig_; }
      set {
        glossaryConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Translation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Translation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TranslatedText != other.TranslatedText) return false;
      if (Model != other.Model) return false;
      if (DetectedLanguageCode != other.DetectedLanguageCode) return false;
      if (!object.Equals(GlossaryConfig, other.GlossaryConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TranslatedText.Length != 0) hash ^= TranslatedText.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (DetectedLanguageCode.Length != 0) hash ^= DetectedLanguageCode.GetHashCode();
      if (glossaryConfig_ != null) hash ^= GlossaryConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TranslatedText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TranslatedText);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Model);
      }
      if (glossaryConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GlossaryConfig);
      }
      if (DetectedLanguageCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DetectedLanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TranslatedText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TranslatedText);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Model);
      }
      if (glossaryConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GlossaryConfig);
      }
      if (DetectedLanguageCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DetectedLanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TranslatedText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TranslatedText);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (DetectedLanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetectedLanguageCode);
      }
      if (glossaryConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GlossaryConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Translation other) {
      if (other == null) {
        return;
      }
      if (other.TranslatedText.Length != 0) {
        TranslatedText = other.TranslatedText;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.DetectedLanguageCode.Length != 0) {
        DetectedLanguageCode = other.DetectedLanguageCode;
      }
      if (other.glossaryConfig_ != null) {
        if (glossaryConfig_ == null) {
          GlossaryConfig = new global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig();
        }
        GlossaryConfig.MergeFrom(other.GlossaryConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TranslatedText = input.ReadString();
            break;
          }
          case 18: {
            Model = input.ReadString();
            break;
          }
          case 26: {
            if (glossaryConfig_ == null) {
              GlossaryConfig = new global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig();
            }
            input.ReadMessage(GlossaryConfig);
            break;
          }
          case 34: {
            DetectedLanguageCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TranslatedText = input.ReadString();
            break;
          }
          case 18: {
            Model = input.ReadString();
            break;
          }
          case 26: {
            if (glossaryConfig_ == null) {
              GlossaryConfig = new global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig();
            }
            input.ReadMessage(GlossaryConfig);
            break;
          }
          case 34: {
            DetectedLanguageCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request message for language detection.
  /// </summary>
  public sealed partial class DetectLanguageRequest : pb::IMessage<DetectLanguageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DetectLanguageRequest> _parser = new pb::MessageParser<DetectLanguageRequest>(() => new DetectLanguageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectLanguageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectLanguageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectLanguageRequest(DetectLanguageRequest other) : this() {
      parent_ = other.parent_;
      model_ = other.model_;
      mimeType_ = other.mimeType_;
      labels_ = other.labels_.Clone();
      switch (other.SourceCase) {
        case SourceOneofCase.Content:
          Content = other.Content;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectLanguageRequest Clone() {
      return new DetectLanguageRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 5;
    private string parent_ = "";
    /// <summary>
    /// Required. Project or location to make a call. Must refer to a caller's
    /// project.
    ///
    /// Format: `projects/{project-number-or-id}/locations/{location-id}` or
    /// `projects/{project-number-or-id}`.
    ///
    /// For global calls, use `projects/{project-number-or-id}/locations/global` or
    /// `projects/{project-number-or-id}`.
    ///
    /// Only models within the same region (has same location-id) can be used.
    /// Otherwise an INVALID_ARGUMENT (400) error is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 4;
    private string model_ = "";
    /// <summary>
    /// Optional. The language detection model to be used.
    ///
    /// Format:
    /// `projects/{project-number-or-id}/locations/{location-id}/models/language-detection/{model-id}`
    ///
    /// Only one language detection model is currently supported:
    /// `projects/{project-number-or-id}/locations/{location-id}/models/language-detection/default`.
    ///
    /// If not specified, the default model is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    /// <summary>
    /// The content of the input stored as a string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return sourceCase_ == SourceOneofCase.Content ? (string) source_ : ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.Content;
      }
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 3;
    private string mimeType_ = "";
    /// <summary>
    /// Optional. The format of the source text, for example, "text/html",
    /// "text/plain". If left blank, the MIME type defaults to "text/html".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. The labels with user-defined metadata for the request.
    ///
    /// Label keys and values can be no longer than 63 characters
    /// (Unicode codepoints), can only contain lowercase letters, numeric
    /// characters, underscores and dashes. International characters are allowed.
    /// Label values are optional. Label keys must start with a letter.
    ///
    /// See https://cloud.google.com/translate/docs/labels for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      Content = 1,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectLanguageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectLanguageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (Model != other.Model) return false;
      if (Content != other.Content) return false;
      if (MimeType != other.MimeType) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (sourceCase_ == SourceOneofCase.Content) hash ^= Content.GetHashCode();
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      hash ^= Labels.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sourceCase_ == SourceOneofCase.Content) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MimeType);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Model);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Parent);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sourceCase_ == SourceOneofCase.Content) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MimeType);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Model);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Parent);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (sourceCase_ == SourceOneofCase.Content) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectLanguageRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      labels_.Add(other.labels_);
      switch (other.SourceCase) {
        case SourceOneofCase.Content:
          Content = other.Content;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
          case 26: {
            MimeType = input.ReadString();
            break;
          }
          case 34: {
            Model = input.ReadString();
            break;
          }
          case 42: {
            Parent = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
          case 26: {
            MimeType = input.ReadString();
            break;
          }
          case 34: {
            Model = input.ReadString();
            break;
          }
          case 42: {
            Parent = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response message for language detection.
  /// </summary>
  public sealed partial class DetectedLanguage : pb::IMessage<DetectedLanguage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DetectedLanguage> _parser = new pb::MessageParser<DetectedLanguage>(() => new DetectedLanguage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectedLanguage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectedLanguage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectedLanguage(DetectedLanguage other) : this() {
      languageCode_ = other.languageCode_;
      confidence_ = other.confidence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectedLanguage Clone() {
      return new DetectedLanguage(this);
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 1;
    private string languageCode_ = "";
    /// <summary>
    /// The BCP-47 language code of source content in the request, detected
    /// automatically.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 2;
    private float confidence_;
    /// <summary>
    /// The confidence of the detection result for this language.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectedLanguage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectedLanguage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LanguageCode != other.LanguageCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      if (Confidence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Confidence);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LanguageCode);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Confidence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LanguageCode);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Confidence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (Confidence != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectedLanguage other) {
      if (other == null) {
        return;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      if (other.Confidence != 0F) {
        Confidence = other.Confidence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LanguageCode = input.ReadString();
            break;
          }
          case 21: {
            Confidence = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LanguageCode = input.ReadString();
            break;
          }
          case 21: {
            Confidence = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response message for language detection.
  /// </summary>
  public sealed partial class DetectLanguageResponse : pb::IMessage<DetectLanguageResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DetectLanguageResponse> _parser = new pb::MessageParser<DetectLanguageResponse>(() => new DetectLanguageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectLanguageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectLanguageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectLanguageResponse(DetectLanguageResponse other) : this() {
      languages_ = other.languages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectLanguageResponse Clone() {
      return new DetectLanguageResponse(this);
    }

    /// <summary>Field number for the "languages" field.</summary>
    public const int LanguagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Translate.V3Beta1.DetectedLanguage> _repeated_languages_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Translate.V3Beta1.DetectedLanguage.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.DetectedLanguage> languages_ = new pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.DetectedLanguage>();
    /// <summary>
    /// A list of detected languages sorted by detection confidence in descending
    /// order. The most probable language first.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.DetectedLanguage> Languages {
      get { return languages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectLanguageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectLanguageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!languages_.Equals(other.languages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= languages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      languages_.WriteTo(output, _repeated_languages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      languages_.WriteTo(ref output, _repeated_languages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += languages_.CalculateSize(_repeated_languages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectLanguageResponse other) {
      if (other == null) {
        return;
      }
      languages_.Add(other.languages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            languages_.AddEntriesFrom(input, _repeated_languages_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            languages_.AddEntriesFrom(ref input, _repeated_languages_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request message for discovering supported languages.
  /// </summary>
  public sealed partial class GetSupportedLanguagesRequest : pb::IMessage<GetSupportedLanguagesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetSupportedLanguagesRequest> _parser = new pb::MessageParser<GetSupportedLanguagesRequest>(() => new GetSupportedLanguagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSupportedLanguagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSupportedLanguagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSupportedLanguagesRequest(GetSupportedLanguagesRequest other) : this() {
      parent_ = other.parent_;
      displayLanguageCode_ = other.displayLanguageCode_;
      model_ = other.model_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSupportedLanguagesRequest Clone() {
      return new GetSupportedLanguagesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 3;
    private string parent_ = "";
    /// <summary>
    /// Required. Project or location to make a call. Must refer to a caller's
    /// project.
    ///
    /// Format: `projects/{project-number-or-id}` or
    /// `projects/{project-number-or-id}/locations/{location-id}`.
    ///
    /// For global calls, use `projects/{project-number-or-id}/locations/global` or
    /// `projects/{project-number-or-id}`.
    ///
    /// Non-global location is required for AutoML models.
    ///
    /// Only models within the same region (have same location-id) can be used,
    /// otherwise an INVALID_ARGUMENT (400) error is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_language_code" field.</summary>
    public const int DisplayLanguageCodeFieldNumber = 1;
    private string displayLanguageCode_ = "";
    /// <summary>
    /// Optional. The language to use to return localized, human readable names
    /// of supported languages. If missing, then display names are not returned
    /// in a response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayLanguageCode {
      get { return displayLanguageCode_; }
      set {
        displayLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 2;
    private string model_ = "";
    /// <summary>
    /// Optional. Get supported languages of this model.
    ///
    /// The format depends on model type:
    ///
    /// - AutoML Translation models:
    ///   `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}`
    ///
    /// - General (built-in) models:
    ///   `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`,
    ///
    /// Returns languages supported by the specified model.
    /// If missing, we get supported languages of Google general NMT model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSupportedLanguagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSupportedLanguagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (DisplayLanguageCode != other.DisplayLanguageCode) return false;
      if (Model != other.Model) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (DisplayLanguageCode.Length != 0) hash ^= DisplayLanguageCode.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DisplayLanguageCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayLanguageCode);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Model);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DisplayLanguageCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayLanguageCode);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Model);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (DisplayLanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayLanguageCode);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSupportedLanguagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.DisplayLanguageCode.Length != 0) {
        DisplayLanguageCode = other.DisplayLanguageCode;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayLanguageCode = input.ReadString();
            break;
          }
          case 18: {
            Model = input.ReadString();
            break;
          }
          case 26: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayLanguageCode = input.ReadString();
            break;
          }
          case 18: {
            Model = input.ReadString();
            break;
          }
          case 26: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response message for discovering supported languages.
  /// </summary>
  public sealed partial class SupportedLanguages : pb::IMessage<SupportedLanguages>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SupportedLanguages> _parser = new pb::MessageParser<SupportedLanguages>(() => new SupportedLanguages());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SupportedLanguages> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupportedLanguages() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupportedLanguages(SupportedLanguages other) : this() {
      languages_ = other.languages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupportedLanguages Clone() {
      return new SupportedLanguages(this);
    }

    /// <summary>Field number for the "languages" field.</summary>
    public const int LanguagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Translate.V3Beta1.SupportedLanguage> _repeated_languages_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Translate.V3Beta1.SupportedLanguage.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.SupportedLanguage> languages_ = new pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.SupportedLanguage>();
    /// <summary>
    /// A list of supported language responses. This list contains an entry
    /// for each language the Translation API supports.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.SupportedLanguage> Languages {
      get { return languages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SupportedLanguages);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SupportedLanguages other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!languages_.Equals(other.languages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= languages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      languages_.WriteTo(output, _repeated_languages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      languages_.WriteTo(ref output, _repeated_languages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += languages_.CalculateSize(_repeated_languages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SupportedLanguages other) {
      if (other == null) {
        return;
      }
      languages_.Add(other.languages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            languages_.AddEntriesFrom(input, _repeated_languages_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            languages_.AddEntriesFrom(ref input, _repeated_languages_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A single supported language response corresponds to information related
  /// to one supported language.
  /// </summary>
  public sealed partial class SupportedLanguage : pb::IMessage<SupportedLanguage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SupportedLanguage> _parser = new pb::MessageParser<SupportedLanguage>(() => new SupportedLanguage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SupportedLanguage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupportedLanguage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupportedLanguage(SupportedLanguage other) : this() {
      languageCode_ = other.languageCode_;
      displayName_ = other.displayName_;
      supportSource_ = other.supportSource_;
      supportTarget_ = other.supportTarget_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupportedLanguage Clone() {
      return new SupportedLanguage(this);
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 1;
    private string languageCode_ = "";
    /// <summary>
    /// Supported language code, generally consisting of its ISO 639-1
    /// identifier, for example, 'en', 'ja'. In certain cases, BCP-47 codes
    /// including language and region identifiers are returned (for example,
    /// 'zh-TW' and 'zh-CN')
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// Human readable name of the language localized in the display language
    /// specified in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "support_source" field.</summary>
    public const int SupportSourceFieldNumber = 3;
    private bool supportSource_;
    /// <summary>
    /// Can be used as source language.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SupportSource {
      get { return supportSource_; }
      set {
        supportSource_ = value;
      }
    }

    /// <summary>Field number for the "support_target" field.</summary>
    public const int SupportTargetFieldNumber = 4;
    private bool supportTarget_;
    /// <summary>
    /// Can be used as target language.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SupportTarget {
      get { return supportTarget_; }
      set {
        supportTarget_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SupportedLanguage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SupportedLanguage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LanguageCode != other.LanguageCode) return false;
      if (DisplayName != other.DisplayName) return false;
      if (SupportSource != other.SupportSource) return false;
      if (SupportTarget != other.SupportTarget) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (SupportSource != false) hash ^= SupportSource.GetHashCode();
      if (SupportTarget != false) hash ^= SupportTarget.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LanguageCode);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (SupportSource != false) {
        output.WriteRawTag(24);
        output.WriteBool(SupportSource);
      }
      if (SupportTarget != false) {
        output.WriteRawTag(32);
        output.WriteBool(SupportTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LanguageCode);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (SupportSource != false) {
        output.WriteRawTag(24);
        output.WriteBool(SupportSource);
      }
      if (SupportTarget != false) {
        output.WriteRawTag(32);
        output.WriteBool(SupportTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (SupportSource != false) {
        size += 1 + 1;
      }
      if (SupportTarget != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SupportedLanguage other) {
      if (other == null) {
        return;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.SupportSource != false) {
        SupportSource = other.SupportSource;
      }
      if (other.SupportTarget != false) {
        SupportTarget = other.SupportTarget;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LanguageCode = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 24: {
            SupportSource = input.ReadBool();
            break;
          }
          case 32: {
            SupportTarget = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LanguageCode = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 24: {
            SupportSource = input.ReadBool();
            break;
          }
          case 32: {
            SupportTarget = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The Google Cloud Storage location for the input content.
  /// </summary>
  public sealed partial class GcsSource : pb::IMessage<GcsSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GcsSource> _parser = new pb::MessageParser<GcsSource>(() => new GcsSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GcsSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcsSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcsSource(GcsSource other) : this() {
      inputUri_ = other.inputUri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcsSource Clone() {
      return new GcsSource(this);
    }

    /// <summary>Field number for the "input_uri" field.</summary>
    public const int InputUriFieldNumber = 1;
    private string inputUri_ = "";
    /// <summary>
    /// Required. Source data URI. For example, `gs://my_bucket/my_object`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputUri {
      get { return inputUri_; }
      set {
        inputUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GcsSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GcsSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputUri != other.InputUri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InputUri.Length != 0) hash ^= InputUri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InputUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InputUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InputUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InputUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InputUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputUri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GcsSource other) {
      if (other == null) {
        return;
      }
      if (other.InputUri.Length != 0) {
        InputUri = other.InputUri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InputUri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InputUri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Input configuration for BatchTranslateText request.
  /// </summary>
  public sealed partial class InputConfig : pb::IMessage<InputConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InputConfig> _parser = new pb::MessageParser<InputConfig>(() => new InputConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InputConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputConfig(InputConfig other) : this() {
      mimeType_ = other.mimeType_;
      switch (other.SourceCase) {
        case SourceOneofCase.GcsSource:
          GcsSource = other.GcsSource.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputConfig Clone() {
      return new InputConfig(this);
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 1;
    private string mimeType_ = "";
    /// <summary>
    /// Optional. Can be "text/plain" or "text/html".
    /// For `.tsv`, "text/html" is used if mime_type is missing.
    /// For `.html`, this field must be "text/html" or empty.
    /// For `.txt`, this field must be "text/plain" or empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gcs_source" field.</summary>
    public const int GcsSourceFieldNumber = 2;
    /// <summary>
    /// Required. Google Cloud Storage location for the source input.
    /// This can be a single file (for example,
    /// `gs://translation-test/input.tsv`) or a wildcard (for example,
    /// `gs://translation-test/*`). If a file extension is `.tsv`, it can
    /// contain either one or two columns. The first column (optional) is the id
    /// of the text request. If the first column is missing, we use the row
    /// number (0-based) from the input file as the ID in the output file. The
    /// second column is the actual text to be
    ///  translated. We recommend each row be &lt;= 10K Unicode codepoints,
    /// otherwise an error might be returned.
    /// Note that the input tsv must be RFC 4180 compliant.
    ///
    /// You could use https://github.com/Clever/csvlint to check potential
    /// formatting errors in your tsv file.
    /// csvlint --delimiter='\t' your_input_file.tsv
    ///
    /// The other supported file extensions are `.txt` or `.html`, which is
    /// treated as a single large chunk of text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.GcsSource GcsSource {
      get { return sourceCase_ == SourceOneofCase.GcsSource ? (global::Google.Cloud.Translate.V3Beta1.GcsSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.GcsSource;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      GcsSource = 2,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InputConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InputConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MimeType != other.MimeType) return false;
      if (!object.Equals(GcsSource, other.GcsSource)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      if (sourceCase_ == SourceOneofCase.GcsSource) hash ^= GcsSource.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MimeType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MimeType);
      }
      if (sourceCase_ == SourceOneofCase.GcsSource) {
        output.WriteRawTag(18);
        output.WriteMessage(GcsSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MimeType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MimeType);
      }
      if (sourceCase_ == SourceOneofCase.GcsSource) {
        output.WriteRawTag(18);
        output.WriteMessage(GcsSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (sourceCase_ == SourceOneofCase.GcsSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcsSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InputConfig other) {
      if (other == null) {
        return;
      }
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.GcsSource:
          if (GcsSource == null) {
            GcsSource = new global::Google.Cloud.Translate.V3Beta1.GcsSource();
          }
          GcsSource.MergeFrom(other.GcsSource);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MimeType = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.Translate.V3Beta1.GcsSource subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsSource();
            if (sourceCase_ == SourceOneofCase.GcsSource) {
              subBuilder.MergeFrom(GcsSource);
            }
            input.ReadMessage(subBuilder);
            GcsSource = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MimeType = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.Translate.V3Beta1.GcsSource subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsSource();
            if (sourceCase_ == SourceOneofCase.GcsSource) {
              subBuilder.MergeFrom(GcsSource);
            }
            input.ReadMessage(subBuilder);
            GcsSource = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The Google Cloud Storage location for the output content.
  /// </summary>
  public sealed partial class GcsDestination : pb::IMessage<GcsDestination>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GcsDestination> _parser = new pb::MessageParser<GcsDestination>(() => new GcsDestination());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GcsDestination> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcsDestination() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcsDestination(GcsDestination other) : this() {
      outputUriPrefix_ = other.outputUriPrefix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcsDestination Clone() {
      return new GcsDestination(this);
    }

    /// <summary>Field number for the "output_uri_prefix" field.</summary>
    public const int OutputUriPrefixFieldNumber = 1;
    private string outputUriPrefix_ = "";
    /// <summary>
    /// Required. There must be no files under 'output_uri_prefix'.
    /// 'output_uri_prefix' must end with "/" and start with "gs://", otherwise an
    /// INVALID_ARGUMENT (400) error is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputUriPrefix {
      get { return outputUriPrefix_; }
      set {
        outputUriPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GcsDestination);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GcsDestination other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OutputUriPrefix != other.OutputUriPrefix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OutputUriPrefix.Length != 0) hash ^= OutputUriPrefix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OutputUriPrefix.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OutputUriPrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OutputUriPrefix.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OutputUriPrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OutputUriPrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputUriPrefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GcsDestination other) {
      if (other == null) {
        return;
      }
      if (other.OutputUriPrefix.Length != 0) {
        OutputUriPrefix = other.OutputUriPrefix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OutputUriPrefix = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OutputUriPrefix = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Output configuration for BatchTranslateText request.
  /// </summary>
  public sealed partial class OutputConfig : pb::IMessage<OutputConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OutputConfig> _parser = new pb::MessageParser<OutputConfig>(() => new OutputConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutputConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputConfig(OutputConfig other) : this() {
      switch (other.DestinationCase) {
        case DestinationOneofCase.GcsDestination:
          GcsDestination = other.GcsDestination.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputConfig Clone() {
      return new OutputConfig(this);
    }

    /// <summary>Field number for the "gcs_destination" field.</summary>
    public const int GcsDestinationFieldNumber = 1;
    /// <summary>
    /// Google Cloud Storage destination for output content.
    /// For every single input file (for example, gs://a/b/c.[extension]), we
    /// generate at most 2 * n output files. (n is the # of target_language_codes
    /// in the BatchTranslateTextRequest).
    ///
    /// Output files (tsv) generated are compliant with RFC 4180 except that
    /// record delimiters are '\n' instead of '\r\n'. We don't provide any way to
    /// change record delimiters.
    ///
    /// While the input files are being processed, we write/update an index file
    /// 'index.csv'  under 'output_uri_prefix' (for example,
    /// gs://translation-test/index.csv) The index file is generated/updated as
    /// new files are being translated. The format is:
    ///
    /// input_file,target_language_code,translations_file,errors_file,
    /// glossary_translations_file,glossary_errors_file
    ///
    /// input_file is one file we matched using gcs_source.input_uri.
    /// target_language_code is provided in the request.
    /// translations_file contains the translations. (details provided below)
    /// errors_file contains the errors during processing of the file. (details
    /// below). Both translations_file and errors_file could be empty
    /// strings if we have no content to output.
    /// glossary_translations_file and glossary_errors_file are always empty
    /// strings if the input_file is tsv. They could also be empty if we have no
    /// content to output.
    ///
    /// Once a row is present in index.csv, the input/output matching never
    /// changes. Callers should also expect all the content in input_file are
    /// processed and ready to be consumed (that is, no partial output file is
    /// written).
    ///
    /// Since index.csv will be keeping updated during the process, please make
    /// sure there is no custom retention policy applied on the output bucket
    /// that may avoid file updating.
    /// (https://cloud.google.com/storage/docs/bucket-lock?hl=en#retention-policy)
    ///
    /// The format of translations_file (for target language code 'trg') is:
    /// gs://translation_test/a_b_c_'trg'_translations.[extension]
    ///
    /// If the input file extension is tsv, the output has the following
    /// columns:
    /// Column 1: ID of the request provided in the input, if it's not
    /// provided in the input, then the input row number is used (0-based).
    /// Column 2: source sentence.
    /// Column 3: translation without applying a glossary. Empty string if there
    /// is an error.
    /// Column 4 (only present if a glossary is provided in the request):
    /// translation after applying the glossary. Empty string if there is an
    /// error applying the glossary. Could be same string as column 3 if there is
    /// no glossary applied.
    ///
    /// If input file extension is a txt or html, the translation is directly
    /// written to the output file. If glossary is requested, a separate
    /// glossary_translations_file has format of
    /// gs://translation_test/a_b_c_'trg'_glossary_translations.[extension]
    ///
    /// The format of errors file (for target language code 'trg') is:
    /// gs://translation_test/a_b_c_'trg'_errors.[extension]
    ///
    /// If the input file extension is tsv, errors_file contains the following:
    /// Column 1: ID of the request provided in the input, if it's not
    /// provided in the input, then the input row number is used (0-based).
    /// Column 2: source sentence.
    /// Column 3: Error detail for the translation. Could be empty.
    /// Column 4 (only present if a glossary is provided in the request):
    /// Error when applying the glossary.
    ///
    /// If the input file extension is txt or html, glossary_error_file will be
    /// generated that contains error details. glossary_error_file has format of
    /// gs://translation_test/a_b_c_'trg'_glossary_errors.[extension]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.GcsDestination GcsDestination {
      get { return destinationCase_ == DestinationOneofCase.GcsDestination ? (global::Google.Cloud.Translate.V3Beta1.GcsDestination) destination_ : null; }
      set {
        destination_ = value;
        destinationCase_ = value == null ? DestinationOneofCase.None : DestinationOneofCase.GcsDestination;
      }
    }

    private object destination_;
    /// <summary>Enum of possible cases for the "destination" oneof.</summary>
    public enum DestinationOneofCase {
      None = 0,
      GcsDestination = 1,
    }
    private DestinationOneofCase destinationCase_ = DestinationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationOneofCase DestinationCase {
      get { return destinationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDestination() {
      destinationCase_ = DestinationOneofCase.None;
      destination_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutputConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutputConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GcsDestination, other.GcsDestination)) return false;
      if (DestinationCase != other.DestinationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (destinationCase_ == DestinationOneofCase.GcsDestination) hash ^= GcsDestination.GetHashCode();
      hash ^= (int) destinationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (destinationCase_ == DestinationOneofCase.GcsDestination) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsDestination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (destinationCase_ == DestinationOneofCase.GcsDestination) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsDestination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (destinationCase_ == DestinationOneofCase.GcsDestination) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcsDestination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutputConfig other) {
      if (other == null) {
        return;
      }
      switch (other.DestinationCase) {
        case DestinationOneofCase.GcsDestination:
          if (GcsDestination == null) {
            GcsDestination = new global::Google.Cloud.Translate.V3Beta1.GcsDestination();
          }
          GcsDestination.MergeFrom(other.GcsDestination);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Translate.V3Beta1.GcsDestination subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsDestination();
            if (destinationCase_ == DestinationOneofCase.GcsDestination) {
              subBuilder.MergeFrom(GcsDestination);
            }
            input.ReadMessage(subBuilder);
            GcsDestination = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Translate.V3Beta1.GcsDestination subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsDestination();
            if (destinationCase_ == DestinationOneofCase.GcsDestination) {
              subBuilder.MergeFrom(GcsDestination);
            }
            input.ReadMessage(subBuilder);
            GcsDestination = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A document translation request input config.
  /// </summary>
  public sealed partial class DocumentInputConfig : pb::IMessage<DocumentInputConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DocumentInputConfig> _parser = new pb::MessageParser<DocumentInputConfig>(() => new DocumentInputConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentInputConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentInputConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentInputConfig(DocumentInputConfig other) : this() {
      mimeType_ = other.mimeType_;
      switch (other.SourceCase) {
        case SourceOneofCase.Content:
          Content = other.Content;
          break;
        case SourceOneofCase.GcsSource:
          GcsSource = other.GcsSource.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentInputConfig Clone() {
      return new DocumentInputConfig(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    /// <summary>
    /// Document's content represented as a stream of bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return sourceCase_ == SourceOneofCase.Content ? (pb::ByteString) source_ : pb::ByteString.Empty; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.Content;
      }
    }

    /// <summary>Field number for the "gcs_source" field.</summary>
    public const int GcsSourceFieldNumber = 2;
    /// <summary>
    /// Google Cloud Storage location. This must be a single file.
    /// For example: gs://example_bucket/example_file.pdf
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.GcsSource GcsSource {
      get { return sourceCase_ == SourceOneofCase.GcsSource ? (global::Google.Cloud.Translate.V3Beta1.GcsSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.GcsSource;
      }
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 4;
    private string mimeType_ = "";
    /// <summary>
    /// Specifies the input document's mime_type.
    ///
    /// If not specified it will be determined using the file extension for
    /// gcs_source provided files. For a file provided through bytes content the
    /// mime_type must be provided.
    /// Currently supported mime types are:
    /// - application/pdf
    /// - application/vnd.openxmlformats-officedocument.wordprocessingml.document
    /// - application/vnd.openxmlformats-officedocument.presentationml.presentation
    /// - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      Content = 1,
      GcsSource = 2,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentInputConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentInputConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (!object.Equals(GcsSource, other.GcsSource)) return false;
      if (MimeType != other.MimeType) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.Content) hash ^= Content.GetHashCode();
      if (sourceCase_ == SourceOneofCase.GcsSource) hash ^= GcsSource.GetHashCode();
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sourceCase_ == SourceOneofCase.Content) {
        output.WriteRawTag(10);
        output.WriteBytes(Content);
      }
      if (sourceCase_ == SourceOneofCase.GcsSource) {
        output.WriteRawTag(18);
        output.WriteMessage(GcsSource);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MimeType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sourceCase_ == SourceOneofCase.Content) {
        output.WriteRawTag(10);
        output.WriteBytes(Content);
      }
      if (sourceCase_ == SourceOneofCase.GcsSource) {
        output.WriteRawTag(18);
        output.WriteMessage(GcsSource);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MimeType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.Content) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (sourceCase_ == SourceOneofCase.GcsSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcsSource);
      }
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentInputConfig other) {
      if (other == null) {
        return;
      }
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.Content:
          Content = other.Content;
          break;
        case SourceOneofCase.GcsSource:
          if (GcsSource == null) {
            GcsSource = new global::Google.Cloud.Translate.V3Beta1.GcsSource();
          }
          GcsSource.MergeFrom(other.GcsSource);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadBytes();
            break;
          }
          case 18: {
            global::Google.Cloud.Translate.V3Beta1.GcsSource subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsSource();
            if (sourceCase_ == SourceOneofCase.GcsSource) {
              subBuilder.MergeFrom(GcsSource);
            }
            input.ReadMessage(subBuilder);
            GcsSource = subBuilder;
            break;
          }
          case 34: {
            MimeType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Content = input.ReadBytes();
            break;
          }
          case 18: {
            global::Google.Cloud.Translate.V3Beta1.GcsSource subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsSource();
            if (sourceCase_ == SourceOneofCase.GcsSource) {
              subBuilder.MergeFrom(GcsSource);
            }
            input.ReadMessage(subBuilder);
            GcsSource = subBuilder;
            break;
          }
          case 34: {
            MimeType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A document translation request output config.
  /// </summary>
  public sealed partial class DocumentOutputConfig : pb::IMessage<DocumentOutputConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DocumentOutputConfig> _parser = new pb::MessageParser<DocumentOutputConfig>(() => new DocumentOutputConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentOutputConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentOutputConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentOutputConfig(DocumentOutputConfig other) : this() {
      mimeType_ = other.mimeType_;
      switch (other.DestinationCase) {
        case DestinationOneofCase.GcsDestination:
          GcsDestination = other.GcsDestination.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentOutputConfig Clone() {
      return new DocumentOutputConfig(this);
    }

    /// <summary>Field number for the "gcs_destination" field.</summary>
    public const int GcsDestinationFieldNumber = 1;
    /// <summary>
    /// Optional. Google Cloud Storage destination for the translation output,
    /// e.g., `gs://my_bucket/my_directory/`.
    ///
    /// The destination directory provided does not have to be empty, but the
    /// bucket must exist. If a file with the same name as the output file
    /// already exists in the destination an error will be returned.
    ///
    /// For a DocumentInputConfig.contents provided document, the output file
    /// will have the name "output_[trg]_translations.[ext]", where
    /// - [trg] corresponds to the translated file's language code,
    /// - [ext] corresponds to the translated file's extension according to its
    /// mime type.
    ///
    /// For a DocumentInputConfig.gcs_uri provided document, the output file will
    /// have a name according to its URI. For example: an input file with URI:
    /// "gs://a/b/c.[extension]" stored in a gcs_destination bucket with name
    /// "my_bucket" will have an output URI:
    /// "gs://my_bucket/a_b_c_[trg]_translations.[ext]", where
    /// - [trg] corresponds to the translated file's language code,
    /// - [ext] corresponds to the translated file's extension according to its
    /// mime type.
    ///
    /// If the document was directly provided through the request, then the
    /// output document will have the format:
    /// "gs://my_bucket/translated_document_[trg]_translations.[ext], where
    /// - [trg] corresponds to the translated file's language code,
    /// - [ext] corresponds to the translated file's extension according to its
    /// mime type.
    ///
    /// If a glossary was provided, then the output URI for the glossary
    /// translation will be equal to the default output URI but have
    /// `glossary_translations` instead of `translations`. For the previous
    /// example, its glossary URI would be:
    /// "gs://my_bucket/a_b_c_[trg]_glossary_translations.[ext]".
    ///
    /// Thus the max number of output files will be 2 (Translated document,
    /// Glossary translated document).
    ///
    /// Callers should expect no partial outputs. If there is any error during
    /// document translation, no output will be stored in the Cloud Storage
    /// bucket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.GcsDestination GcsDestination {
      get { return destinationCase_ == DestinationOneofCase.GcsDestination ? (global::Google.Cloud.Translate.V3Beta1.GcsDestination) destination_ : null; }
      set {
        destination_ = value;
        destinationCase_ = value == null ? DestinationOneofCase.None : DestinationOneofCase.GcsDestination;
      }
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 3;
    private string mimeType_ = "";
    /// <summary>
    /// Optional. Specifies the translated document's mime_type.
    /// If not specified, the translated file's mime type will be the same as the
    /// input file's mime type.
    /// Currently only support the output mime type to be the same as input mime
    /// type.
    /// - application/pdf
    /// - application/vnd.openxmlformats-officedocument.wordprocessingml.document
    /// - application/vnd.openxmlformats-officedocument.presentationml.presentation
    /// - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object destination_;
    /// <summary>Enum of possible cases for the "destination" oneof.</summary>
    public enum DestinationOneofCase {
      None = 0,
      GcsDestination = 1,
    }
    private DestinationOneofCase destinationCase_ = DestinationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationOneofCase DestinationCase {
      get { return destinationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDestination() {
      destinationCase_ = DestinationOneofCase.None;
      destination_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentOutputConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentOutputConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GcsDestination, other.GcsDestination)) return false;
      if (MimeType != other.MimeType) return false;
      if (DestinationCase != other.DestinationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (destinationCase_ == DestinationOneofCase.GcsDestination) hash ^= GcsDestination.GetHashCode();
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      hash ^= (int) destinationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (destinationCase_ == DestinationOneofCase.GcsDestination) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsDestination);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MimeType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (destinationCase_ == DestinationOneofCase.GcsDestination) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsDestination);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MimeType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (destinationCase_ == DestinationOneofCase.GcsDestination) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcsDestination);
      }
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentOutputConfig other) {
      if (other == null) {
        return;
      }
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      switch (other.DestinationCase) {
        case DestinationOneofCase.GcsDestination:
          if (GcsDestination == null) {
            GcsDestination = new global::Google.Cloud.Translate.V3Beta1.GcsDestination();
          }
          GcsDestination.MergeFrom(other.GcsDestination);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Translate.V3Beta1.GcsDestination subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsDestination();
            if (destinationCase_ == DestinationOneofCase.GcsDestination) {
              subBuilder.MergeFrom(GcsDestination);
            }
            input.ReadMessage(subBuilder);
            GcsDestination = subBuilder;
            break;
          }
          case 26: {
            MimeType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Translate.V3Beta1.GcsDestination subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsDestination();
            if (destinationCase_ == DestinationOneofCase.GcsDestination) {
              subBuilder.MergeFrom(GcsDestination);
            }
            input.ReadMessage(subBuilder);
            GcsDestination = subBuilder;
            break;
          }
          case 26: {
            MimeType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A document translation request.
  /// </summary>
  public sealed partial class TranslateDocumentRequest : pb::IMessage<TranslateDocumentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TranslateDocumentRequest> _parser = new pb::MessageParser<TranslateDocumentRequest>(() => new TranslateDocumentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TranslateDocumentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateDocumentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateDocumentRequest(TranslateDocumentRequest other) : this() {
      parent_ = other.parent_;
      sourceLanguageCode_ = other.sourceLanguageCode_;
      targetLanguageCode_ = other.targetLanguageCode_;
      documentInputConfig_ = other.documentInputConfig_ != null ? other.documentInputConfig_.Clone() : null;
      documentOutputConfig_ = other.documentOutputConfig_ != null ? other.documentOutputConfig_.Clone() : null;
      model_ = other.model_;
      glossaryConfig_ = other.glossaryConfig_ != null ? other.glossaryConfig_.Clone() : null;
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateDocumentRequest Clone() {
      return new TranslateDocumentRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Location to make a regional call.
    ///
    /// Format: `projects/{project-number-or-id}/locations/{location-id}`.
    ///
    /// For global calls, use `projects/{project-number-or-id}/locations/global`.
    ///
    /// Non-global location is required for requests using AutoML models or custom
    /// glossaries.
    ///
    /// Models and glossaries must be within the same region (have the same
    /// location-id), otherwise an INVALID_ARGUMENT (400) error is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_language_code" field.</summary>
    public const int SourceLanguageCodeFieldNumber = 2;
    private string sourceLanguageCode_ = "";
    /// <summary>
    /// Optional. The BCP-47 language code of the input document if known, for
    /// example, "en-US" or "sr-Latn". Supported language codes are listed in
    /// Language Support. If the source language isn't specified, the API attempts
    /// to identify the source language automatically and returns the source
    /// language within the response. Source language must be specified if the
    /// request contains a glossary or a custom model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceLanguageCode {
      get { return sourceLanguageCode_; }
      set {
        sourceLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_language_code" field.</summary>
    public const int TargetLanguageCodeFieldNumber = 3;
    private string targetLanguageCode_ = "";
    /// <summary>
    /// Required. The BCP-47 language code to use for translation of the input
    /// document, set to one of the language codes listed in Language Support.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetLanguageCode {
      get { return targetLanguageCode_; }
      set {
        targetLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "document_input_config" field.</summary>
    public const int DocumentInputConfigFieldNumber = 4;
    private global::Google.Cloud.Translate.V3Beta1.DocumentInputConfig documentInputConfig_;
    /// <summary>
    /// Required. Input configurations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.DocumentInputConfig DocumentInputConfig {
      get { return documentInputConfig_; }
      set {
        documentInputConfig_ = value;
      }
    }

    /// <summary>Field number for the "document_output_config" field.</summary>
    public const int DocumentOutputConfigFieldNumber = 5;
    private global::Google.Cloud.Translate.V3Beta1.DocumentOutputConfig documentOutputConfig_;
    /// <summary>
    /// Optional. Output configurations.
    /// Defines if the output file should be stored within Cloud Storage as well
    /// as the desired output format. If not provided the translated file will
    /// only be returned through a byte-stream and its output mime type will be
    /// the same as the input file's mime type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.DocumentOutputConfig DocumentOutputConfig {
      get { return documentOutputConfig_; }
      set {
        documentOutputConfig_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 6;
    private string model_ = "";
    /// <summary>
    /// Optional. The `model` type requested for this translation.
    ///
    /// The format depends on model type:
    ///
    /// - AutoML Translation models:
    ///   `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}`
    ///
    /// - General (built-in) models:
    ///   `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`,
    ///
    /// If not provided, the default Google model (NMT) will be used for
    /// translation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "glossary_config" field.</summary>
    public const int GlossaryConfigFieldNumber = 7;
    private global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig glossaryConfig_;
    /// <summary>
    /// Optional. Glossary to be applied. The glossary must be within the same
    /// region (have the same location-id) as the model, otherwise an
    /// INVALID_ARGUMENT (400) error is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig GlossaryConfig {
      get { return glossaryConfig_; }
      set {
        glossaryConfig_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 66);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. The labels with user-defined metadata for the request.
    ///
    /// Label keys and values can be no longer than 63 characters (Unicode
    /// codepoints), can only contain lowercase letters, numeric characters,
    /// underscores and dashes. International characters are allowed. Label values
    /// are optional. Label keys must start with a letter.
    ///
    /// See https://cloud.google.com/translate/docs/advanced/labels for more
    /// information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TranslateDocumentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TranslateDocumentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (SourceLanguageCode != other.SourceLanguageCode) return false;
      if (TargetLanguageCode != other.TargetLanguageCode) return false;
      if (!object.Equals(DocumentInputConfig, other.DocumentInputConfig)) return false;
      if (!object.Equals(DocumentOutputConfig, other.DocumentOutputConfig)) return false;
      if (Model != other.Model) return false;
      if (!object.Equals(GlossaryConfig, other.GlossaryConfig)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (SourceLanguageCode.Length != 0) hash ^= SourceLanguageCode.GetHashCode();
      if (TargetLanguageCode.Length != 0) hash ^= TargetLanguageCode.GetHashCode();
      if (documentInputConfig_ != null) hash ^= DocumentInputConfig.GetHashCode();
      if (documentOutputConfig_ != null) hash ^= DocumentOutputConfig.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (glossaryConfig_ != null) hash ^= GlossaryConfig.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (SourceLanguageCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceLanguageCode);
      }
      if (TargetLanguageCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TargetLanguageCode);
      }
      if (documentInputConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DocumentInputConfig);
      }
      if (documentOutputConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DocumentOutputConfig);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Model);
      }
      if (glossaryConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(GlossaryConfig);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (SourceLanguageCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceLanguageCode);
      }
      if (TargetLanguageCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TargetLanguageCode);
      }
      if (documentInputConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DocumentInputConfig);
      }
      if (documentOutputConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DocumentOutputConfig);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Model);
      }
      if (glossaryConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(GlossaryConfig);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (SourceLanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceLanguageCode);
      }
      if (TargetLanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetLanguageCode);
      }
      if (documentInputConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocumentInputConfig);
      }
      if (documentOutputConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocumentOutputConfig);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (glossaryConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GlossaryConfig);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TranslateDocumentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.SourceLanguageCode.Length != 0) {
        SourceLanguageCode = other.SourceLanguageCode;
      }
      if (other.TargetLanguageCode.Length != 0) {
        TargetLanguageCode = other.TargetLanguageCode;
      }
      if (other.documentInputConfig_ != null) {
        if (documentInputConfig_ == null) {
          DocumentInputConfig = new global::Google.Cloud.Translate.V3Beta1.DocumentInputConfig();
        }
        DocumentInputConfig.MergeFrom(other.DocumentInputConfig);
      }
      if (other.documentOutputConfig_ != null) {
        if (documentOutputConfig_ == null) {
          DocumentOutputConfig = new global::Google.Cloud.Translate.V3Beta1.DocumentOutputConfig();
        }
        DocumentOutputConfig.MergeFrom(other.DocumentOutputConfig);
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.glossaryConfig_ != null) {
        if (glossaryConfig_ == null) {
          GlossaryConfig = new global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig();
        }
        GlossaryConfig.MergeFrom(other.GlossaryConfig);
      }
      labels_.Add(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            SourceLanguageCode = input.ReadString();
            break;
          }
          case 26: {
            TargetLanguageCode = input.ReadString();
            break;
          }
          case 34: {
            if (documentInputConfig_ == null) {
              DocumentInputConfig = new global::Google.Cloud.Translate.V3Beta1.DocumentInputConfig();
            }
            input.ReadMessage(DocumentInputConfig);
            break;
          }
          case 42: {
            if (documentOutputConfig_ == null) {
              DocumentOutputConfig = new global::Google.Cloud.Translate.V3Beta1.DocumentOutputConfig();
            }
            input.ReadMessage(DocumentOutputConfig);
            break;
          }
          case 50: {
            Model = input.ReadString();
            break;
          }
          case 58: {
            if (glossaryConfig_ == null) {
              GlossaryConfig = new global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig();
            }
            input.ReadMessage(GlossaryConfig);
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            SourceLanguageCode = input.ReadString();
            break;
          }
          case 26: {
            TargetLanguageCode = input.ReadString();
            break;
          }
          case 34: {
            if (documentInputConfig_ == null) {
              DocumentInputConfig = new global::Google.Cloud.Translate.V3Beta1.DocumentInputConfig();
            }
            input.ReadMessage(DocumentInputConfig);
            break;
          }
          case 42: {
            if (documentOutputConfig_ == null) {
              DocumentOutputConfig = new global::Google.Cloud.Translate.V3Beta1.DocumentOutputConfig();
            }
            input.ReadMessage(DocumentOutputConfig);
            break;
          }
          case 50: {
            Model = input.ReadString();
            break;
          }
          case 58: {
            if (glossaryConfig_ == null) {
              GlossaryConfig = new global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig();
            }
            input.ReadMessage(GlossaryConfig);
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A translated document message.
  /// </summary>
  public sealed partial class DocumentTranslation : pb::IMessage<DocumentTranslation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DocumentTranslation> _parser = new pb::MessageParser<DocumentTranslation>(() => new DocumentTranslation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentTranslation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentTranslation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentTranslation(DocumentTranslation other) : this() {
      byteStreamOutputs_ = other.byteStreamOutputs_.Clone();
      mimeType_ = other.mimeType_;
      detectedLanguageCode_ = other.detectedLanguageCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentTranslation Clone() {
      return new DocumentTranslation(this);
    }

    /// <summary>Field number for the "byte_stream_outputs" field.</summary>
    public const int ByteStreamOutputsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_byteStreamOutputs_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> byteStreamOutputs_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// The array of translated documents. It is expected to be size 1 for now. We
    /// may produce multiple translated documents in the future for other type of
    /// file formats.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ByteStreamOutputs {
      get { return byteStreamOutputs_; }
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 2;
    private string mimeType_ = "";
    /// <summary>
    /// The translated document's mime type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detected_language_code" field.</summary>
    public const int DetectedLanguageCodeFieldNumber = 3;
    private string detectedLanguageCode_ = "";
    /// <summary>
    /// The detected language for the input document.
    /// If the user did not provide the source language for the input document,
    /// this field will have the language code automatically detected. If the
    /// source language was passed, auto-detection of the language does not occur
    /// and this field is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetectedLanguageCode {
      get { return detectedLanguageCode_; }
      set {
        detectedLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentTranslation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentTranslation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!byteStreamOutputs_.Equals(other.byteStreamOutputs_)) return false;
      if (MimeType != other.MimeType) return false;
      if (DetectedLanguageCode != other.DetectedLanguageCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= byteStreamOutputs_.GetHashCode();
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      if (DetectedLanguageCode.Length != 0) hash ^= DetectedLanguageCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      byteStreamOutputs_.WriteTo(output, _repeated_byteStreamOutputs_codec);
      if (MimeType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MimeType);
      }
      if (DetectedLanguageCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DetectedLanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      byteStreamOutputs_.WriteTo(ref output, _repeated_byteStreamOutputs_codec);
      if (MimeType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MimeType);
      }
      if (DetectedLanguageCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DetectedLanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += byteStreamOutputs_.CalculateSize(_repeated_byteStreamOutputs_codec);
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (DetectedLanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetectedLanguageCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentTranslation other) {
      if (other == null) {
        return;
      }
      byteStreamOutputs_.Add(other.byteStreamOutputs_);
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      if (other.DetectedLanguageCode.Length != 0) {
        DetectedLanguageCode = other.DetectedLanguageCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            byteStreamOutputs_.AddEntriesFrom(input, _repeated_byteStreamOutputs_codec);
            break;
          }
          case 18: {
            MimeType = input.ReadString();
            break;
          }
          case 26: {
            DetectedLanguageCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            byteStreamOutputs_.AddEntriesFrom(ref input, _repeated_byteStreamOutputs_codec);
            break;
          }
          case 18: {
            MimeType = input.ReadString();
            break;
          }
          case 26: {
            DetectedLanguageCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A translated document response message.
  /// </summary>
  public sealed partial class TranslateDocumentResponse : pb::IMessage<TranslateDocumentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TranslateDocumentResponse> _parser = new pb::MessageParser<TranslateDocumentResponse>(() => new TranslateDocumentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TranslateDocumentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateDocumentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateDocumentResponse(TranslateDocumentResponse other) : this() {
      documentTranslation_ = other.documentTranslation_ != null ? other.documentTranslation_.Clone() : null;
      glossaryDocumentTranslation_ = other.glossaryDocumentTranslation_ != null ? other.glossaryDocumentTranslation_.Clone() : null;
      model_ = other.model_;
      glossaryConfig_ = other.glossaryConfig_ != null ? other.glossaryConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslateDocumentResponse Clone() {
      return new TranslateDocumentResponse(this);
    }

    /// <summary>Field number for the "document_translation" field.</summary>
    public const int DocumentTranslationFieldNumber = 1;
    private global::Google.Cloud.Translate.V3Beta1.DocumentTranslation documentTranslation_;
    /// <summary>
    /// Translated document.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.DocumentTranslation DocumentTranslation {
      get { return documentTranslation_; }
      set {
        documentTranslation_ = value;
      }
    }

    /// <summary>Field number for the "glossary_document_translation" field.</summary>
    public const int GlossaryDocumentTranslationFieldNumber = 2;
    private global::Google.Cloud.Translate.V3Beta1.DocumentTranslation glossaryDocumentTranslation_;
    /// <summary>
    /// The document's translation output if a glossary is provided in the request.
    /// This can be the same as [TranslateDocumentResponse.document_translation]
    /// if no glossary terms apply.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.DocumentTranslation GlossaryDocumentTranslation {
      get { return glossaryDocumentTranslation_; }
      set {
        glossaryDocumentTranslation_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 3;
    private string model_ = "";
    /// <summary>
    /// Only present when 'model' is present in the request.
    /// 'model' is normalized to have a project number.
    ///
    /// For example:
    /// If the 'model' field in TranslateDocumentRequest is:
    /// `projects/{project-id}/locations/{location-id}/models/general/nmt` then
    /// `model` here would be normalized to
    /// `projects/{project-number}/locations/{location-id}/models/general/nmt`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "glossary_config" field.</summary>
    public const int GlossaryConfigFieldNumber = 4;
    private global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig glossaryConfig_;
    /// <summary>
    /// The `glossary_config` used for this translation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig GlossaryConfig {
      get { return glossaryConfig_; }
      set {
        glossaryConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TranslateDocumentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TranslateDocumentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DocumentTranslation, other.DocumentTranslation)) return false;
      if (!object.Equals(GlossaryDocumentTranslation, other.GlossaryDocumentTranslation)) return false;
      if (Model != other.Model) return false;
      if (!object.Equals(GlossaryConfig, other.GlossaryConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (documentTranslation_ != null) hash ^= DocumentTranslation.GetHashCode();
      if (glossaryDocumentTranslation_ != null) hash ^= GlossaryDocumentTranslation.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (glossaryConfig_ != null) hash ^= GlossaryConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (documentTranslation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DocumentTranslation);
      }
      if (glossaryDocumentTranslation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GlossaryDocumentTranslation);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Model);
      }
      if (glossaryConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GlossaryConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (documentTranslation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DocumentTranslation);
      }
      if (glossaryDocumentTranslation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GlossaryDocumentTranslation);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Model);
      }
      if (glossaryConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GlossaryConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (documentTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocumentTranslation);
      }
      if (glossaryDocumentTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GlossaryDocumentTranslation);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (glossaryConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GlossaryConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TranslateDocumentResponse other) {
      if (other == null) {
        return;
      }
      if (other.documentTranslation_ != null) {
        if (documentTranslation_ == null) {
          DocumentTranslation = new global::Google.Cloud.Translate.V3Beta1.DocumentTranslation();
        }
        DocumentTranslation.MergeFrom(other.DocumentTranslation);
      }
      if (other.glossaryDocumentTranslation_ != null) {
        if (glossaryDocumentTranslation_ == null) {
          GlossaryDocumentTranslation = new global::Google.Cloud.Translate.V3Beta1.DocumentTranslation();
        }
        GlossaryDocumentTranslation.MergeFrom(other.GlossaryDocumentTranslation);
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.glossaryConfig_ != null) {
        if (glossaryConfig_ == null) {
          GlossaryConfig = new global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig();
        }
        GlossaryConfig.MergeFrom(other.GlossaryConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (documentTranslation_ == null) {
              DocumentTranslation = new global::Google.Cloud.Translate.V3Beta1.DocumentTranslation();
            }
            input.ReadMessage(DocumentTranslation);
            break;
          }
          case 18: {
            if (glossaryDocumentTranslation_ == null) {
              GlossaryDocumentTranslation = new global::Google.Cloud.Translate.V3Beta1.DocumentTranslation();
            }
            input.ReadMessage(GlossaryDocumentTranslation);
            break;
          }
          case 26: {
            Model = input.ReadString();
            break;
          }
          case 34: {
            if (glossaryConfig_ == null) {
              GlossaryConfig = new global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig();
            }
            input.ReadMessage(GlossaryConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (documentTranslation_ == null) {
              DocumentTranslation = new global::Google.Cloud.Translate.V3Beta1.DocumentTranslation();
            }
            input.ReadMessage(DocumentTranslation);
            break;
          }
          case 18: {
            if (glossaryDocumentTranslation_ == null) {
              GlossaryDocumentTranslation = new global::Google.Cloud.Translate.V3Beta1.DocumentTranslation();
            }
            input.ReadMessage(GlossaryDocumentTranslation);
            break;
          }
          case 26: {
            Model = input.ReadString();
            break;
          }
          case 34: {
            if (glossaryConfig_ == null) {
              GlossaryConfig = new global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig();
            }
            input.ReadMessage(GlossaryConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The batch translation request.
  /// </summary>
  public sealed partial class BatchTranslateTextRequest : pb::IMessage<BatchTranslateTextRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchTranslateTextRequest> _parser = new pb::MessageParser<BatchTranslateTextRequest>(() => new BatchTranslateTextRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchTranslateTextRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateTextRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateTextRequest(BatchTranslateTextRequest other) : this() {
      parent_ = other.parent_;
      sourceLanguageCode_ = other.sourceLanguageCode_;
      targetLanguageCodes_ = other.targetLanguageCodes_.Clone();
      models_ = other.models_.Clone();
      inputConfigs_ = other.inputConfigs_.Clone();
      outputConfig_ = other.outputConfig_ != null ? other.outputConfig_.Clone() : null;
      glossaries_ = other.glossaries_.Clone();
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateTextRequest Clone() {
      return new BatchTranslateTextRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Location to make a call. Must refer to a caller's project.
    ///
    /// Format: `projects/{project-number-or-id}/locations/{location-id}`.
    ///
    /// The `global` location is not supported for batch translation.
    ///
    /// Only AutoML Translation models or glossaries within the same region (have
    /// the same location-id) can be used, otherwise an INVALID_ARGUMENT (400)
    /// error is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_language_code" field.</summary>
    public const int SourceLanguageCodeFieldNumber = 2;
    private string sourceLanguageCode_ = "";
    /// <summary>
    /// Required. Source language code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceLanguageCode {
      get { return sourceLanguageCode_; }
      set {
        sourceLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_language_codes" field.</summary>
    public const int TargetLanguageCodesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_targetLanguageCodes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> targetLanguageCodes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. Specify up to 10 language codes here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TargetLanguageCodes {
      get { return targetLanguageCodes_; }
    }

    /// <summary>Field number for the "models" field.</summary>
    public const int ModelsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_models_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 34);
    private readonly pbc::MapField<string, string> models_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. The models to use for translation. Map's key is target language
    /// code. Map's value is model name. Value can be a built-in general model,
    /// or an AutoML Translation model.
    ///
    /// The value format depends on model type:
    ///
    /// - AutoML Translation models:
    ///   `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}`
    ///
    /// - General (built-in) models:
    ///   `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`,
    ///
    /// If the map is empty or a specific model is
    /// not requested for a language pair, then default google model (nmt) is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Models {
      get { return models_; }
    }

    /// <summary>Field number for the "input_configs" field.</summary>
    public const int InputConfigsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.Translate.V3Beta1.InputConfig> _repeated_inputConfigs_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Translate.V3Beta1.InputConfig.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.InputConfig> inputConfigs_ = new pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.InputConfig>();
    /// <summary>
    /// Required. Input configurations.
    /// The total number of files matched should be &lt;= 100.
    /// The total content size should be &lt;= 100M Unicode codepoints.
    /// The files must use UTF-8 encoding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.InputConfig> InputConfigs {
      get { return inputConfigs_; }
    }

    /// <summary>Field number for the "output_config" field.</summary>
    public const int OutputConfigFieldNumber = 6;
    private global::Google.Cloud.Translate.V3Beta1.OutputConfig outputConfig_;
    /// <summary>
    /// Required. Output configuration.
    /// If 2 input configs match to the same file (that is, same input path),
    /// we don't generate output for duplicate inputs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.OutputConfig OutputConfig {
      get { return outputConfig_; }
      set {
        outputConfig_ = value;
      }
    }

    /// <summary>Field number for the "glossaries" field.</summary>
    public const int GlossariesFieldNumber = 7;
    private static readonly pbc::MapField<string, global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig>.Codec _map_glossaries_codec
        = new pbc::MapField<string, global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig.Parser), 58);
    private readonly pbc::MapField<string, global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig> glossaries_ = new pbc::MapField<string, global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig>();
    /// <summary>
    /// Optional. Glossaries to be applied for translation.
    /// It's keyed by target language code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig> Glossaries {
      get { return glossaries_; }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 74);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. The labels with user-defined metadata for the request.
    ///
    /// Label keys and values can be no longer than 63 characters
    /// (Unicode codepoints), can only contain lowercase letters, numeric
    /// characters, underscores and dashes. International characters are allowed.
    /// Label values are optional. Label keys must start with a letter.
    ///
    /// See https://cloud.google.com/translate/docs/labels for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchTranslateTextRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchTranslateTextRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (SourceLanguageCode != other.SourceLanguageCode) return false;
      if(!targetLanguageCodes_.Equals(other.targetLanguageCodes_)) return false;
      if (!Models.Equals(other.Models)) return false;
      if(!inputConfigs_.Equals(other.inputConfigs_)) return false;
      if (!object.Equals(OutputConfig, other.OutputConfig)) return false;
      if (!Glossaries.Equals(other.Glossaries)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (SourceLanguageCode.Length != 0) hash ^= SourceLanguageCode.GetHashCode();
      hash ^= targetLanguageCodes_.GetHashCode();
      hash ^= Models.GetHashCode();
      hash ^= inputConfigs_.GetHashCode();
      if (outputConfig_ != null) hash ^= OutputConfig.GetHashCode();
      hash ^= Glossaries.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (SourceLanguageCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceLanguageCode);
      }
      targetLanguageCodes_.WriteTo(output, _repeated_targetLanguageCodes_codec);
      models_.WriteTo(output, _map_models_codec);
      inputConfigs_.WriteTo(output, _repeated_inputConfigs_codec);
      if (outputConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(OutputConfig);
      }
      glossaries_.WriteTo(output, _map_glossaries_codec);
      labels_.WriteTo(output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (SourceLanguageCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceLanguageCode);
      }
      targetLanguageCodes_.WriteTo(ref output, _repeated_targetLanguageCodes_codec);
      models_.WriteTo(ref output, _map_models_codec);
      inputConfigs_.WriteTo(ref output, _repeated_inputConfigs_codec);
      if (outputConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(OutputConfig);
      }
      glossaries_.WriteTo(ref output, _map_glossaries_codec);
      labels_.WriteTo(ref output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (SourceLanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceLanguageCode);
      }
      size += targetLanguageCodes_.CalculateSize(_repeated_targetLanguageCodes_codec);
      size += models_.CalculateSize(_map_models_codec);
      size += inputConfigs_.CalculateSize(_repeated_inputConfigs_codec);
      if (outputConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutputConfig);
      }
      size += glossaries_.CalculateSize(_map_glossaries_codec);
      size += labels_.CalculateSize(_map_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchTranslateTextRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.SourceLanguageCode.Length != 0) {
        SourceLanguageCode = other.SourceLanguageCode;
      }
      targetLanguageCodes_.Add(other.targetLanguageCodes_);
      models_.Add(other.models_);
      inputConfigs_.Add(other.inputConfigs_);
      if (other.outputConfig_ != null) {
        if (outputConfig_ == null) {
          OutputConfig = new global::Google.Cloud.Translate.V3Beta1.OutputConfig();
        }
        OutputConfig.MergeFrom(other.OutputConfig);
      }
      glossaries_.Add(other.glossaries_);
      labels_.Add(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            SourceLanguageCode = input.ReadString();
            break;
          }
          case 26: {
            targetLanguageCodes_.AddEntriesFrom(input, _repeated_targetLanguageCodes_codec);
            break;
          }
          case 34: {
            models_.AddEntriesFrom(input, _map_models_codec);
            break;
          }
          case 42: {
            inputConfigs_.AddEntriesFrom(input, _repeated_inputConfigs_codec);
            break;
          }
          case 50: {
            if (outputConfig_ == null) {
              OutputConfig = new global::Google.Cloud.Translate.V3Beta1.OutputConfig();
            }
            input.ReadMessage(OutputConfig);
            break;
          }
          case 58: {
            glossaries_.AddEntriesFrom(input, _map_glossaries_codec);
            break;
          }
          case 74: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            SourceLanguageCode = input.ReadString();
            break;
          }
          case 26: {
            targetLanguageCodes_.AddEntriesFrom(ref input, _repeated_targetLanguageCodes_codec);
            break;
          }
          case 34: {
            models_.AddEntriesFrom(ref input, _map_models_codec);
            break;
          }
          case 42: {
            inputConfigs_.AddEntriesFrom(ref input, _repeated_inputConfigs_codec);
            break;
          }
          case 50: {
            if (outputConfig_ == null) {
              OutputConfig = new global::Google.Cloud.Translate.V3Beta1.OutputConfig();
            }
            input.ReadMessage(OutputConfig);
            break;
          }
          case 58: {
            glossaries_.AddEntriesFrom(ref input, _map_glossaries_codec);
            break;
          }
          case 74: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// State metadata for the batch translation operation.
  /// </summary>
  public sealed partial class BatchTranslateMetadata : pb::IMessage<BatchTranslateMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchTranslateMetadata> _parser = new pb::MessageParser<BatchTranslateMetadata>(() => new BatchTranslateMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchTranslateMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateMetadata(BatchTranslateMetadata other) : this() {
      state_ = other.state_;
      translatedCharacters_ = other.translatedCharacters_;
      failedCharacters_ = other.failedCharacters_;
      totalCharacters_ = other.totalCharacters_;
      submitTime_ = other.submitTime_ != null ? other.submitTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateMetadata Clone() {
      return new BatchTranslateMetadata(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata.Types.State state_ = global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata.Types.State.Unspecified;
    /// <summary>
    /// The state of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "translated_characters" field.</summary>
    public const int TranslatedCharactersFieldNumber = 2;
    private long translatedCharacters_;
    /// <summary>
    /// Number of successfully translated characters so far (Unicode codepoints).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TranslatedCharacters {
      get { return translatedCharacters_; }
      set {
        translatedCharacters_ = value;
      }
    }

    /// <summary>Field number for the "failed_characters" field.</summary>
    public const int FailedCharactersFieldNumber = 3;
    private long failedCharacters_;
    /// <summary>
    /// Number of characters that have failed to process so far (Unicode
    /// codepoints).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FailedCharacters {
      get { return failedCharacters_; }
      set {
        failedCharacters_ = value;
      }
    }

    /// <summary>Field number for the "total_characters" field.</summary>
    public const int TotalCharactersFieldNumber = 4;
    private long totalCharacters_;
    /// <summary>
    /// Total number of characters (Unicode codepoints).
    /// This is the total number of codepoints from input files times the number of
    /// target languages and appears here shortly after the call is submitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalCharacters {
      get { return totalCharacters_; }
      set {
        totalCharacters_ = value;
      }
    }

    /// <summary>Field number for the "submit_time" field.</summary>
    public const int SubmitTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp submitTime_;
    /// <summary>
    /// Time when the operation was submitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SubmitTime {
      get { return submitTime_; }
      set {
        submitTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchTranslateMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchTranslateMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (TranslatedCharacters != other.TranslatedCharacters) return false;
      if (FailedCharacters != other.FailedCharacters) return false;
      if (TotalCharacters != other.TotalCharacters) return false;
      if (!object.Equals(SubmitTime, other.SubmitTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (TranslatedCharacters != 0L) hash ^= TranslatedCharacters.GetHashCode();
      if (FailedCharacters != 0L) hash ^= FailedCharacters.GetHashCode();
      if (TotalCharacters != 0L) hash ^= TotalCharacters.GetHashCode();
      if (submitTime_ != null) hash ^= SubmitTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata.Types.State.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (TranslatedCharacters != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TranslatedCharacters);
      }
      if (FailedCharacters != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FailedCharacters);
      }
      if (TotalCharacters != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalCharacters);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SubmitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata.Types.State.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (TranslatedCharacters != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TranslatedCharacters);
      }
      if (FailedCharacters != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FailedCharacters);
      }
      if (TotalCharacters != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalCharacters);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SubmitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (TranslatedCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TranslatedCharacters);
      }
      if (FailedCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FailedCharacters);
      }
      if (TotalCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalCharacters);
      }
      if (submitTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubmitTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchTranslateMetadata other) {
      if (other == null) {
        return;
      }
      if (other.State != global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.TranslatedCharacters != 0L) {
        TranslatedCharacters = other.TranslatedCharacters;
      }
      if (other.FailedCharacters != 0L) {
        FailedCharacters = other.FailedCharacters;
      }
      if (other.TotalCharacters != 0L) {
        TotalCharacters = other.TotalCharacters;
      }
      if (other.submitTime_ != null) {
        if (submitTime_ == null) {
          SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SubmitTime.MergeFrom(other.SubmitTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata.Types.State) input.ReadEnum();
            break;
          }
          case 16: {
            TranslatedCharacters = input.ReadInt64();
            break;
          }
          case 24: {
            FailedCharacters = input.ReadInt64();
            break;
          }
          case 32: {
            TotalCharacters = input.ReadInt64();
            break;
          }
          case 42: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = (global::Google.Cloud.Translate.V3Beta1.BatchTranslateMetadata.Types.State) input.ReadEnum();
            break;
          }
          case 16: {
            TranslatedCharacters = input.ReadInt64();
            break;
          }
          case 24: {
            FailedCharacters = input.ReadInt64();
            break;
          }
          case 32: {
            TotalCharacters = input.ReadInt64();
            break;
          }
          case 42: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BatchTranslateMetadata message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// State of the job.
      /// </summary>
      public enum State {
        /// <summary>
        /// Invalid.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Request is being processed.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 1,
        /// <summary>
        /// The batch is processed, and at least one item was successfully
        /// processed.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 2,
        /// <summary>
        /// The batch is done and no item was successfully processed.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 3,
        /// <summary>
        /// Request is in the process of being canceled after caller invoked
        /// longrunning.Operations.CancelOperation on the request id.
        /// </summary>
        [pbr::OriginalName("CANCELLING")] Cancelling = 4,
        /// <summary>
        /// The batch is done after the user has called the
        /// longrunning.Operations.CancelOperation. Any records processed before the
        /// cancel command are output as specified in the request.
        /// </summary>
        [pbr::OriginalName("CANCELLED")] Cancelled = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Stored in the
  /// [google.longrunning.Operation.response][google.longrunning.Operation.response]
  /// field returned by BatchTranslateText if at least one sentence is translated
  /// successfully.
  /// </summary>
  public sealed partial class BatchTranslateResponse : pb::IMessage<BatchTranslateResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchTranslateResponse> _parser = new pb::MessageParser<BatchTranslateResponse>(() => new BatchTranslateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchTranslateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateResponse(BatchTranslateResponse other) : this() {
      totalCharacters_ = other.totalCharacters_;
      translatedCharacters_ = other.translatedCharacters_;
      failedCharacters_ = other.failedCharacters_;
      submitTime_ = other.submitTime_ != null ? other.submitTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateResponse Clone() {
      return new BatchTranslateResponse(this);
    }

    /// <summary>Field number for the "total_characters" field.</summary>
    public const int TotalCharactersFieldNumber = 1;
    private long totalCharacters_;
    /// <summary>
    /// Total number of characters (Unicode codepoints).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalCharacters {
      get { return totalCharacters_; }
      set {
        totalCharacters_ = value;
      }
    }

    /// <summary>Field number for the "translated_characters" field.</summary>
    public const int TranslatedCharactersFieldNumber = 2;
    private long translatedCharacters_;
    /// <summary>
    /// Number of successfully translated characters (Unicode codepoints).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TranslatedCharacters {
      get { return translatedCharacters_; }
      set {
        translatedCharacters_ = value;
      }
    }

    /// <summary>Field number for the "failed_characters" field.</summary>
    public const int FailedCharactersFieldNumber = 3;
    private long failedCharacters_;
    /// <summary>
    /// Number of characters that have failed to process (Unicode codepoints).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FailedCharacters {
      get { return failedCharacters_; }
      set {
        failedCharacters_ = value;
      }
    }

    /// <summary>Field number for the "submit_time" field.</summary>
    public const int SubmitTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp submitTime_;
    /// <summary>
    /// Time when the operation was submitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SubmitTime {
      get { return submitTime_; }
      set {
        submitTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The time when the operation is finished and
    /// [google.longrunning.Operation.done][google.longrunning.Operation.done] is
    /// set to true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchTranslateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchTranslateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalCharacters != other.TotalCharacters) return false;
      if (TranslatedCharacters != other.TranslatedCharacters) return false;
      if (FailedCharacters != other.FailedCharacters) return false;
      if (!object.Equals(SubmitTime, other.SubmitTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalCharacters != 0L) hash ^= TotalCharacters.GetHashCode();
      if (TranslatedCharacters != 0L) hash ^= TranslatedCharacters.GetHashCode();
      if (FailedCharacters != 0L) hash ^= FailedCharacters.GetHashCode();
      if (submitTime_ != null) hash ^= SubmitTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalCharacters != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TotalCharacters);
      }
      if (TranslatedCharacters != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TranslatedCharacters);
      }
      if (FailedCharacters != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FailedCharacters);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SubmitTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalCharacters != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TotalCharacters);
      }
      if (TranslatedCharacters != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TranslatedCharacters);
      }
      if (FailedCharacters != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FailedCharacters);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SubmitTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalCharacters);
      }
      if (TranslatedCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TranslatedCharacters);
      }
      if (FailedCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FailedCharacters);
      }
      if (submitTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubmitTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchTranslateResponse other) {
      if (other == null) {
        return;
      }
      if (other.TotalCharacters != 0L) {
        TotalCharacters = other.TotalCharacters;
      }
      if (other.TranslatedCharacters != 0L) {
        TranslatedCharacters = other.TranslatedCharacters;
      }
      if (other.FailedCharacters != 0L) {
        FailedCharacters = other.FailedCharacters;
      }
      if (other.submitTime_ != null) {
        if (submitTime_ == null) {
          SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SubmitTime.MergeFrom(other.SubmitTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalCharacters = input.ReadInt64();
            break;
          }
          case 16: {
            TranslatedCharacters = input.ReadInt64();
            break;
          }
          case 24: {
            FailedCharacters = input.ReadInt64();
            break;
          }
          case 34: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalCharacters = input.ReadInt64();
            break;
          }
          case 16: {
            TranslatedCharacters = input.ReadInt64();
            break;
          }
          case 24: {
            FailedCharacters = input.ReadInt64();
            break;
          }
          case 34: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Input configuration for glossaries.
  /// </summary>
  public sealed partial class GlossaryInputConfig : pb::IMessage<GlossaryInputConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GlossaryInputConfig> _parser = new pb::MessageParser<GlossaryInputConfig>(() => new GlossaryInputConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GlossaryInputConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlossaryInputConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlossaryInputConfig(GlossaryInputConfig other) : this() {
      switch (other.SourceCase) {
        case SourceOneofCase.GcsSource:
          GcsSource = other.GcsSource.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlossaryInputConfig Clone() {
      return new GlossaryInputConfig(this);
    }

    /// <summary>Field number for the "gcs_source" field.</summary>
    public const int GcsSourceFieldNumber = 1;
    /// <summary>
    /// Required. Google Cloud Storage location of glossary data.
    /// File format is determined based on the filename extension. API returns
    /// [google.rpc.Code.INVALID_ARGUMENT] for unsupported URI-s and file
    /// formats. Wildcards are not allowed. This must be a single file in one of
    /// the following formats:
    ///
    /// For unidirectional glossaries:
    ///
    /// - TSV/CSV (`.tsv`/`.csv`): 2 column file, tab- or comma-separated.
    ///   The first column is source text. The second column is target text.
    ///   The file must not contain headers. That is, the first row is data, not
    ///   column names.
    ///
    /// - TMX (`.tmx`): TMX file with parallel data defining source/target term
    /// pairs.
    ///
    /// For equivalent term sets glossaries:
    ///
    /// - CSV (`.csv`): Multi-column CSV file defining equivalent glossary terms
    ///   in multiple languages. The format is defined for Google Translation
    ///   Toolkit and documented in [Use a
    ///   glossary](https://support.google.com/translatortoolkit/answer/6306379?hl=en).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.GcsSource GcsSource {
      get { return sourceCase_ == SourceOneofCase.GcsSource ? (global::Google.Cloud.Translate.V3Beta1.GcsSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.GcsSource;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      GcsSource = 1,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GlossaryInputConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GlossaryInputConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GcsSource, other.GcsSource)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.GcsSource) hash ^= GcsSource.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sourceCase_ == SourceOneofCase.GcsSource) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sourceCase_ == SourceOneofCase.GcsSource) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.GcsSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcsSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GlossaryInputConfig other) {
      if (other == null) {
        return;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.GcsSource:
          if (GcsSource == null) {
            GcsSource = new global::Google.Cloud.Translate.V3Beta1.GcsSource();
          }
          GcsSource.MergeFrom(other.GcsSource);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Translate.V3Beta1.GcsSource subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsSource();
            if (sourceCase_ == SourceOneofCase.GcsSource) {
              subBuilder.MergeFrom(GcsSource);
            }
            input.ReadMessage(subBuilder);
            GcsSource = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Translate.V3Beta1.GcsSource subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsSource();
            if (sourceCase_ == SourceOneofCase.GcsSource) {
              subBuilder.MergeFrom(GcsSource);
            }
            input.ReadMessage(subBuilder);
            GcsSource = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a glossary built from user provided data.
  /// </summary>
  public sealed partial class Glossary : pb::IMessage<Glossary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Glossary> _parser = new pb::MessageParser<Glossary>(() => new Glossary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Glossary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Glossary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Glossary(Glossary other) : this() {
      name_ = other.name_;
      inputConfig_ = other.inputConfig_ != null ? other.inputConfig_.Clone() : null;
      entryCount_ = other.entryCount_;
      submitTime_ = other.submitTime_ != null ? other.submitTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      switch (other.LanguagesCase) {
        case LanguagesOneofCase.LanguagePair:
          LanguagePair = other.LanguagePair.Clone();
          break;
        case LanguagesOneofCase.LanguageCodesSet:
          LanguageCodesSet = other.LanguageCodesSet.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Glossary Clone() {
      return new Glossary(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name of the glossary. Glossary names have the form
    /// `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language_pair" field.</summary>
    public const int LanguagePairFieldNumber = 3;
    /// <summary>
    /// Used with unidirectional glossaries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodePair LanguagePair {
      get { return languagesCase_ == LanguagesOneofCase.LanguagePair ? (global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodePair) languages_ : null; }
      set {
        languages_ = value;
        languagesCase_ = value == null ? LanguagesOneofCase.None : LanguagesOneofCase.LanguagePair;
      }
    }

    /// <summary>Field number for the "language_codes_set" field.</summary>
    public const int LanguageCodesSetFieldNumber = 4;
    /// <summary>
    /// Used with equivalent term set glossaries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodesSet LanguageCodesSet {
      get { return languagesCase_ == LanguagesOneofCase.LanguageCodesSet ? (global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodesSet) languages_ : null; }
      set {
        languages_ = value;
        languagesCase_ = value == null ? LanguagesOneofCase.None : LanguagesOneofCase.LanguageCodesSet;
      }
    }

    /// <summary>Field number for the "input_config" field.</summary>
    public const int InputConfigFieldNumber = 5;
    private global::Google.Cloud.Translate.V3Beta1.GlossaryInputConfig inputConfig_;
    /// <summary>
    /// Required. Provides examples to build the glossary from.
    /// Total glossary must not exceed 10M Unicode codepoints.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.GlossaryInputConfig InputConfig {
      get { return inputConfig_; }
      set {
        inputConfig_ = value;
      }
    }

    /// <summary>Field number for the "entry_count" field.</summary>
    public const int EntryCountFieldNumber = 6;
    private int entryCount_;
    /// <summary>
    /// Output only. The number of entries defined in the glossary.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EntryCount {
      get { return entryCount_; }
      set {
        entryCount_ = value;
      }
    }

    /// <summary>Field number for the "submit_time" field.</summary>
    public const int SubmitTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp submitTime_;
    /// <summary>
    /// Output only. When CreateGlossary was called.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SubmitTime {
      get { return submitTime_; }
      set {
        submitTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Output only. When the glossary creation was finished.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    private object languages_;
    /// <summary>Enum of possible cases for the "languages" oneof.</summary>
    public enum LanguagesOneofCase {
      None = 0,
      LanguagePair = 3,
      LanguageCodesSet = 4,
    }
    private LanguagesOneofCase languagesCase_ = LanguagesOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LanguagesOneofCase LanguagesCase {
      get { return languagesCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLanguages() {
      languagesCase_ = LanguagesOneofCase.None;
      languages_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Glossary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Glossary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(LanguagePair, other.LanguagePair)) return false;
      if (!object.Equals(LanguageCodesSet, other.LanguageCodesSet)) return false;
      if (!object.Equals(InputConfig, other.InputConfig)) return false;
      if (EntryCount != other.EntryCount) return false;
      if (!object.Equals(SubmitTime, other.SubmitTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (LanguagesCase != other.LanguagesCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (languagesCase_ == LanguagesOneofCase.LanguagePair) hash ^= LanguagePair.GetHashCode();
      if (languagesCase_ == LanguagesOneofCase.LanguageCodesSet) hash ^= LanguageCodesSet.GetHashCode();
      if (inputConfig_ != null) hash ^= InputConfig.GetHashCode();
      if (EntryCount != 0) hash ^= EntryCount.GetHashCode();
      if (submitTime_ != null) hash ^= SubmitTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      hash ^= (int) languagesCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (languagesCase_ == LanguagesOneofCase.LanguagePair) {
        output.WriteRawTag(26);
        output.WriteMessage(LanguagePair);
      }
      if (languagesCase_ == LanguagesOneofCase.LanguageCodesSet) {
        output.WriteRawTag(34);
        output.WriteMessage(LanguageCodesSet);
      }
      if (inputConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(InputConfig);
      }
      if (EntryCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EntryCount);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SubmitTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (languagesCase_ == LanguagesOneofCase.LanguagePair) {
        output.WriteRawTag(26);
        output.WriteMessage(LanguagePair);
      }
      if (languagesCase_ == LanguagesOneofCase.LanguageCodesSet) {
        output.WriteRawTag(34);
        output.WriteMessage(LanguageCodesSet);
      }
      if (inputConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(InputConfig);
      }
      if (EntryCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EntryCount);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SubmitTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (languagesCase_ == LanguagesOneofCase.LanguagePair) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LanguagePair);
      }
      if (languagesCase_ == LanguagesOneofCase.LanguageCodesSet) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LanguageCodesSet);
      }
      if (inputConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InputConfig);
      }
      if (EntryCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntryCount);
      }
      if (submitTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubmitTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Glossary other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.inputConfig_ != null) {
        if (inputConfig_ == null) {
          InputConfig = new global::Google.Cloud.Translate.V3Beta1.GlossaryInputConfig();
        }
        InputConfig.MergeFrom(other.InputConfig);
      }
      if (other.EntryCount != 0) {
        EntryCount = other.EntryCount;
      }
      if (other.submitTime_ != null) {
        if (submitTime_ == null) {
          SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SubmitTime.MergeFrom(other.SubmitTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      switch (other.LanguagesCase) {
        case LanguagesOneofCase.LanguagePair:
          if (LanguagePair == null) {
            LanguagePair = new global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodePair();
          }
          LanguagePair.MergeFrom(other.LanguagePair);
          break;
        case LanguagesOneofCase.LanguageCodesSet:
          if (LanguageCodesSet == null) {
            LanguageCodesSet = new global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodesSet();
          }
          LanguageCodesSet.MergeFrom(other.LanguageCodesSet);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodePair subBuilder = new global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodePair();
            if (languagesCase_ == LanguagesOneofCase.LanguagePair) {
              subBuilder.MergeFrom(LanguagePair);
            }
            input.ReadMessage(subBuilder);
            LanguagePair = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodesSet subBuilder = new global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodesSet();
            if (languagesCase_ == LanguagesOneofCase.LanguageCodesSet) {
              subBuilder.MergeFrom(LanguageCodesSet);
            }
            input.ReadMessage(subBuilder);
            LanguageCodesSet = subBuilder;
            break;
          }
          case 42: {
            if (inputConfig_ == null) {
              InputConfig = new global::Google.Cloud.Translate.V3Beta1.GlossaryInputConfig();
            }
            input.ReadMessage(InputConfig);
            break;
          }
          case 48: {
            EntryCount = input.ReadInt32();
            break;
          }
          case 58: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
          case 66: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodePair subBuilder = new global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodePair();
            if (languagesCase_ == LanguagesOneofCase.LanguagePair) {
              subBuilder.MergeFrom(LanguagePair);
            }
            input.ReadMessage(subBuilder);
            LanguagePair = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodesSet subBuilder = new global::Google.Cloud.Translate.V3Beta1.Glossary.Types.LanguageCodesSet();
            if (languagesCase_ == LanguagesOneofCase.LanguageCodesSet) {
              subBuilder.MergeFrom(LanguageCodesSet);
            }
            input.ReadMessage(subBuilder);
            LanguageCodesSet = subBuilder;
            break;
          }
          case 42: {
            if (inputConfig_ == null) {
              InputConfig = new global::Google.Cloud.Translate.V3Beta1.GlossaryInputConfig();
            }
            input.ReadMessage(InputConfig);
            break;
          }
          case 48: {
            EntryCount = input.ReadInt32();
            break;
          }
          case 58: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
          case 66: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Glossary message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Used with unidirectional glossaries.
      /// </summary>
      public sealed partial class LanguageCodePair : pb::IMessage<LanguageCodePair>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LanguageCodePair> _parser = new pb::MessageParser<LanguageCodePair>(() => new LanguageCodePair());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LanguageCodePair> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Translate.V3Beta1.Glossary.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LanguageCodePair() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LanguageCodePair(LanguageCodePair other) : this() {
          sourceLanguageCode_ = other.sourceLanguageCode_;
          targetLanguageCode_ = other.targetLanguageCode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LanguageCodePair Clone() {
          return new LanguageCodePair(this);
        }

        /// <summary>Field number for the "source_language_code" field.</summary>
        public const int SourceLanguageCodeFieldNumber = 1;
        private string sourceLanguageCode_ = "";
        /// <summary>
        /// Required. The BCP-47 language code of the input text, for example,
        /// "en-US". Expected to be an exact match for GlossaryTerm.language_code.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SourceLanguageCode {
          get { return sourceLanguageCode_; }
          set {
            sourceLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "target_language_code" field.</summary>
        public const int TargetLanguageCodeFieldNumber = 2;
        private string targetLanguageCode_ = "";
        /// <summary>
        /// Required. The BCP-47 language code for translation output, for example,
        /// "zh-CN". Expected to be an exact match for GlossaryTerm.language_code.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TargetLanguageCode {
          get { return targetLanguageCode_; }
          set {
            targetLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LanguageCodePair);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LanguageCodePair other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SourceLanguageCode != other.SourceLanguageCode) return false;
          if (TargetLanguageCode != other.TargetLanguageCode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SourceLanguageCode.Length != 0) hash ^= SourceLanguageCode.GetHashCode();
          if (TargetLanguageCode.Length != 0) hash ^= TargetLanguageCode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SourceLanguageCode.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SourceLanguageCode);
          }
          if (TargetLanguageCode.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TargetLanguageCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SourceLanguageCode.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SourceLanguageCode);
          }
          if (TargetLanguageCode.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TargetLanguageCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SourceLanguageCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceLanguageCode);
          }
          if (TargetLanguageCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetLanguageCode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LanguageCodePair other) {
          if (other == null) {
            return;
          }
          if (other.SourceLanguageCode.Length != 0) {
            SourceLanguageCode = other.SourceLanguageCode;
          }
          if (other.TargetLanguageCode.Length != 0) {
            TargetLanguageCode = other.TargetLanguageCode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                SourceLanguageCode = input.ReadString();
                break;
              }
              case 18: {
                TargetLanguageCode = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                SourceLanguageCode = input.ReadString();
                break;
              }
              case 18: {
                TargetLanguageCode = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Used with equivalent term set glossaries.
      /// </summary>
      public sealed partial class LanguageCodesSet : pb::IMessage<LanguageCodesSet>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LanguageCodesSet> _parser = new pb::MessageParser<LanguageCodesSet>(() => new LanguageCodesSet());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LanguageCodesSet> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Translate.V3Beta1.Glossary.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LanguageCodesSet() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LanguageCodesSet(LanguageCodesSet other) : this() {
          languageCodes_ = other.languageCodes_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LanguageCodesSet Clone() {
          return new LanguageCodesSet(this);
        }

        /// <summary>Field number for the "language_codes" field.</summary>
        public const int LanguageCodesFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_languageCodes_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> languageCodes_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// The BCP-47 language code(s) for terms defined in the glossary.
        /// All entries are unique. The list contains at least two entries.
        /// Expected to be an exact match for GlossaryTerm.language_code.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> LanguageCodes {
          get { return languageCodes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LanguageCodesSet);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LanguageCodesSet other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!languageCodes_.Equals(other.languageCodes_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= languageCodes_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          languageCodes_.WriteTo(output, _repeated_languageCodes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          languageCodes_.WriteTo(ref output, _repeated_languageCodes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += languageCodes_.CalculateSize(_repeated_languageCodes_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LanguageCodesSet other) {
          if (other == null) {
            return;
          }
          languageCodes_.Add(other.languageCodes_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                languageCodes_.AddEntriesFrom(input, _repeated_languageCodes_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                languageCodes_.AddEntriesFrom(ref input, _repeated_languageCodes_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Request message for CreateGlossary.
  /// </summary>
  public sealed partial class CreateGlossaryRequest : pb::IMessage<CreateGlossaryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateGlossaryRequest> _parser = new pb::MessageParser<CreateGlossaryRequest>(() => new CreateGlossaryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateGlossaryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGlossaryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGlossaryRequest(CreateGlossaryRequest other) : this() {
      parent_ = other.parent_;
      glossary_ = other.glossary_ != null ? other.glossary_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGlossaryRequest Clone() {
      return new CreateGlossaryRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The project name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "glossary" field.</summary>
    public const int GlossaryFieldNumber = 2;
    private global::Google.Cloud.Translate.V3Beta1.Glossary glossary_;
    /// <summary>
    /// Required. The glossary to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.Glossary Glossary {
      get { return glossary_; }
      set {
        glossary_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateGlossaryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateGlossaryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(Glossary, other.Glossary)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (glossary_ != null) hash ^= Glossary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (glossary_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Glossary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (glossary_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Glossary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (glossary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Glossary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateGlossaryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.glossary_ != null) {
        if (glossary_ == null) {
          Glossary = new global::Google.Cloud.Translate.V3Beta1.Glossary();
        }
        Glossary.MergeFrom(other.Glossary);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (glossary_ == null) {
              Glossary = new global::Google.Cloud.Translate.V3Beta1.Glossary();
            }
            input.ReadMessage(Glossary);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (glossary_ == null) {
              Glossary = new global::Google.Cloud.Translate.V3Beta1.Glossary();
            }
            input.ReadMessage(Glossary);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for GetGlossary.
  /// </summary>
  public sealed partial class GetGlossaryRequest : pb::IMessage<GetGlossaryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetGlossaryRequest> _parser = new pb::MessageParser<GetGlossaryRequest>(() => new GetGlossaryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGlossaryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGlossaryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGlossaryRequest(GetGlossaryRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGlossaryRequest Clone() {
      return new GetGlossaryRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the glossary to retrieve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGlossaryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGlossaryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGlossaryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for DeleteGlossary.
  /// </summary>
  public sealed partial class DeleteGlossaryRequest : pb::IMessage<DeleteGlossaryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteGlossaryRequest> _parser = new pb::MessageParser<DeleteGlossaryRequest>(() => new DeleteGlossaryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteGlossaryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGlossaryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGlossaryRequest(DeleteGlossaryRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGlossaryRequest Clone() {
      return new DeleteGlossaryRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the glossary to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteGlossaryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteGlossaryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteGlossaryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for ListGlossaries.
  /// </summary>
  public sealed partial class ListGlossariesRequest : pb::IMessage<ListGlossariesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListGlossariesRequest> _parser = new pb::MessageParser<ListGlossariesRequest>(() => new ListGlossariesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListGlossariesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGlossariesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGlossariesRequest(ListGlossariesRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGlossariesRequest Clone() {
      return new ListGlossariesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The name of the project from which to list all of the glossaries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// Optional. Requested page size. The server may return fewer glossaries than
    /// requested. If unspecified, the server picks an appropriate default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Optional. A token identifying a page of results the server should return.
    /// Typically, this is the value of [ListGlossariesResponse.next_page_token]
    /// returned from the previous call to `ListGlossaries` method.
    /// The first page is returned if `page_token`is empty or missing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// Optional. Filter specifying constraints of a list operation.
    /// Specify the constraint by the format of "key=value", where key must be
    /// "src" or "tgt", and the value must be a valid language code.
    /// For multiple restrictions, concatenate them by "AND" (uppercase only),
    /// such as: "src=en-US AND tgt=zh-CN". Notice that the exact match is used
    /// here, which means using 'en-US' and 'en' can lead to different results,
    /// which depends on the language code you used when you create the glossary.
    /// For the unidirectional glossaries, the "src" and "tgt" add restrictions
    /// on the source and target language code separately.
    /// For the equivalent term set glossaries, the "src" and/or "tgt" add
    /// restrictions on the term set.
    /// For example: "src=en-US AND tgt=zh-CN" will only pick the unidirectional
    /// glossaries which exactly match the source language code as "en-US" and the
    /// target language code "zh-CN", but all equivalent term set glossaries which
    /// contain "en-US" and "zh-CN" in their language set will be picked.
    /// If missing, no filtering is performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListGlossariesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListGlossariesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListGlossariesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for ListGlossaries.
  /// </summary>
  public sealed partial class ListGlossariesResponse : pb::IMessage<ListGlossariesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListGlossariesResponse> _parser = new pb::MessageParser<ListGlossariesResponse>(() => new ListGlossariesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListGlossariesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGlossariesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGlossariesResponse(ListGlossariesResponse other) : this() {
      glossaries_ = other.glossaries_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGlossariesResponse Clone() {
      return new ListGlossariesResponse(this);
    }

    /// <summary>Field number for the "glossaries" field.</summary>
    public const int GlossariesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Translate.V3Beta1.Glossary> _repeated_glossaries_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Translate.V3Beta1.Glossary.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.Glossary> glossaries_ = new pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.Glossary>();
    /// <summary>
    /// The list of glossaries for a project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.Glossary> Glossaries {
      get { return glossaries_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token to retrieve a page of results. Pass this value in the
    /// [ListGlossariesRequest.page_token] field in the subsequent call to
    /// `ListGlossaries` method to retrieve the next page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListGlossariesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListGlossariesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!glossaries_.Equals(other.glossaries_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= glossaries_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      glossaries_.WriteTo(output, _repeated_glossaries_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      glossaries_.WriteTo(ref output, _repeated_glossaries_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += glossaries_.CalculateSize(_repeated_glossaries_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListGlossariesResponse other) {
      if (other == null) {
        return;
      }
      glossaries_.Add(other.glossaries_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            glossaries_.AddEntriesFrom(input, _repeated_glossaries_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            glossaries_.AddEntriesFrom(ref input, _repeated_glossaries_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Stored in the
  /// [google.longrunning.Operation.metadata][google.longrunning.Operation.metadata]
  /// field returned by CreateGlossary.
  /// </summary>
  public sealed partial class CreateGlossaryMetadata : pb::IMessage<CreateGlossaryMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateGlossaryMetadata> _parser = new pb::MessageParser<CreateGlossaryMetadata>(() => new CreateGlossaryMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateGlossaryMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGlossaryMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGlossaryMetadata(CreateGlossaryMetadata other) : this() {
      name_ = other.name_;
      state_ = other.state_;
      submitTime_ = other.submitTime_ != null ? other.submitTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGlossaryMetadata Clone() {
      return new CreateGlossaryMetadata(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the glossary that is being created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata.Types.State state_ = global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata.Types.State.Unspecified;
    /// <summary>
    /// The current state of the glossary creation operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "submit_time" field.</summary>
    public const int SubmitTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp submitTime_;
    /// <summary>
    /// The time when the operation was submitted to the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SubmitTime {
      get { return submitTime_; }
      set {
        submitTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateGlossaryMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateGlossaryMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (State != other.State) return false;
      if (!object.Equals(SubmitTime, other.SubmitTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (State != global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (submitTime_ != null) hash ^= SubmitTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (State != global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata.Types.State.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubmitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (State != global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata.Types.State.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubmitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (State != global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (submitTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubmitTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateGlossaryMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.State != global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.submitTime_ != null) {
        if (submitTime_ == null) {
          SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SubmitTime.MergeFrom(other.SubmitTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Google.Cloud.Translate.V3Beta1.CreateGlossaryMetadata.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CreateGlossaryMetadata message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Enumerates the possible states that the creation request can be in.
      /// </summary>
      public enum State {
        /// <summary>
        /// Invalid.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Request is being processed.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 1,
        /// <summary>
        /// The glossary was successfully created.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 2,
        /// <summary>
        /// Failed to create the glossary.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 3,
        /// <summary>
        /// Request is in the process of being canceled after caller invoked
        /// longrunning.Operations.CancelOperation on the request id.
        /// </summary>
        [pbr::OriginalName("CANCELLING")] Cancelling = 4,
        /// <summary>
        /// The glossary creation request was successfully canceled.
        /// </summary>
        [pbr::OriginalName("CANCELLED")] Cancelled = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Stored in the
  /// [google.longrunning.Operation.metadata][google.longrunning.Operation.metadata]
  /// field returned by DeleteGlossary.
  /// </summary>
  public sealed partial class DeleteGlossaryMetadata : pb::IMessage<DeleteGlossaryMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteGlossaryMetadata> _parser = new pb::MessageParser<DeleteGlossaryMetadata>(() => new DeleteGlossaryMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteGlossaryMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGlossaryMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGlossaryMetadata(DeleteGlossaryMetadata other) : this() {
      name_ = other.name_;
      state_ = other.state_;
      submitTime_ = other.submitTime_ != null ? other.submitTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGlossaryMetadata Clone() {
      return new DeleteGlossaryMetadata(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the glossary that is being deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata.Types.State state_ = global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata.Types.State.Unspecified;
    /// <summary>
    /// The current state of the glossary deletion operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "submit_time" field.</summary>
    public const int SubmitTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp submitTime_;
    /// <summary>
    /// The time when the operation was submitted to the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SubmitTime {
      get { return submitTime_; }
      set {
        submitTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteGlossaryMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteGlossaryMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (State != other.State) return false;
      if (!object.Equals(SubmitTime, other.SubmitTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (State != global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (submitTime_ != null) hash ^= SubmitTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (State != global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata.Types.State.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubmitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (State != global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata.Types.State.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubmitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (State != global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (submitTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubmitTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteGlossaryMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.State != global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.submitTime_ != null) {
        if (submitTime_ == null) {
          SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SubmitTime.MergeFrom(other.SubmitTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Google.Cloud.Translate.V3Beta1.DeleteGlossaryMetadata.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DeleteGlossaryMetadata message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Enumerates the possible states that the creation request can be in.
      /// </summary>
      public enum State {
        /// <summary>
        /// Invalid.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Request is being processed.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 1,
        /// <summary>
        /// The glossary was successfully deleted.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 2,
        /// <summary>
        /// Failed to delete the glossary.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 3,
        /// <summary>
        /// Request is in the process of being canceled after caller invoked
        /// longrunning.Operations.CancelOperation on the request id.
        /// </summary>
        [pbr::OriginalName("CANCELLING")] Cancelling = 4,
        /// <summary>
        /// The glossary deletion request was successfully canceled.
        /// </summary>
        [pbr::OriginalName("CANCELLED")] Cancelled = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Stored in the
  /// [google.longrunning.Operation.response][google.longrunning.Operation.response]
  /// field returned by DeleteGlossary.
  /// </summary>
  public sealed partial class DeleteGlossaryResponse : pb::IMessage<DeleteGlossaryResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteGlossaryResponse> _parser = new pb::MessageParser<DeleteGlossaryResponse>(() => new DeleteGlossaryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteGlossaryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGlossaryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGlossaryResponse(DeleteGlossaryResponse other) : this() {
      name_ = other.name_;
      submitTime_ = other.submitTime_ != null ? other.submitTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGlossaryResponse Clone() {
      return new DeleteGlossaryResponse(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the deleted glossary.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "submit_time" field.</summary>
    public const int SubmitTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp submitTime_;
    /// <summary>
    /// The time when the operation was submitted to the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SubmitTime {
      get { return submitTime_; }
      set {
        submitTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The time when the glossary deletion is finished and
    /// [google.longrunning.Operation.done][google.longrunning.Operation.done] is
    /// set to true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteGlossaryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteGlossaryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(SubmitTime, other.SubmitTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (submitTime_ != null) hash ^= SubmitTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SubmitTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SubmitTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (submitTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubmitTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteGlossaryResponse other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.submitTime_ != null) {
        if (submitTime_ == null) {
          SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SubmitTime.MergeFrom(other.SubmitTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The BatchTranslateDocument request.
  /// </summary>
  public sealed partial class BatchTranslateDocumentRequest : pb::IMessage<BatchTranslateDocumentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchTranslateDocumentRequest> _parser = new pb::MessageParser<BatchTranslateDocumentRequest>(() => new BatchTranslateDocumentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchTranslateDocumentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateDocumentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateDocumentRequest(BatchTranslateDocumentRequest other) : this() {
      parent_ = other.parent_;
      sourceLanguageCode_ = other.sourceLanguageCode_;
      targetLanguageCodes_ = other.targetLanguageCodes_.Clone();
      inputConfigs_ = other.inputConfigs_.Clone();
      outputConfig_ = other.outputConfig_ != null ? other.outputConfig_.Clone() : null;
      models_ = other.models_.Clone();
      glossaries_ = other.glossaries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateDocumentRequest Clone() {
      return new BatchTranslateDocumentRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Location to make a regional call.
    ///
    /// Format: `projects/{project-number-or-id}/locations/{location-id}`.
    ///
    /// The `global` location is not supported for batch translation.
    ///
    /// Only AutoML Translation models or glossaries within the same region (have
    /// the same location-id) can be used, otherwise an INVALID_ARGUMENT (400)
    /// error is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_language_code" field.</summary>
    public const int SourceLanguageCodeFieldNumber = 2;
    private string sourceLanguageCode_ = "";
    /// <summary>
    /// Required. The BCP-47 language code of the input document if known, for
    /// example, "en-US" or "sr-Latn". Supported language codes are listed in
    /// Language Support (https://cloud.google.com/translate/docs/languages).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceLanguageCode {
      get { return sourceLanguageCode_; }
      set {
        sourceLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_language_codes" field.</summary>
    public const int TargetLanguageCodesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_targetLanguageCodes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> targetLanguageCodes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. The BCP-47 language code to use for translation of the input
    /// document. Specify up to 10 language codes here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TargetLanguageCodes {
      get { return targetLanguageCodes_; }
    }

    /// <summary>Field number for the "input_configs" field.</summary>
    public const int InputConfigsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Translate.V3Beta1.BatchDocumentInputConfig> _repeated_inputConfigs_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Translate.V3Beta1.BatchDocumentInputConfig.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.BatchDocumentInputConfig> inputConfigs_ = new pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.BatchDocumentInputConfig>();
    /// <summary>
    /// Required. Input configurations.
    /// The total number of files matched should be &lt;= 100.
    /// The total content size to translate should be &lt;= 100M Unicode codepoints.
    /// The files must use UTF-8 encoding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Translate.V3Beta1.BatchDocumentInputConfig> InputConfigs {
      get { return inputConfigs_; }
    }

    /// <summary>Field number for the "output_config" field.</summary>
    public const int OutputConfigFieldNumber = 5;
    private global::Google.Cloud.Translate.V3Beta1.BatchDocumentOutputConfig outputConfig_;
    /// <summary>
    /// Required. Output configuration.
    /// If 2 input configs match to the same file (that is, same input path),
    /// we don't generate output for duplicate inputs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.BatchDocumentOutputConfig OutputConfig {
      get { return outputConfig_; }
      set {
        outputConfig_ = value;
      }
    }

    /// <summary>Field number for the "models" field.</summary>
    public const int ModelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_models_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> models_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. The models to use for translation. Map's key is target language
    /// code. Map's value is the model name. Value can be a built-in general model,
    /// or an AutoML Translation model.
    ///
    /// The value format depends on model type:
    ///
    /// - AutoML Translation models:
    ///   `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}`
    ///
    /// - General (built-in) models:
    ///   `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`,
    ///
    /// If the map is empty or a specific model is not requested for a language
    /// pair, then default google model (nmt) is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Models {
      get { return models_; }
    }

    /// <summary>Field number for the "glossaries" field.</summary>
    public const int GlossariesFieldNumber = 7;
    private static readonly pbc::MapField<string, global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig>.Codec _map_glossaries_codec
        = new pbc::MapField<string, global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig.Parser), 58);
    private readonly pbc::MapField<string, global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig> glossaries_ = new pbc::MapField<string, global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig>();
    /// <summary>
    /// Optional. Glossaries to be applied. It's keyed by target language code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.Translate.V3Beta1.TranslateTextGlossaryConfig> Glossaries {
      get { return glossaries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchTranslateDocumentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchTranslateDocumentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (SourceLanguageCode != other.SourceLanguageCode) return false;
      if(!targetLanguageCodes_.Equals(other.targetLanguageCodes_)) return false;
      if(!inputConfigs_.Equals(other.inputConfigs_)) return false;
      if (!object.Equals(OutputConfig, other.OutputConfig)) return false;
      if (!Models.Equals(other.Models)) return false;
      if (!Glossaries.Equals(other.Glossaries)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (SourceLanguageCode.Length != 0) hash ^= SourceLanguageCode.GetHashCode();
      hash ^= targetLanguageCodes_.GetHashCode();
      hash ^= inputConfigs_.GetHashCode();
      if (outputConfig_ != null) hash ^= OutputConfig.GetHashCode();
      hash ^= Models.GetHashCode();
      hash ^= Glossaries.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (SourceLanguageCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceLanguageCode);
      }
      targetLanguageCodes_.WriteTo(output, _repeated_targetLanguageCodes_codec);
      inputConfigs_.WriteTo(output, _repeated_inputConfigs_codec);
      if (outputConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OutputConfig);
      }
      models_.WriteTo(output, _map_models_codec);
      glossaries_.WriteTo(output, _map_glossaries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (SourceLanguageCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceLanguageCode);
      }
      targetLanguageCodes_.WriteTo(ref output, _repeated_targetLanguageCodes_codec);
      inputConfigs_.WriteTo(ref output, _repeated_inputConfigs_codec);
      if (outputConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OutputConfig);
      }
      models_.WriteTo(ref output, _map_models_codec);
      glossaries_.WriteTo(ref output, _map_glossaries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (SourceLanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceLanguageCode);
      }
      size += targetLanguageCodes_.CalculateSize(_repeated_targetLanguageCodes_codec);
      size += inputConfigs_.CalculateSize(_repeated_inputConfigs_codec);
      if (outputConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutputConfig);
      }
      size += models_.CalculateSize(_map_models_codec);
      size += glossaries_.CalculateSize(_map_glossaries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchTranslateDocumentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.SourceLanguageCode.Length != 0) {
        SourceLanguageCode = other.SourceLanguageCode;
      }
      targetLanguageCodes_.Add(other.targetLanguageCodes_);
      inputConfigs_.Add(other.inputConfigs_);
      if (other.outputConfig_ != null) {
        if (outputConfig_ == null) {
          OutputConfig = new global::Google.Cloud.Translate.V3Beta1.BatchDocumentOutputConfig();
        }
        OutputConfig.MergeFrom(other.OutputConfig);
      }
      models_.Add(other.models_);
      glossaries_.Add(other.glossaries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            SourceLanguageCode = input.ReadString();
            break;
          }
          case 26: {
            targetLanguageCodes_.AddEntriesFrom(input, _repeated_targetLanguageCodes_codec);
            break;
          }
          case 34: {
            inputConfigs_.AddEntriesFrom(input, _repeated_inputConfigs_codec);
            break;
          }
          case 42: {
            if (outputConfig_ == null) {
              OutputConfig = new global::Google.Cloud.Translate.V3Beta1.BatchDocumentOutputConfig();
            }
            input.ReadMessage(OutputConfig);
            break;
          }
          case 50: {
            models_.AddEntriesFrom(input, _map_models_codec);
            break;
          }
          case 58: {
            glossaries_.AddEntriesFrom(input, _map_glossaries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            SourceLanguageCode = input.ReadString();
            break;
          }
          case 26: {
            targetLanguageCodes_.AddEntriesFrom(ref input, _repeated_targetLanguageCodes_codec);
            break;
          }
          case 34: {
            inputConfigs_.AddEntriesFrom(ref input, _repeated_inputConfigs_codec);
            break;
          }
          case 42: {
            if (outputConfig_ == null) {
              OutputConfig = new global::Google.Cloud.Translate.V3Beta1.BatchDocumentOutputConfig();
            }
            input.ReadMessage(OutputConfig);
            break;
          }
          case 50: {
            models_.AddEntriesFrom(ref input, _map_models_codec);
            break;
          }
          case 58: {
            glossaries_.AddEntriesFrom(ref input, _map_glossaries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Input configuration for BatchTranslateDocument request.
  /// </summary>
  public sealed partial class BatchDocumentInputConfig : pb::IMessage<BatchDocumentInputConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchDocumentInputConfig> _parser = new pb::MessageParser<BatchDocumentInputConfig>(() => new BatchDocumentInputConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchDocumentInputConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchDocumentInputConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchDocumentInputConfig(BatchDocumentInputConfig other) : this() {
      switch (other.SourceCase) {
        case SourceOneofCase.GcsSource:
          GcsSource = other.GcsSource.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchDocumentInputConfig Clone() {
      return new BatchDocumentInputConfig(this);
    }

    /// <summary>Field number for the "gcs_source" field.</summary>
    public const int GcsSourceFieldNumber = 1;
    /// <summary>
    /// Google Cloud Storage location for the source input.
    /// This can be a single file (for example,
    /// `gs://translation-test/input.docx`) or a wildcard (for example,
    /// `gs://translation-test/*`).
    ///
    /// File mime type is determined based on extension. Supported mime type
    /// includes:
    /// - `pdf`, application/pdf
    /// - `docx`,
    /// application/vnd.openxmlformats-officedocument.wordprocessingml.document
    /// - `pptx`,
    /// application/vnd.openxmlformats-officedocument.presentationml.presentation
    /// - `xlsx`,
    /// application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
    ///
    /// The max file size to support for `.docx`, `.pptx` and `.xlsx` is 100MB.
    /// The max file size to support for `.pdf` is 1GB and the max page limit is
    /// 1000 pages.
    /// The max file size to support for all input documents is 1GB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.GcsSource GcsSource {
      get { return sourceCase_ == SourceOneofCase.GcsSource ? (global::Google.Cloud.Translate.V3Beta1.GcsSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.GcsSource;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      GcsSource = 1,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchDocumentInputConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchDocumentInputConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GcsSource, other.GcsSource)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.GcsSource) hash ^= GcsSource.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sourceCase_ == SourceOneofCase.GcsSource) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sourceCase_ == SourceOneofCase.GcsSource) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.GcsSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcsSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchDocumentInputConfig other) {
      if (other == null) {
        return;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.GcsSource:
          if (GcsSource == null) {
            GcsSource = new global::Google.Cloud.Translate.V3Beta1.GcsSource();
          }
          GcsSource.MergeFrom(other.GcsSource);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Translate.V3Beta1.GcsSource subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsSource();
            if (sourceCase_ == SourceOneofCase.GcsSource) {
              subBuilder.MergeFrom(GcsSource);
            }
            input.ReadMessage(subBuilder);
            GcsSource = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Translate.V3Beta1.GcsSource subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsSource();
            if (sourceCase_ == SourceOneofCase.GcsSource) {
              subBuilder.MergeFrom(GcsSource);
            }
            input.ReadMessage(subBuilder);
            GcsSource = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Output configuration for BatchTranslateDocument request.
  /// </summary>
  public sealed partial class BatchDocumentOutputConfig : pb::IMessage<BatchDocumentOutputConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchDocumentOutputConfig> _parser = new pb::MessageParser<BatchDocumentOutputConfig>(() => new BatchDocumentOutputConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchDocumentOutputConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchDocumentOutputConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchDocumentOutputConfig(BatchDocumentOutputConfig other) : this() {
      switch (other.DestinationCase) {
        case DestinationOneofCase.GcsDestination:
          GcsDestination = other.GcsDestination.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchDocumentOutputConfig Clone() {
      return new BatchDocumentOutputConfig(this);
    }

    /// <summary>Field number for the "gcs_destination" field.</summary>
    public const int GcsDestinationFieldNumber = 1;
    /// <summary>
    /// Google Cloud Storage destination for output content.
    /// For every single input document (for example, gs://a/b/c.[extension]), we
    /// generate at most 2 * n output files. (n is the # of target_language_codes
    /// in the BatchTranslateDocumentRequest).
    ///
    /// While the input documents are being processed, we write/update an index
    /// file `index.csv` under `gcs_destination.output_uri_prefix` (for example,
    /// gs://translation_output/index.csv) The index file is generated/updated as
    /// new files are being translated. The format is:
    ///
    /// input_document,target_language_code,translation_output,error_output,
    /// glossary_translation_output,glossary_error_output
    ///
    /// `input_document` is one file we matched using gcs_source.input_uri.
    /// `target_language_code` is provided in the request.
    /// `translation_output` contains the translations. (details provided below)
    /// `error_output` contains the error message during processing of the file.
    /// Both translations_file and errors_file could be empty strings if we have
    /// no content to output.
    /// `glossary_translation_output` and `glossary_error_output` are the
    /// translated output/error when we apply glossaries. They could also be
    /// empty if we have no content to output.
    ///
    /// Once a row is present in index.csv, the input/output matching never
    /// changes. Callers should also expect all the content in input_file are
    /// processed and ready to be consumed (that is, no partial output file is
    /// written).
    ///
    /// Since index.csv will be keeping updated during the process, please make
    /// sure there is no custom retention policy applied on the output bucket
    /// that may avoid file updating.
    /// (https://cloud.google.com/storage/docs/bucket-lock?hl=en#retention-policy)
    ///
    /// The naming format of translation output files follows (for target
    /// language code [trg]): `translation_output`:
    /// gs://translation_output/a_b_c_[trg]_translation.[extension]
    /// `glossary_translation_output`:
    /// gs://translation_test/a_b_c_[trg]_glossary_translation.[extension] The
    /// output document will maintain the same file format as the input document.
    ///
    /// The naming format of error output files follows (for target language code
    /// [trg]): `error_output`: gs://translation_test/a_b_c_[trg]_errors.txt
    /// `glossary_error_output`:
    /// gs://translation_test/a_b_c_[trg]_glossary_translation.txt The error
    /// output is a txt file containing error details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.GcsDestination GcsDestination {
      get { return destinationCase_ == DestinationOneofCase.GcsDestination ? (global::Google.Cloud.Translate.V3Beta1.GcsDestination) destination_ : null; }
      set {
        destination_ = value;
        destinationCase_ = value == null ? DestinationOneofCase.None : DestinationOneofCase.GcsDestination;
      }
    }

    private object destination_;
    /// <summary>Enum of possible cases for the "destination" oneof.</summary>
    public enum DestinationOneofCase {
      None = 0,
      GcsDestination = 1,
    }
    private DestinationOneofCase destinationCase_ = DestinationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestinationOneofCase DestinationCase {
      get { return destinationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDestination() {
      destinationCase_ = DestinationOneofCase.None;
      destination_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchDocumentOutputConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchDocumentOutputConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GcsDestination, other.GcsDestination)) return false;
      if (DestinationCase != other.DestinationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (destinationCase_ == DestinationOneofCase.GcsDestination) hash ^= GcsDestination.GetHashCode();
      hash ^= (int) destinationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (destinationCase_ == DestinationOneofCase.GcsDestination) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsDestination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (destinationCase_ == DestinationOneofCase.GcsDestination) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsDestination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (destinationCase_ == DestinationOneofCase.GcsDestination) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcsDestination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchDocumentOutputConfig other) {
      if (other == null) {
        return;
      }
      switch (other.DestinationCase) {
        case DestinationOneofCase.GcsDestination:
          if (GcsDestination == null) {
            GcsDestination = new global::Google.Cloud.Translate.V3Beta1.GcsDestination();
          }
          GcsDestination.MergeFrom(other.GcsDestination);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Translate.V3Beta1.GcsDestination subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsDestination();
            if (destinationCase_ == DestinationOneofCase.GcsDestination) {
              subBuilder.MergeFrom(GcsDestination);
            }
            input.ReadMessage(subBuilder);
            GcsDestination = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Translate.V3Beta1.GcsDestination subBuilder = new global::Google.Cloud.Translate.V3Beta1.GcsDestination();
            if (destinationCase_ == DestinationOneofCase.GcsDestination) {
              subBuilder.MergeFrom(GcsDestination);
            }
            input.ReadMessage(subBuilder);
            GcsDestination = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Stored in the
  /// [google.longrunning.Operation.response][google.longrunning.Operation.response]
  /// field returned by BatchTranslateDocument if at least one document is
  /// translated successfully.
  /// </summary>
  public sealed partial class BatchTranslateDocumentResponse : pb::IMessage<BatchTranslateDocumentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchTranslateDocumentResponse> _parser = new pb::MessageParser<BatchTranslateDocumentResponse>(() => new BatchTranslateDocumentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchTranslateDocumentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateDocumentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateDocumentResponse(BatchTranslateDocumentResponse other) : this() {
      totalPages_ = other.totalPages_;
      translatedPages_ = other.translatedPages_;
      failedPages_ = other.failedPages_;
      totalBillablePages_ = other.totalBillablePages_;
      totalCharacters_ = other.totalCharacters_;
      translatedCharacters_ = other.translatedCharacters_;
      failedCharacters_ = other.failedCharacters_;
      totalBillableCharacters_ = other.totalBillableCharacters_;
      submitTime_ = other.submitTime_ != null ? other.submitTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateDocumentResponse Clone() {
      return new BatchTranslateDocumentResponse(this);
    }

    /// <summary>Field number for the "total_pages" field.</summary>
    public const int TotalPagesFieldNumber = 1;
    private long totalPages_;
    /// <summary>
    /// Total number of pages to translate in all documents. Documents without
    /// clear page definition (such as XLSX) are not counted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalPages {
      get { return totalPages_; }
      set {
        totalPages_ = value;
      }
    }

    /// <summary>Field number for the "translated_pages" field.</summary>
    public const int TranslatedPagesFieldNumber = 2;
    private long translatedPages_;
    /// <summary>
    /// Number of successfully translated pages in all documents. Documents without
    /// clear page definition (such as XLSX) are not counted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TranslatedPages {
      get { return translatedPages_; }
      set {
        translatedPages_ = value;
      }
    }

    /// <summary>Field number for the "failed_pages" field.</summary>
    public const int FailedPagesFieldNumber = 3;
    private long failedPages_;
    /// <summary>
    /// Number of pages that failed to process in all documents. Documents without
    /// clear page definition (such as XLSX) are not counted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FailedPages {
      get { return failedPages_; }
      set {
        failedPages_ = value;
      }
    }

    /// <summary>Field number for the "total_billable_pages" field.</summary>
    public const int TotalBillablePagesFieldNumber = 4;
    private long totalBillablePages_;
    /// <summary>
    /// Number of billable pages in documents with clear page definition (such as
    /// PDF, DOCX, PPTX)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalBillablePages {
      get { return totalBillablePages_; }
      set {
        totalBillablePages_ = value;
      }
    }

    /// <summary>Field number for the "total_characters" field.</summary>
    public const int TotalCharactersFieldNumber = 5;
    private long totalCharacters_;
    /// <summary>
    /// Total number of characters (Unicode codepoints) in all documents.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalCharacters {
      get { return totalCharacters_; }
      set {
        totalCharacters_ = value;
      }
    }

    /// <summary>Field number for the "translated_characters" field.</summary>
    public const int TranslatedCharactersFieldNumber = 6;
    private long translatedCharacters_;
    /// <summary>
    /// Number of successfully translated characters (Unicode codepoints) in all
    /// documents.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TranslatedCharacters {
      get { return translatedCharacters_; }
      set {
        translatedCharacters_ = value;
      }
    }

    /// <summary>Field number for the "failed_characters" field.</summary>
    public const int FailedCharactersFieldNumber = 7;
    private long failedCharacters_;
    /// <summary>
    /// Number of characters that have failed to process (Unicode codepoints) in
    /// all documents.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FailedCharacters {
      get { return failedCharacters_; }
      set {
        failedCharacters_ = value;
      }
    }

    /// <summary>Field number for the "total_billable_characters" field.</summary>
    public const int TotalBillableCharactersFieldNumber = 8;
    private long totalBillableCharacters_;
    /// <summary>
    /// Number of billable characters (Unicode codepoints) in documents without
    /// clear page definition, such as XLSX.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalBillableCharacters {
      get { return totalBillableCharacters_; }
      set {
        totalBillableCharacters_ = value;
      }
    }

    /// <summary>Field number for the "submit_time" field.</summary>
    public const int SubmitTimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp submitTime_;
    /// <summary>
    /// Time when the operation was submitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SubmitTime {
      get { return submitTime_; }
      set {
        submitTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The time when the operation is finished and
    /// [google.longrunning.Operation.done][google.longrunning.Operation.done] is
    /// set to true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchTranslateDocumentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchTranslateDocumentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalPages != other.TotalPages) return false;
      if (TranslatedPages != other.TranslatedPages) return false;
      if (FailedPages != other.FailedPages) return false;
      if (TotalBillablePages != other.TotalBillablePages) return false;
      if (TotalCharacters != other.TotalCharacters) return false;
      if (TranslatedCharacters != other.TranslatedCharacters) return false;
      if (FailedCharacters != other.FailedCharacters) return false;
      if (TotalBillableCharacters != other.TotalBillableCharacters) return false;
      if (!object.Equals(SubmitTime, other.SubmitTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalPages != 0L) hash ^= TotalPages.GetHashCode();
      if (TranslatedPages != 0L) hash ^= TranslatedPages.GetHashCode();
      if (FailedPages != 0L) hash ^= FailedPages.GetHashCode();
      if (TotalBillablePages != 0L) hash ^= TotalBillablePages.GetHashCode();
      if (TotalCharacters != 0L) hash ^= TotalCharacters.GetHashCode();
      if (TranslatedCharacters != 0L) hash ^= TranslatedCharacters.GetHashCode();
      if (FailedCharacters != 0L) hash ^= FailedCharacters.GetHashCode();
      if (TotalBillableCharacters != 0L) hash ^= TotalBillableCharacters.GetHashCode();
      if (submitTime_ != null) hash ^= SubmitTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalPages != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TotalPages);
      }
      if (TranslatedPages != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TranslatedPages);
      }
      if (FailedPages != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FailedPages);
      }
      if (TotalBillablePages != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalBillablePages);
      }
      if (TotalCharacters != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalCharacters);
      }
      if (TranslatedCharacters != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TranslatedCharacters);
      }
      if (FailedCharacters != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(FailedCharacters);
      }
      if (TotalBillableCharacters != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalBillableCharacters);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(SubmitTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalPages != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TotalPages);
      }
      if (TranslatedPages != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TranslatedPages);
      }
      if (FailedPages != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FailedPages);
      }
      if (TotalBillablePages != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalBillablePages);
      }
      if (TotalCharacters != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalCharacters);
      }
      if (TranslatedCharacters != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TranslatedCharacters);
      }
      if (FailedCharacters != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(FailedCharacters);
      }
      if (TotalBillableCharacters != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalBillableCharacters);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(SubmitTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalPages != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalPages);
      }
      if (TranslatedPages != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TranslatedPages);
      }
      if (FailedPages != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FailedPages);
      }
      if (TotalBillablePages != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalBillablePages);
      }
      if (TotalCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalCharacters);
      }
      if (TranslatedCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TranslatedCharacters);
      }
      if (FailedCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FailedCharacters);
      }
      if (TotalBillableCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalBillableCharacters);
      }
      if (submitTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubmitTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchTranslateDocumentResponse other) {
      if (other == null) {
        return;
      }
      if (other.TotalPages != 0L) {
        TotalPages = other.TotalPages;
      }
      if (other.TranslatedPages != 0L) {
        TranslatedPages = other.TranslatedPages;
      }
      if (other.FailedPages != 0L) {
        FailedPages = other.FailedPages;
      }
      if (other.TotalBillablePages != 0L) {
        TotalBillablePages = other.TotalBillablePages;
      }
      if (other.TotalCharacters != 0L) {
        TotalCharacters = other.TotalCharacters;
      }
      if (other.TranslatedCharacters != 0L) {
        TranslatedCharacters = other.TranslatedCharacters;
      }
      if (other.FailedCharacters != 0L) {
        FailedCharacters = other.FailedCharacters;
      }
      if (other.TotalBillableCharacters != 0L) {
        TotalBillableCharacters = other.TotalBillableCharacters;
      }
      if (other.submitTime_ != null) {
        if (submitTime_ == null) {
          SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SubmitTime.MergeFrom(other.SubmitTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalPages = input.ReadInt64();
            break;
          }
          case 16: {
            TranslatedPages = input.ReadInt64();
            break;
          }
          case 24: {
            FailedPages = input.ReadInt64();
            break;
          }
          case 32: {
            TotalBillablePages = input.ReadInt64();
            break;
          }
          case 40: {
            TotalCharacters = input.ReadInt64();
            break;
          }
          case 48: {
            TranslatedCharacters = input.ReadInt64();
            break;
          }
          case 56: {
            FailedCharacters = input.ReadInt64();
            break;
          }
          case 64: {
            TotalBillableCharacters = input.ReadInt64();
            break;
          }
          case 74: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
          case 82: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalPages = input.ReadInt64();
            break;
          }
          case 16: {
            TranslatedPages = input.ReadInt64();
            break;
          }
          case 24: {
            FailedPages = input.ReadInt64();
            break;
          }
          case 32: {
            TotalBillablePages = input.ReadInt64();
            break;
          }
          case 40: {
            TotalCharacters = input.ReadInt64();
            break;
          }
          case 48: {
            TranslatedCharacters = input.ReadInt64();
            break;
          }
          case 56: {
            FailedCharacters = input.ReadInt64();
            break;
          }
          case 64: {
            TotalBillableCharacters = input.ReadInt64();
            break;
          }
          case 74: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
          case 82: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// State metadata for the batch translation operation.
  /// </summary>
  public sealed partial class BatchTranslateDocumentMetadata : pb::IMessage<BatchTranslateDocumentMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchTranslateDocumentMetadata> _parser = new pb::MessageParser<BatchTranslateDocumentMetadata>(() => new BatchTranslateDocumentMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchTranslateDocumentMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Translate.V3Beta1.TranslationServiceReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateDocumentMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateDocumentMetadata(BatchTranslateDocumentMetadata other) : this() {
      state_ = other.state_;
      totalPages_ = other.totalPages_;
      translatedPages_ = other.translatedPages_;
      failedPages_ = other.failedPages_;
      totalBillablePages_ = other.totalBillablePages_;
      totalCharacters_ = other.totalCharacters_;
      translatedCharacters_ = other.translatedCharacters_;
      failedCharacters_ = other.failedCharacters_;
      totalBillableCharacters_ = other.totalBillableCharacters_;
      submitTime_ = other.submitTime_ != null ? other.submitTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchTranslateDocumentMetadata Clone() {
      return new BatchTranslateDocumentMetadata(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata.Types.State state_ = global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata.Types.State.Unspecified;
    /// <summary>
    /// The state of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "total_pages" field.</summary>
    public const int TotalPagesFieldNumber = 2;
    private long totalPages_;
    /// <summary>
    /// Total number of pages to translate in all documents so far. Documents
    /// without clear page definition (such as XLSX) are not counted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalPages {
      get { return totalPages_; }
      set {
        totalPages_ = value;
      }
    }

    /// <summary>Field number for the "translated_pages" field.</summary>
    public const int TranslatedPagesFieldNumber = 3;
    private long translatedPages_;
    /// <summary>
    /// Number of successfully translated pages in all documents so far. Documents
    /// without clear page definition (such as XLSX) are not counted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TranslatedPages {
      get { return translatedPages_; }
      set {
        translatedPages_ = value;
      }
    }

    /// <summary>Field number for the "failed_pages" field.</summary>
    public const int FailedPagesFieldNumber = 4;
    private long failedPages_;
    /// <summary>
    /// Number of pages that failed to process in all documents so far. Documents
    /// without clear page definition (such as XLSX) are not counted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FailedPages {
      get { return failedPages_; }
      set {
        failedPages_ = value;
      }
    }

    /// <summary>Field number for the "total_billable_pages" field.</summary>
    public const int TotalBillablePagesFieldNumber = 5;
    private long totalBillablePages_;
    /// <summary>
    /// Number of billable pages in documents with clear page definition (such as
    /// PDF, DOCX, PPTX) so far.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalBillablePages {
      get { return totalBillablePages_; }
      set {
        totalBillablePages_ = value;
      }
    }

    /// <summary>Field number for the "total_characters" field.</summary>
    public const int TotalCharactersFieldNumber = 6;
    private long totalCharacters_;
    /// <summary>
    /// Total number of characters (Unicode codepoints) in all documents so far.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalCharacters {
      get { return totalCharacters_; }
      set {
        totalCharacters_ = value;
      }
    }

    /// <summary>Field number for the "translated_characters" field.</summary>
    public const int TranslatedCharactersFieldNumber = 7;
    private long translatedCharacters_;
    /// <summary>
    /// Number of successfully translated characters (Unicode codepoints) in all
    /// documents so far.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TranslatedCharacters {
      get { return translatedCharacters_; }
      set {
        translatedCharacters_ = value;
      }
    }

    /// <summary>Field number for the "failed_characters" field.</summary>
    public const int FailedCharactersFieldNumber = 8;
    private long failedCharacters_;
    /// <summary>
    /// Number of characters that have failed to process (Unicode codepoints) in
    /// all documents so far.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FailedCharacters {
      get { return failedCharacters_; }
      set {
        failedCharacters_ = value;
      }
    }

    /// <summary>Field number for the "total_billable_characters" field.</summary>
    public const int TotalBillableCharactersFieldNumber = 9;
    private long totalBillableCharacters_;
    /// <summary>
    /// Number of billable characters (Unicode codepoints) in documents without
    /// clear page definition (such as XLSX) so far.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalBillableCharacters {
      get { return totalBillableCharacters_; }
      set {
        totalBillableCharacters_ = value;
      }
    }

    /// <summary>Field number for the "submit_time" field.</summary>
    public const int SubmitTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp submitTime_;
    /// <summary>
    /// Time when the operation was submitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SubmitTime {
      get { return submitTime_; }
      set {
        submitTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchTranslateDocumentMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchTranslateDocumentMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (TotalPages != other.TotalPages) return false;
      if (TranslatedPages != other.TranslatedPages) return false;
      if (FailedPages != other.FailedPages) return false;
      if (TotalBillablePages != other.TotalBillablePages) return false;
      if (TotalCharacters != other.TotalCharacters) return false;
      if (TranslatedCharacters != other.TranslatedCharacters) return false;
      if (FailedCharacters != other.FailedCharacters) return false;
      if (TotalBillableCharacters != other.TotalBillableCharacters) return false;
      if (!object.Equals(SubmitTime, other.SubmitTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (TotalPages != 0L) hash ^= TotalPages.GetHashCode();
      if (TranslatedPages != 0L) hash ^= TranslatedPages.GetHashCode();
      if (FailedPages != 0L) hash ^= FailedPages.GetHashCode();
      if (TotalBillablePages != 0L) hash ^= TotalBillablePages.GetHashCode();
      if (TotalCharacters != 0L) hash ^= TotalCharacters.GetHashCode();
      if (TranslatedCharacters != 0L) hash ^= TranslatedCharacters.GetHashCode();
      if (FailedCharacters != 0L) hash ^= FailedCharacters.GetHashCode();
      if (TotalBillableCharacters != 0L) hash ^= TotalBillableCharacters.GetHashCode();
      if (submitTime_ != null) hash ^= SubmitTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata.Types.State.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (TotalPages != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalPages);
      }
      if (TranslatedPages != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TranslatedPages);
      }
      if (FailedPages != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(FailedPages);
      }
      if (TotalBillablePages != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalBillablePages);
      }
      if (TotalCharacters != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalCharacters);
      }
      if (TranslatedCharacters != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TranslatedCharacters);
      }
      if (FailedCharacters != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(FailedCharacters);
      }
      if (TotalBillableCharacters != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TotalBillableCharacters);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SubmitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata.Types.State.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (TotalPages != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalPages);
      }
      if (TranslatedPages != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TranslatedPages);
      }
      if (FailedPages != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(FailedPages);
      }
      if (TotalBillablePages != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalBillablePages);
      }
      if (TotalCharacters != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalCharacters);
      }
      if (TranslatedCharacters != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TranslatedCharacters);
      }
      if (FailedCharacters != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(FailedCharacters);
      }
      if (TotalBillableCharacters != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TotalBillableCharacters);
      }
      if (submitTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SubmitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (TotalPages != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalPages);
      }
      if (TranslatedPages != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TranslatedPages);
      }
      if (FailedPages != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FailedPages);
      }
      if (TotalBillablePages != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalBillablePages);
      }
      if (TotalCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalCharacters);
      }
      if (TranslatedCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TranslatedCharacters);
      }
      if (FailedCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FailedCharacters);
      }
      if (TotalBillableCharacters != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalBillableCharacters);
      }
      if (submitTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubmitTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchTranslateDocumentMetadata other) {
      if (other == null) {
        return;
      }
      if (other.State != global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.TotalPages != 0L) {
        TotalPages = other.TotalPages;
      }
      if (other.TranslatedPages != 0L) {
        TranslatedPages = other.TranslatedPages;
      }
      if (other.FailedPages != 0L) {
        FailedPages = other.FailedPages;
      }
      if (other.TotalBillablePages != 0L) {
        TotalBillablePages = other.TotalBillablePages;
      }
      if (other.TotalCharacters != 0L) {
        TotalCharacters = other.TotalCharacters;
      }
      if (other.TranslatedCharacters != 0L) {
        TranslatedCharacters = other.TranslatedCharacters;
      }
      if (other.FailedCharacters != 0L) {
        FailedCharacters = other.FailedCharacters;
      }
      if (other.TotalBillableCharacters != 0L) {
        TotalBillableCharacters = other.TotalBillableCharacters;
      }
      if (other.submitTime_ != null) {
        if (submitTime_ == null) {
          SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SubmitTime.MergeFrom(other.SubmitTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata.Types.State) input.ReadEnum();
            break;
          }
          case 16: {
            TotalPages = input.ReadInt64();
            break;
          }
          case 24: {
            TranslatedPages = input.ReadInt64();
            break;
          }
          case 32: {
            FailedPages = input.ReadInt64();
            break;
          }
          case 40: {
            TotalBillablePages = input.ReadInt64();
            break;
          }
          case 48: {
            TotalCharacters = input.ReadInt64();
            break;
          }
          case 56: {
            TranslatedCharacters = input.ReadInt64();
            break;
          }
          case 64: {
            FailedCharacters = input.ReadInt64();
            break;
          }
          case 72: {
            TotalBillableCharacters = input.ReadInt64();
            break;
          }
          case 82: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = (global::Google.Cloud.Translate.V3Beta1.BatchTranslateDocumentMetadata.Types.State) input.ReadEnum();
            break;
          }
          case 16: {
            TotalPages = input.ReadInt64();
            break;
          }
          case 24: {
            TranslatedPages = input.ReadInt64();
            break;
          }
          case 32: {
            FailedPages = input.ReadInt64();
            break;
          }
          case 40: {
            TotalBillablePages = input.ReadInt64();
            break;
          }
          case 48: {
            TotalCharacters = input.ReadInt64();
            break;
          }
          case 56: {
            TranslatedCharacters = input.ReadInt64();
            break;
          }
          case 64: {
            FailedCharacters = input.ReadInt64();
            break;
          }
          case 72: {
            TotalBillableCharacters = input.ReadInt64();
            break;
          }
          case 82: {
            if (submitTime_ == null) {
              SubmitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SubmitTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BatchTranslateDocumentMetadata message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// State of the job.
      /// </summary>
      public enum State {
        /// <summary>
        /// Invalid.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Request is being processed.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 1,
        /// <summary>
        /// The batch is processed, and at least one item was successfully processed.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 2,
        /// <summary>
        /// The batch is done and no item was successfully processed.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 3,
        /// <summary>
        /// Request is in the process of being canceled after caller invoked
        /// longrunning.Operations.CancelOperation on the request id.
        /// </summary>
        [pbr::OriginalName("CANCELLING")] Cancelling = 4,
        /// <summary>
        /// The batch is done after the user has called the
        /// longrunning.Operations.CancelOperation. Any records processed before the
        /// cancel command are output as specified in the request.
        /// </summary>
        [pbr::OriginalName("CANCELLED")] Cancelled = 5,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
