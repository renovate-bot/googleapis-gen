// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/tpu/v2alpha1/cloud_tpu.proto
// </auto-generated>
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Tpu.V2Alpha1 {
  /// <summary>
  /// Manages TPU nodes and other resources
  ///
  /// TPU API v2alpha1
  /// </summary>
  public static partial class Tpu
  {
    static readonly string __ServiceName = "google.cloud.tpu.v2alpha1.Tpu";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.ListNodesRequest> __Marshaller_google_cloud_tpu_v2alpha1_ListNodesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.ListNodesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.ListNodesResponse> __Marshaller_google_cloud_tpu_v2alpha1_ListNodesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.ListNodesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.GetNodeRequest> __Marshaller_google_cloud_tpu_v2alpha1_GetNodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.GetNodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.Node> __Marshaller_google_cloud_tpu_v2alpha1_Node = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.Node.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.CreateNodeRequest> __Marshaller_google_cloud_tpu_v2alpha1_CreateNodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.CreateNodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.DeleteNodeRequest> __Marshaller_google_cloud_tpu_v2alpha1_DeleteNodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.DeleteNodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.StopNodeRequest> __Marshaller_google_cloud_tpu_v2alpha1_StopNodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.StopNodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.StartNodeRequest> __Marshaller_google_cloud_tpu_v2alpha1_StartNodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.StartNodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.UpdateNodeRequest> __Marshaller_google_cloud_tpu_v2alpha1_UpdateNodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.UpdateNodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityRequest> __Marshaller_google_cloud_tpu_v2alpha1_GenerateServiceIdentityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityResponse> __Marshaller_google_cloud_tpu_v2alpha1_GenerateServiceIdentityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesRequest> __Marshaller_google_cloud_tpu_v2alpha1_ListAcceleratorTypesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesResponse> __Marshaller_google_cloud_tpu_v2alpha1_ListAcceleratorTypesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.GetAcceleratorTypeRequest> __Marshaller_google_cloud_tpu_v2alpha1_GetAcceleratorTypeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.GetAcceleratorTypeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.AcceleratorType> __Marshaller_google_cloud_tpu_v2alpha1_AcceleratorType = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.AcceleratorType.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsRequest> __Marshaller_google_cloud_tpu_v2alpha1_ListRuntimeVersionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsResponse> __Marshaller_google_cloud_tpu_v2alpha1_ListRuntimeVersionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.GetRuntimeVersionRequest> __Marshaller_google_cloud_tpu_v2alpha1_GetRuntimeVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.GetRuntimeVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.RuntimeVersion> __Marshaller_google_cloud_tpu_v2alpha1_RuntimeVersion = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.RuntimeVersion.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesRequest> __Marshaller_google_cloud_tpu_v2alpha1_GetGuestAttributesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesResponse> __Marshaller_google_cloud_tpu_v2alpha1_GetGuestAttributesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.ListNodesRequest, global::Google.Cloud.Tpu.V2Alpha1.ListNodesResponse> __Method_ListNodes = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.ListNodesRequest, global::Google.Cloud.Tpu.V2Alpha1.ListNodesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNodes",
        __Marshaller_google_cloud_tpu_v2alpha1_ListNodesRequest,
        __Marshaller_google_cloud_tpu_v2alpha1_ListNodesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.GetNodeRequest, global::Google.Cloud.Tpu.V2Alpha1.Node> __Method_GetNode = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.GetNodeRequest, global::Google.Cloud.Tpu.V2Alpha1.Node>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNode",
        __Marshaller_google_cloud_tpu_v2alpha1_GetNodeRequest,
        __Marshaller_google_cloud_tpu_v2alpha1_Node);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.CreateNodeRequest, global::Google.LongRunning.Operation> __Method_CreateNode = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.CreateNodeRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateNode",
        __Marshaller_google_cloud_tpu_v2alpha1_CreateNodeRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.DeleteNodeRequest, global::Google.LongRunning.Operation> __Method_DeleteNode = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.DeleteNodeRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNode",
        __Marshaller_google_cloud_tpu_v2alpha1_DeleteNodeRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.StopNodeRequest, global::Google.LongRunning.Operation> __Method_StopNode = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.StopNodeRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StopNode",
        __Marshaller_google_cloud_tpu_v2alpha1_StopNodeRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.StartNodeRequest, global::Google.LongRunning.Operation> __Method_StartNode = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.StartNodeRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartNode",
        __Marshaller_google_cloud_tpu_v2alpha1_StartNodeRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.UpdateNodeRequest, global::Google.LongRunning.Operation> __Method_UpdateNode = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.UpdateNodeRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNode",
        __Marshaller_google_cloud_tpu_v2alpha1_UpdateNodeRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityRequest, global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityResponse> __Method_GenerateServiceIdentity = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityRequest, global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateServiceIdentity",
        __Marshaller_google_cloud_tpu_v2alpha1_GenerateServiceIdentityRequest,
        __Marshaller_google_cloud_tpu_v2alpha1_GenerateServiceIdentityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesRequest, global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesResponse> __Method_ListAcceleratorTypes = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesRequest, global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAcceleratorTypes",
        __Marshaller_google_cloud_tpu_v2alpha1_ListAcceleratorTypesRequest,
        __Marshaller_google_cloud_tpu_v2alpha1_ListAcceleratorTypesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.GetAcceleratorTypeRequest, global::Google.Cloud.Tpu.V2Alpha1.AcceleratorType> __Method_GetAcceleratorType = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.GetAcceleratorTypeRequest, global::Google.Cloud.Tpu.V2Alpha1.AcceleratorType>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAcceleratorType",
        __Marshaller_google_cloud_tpu_v2alpha1_GetAcceleratorTypeRequest,
        __Marshaller_google_cloud_tpu_v2alpha1_AcceleratorType);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsRequest, global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsResponse> __Method_ListRuntimeVersions = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsRequest, global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRuntimeVersions",
        __Marshaller_google_cloud_tpu_v2alpha1_ListRuntimeVersionsRequest,
        __Marshaller_google_cloud_tpu_v2alpha1_ListRuntimeVersionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.GetRuntimeVersionRequest, global::Google.Cloud.Tpu.V2Alpha1.RuntimeVersion> __Method_GetRuntimeVersion = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.GetRuntimeVersionRequest, global::Google.Cloud.Tpu.V2Alpha1.RuntimeVersion>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRuntimeVersion",
        __Marshaller_google_cloud_tpu_v2alpha1_GetRuntimeVersionRequest,
        __Marshaller_google_cloud_tpu_v2alpha1_RuntimeVersion);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesRequest, global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesResponse> __Method_GetGuestAttributes = new grpc::Method<global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesRequest, global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGuestAttributes",
        __Marshaller_google_cloud_tpu_v2alpha1_GetGuestAttributesRequest,
        __Marshaller_google_cloud_tpu_v2alpha1_GetGuestAttributesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Tpu.V2Alpha1.CloudTpuReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Tpu</summary>
    [grpc::BindServiceMethod(typeof(Tpu), "BindService")]
    public abstract partial class TpuBase
    {
      /// <summary>
      /// Lists nodes.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Tpu.V2Alpha1.ListNodesResponse> ListNodes(global::Google.Cloud.Tpu.V2Alpha1.ListNodesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the details of a node.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Tpu.V2Alpha1.Node> GetNode(global::Google.Cloud.Tpu.V2Alpha1.GetNodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a node.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateNode(global::Google.Cloud.Tpu.V2Alpha1.CreateNodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a node.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteNode(global::Google.Cloud.Tpu.V2Alpha1.DeleteNodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stops a node. This operation is only available with single TPU nodes.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> StopNode(global::Google.Cloud.Tpu.V2Alpha1.StopNodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Starts a node.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> StartNode(global::Google.Cloud.Tpu.V2Alpha1.StartNodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the configurations of a node.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateNode(global::Google.Cloud.Tpu.V2Alpha1.UpdateNodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Generates the Cloud TPU service identity for the project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityResponse> GenerateServiceIdentity(global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists accelerator types supported by this API.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesResponse> ListAcceleratorTypes(global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets AcceleratorType.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Tpu.V2Alpha1.AcceleratorType> GetAcceleratorType(global::Google.Cloud.Tpu.V2Alpha1.GetAcceleratorTypeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists runtime versions supported by this API.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsResponse> ListRuntimeVersions(global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a runtime version.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Tpu.V2Alpha1.RuntimeVersion> GetRuntimeVersion(global::Google.Cloud.Tpu.V2Alpha1.GetRuntimeVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves the guest attributes for the node.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesResponse> GetGuestAttributes(global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Tpu</summary>
    public partial class TpuClient : grpc::ClientBase<TpuClient>
    {
      /// <summary>Creates a new client for Tpu</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TpuClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Tpu that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TpuClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TpuClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TpuClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists nodes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.ListNodesResponse ListNodes(global::Google.Cloud.Tpu.V2Alpha1.ListNodesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNodes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists nodes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.ListNodesResponse ListNodes(global::Google.Cloud.Tpu.V2Alpha1.ListNodesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListNodes, null, options, request);
      }
      /// <summary>
      /// Lists nodes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.ListNodesResponse> ListNodesAsync(global::Google.Cloud.Tpu.V2Alpha1.ListNodesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNodesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists nodes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.ListNodesResponse> ListNodesAsync(global::Google.Cloud.Tpu.V2Alpha1.ListNodesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListNodes, null, options, request);
      }
      /// <summary>
      /// Gets the details of a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.Node GetNode(global::Google.Cloud.Tpu.V2Alpha1.GetNodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.Node GetNode(global::Google.Cloud.Tpu.V2Alpha1.GetNodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNode, null, options, request);
      }
      /// <summary>
      /// Gets the details of a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.Node> GetNodeAsync(global::Google.Cloud.Tpu.V2Alpha1.GetNodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.Node> GetNodeAsync(global::Google.Cloud.Tpu.V2Alpha1.GetNodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNode, null, options, request);
      }
      /// <summary>
      /// Creates a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateNode(global::Google.Cloud.Tpu.V2Alpha1.CreateNodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateNode(global::Google.Cloud.Tpu.V2Alpha1.CreateNodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateNode, null, options, request);
      }
      /// <summary>
      /// Creates a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateNodeAsync(global::Google.Cloud.Tpu.V2Alpha1.CreateNodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateNodeAsync(global::Google.Cloud.Tpu.V2Alpha1.CreateNodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateNode, null, options, request);
      }
      /// <summary>
      /// Deletes a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteNode(global::Google.Cloud.Tpu.V2Alpha1.DeleteNodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteNode(global::Google.Cloud.Tpu.V2Alpha1.DeleteNodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteNode, null, options, request);
      }
      /// <summary>
      /// Deletes a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteNodeAsync(global::Google.Cloud.Tpu.V2Alpha1.DeleteNodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteNodeAsync(global::Google.Cloud.Tpu.V2Alpha1.DeleteNodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteNode, null, options, request);
      }
      /// <summary>
      /// Stops a node. This operation is only available with single TPU nodes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StopNode(global::Google.Cloud.Tpu.V2Alpha1.StopNodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopNode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops a node. This operation is only available with single TPU nodes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StopNode(global::Google.Cloud.Tpu.V2Alpha1.StopNodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StopNode, null, options, request);
      }
      /// <summary>
      /// Stops a node. This operation is only available with single TPU nodes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StopNodeAsync(global::Google.Cloud.Tpu.V2Alpha1.StopNodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopNodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops a node. This operation is only available with single TPU nodes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StopNodeAsync(global::Google.Cloud.Tpu.V2Alpha1.StopNodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StopNode, null, options, request);
      }
      /// <summary>
      /// Starts a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StartNode(global::Google.Cloud.Tpu.V2Alpha1.StartNodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartNode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StartNode(global::Google.Cloud.Tpu.V2Alpha1.StartNodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartNode, null, options, request);
      }
      /// <summary>
      /// Starts a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StartNodeAsync(global::Google.Cloud.Tpu.V2Alpha1.StartNodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartNodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StartNodeAsync(global::Google.Cloud.Tpu.V2Alpha1.StartNodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartNode, null, options, request);
      }
      /// <summary>
      /// Updates the configurations of a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateNode(global::Google.Cloud.Tpu.V2Alpha1.UpdateNodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the configurations of a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateNode(global::Google.Cloud.Tpu.V2Alpha1.UpdateNodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateNode, null, options, request);
      }
      /// <summary>
      /// Updates the configurations of a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateNodeAsync(global::Google.Cloud.Tpu.V2Alpha1.UpdateNodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the configurations of a node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateNodeAsync(global::Google.Cloud.Tpu.V2Alpha1.UpdateNodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateNode, null, options, request);
      }
      /// <summary>
      /// Generates the Cloud TPU service identity for the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityResponse GenerateServiceIdentity(global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateServiceIdentity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates the Cloud TPU service identity for the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityResponse GenerateServiceIdentity(global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateServiceIdentity, null, options, request);
      }
      /// <summary>
      /// Generates the Cloud TPU service identity for the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityResponse> GenerateServiceIdentityAsync(global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateServiceIdentityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates the Cloud TPU service identity for the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityResponse> GenerateServiceIdentityAsync(global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateServiceIdentity, null, options, request);
      }
      /// <summary>
      /// Lists accelerator types supported by this API.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesResponse ListAcceleratorTypes(global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAcceleratorTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists accelerator types supported by this API.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesResponse ListAcceleratorTypes(global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAcceleratorTypes, null, options, request);
      }
      /// <summary>
      /// Lists accelerator types supported by this API.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesResponse> ListAcceleratorTypesAsync(global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAcceleratorTypesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists accelerator types supported by this API.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesResponse> ListAcceleratorTypesAsync(global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAcceleratorTypes, null, options, request);
      }
      /// <summary>
      /// Gets AcceleratorType.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.AcceleratorType GetAcceleratorType(global::Google.Cloud.Tpu.V2Alpha1.GetAcceleratorTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAcceleratorType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets AcceleratorType.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.AcceleratorType GetAcceleratorType(global::Google.Cloud.Tpu.V2Alpha1.GetAcceleratorTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAcceleratorType, null, options, request);
      }
      /// <summary>
      /// Gets AcceleratorType.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.AcceleratorType> GetAcceleratorTypeAsync(global::Google.Cloud.Tpu.V2Alpha1.GetAcceleratorTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAcceleratorTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets AcceleratorType.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.AcceleratorType> GetAcceleratorTypeAsync(global::Google.Cloud.Tpu.V2Alpha1.GetAcceleratorTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAcceleratorType, null, options, request);
      }
      /// <summary>
      /// Lists runtime versions supported by this API.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsResponse ListRuntimeVersions(global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRuntimeVersions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists runtime versions supported by this API.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsResponse ListRuntimeVersions(global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRuntimeVersions, null, options, request);
      }
      /// <summary>
      /// Lists runtime versions supported by this API.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsResponse> ListRuntimeVersionsAsync(global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRuntimeVersionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists runtime versions supported by this API.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsResponse> ListRuntimeVersionsAsync(global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRuntimeVersions, null, options, request);
      }
      /// <summary>
      /// Gets a runtime version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.RuntimeVersion GetRuntimeVersion(global::Google.Cloud.Tpu.V2Alpha1.GetRuntimeVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRuntimeVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a runtime version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.RuntimeVersion GetRuntimeVersion(global::Google.Cloud.Tpu.V2Alpha1.GetRuntimeVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRuntimeVersion, null, options, request);
      }
      /// <summary>
      /// Gets a runtime version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.RuntimeVersion> GetRuntimeVersionAsync(global::Google.Cloud.Tpu.V2Alpha1.GetRuntimeVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRuntimeVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a runtime version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.RuntimeVersion> GetRuntimeVersionAsync(global::Google.Cloud.Tpu.V2Alpha1.GetRuntimeVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRuntimeVersion, null, options, request);
      }
      /// <summary>
      /// Retrieves the guest attributes for the node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesResponse GetGuestAttributes(global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGuestAttributes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the guest attributes for the node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesResponse GetGuestAttributes(global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGuestAttributes, null, options, request);
      }
      /// <summary>
      /// Retrieves the guest attributes for the node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesResponse> GetGuestAttributesAsync(global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGuestAttributesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the guest attributes for the node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesResponse> GetGuestAttributesAsync(global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGuestAttributes, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TpuClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TpuClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(TpuBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListNodes, serviceImpl.ListNodes)
          .AddMethod(__Method_GetNode, serviceImpl.GetNode)
          .AddMethod(__Method_CreateNode, serviceImpl.CreateNode)
          .AddMethod(__Method_DeleteNode, serviceImpl.DeleteNode)
          .AddMethod(__Method_StopNode, serviceImpl.StopNode)
          .AddMethod(__Method_StartNode, serviceImpl.StartNode)
          .AddMethod(__Method_UpdateNode, serviceImpl.UpdateNode)
          .AddMethod(__Method_GenerateServiceIdentity, serviceImpl.GenerateServiceIdentity)
          .AddMethod(__Method_ListAcceleratorTypes, serviceImpl.ListAcceleratorTypes)
          .AddMethod(__Method_GetAcceleratorType, serviceImpl.GetAcceleratorType)
          .AddMethod(__Method_ListRuntimeVersions, serviceImpl.ListRuntimeVersions)
          .AddMethod(__Method_GetRuntimeVersion, serviceImpl.GetRuntimeVersion)
          .AddMethod(__Method_GetGuestAttributes, serviceImpl.GetGuestAttributes).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TpuBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListNodes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.ListNodesRequest, global::Google.Cloud.Tpu.V2Alpha1.ListNodesResponse>(serviceImpl.ListNodes));
      serviceBinder.AddMethod(__Method_GetNode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.GetNodeRequest, global::Google.Cloud.Tpu.V2Alpha1.Node>(serviceImpl.GetNode));
      serviceBinder.AddMethod(__Method_CreateNode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.CreateNodeRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateNode));
      serviceBinder.AddMethod(__Method_DeleteNode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.DeleteNodeRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteNode));
      serviceBinder.AddMethod(__Method_StopNode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.StopNodeRequest, global::Google.LongRunning.Operation>(serviceImpl.StopNode));
      serviceBinder.AddMethod(__Method_StartNode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.StartNodeRequest, global::Google.LongRunning.Operation>(serviceImpl.StartNode));
      serviceBinder.AddMethod(__Method_UpdateNode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.UpdateNodeRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateNode));
      serviceBinder.AddMethod(__Method_GenerateServiceIdentity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityRequest, global::Google.Cloud.Tpu.V2Alpha1.GenerateServiceIdentityResponse>(serviceImpl.GenerateServiceIdentity));
      serviceBinder.AddMethod(__Method_ListAcceleratorTypes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesRequest, global::Google.Cloud.Tpu.V2Alpha1.ListAcceleratorTypesResponse>(serviceImpl.ListAcceleratorTypes));
      serviceBinder.AddMethod(__Method_GetAcceleratorType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.GetAcceleratorTypeRequest, global::Google.Cloud.Tpu.V2Alpha1.AcceleratorType>(serviceImpl.GetAcceleratorType));
      serviceBinder.AddMethod(__Method_ListRuntimeVersions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsRequest, global::Google.Cloud.Tpu.V2Alpha1.ListRuntimeVersionsResponse>(serviceImpl.ListRuntimeVersions));
      serviceBinder.AddMethod(__Method_GetRuntimeVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.GetRuntimeVersionRequest, global::Google.Cloud.Tpu.V2Alpha1.RuntimeVersion>(serviceImpl.GetRuntimeVersion));
      serviceBinder.AddMethod(__Method_GetGuestAttributes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesRequest, global::Google.Cloud.Tpu.V2Alpha1.GetGuestAttributesResponse>(serviceImpl.GetGuestAttributes));
    }

  }
}
#endregion
