<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/video/livestream/v1/resources.proto

namespace Google\Cloud\Video\Livestream\V1\Input;

use UnexpectedValueException;

/**
 * Tier of the input specification.
 *
 * Protobuf type <code>google.cloud.video.livestream.v1.Input.Tier</code>
 */
class Tier
{
    /**
     * Tier is not specified.
     *
     * Generated from protobuf enum <code>TIER_UNSPECIFIED = 0;</code>
     */
    const TIER_UNSPECIFIED = 0;
    /**
     * Resolution less than 1280x720.
     *
     * Generated from protobuf enum <code>SD = 1;</code>
     */
    const SD = 1;
    /**
     * Resolution from 1280x720 to 1920x1080.
     *
     * Generated from protobuf enum <code>HD = 2;</code>
     */
    const HD = 2;
    /**
     * Resolution more than 1920x1080 to 4096x2160.
     *
     * Generated from protobuf enum <code>UHD = 3;</code>
     */
    const UHD = 3;

    private static $valueToName = [
        self::TIER_UNSPECIFIED => 'TIER_UNSPECIFIED',
        self::SD => 'SD',
        self::HD => 'HD',
        self::UHD => 'UHD',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Tier::class, \Google\Cloud\Video\Livestream\V1\Input_Tier::class);

