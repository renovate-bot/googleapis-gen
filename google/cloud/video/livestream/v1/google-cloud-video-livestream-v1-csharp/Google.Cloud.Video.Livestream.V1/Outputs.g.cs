// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/video/livestream/v1/outputs.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Video.Livestream.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/video/livestream/v1/outputs.proto</summary>
  public static partial class OutputsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/video/livestream/v1/outputs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OutputsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5nb29nbGUvY2xvdWQvdmlkZW8vbGl2ZXN0cmVhbS92MS9vdXRwdXRzLnBy",
            "b3RvEiBnb29nbGUuY2xvdWQudmlkZW8ubGl2ZXN0cmVhbS52MRofZ29vZ2xl",
            "L2FwaS9maWVsZF9iZWhhdmlvci5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL2R1",
            "cmF0aW9uLnByb3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvIocC",
            "ChBFbGVtZW50YXJ5U3RyZWFtEgsKA2tleRgEIAEoCRJFCgx2aWRlb19zdHJl",
            "YW0YASABKAsyLS5nb29nbGUuY2xvdWQudmlkZW8ubGl2ZXN0cmVhbS52MS5W",
            "aWRlb1N0cmVhbUgAEkUKDGF1ZGlvX3N0cmVhbRgCIAEoCzItLmdvb2dsZS5j",
            "bG91ZC52aWRlby5saXZlc3RyZWFtLnYxLkF1ZGlvU3RyZWFtSAASQwoLdGV4",
            "dF9zdHJlYW0YAyABKAsyLC5nb29nbGUuY2xvdWQudmlkZW8ubGl2ZXN0cmVh",
            "bS52MS5UZXh0U3RyZWFtSABCEwoRZWxlbWVudGFyeV9zdHJlYW0ilAEKCU11",
            "eFN0cmVhbRILCgNrZXkYASABKAkSEQoJY29udGFpbmVyGAMgASgJEhoKEmVs",
            "ZW1lbnRhcnlfc3RyZWFtcxgEIAMoCRJLChBzZWdtZW50X3NldHRpbmdzGAUg",
            "ASgLMjEuZ29vZ2xlLmNsb3VkLnZpZGVvLmxpdmVzdHJlYW0udjEuU2VnbWVu",
            "dFNldHRpbmdzIpoCCghNYW5pZmVzdBIRCglmaWxlX25hbWUYASABKAkSSgoE",
            "dHlwZRgCIAEoDjI3Lmdvb2dsZS5jbG91ZC52aWRlby5saXZlc3RyZWFtLnYx",
            "Lk1hbmlmZXN0Lk1hbmlmZXN0VHlwZUID4EECEhgKC211eF9zdHJlYW1zGAMg",
            "AygJQgPgQQISGQoRbWF4X3NlZ21lbnRfY291bnQYBCABKAUSOAoVc2VnbWVu",
            "dF9rZWVwX2R1cmF0aW9uGAUgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0",
            "aW9uIkAKDE1hbmlmZXN0VHlwZRIdChlNQU5JRkVTVF9UWVBFX1VOU1BFQ0lG",
            "SUVEEAASBwoDSExTEAESCAoEREFTSBACIuMBCgtTcHJpdGVTaGVldBIOCgZm",
            "b3JtYXQYASABKAkSGAoLZmlsZV9wcmVmaXgYAiABKAlCA+BBAhIgChNzcHJp",
            "dGVfd2lkdGhfcGl4ZWxzGAMgASgFQgPgQQISIQoUc3ByaXRlX2hlaWdodF9w",
            "aXhlbHMYBCABKAVCA+BBAhIUCgxjb2x1bW5fY291bnQYBSABKAUSEQoJcm93",
            "X2NvdW50GAYgASgFEisKCGludGVydmFsGAcgASgLMhkuZ29vZ2xlLnByb3Rv",
            "YnVmLkR1cmF0aW9uEg8KB3F1YWxpdHkYCCABKAUi4gIKE1ByZXByb2Nlc3Np",
            "bmdDb25maWcSSAoEY3JvcBgCIAEoCzI6Lmdvb2dsZS5jbG91ZC52aWRlby5s",
            "aXZlc3RyZWFtLnYxLlByZXByb2Nlc3NpbmdDb25maWcuQ3JvcBJGCgNwYWQY",
            "AyABKAsyOS5nb29nbGUuY2xvdWQudmlkZW8ubGl2ZXN0cmVhbS52MS5QcmVw",
            "cm9jZXNzaW5nQ29uZmlnLlBhZBpcCgRDcm9wEhIKCnRvcF9waXhlbHMYASAB",
            "KAUSFQoNYm90dG9tX3BpeGVscxgCIAEoBRITCgtsZWZ0X3BpeGVscxgDIAEo",
            "BRIUCgxyaWdodF9waXhlbHMYBCABKAUaWwoDUGFkEhIKCnRvcF9waXhlbHMY",
            "ASABKAUSFQoNYm90dG9tX3BpeGVscxgCIAEoBRITCgtsZWZ0X3BpeGVscxgD",
            "IAEoBRIUCgxyaWdodF9waXhlbHMYBCABKAUi/wMKC1ZpZGVvU3RyZWFtEk8K",
            "BGgyNjQYFCABKAsyPy5nb29nbGUuY2xvdWQudmlkZW8ubGl2ZXN0cmVhbS52",
            "MS5WaWRlb1N0cmVhbS5IMjY0Q29kZWNTZXR0aW5nc0gAGowDChFIMjY0Q29k",
            "ZWNTZXR0aW5ncxIUCgx3aWR0aF9waXhlbHMYASABKAUSFQoNaGVpZ2h0X3Bp",
            "eGVscxgCIAEoBRIXCgpmcmFtZV9yYXRlGAMgASgBQgPgQQISGAoLYml0cmF0",
            "ZV9icHMYBCABKAVCA+BBAhIWCg5hbGxvd19vcGVuX2dvcBgGIAEoCBIZCg9n",
            "b3BfZnJhbWVfY291bnQYByABKAVIABIxCgxnb3BfZHVyYXRpb24YCCABKAsy",
            "GS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25IABIVCg12YnZfc2l6ZV9iaXRz",
            "GAkgASgFEhkKEXZidl9mdWxsbmVzc19iaXRzGAogASgFEhUKDWVudHJvcHlf",
            "Y29kZXIYCyABKAkSEQoJYl9weXJhbWlkGAwgASgIEhUKDWJfZnJhbWVfY291",
            "bnQYDSABKAUSEwoLYXFfc3RyZW5ndGgYDiABKAESDwoHcHJvZmlsZRgPIAEo",
            "CRIMCgR0dW5lGBAgASgJQgoKCGdvcF9tb2RlQhAKDmNvZGVjX3NldHRpbmdz",
            "ItoCCgtBdWRpb1N0cmVhbRIQCgh0cmFuc211eBgIIAEoCBINCgVjb2RlYxgB",
            "IAEoCRIYCgtiaXRyYXRlX2JwcxgCIAEoBUID4EECEhUKDWNoYW5uZWxfY291",
            "bnQYAyABKAUSFgoOY2hhbm5lbF9sYXlvdXQYBCADKAkSSwoHbWFwcGluZxgF",
            "IAMoCzI6Lmdvb2dsZS5jbG91ZC52aWRlby5saXZlc3RyZWFtLnYxLkF1ZGlv",
            "U3RyZWFtLkF1ZGlvTWFwcGluZxIZChFzYW1wbGVfcmF0ZV9oZXJ0ehgGIAEo",
            "BRp5CgxBdWRpb01hcHBpbmcSFgoJaW5wdXRfa2V5GAYgASgJQgPgQQISGAoL",
            "aW5wdXRfdHJhY2sYAiABKAVCA+BBAhIaCg1pbnB1dF9jaGFubmVsGAMgASgF",
            "QgPgQQISGwoOb3V0cHV0X2NoYW5uZWwYBCABKAVCA+BBAiIgCgpUZXh0U3Ry",
            "ZWFtEhIKBWNvZGVjGAEgASgJQgPgQQIiRgoPU2VnbWVudFNldHRpbmdzEjMK",
            "EHNlZ21lbnRfZHVyYXRpb24YASABKAsyGS5nb29nbGUucHJvdG9idWYuRHVy",
            "YXRpb25CggEKJGNvbS5nb29nbGUuY2xvdWQudmlkZW8ubGl2ZXN0cmVhbS52",
            "MUIMT3V0cHV0c1Byb3RvUAFaSmdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3Rv",
            "L2dvb2dsZWFwaXMvY2xvdWQvdmlkZW8vbGl2ZXN0cmVhbS92MTtsaXZlc3Ry",
            "ZWFtYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.ElementaryStream), global::Google.Cloud.Video.Livestream.V1.ElementaryStream.Parser, new[]{ "Key", "VideoStream", "AudioStream", "TextStream" }, new[]{ "ElementaryStream" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.MuxStream), global::Google.Cloud.Video.Livestream.V1.MuxStream.Parser, new[]{ "Key", "Container", "ElementaryStreams", "SegmentSettings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.Manifest), global::Google.Cloud.Video.Livestream.V1.Manifest.Parser, new[]{ "FileName", "Type", "MuxStreams", "MaxSegmentCount", "SegmentKeepDuration" }, null, new[]{ typeof(global::Google.Cloud.Video.Livestream.V1.Manifest.Types.ManifestType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.SpriteSheet), global::Google.Cloud.Video.Livestream.V1.SpriteSheet.Parser, new[]{ "Format", "FilePrefix", "SpriteWidthPixels", "SpriteHeightPixels", "ColumnCount", "RowCount", "Interval", "Quality" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig), global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Parser, new[]{ "Crop", "Pad" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Crop), global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Crop.Parser, new[]{ "TopPixels", "BottomPixels", "LeftPixels", "RightPixels" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Pad), global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Pad.Parser, new[]{ "TopPixels", "BottomPixels", "LeftPixels", "RightPixels" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.VideoStream), global::Google.Cloud.Video.Livestream.V1.VideoStream.Parser, new[]{ "H264" }, new[]{ "CodecSettings" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.VideoStream.Types.H264CodecSettings), global::Google.Cloud.Video.Livestream.V1.VideoStream.Types.H264CodecSettings.Parser, new[]{ "WidthPixels", "HeightPixels", "FrameRate", "BitrateBps", "AllowOpenGop", "GopFrameCount", "GopDuration", "VbvSizeBits", "VbvFullnessBits", "EntropyCoder", "BPyramid", "BFrameCount", "AqStrength", "Profile", "Tune" }, new[]{ "GopMode" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.AudioStream), global::Google.Cloud.Video.Livestream.V1.AudioStream.Parser, new[]{ "Transmux", "Codec", "BitrateBps", "ChannelCount", "ChannelLayout", "Mapping", "SampleRateHertz" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.AudioStream.Types.AudioMapping), global::Google.Cloud.Video.Livestream.V1.AudioStream.Types.AudioMapping.Parser, new[]{ "InputKey", "InputTrack", "InputChannel", "OutputChannel" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.TextStream), global::Google.Cloud.Video.Livestream.V1.TextStream.Parser, new[]{ "Codec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Video.Livestream.V1.SegmentSettings), global::Google.Cloud.Video.Livestream.V1.SegmentSettings.Parser, new[]{ "SegmentDuration" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Encoding of an input element such as an audio, video, or text track.
  /// Elementary streams must be packaged before mapping and sharing between
  /// different output formats.
  /// </summary>
  public sealed partial class ElementaryStream : pb::IMessage<ElementaryStream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ElementaryStream> _parser = new pb::MessageParser<ElementaryStream>(() => new ElementaryStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ElementaryStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Video.Livestream.V1.OutputsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ElementaryStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ElementaryStream(ElementaryStream other) : this() {
      key_ = other.key_;
      switch (other.ElementaryStreamCase) {
        case ElementaryStreamOneofCase.VideoStream:
          VideoStream = other.VideoStream.Clone();
          break;
        case ElementaryStreamOneofCase.AudioStream:
          AudioStream = other.AudioStream.Clone();
          break;
        case ElementaryStreamOneofCase.TextStream:
          TextStream = other.TextStream.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ElementaryStream Clone() {
      return new ElementaryStream(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 4;
    private string key_ = "";
    /// <summary>
    /// A unique key for this elementary stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "video_stream" field.</summary>
    public const int VideoStreamFieldNumber = 1;
    /// <summary>
    /// Encoding of a video stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Video.Livestream.V1.VideoStream VideoStream {
      get { return elementaryStreamCase_ == ElementaryStreamOneofCase.VideoStream ? (global::Google.Cloud.Video.Livestream.V1.VideoStream) elementaryStream_ : null; }
      set {
        elementaryStream_ = value;
        elementaryStreamCase_ = value == null ? ElementaryStreamOneofCase.None : ElementaryStreamOneofCase.VideoStream;
      }
    }

    /// <summary>Field number for the "audio_stream" field.</summary>
    public const int AudioStreamFieldNumber = 2;
    /// <summary>
    /// Encoding of an audio stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Video.Livestream.V1.AudioStream AudioStream {
      get { return elementaryStreamCase_ == ElementaryStreamOneofCase.AudioStream ? (global::Google.Cloud.Video.Livestream.V1.AudioStream) elementaryStream_ : null; }
      set {
        elementaryStream_ = value;
        elementaryStreamCase_ = value == null ? ElementaryStreamOneofCase.None : ElementaryStreamOneofCase.AudioStream;
      }
    }

    /// <summary>Field number for the "text_stream" field.</summary>
    public const int TextStreamFieldNumber = 3;
    /// <summary>
    /// Encoding of a text stream. For example, closed captions or subtitles.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Video.Livestream.V1.TextStream TextStream {
      get { return elementaryStreamCase_ == ElementaryStreamOneofCase.TextStream ? (global::Google.Cloud.Video.Livestream.V1.TextStream) elementaryStream_ : null; }
      set {
        elementaryStream_ = value;
        elementaryStreamCase_ = value == null ? ElementaryStreamOneofCase.None : ElementaryStreamOneofCase.TextStream;
      }
    }

    private object elementaryStream_;
    /// <summary>Enum of possible cases for the "elementary_stream" oneof.</summary>
    public enum ElementaryStreamOneofCase {
      None = 0,
      VideoStream = 1,
      AudioStream = 2,
      TextStream = 3,
    }
    private ElementaryStreamOneofCase elementaryStreamCase_ = ElementaryStreamOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ElementaryStreamOneofCase ElementaryStreamCase {
      get { return elementaryStreamCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearElementaryStream() {
      elementaryStreamCase_ = ElementaryStreamOneofCase.None;
      elementaryStream_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ElementaryStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ElementaryStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (!object.Equals(VideoStream, other.VideoStream)) return false;
      if (!object.Equals(AudioStream, other.AudioStream)) return false;
      if (!object.Equals(TextStream, other.TextStream)) return false;
      if (ElementaryStreamCase != other.ElementaryStreamCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (elementaryStreamCase_ == ElementaryStreamOneofCase.VideoStream) hash ^= VideoStream.GetHashCode();
      if (elementaryStreamCase_ == ElementaryStreamOneofCase.AudioStream) hash ^= AudioStream.GetHashCode();
      if (elementaryStreamCase_ == ElementaryStreamOneofCase.TextStream) hash ^= TextStream.GetHashCode();
      hash ^= (int) elementaryStreamCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (elementaryStreamCase_ == ElementaryStreamOneofCase.VideoStream) {
        output.WriteRawTag(10);
        output.WriteMessage(VideoStream);
      }
      if (elementaryStreamCase_ == ElementaryStreamOneofCase.AudioStream) {
        output.WriteRawTag(18);
        output.WriteMessage(AudioStream);
      }
      if (elementaryStreamCase_ == ElementaryStreamOneofCase.TextStream) {
        output.WriteRawTag(26);
        output.WriteMessage(TextStream);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (elementaryStreamCase_ == ElementaryStreamOneofCase.VideoStream) {
        output.WriteRawTag(10);
        output.WriteMessage(VideoStream);
      }
      if (elementaryStreamCase_ == ElementaryStreamOneofCase.AudioStream) {
        output.WriteRawTag(18);
        output.WriteMessage(AudioStream);
      }
      if (elementaryStreamCase_ == ElementaryStreamOneofCase.TextStream) {
        output.WriteRawTag(26);
        output.WriteMessage(TextStream);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (elementaryStreamCase_ == ElementaryStreamOneofCase.VideoStream) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoStream);
      }
      if (elementaryStreamCase_ == ElementaryStreamOneofCase.AudioStream) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioStream);
      }
      if (elementaryStreamCase_ == ElementaryStreamOneofCase.TextStream) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextStream);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ElementaryStream other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      switch (other.ElementaryStreamCase) {
        case ElementaryStreamOneofCase.VideoStream:
          if (VideoStream == null) {
            VideoStream = new global::Google.Cloud.Video.Livestream.V1.VideoStream();
          }
          VideoStream.MergeFrom(other.VideoStream);
          break;
        case ElementaryStreamOneofCase.AudioStream:
          if (AudioStream == null) {
            AudioStream = new global::Google.Cloud.Video.Livestream.V1.AudioStream();
          }
          AudioStream.MergeFrom(other.AudioStream);
          break;
        case ElementaryStreamOneofCase.TextStream:
          if (TextStream == null) {
            TextStream = new global::Google.Cloud.Video.Livestream.V1.TextStream();
          }
          TextStream.MergeFrom(other.TextStream);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Video.Livestream.V1.VideoStream subBuilder = new global::Google.Cloud.Video.Livestream.V1.VideoStream();
            if (elementaryStreamCase_ == ElementaryStreamOneofCase.VideoStream) {
              subBuilder.MergeFrom(VideoStream);
            }
            input.ReadMessage(subBuilder);
            VideoStream = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Video.Livestream.V1.AudioStream subBuilder = new global::Google.Cloud.Video.Livestream.V1.AudioStream();
            if (elementaryStreamCase_ == ElementaryStreamOneofCase.AudioStream) {
              subBuilder.MergeFrom(AudioStream);
            }
            input.ReadMessage(subBuilder);
            AudioStream = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Video.Livestream.V1.TextStream subBuilder = new global::Google.Cloud.Video.Livestream.V1.TextStream();
            if (elementaryStreamCase_ == ElementaryStreamOneofCase.TextStream) {
              subBuilder.MergeFrom(TextStream);
            }
            input.ReadMessage(subBuilder);
            TextStream = subBuilder;
            break;
          }
          case 34: {
            Key = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Video.Livestream.V1.VideoStream subBuilder = new global::Google.Cloud.Video.Livestream.V1.VideoStream();
            if (elementaryStreamCase_ == ElementaryStreamOneofCase.VideoStream) {
              subBuilder.MergeFrom(VideoStream);
            }
            input.ReadMessage(subBuilder);
            VideoStream = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Video.Livestream.V1.AudioStream subBuilder = new global::Google.Cloud.Video.Livestream.V1.AudioStream();
            if (elementaryStreamCase_ == ElementaryStreamOneofCase.AudioStream) {
              subBuilder.MergeFrom(AudioStream);
            }
            input.ReadMessage(subBuilder);
            AudioStream = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Video.Livestream.V1.TextStream subBuilder = new global::Google.Cloud.Video.Livestream.V1.TextStream();
            if (elementaryStreamCase_ == ElementaryStreamOneofCase.TextStream) {
              subBuilder.MergeFrom(TextStream);
            }
            input.ReadMessage(subBuilder);
            TextStream = subBuilder;
            break;
          }
          case 34: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Multiplexing settings for output stream.
  /// </summary>
  public sealed partial class MuxStream : pb::IMessage<MuxStream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MuxStream> _parser = new pb::MessageParser<MuxStream>(() => new MuxStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MuxStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Video.Livestream.V1.OutputsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MuxStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MuxStream(MuxStream other) : this() {
      key_ = other.key_;
      container_ = other.container_;
      elementaryStreams_ = other.elementaryStreams_.Clone();
      segmentSettings_ = other.segmentSettings_ != null ? other.segmentSettings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MuxStream Clone() {
      return new MuxStream(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// A unique key for this multiplexed stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "container" field.</summary>
    public const int ContainerFieldNumber = 3;
    private string container_ = "";
    /// <summary>
    /// The container format. The default is `fmp4`.
    ///
    /// Supported container formats:
    ///
    /// - `fmp4` - the corresponding file extension is `.m4s`
    /// - `ts`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Container {
      get { return container_; }
      set {
        container_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "elementary_streams" field.</summary>
    public const int ElementaryStreamsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_elementaryStreams_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> elementaryStreams_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of `ElementaryStream` [key][google.cloud.video.livestream.v1.ElementaryStream.key]s multiplexed in this
    /// stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ElementaryStreams {
      get { return elementaryStreams_; }
    }

    /// <summary>Field number for the "segment_settings" field.</summary>
    public const int SegmentSettingsFieldNumber = 5;
    private global::Google.Cloud.Video.Livestream.V1.SegmentSettings segmentSettings_;
    /// <summary>
    /// Segment settings for `fmp4` and `ts`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Video.Livestream.V1.SegmentSettings SegmentSettings {
      get { return segmentSettings_; }
      set {
        segmentSettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MuxStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MuxStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Container != other.Container) return false;
      if(!elementaryStreams_.Equals(other.elementaryStreams_)) return false;
      if (!object.Equals(SegmentSettings, other.SegmentSettings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Container.Length != 0) hash ^= Container.GetHashCode();
      hash ^= elementaryStreams_.GetHashCode();
      if (segmentSettings_ != null) hash ^= SegmentSettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Container.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Container);
      }
      elementaryStreams_.WriteTo(output, _repeated_elementaryStreams_codec);
      if (segmentSettings_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SegmentSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Container.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Container);
      }
      elementaryStreams_.WriteTo(ref output, _repeated_elementaryStreams_codec);
      if (segmentSettings_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SegmentSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Container.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Container);
      }
      size += elementaryStreams_.CalculateSize(_repeated_elementaryStreams_codec);
      if (segmentSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SegmentSettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MuxStream other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Container.Length != 0) {
        Container = other.Container;
      }
      elementaryStreams_.Add(other.elementaryStreams_);
      if (other.segmentSettings_ != null) {
        if (segmentSettings_ == null) {
          SegmentSettings = new global::Google.Cloud.Video.Livestream.V1.SegmentSettings();
        }
        SegmentSettings.MergeFrom(other.SegmentSettings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            Container = input.ReadString();
            break;
          }
          case 34: {
            elementaryStreams_.AddEntriesFrom(input, _repeated_elementaryStreams_codec);
            break;
          }
          case 42: {
            if (segmentSettings_ == null) {
              SegmentSettings = new global::Google.Cloud.Video.Livestream.V1.SegmentSettings();
            }
            input.ReadMessage(SegmentSettings);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            Container = input.ReadString();
            break;
          }
          case 34: {
            elementaryStreams_.AddEntriesFrom(ref input, _repeated_elementaryStreams_codec);
            break;
          }
          case 42: {
            if (segmentSettings_ == null) {
              SegmentSettings = new global::Google.Cloud.Video.Livestream.V1.SegmentSettings();
            }
            input.ReadMessage(SegmentSettings);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Manifest configuration.
  /// </summary>
  public sealed partial class Manifest : pb::IMessage<Manifest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Manifest> _parser = new pb::MessageParser<Manifest>(() => new Manifest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Manifest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Video.Livestream.V1.OutputsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Manifest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Manifest(Manifest other) : this() {
      fileName_ = other.fileName_;
      type_ = other.type_;
      muxStreams_ = other.muxStreams_.Clone();
      maxSegmentCount_ = other.maxSegmentCount_;
      segmentKeepDuration_ = other.segmentKeepDuration_ != null ? other.segmentKeepDuration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Manifest Clone() {
      return new Manifest(this);
    }

    /// <summary>Field number for the "file_name" field.</summary>
    public const int FileNameFieldNumber = 1;
    private string fileName_ = "";
    /// <summary>
    /// The name of the generated file. The default is `manifest` with the
    /// extension suffix corresponding to the `Manifest` [type][google.cloud.video.livestream.v1.Manifest.type]. If multiple
    /// manifests are added to the channel, each must have a unique file name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Google.Cloud.Video.Livestream.V1.Manifest.Types.ManifestType type_ = global::Google.Cloud.Video.Livestream.V1.Manifest.Types.ManifestType.Unspecified;
    /// <summary>
    /// Required. Type of the manifest, can be `HLS` or `DASH`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Video.Livestream.V1.Manifest.Types.ManifestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "mux_streams" field.</summary>
    public const int MuxStreamsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_muxStreams_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> muxStreams_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. List of `MuxStream` [key][google.cloud.video.livestream.v1.MuxStream.key]s that should appear in this
    /// manifest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> MuxStreams {
      get { return muxStreams_; }
    }

    /// <summary>Field number for the "max_segment_count" field.</summary>
    public const int MaxSegmentCountFieldNumber = 4;
    private int maxSegmentCount_;
    /// <summary>
    /// Maximum number of segments that this manifest holds. Once the manifest
    /// reaches this maximum number of segments, whenever a new segment is added to
    /// the manifest, the oldest segment will be removed from the manifest.
    /// The minimum value is 1 and the default value is 5.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxSegmentCount {
      get { return maxSegmentCount_; }
      set {
        maxSegmentCount_ = value;
      }
    }

    /// <summary>Field number for the "segment_keep_duration" field.</summary>
    public const int SegmentKeepDurationFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Duration segmentKeepDuration_;
    /// <summary>
    /// How long to keep a segment on the output Google Cloud Storage bucket after
    /// it is removed from the manifest. This field should be large enough to cover
    /// the manifest propagation delay. Otherwise, a player could receive 404
    /// errors while accessing segments which are listed in the manifest that the
    /// player has, but were already deleted from the output Google Cloud Storage
    /// bucket. Default value is `60s`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration SegmentKeepDuration {
      get { return segmentKeepDuration_; }
      set {
        segmentKeepDuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Manifest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Manifest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileName != other.FileName) return false;
      if (Type != other.Type) return false;
      if(!muxStreams_.Equals(other.muxStreams_)) return false;
      if (MaxSegmentCount != other.MaxSegmentCount) return false;
      if (!object.Equals(SegmentKeepDuration, other.SegmentKeepDuration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (Type != global::Google.Cloud.Video.Livestream.V1.Manifest.Types.ManifestType.Unspecified) hash ^= Type.GetHashCode();
      hash ^= muxStreams_.GetHashCode();
      if (MaxSegmentCount != 0) hash ^= MaxSegmentCount.GetHashCode();
      if (segmentKeepDuration_ != null) hash ^= SegmentKeepDuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FileName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileName);
      }
      if (Type != global::Google.Cloud.Video.Livestream.V1.Manifest.Types.ManifestType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      muxStreams_.WriteTo(output, _repeated_muxStreams_codec);
      if (MaxSegmentCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxSegmentCount);
      }
      if (segmentKeepDuration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SegmentKeepDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FileName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileName);
      }
      if (Type != global::Google.Cloud.Video.Livestream.V1.Manifest.Types.ManifestType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      muxStreams_.WriteTo(ref output, _repeated_muxStreams_codec);
      if (MaxSegmentCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxSegmentCount);
      }
      if (segmentKeepDuration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SegmentKeepDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (Type != global::Google.Cloud.Video.Livestream.V1.Manifest.Types.ManifestType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += muxStreams_.CalculateSize(_repeated_muxStreams_codec);
      if (MaxSegmentCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxSegmentCount);
      }
      if (segmentKeepDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SegmentKeepDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Manifest other) {
      if (other == null) {
        return;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.Type != global::Google.Cloud.Video.Livestream.V1.Manifest.Types.ManifestType.Unspecified) {
        Type = other.Type;
      }
      muxStreams_.Add(other.muxStreams_);
      if (other.MaxSegmentCount != 0) {
        MaxSegmentCount = other.MaxSegmentCount;
      }
      if (other.segmentKeepDuration_ != null) {
        if (segmentKeepDuration_ == null) {
          SegmentKeepDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        SegmentKeepDuration.MergeFrom(other.SegmentKeepDuration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileName = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Google.Cloud.Video.Livestream.V1.Manifest.Types.ManifestType) input.ReadEnum();
            break;
          }
          case 26: {
            muxStreams_.AddEntriesFrom(input, _repeated_muxStreams_codec);
            break;
          }
          case 32: {
            MaxSegmentCount = input.ReadInt32();
            break;
          }
          case 42: {
            if (segmentKeepDuration_ == null) {
              SegmentKeepDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(SegmentKeepDuration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FileName = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Google.Cloud.Video.Livestream.V1.Manifest.Types.ManifestType) input.ReadEnum();
            break;
          }
          case 26: {
            muxStreams_.AddEntriesFrom(ref input, _repeated_muxStreams_codec);
            break;
          }
          case 32: {
            MaxSegmentCount = input.ReadInt32();
            break;
          }
          case 42: {
            if (segmentKeepDuration_ == null) {
              SegmentKeepDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(SegmentKeepDuration);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Manifest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The manifest type can be either `HLS` or `DASH`.
      /// </summary>
      public enum ManifestType {
        /// <summary>
        /// The manifest type is not specified.
        /// </summary>
        [pbr::OriginalName("MANIFEST_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Create an `HLS` manifest. The corresponding file extension is `.m3u8`.
        /// </summary>
        [pbr::OriginalName("HLS")] Hls = 1,
        /// <summary>
        /// Create a `DASH` manifest. The corresponding file extension is `.mpd`.
        /// </summary>
        [pbr::OriginalName("DASH")] Dash = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Sprite sheet configuration.
  /// </summary>
  public sealed partial class SpriteSheet : pb::IMessage<SpriteSheet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpriteSheet> _parser = new pb::MessageParser<SpriteSheet>(() => new SpriteSheet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpriteSheet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Video.Livestream.V1.OutputsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpriteSheet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpriteSheet(SpriteSheet other) : this() {
      format_ = other.format_;
      filePrefix_ = other.filePrefix_;
      spriteWidthPixels_ = other.spriteWidthPixels_;
      spriteHeightPixels_ = other.spriteHeightPixels_;
      columnCount_ = other.columnCount_;
      rowCount_ = other.rowCount_;
      interval_ = other.interval_ != null ? other.interval_.Clone() : null;
      quality_ = other.quality_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpriteSheet Clone() {
      return new SpriteSheet(this);
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 1;
    private string format_ = "";
    /// <summary>
    /// Format type. The default is `jpeg`.
    ///
    /// Supported formats:
    ///
    /// - `jpeg`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Format {
      get { return format_; }
      set {
        format_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file_prefix" field.</summary>
    public const int FilePrefixFieldNumber = 2;
    private string filePrefix_ = "";
    /// <summary>
    /// Required. File name prefix for the generated sprite sheets. If multiple
    /// sprite sheets are added to the channel, each must have a unique file
    /// prefix.
    /// Each sprite sheet has an incremental 10-digit zero-padded suffix starting
    /// from 0 before the extension, such as `sprite_sheet0000000123.jpeg`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FilePrefix {
      get { return filePrefix_; }
      set {
        filePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sprite_width_pixels" field.</summary>
    public const int SpriteWidthPixelsFieldNumber = 3;
    private int spriteWidthPixels_;
    /// <summary>
    /// Required. The width of the sprite in pixels. Must be an even integer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpriteWidthPixels {
      get { return spriteWidthPixels_; }
      set {
        spriteWidthPixels_ = value;
      }
    }

    /// <summary>Field number for the "sprite_height_pixels" field.</summary>
    public const int SpriteHeightPixelsFieldNumber = 4;
    private int spriteHeightPixels_;
    /// <summary>
    /// Required. The height of the sprite in pixels. Must be an even integer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpriteHeightPixels {
      get { return spriteHeightPixels_; }
      set {
        spriteHeightPixels_ = value;
      }
    }

    /// <summary>Field number for the "column_count" field.</summary>
    public const int ColumnCountFieldNumber = 5;
    private int columnCount_;
    /// <summary>
    /// The maximum number of sprites per row in a sprite sheet. Valid range is
    /// [1, 10] and the default value is 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ColumnCount {
      get { return columnCount_; }
      set {
        columnCount_ = value;
      }
    }

    /// <summary>Field number for the "row_count" field.</summary>
    public const int RowCountFieldNumber = 6;
    private int rowCount_;
    /// <summary>
    /// The maximum number of rows per sprite sheet. When the sprite sheet is full,
    /// a new sprite sheet is created. Valid range is [1, 10] and the default value
    /// is 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RowCount {
      get { return rowCount_; }
      set {
        rowCount_ = value;
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Duration interval_;
    /// <summary>
    /// Create sprites at regular intervals. Valid range is [1 second, 1 hour] and
    /// the default value is `10s`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 8;
    private int quality_;
    /// <summary>
    /// The quality of the generated sprite sheet. Enter a value between 1
    /// and 100, where 1 is the lowest quality and 100 is the highest quality.
    /// The default is 100. A high quality value corresponds to a low image data
    /// compression ratio.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpriteSheet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpriteSheet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Format != other.Format) return false;
      if (FilePrefix != other.FilePrefix) return false;
      if (SpriteWidthPixels != other.SpriteWidthPixels) return false;
      if (SpriteHeightPixels != other.SpriteHeightPixels) return false;
      if (ColumnCount != other.ColumnCount) return false;
      if (RowCount != other.RowCount) return false;
      if (!object.Equals(Interval, other.Interval)) return false;
      if (Quality != other.Quality) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Format.Length != 0) hash ^= Format.GetHashCode();
      if (FilePrefix.Length != 0) hash ^= FilePrefix.GetHashCode();
      if (SpriteWidthPixels != 0) hash ^= SpriteWidthPixels.GetHashCode();
      if (SpriteHeightPixels != 0) hash ^= SpriteHeightPixels.GetHashCode();
      if (ColumnCount != 0) hash ^= ColumnCount.GetHashCode();
      if (RowCount != 0) hash ^= RowCount.GetHashCode();
      if (interval_ != null) hash ^= Interval.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Format.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Format);
      }
      if (FilePrefix.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FilePrefix);
      }
      if (SpriteWidthPixels != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SpriteWidthPixels);
      }
      if (SpriteHeightPixels != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SpriteHeightPixels);
      }
      if (ColumnCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ColumnCount);
      }
      if (RowCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RowCount);
      }
      if (interval_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Interval);
      }
      if (Quality != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Quality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Format.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Format);
      }
      if (FilePrefix.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FilePrefix);
      }
      if (SpriteWidthPixels != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SpriteWidthPixels);
      }
      if (SpriteHeightPixels != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SpriteHeightPixels);
      }
      if (ColumnCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ColumnCount);
      }
      if (RowCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RowCount);
      }
      if (interval_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Interval);
      }
      if (Quality != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Quality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Format.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Format);
      }
      if (FilePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePrefix);
      }
      if (SpriteWidthPixels != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpriteWidthPixels);
      }
      if (SpriteHeightPixels != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpriteHeightPixels);
      }
      if (ColumnCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColumnCount);
      }
      if (RowCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowCount);
      }
      if (interval_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Interval);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quality);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpriteSheet other) {
      if (other == null) {
        return;
      }
      if (other.Format.Length != 0) {
        Format = other.Format;
      }
      if (other.FilePrefix.Length != 0) {
        FilePrefix = other.FilePrefix;
      }
      if (other.SpriteWidthPixels != 0) {
        SpriteWidthPixels = other.SpriteWidthPixels;
      }
      if (other.SpriteHeightPixels != 0) {
        SpriteHeightPixels = other.SpriteHeightPixels;
      }
      if (other.ColumnCount != 0) {
        ColumnCount = other.ColumnCount;
      }
      if (other.RowCount != 0) {
        RowCount = other.RowCount;
      }
      if (other.interval_ != null) {
        if (interval_ == null) {
          Interval = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Interval.MergeFrom(other.Interval);
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Format = input.ReadString();
            break;
          }
          case 18: {
            FilePrefix = input.ReadString();
            break;
          }
          case 24: {
            SpriteWidthPixels = input.ReadInt32();
            break;
          }
          case 32: {
            SpriteHeightPixels = input.ReadInt32();
            break;
          }
          case 40: {
            ColumnCount = input.ReadInt32();
            break;
          }
          case 48: {
            RowCount = input.ReadInt32();
            break;
          }
          case 58: {
            if (interval_ == null) {
              Interval = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Interval);
            break;
          }
          case 64: {
            Quality = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Format = input.ReadString();
            break;
          }
          case 18: {
            FilePrefix = input.ReadString();
            break;
          }
          case 24: {
            SpriteWidthPixels = input.ReadInt32();
            break;
          }
          case 32: {
            SpriteHeightPixels = input.ReadInt32();
            break;
          }
          case 40: {
            ColumnCount = input.ReadInt32();
            break;
          }
          case 48: {
            RowCount = input.ReadInt32();
            break;
          }
          case 58: {
            if (interval_ == null) {
              Interval = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Interval);
            break;
          }
          case 64: {
            Quality = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Preprocessing configurations.
  /// </summary>
  public sealed partial class PreprocessingConfig : pb::IMessage<PreprocessingConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PreprocessingConfig> _parser = new pb::MessageParser<PreprocessingConfig>(() => new PreprocessingConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PreprocessingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Video.Livestream.V1.OutputsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreprocessingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreprocessingConfig(PreprocessingConfig other) : this() {
      crop_ = other.crop_ != null ? other.crop_.Clone() : null;
      pad_ = other.pad_ != null ? other.pad_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreprocessingConfig Clone() {
      return new PreprocessingConfig(this);
    }

    /// <summary>Field number for the "crop" field.</summary>
    public const int CropFieldNumber = 2;
    private global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Crop crop_;
    /// <summary>
    /// Specify the video cropping configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Crop Crop {
      get { return crop_; }
      set {
        crop_ = value;
      }
    }

    /// <summary>Field number for the "pad" field.</summary>
    public const int PadFieldNumber = 3;
    private global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Pad pad_;
    /// <summary>
    /// Specify the video pad filter configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Pad Pad {
      get { return pad_; }
      set {
        pad_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PreprocessingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PreprocessingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Crop, other.Crop)) return false;
      if (!object.Equals(Pad, other.Pad)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (crop_ != null) hash ^= Crop.GetHashCode();
      if (pad_ != null) hash ^= Pad.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (crop_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Crop);
      }
      if (pad_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pad);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (crop_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Crop);
      }
      if (pad_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pad);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (crop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Crop);
      }
      if (pad_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pad);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PreprocessingConfig other) {
      if (other == null) {
        return;
      }
      if (other.crop_ != null) {
        if (crop_ == null) {
          Crop = new global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Crop();
        }
        Crop.MergeFrom(other.Crop);
      }
      if (other.pad_ != null) {
        if (pad_ == null) {
          Pad = new global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Pad();
        }
        Pad.MergeFrom(other.Pad);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (crop_ == null) {
              Crop = new global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Crop();
            }
            input.ReadMessage(Crop);
            break;
          }
          case 26: {
            if (pad_ == null) {
              Pad = new global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Pad();
            }
            input.ReadMessage(Pad);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (crop_ == null) {
              Crop = new global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Crop();
            }
            input.ReadMessage(Crop);
            break;
          }
          case 26: {
            if (pad_ == null) {
              Pad = new global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Types.Pad();
            }
            input.ReadMessage(Pad);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PreprocessingConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Video cropping configuration for the input video. The cropped input video
      /// is scaled to match the output resolution.
      /// </summary>
      public sealed partial class Crop : pb::IMessage<Crop>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Crop> _parser = new pb::MessageParser<Crop>(() => new Crop());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Crop> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Crop() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Crop(Crop other) : this() {
          topPixels_ = other.topPixels_;
          bottomPixels_ = other.bottomPixels_;
          leftPixels_ = other.leftPixels_;
          rightPixels_ = other.rightPixels_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Crop Clone() {
          return new Crop(this);
        }

        /// <summary>Field number for the "top_pixels" field.</summary>
        public const int TopPixelsFieldNumber = 1;
        private int topPixels_;
        /// <summary>
        /// The number of pixels to crop from the top. The default is 0.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int TopPixels {
          get { return topPixels_; }
          set {
            topPixels_ = value;
          }
        }

        /// <summary>Field number for the "bottom_pixels" field.</summary>
        public const int BottomPixelsFieldNumber = 2;
        private int bottomPixels_;
        /// <summary>
        /// The number of pixels to crop from the bottom. The default is 0.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int BottomPixels {
          get { return bottomPixels_; }
          set {
            bottomPixels_ = value;
          }
        }

        /// <summary>Field number for the "left_pixels" field.</summary>
        public const int LeftPixelsFieldNumber = 3;
        private int leftPixels_;
        /// <summary>
        /// The number of pixels to crop from the left. The default is 0.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LeftPixels {
          get { return leftPixels_; }
          set {
            leftPixels_ = value;
          }
        }

        /// <summary>Field number for the "right_pixels" field.</summary>
        public const int RightPixelsFieldNumber = 4;
        private int rightPixels_;
        /// <summary>
        /// The number of pixels to crop from the right. The default is 0.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int RightPixels {
          get { return rightPixels_; }
          set {
            rightPixels_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Crop);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Crop other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TopPixels != other.TopPixels) return false;
          if (BottomPixels != other.BottomPixels) return false;
          if (LeftPixels != other.LeftPixels) return false;
          if (RightPixels != other.RightPixels) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (TopPixels != 0) hash ^= TopPixels.GetHashCode();
          if (BottomPixels != 0) hash ^= BottomPixels.GetHashCode();
          if (LeftPixels != 0) hash ^= LeftPixels.GetHashCode();
          if (RightPixels != 0) hash ^= RightPixels.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TopPixels != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(TopPixels);
          }
          if (BottomPixels != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(BottomPixels);
          }
          if (LeftPixels != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(LeftPixels);
          }
          if (RightPixels != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(RightPixels);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TopPixels != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(TopPixels);
          }
          if (BottomPixels != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(BottomPixels);
          }
          if (LeftPixels != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(LeftPixels);
          }
          if (RightPixels != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(RightPixels);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (TopPixels != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(TopPixels);
          }
          if (BottomPixels != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(BottomPixels);
          }
          if (LeftPixels != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftPixels);
          }
          if (RightPixels != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(RightPixels);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Crop other) {
          if (other == null) {
            return;
          }
          if (other.TopPixels != 0) {
            TopPixels = other.TopPixels;
          }
          if (other.BottomPixels != 0) {
            BottomPixels = other.BottomPixels;
          }
          if (other.LeftPixels != 0) {
            LeftPixels = other.LeftPixels;
          }
          if (other.RightPixels != 0) {
            RightPixels = other.RightPixels;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TopPixels = input.ReadInt32();
                break;
              }
              case 16: {
                BottomPixels = input.ReadInt32();
                break;
              }
              case 24: {
                LeftPixels = input.ReadInt32();
                break;
              }
              case 32: {
                RightPixels = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                TopPixels = input.ReadInt32();
                break;
              }
              case 16: {
                BottomPixels = input.ReadInt32();
                break;
              }
              case 24: {
                LeftPixels = input.ReadInt32();
                break;
              }
              case 32: {
                RightPixels = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Pad filter configuration for the input video. The padded input video
      /// is scaled after padding with black to match the output resolution.
      /// </summary>
      public sealed partial class Pad : pb::IMessage<Pad>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Pad> _parser = new pb::MessageParser<Pad>(() => new Pad());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Pad> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Video.Livestream.V1.PreprocessingConfig.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Pad() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Pad(Pad other) : this() {
          topPixels_ = other.topPixels_;
          bottomPixels_ = other.bottomPixels_;
          leftPixels_ = other.leftPixels_;
          rightPixels_ = other.rightPixels_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Pad Clone() {
          return new Pad(this);
        }

        /// <summary>Field number for the "top_pixels" field.</summary>
        public const int TopPixelsFieldNumber = 1;
        private int topPixels_;
        /// <summary>
        /// The number of pixels to add to the top. The default is 0.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int TopPixels {
          get { return topPixels_; }
          set {
            topPixels_ = value;
          }
        }

        /// <summary>Field number for the "bottom_pixels" field.</summary>
        public const int BottomPixelsFieldNumber = 2;
        private int bottomPixels_;
        /// <summary>
        /// The number of pixels to add to the bottom. The default is 0.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int BottomPixels {
          get { return bottomPixels_; }
          set {
            bottomPixels_ = value;
          }
        }

        /// <summary>Field number for the "left_pixels" field.</summary>
        public const int LeftPixelsFieldNumber = 3;
        private int leftPixels_;
        /// <summary>
        /// The number of pixels to add to the left. The default is 0.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int LeftPixels {
          get { return leftPixels_; }
          set {
            leftPixels_ = value;
          }
        }

        /// <summary>Field number for the "right_pixels" field.</summary>
        public const int RightPixelsFieldNumber = 4;
        private int rightPixels_;
        /// <summary>
        /// The number of pixels to add to the right. The default is 0.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int RightPixels {
          get { return rightPixels_; }
          set {
            rightPixels_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Pad);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Pad other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TopPixels != other.TopPixels) return false;
          if (BottomPixels != other.BottomPixels) return false;
          if (LeftPixels != other.LeftPixels) return false;
          if (RightPixels != other.RightPixels) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (TopPixels != 0) hash ^= TopPixels.GetHashCode();
          if (BottomPixels != 0) hash ^= BottomPixels.GetHashCode();
          if (LeftPixels != 0) hash ^= LeftPixels.GetHashCode();
          if (RightPixels != 0) hash ^= RightPixels.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TopPixels != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(TopPixels);
          }
          if (BottomPixels != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(BottomPixels);
          }
          if (LeftPixels != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(LeftPixels);
          }
          if (RightPixels != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(RightPixels);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TopPixels != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(TopPixels);
          }
          if (BottomPixels != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(BottomPixels);
          }
          if (LeftPixels != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(LeftPixels);
          }
          if (RightPixels != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(RightPixels);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (TopPixels != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(TopPixels);
          }
          if (BottomPixels != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(BottomPixels);
          }
          if (LeftPixels != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftPixels);
          }
          if (RightPixels != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(RightPixels);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Pad other) {
          if (other == null) {
            return;
          }
          if (other.TopPixels != 0) {
            TopPixels = other.TopPixels;
          }
          if (other.BottomPixels != 0) {
            BottomPixels = other.BottomPixels;
          }
          if (other.LeftPixels != 0) {
            LeftPixels = other.LeftPixels;
          }
          if (other.RightPixels != 0) {
            RightPixels = other.RightPixels;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TopPixels = input.ReadInt32();
                break;
              }
              case 16: {
                BottomPixels = input.ReadInt32();
                break;
              }
              case 24: {
                LeftPixels = input.ReadInt32();
                break;
              }
              case 32: {
                RightPixels = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                TopPixels = input.ReadInt32();
                break;
              }
              case 16: {
                BottomPixels = input.ReadInt32();
                break;
              }
              case 24: {
                LeftPixels = input.ReadInt32();
                break;
              }
              case 32: {
                RightPixels = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Video stream resource.
  /// </summary>
  public sealed partial class VideoStream : pb::IMessage<VideoStream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VideoStream> _parser = new pb::MessageParser<VideoStream>(() => new VideoStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VideoStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Video.Livestream.V1.OutputsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VideoStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VideoStream(VideoStream other) : this() {
      switch (other.CodecSettingsCase) {
        case CodecSettingsOneofCase.H264:
          H264 = other.H264.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VideoStream Clone() {
      return new VideoStream(this);
    }

    /// <summary>Field number for the "h264" field.</summary>
    public const int H264FieldNumber = 20;
    /// <summary>
    /// H264 codec settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Video.Livestream.V1.VideoStream.Types.H264CodecSettings H264 {
      get { return codecSettingsCase_ == CodecSettingsOneofCase.H264 ? (global::Google.Cloud.Video.Livestream.V1.VideoStream.Types.H264CodecSettings) codecSettings_ : null; }
      set {
        codecSettings_ = value;
        codecSettingsCase_ = value == null ? CodecSettingsOneofCase.None : CodecSettingsOneofCase.H264;
      }
    }

    private object codecSettings_;
    /// <summary>Enum of possible cases for the "codec_settings" oneof.</summary>
    public enum CodecSettingsOneofCase {
      None = 0,
      H264 = 20,
    }
    private CodecSettingsOneofCase codecSettingsCase_ = CodecSettingsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CodecSettingsOneofCase CodecSettingsCase {
      get { return codecSettingsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCodecSettings() {
      codecSettingsCase_ = CodecSettingsOneofCase.None;
      codecSettings_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VideoStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VideoStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(H264, other.H264)) return false;
      if (CodecSettingsCase != other.CodecSettingsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (codecSettingsCase_ == CodecSettingsOneofCase.H264) hash ^= H264.GetHashCode();
      hash ^= (int) codecSettingsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (codecSettingsCase_ == CodecSettingsOneofCase.H264) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(H264);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (codecSettingsCase_ == CodecSettingsOneofCase.H264) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(H264);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (codecSettingsCase_ == CodecSettingsOneofCase.H264) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(H264);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VideoStream other) {
      if (other == null) {
        return;
      }
      switch (other.CodecSettingsCase) {
        case CodecSettingsOneofCase.H264:
          if (H264 == null) {
            H264 = new global::Google.Cloud.Video.Livestream.V1.VideoStream.Types.H264CodecSettings();
          }
          H264.MergeFrom(other.H264);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 162: {
            global::Google.Cloud.Video.Livestream.V1.VideoStream.Types.H264CodecSettings subBuilder = new global::Google.Cloud.Video.Livestream.V1.VideoStream.Types.H264CodecSettings();
            if (codecSettingsCase_ == CodecSettingsOneofCase.H264) {
              subBuilder.MergeFrom(H264);
            }
            input.ReadMessage(subBuilder);
            H264 = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 162: {
            global::Google.Cloud.Video.Livestream.V1.VideoStream.Types.H264CodecSettings subBuilder = new global::Google.Cloud.Video.Livestream.V1.VideoStream.Types.H264CodecSettings();
            if (codecSettingsCase_ == CodecSettingsOneofCase.H264) {
              subBuilder.MergeFrom(H264);
            }
            input.ReadMessage(subBuilder);
            H264 = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the VideoStream message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// H264 codec settings.
      /// </summary>
      public sealed partial class H264CodecSettings : pb::IMessage<H264CodecSettings>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<H264CodecSettings> _parser = new pb::MessageParser<H264CodecSettings>(() => new H264CodecSettings());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<H264CodecSettings> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Video.Livestream.V1.VideoStream.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public H264CodecSettings() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public H264CodecSettings(H264CodecSettings other) : this() {
          widthPixels_ = other.widthPixels_;
          heightPixels_ = other.heightPixels_;
          frameRate_ = other.frameRate_;
          bitrateBps_ = other.bitrateBps_;
          allowOpenGop_ = other.allowOpenGop_;
          vbvSizeBits_ = other.vbvSizeBits_;
          vbvFullnessBits_ = other.vbvFullnessBits_;
          entropyCoder_ = other.entropyCoder_;
          bPyramid_ = other.bPyramid_;
          bFrameCount_ = other.bFrameCount_;
          aqStrength_ = other.aqStrength_;
          profile_ = other.profile_;
          tune_ = other.tune_;
          switch (other.GopModeCase) {
            case GopModeOneofCase.GopFrameCount:
              GopFrameCount = other.GopFrameCount;
              break;
            case GopModeOneofCase.GopDuration:
              GopDuration = other.GopDuration.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public H264CodecSettings Clone() {
          return new H264CodecSettings(this);
        }

        /// <summary>Field number for the "width_pixels" field.</summary>
        public const int WidthPixelsFieldNumber = 1;
        private int widthPixels_;
        /// <summary>
        /// Required. The width of the video in pixels. Must be an even integer.
        /// Valid range is [320, 1920].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int WidthPixels {
          get { return widthPixels_; }
          set {
            widthPixels_ = value;
          }
        }

        /// <summary>Field number for the "height_pixels" field.</summary>
        public const int HeightPixelsFieldNumber = 2;
        private int heightPixels_;
        /// <summary>
        /// Required. The height of the video in pixels. Must be an even integer.
        /// Valid range is [180, 1080].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int HeightPixels {
          get { return heightPixels_; }
          set {
            heightPixels_ = value;
          }
        }

        /// <summary>Field number for the "frame_rate" field.</summary>
        public const int FrameRateFieldNumber = 3;
        private double frameRate_;
        /// <summary>
        /// Required. The target video frame rate in frames per second (FPS). Must be less
        /// than or equal to 120. Will default to the input frame rate if larger
        /// than the input frame rate. The API will generate an output FPS that is
        /// divisible by the input FPS, and smaller or equal to the target FPS. See
        /// [Calculating frame
        /// rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for
        /// more information.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double FrameRate {
          get { return frameRate_; }
          set {
            frameRate_ = value;
          }
        }

        /// <summary>Field number for the "bitrate_bps" field.</summary>
        public const int BitrateBpsFieldNumber = 4;
        private int bitrateBps_;
        /// <summary>
        /// Required. The video bitrate in bits per second. Must be between 10,000 and
        /// 80,000,000.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int BitrateBps {
          get { return bitrateBps_; }
          set {
            bitrateBps_ = value;
          }
        }

        /// <summary>Field number for the "allow_open_gop" field.</summary>
        public const int AllowOpenGopFieldNumber = 6;
        private bool allowOpenGop_;
        /// <summary>
        /// Specifies whether an open Group of Pictures (GOP) structure should be
        /// allowed or not. The default is `false`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AllowOpenGop {
          get { return allowOpenGop_; }
          set {
            allowOpenGop_ = value;
          }
        }

        /// <summary>Field number for the "gop_frame_count" field.</summary>
        public const int GopFrameCountFieldNumber = 7;
        /// <summary>
        /// Select the GOP size based on the specified frame count.
        /// If GOP frame count is set instead of GOP duration, GOP duration will be
        /// calculated by `gopFrameCount`/`frameRate`. The calculated GOP duration
        /// must satisfy the limitations on `gopDuration` as well.
        /// Valid range is [60, 600].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int GopFrameCount {
          get { return gopModeCase_ == GopModeOneofCase.GopFrameCount ? (int) gopMode_ : 0; }
          set {
            gopMode_ = value;
            gopModeCase_ = GopModeOneofCase.GopFrameCount;
          }
        }

        /// <summary>Field number for the "gop_duration" field.</summary>
        public const int GopDurationFieldNumber = 8;
        /// <summary>
        /// Select the GOP size based on the specified duration. The default is
        /// `2s`. Note that `gopDuration` must be less than or equal to
        /// [segment_duration][google.cloud.video.livestream.v1.SegmentSettings.segment_duration], and
        /// [segment_duration][google.cloud.video.livestream.v1.SegmentSettings.segment_duration] must be divisible
        /// by `gopDuration`. Valid range is [2s, 20s].
        ///
        /// All video streams in the same channel must have the same GOP size.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Duration GopDuration {
          get { return gopModeCase_ == GopModeOneofCase.GopDuration ? (global::Google.Protobuf.WellKnownTypes.Duration) gopMode_ : null; }
          set {
            gopMode_ = value;
            gopModeCase_ = value == null ? GopModeOneofCase.None : GopModeOneofCase.GopDuration;
          }
        }

        /// <summary>Field number for the "vbv_size_bits" field.</summary>
        public const int VbvSizeBitsFieldNumber = 9;
        private int vbvSizeBits_;
        /// <summary>
        /// Size of the Video Buffering Verifier (VBV) buffer in bits. Must be
        /// greater than zero. The default is equal to [bitrate_bps][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings.bitrate_bps].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int VbvSizeBits {
          get { return vbvSizeBits_; }
          set {
            vbvSizeBits_ = value;
          }
        }

        /// <summary>Field number for the "vbv_fullness_bits" field.</summary>
        public const int VbvFullnessBitsFieldNumber = 10;
        private int vbvFullnessBits_;
        /// <summary>
        /// Initial fullness of the Video Buffering Verifier (VBV) buffer in bits.
        /// Must be greater than zero. The default is equal to 90% of
        /// [vbv_size_bits][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings.vbv_size_bits].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int VbvFullnessBits {
          get { return vbvFullnessBits_; }
          set {
            vbvFullnessBits_ = value;
          }
        }

        /// <summary>Field number for the "entropy_coder" field.</summary>
        public const int EntropyCoderFieldNumber = 11;
        private string entropyCoder_ = "";
        /// <summary>
        /// The entropy coder to use. The default is `cabac`.
        ///
        /// Supported entropy coders:
        ///
        /// - `cavlc`
        /// - `cabac`
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string EntropyCoder {
          get { return entropyCoder_; }
          set {
            entropyCoder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "b_pyramid" field.</summary>
        public const int BPyramidFieldNumber = 12;
        private bool bPyramid_;
        /// <summary>
        /// Allow B-pyramid for reference frame selection. This may not be supported
        /// on all decoders. The default is `false`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool BPyramid {
          get { return bPyramid_; }
          set {
            bPyramid_ = value;
          }
        }

        /// <summary>Field number for the "b_frame_count" field.</summary>
        public const int BFrameCountFieldNumber = 13;
        private int bFrameCount_;
        /// <summary>
        /// The number of consecutive B-frames. Must be greater than or equal to
        /// zero. Must be less than [gop_frame_count][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings.gop_frame_count] if set. The default
        /// is 0.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int BFrameCount {
          get { return bFrameCount_; }
          set {
            bFrameCount_ = value;
          }
        }

        /// <summary>Field number for the "aq_strength" field.</summary>
        public const int AqStrengthFieldNumber = 14;
        private double aqStrength_;
        /// <summary>
        /// Specify the intensity of the adaptive quantizer (AQ). Must be between 0
        /// and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A
        /// higher value equals a lower bitrate but smoother image. The default is 0.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double AqStrength {
          get { return aqStrength_; }
          set {
            aqStrength_ = value;
          }
        }

        /// <summary>Field number for the "profile" field.</summary>
        public const int ProfileFieldNumber = 15;
        private string profile_ = "";
        /// <summary>
        /// Enforces the specified codec profile. The following profiles are
        /// supported:
        ///
        /// *   `baseline`
        /// *   `main` (default)
        /// *   `high`
        ///
        /// The available options are [FFmpeg-compatible Profile
        /// Options](https://trac.ffmpeg.org/wiki/Encode/H.264#Profile).
        /// Note that certain values for this field may cause the
        /// transcoder to override other fields you set in the [H264CodecSettings][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings]
        /// message.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Profile {
          get { return profile_; }
          set {
            profile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tune" field.</summary>
        public const int TuneFieldNumber = 16;
        private string tune_ = "";
        /// <summary>
        /// Enforces the specified codec tune. The available options are
        /// [FFmpeg-compatible Encode
        /// Options](https://trac.ffmpeg.org/wiki/Encode/H.264#Tune)
        /// Note that certain values for this field may cause the transcoder to
        /// override other fields you set in the [H264CodecSettings][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings] message.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Tune {
          get { return tune_; }
          set {
            tune_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        private object gopMode_;
        /// <summary>Enum of possible cases for the "gop_mode" oneof.</summary>
        public enum GopModeOneofCase {
          None = 0,
          GopFrameCount = 7,
          GopDuration = 8,
        }
        private GopModeOneofCase gopModeCase_ = GopModeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GopModeOneofCase GopModeCase {
          get { return gopModeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGopMode() {
          gopModeCase_ = GopModeOneofCase.None;
          gopMode_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as H264CodecSettings);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(H264CodecSettings other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (WidthPixels != other.WidthPixels) return false;
          if (HeightPixels != other.HeightPixels) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FrameRate, other.FrameRate)) return false;
          if (BitrateBps != other.BitrateBps) return false;
          if (AllowOpenGop != other.AllowOpenGop) return false;
          if (GopFrameCount != other.GopFrameCount) return false;
          if (!object.Equals(GopDuration, other.GopDuration)) return false;
          if (VbvSizeBits != other.VbvSizeBits) return false;
          if (VbvFullnessBits != other.VbvFullnessBits) return false;
          if (EntropyCoder != other.EntropyCoder) return false;
          if (BPyramid != other.BPyramid) return false;
          if (BFrameCount != other.BFrameCount) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AqStrength, other.AqStrength)) return false;
          if (Profile != other.Profile) return false;
          if (Tune != other.Tune) return false;
          if (GopModeCase != other.GopModeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (WidthPixels != 0) hash ^= WidthPixels.GetHashCode();
          if (HeightPixels != 0) hash ^= HeightPixels.GetHashCode();
          if (FrameRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FrameRate);
          if (BitrateBps != 0) hash ^= BitrateBps.GetHashCode();
          if (AllowOpenGop != false) hash ^= AllowOpenGop.GetHashCode();
          if (gopModeCase_ == GopModeOneofCase.GopFrameCount) hash ^= GopFrameCount.GetHashCode();
          if (gopModeCase_ == GopModeOneofCase.GopDuration) hash ^= GopDuration.GetHashCode();
          if (VbvSizeBits != 0) hash ^= VbvSizeBits.GetHashCode();
          if (VbvFullnessBits != 0) hash ^= VbvFullnessBits.GetHashCode();
          if (EntropyCoder.Length != 0) hash ^= EntropyCoder.GetHashCode();
          if (BPyramid != false) hash ^= BPyramid.GetHashCode();
          if (BFrameCount != 0) hash ^= BFrameCount.GetHashCode();
          if (AqStrength != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AqStrength);
          if (Profile.Length != 0) hash ^= Profile.GetHashCode();
          if (Tune.Length != 0) hash ^= Tune.GetHashCode();
          hash ^= (int) gopModeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (WidthPixels != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(WidthPixels);
          }
          if (HeightPixels != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(HeightPixels);
          }
          if (FrameRate != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(FrameRate);
          }
          if (BitrateBps != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(BitrateBps);
          }
          if (AllowOpenGop != false) {
            output.WriteRawTag(48);
            output.WriteBool(AllowOpenGop);
          }
          if (gopModeCase_ == GopModeOneofCase.GopFrameCount) {
            output.WriteRawTag(56);
            output.WriteInt32(GopFrameCount);
          }
          if (gopModeCase_ == GopModeOneofCase.GopDuration) {
            output.WriteRawTag(66);
            output.WriteMessage(GopDuration);
          }
          if (VbvSizeBits != 0) {
            output.WriteRawTag(72);
            output.WriteInt32(VbvSizeBits);
          }
          if (VbvFullnessBits != 0) {
            output.WriteRawTag(80);
            output.WriteInt32(VbvFullnessBits);
          }
          if (EntropyCoder.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(EntropyCoder);
          }
          if (BPyramid != false) {
            output.WriteRawTag(96);
            output.WriteBool(BPyramid);
          }
          if (BFrameCount != 0) {
            output.WriteRawTag(104);
            output.WriteInt32(BFrameCount);
          }
          if (AqStrength != 0D) {
            output.WriteRawTag(113);
            output.WriteDouble(AqStrength);
          }
          if (Profile.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(Profile);
          }
          if (Tune.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(Tune);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (WidthPixels != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(WidthPixels);
          }
          if (HeightPixels != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(HeightPixels);
          }
          if (FrameRate != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(FrameRate);
          }
          if (BitrateBps != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(BitrateBps);
          }
          if (AllowOpenGop != false) {
            output.WriteRawTag(48);
            output.WriteBool(AllowOpenGop);
          }
          if (gopModeCase_ == GopModeOneofCase.GopFrameCount) {
            output.WriteRawTag(56);
            output.WriteInt32(GopFrameCount);
          }
          if (gopModeCase_ == GopModeOneofCase.GopDuration) {
            output.WriteRawTag(66);
            output.WriteMessage(GopDuration);
          }
          if (VbvSizeBits != 0) {
            output.WriteRawTag(72);
            output.WriteInt32(VbvSizeBits);
          }
          if (VbvFullnessBits != 0) {
            output.WriteRawTag(80);
            output.WriteInt32(VbvFullnessBits);
          }
          if (EntropyCoder.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(EntropyCoder);
          }
          if (BPyramid != false) {
            output.WriteRawTag(96);
            output.WriteBool(BPyramid);
          }
          if (BFrameCount != 0) {
            output.WriteRawTag(104);
            output.WriteInt32(BFrameCount);
          }
          if (AqStrength != 0D) {
            output.WriteRawTag(113);
            output.WriteDouble(AqStrength);
          }
          if (Profile.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(Profile);
          }
          if (Tune.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(Tune);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (WidthPixels != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(WidthPixels);
          }
          if (HeightPixels != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeightPixels);
          }
          if (FrameRate != 0D) {
            size += 1 + 8;
          }
          if (BitrateBps != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(BitrateBps);
          }
          if (AllowOpenGop != false) {
            size += 1 + 1;
          }
          if (gopModeCase_ == GopModeOneofCase.GopFrameCount) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(GopFrameCount);
          }
          if (gopModeCase_ == GopModeOneofCase.GopDuration) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GopDuration);
          }
          if (VbvSizeBits != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(VbvSizeBits);
          }
          if (VbvFullnessBits != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(VbvFullnessBits);
          }
          if (EntropyCoder.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(EntropyCoder);
          }
          if (BPyramid != false) {
            size += 1 + 1;
          }
          if (BFrameCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(BFrameCount);
          }
          if (AqStrength != 0D) {
            size += 1 + 8;
          }
          if (Profile.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Profile);
          }
          if (Tune.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(Tune);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(H264CodecSettings other) {
          if (other == null) {
            return;
          }
          if (other.WidthPixels != 0) {
            WidthPixels = other.WidthPixels;
          }
          if (other.HeightPixels != 0) {
            HeightPixels = other.HeightPixels;
          }
          if (other.FrameRate != 0D) {
            FrameRate = other.FrameRate;
          }
          if (other.BitrateBps != 0) {
            BitrateBps = other.BitrateBps;
          }
          if (other.AllowOpenGop != false) {
            AllowOpenGop = other.AllowOpenGop;
          }
          if (other.VbvSizeBits != 0) {
            VbvSizeBits = other.VbvSizeBits;
          }
          if (other.VbvFullnessBits != 0) {
            VbvFullnessBits = other.VbvFullnessBits;
          }
          if (other.EntropyCoder.Length != 0) {
            EntropyCoder = other.EntropyCoder;
          }
          if (other.BPyramid != false) {
            BPyramid = other.BPyramid;
          }
          if (other.BFrameCount != 0) {
            BFrameCount = other.BFrameCount;
          }
          if (other.AqStrength != 0D) {
            AqStrength = other.AqStrength;
          }
          if (other.Profile.Length != 0) {
            Profile = other.Profile;
          }
          if (other.Tune.Length != 0) {
            Tune = other.Tune;
          }
          switch (other.GopModeCase) {
            case GopModeOneofCase.GopFrameCount:
              GopFrameCount = other.GopFrameCount;
              break;
            case GopModeOneofCase.GopDuration:
              if (GopDuration == null) {
                GopDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
              }
              GopDuration.MergeFrom(other.GopDuration);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                WidthPixels = input.ReadInt32();
                break;
              }
              case 16: {
                HeightPixels = input.ReadInt32();
                break;
              }
              case 25: {
                FrameRate = input.ReadDouble();
                break;
              }
              case 32: {
                BitrateBps = input.ReadInt32();
                break;
              }
              case 48: {
                AllowOpenGop = input.ReadBool();
                break;
              }
              case 56: {
                GopFrameCount = input.ReadInt32();
                break;
              }
              case 66: {
                global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
                if (gopModeCase_ == GopModeOneofCase.GopDuration) {
                  subBuilder.MergeFrom(GopDuration);
                }
                input.ReadMessage(subBuilder);
                GopDuration = subBuilder;
                break;
              }
              case 72: {
                VbvSizeBits = input.ReadInt32();
                break;
              }
              case 80: {
                VbvFullnessBits = input.ReadInt32();
                break;
              }
              case 90: {
                EntropyCoder = input.ReadString();
                break;
              }
              case 96: {
                BPyramid = input.ReadBool();
                break;
              }
              case 104: {
                BFrameCount = input.ReadInt32();
                break;
              }
              case 113: {
                AqStrength = input.ReadDouble();
                break;
              }
              case 122: {
                Profile = input.ReadString();
                break;
              }
              case 130: {
                Tune = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                WidthPixels = input.ReadInt32();
                break;
              }
              case 16: {
                HeightPixels = input.ReadInt32();
                break;
              }
              case 25: {
                FrameRate = input.ReadDouble();
                break;
              }
              case 32: {
                BitrateBps = input.ReadInt32();
                break;
              }
              case 48: {
                AllowOpenGop = input.ReadBool();
                break;
              }
              case 56: {
                GopFrameCount = input.ReadInt32();
                break;
              }
              case 66: {
                global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
                if (gopModeCase_ == GopModeOneofCase.GopDuration) {
                  subBuilder.MergeFrom(GopDuration);
                }
                input.ReadMessage(subBuilder);
                GopDuration = subBuilder;
                break;
              }
              case 72: {
                VbvSizeBits = input.ReadInt32();
                break;
              }
              case 80: {
                VbvFullnessBits = input.ReadInt32();
                break;
              }
              case 90: {
                EntropyCoder = input.ReadString();
                break;
              }
              case 96: {
                BPyramid = input.ReadBool();
                break;
              }
              case 104: {
                BFrameCount = input.ReadInt32();
                break;
              }
              case 113: {
                AqStrength = input.ReadDouble();
                break;
              }
              case 122: {
                Profile = input.ReadString();
                break;
              }
              case 130: {
                Tune = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Audio stream resource.
  /// </summary>
  public sealed partial class AudioStream : pb::IMessage<AudioStream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioStream> _parser = new pb::MessageParser<AudioStream>(() => new AudioStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AudioStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Video.Livestream.V1.OutputsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioStream(AudioStream other) : this() {
      transmux_ = other.transmux_;
      codec_ = other.codec_;
      bitrateBps_ = other.bitrateBps_;
      channelCount_ = other.channelCount_;
      channelLayout_ = other.channelLayout_.Clone();
      mapping_ = other.mapping_.Clone();
      sampleRateHertz_ = other.sampleRateHertz_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioStream Clone() {
      return new AudioStream(this);
    }

    /// <summary>Field number for the "transmux" field.</summary>
    public const int TransmuxFieldNumber = 8;
    private bool transmux_;
    /// <summary>
    /// Specifies whether pass through (transmuxing) is enabled or not.
    /// If set to `true`, the rest of the settings, other than `mapping`, will be
    /// ignored. The default is `false`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Transmux {
      get { return transmux_; }
      set {
        transmux_ = value;
      }
    }

    /// <summary>Field number for the "codec" field.</summary>
    public const int CodecFieldNumber = 1;
    private string codec_ = "";
    /// <summary>
    /// The codec for this audio stream. The default is `aac`.
    ///
    /// Supported audio codecs:
    ///
    /// - `aac`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Codec {
      get { return codec_; }
      set {
        codec_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bitrate_bps" field.</summary>
    public const int BitrateBpsFieldNumber = 2;
    private int bitrateBps_;
    /// <summary>
    /// Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BitrateBps {
      get { return bitrateBps_; }
      set {
        bitrateBps_ = value;
      }
    }

    /// <summary>Field number for the "channel_count" field.</summary>
    public const int ChannelCountFieldNumber = 3;
    private int channelCount_;
    /// <summary>
    /// Number of audio channels. Must be between 1 and 6. The default is 2.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChannelCount {
      get { return channelCount_; }
      set {
        channelCount_ = value;
      }
    }

    /// <summary>Field number for the "channel_layout" field.</summary>
    public const int ChannelLayoutFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_channelLayout_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> channelLayout_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of channel names specifying layout of the audio channels.
    /// This only affects the metadata embedded in the container headers, if
    /// supported by the specified format. The default is `[fl, fr]`.
    ///
    /// Supported channel names:
    ///
    /// - `fl` - Front left channel
    /// - `fr` - Front right channel
    /// - `sl` - Side left channel
    /// - `sr` - Side right channel
    /// - `fc` - Front center channel
    /// - `lfe` - Low frequency
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ChannelLayout {
      get { return channelLayout_; }
    }

    /// <summary>Field number for the "mapping" field.</summary>
    public const int MappingFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.Video.Livestream.V1.AudioStream.Types.AudioMapping> _repeated_mapping_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Video.Livestream.V1.AudioStream.Types.AudioMapping.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Video.Livestream.V1.AudioStream.Types.AudioMapping> mapping_ = new pbc::RepeatedField<global::Google.Cloud.Video.Livestream.V1.AudioStream.Types.AudioMapping>();
    /// <summary>
    /// The mapping for the input streams and audio channels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Video.Livestream.V1.AudioStream.Types.AudioMapping> Mapping {
      get { return mapping_; }
    }

    /// <summary>Field number for the "sample_rate_hertz" field.</summary>
    public const int SampleRateHertzFieldNumber = 6;
    private int sampleRateHertz_;
    /// <summary>
    /// The audio sample rate in Hertz. The default is 48000 Hertz.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SampleRateHertz {
      get { return sampleRateHertz_; }
      set {
        sampleRateHertz_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AudioStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AudioStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Transmux != other.Transmux) return false;
      if (Codec != other.Codec) return false;
      if (BitrateBps != other.BitrateBps) return false;
      if (ChannelCount != other.ChannelCount) return false;
      if(!channelLayout_.Equals(other.channelLayout_)) return false;
      if(!mapping_.Equals(other.mapping_)) return false;
      if (SampleRateHertz != other.SampleRateHertz) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Transmux != false) hash ^= Transmux.GetHashCode();
      if (Codec.Length != 0) hash ^= Codec.GetHashCode();
      if (BitrateBps != 0) hash ^= BitrateBps.GetHashCode();
      if (ChannelCount != 0) hash ^= ChannelCount.GetHashCode();
      hash ^= channelLayout_.GetHashCode();
      hash ^= mapping_.GetHashCode();
      if (SampleRateHertz != 0) hash ^= SampleRateHertz.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Codec.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Codec);
      }
      if (BitrateBps != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BitrateBps);
      }
      if (ChannelCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChannelCount);
      }
      channelLayout_.WriteTo(output, _repeated_channelLayout_codec);
      mapping_.WriteTo(output, _repeated_mapping_codec);
      if (SampleRateHertz != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SampleRateHertz);
      }
      if (Transmux != false) {
        output.WriteRawTag(64);
        output.WriteBool(Transmux);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Codec.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Codec);
      }
      if (BitrateBps != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BitrateBps);
      }
      if (ChannelCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChannelCount);
      }
      channelLayout_.WriteTo(ref output, _repeated_channelLayout_codec);
      mapping_.WriteTo(ref output, _repeated_mapping_codec);
      if (SampleRateHertz != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SampleRateHertz);
      }
      if (Transmux != false) {
        output.WriteRawTag(64);
        output.WriteBool(Transmux);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Transmux != false) {
        size += 1 + 1;
      }
      if (Codec.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Codec);
      }
      if (BitrateBps != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BitrateBps);
      }
      if (ChannelCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelCount);
      }
      size += channelLayout_.CalculateSize(_repeated_channelLayout_codec);
      size += mapping_.CalculateSize(_repeated_mapping_codec);
      if (SampleRateHertz != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SampleRateHertz);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AudioStream other) {
      if (other == null) {
        return;
      }
      if (other.Transmux != false) {
        Transmux = other.Transmux;
      }
      if (other.Codec.Length != 0) {
        Codec = other.Codec;
      }
      if (other.BitrateBps != 0) {
        BitrateBps = other.BitrateBps;
      }
      if (other.ChannelCount != 0) {
        ChannelCount = other.ChannelCount;
      }
      channelLayout_.Add(other.channelLayout_);
      mapping_.Add(other.mapping_);
      if (other.SampleRateHertz != 0) {
        SampleRateHertz = other.SampleRateHertz;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Codec = input.ReadString();
            break;
          }
          case 16: {
            BitrateBps = input.ReadInt32();
            break;
          }
          case 24: {
            ChannelCount = input.ReadInt32();
            break;
          }
          case 34: {
            channelLayout_.AddEntriesFrom(input, _repeated_channelLayout_codec);
            break;
          }
          case 42: {
            mapping_.AddEntriesFrom(input, _repeated_mapping_codec);
            break;
          }
          case 48: {
            SampleRateHertz = input.ReadInt32();
            break;
          }
          case 64: {
            Transmux = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Codec = input.ReadString();
            break;
          }
          case 16: {
            BitrateBps = input.ReadInt32();
            break;
          }
          case 24: {
            ChannelCount = input.ReadInt32();
            break;
          }
          case 34: {
            channelLayout_.AddEntriesFrom(ref input, _repeated_channelLayout_codec);
            break;
          }
          case 42: {
            mapping_.AddEntriesFrom(ref input, _repeated_mapping_codec);
            break;
          }
          case 48: {
            SampleRateHertz = input.ReadInt32();
            break;
          }
          case 64: {
            Transmux = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AudioStream message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The mapping for the input streams and audio channels.
      /// </summary>
      public sealed partial class AudioMapping : pb::IMessage<AudioMapping>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AudioMapping> _parser = new pb::MessageParser<AudioMapping>(() => new AudioMapping());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AudioMapping> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Video.Livestream.V1.AudioStream.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AudioMapping() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AudioMapping(AudioMapping other) : this() {
          inputKey_ = other.inputKey_;
          inputTrack_ = other.inputTrack_;
          inputChannel_ = other.inputChannel_;
          outputChannel_ = other.outputChannel_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AudioMapping Clone() {
          return new AudioMapping(this);
        }

        /// <summary>Field number for the "input_key" field.</summary>
        public const int InputKeyFieldNumber = 6;
        private string inputKey_ = "";
        /// <summary>
        /// Required. The `Channel` [InputAttachment.key][google.cloud.video.livestream.v1.InputAttachment.key] that identifies the input that this
        /// audio mapping applies to. If an active input doesn't have an audio
        /// mapping, the primary audio track in the input stream will be selected.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InputKey {
          get { return inputKey_; }
          set {
            inputKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "input_track" field.</summary>
        public const int InputTrackFieldNumber = 2;
        private int inputTrack_;
        /// <summary>
        /// Required. The zero-based index of the track in the input stream.
        /// All [mapping][google.cloud.video.livestream.v1.AudioStream.mapping]s in the same [AudioStream][google.cloud.video.livestream.v1.AudioStream]
        /// must have the same input track.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int InputTrack {
          get { return inputTrack_; }
          set {
            inputTrack_ = value;
          }
        }

        /// <summary>Field number for the "input_channel" field.</summary>
        public const int InputChannelFieldNumber = 3;
        private int inputChannel_;
        /// <summary>
        /// Required. The zero-based index of the channel in the input stream.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int InputChannel {
          get { return inputChannel_; }
          set {
            inputChannel_ = value;
          }
        }

        /// <summary>Field number for the "output_channel" field.</summary>
        public const int OutputChannelFieldNumber = 4;
        private int outputChannel_;
        /// <summary>
        /// Required. The zero-based index of the channel in the output audio stream.
        /// Must be consistent with the [input_channel][google.cloud.video.livestream.v1.AudioStream.AudioMapping.input_channel].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int OutputChannel {
          get { return outputChannel_; }
          set {
            outputChannel_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AudioMapping);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AudioMapping other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (InputKey != other.InputKey) return false;
          if (InputTrack != other.InputTrack) return false;
          if (InputChannel != other.InputChannel) return false;
          if (OutputChannel != other.OutputChannel) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (InputKey.Length != 0) hash ^= InputKey.GetHashCode();
          if (InputTrack != 0) hash ^= InputTrack.GetHashCode();
          if (InputChannel != 0) hash ^= InputChannel.GetHashCode();
          if (OutputChannel != 0) hash ^= OutputChannel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (InputTrack != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(InputTrack);
          }
          if (InputChannel != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(InputChannel);
          }
          if (OutputChannel != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(OutputChannel);
          }
          if (InputKey.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(InputKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (InputTrack != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(InputTrack);
          }
          if (InputChannel != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(InputChannel);
          }
          if (OutputChannel != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(OutputChannel);
          }
          if (InputKey.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(InputKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (InputKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(InputKey);
          }
          if (InputTrack != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputTrack);
          }
          if (InputChannel != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputChannel);
          }
          if (OutputChannel != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutputChannel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AudioMapping other) {
          if (other == null) {
            return;
          }
          if (other.InputKey.Length != 0) {
            InputKey = other.InputKey;
          }
          if (other.InputTrack != 0) {
            InputTrack = other.InputTrack;
          }
          if (other.InputChannel != 0) {
            InputChannel = other.InputChannel;
          }
          if (other.OutputChannel != 0) {
            OutputChannel = other.OutputChannel;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 16: {
                InputTrack = input.ReadInt32();
                break;
              }
              case 24: {
                InputChannel = input.ReadInt32();
                break;
              }
              case 32: {
                OutputChannel = input.ReadInt32();
                break;
              }
              case 50: {
                InputKey = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 16: {
                InputTrack = input.ReadInt32();
                break;
              }
              case 24: {
                InputChannel = input.ReadInt32();
                break;
              }
              case 32: {
                OutputChannel = input.ReadInt32();
                break;
              }
              case 50: {
                InputKey = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Encoding of a text stream. For example, closed captions or subtitles.
  /// </summary>
  public sealed partial class TextStream : pb::IMessage<TextStream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextStream> _parser = new pb::MessageParser<TextStream>(() => new TextStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TextStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Video.Livestream.V1.OutputsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextStream(TextStream other) : this() {
      codec_ = other.codec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextStream Clone() {
      return new TextStream(this);
    }

    /// <summary>Field number for the "codec" field.</summary>
    public const int CodecFieldNumber = 1;
    private string codec_ = "";
    /// <summary>
    /// Required. The codec for this text stream.
    ///
    /// Supported text codecs:
    ///
    /// - `cea608`
    /// - `cea708`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Codec {
      get { return codec_; }
      set {
        codec_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TextStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TextStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Codec != other.Codec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Codec.Length != 0) hash ^= Codec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Codec.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Codec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Codec.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Codec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Codec.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Codec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TextStream other) {
      if (other == null) {
        return;
      }
      if (other.Codec.Length != 0) {
        Codec = other.Codec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Codec = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Codec = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Segment settings for `fmp4` and `ts`.
  /// </summary>
  public sealed partial class SegmentSettings : pb::IMessage<SegmentSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SegmentSettings> _parser = new pb::MessageParser<SegmentSettings>(() => new SegmentSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SegmentSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Video.Livestream.V1.OutputsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SegmentSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SegmentSettings(SegmentSettings other) : this() {
      segmentDuration_ = other.segmentDuration_ != null ? other.segmentDuration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SegmentSettings Clone() {
      return new SegmentSettings(this);
    }

    /// <summary>Field number for the "segment_duration" field.</summary>
    public const int SegmentDurationFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Duration segmentDuration_;
    /// <summary>
    /// Duration of the segments in seconds. The default is `6s`. Note that
    /// `segmentDuration` must be greater than or equal to
    /// [gop_duration][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings.gop_duration], and
    /// `segmentDuration` must be divisible by
    /// [gop_duration][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings.gop_duration].
    /// Valid range is [2s, 20s].
    ///
    /// All [mux_streams][google.cloud.video.livestream.v1.Manifest.mux_streams] in the same manifest must have the
    /// same segment duration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration SegmentDuration {
      get { return segmentDuration_; }
      set {
        segmentDuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SegmentSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SegmentSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SegmentDuration, other.SegmentDuration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (segmentDuration_ != null) hash ^= SegmentDuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (segmentDuration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SegmentDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (segmentDuration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SegmentDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (segmentDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SegmentDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SegmentSettings other) {
      if (other == null) {
        return;
      }
      if (other.segmentDuration_ != null) {
        if (segmentDuration_ == null) {
          SegmentDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        SegmentDuration.MergeFrom(other.SegmentDuration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (segmentDuration_ == null) {
              SegmentDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(SegmentDuration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (segmentDuration_ == null) {
              SegmentDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(SegmentDuration);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
