# frozen_string_literal: true

# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!


module Google
  module Cloud
    module Osconfig
      module Agentendpoint
        module V1
          # A unit of work to be performed by the agent.
          # @!attribute [rw] task_id
          #   @return [::String]
          #     Unique task id.
          # @!attribute [rw] task_type
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::TaskType]
          #     The type of task to perform.
          #
          #     Task details must include the appropriate message based on this enum as
          #     specified below:
          #     APPLY_PATCHES = ApplyPatchesTask
          #     EXEC_STEP = ExecStepTask
          #     APPLY_CONFIG_TASK = ApplyConfigTask
          # @!attribute [rw] task_directive
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::TaskDirective]
          #     Current directive to the agent.
          # @!attribute [rw] apply_patches_task
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::ApplyPatchesTask]
          #     Details about the apply patches task to perform.
          # @!attribute [rw] exec_step_task
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::ExecStepTask]
          #     Details about the exec step task to perform.
          # @!attribute [rw] apply_config_task
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::ApplyConfigTask]
          #     Details about the apply config step task to perform.
          # @!attribute [rw] service_labels
          #   @return [::Google::Protobuf::Map{::String => ::String}]
          #     Labels describing the task.  Used for logging by the agent.
          class Task
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods

            # @!attribute [rw] key
            #   @return [::String]
            # @!attribute [rw] value
            #   @return [::String]
            class ServiceLabelsEntry
              include ::Google::Protobuf::MessageExts
              extend ::Google::Protobuf::MessageExts::ClassMethods
            end
          end

          # Message which instructs agent to apply patches.
          # @!attribute [rw] patch_config
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::PatchConfig]
          #     Specific information about how patches should be applied.
          # @!attribute [rw] dry_run
          #   @return [::Boolean]
          #     If true, the agent will report its status as it goes through the motions
          #     but won't actually run any updates or perform any reboots.
          class ApplyPatchesTask
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods
          end

          # Information reported from the agent about applying patches execution.
          # @!attribute [rw] state
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::ApplyPatchesTaskProgress::State]
          #     Required. The current state of this patch execution.
          class ApplyPatchesTaskProgress
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods

            # The intermediate states of applying patches.
            module State
              # Unspecified is invalid.
              STATE_UNSPECIFIED = 0

              # The agent has started the patch task.
              STARTED = 4

              # The agent is currently downloading patches.
              DOWNLOADING_PATCHES = 1

              # The agent is currently applying patches.
              APPLYING_PATCHES = 2

              # The agent is currently rebooting the instance.
              REBOOTING = 3
            end
          end

          # Information reported from the agent about applying patches execution.
          # @!attribute [rw] state
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::ApplyPatchesTaskOutput::State]
          #     Required. The final state of this task.
          class ApplyPatchesTaskOutput
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods

            # The final states of applying patches.
            module State
              # Unspecified is invalid.
              STATE_UNSPECIFIED = 0

              # Applying patches completed successfully.
              SUCCEEDED = 1

              # Applying patches completed successfully, but a reboot is required.
              SUCCEEDED_REBOOT_REQUIRED = 2

              # Applying patches failed.
              FAILED = 3
            end
          end

          # Message which instructs agent to execute the following command.
          # @!attribute [rw] exec_step
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::ExecStep]
          #     Details of the exec step to run.
          class ExecStepTask
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods
          end

          # Information reported from the agent about the exec step execution.
          # @!attribute [rw] state
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::ExecStepTaskProgress::State]
          #     Required. The current state of this exec step.
          class ExecStepTaskProgress
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods

            # The intermediate states of exec steps.
            module State
              # Unspecified is invalid.
              STATE_UNSPECIFIED = 0

              # The agent has started the exec step task.
              STARTED = 1
            end
          end

          # Information reported from the agent about the exec step execution.
          # @!attribute [rw] state
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::ExecStepTaskOutput::State]
          #     Required. The final state of the exec step.
          # @!attribute [rw] exit_code
          #   @return [::Integer]
          #     Required. The exit code received from the script which ran as part of the
          #     exec step.
          class ExecStepTaskOutput
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods

            # The final states of exec steps.
            module State
              # Unspecified is invalid.
              STATE_UNSPECIFIED = 0

              # The exec step completed normally.
              COMPLETED = 1

              # The exec step was terminated because it took too long.
              TIMED_OUT = 2

              # The exec step task was cancelled before it started.
              CANCELLED = 3
            end
          end

          # Message which instructs OS Config agent to apply the desired state
          # configuration.
          # @!attribute [rw] os_policies
          #   @return [::Array<::Google::Cloud::Osconfig::Agentendpoint::V1::ApplyConfigTask::OSPolicy>]
          #     List of os policies to be applied for the instance.
          class ApplyConfigTask
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods

            # Message representing an OS policy.
            # @!attribute [rw] id
            #   @return [::String]
            #     User provided policy id.
            #     Used for reporting and logging by the agent.
            # @!attribute [rw] mode
            #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::OSPolicy::Mode]
            #     The policy mode
            # @!attribute [rw] os_policy_assignment
            #   @return [::String]
            #     Reference to the `OSPolicyAssignment` API resource that this `OSPolicy`
            #     belongs to.
            #     Format:
            #     projects/\\{project_number}/locations/\\{location}/osPolicyAssignments/\\{os_policy_assignment_id@revision_id}
            #     Used for reporting and logging by the agent.
            # @!attribute [rw] resources
            #   @return [::Array<::Google::Cloud::Osconfig::Agentendpoint::V1::OSPolicy::Resource>]
            #     List of resources associated with the policy to be set to their
            #     desired state.
            class OSPolicy
              include ::Google::Protobuf::MessageExts
              extend ::Google::Protobuf::MessageExts::ClassMethods
            end
          end

          # Information reported from the agent regarding the progress of the task of
          # applying desired state configuration.
          # @!attribute [rw] state
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::ApplyConfigTaskProgress::State]
          #     The current state of this task.
          class ApplyConfigTaskProgress
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods

            # The intermediate states of apply config task.
            module State
              # Invalid state
              STATE_UNSPECIFIED = 0

              # The agent has started the task.
              STARTED = 1

              # The agent is in the process of applying the configuration.
              APPLYING_CONFIG = 2
            end
          end

          # Information reported from the agent regarding the output of the task of
          # applying desired state configuration.
          # @!attribute [rw] state
          #   @return [::Google::Cloud::Osconfig::Agentendpoint::V1::ApplyConfigTaskOutput::State]
          #     Required. The final state of this task.
          # @!attribute [rw] os_policy_results
          #   @return [::Array<::Google::Cloud::Osconfig::Agentendpoint::V1::ApplyConfigTaskOutput::OSPolicyResult>]
          #     Results of applying desired state config for the OS policies.
          class ApplyConfigTaskOutput
            include ::Google::Protobuf::MessageExts
            extend ::Google::Protobuf::MessageExts::ClassMethods

            # Result of applying desired state config for an OS policy.
            # @!attribute [rw] os_policy_id
            #   @return [::String]
            #     The OS policy id
            # @!attribute [rw] os_policy_assignment
            #   @return [::String]
            #     Reference to the `OSPolicyAssignment` API resource that this `OSPolicy`
            #     belongs to.
            #     Format:
            #     projects/\\{project_number}/locations/\\{location}/osPolicyAssignments/\\{os_policy_assignment_id@revision_id}
            #     Used for reporting and logging by the agent.
            # @!attribute [rw] os_policy_resource_compliances
            #   @return [::Array<::Google::Cloud::Osconfig::Agentendpoint::V1::OSPolicyResourceCompliance>]
            #     Results of applying desired state config for the OS policy resources.
            class OSPolicyResult
              include ::Google::Protobuf::MessageExts
              extend ::Google::Protobuf::MessageExts::ClassMethods
            end

            # The final state of this task.
            module State
              # Unspecified is invalid.
              STATE_UNSPECIFIED = 0

              # The apply config task completed successfully.
              SUCCEEDED = 1

              # The apply config task failed.
              FAILED = 2

              # The apply config task was cancelled.
              CANCELLED = 3
            end
          end

          # Specifies the current agent behavior.
          module TaskDirective
            # Unspecified is invalid.
            TASK_DIRECTIVE_UNSPECIFIED = 0

            # The task should continue to progress.
            CONTINUE = 1

            # Task should not be started, or if already in progress, should stop
            # at first safe stopping point.  Task should be considered done and will
            # never repeat.
            STOP = 2
          end

          # Specifies the type of task to perform.
          module TaskType
            # Unspecified is invalid.
            TASK_TYPE_UNSPECIFIED = 0

            # The apply patches task.
            APPLY_PATCHES = 1

            # The exec step task.
            EXEC_STEP_TASK = 2

            # The apply config task
            APPLY_CONFIG_TASK = 3
          end
        end
      end
    end
  end
end
