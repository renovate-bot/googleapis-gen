<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/osconfig/v1beta/guest_policies.proto

namespace Google\Cloud\Osconfig\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An OS Config resource representing a guest configuration policy. These
 * policies represent the desired state for VM instance guest environments
 * including packages to install or remove, package repository configurations,
 * and software to install.
 *
 * Generated from protobuf message <code>google.cloud.osconfig.v1beta.GuestPolicy</code>
 */
class GuestPolicy extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Unique name of the resource in this project using one of the following
     * forms:
     * `projects/{project_number}/guestPolicies/{guest_policy_id}`.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $name = '';
    /**
     * Description of the guest policy. Length of the description is limited
     * to 1024 characters.
     *
     * Generated from protobuf field <code>string description = 2;</code>
     */
    protected $description = '';
    /**
     * Output only. Time this guest policy was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $create_time = null;
    /**
     * Output only. Last time this guest policy was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $update_time = null;
    /**
     * Required. Specifies the VM instances that are assigned to this policy. This allows
     * you to target sets or groups of VM instances by different parameters such
     * as labels, names, OS, or zones.
     * If left empty, all VM instances underneath this policy are targeted.
     * At the same level in the resource hierarchy (that is within a project), the
     * service prevents the creation of multiple policies that conflict with
     * each other. For more information, see how the service [handles assignment
     * conflicts](/compute/docs/os-config-management/create-guest-policy#handle-conflicts).
     *
     * Generated from protobuf field <code>.google.cloud.osconfig.v1beta.Assignment assignment = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $assignment = null;
    /**
     * The software packages to be managed by this policy.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.Package packages = 7;</code>
     */
    private $packages;
    /**
     * A list of package repositories to configure on the VM instance. This is
     * done before any other configs are applied so they can use these repos.
     * Package repositories are only configured if the corresponding package
     * manager(s) are available.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.PackageRepository package_repositories = 8;</code>
     */
    private $package_repositories;
    /**
     * A list of Recipes to install on the VM instance.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.SoftwareRecipe recipes = 9;</code>
     */
    private $recipes;
    /**
     * The etag for this guest policy.
     * If this is provided on update, it must match the server's etag.
     *
     * Generated from protobuf field <code>string etag = 10;</code>
     */
    protected $etag = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. Unique name of the resource in this project using one of the following
     *           forms:
     *           `projects/{project_number}/guestPolicies/{guest_policy_id}`.
     *     @type string $description
     *           Description of the guest policy. Length of the description is limited
     *           to 1024 characters.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. Time this guest policy was created.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. Last time this guest policy was updated.
     *     @type \Google\Cloud\Osconfig\V1beta\Assignment $assignment
     *           Required. Specifies the VM instances that are assigned to this policy. This allows
     *           you to target sets or groups of VM instances by different parameters such
     *           as labels, names, OS, or zones.
     *           If left empty, all VM instances underneath this policy are targeted.
     *           At the same level in the resource hierarchy (that is within a project), the
     *           service prevents the creation of multiple policies that conflict with
     *           each other. For more information, see how the service [handles assignment
     *           conflicts](/compute/docs/os-config-management/create-guest-policy#handle-conflicts).
     *     @type \Google\Cloud\Osconfig\V1beta\Package[]|\Google\Protobuf\Internal\RepeatedField $packages
     *           The software packages to be managed by this policy.
     *     @type \Google\Cloud\Osconfig\V1beta\PackageRepository[]|\Google\Protobuf\Internal\RepeatedField $package_repositories
     *           A list of package repositories to configure on the VM instance. This is
     *           done before any other configs are applied so they can use these repos.
     *           Package repositories are only configured if the corresponding package
     *           manager(s) are available.
     *     @type \Google\Cloud\Osconfig\V1beta\SoftwareRecipe[]|\Google\Protobuf\Internal\RepeatedField $recipes
     *           A list of Recipes to install on the VM instance.
     *     @type string $etag
     *           The etag for this guest policy.
     *           If this is provided on update, it must match the server's etag.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Osconfig\V1Beta\GuestPolicies::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Unique name of the resource in this project using one of the following
     * forms:
     * `projects/{project_number}/guestPolicies/{guest_policy_id}`.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. Unique name of the resource in this project using one of the following
     * forms:
     * `projects/{project_number}/guestPolicies/{guest_policy_id}`.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Description of the guest policy. Length of the description is limited
     * to 1024 characters.
     *
     * Generated from protobuf field <code>string description = 2;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Description of the guest policy. Length of the description is limited
     * to 1024 characters.
     *
     * Generated from protobuf field <code>string description = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Output only. Time this guest policy was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. Time this guest policy was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * Output only. Last time this guest policy was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. Last time this guest policy was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Required. Specifies the VM instances that are assigned to this policy. This allows
     * you to target sets or groups of VM instances by different parameters such
     * as labels, names, OS, or zones.
     * If left empty, all VM instances underneath this policy are targeted.
     * At the same level in the resource hierarchy (that is within a project), the
     * service prevents the creation of multiple policies that conflict with
     * each other. For more information, see how the service [handles assignment
     * conflicts](/compute/docs/os-config-management/create-guest-policy#handle-conflicts).
     *
     * Generated from protobuf field <code>.google.cloud.osconfig.v1beta.Assignment assignment = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\Osconfig\V1beta\Assignment|null
     */
    public function getAssignment()
    {
        return $this->assignment;
    }

    public function hasAssignment()
    {
        return isset($this->assignment);
    }

    public function clearAssignment()
    {
        unset($this->assignment);
    }

    /**
     * Required. Specifies the VM instances that are assigned to this policy. This allows
     * you to target sets or groups of VM instances by different parameters such
     * as labels, names, OS, or zones.
     * If left empty, all VM instances underneath this policy are targeted.
     * At the same level in the resource hierarchy (that is within a project), the
     * service prevents the creation of multiple policies that conflict with
     * each other. For more information, see how the service [handles assignment
     * conflicts](/compute/docs/os-config-management/create-guest-policy#handle-conflicts).
     *
     * Generated from protobuf field <code>.google.cloud.osconfig.v1beta.Assignment assignment = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Osconfig\V1beta\Assignment $var
     * @return $this
     */
    public function setAssignment($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Osconfig\V1beta\Assignment::class);
        $this->assignment = $var;

        return $this;
    }

    /**
     * The software packages to be managed by this policy.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.Package packages = 7;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPackages()
    {
        return $this->packages;
    }

    /**
     * The software packages to be managed by this policy.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.Package packages = 7;</code>
     * @param \Google\Cloud\Osconfig\V1beta\Package[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPackages($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Osconfig\V1beta\Package::class);
        $this->packages = $arr;

        return $this;
    }

    /**
     * A list of package repositories to configure on the VM instance. This is
     * done before any other configs are applied so they can use these repos.
     * Package repositories are only configured if the corresponding package
     * manager(s) are available.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.PackageRepository package_repositories = 8;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPackageRepositories()
    {
        return $this->package_repositories;
    }

    /**
     * A list of package repositories to configure on the VM instance. This is
     * done before any other configs are applied so they can use these repos.
     * Package repositories are only configured if the corresponding package
     * manager(s) are available.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.PackageRepository package_repositories = 8;</code>
     * @param \Google\Cloud\Osconfig\V1beta\PackageRepository[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPackageRepositories($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Osconfig\V1beta\PackageRepository::class);
        $this->package_repositories = $arr;

        return $this;
    }

    /**
     * A list of Recipes to install on the VM instance.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.SoftwareRecipe recipes = 9;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRecipes()
    {
        return $this->recipes;
    }

    /**
     * A list of Recipes to install on the VM instance.
     *
     * Generated from protobuf field <code>repeated .google.cloud.osconfig.v1beta.SoftwareRecipe recipes = 9;</code>
     * @param \Google\Cloud\Osconfig\V1beta\SoftwareRecipe[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRecipes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Osconfig\V1beta\SoftwareRecipe::class);
        $this->recipes = $arr;

        return $this;
    }

    /**
     * The etag for this guest policy.
     * If this is provided on update, it must match the server's etag.
     *
     * Generated from protobuf field <code>string etag = 10;</code>
     * @return string
     */
    public function getEtag()
    {
        return $this->etag;
    }

    /**
     * The etag for this guest policy.
     * If this is provided on update, it must match the server's etag.
     *
     * Generated from protobuf field <code>string etag = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setEtag($var)
    {
        GPBUtil::checkString($var, True);
        $this->etag = $var;

        return $this;
    }

}

