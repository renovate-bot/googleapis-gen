// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/osconfig/v1beta/osconfig_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Osconfig.V1Beta {
  /// <summary>
  /// OS Config API
  ///
  /// The OS Config service is a server-side component that you can use to
  /// manage package installations and patch jobs for virtual machine instances.
  /// </summary>
  public static partial class OsConfigService
  {
    static readonly string __ServiceName = "google.cloud.osconfig.v1beta.OsConfigService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.ExecutePatchJobRequest> __Marshaller_google_cloud_osconfig_v1beta_ExecutePatchJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.ExecutePatchJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.PatchJob> __Marshaller_google_cloud_osconfig_v1beta_PatchJob = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.PatchJob.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.GetPatchJobRequest> __Marshaller_google_cloud_osconfig_v1beta_GetPatchJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.GetPatchJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.CancelPatchJobRequest> __Marshaller_google_cloud_osconfig_v1beta_CancelPatchJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.CancelPatchJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsRequest> __Marshaller_google_cloud_osconfig_v1beta_ListPatchJobsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsResponse> __Marshaller_google_cloud_osconfig_v1beta_ListPatchJobsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsRequest> __Marshaller_google_cloud_osconfig_v1beta_ListPatchJobInstanceDetailsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsResponse> __Marshaller_google_cloud_osconfig_v1beta_ListPatchJobInstanceDetailsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.CreatePatchDeploymentRequest> __Marshaller_google_cloud_osconfig_v1beta_CreatePatchDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.CreatePatchDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.PatchDeployment> __Marshaller_google_cloud_osconfig_v1beta_PatchDeployment = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.PatchDeployment.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.GetPatchDeploymentRequest> __Marshaller_google_cloud_osconfig_v1beta_GetPatchDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.GetPatchDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsRequest> __Marshaller_google_cloud_osconfig_v1beta_ListPatchDeploymentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsResponse> __Marshaller_google_cloud_osconfig_v1beta_ListPatchDeploymentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.DeletePatchDeploymentRequest> __Marshaller_google_cloud_osconfig_v1beta_DeletePatchDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.DeletePatchDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.CreateGuestPolicyRequest> __Marshaller_google_cloud_osconfig_v1beta_CreateGuestPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.CreateGuestPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> __Marshaller_google_cloud_osconfig_v1beta_GuestPolicy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.GuestPolicy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.GetGuestPolicyRequest> __Marshaller_google_cloud_osconfig_v1beta_GetGuestPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.GetGuestPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesRequest> __Marshaller_google_cloud_osconfig_v1beta_ListGuestPoliciesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesResponse> __Marshaller_google_cloud_osconfig_v1beta_ListGuestPoliciesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.UpdateGuestPolicyRequest> __Marshaller_google_cloud_osconfig_v1beta_UpdateGuestPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.UpdateGuestPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.DeleteGuestPolicyRequest> __Marshaller_google_cloud_osconfig_v1beta_DeleteGuestPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.DeleteGuestPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.LookupEffectiveGuestPolicyRequest> __Marshaller_google_cloud_osconfig_v1beta_LookupEffectiveGuestPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.LookupEffectiveGuestPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Osconfig.V1Beta.EffectiveGuestPolicy> __Marshaller_google_cloud_osconfig_v1beta_EffectiveGuestPolicy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Osconfig.V1Beta.EffectiveGuestPolicy.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.ExecutePatchJobRequest, global::Google.Cloud.Osconfig.V1Beta.PatchJob> __Method_ExecutePatchJob = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.ExecutePatchJobRequest, global::Google.Cloud.Osconfig.V1Beta.PatchJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExecutePatchJob",
        __Marshaller_google_cloud_osconfig_v1beta_ExecutePatchJobRequest,
        __Marshaller_google_cloud_osconfig_v1beta_PatchJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.GetPatchJobRequest, global::Google.Cloud.Osconfig.V1Beta.PatchJob> __Method_GetPatchJob = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.GetPatchJobRequest, global::Google.Cloud.Osconfig.V1Beta.PatchJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPatchJob",
        __Marshaller_google_cloud_osconfig_v1beta_GetPatchJobRequest,
        __Marshaller_google_cloud_osconfig_v1beta_PatchJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.CancelPatchJobRequest, global::Google.Cloud.Osconfig.V1Beta.PatchJob> __Method_CancelPatchJob = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.CancelPatchJobRequest, global::Google.Cloud.Osconfig.V1Beta.PatchJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelPatchJob",
        __Marshaller_google_cloud_osconfig_v1beta_CancelPatchJobRequest,
        __Marshaller_google_cloud_osconfig_v1beta_PatchJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsRequest, global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsResponse> __Method_ListPatchJobs = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsRequest, global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPatchJobs",
        __Marshaller_google_cloud_osconfig_v1beta_ListPatchJobsRequest,
        __Marshaller_google_cloud_osconfig_v1beta_ListPatchJobsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsRequest, global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsResponse> __Method_ListPatchJobInstanceDetails = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsRequest, global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPatchJobInstanceDetails",
        __Marshaller_google_cloud_osconfig_v1beta_ListPatchJobInstanceDetailsRequest,
        __Marshaller_google_cloud_osconfig_v1beta_ListPatchJobInstanceDetailsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.CreatePatchDeploymentRequest, global::Google.Cloud.Osconfig.V1Beta.PatchDeployment> __Method_CreatePatchDeployment = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.CreatePatchDeploymentRequest, global::Google.Cloud.Osconfig.V1Beta.PatchDeployment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatePatchDeployment",
        __Marshaller_google_cloud_osconfig_v1beta_CreatePatchDeploymentRequest,
        __Marshaller_google_cloud_osconfig_v1beta_PatchDeployment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.GetPatchDeploymentRequest, global::Google.Cloud.Osconfig.V1Beta.PatchDeployment> __Method_GetPatchDeployment = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.GetPatchDeploymentRequest, global::Google.Cloud.Osconfig.V1Beta.PatchDeployment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPatchDeployment",
        __Marshaller_google_cloud_osconfig_v1beta_GetPatchDeploymentRequest,
        __Marshaller_google_cloud_osconfig_v1beta_PatchDeployment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsRequest, global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsResponse> __Method_ListPatchDeployments = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsRequest, global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPatchDeployments",
        __Marshaller_google_cloud_osconfig_v1beta_ListPatchDeploymentsRequest,
        __Marshaller_google_cloud_osconfig_v1beta_ListPatchDeploymentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.DeletePatchDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeletePatchDeployment = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.DeletePatchDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePatchDeployment",
        __Marshaller_google_cloud_osconfig_v1beta_DeletePatchDeploymentRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.CreateGuestPolicyRequest, global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> __Method_CreateGuestPolicy = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.CreateGuestPolicyRequest, global::Google.Cloud.Osconfig.V1Beta.GuestPolicy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateGuestPolicy",
        __Marshaller_google_cloud_osconfig_v1beta_CreateGuestPolicyRequest,
        __Marshaller_google_cloud_osconfig_v1beta_GuestPolicy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.GetGuestPolicyRequest, global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> __Method_GetGuestPolicy = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.GetGuestPolicyRequest, global::Google.Cloud.Osconfig.V1Beta.GuestPolicy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGuestPolicy",
        __Marshaller_google_cloud_osconfig_v1beta_GetGuestPolicyRequest,
        __Marshaller_google_cloud_osconfig_v1beta_GuestPolicy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesRequest, global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesResponse> __Method_ListGuestPolicies = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesRequest, global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListGuestPolicies",
        __Marshaller_google_cloud_osconfig_v1beta_ListGuestPoliciesRequest,
        __Marshaller_google_cloud_osconfig_v1beta_ListGuestPoliciesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.UpdateGuestPolicyRequest, global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> __Method_UpdateGuestPolicy = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.UpdateGuestPolicyRequest, global::Google.Cloud.Osconfig.V1Beta.GuestPolicy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGuestPolicy",
        __Marshaller_google_cloud_osconfig_v1beta_UpdateGuestPolicyRequest,
        __Marshaller_google_cloud_osconfig_v1beta_GuestPolicy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.DeleteGuestPolicyRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteGuestPolicy = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.DeleteGuestPolicyRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteGuestPolicy",
        __Marshaller_google_cloud_osconfig_v1beta_DeleteGuestPolicyRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Osconfig.V1Beta.LookupEffectiveGuestPolicyRequest, global::Google.Cloud.Osconfig.V1Beta.EffectiveGuestPolicy> __Method_LookupEffectiveGuestPolicy = new grpc::Method<global::Google.Cloud.Osconfig.V1Beta.LookupEffectiveGuestPolicyRequest, global::Google.Cloud.Osconfig.V1Beta.EffectiveGuestPolicy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LookupEffectiveGuestPolicy",
        __Marshaller_google_cloud_osconfig_v1beta_LookupEffectiveGuestPolicyRequest,
        __Marshaller_google_cloud_osconfig_v1beta_EffectiveGuestPolicy);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Osconfig.V1Beta.OsconfigServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of OsConfigService</summary>
    [grpc::BindServiceMethod(typeof(OsConfigService), "BindService")]
    public abstract partial class OsConfigServiceBase
    {
      /// <summary>
      /// Patch VM instances by creating and running a patch job.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.PatchJob> ExecutePatchJob(global::Google.Cloud.Osconfig.V1Beta.ExecutePatchJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the patch job. This can be used to track the progress of an
      /// ongoing patch job or review the details of completed jobs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.PatchJob> GetPatchJob(global::Google.Cloud.Osconfig.V1Beta.GetPatchJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Cancel a patch job. The patch job must be active. Canceled patch jobs
      /// cannot be restarted.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.PatchJob> CancelPatchJob(global::Google.Cloud.Osconfig.V1Beta.CancelPatchJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get a list of patch jobs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsResponse> ListPatchJobs(global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get a list of instance details for a given patch job.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsResponse> ListPatchJobInstanceDetails(global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.PatchDeployment> CreatePatchDeployment(global::Google.Cloud.Osconfig.V1Beta.CreatePatchDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.PatchDeployment> GetPatchDeployment(global::Google.Cloud.Osconfig.V1Beta.GetPatchDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get a page of OS Config patch deployments.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsResponse> ListPatchDeployments(global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeletePatchDeployment(global::Google.Cloud.Osconfig.V1Beta.DeletePatchDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> CreateGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.CreateGuestPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> GetGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.GetGuestPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get a page of OS Config guest policies.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesResponse> ListGuestPolicies(global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> UpdateGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.UpdateGuestPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.DeleteGuestPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup the effective guest policy that applies to a VM instance. This
      /// lookup merges all policies that are assigned to the instance ancestry.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Osconfig.V1Beta.EffectiveGuestPolicy> LookupEffectiveGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.LookupEffectiveGuestPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for OsConfigService</summary>
    public partial class OsConfigServiceClient : grpc::ClientBase<OsConfigServiceClient>
    {
      /// <summary>Creates a new client for OsConfigService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public OsConfigServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for OsConfigService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public OsConfigServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected OsConfigServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected OsConfigServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Patch VM instances by creating and running a patch job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.PatchJob ExecutePatchJob(global::Google.Cloud.Osconfig.V1Beta.ExecutePatchJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecutePatchJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Patch VM instances by creating and running a patch job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.PatchJob ExecutePatchJob(global::Google.Cloud.Osconfig.V1Beta.ExecutePatchJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExecutePatchJob, null, options, request);
      }
      /// <summary>
      /// Patch VM instances by creating and running a patch job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.PatchJob> ExecutePatchJobAsync(global::Google.Cloud.Osconfig.V1Beta.ExecutePatchJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecutePatchJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Patch VM instances by creating and running a patch job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.PatchJob> ExecutePatchJobAsync(global::Google.Cloud.Osconfig.V1Beta.ExecutePatchJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExecutePatchJob, null, options, request);
      }
      /// <summary>
      /// Get the patch job. This can be used to track the progress of an
      /// ongoing patch job or review the details of completed jobs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.PatchJob GetPatchJob(global::Google.Cloud.Osconfig.V1Beta.GetPatchJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPatchJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the patch job. This can be used to track the progress of an
      /// ongoing patch job or review the details of completed jobs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.PatchJob GetPatchJob(global::Google.Cloud.Osconfig.V1Beta.GetPatchJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPatchJob, null, options, request);
      }
      /// <summary>
      /// Get the patch job. This can be used to track the progress of an
      /// ongoing patch job or review the details of completed jobs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.PatchJob> GetPatchJobAsync(global::Google.Cloud.Osconfig.V1Beta.GetPatchJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPatchJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the patch job. This can be used to track the progress of an
      /// ongoing patch job or review the details of completed jobs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.PatchJob> GetPatchJobAsync(global::Google.Cloud.Osconfig.V1Beta.GetPatchJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPatchJob, null, options, request);
      }
      /// <summary>
      /// Cancel a patch job. The patch job must be active. Canceled patch jobs
      /// cannot be restarted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.PatchJob CancelPatchJob(global::Google.Cloud.Osconfig.V1Beta.CancelPatchJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelPatchJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Cancel a patch job. The patch job must be active. Canceled patch jobs
      /// cannot be restarted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.PatchJob CancelPatchJob(global::Google.Cloud.Osconfig.V1Beta.CancelPatchJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelPatchJob, null, options, request);
      }
      /// <summary>
      /// Cancel a patch job. The patch job must be active. Canceled patch jobs
      /// cannot be restarted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.PatchJob> CancelPatchJobAsync(global::Google.Cloud.Osconfig.V1Beta.CancelPatchJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelPatchJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Cancel a patch job. The patch job must be active. Canceled patch jobs
      /// cannot be restarted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.PatchJob> CancelPatchJobAsync(global::Google.Cloud.Osconfig.V1Beta.CancelPatchJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelPatchJob, null, options, request);
      }
      /// <summary>
      /// Get a list of patch jobs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsResponse ListPatchJobs(global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPatchJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a list of patch jobs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsResponse ListPatchJobs(global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPatchJobs, null, options, request);
      }
      /// <summary>
      /// Get a list of patch jobs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsResponse> ListPatchJobsAsync(global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPatchJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a list of patch jobs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsResponse> ListPatchJobsAsync(global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPatchJobs, null, options, request);
      }
      /// <summary>
      /// Get a list of instance details for a given patch job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsResponse ListPatchJobInstanceDetails(global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPatchJobInstanceDetails(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a list of instance details for a given patch job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsResponse ListPatchJobInstanceDetails(global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPatchJobInstanceDetails, null, options, request);
      }
      /// <summary>
      /// Get a list of instance details for a given patch job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsResponse> ListPatchJobInstanceDetailsAsync(global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPatchJobInstanceDetailsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a list of instance details for a given patch job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsResponse> ListPatchJobInstanceDetailsAsync(global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPatchJobInstanceDetails, null, options, request);
      }
      /// <summary>
      /// Create an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.PatchDeployment CreatePatchDeployment(global::Google.Cloud.Osconfig.V1Beta.CreatePatchDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePatchDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.PatchDeployment CreatePatchDeployment(global::Google.Cloud.Osconfig.V1Beta.CreatePatchDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatePatchDeployment, null, options, request);
      }
      /// <summary>
      /// Create an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.PatchDeployment> CreatePatchDeploymentAsync(global::Google.Cloud.Osconfig.V1Beta.CreatePatchDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePatchDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.PatchDeployment> CreatePatchDeploymentAsync(global::Google.Cloud.Osconfig.V1Beta.CreatePatchDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatePatchDeployment, null, options, request);
      }
      /// <summary>
      /// Get an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.PatchDeployment GetPatchDeployment(global::Google.Cloud.Osconfig.V1Beta.GetPatchDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPatchDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.PatchDeployment GetPatchDeployment(global::Google.Cloud.Osconfig.V1Beta.GetPatchDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPatchDeployment, null, options, request);
      }
      /// <summary>
      /// Get an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.PatchDeployment> GetPatchDeploymentAsync(global::Google.Cloud.Osconfig.V1Beta.GetPatchDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPatchDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.PatchDeployment> GetPatchDeploymentAsync(global::Google.Cloud.Osconfig.V1Beta.GetPatchDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPatchDeployment, null, options, request);
      }
      /// <summary>
      /// Get a page of OS Config patch deployments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsResponse ListPatchDeployments(global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPatchDeployments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a page of OS Config patch deployments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsResponse ListPatchDeployments(global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPatchDeployments, null, options, request);
      }
      /// <summary>
      /// Get a page of OS Config patch deployments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsResponse> ListPatchDeploymentsAsync(global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPatchDeploymentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a page of OS Config patch deployments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsResponse> ListPatchDeploymentsAsync(global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPatchDeployments, null, options, request);
      }
      /// <summary>
      /// Delete an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeletePatchDeployment(global::Google.Cloud.Osconfig.V1Beta.DeletePatchDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePatchDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeletePatchDeployment(global::Google.Cloud.Osconfig.V1Beta.DeletePatchDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeletePatchDeployment, null, options, request);
      }
      /// <summary>
      /// Delete an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeletePatchDeploymentAsync(global::Google.Cloud.Osconfig.V1Beta.DeletePatchDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePatchDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an OS Config patch deployment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeletePatchDeploymentAsync(global::Google.Cloud.Osconfig.V1Beta.DeletePatchDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeletePatchDeployment, null, options, request);
      }
      /// <summary>
      /// Create an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.GuestPolicy CreateGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.CreateGuestPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateGuestPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.GuestPolicy CreateGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.CreateGuestPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateGuestPolicy, null, options, request);
      }
      /// <summary>
      /// Create an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> CreateGuestPolicyAsync(global::Google.Cloud.Osconfig.V1Beta.CreateGuestPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateGuestPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> CreateGuestPolicyAsync(global::Google.Cloud.Osconfig.V1Beta.CreateGuestPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateGuestPolicy, null, options, request);
      }
      /// <summary>
      /// Get an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.GuestPolicy GetGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.GetGuestPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGuestPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.GuestPolicy GetGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.GetGuestPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGuestPolicy, null, options, request);
      }
      /// <summary>
      /// Get an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> GetGuestPolicyAsync(global::Google.Cloud.Osconfig.V1Beta.GetGuestPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGuestPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> GetGuestPolicyAsync(global::Google.Cloud.Osconfig.V1Beta.GetGuestPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGuestPolicy, null, options, request);
      }
      /// <summary>
      /// Get a page of OS Config guest policies.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesResponse ListGuestPolicies(global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGuestPolicies(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a page of OS Config guest policies.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesResponse ListGuestPolicies(global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListGuestPolicies, null, options, request);
      }
      /// <summary>
      /// Get a page of OS Config guest policies.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesResponse> ListGuestPoliciesAsync(global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGuestPoliciesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a page of OS Config guest policies.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesResponse> ListGuestPoliciesAsync(global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListGuestPolicies, null, options, request);
      }
      /// <summary>
      /// Update an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.GuestPolicy UpdateGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.UpdateGuestPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGuestPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.GuestPolicy UpdateGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.UpdateGuestPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGuestPolicy, null, options, request);
      }
      /// <summary>
      /// Update an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> UpdateGuestPolicyAsync(global::Google.Cloud.Osconfig.V1Beta.UpdateGuestPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGuestPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.GuestPolicy> UpdateGuestPolicyAsync(global::Google.Cloud.Osconfig.V1Beta.UpdateGuestPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGuestPolicy, null, options, request);
      }
      /// <summary>
      /// Delete an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.DeleteGuestPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGuestPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.DeleteGuestPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteGuestPolicy, null, options, request);
      }
      /// <summary>
      /// Delete an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGuestPolicyAsync(global::Google.Cloud.Osconfig.V1Beta.DeleteGuestPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGuestPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an OS Config guest policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGuestPolicyAsync(global::Google.Cloud.Osconfig.V1Beta.DeleteGuestPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteGuestPolicy, null, options, request);
      }
      /// <summary>
      /// Lookup the effective guest policy that applies to a VM instance. This
      /// lookup merges all policies that are assigned to the instance ancestry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.EffectiveGuestPolicy LookupEffectiveGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.LookupEffectiveGuestPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupEffectiveGuestPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup the effective guest policy that applies to a VM instance. This
      /// lookup merges all policies that are assigned to the instance ancestry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Osconfig.V1Beta.EffectiveGuestPolicy LookupEffectiveGuestPolicy(global::Google.Cloud.Osconfig.V1Beta.LookupEffectiveGuestPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LookupEffectiveGuestPolicy, null, options, request);
      }
      /// <summary>
      /// Lookup the effective guest policy that applies to a VM instance. This
      /// lookup merges all policies that are assigned to the instance ancestry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.EffectiveGuestPolicy> LookupEffectiveGuestPolicyAsync(global::Google.Cloud.Osconfig.V1Beta.LookupEffectiveGuestPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupEffectiveGuestPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup the effective guest policy that applies to a VM instance. This
      /// lookup merges all policies that are assigned to the instance ancestry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Osconfig.V1Beta.EffectiveGuestPolicy> LookupEffectiveGuestPolicyAsync(global::Google.Cloud.Osconfig.V1Beta.LookupEffectiveGuestPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LookupEffectiveGuestPolicy, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override OsConfigServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OsConfigServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(OsConfigServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ExecutePatchJob, serviceImpl.ExecutePatchJob)
          .AddMethod(__Method_GetPatchJob, serviceImpl.GetPatchJob)
          .AddMethod(__Method_CancelPatchJob, serviceImpl.CancelPatchJob)
          .AddMethod(__Method_ListPatchJobs, serviceImpl.ListPatchJobs)
          .AddMethod(__Method_ListPatchJobInstanceDetails, serviceImpl.ListPatchJobInstanceDetails)
          .AddMethod(__Method_CreatePatchDeployment, serviceImpl.CreatePatchDeployment)
          .AddMethod(__Method_GetPatchDeployment, serviceImpl.GetPatchDeployment)
          .AddMethod(__Method_ListPatchDeployments, serviceImpl.ListPatchDeployments)
          .AddMethod(__Method_DeletePatchDeployment, serviceImpl.DeletePatchDeployment)
          .AddMethod(__Method_CreateGuestPolicy, serviceImpl.CreateGuestPolicy)
          .AddMethod(__Method_GetGuestPolicy, serviceImpl.GetGuestPolicy)
          .AddMethod(__Method_ListGuestPolicies, serviceImpl.ListGuestPolicies)
          .AddMethod(__Method_UpdateGuestPolicy, serviceImpl.UpdateGuestPolicy)
          .AddMethod(__Method_DeleteGuestPolicy, serviceImpl.DeleteGuestPolicy)
          .AddMethod(__Method_LookupEffectiveGuestPolicy, serviceImpl.LookupEffectiveGuestPolicy).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, OsConfigServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ExecutePatchJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.ExecutePatchJobRequest, global::Google.Cloud.Osconfig.V1Beta.PatchJob>(serviceImpl.ExecutePatchJob));
      serviceBinder.AddMethod(__Method_GetPatchJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.GetPatchJobRequest, global::Google.Cloud.Osconfig.V1Beta.PatchJob>(serviceImpl.GetPatchJob));
      serviceBinder.AddMethod(__Method_CancelPatchJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.CancelPatchJobRequest, global::Google.Cloud.Osconfig.V1Beta.PatchJob>(serviceImpl.CancelPatchJob));
      serviceBinder.AddMethod(__Method_ListPatchJobs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsRequest, global::Google.Cloud.Osconfig.V1Beta.ListPatchJobsResponse>(serviceImpl.ListPatchJobs));
      serviceBinder.AddMethod(__Method_ListPatchJobInstanceDetails, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsRequest, global::Google.Cloud.Osconfig.V1Beta.ListPatchJobInstanceDetailsResponse>(serviceImpl.ListPatchJobInstanceDetails));
      serviceBinder.AddMethod(__Method_CreatePatchDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.CreatePatchDeploymentRequest, global::Google.Cloud.Osconfig.V1Beta.PatchDeployment>(serviceImpl.CreatePatchDeployment));
      serviceBinder.AddMethod(__Method_GetPatchDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.GetPatchDeploymentRequest, global::Google.Cloud.Osconfig.V1Beta.PatchDeployment>(serviceImpl.GetPatchDeployment));
      serviceBinder.AddMethod(__Method_ListPatchDeployments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsRequest, global::Google.Cloud.Osconfig.V1Beta.ListPatchDeploymentsResponse>(serviceImpl.ListPatchDeployments));
      serviceBinder.AddMethod(__Method_DeletePatchDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.DeletePatchDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeletePatchDeployment));
      serviceBinder.AddMethod(__Method_CreateGuestPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.CreateGuestPolicyRequest, global::Google.Cloud.Osconfig.V1Beta.GuestPolicy>(serviceImpl.CreateGuestPolicy));
      serviceBinder.AddMethod(__Method_GetGuestPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.GetGuestPolicyRequest, global::Google.Cloud.Osconfig.V1Beta.GuestPolicy>(serviceImpl.GetGuestPolicy));
      serviceBinder.AddMethod(__Method_ListGuestPolicies, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesRequest, global::Google.Cloud.Osconfig.V1Beta.ListGuestPoliciesResponse>(serviceImpl.ListGuestPolicies));
      serviceBinder.AddMethod(__Method_UpdateGuestPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.UpdateGuestPolicyRequest, global::Google.Cloud.Osconfig.V1Beta.GuestPolicy>(serviceImpl.UpdateGuestPolicy));
      serviceBinder.AddMethod(__Method_DeleteGuestPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.DeleteGuestPolicyRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteGuestPolicy));
      serviceBinder.AddMethod(__Method_LookupEffectiveGuestPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Osconfig.V1Beta.LookupEffectiveGuestPolicyRequest, global::Google.Cloud.Osconfig.V1Beta.EffectiveGuestPolicy>(serviceImpl.LookupEffectiveGuestPolicy));
    }

  }
}
#endregion
