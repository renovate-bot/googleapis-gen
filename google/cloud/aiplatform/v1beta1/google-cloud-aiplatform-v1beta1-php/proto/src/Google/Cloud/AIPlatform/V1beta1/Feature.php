<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1beta1/feature.proto

namespace Google\Cloud\AIPlatform\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Feature Metadata information that describes an attribute of an entity type.
 * For example, apple is an entity type, and color is a feature that describes
 * apple.
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1beta1.Feature</code>
 */
class Feature extends \Google\Protobuf\Internal\Message
{
    /**
     * Immutable. Name of the Feature.
     * Format:
     * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
     * The last part feature is assigned by the client. The feature can be up to
     * 64 characters long and can consist only of ASCII Latin letters A-Z and a-z,
     * underscore(_), and ASCII digits 0-9 starting with a letter. The value will
     * be unique given an entity type.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    protected $name = '';
    /**
     * Description of the Feature.
     *
     * Generated from protobuf field <code>string description = 2;</code>
     */
    protected $description = '';
    /**
     * Required. Immutable. Type of Feature value.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1beta1.Feature.ValueType value_type = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     */
    protected $value_type = 0;
    /**
     * Output only. Timestamp when this EntityType was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $create_time = null;
    /**
     * Output only. Timestamp when this EntityType was most recently updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $update_time = null;
    /**
     * Optional. The labels with user-defined metadata to organize your Features.
     * Label keys and values can be no longer than 64 characters
     * (Unicode codepoints), can only contain lowercase letters, numeric
     * characters, underscores and dashes. International characters are allowed.
     * See https://goo.gl/xmQnxf for more information on and examples of labels.
     * No more than 64 user labels can be associated with one Feature (System
     * labels are excluded)."
     * System reserved label keys are prefixed with "aiplatform.googleapis.com/"
     * and are immutable.
     *
     * Generated from protobuf field <code>map<string, string> labels = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $labels;
    /**
     * Used to perform a consistent read-modify-write updates. If not set, a blind
     * "overwrite" update happens.
     *
     * Generated from protobuf field <code>string etag = 7;</code>
     */
    protected $etag = '';
    /**
     * Optional. The custom monitoring configuration for this Feature, if not set, use the
     * monitoring_config defined for the EntityType this Feature belongs to.
     * If this is populated with
     * [FeaturestoreMonitoringConfig.disabled][] = true, snapshot analysis
     * monitoring is disabled; if
     * [FeaturestoreMonitoringConfig.monitoring_interval][] specified, snapshot
     * analysis monitoring is enabled. Otherwise, snapshot analysis monitoring
     * config is same as the EntityType's this Feature belongs to.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1beta1.FeaturestoreMonitoringConfig monitoring_config = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $monitoring_config = null;
    /**
     * Output only. A list of historical [Snapshot
     * Analysis][google.cloud.aiplatform.master.FeaturestoreMonitoringConfig.SnapshotAnalysis]
     * stats requested by user, sorted by [FeatureStatsAnomaly.start_time][google.cloud.aiplatform.v1beta1.FeatureStatsAnomaly.start_time]
     * descending.
     *
     * Generated from protobuf field <code>repeated .google.cloud.aiplatform.v1beta1.FeatureStatsAnomaly monitoring_stats = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $monitoring_stats;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Immutable. Name of the Feature.
     *           Format:
     *           `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
     *           The last part feature is assigned by the client. The feature can be up to
     *           64 characters long and can consist only of ASCII Latin letters A-Z and a-z,
     *           underscore(_), and ASCII digits 0-9 starting with a letter. The value will
     *           be unique given an entity type.
     *     @type string $description
     *           Description of the Feature.
     *     @type int $value_type
     *           Required. Immutable. Type of Feature value.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. Timestamp when this EntityType was created.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. Timestamp when this EntityType was most recently updated.
     *     @type array|\Google\Protobuf\Internal\MapField $labels
     *           Optional. The labels with user-defined metadata to organize your Features.
     *           Label keys and values can be no longer than 64 characters
     *           (Unicode codepoints), can only contain lowercase letters, numeric
     *           characters, underscores and dashes. International characters are allowed.
     *           See https://goo.gl/xmQnxf for more information on and examples of labels.
     *           No more than 64 user labels can be associated with one Feature (System
     *           labels are excluded)."
     *           System reserved label keys are prefixed with "aiplatform.googleapis.com/"
     *           and are immutable.
     *     @type string $etag
     *           Used to perform a consistent read-modify-write updates. If not set, a blind
     *           "overwrite" update happens.
     *     @type \Google\Cloud\AIPlatform\V1beta1\FeaturestoreMonitoringConfig $monitoring_config
     *           Optional. The custom monitoring configuration for this Feature, if not set, use the
     *           monitoring_config defined for the EntityType this Feature belongs to.
     *           If this is populated with
     *           [FeaturestoreMonitoringConfig.disabled][] = true, snapshot analysis
     *           monitoring is disabled; if
     *           [FeaturestoreMonitoringConfig.monitoring_interval][] specified, snapshot
     *           analysis monitoring is enabled. Otherwise, snapshot analysis monitoring
     *           config is same as the EntityType's this Feature belongs to.
     *     @type \Google\Cloud\AIPlatform\V1beta1\FeatureStatsAnomaly[]|\Google\Protobuf\Internal\RepeatedField $monitoring_stats
     *           Output only. A list of historical [Snapshot
     *           Analysis][google.cloud.aiplatform.master.FeaturestoreMonitoringConfig.SnapshotAnalysis]
     *           stats requested by user, sorted by [FeatureStatsAnomaly.start_time][google.cloud.aiplatform.v1beta1.FeatureStatsAnomaly.start_time]
     *           descending.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1Beta1\Feature::initOnce();
        parent::__construct($data);
    }

    /**
     * Immutable. Name of the Feature.
     * Format:
     * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
     * The last part feature is assigned by the client. The feature can be up to
     * 64 characters long and can consist only of ASCII Latin letters A-Z and a-z,
     * underscore(_), and ASCII digits 0-9 starting with a letter. The value will
     * be unique given an entity type.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Immutable. Name of the Feature.
     * Format:
     * `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`
     * The last part feature is assigned by the client. The feature can be up to
     * 64 characters long and can consist only of ASCII Latin letters A-Z and a-z,
     * underscore(_), and ASCII digits 0-9 starting with a letter. The value will
     * be unique given an entity type.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Description of the Feature.
     *
     * Generated from protobuf field <code>string description = 2;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Description of the Feature.
     *
     * Generated from protobuf field <code>string description = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Required. Immutable. Type of Feature value.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1beta1.Feature.ValueType value_type = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return int
     */
    public function getValueType()
    {
        return $this->value_type;
    }

    /**
     * Required. Immutable. Type of Feature value.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1beta1.Feature.ValueType value_type = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param int $var
     * @return $this
     */
    public function setValueType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\AIPlatform\V1beta1\Feature\ValueType::class);
        $this->value_type = $var;

        return $this;
    }

    /**
     * Output only. Timestamp when this EntityType was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return isset($this->create_time) ? $this->create_time : null;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. Timestamp when this EntityType was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * Output only. Timestamp when this EntityType was most recently updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return isset($this->update_time) ? $this->update_time : null;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. Timestamp when this EntityType was most recently updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Optional. The labels with user-defined metadata to organize your Features.
     * Label keys and values can be no longer than 64 characters
     * (Unicode codepoints), can only contain lowercase letters, numeric
     * characters, underscores and dashes. International characters are allowed.
     * See https://goo.gl/xmQnxf for more information on and examples of labels.
     * No more than 64 user labels can be associated with one Feature (System
     * labels are excluded)."
     * System reserved label keys are prefixed with "aiplatform.googleapis.com/"
     * and are immutable.
     *
     * Generated from protobuf field <code>map<string, string> labels = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * Optional. The labels with user-defined metadata to organize your Features.
     * Label keys and values can be no longer than 64 characters
     * (Unicode codepoints), can only contain lowercase letters, numeric
     * characters, underscores and dashes. International characters are allowed.
     * See https://goo.gl/xmQnxf for more information on and examples of labels.
     * No more than 64 user labels can be associated with one Feature (System
     * labels are excluded)."
     * System reserved label keys are prefixed with "aiplatform.googleapis.com/"
     * and are immutable.
     *
     * Generated from protobuf field <code>map<string, string> labels = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setLabels($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;

        return $this;
    }

    /**
     * Used to perform a consistent read-modify-write updates. If not set, a blind
     * "overwrite" update happens.
     *
     * Generated from protobuf field <code>string etag = 7;</code>
     * @return string
     */
    public function getEtag()
    {
        return $this->etag;
    }

    /**
     * Used to perform a consistent read-modify-write updates. If not set, a blind
     * "overwrite" update happens.
     *
     * Generated from protobuf field <code>string etag = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setEtag($var)
    {
        GPBUtil::checkString($var, True);
        $this->etag = $var;

        return $this;
    }

    /**
     * Optional. The custom monitoring configuration for this Feature, if not set, use the
     * monitoring_config defined for the EntityType this Feature belongs to.
     * If this is populated with
     * [FeaturestoreMonitoringConfig.disabled][] = true, snapshot analysis
     * monitoring is disabled; if
     * [FeaturestoreMonitoringConfig.monitoring_interval][] specified, snapshot
     * analysis monitoring is enabled. Otherwise, snapshot analysis monitoring
     * config is same as the EntityType's this Feature belongs to.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1beta1.FeaturestoreMonitoringConfig monitoring_config = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\AIPlatform\V1beta1\FeaturestoreMonitoringConfig|null
     */
    public function getMonitoringConfig()
    {
        return isset($this->monitoring_config) ? $this->monitoring_config : null;
    }

    public function hasMonitoringConfig()
    {
        return isset($this->monitoring_config);
    }

    public function clearMonitoringConfig()
    {
        unset($this->monitoring_config);
    }

    /**
     * Optional. The custom monitoring configuration for this Feature, if not set, use the
     * monitoring_config defined for the EntityType this Feature belongs to.
     * If this is populated with
     * [FeaturestoreMonitoringConfig.disabled][] = true, snapshot analysis
     * monitoring is disabled; if
     * [FeaturestoreMonitoringConfig.monitoring_interval][] specified, snapshot
     * analysis monitoring is enabled. Otherwise, snapshot analysis monitoring
     * config is same as the EntityType's this Feature belongs to.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1beta1.FeaturestoreMonitoringConfig monitoring_config = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\AIPlatform\V1beta1\FeaturestoreMonitoringConfig $var
     * @return $this
     */
    public function setMonitoringConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\AIPlatform\V1beta1\FeaturestoreMonitoringConfig::class);
        $this->monitoring_config = $var;

        return $this;
    }

    /**
     * Output only. A list of historical [Snapshot
     * Analysis][google.cloud.aiplatform.master.FeaturestoreMonitoringConfig.SnapshotAnalysis]
     * stats requested by user, sorted by [FeatureStatsAnomaly.start_time][google.cloud.aiplatform.v1beta1.FeatureStatsAnomaly.start_time]
     * descending.
     *
     * Generated from protobuf field <code>repeated .google.cloud.aiplatform.v1beta1.FeatureStatsAnomaly monitoring_stats = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMonitoringStats()
    {
        return $this->monitoring_stats;
    }

    /**
     * Output only. A list of historical [Snapshot
     * Analysis][google.cloud.aiplatform.master.FeaturestoreMonitoringConfig.SnapshotAnalysis]
     * stats requested by user, sorted by [FeatureStatsAnomaly.start_time][google.cloud.aiplatform.v1beta1.FeatureStatsAnomaly.start_time]
     * descending.
     *
     * Generated from protobuf field <code>repeated .google.cloud.aiplatform.v1beta1.FeatureStatsAnomaly monitoring_stats = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Cloud\AIPlatform\V1beta1\FeatureStatsAnomaly[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMonitoringStats($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\AIPlatform\V1beta1\FeatureStatsAnomaly::class);
        $this->monitoring_stats = $arr;

        return $this;
    }

}

