// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/domains/v1beta1/domains.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Domains.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/domains/v1beta1/domains.proto</summary>
  public static partial class DomainsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/domains/v1beta1/domains.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DomainsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cipnb29nbGUvY2xvdWQvZG9tYWlucy92MWJldGExL2RvbWFpbnMucHJvdG8S",
            "HGdvb2dsZS5jbG91ZC5kb21haW5zLnYxYmV0YTEaHGdvb2dsZS9hcGkvYW5u",
            "b3RhdGlvbnMucHJvdG8aF2dvb2dsZS9hcGkvY2xpZW50LnByb3RvGh9nb29n",
            "bGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291",
            "cmNlLnByb3RvGiNnb29nbGUvbG9uZ3J1bm5pbmcvb3BlcmF0aW9ucy5wcm90",
            "bxogZ29vZ2xlL3Byb3RvYnVmL2ZpZWxkX21hc2sucHJvdG8aH2dvb2dsZS9w",
            "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8aF2dvb2dsZS90eXBlL21vbmV5LnBy",
            "b3RvGiBnb29nbGUvdHlwZS9wb3N0YWxfYWRkcmVzcy5wcm90byLnCAoMUmVn",
            "aXN0cmF0aW9uEhEKBG5hbWUYASABKAlCA+BBAxIbCgtkb21haW5fbmFtZRgC",
            "IAEoCUIG4EEC4EEFEjQKC2NyZWF0ZV90aW1lGAMgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC2V4cGlyZV90aW1lGAYgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEkQKBXN0YXRlGAcgASgO",
            "MjAuZ29vZ2xlLmNsb3VkLmRvbWFpbnMudjFiZXRhMS5SZWdpc3RyYXRpb24u",
            "U3RhdGVCA+BBAxJFCgZpc3N1ZXMYCCADKA4yMC5nb29nbGUuY2xvdWQuZG9t",
            "YWlucy52MWJldGExLlJlZ2lzdHJhdGlvbi5Jc3N1ZUID4EEDEkYKBmxhYmVs",
            "cxgJIAMoCzI2Lmdvb2dsZS5jbG91ZC5kb21haW5zLnYxYmV0YTEuUmVnaXN0",
            "cmF0aW9uLkxhYmVsc0VudHJ5Ek0KE21hbmFnZW1lbnRfc2V0dGluZ3MYCiAB",
            "KAsyMC5nb29nbGUuY2xvdWQuZG9tYWlucy52MWJldGExLk1hbmFnZW1lbnRT",
            "ZXR0aW5ncxI/CgxkbnNfc2V0dGluZ3MYCyABKAsyKS5nb29nbGUuY2xvdWQu",
            "ZG9tYWlucy52MWJldGExLkRuc1NldHRpbmdzEkwKEGNvbnRhY3Rfc2V0dGlu",
            "Z3MYDCABKAsyLS5nb29nbGUuY2xvdWQuZG9tYWlucy52MWJldGExLkNvbnRh",
            "Y3RTZXR0aW5nc0ID4EECElQKGHBlbmRpbmdfY29udGFjdF9zZXR0aW5ncxgN",
            "IAEoCzItLmdvb2dsZS5jbG91ZC5kb21haW5zLnYxYmV0YTEuQ29udGFjdFNl",
            "dHRpbmdzQgPgQQMSTAoRc3VwcG9ydGVkX3ByaXZhY3kYDiADKA4yLC5nb29n",
            "bGUuY2xvdWQuZG9tYWlucy52MWJldGExLkNvbnRhY3RQcml2YWN5QgPgQQMa",
            "LQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4",
            "ASJ6CgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEhgKFFJFR0lTVFJB",
            "VElPTl9QRU5ESU5HEAESFwoTUkVHSVNUUkFUSU9OX0ZBSUxFRBACEgoKBkFD",
            "VElWRRAGEg0KCVNVU1BFTkRFRBAHEgwKCEVYUE9SVEVEEAgiSQoFSXNzdWUS",
            "FQoRSVNTVUVfVU5TUEVDSUZJRUQQABITCg9DT05UQUNUX1NVUFBPUlQQARIU",
            "ChBVTlZFUklGSUVEX0VNQUlMEAI6bupBawojZG9tYWlucy5nb29nbGVhcGlz",
            "LmNvbS9SZWdpc3RyYXRpb24SRHByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlv",
            "bnMve2xvY2F0aW9ufS9yZWdpc3RyYXRpb25zL3tyZWdpc3RyYXRpb259IpsC",
            "ChJNYW5hZ2VtZW50U2V0dGluZ3MSWwoOcmVuZXdhbF9tZXRob2QYAyABKA4y",
            "Pi5nb29nbGUuY2xvdWQuZG9tYWlucy52MWJldGExLk1hbmFnZW1lbnRTZXR0",
            "aW5ncy5SZW5ld2FsTWV0aG9kQgPgQQMSTAoTdHJhbnNmZXJfbG9ja19zdGF0",
            "ZRgEIAEoDjIvLmdvb2dsZS5jbG91ZC5kb21haW5zLnYxYmV0YTEuVHJhbnNm",
            "ZXJMb2NrU3RhdGUiWgoNUmVuZXdhbE1ldGhvZBIeChpSRU5FV0FMX01FVEhP",
            "RF9VTlNQRUNJRklFRBAAEhUKEUFVVE9NQVRJQ19SRU5FV0FMEAESEgoOTUFO",
            "VUFMX1JFTkVXQUwQAiKBCgoLRG5zU2V0dGluZ3MSSQoKY3VzdG9tX2RucxgB",
            "IAEoCzIzLmdvb2dsZS5jbG91ZC5kb21haW5zLnYxYmV0YTEuRG5zU2V0dGlu",
            "Z3MuQ3VzdG9tRG5zSAASWAoSZ29vZ2xlX2RvbWFpbnNfZG5zGAIgASgLMjou",
            "Z29vZ2xlLmNsb3VkLmRvbWFpbnMudjFiZXRhMS5EbnNTZXR0aW5ncy5Hb29n",
            "bGVEb21haW5zRG5zSAASSgoMZ2x1ZV9yZWNvcmRzGAQgAygLMjQuZ29vZ2xl",
            "LmNsb3VkLmRvbWFpbnMudjFiZXRhMS5EbnNTZXR0aW5ncy5HbHVlUmVjb3Jk",
            "Gm4KCUN1c3RvbURucxIZCgxuYW1lX3NlcnZlcnMYASADKAlCA+BBAhJGCgpk",
            "c19yZWNvcmRzGAIgAygLMjIuZ29vZ2xlLmNsb3VkLmRvbWFpbnMudjFiZXRh",
            "MS5EbnNTZXR0aW5ncy5Ec1JlY29yZBrEAQoQR29vZ2xlRG9tYWluc0RucxIZ",
            "CgxuYW1lX3NlcnZlcnMYASADKAlCA+BBAxJICghkc19zdGF0ZRgCIAEoDjIx",
            "Lmdvb2dsZS5jbG91ZC5kb21haW5zLnYxYmV0YTEuRG5zU2V0dGluZ3MuRHNT",
            "dGF0ZUID4EECEksKCmRzX3JlY29yZHMYAyADKAsyMi5nb29nbGUuY2xvdWQu",
            "ZG9tYWlucy52MWJldGExLkRuc1NldHRpbmdzLkRzUmVjb3JkQgPgQQMaiAQK",
            "CERzUmVjb3JkEg8KB2tleV90YWcYASABKAUSTwoJYWxnb3JpdGhtGAIgASgO",
            "MjwuZ29vZ2xlLmNsb3VkLmRvbWFpbnMudjFiZXRhMS5EbnNTZXR0aW5ncy5E",
            "c1JlY29yZC5BbGdvcml0aG0SUgoLZGlnZXN0X3R5cGUYAyABKA4yPS5nb29n",
            "bGUuY2xvdWQuZG9tYWlucy52MWJldGExLkRuc1NldHRpbmdzLkRzUmVjb3Jk",
            "LkRpZ2VzdFR5cGUSDgoGZGlnZXN0GAQgASgJItoBCglBbGdvcml0aG0SGQoV",
            "QUxHT1JJVEhNX1VOU1BFQ0lGSUVEEAASBwoDRFNBEAMSBwoDRUNDEAQSCwoH",
            "UlNBU0hBMRAFEhAKDERTQU5TRUMzU0hBMRAGEhQKEFJTQVNIQTFOU0VDM1NI",
            "QTEQBxINCglSU0FTSEEyNTYQCBINCglSU0FTSEE1MTIQChILCgdFQ0NHT1NU",
            "EAwSEwoPRUNEU0FQMjU2U0hBMjU2EA0SEwoPRUNEU0FQMzg0U0hBMzg0EA4S",
            "CwoHRUQyNTUxORAPEgkKBUVENDQ4EBAiWQoKRGlnZXN0VHlwZRIbChdESUdF",
            "U1RfVFlQRV9VTlNQRUNJRklFRBAAEggKBFNIQTEQARIKCgZTSEEyNTYQAhIM",
            "CghHT1NUMzQxMRADEgoKBlNIQTM4NBAEGlQKCkdsdWVSZWNvcmQSFgoJaG9z",
            "dF9uYW1lGAEgASgJQgPgQQISFgoOaXB2NF9hZGRyZXNzZXMYAiADKAkSFgoO",
            "aXB2Nl9hZGRyZXNzZXMYAyADKAkiWQoHRHNTdGF0ZRIYChREU19TVEFURV9V",
            "TlNQRUNJRklFRBAAEhoKFkRTX1JFQ09SRFNfVU5QVUJMSVNIRUQQARIYChRE",
            "U19SRUNPUkRTX1BVQkxJU0hFRBACQg4KDGRuc19wcm92aWRlciLfAwoPQ29u",
            "dGFjdFNldHRpbmdzEkIKB3ByaXZhY3kYASABKA4yLC5nb29nbGUuY2xvdWQu",
            "ZG9tYWlucy52MWJldGExLkNvbnRhY3RQcml2YWN5QgPgQQISVgoScmVnaXN0",
            "cmFudF9jb250YWN0GAIgASgLMjUuZ29vZ2xlLmNsb3VkLmRvbWFpbnMudjFi",
            "ZXRhMS5Db250YWN0U2V0dGluZ3MuQ29udGFjdEID4EECElEKDWFkbWluX2Nv",
            "bnRhY3QYAyABKAsyNS5nb29nbGUuY2xvdWQuZG9tYWlucy52MWJldGExLkNv",
            "bnRhY3RTZXR0aW5ncy5Db250YWN0QgPgQQISVQoRdGVjaG5pY2FsX2NvbnRh",
            "Y3QYBCABKAsyNS5nb29nbGUuY2xvdWQuZG9tYWlucy52MWJldGExLkNvbnRh",
            "Y3RTZXR0aW5ncy5Db250YWN0QgPgQQIahQEKB0NvbnRhY3QSNwoOcG9zdGFs",
            "X2FkZHJlc3MYASABKAsyGi5nb29nbGUudHlwZS5Qb3N0YWxBZGRyZXNzQgPg",
            "QQISEgoFZW1haWwYAiABKAlCA+BBAhIZCgxwaG9uZV9udW1iZXIYAyABKAlC",
            "A+BBAhISCgpmYXhfbnVtYmVyGAQgASgJImcKFFNlYXJjaERvbWFpbnNSZXF1",
            "ZXN0EhIKBXF1ZXJ5GAEgASgJQgPgQQISOwoIbG9jYXRpb24YAiABKAlCKeBB",
            "AvpBIwohbG9jYXRpb25zLmdvb2dsZWFwaXMuY29tL0xvY2F0aW9uImYKFVNl",
            "YXJjaERvbWFpbnNSZXNwb25zZRJNChNyZWdpc3Rlcl9wYXJhbWV0ZXJzGAEg",
            "AygLMjAuZ29vZ2xlLmNsb3VkLmRvbWFpbnMudjFiZXRhMS5SZWdpc3RlclBh",
            "cmFtZXRlcnMiegohUmV0cmlldmVSZWdpc3RlclBhcmFtZXRlcnNSZXF1ZXN0",
            "EhgKC2RvbWFpbl9uYW1lGAEgASgJQgPgQQISOwoIbG9jYXRpb24YAiABKAlC",
            "KeBBAvpBIwohbG9jYXRpb25zLmdvb2dsZWFwaXMuY29tL0xvY2F0aW9uInMK",
            "IlJldHJpZXZlUmVnaXN0ZXJQYXJhbWV0ZXJzUmVzcG9uc2USTQoTcmVnaXN0",
            "ZXJfcGFyYW1ldGVycxgBIAEoCzIwLmdvb2dsZS5jbG91ZC5kb21haW5zLnYx",
            "YmV0YTEuUmVnaXN0ZXJQYXJhbWV0ZXJzIukCChVSZWdpc3RlckRvbWFpblJl",
            "cXVlc3QSOQoGcGFyZW50GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29n",
            "bGVhcGlzLmNvbS9Mb2NhdGlvbhJFCgxyZWdpc3RyYXRpb24YAiABKAsyKi5n",
            "b29nbGUuY2xvdWQuZG9tYWlucy52MWJldGExLlJlZ2lzdHJhdGlvbkID4EEC",
            "EkIKDmRvbWFpbl9ub3RpY2VzGAMgAygOMiouZ29vZ2xlLmNsb3VkLmRvbWFp",
            "bnMudjFiZXRhMS5Eb21haW5Ob3RpY2USRAoPY29udGFjdF9ub3RpY2VzGAQg",
            "AygOMisuZ29vZ2xlLmNsb3VkLmRvbWFpbnMudjFiZXRhMS5Db250YWN0Tm90",
            "aWNlEi0KDHllYXJseV9wcmljZRgFIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5",
            "QgPgQQISFQoNdmFsaWRhdGVfb25seRgGIAEoCCKMAQoYTGlzdFJlZ2lzdHJh",
            "dGlvbnNSZXF1ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjCiFsb2NhdGlv",
            "bnMuZ29vZ2xlYXBpcy5jb20vTG9jYXRpb24SEQoJcGFnZV9zaXplGAIgASgF",
            "EhIKCnBhZ2VfdG9rZW4YAyABKAkSDgoGZmlsdGVyGAQgASgJIncKGUxpc3RS",
            "ZWdpc3RyYXRpb25zUmVzcG9uc2USQQoNcmVnaXN0cmF0aW9ucxgBIAMoCzIq",
            "Lmdvb2dsZS5jbG91ZC5kb21haW5zLnYxYmV0YTEuUmVnaXN0cmF0aW9uEhcK",
            "D25leHRfcGFnZV90b2tlbhgCIAEoCSJTChZHZXRSZWdpc3RyYXRpb25SZXF1",
            "ZXN0EjkKBG5hbWUYASABKAlCK+BBAvpBJQojZG9tYWlucy5nb29nbGVhcGlz",
            "LmNvbS9SZWdpc3RyYXRpb24ikwEKGVVwZGF0ZVJlZ2lzdHJhdGlvblJlcXVl",
            "c3QSQAoMcmVnaXN0cmF0aW9uGAEgASgLMiouZ29vZ2xlLmNsb3VkLmRvbWFp",
            "bnMudjFiZXRhMS5SZWdpc3RyYXRpb24SNAoLdXBkYXRlX21hc2sYAiABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrQgPgQQIi7AEKIkNvbmZpZ3Vy",
            "ZU1hbmFnZW1lbnRTZXR0aW5nc1JlcXVlc3QSQQoMcmVnaXN0cmF0aW9uGAEg",
            "ASgJQivgQQL6QSUKI2RvbWFpbnMuZ29vZ2xlYXBpcy5jb20vUmVnaXN0cmF0",
            "aW9uEk0KE21hbmFnZW1lbnRfc2V0dGluZ3MYAiABKAsyMC5nb29nbGUuY2xv",
            "dWQuZG9tYWlucy52MWJldGExLk1hbmFnZW1lbnRTZXR0aW5ncxI0Cgt1cGRh",
            "dGVfbWFzaxgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2tCA+BB",
            "AiLuAQobQ29uZmlndXJlRG5zU2V0dGluZ3NSZXF1ZXN0EkEKDHJlZ2lzdHJh",
            "dGlvbhgBIAEoCUIr4EEC+kElCiNkb21haW5zLmdvb2dsZWFwaXMuY29tL1Jl",
            "Z2lzdHJhdGlvbhI/CgxkbnNfc2V0dGluZ3MYAiABKAsyKS5nb29nbGUuY2xv",
            "dWQuZG9tYWlucy52MWJldGExLkRuc1NldHRpbmdzEjQKC3VwZGF0ZV9tYXNr",
            "GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFza0ID4EECEhUKDXZh",
            "bGlkYXRlX29ubHkYBCABKAgiwAIKH0NvbmZpZ3VyZUNvbnRhY3RTZXR0aW5n",
            "c1JlcXVlc3QSQQoMcmVnaXN0cmF0aW9uGAEgASgJQivgQQL6QSUKI2RvbWFp",
            "bnMuZ29vZ2xlYXBpcy5jb20vUmVnaXN0cmF0aW9uEkcKEGNvbnRhY3Rfc2V0",
            "dGluZ3MYAiABKAsyLS5nb29nbGUuY2xvdWQuZG9tYWlucy52MWJldGExLkNv",
            "bnRhY3RTZXR0aW5ncxI0Cgt1cGRhdGVfbWFzaxgDIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5GaWVsZE1hc2tCA+BBAhJECg9jb250YWN0X25vdGljZXMYBCAD",
            "KA4yKy5nb29nbGUuY2xvdWQuZG9tYWlucy52MWJldGExLkNvbnRhY3ROb3Rp",
            "Y2USFQoNdmFsaWRhdGVfb25seRgFIAEoCCJWChlFeHBvcnRSZWdpc3RyYXRp",
            "b25SZXF1ZXN0EjkKBG5hbWUYASABKAlCK+BBAvpBJQojZG9tYWlucy5nb29n",
            "bGVhcGlzLmNvbS9SZWdpc3RyYXRpb24iVgoZRGVsZXRlUmVnaXN0cmF0aW9u",
            "UmVxdWVzdBI5CgRuYW1lGAEgASgJQivgQQL6QSUKI2RvbWFpbnMuZ29vZ2xl",
            "YXBpcy5jb20vUmVnaXN0cmF0aW9uImUKIFJldHJpZXZlQXV0aG9yaXphdGlv",
            "bkNvZGVSZXF1ZXN0EkEKDHJlZ2lzdHJhdGlvbhgBIAEoCUIr4EEC+kElCiNk",
            "b21haW5zLmdvb2dsZWFwaXMuY29tL1JlZ2lzdHJhdGlvbiJiCh1SZXNldEF1",
            "dGhvcml6YXRpb25Db2RlUmVxdWVzdBJBCgxyZWdpc3RyYXRpb24YASABKAlC",
            "K+BBAvpBJQojZG9tYWlucy5nb29nbGVhcGlzLmNvbS9SZWdpc3RyYXRpb24i",
            "oQMKElJlZ2lzdGVyUGFyYW1ldGVycxITCgtkb21haW5fbmFtZRgBIAEoCRJT",
            "CgxhdmFpbGFiaWxpdHkYAiABKA4yPS5nb29nbGUuY2xvdWQuZG9tYWlucy52",
            "MWJldGExLlJlZ2lzdGVyUGFyYW1ldGVycy5BdmFpbGFiaWxpdHkSRwoRc3Vw",
            "cG9ydGVkX3ByaXZhY3kYAyADKA4yLC5nb29nbGUuY2xvdWQuZG9tYWlucy52",
            "MWJldGExLkNvbnRhY3RQcml2YWN5EkIKDmRvbWFpbl9ub3RpY2VzGAQgAygO",
            "MiouZ29vZ2xlLmNsb3VkLmRvbWFpbnMudjFiZXRhMS5Eb21haW5Ob3RpY2US",
            "KAoMeWVhcmx5X3ByaWNlGAUgASgLMhIuZ29vZ2xlLnR5cGUuTW9uZXkiagoM",
            "QXZhaWxhYmlsaXR5EhwKGEFWQUlMQUJJTElUWV9VTlNQRUNJRklFRBAAEg0K",
            "CUFWQUlMQUJMRRABEg8KC1VOQVZBSUxBQkxFEAISDwoLVU5TVVBQT1JURUQQ",
            "AxILCgdVTktOT1dOEAQiIQoRQXV0aG9yaXphdGlvbkNvZGUSDAoEY29kZRgB",
            "IAEoCSK8AQoRT3BlcmF0aW9uTWV0YWRhdGESLwoLY3JlYXRlX3RpbWUYASAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAIg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIOCgZ0YXJnZXQYAyAB",
            "KAkSDAoEdmVyYhgEIAEoCRIVCg1zdGF0dXNfZGV0YWlsGAUgASgJEhMKC2Fw",
            "aV92ZXJzaW9uGAYgASgJKn8KDkNvbnRhY3RQcml2YWN5Eh8KG0NPTlRBQ1Rf",
            "UFJJVkFDWV9VTlNQRUNJRklFRBAAEhcKE1BVQkxJQ19DT05UQUNUX0RBVEEQ",
            "ARIYChRQUklWQVRFX0NPTlRBQ1RfREFUQRACEhkKFVJFREFDVEVEX0NPTlRB",
            "Q1RfREFUQRADKkEKDERvbWFpbk5vdGljZRIdChlET01BSU5fTk9USUNFX1VO",
            "U1BFQ0lGSUVEEAASEgoOSFNUU19QUkVMT0FERUQQASpYCg1Db250YWN0Tm90",
            "aWNlEh4KGkNPTlRBQ1RfTk9USUNFX1VOU1BFQ0lGSUVEEAASJwojUFVCTElD",
            "X0NPTlRBQ1RfREFUQV9BQ0tOT1dMRURHRU1FTlQQASpSChFUcmFuc2Zlckxv",
            "Y2tTdGF0ZRIjCh9UUkFOU0ZFUl9MT0NLX1NUQVRFX1VOU1BFQ0lGSUVEEAAS",
            "DAoIVU5MT0NLRUQQARIKCgZMT0NLRUQQAjKmGgoHRG9tYWlucxLZAQoNU2Vh",
            "cmNoRG9tYWlucxIyLmdvb2dsZS5jbG91ZC5kb21haW5zLnYxYmV0YTEuU2Vh",
            "cmNoRG9tYWluc1JlcXVlc3QaMy5nb29nbGUuY2xvdWQuZG9tYWlucy52MWJl",
            "dGExLlNlYXJjaERvbWFpbnNSZXNwb25zZSJfgtPkkwJIEkYvdjFiZXRhMS97",
            "bG9jYXRpb249cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vcmVnaXN0cmF0aW9u",
            "czpzZWFyY2hEb21haW5z2kEObG9jYXRpb24scXVlcnkSkwIKGlJldHJpZXZl",
            "UmVnaXN0ZXJQYXJhbWV0ZXJzEj8uZ29vZ2xlLmNsb3VkLmRvbWFpbnMudjFi",
            "ZXRhMS5SZXRyaWV2ZVJlZ2lzdGVyUGFyYW1ldGVyc1JlcXVlc3QaQC5nb29n",
            "bGUuY2xvdWQuZG9tYWlucy52MWJldGExLlJldHJpZXZlUmVnaXN0ZXJQYXJh",
            "bWV0ZXJzUmVzcG9uc2UicoLT5JMCVRJTL3YxYmV0YTEve2xvY2F0aW9uPXBy",
            "b2plY3RzLyovbG9jYXRpb25zLyp9L3JlZ2lzdHJhdGlvbnM6cmV0cmlldmVS",
            "ZWdpc3RlclBhcmFtZXRlcnPaQRRsb2NhdGlvbixkb21haW5fbmFtZRL4AQoO",
            "UmVnaXN0ZXJEb21haW4SMy5nb29nbGUuY2xvdWQuZG9tYWlucy52MWJldGEx",
            "LlJlZ2lzdGVyRG9tYWluUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5P",
            "cGVyYXRpb24ikQGC0+STAkQiPy92MWJldGExL3twYXJlbnQ9cHJvamVjdHMv",
            "Ki9sb2NhdGlvbnMvKn0vcmVnaXN0cmF0aW9uczpyZWdpc3RlcjoBKtpBIHBh",
            "cmVudCxyZWdpc3RyYXRpb24seWVhcmx5X3ByaWNlykEhCgxSZWdpc3RyYXRp",
            "b24SEU9wZXJhdGlvbk1ldGFkYXRhEs0BChFMaXN0UmVnaXN0cmF0aW9ucxI2",
            "Lmdvb2dsZS5jbG91ZC5kb21haW5zLnYxYmV0YTEuTGlzdFJlZ2lzdHJhdGlv",
            "bnNSZXF1ZXN0GjcuZ29vZ2xlLmNsb3VkLmRvbWFpbnMudjFiZXRhMS5MaXN0",
            "UmVnaXN0cmF0aW9uc1Jlc3BvbnNlIkeC0+STAjgSNi92MWJldGExL3twYXJl",
            "bnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vcmVnaXN0cmF0aW9uc9pBBnBh",
            "cmVudBK6AQoPR2V0UmVnaXN0cmF0aW9uEjQuZ29vZ2xlLmNsb3VkLmRvbWFp",
            "bnMudjFiZXRhMS5HZXRSZWdpc3RyYXRpb25SZXF1ZXN0GiouZ29vZ2xlLmNs",
            "b3VkLmRvbWFpbnMudjFiZXRhMS5SZWdpc3RyYXRpb24iRYLT5JMCOBI2L3Yx",
            "YmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9yZWdpc3RyYXRp",
            "b25zLyp92kEEbmFtZRKHAgoSVXBkYXRlUmVnaXN0cmF0aW9uEjcuZ29vZ2xl",
            "LmNsb3VkLmRvbWFpbnMudjFiZXRhMS5VcGRhdGVSZWdpc3RyYXRpb25SZXF1",
            "ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKYAYLT5JMCUzJD",
            "L3YxYmV0YTEve3JlZ2lzdHJhdGlvbi5uYW1lPXByb2plY3RzLyovbG9jYXRp",
            "b25zLyovcmVnaXN0cmF0aW9ucy8qfToMcmVnaXN0cmF0aW9u2kEYcmVnaXN0",
            "cmF0aW9uLHVwZGF0ZV9tYXNrykEhCgxSZWdpc3RyYXRpb24SEU9wZXJhdGlv",
            "bk1ldGFkYXRhErkCChtDb25maWd1cmVNYW5hZ2VtZW50U2V0dGluZ3MSQC5n",
            "b29nbGUuY2xvdWQuZG9tYWlucy52MWJldGExLkNvbmZpZ3VyZU1hbmFnZW1l",
            "bnRTZXR0aW5nc1JlcXVlc3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0",
            "aW9uIrgBgtPkkwJfIlovdjFiZXRhMS97cmVnaXN0cmF0aW9uPXByb2plY3Rz",
            "LyovbG9jYXRpb25zLyovcmVnaXN0cmF0aW9ucy8qfTpjb25maWd1cmVNYW5h",
            "Z2VtZW50U2V0dGluZ3M6ASraQSxyZWdpc3RyYXRpb24sbWFuYWdlbWVudF9z",
            "ZXR0aW5ncyx1cGRhdGVfbWFza8pBIQoMUmVnaXN0cmF0aW9uEhFPcGVyYXRp",
            "b25NZXRhZGF0YRKdAgoUQ29uZmlndXJlRG5zU2V0dGluZ3MSOS5nb29nbGUu",
            "Y2xvdWQuZG9tYWlucy52MWJldGExLkNvbmZpZ3VyZURuc1NldHRpbmdzUmVx",
            "dWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iqgGC0+STAlgi",
            "Uy92MWJldGExL3tyZWdpc3RyYXRpb249cHJvamVjdHMvKi9sb2NhdGlvbnMv",
            "Ki9yZWdpc3RyYXRpb25zLyp9OmNvbmZpZ3VyZURuc1NldHRpbmdzOgEq2kEl",
            "cmVnaXN0cmF0aW9uLGRuc19zZXR0aW5ncyx1cGRhdGVfbWFza8pBIQoMUmVn",
            "aXN0cmF0aW9uEhFPcGVyYXRpb25NZXRhZGF0YRKtAgoYQ29uZmlndXJlQ29u",
            "dGFjdFNldHRpbmdzEj0uZ29vZ2xlLmNsb3VkLmRvbWFpbnMudjFiZXRhMS5D",
            "b25maWd1cmVDb250YWN0U2V0dGluZ3NSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdy",
            "dW5uaW5nLk9wZXJhdGlvbiKyAYLT5JMCXCJXL3YxYmV0YTEve3JlZ2lzdHJh",
            "dGlvbj1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3JlZ2lzdHJhdGlvbnMvKn06",
            "Y29uZmlndXJlQ29udGFjdFNldHRpbmdzOgEq2kEpcmVnaXN0cmF0aW9uLGNv",
            "bnRhY3Rfc2V0dGluZ3MsdXBkYXRlX21hc2vKQSEKDFJlZ2lzdHJhdGlvbhIR",
            "T3BlcmF0aW9uTWV0YWRhdGES4QEKEkV4cG9ydFJlZ2lzdHJhdGlvbhI3Lmdv",
            "b2dsZS5jbG91ZC5kb21haW5zLnYxYmV0YTEuRXhwb3J0UmVnaXN0cmF0aW9u",
            "UmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24ic4LT5JMC",
            "QiI9L3YxYmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9yZWdp",
            "c3RyYXRpb25zLyp9OmV4cG9ydDoBKtpBBG5hbWXKQSEKDFJlZ2lzdHJhdGlv",
            "bhIRT3BlcmF0aW9uTWV0YWRhdGES4AEKEkRlbGV0ZVJlZ2lzdHJhdGlvbhI3",
            "Lmdvb2dsZS5jbG91ZC5kb21haW5zLnYxYmV0YTEuRGVsZXRlUmVnaXN0cmF0",
            "aW9uUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24icoLT",
            "5JMCOCo2L3YxYmV0YTEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9y",
            "ZWdpc3RyYXRpb25zLyp92kEEbmFtZcpBKgoVZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5EhFPcGVyYXRpb25NZXRhZGF0YRL9AQoZUmV0cmlldmVBdXRob3JpemF0",
            "aW9uQ29kZRI+Lmdvb2dsZS5jbG91ZC5kb21haW5zLnYxYmV0YTEuUmV0cmll",
            "dmVBdXRob3JpemF0aW9uQ29kZVJlcXVlc3QaLy5nb29nbGUuY2xvdWQuZG9t",
            "YWlucy52MWJldGExLkF1dGhvcml6YXRpb25Db2RlIm+C0+STAloSWC92MWJl",
            "dGExL3tyZWdpc3RyYXRpb249cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9yZWdp",
            "c3RyYXRpb25zLyp9OnJldHJpZXZlQXV0aG9yaXphdGlvbkNvZGXaQQxyZWdp",
            "c3RyYXRpb24S9wEKFlJlc2V0QXV0aG9yaXphdGlvbkNvZGUSOy5nb29nbGUu",
            "Y2xvdWQuZG9tYWlucy52MWJldGExLlJlc2V0QXV0aG9yaXphdGlvbkNvZGVS",
            "ZXF1ZXN0Gi8uZ29vZ2xlLmNsb3VkLmRvbWFpbnMudjFiZXRhMS5BdXRob3Jp",
            "emF0aW9uQ29kZSJvgtPkkwJaIlUvdjFiZXRhMS97cmVnaXN0cmF0aW9uPXBy",
            "b2plY3RzLyovbG9jYXRpb25zLyovcmVnaXN0cmF0aW9ucy8qfTpyZXNldEF1",
            "dGhvcml6YXRpb25Db2RlOgEq2kEMcmVnaXN0cmF0aW9uGkrKQRZkb21haW5z",
            "Lmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20v",
            "YXV0aC9jbG91ZC1wbGF0Zm9ybUJ3CiBjb20uZ29vZ2xlLmNsb3VkLmRvbWFp",
            "bnMudjFiZXRhMUIMRG9tYWluc1Byb3RvUAFaQ2dvb2dsZS5nb2xhbmcub3Jn",
            "L2dlbnByb3RvL2dvb2dsZWFwaXMvY2xvdWQvZG9tYWlucy92MWJldGExO2Rv",
            "bWFpbnNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Type.MoneyReflection.Descriptor, global::Google.Type.PostalAddressReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Domains.V1Beta1.ContactPrivacy), typeof(global::Google.Cloud.Domains.V1Beta1.DomainNotice), typeof(global::Google.Cloud.Domains.V1Beta1.ContactNotice), typeof(global::Google.Cloud.Domains.V1Beta1.TransferLockState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.Registration), global::Google.Cloud.Domains.V1Beta1.Registration.Parser, new[]{ "Name", "DomainName", "CreateTime", "ExpireTime", "State", "Issues", "Labels", "ManagementSettings", "DnsSettings", "ContactSettings", "PendingContactSettings", "SupportedPrivacy" }, null, new[]{ typeof(global::Google.Cloud.Domains.V1Beta1.Registration.Types.State), typeof(global::Google.Cloud.Domains.V1Beta1.Registration.Types.Issue) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.ManagementSettings), global::Google.Cloud.Domains.V1Beta1.ManagementSettings.Parser, new[]{ "RenewalMethod", "TransferLockState" }, null, new[]{ typeof(global::Google.Cloud.Domains.V1Beta1.ManagementSettings.Types.RenewalMethod) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.DnsSettings), global::Google.Cloud.Domains.V1Beta1.DnsSettings.Parser, new[]{ "CustomDns", "GoogleDomainsDns", "GlueRecords" }, new[]{ "DnsProvider" }, new[]{ typeof(global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsState) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.CustomDns), global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.CustomDns.Parser, new[]{ "NameServers", "DsRecords" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GoogleDomainsDns), global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GoogleDomainsDns.Parser, new[]{ "NameServers", "DsState", "DsRecords" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord), global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Parser, new[]{ "KeyTag", "Algorithm", "DigestType", "Digest" }, null, new[]{ typeof(global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.Algorithm), typeof(global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.DigestType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GlueRecord), global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GlueRecord.Parser, new[]{ "HostName", "Ipv4Addresses", "Ipv6Addresses" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.ContactSettings), global::Google.Cloud.Domains.V1Beta1.ContactSettings.Parser, new[]{ "Privacy", "RegistrantContact", "AdminContact", "TechnicalContact" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact), global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact.Parser, new[]{ "PostalAddress", "Email", "PhoneNumber", "FaxNumber" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.SearchDomainsRequest), global::Google.Cloud.Domains.V1Beta1.SearchDomainsRequest.Parser, new[]{ "Query", "Location" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.SearchDomainsResponse), global::Google.Cloud.Domains.V1Beta1.SearchDomainsResponse.Parser, new[]{ "RegisterParameters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersRequest), global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersRequest.Parser, new[]{ "DomainName", "Location" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersResponse), global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersResponse.Parser, new[]{ "RegisterParameters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.RegisterDomainRequest), global::Google.Cloud.Domains.V1Beta1.RegisterDomainRequest.Parser, new[]{ "Parent", "Registration", "DomainNotices", "ContactNotices", "YearlyPrice", "ValidateOnly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.ListRegistrationsRequest), global::Google.Cloud.Domains.V1Beta1.ListRegistrationsRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.ListRegistrationsResponse), global::Google.Cloud.Domains.V1Beta1.ListRegistrationsResponse.Parser, new[]{ "Registrations", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.GetRegistrationRequest), global::Google.Cloud.Domains.V1Beta1.GetRegistrationRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.UpdateRegistrationRequest), global::Google.Cloud.Domains.V1Beta1.UpdateRegistrationRequest.Parser, new[]{ "Registration", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.ConfigureManagementSettingsRequest), global::Google.Cloud.Domains.V1Beta1.ConfigureManagementSettingsRequest.Parser, new[]{ "Registration", "ManagementSettings", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.ConfigureDnsSettingsRequest), global::Google.Cloud.Domains.V1Beta1.ConfigureDnsSettingsRequest.Parser, new[]{ "Registration", "DnsSettings", "UpdateMask", "ValidateOnly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.ConfigureContactSettingsRequest), global::Google.Cloud.Domains.V1Beta1.ConfigureContactSettingsRequest.Parser, new[]{ "Registration", "ContactSettings", "UpdateMask", "ContactNotices", "ValidateOnly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.ExportRegistrationRequest), global::Google.Cloud.Domains.V1Beta1.ExportRegistrationRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.DeleteRegistrationRequest), global::Google.Cloud.Domains.V1Beta1.DeleteRegistrationRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.RetrieveAuthorizationCodeRequest), global::Google.Cloud.Domains.V1Beta1.RetrieveAuthorizationCodeRequest.Parser, new[]{ "Registration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.ResetAuthorizationCodeRequest), global::Google.Cloud.Domains.V1Beta1.ResetAuthorizationCodeRequest.Parser, new[]{ "Registration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.RegisterParameters), global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Parser, new[]{ "DomainName", "Availability", "SupportedPrivacy", "DomainNotices", "YearlyPrice" }, null, new[]{ typeof(global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Types.Availability) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.AuthorizationCode), global::Google.Cloud.Domains.V1Beta1.AuthorizationCode.Parser, new[]{ "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Domains.V1Beta1.OperationMetadata), global::Google.Cloud.Domains.V1Beta1.OperationMetadata.Parser, new[]{ "CreateTime", "EndTime", "Target", "Verb", "StatusDetail", "ApiVersion" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Defines a set of possible contact privacy settings for a `Registration`.
  ///
  /// [ICANN](https://icann.org/) maintains the WHOIS database, a publicly
  /// accessible mapping from domain name to contact information, and requires that
  /// each domain name have an entry. Choose from these options to control how much
  /// information in your `ContactSettings` is published.
  /// </summary>
  public enum ContactPrivacy {
    /// <summary>
    /// The contact privacy settings are undefined.
    /// </summary>
    [pbr::OriginalName("CONTACT_PRIVACY_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// All the data from `ContactSettings` is publicly available. When setting
    /// this option, you must also provide a
    /// `PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT` in the `contact_notices` field of the
    /// request.
    /// </summary>
    [pbr::OriginalName("PUBLIC_CONTACT_DATA")] PublicContactData = 1,
    /// <summary>
    /// None of the data from `ContactSettings` is publicly available. Instead,
    /// proxy contact data is published for your domain. Email sent to the proxy
    /// email address is forwarded to the registrant's email address. Cloud Domains
    /// provides this privacy proxy service at no additional cost.
    /// </summary>
    [pbr::OriginalName("PRIVATE_CONTACT_DATA")] PrivateContactData = 2,
    /// <summary>
    /// Some data from `ContactSettings` is publicly available. The actual
    /// information redacted depends on the domain. For details, see [the
    /// registration privacy
    /// article](https://support.google.com/domains/answer/3251242).
    /// </summary>
    [pbr::OriginalName("REDACTED_CONTACT_DATA")] RedactedContactData = 3,
  }

  /// <summary>
  /// Notices about special properties of certain domains.
  /// </summary>
  public enum DomainNotice {
    /// <summary>
    /// The notice is undefined.
    /// </summary>
    [pbr::OriginalName("DOMAIN_NOTICE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Indicates that the domain is preloaded on the HTTP Strict Transport
    /// Security list in browsers. Serving a website on such domain requires
    /// an SSL certificate. For details, see
    /// [how to get an SSL
    /// certificate](https://support.google.com/domains/answer/7638036).
    /// </summary>
    [pbr::OriginalName("HSTS_PRELOADED")] HstsPreloaded = 1,
  }

  /// <summary>
  /// Notices related to contact information.
  /// </summary>
  public enum ContactNotice {
    /// <summary>
    /// The notice is undefined.
    /// </summary>
    [pbr::OriginalName("CONTACT_NOTICE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Required when setting the `privacy` field of `ContactSettings` to
    /// `PUBLIC_CONTACT_DATA`, which exposes contact data publicly.
    /// </summary>
    [pbr::OriginalName("PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT")] PublicContactDataAcknowledgement = 1,
  }

  /// <summary>
  /// Possible states of a `Registration`'s transfer lock.
  /// </summary>
  public enum TransferLockState {
    /// <summary>
    /// The state is unspecified.
    /// </summary>
    [pbr::OriginalName("TRANSFER_LOCK_STATE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The domain is unlocked and can be transferred to another registrar.
    /// </summary>
    [pbr::OriginalName("UNLOCKED")] Unlocked = 1,
    /// <summary>
    /// The domain is locked and cannot be transferred to another registrar.
    /// </summary>
    [pbr::OriginalName("LOCKED")] Locked = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The `Registration` resource facilitates managing and configuring domain name
  /// registrations.
  ///
  /// To create a new `Registration` resource, find a suitable domain name by
  /// calling the `SearchDomains` method with a query to see available domain name
  /// options. After choosing a name, call `RetrieveRegisterParameters` to
  /// ensure availability and obtain information like pricing, which is needed to
  /// build a call to `RegisterDomain`.
  /// </summary>
  public sealed partial class Registration : pb::IMessage<Registration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Registration> _parser = new pb::MessageParser<Registration>(() => new Registration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Registration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Registration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Registration(Registration other) : this() {
      name_ = other.name_;
      domainName_ = other.domainName_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      expireTime_ = other.expireTime_ != null ? other.expireTime_.Clone() : null;
      state_ = other.state_;
      issues_ = other.issues_.Clone();
      labels_ = other.labels_.Clone();
      managementSettings_ = other.managementSettings_ != null ? other.managementSettings_.Clone() : null;
      dnsSettings_ = other.dnsSettings_ != null ? other.dnsSettings_.Clone() : null;
      contactSettings_ = other.contactSettings_ != null ? other.contactSettings_.Clone() : null;
      pendingContactSettings_ = other.pendingContactSettings_ != null ? other.pendingContactSettings_.Clone() : null;
      supportedPrivacy_ = other.supportedPrivacy_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Registration Clone() {
      return new Registration(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Name of the `Registration` resource, in the format
    /// `projects/*/locations/*/registrations/&lt;domain_name>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "domain_name" field.</summary>
    public const int DomainNameFieldNumber = 2;
    private string domainName_ = "";
    /// <summary>
    /// Required. Immutable. The domain name. Unicode domain names must be expressed in Punycode format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DomainName {
      get { return domainName_; }
      set {
        domainName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The creation timestamp of the `Registration` resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "expire_time" field.</summary>
    public const int ExpireTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expireTime_;
    /// <summary>
    /// Output only. The expiration timestamp of the `Registration`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 7;
    private global::Google.Cloud.Domains.V1Beta1.Registration.Types.State state_ = global::Google.Cloud.Domains.V1Beta1.Registration.Types.State.Unspecified;
    /// <summary>
    /// Output only. The state of the `Registration`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.Registration.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "issues" field.</summary>
    public const int IssuesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Cloud.Domains.V1Beta1.Registration.Types.Issue> _repeated_issues_codec
        = pb::FieldCodec.ForEnum(66, x => (int) x, x => (global::Google.Cloud.Domains.V1Beta1.Registration.Types.Issue) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.Registration.Types.Issue> issues_ = new pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.Registration.Types.Issue>();
    /// <summary>
    /// Output only. The set of issues with the `Registration` that require attention.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.Registration.Types.Issue> Issues {
      get { return issues_; }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 74);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Set of labels associated with the `Registration`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "management_settings" field.</summary>
    public const int ManagementSettingsFieldNumber = 10;
    private global::Google.Cloud.Domains.V1Beta1.ManagementSettings managementSettings_;
    /// <summary>
    /// Settings for management of the `Registration`, including renewal, billing,
    /// and transfer. You cannot update these with the `UpdateRegistration`
    /// method. To update these settings, use the `ConfigureManagementSettings`
    /// method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.ManagementSettings ManagementSettings {
      get { return managementSettings_; }
      set {
        managementSettings_ = value;
      }
    }

    /// <summary>Field number for the "dns_settings" field.</summary>
    public const int DnsSettingsFieldNumber = 11;
    private global::Google.Cloud.Domains.V1Beta1.DnsSettings dnsSettings_;
    /// <summary>
    /// Settings controlling the DNS configuration of the `Registration`. You
    /// cannot update these with the `UpdateRegistration` method. To update these
    /// settings, use the `ConfigureDnsSettings` method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.DnsSettings DnsSettings {
      get { return dnsSettings_; }
      set {
        dnsSettings_ = value;
      }
    }

    /// <summary>Field number for the "contact_settings" field.</summary>
    public const int ContactSettingsFieldNumber = 12;
    private global::Google.Cloud.Domains.V1Beta1.ContactSettings contactSettings_;
    /// <summary>
    /// Required. Settings for contact information linked to the `Registration`. You cannot
    /// update these with the `UpdateRegistration` method. To update these
    /// settings, use the `ConfigureContactSettings` method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.ContactSettings ContactSettings {
      get { return contactSettings_; }
      set {
        contactSettings_ = value;
      }
    }

    /// <summary>Field number for the "pending_contact_settings" field.</summary>
    public const int PendingContactSettingsFieldNumber = 13;
    private global::Google.Cloud.Domains.V1Beta1.ContactSettings pendingContactSettings_;
    /// <summary>
    /// Output only. Pending contact settings for the `Registration`. Updates to the
    /// `contact_settings` field that change its `registrant_contact` or `privacy`
    /// fields require email confirmation by the `registrant_contact`
    /// before taking effect. This field is set only if there are pending updates
    /// to the `contact_settings` that have not yet been confirmed. To confirm the
    /// changes, the `registrant_contact` must follow the instructions in the
    /// email they receive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.ContactSettings PendingContactSettings {
      get { return pendingContactSettings_; }
      set {
        pendingContactSettings_ = value;
      }
    }

    /// <summary>Field number for the "supported_privacy" field.</summary>
    public const int SupportedPrivacyFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Google.Cloud.Domains.V1Beta1.ContactPrivacy> _repeated_supportedPrivacy_codec
        = pb::FieldCodec.ForEnum(114, x => (int) x, x => (global::Google.Cloud.Domains.V1Beta1.ContactPrivacy) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.ContactPrivacy> supportedPrivacy_ = new pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.ContactPrivacy>();
    /// <summary>
    /// Output only. Set of options for the `contact_settings.privacy` field that this
    /// `Registration` supports.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.ContactPrivacy> SupportedPrivacy {
      get { return supportedPrivacy_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Registration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Registration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DomainName != other.DomainName) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(ExpireTime, other.ExpireTime)) return false;
      if (State != other.State) return false;
      if(!issues_.Equals(other.issues_)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(ManagementSettings, other.ManagementSettings)) return false;
      if (!object.Equals(DnsSettings, other.DnsSettings)) return false;
      if (!object.Equals(ContactSettings, other.ContactSettings)) return false;
      if (!object.Equals(PendingContactSettings, other.PendingContactSettings)) return false;
      if(!supportedPrivacy_.Equals(other.supportedPrivacy_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DomainName.Length != 0) hash ^= DomainName.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (expireTime_ != null) hash ^= ExpireTime.GetHashCode();
      if (State != global::Google.Cloud.Domains.V1Beta1.Registration.Types.State.Unspecified) hash ^= State.GetHashCode();
      hash ^= issues_.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (managementSettings_ != null) hash ^= ManagementSettings.GetHashCode();
      if (dnsSettings_ != null) hash ^= DnsSettings.GetHashCode();
      if (contactSettings_ != null) hash ^= ContactSettings.GetHashCode();
      if (pendingContactSettings_ != null) hash ^= PendingContactSettings.GetHashCode();
      hash ^= supportedPrivacy_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DomainName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DomainName);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (expireTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExpireTime);
      }
      if (State != global::Google.Cloud.Domains.V1Beta1.Registration.Types.State.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) State);
      }
      issues_.WriteTo(output, _repeated_issues_codec);
      labels_.WriteTo(output, _map_labels_codec);
      if (managementSettings_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ManagementSettings);
      }
      if (dnsSettings_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DnsSettings);
      }
      if (contactSettings_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ContactSettings);
      }
      if (pendingContactSettings_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PendingContactSettings);
      }
      supportedPrivacy_.WriteTo(output, _repeated_supportedPrivacy_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DomainName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DomainName);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (expireTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExpireTime);
      }
      if (State != global::Google.Cloud.Domains.V1Beta1.Registration.Types.State.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) State);
      }
      issues_.WriteTo(ref output, _repeated_issues_codec);
      labels_.WriteTo(ref output, _map_labels_codec);
      if (managementSettings_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ManagementSettings);
      }
      if (dnsSettings_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DnsSettings);
      }
      if (contactSettings_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ContactSettings);
      }
      if (pendingContactSettings_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PendingContactSettings);
      }
      supportedPrivacy_.WriteTo(ref output, _repeated_supportedPrivacy_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DomainName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainName);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (expireTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireTime);
      }
      if (State != global::Google.Cloud.Domains.V1Beta1.Registration.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      size += issues_.CalculateSize(_repeated_issues_codec);
      size += labels_.CalculateSize(_map_labels_codec);
      if (managementSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ManagementSettings);
      }
      if (dnsSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DnsSettings);
      }
      if (contactSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContactSettings);
      }
      if (pendingContactSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PendingContactSettings);
      }
      size += supportedPrivacy_.CalculateSize(_repeated_supportedPrivacy_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Registration other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DomainName.Length != 0) {
        DomainName = other.DomainName;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.expireTime_ != null) {
        if (expireTime_ == null) {
          ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpireTime.MergeFrom(other.ExpireTime);
      }
      if (other.State != global::Google.Cloud.Domains.V1Beta1.Registration.Types.State.Unspecified) {
        State = other.State;
      }
      issues_.Add(other.issues_);
      labels_.Add(other.labels_);
      if (other.managementSettings_ != null) {
        if (managementSettings_ == null) {
          ManagementSettings = new global::Google.Cloud.Domains.V1Beta1.ManagementSettings();
        }
        ManagementSettings.MergeFrom(other.ManagementSettings);
      }
      if (other.dnsSettings_ != null) {
        if (dnsSettings_ == null) {
          DnsSettings = new global::Google.Cloud.Domains.V1Beta1.DnsSettings();
        }
        DnsSettings.MergeFrom(other.DnsSettings);
      }
      if (other.contactSettings_ != null) {
        if (contactSettings_ == null) {
          ContactSettings = new global::Google.Cloud.Domains.V1Beta1.ContactSettings();
        }
        ContactSettings.MergeFrom(other.ContactSettings);
      }
      if (other.pendingContactSettings_ != null) {
        if (pendingContactSettings_ == null) {
          PendingContactSettings = new global::Google.Cloud.Domains.V1Beta1.ContactSettings();
        }
        PendingContactSettings.MergeFrom(other.PendingContactSettings);
      }
      supportedPrivacy_.Add(other.supportedPrivacy_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DomainName = input.ReadString();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 50: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
          case 56: {
            State = (global::Google.Cloud.Domains.V1Beta1.Registration.Types.State) input.ReadEnum();
            break;
          }
          case 66:
          case 64: {
            issues_.AddEntriesFrom(input, _repeated_issues_codec);
            break;
          }
          case 74: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 82: {
            if (managementSettings_ == null) {
              ManagementSettings = new global::Google.Cloud.Domains.V1Beta1.ManagementSettings();
            }
            input.ReadMessage(ManagementSettings);
            break;
          }
          case 90: {
            if (dnsSettings_ == null) {
              DnsSettings = new global::Google.Cloud.Domains.V1Beta1.DnsSettings();
            }
            input.ReadMessage(DnsSettings);
            break;
          }
          case 98: {
            if (contactSettings_ == null) {
              ContactSettings = new global::Google.Cloud.Domains.V1Beta1.ContactSettings();
            }
            input.ReadMessage(ContactSettings);
            break;
          }
          case 106: {
            if (pendingContactSettings_ == null) {
              PendingContactSettings = new global::Google.Cloud.Domains.V1Beta1.ContactSettings();
            }
            input.ReadMessage(PendingContactSettings);
            break;
          }
          case 114:
          case 112: {
            supportedPrivacy_.AddEntriesFrom(input, _repeated_supportedPrivacy_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DomainName = input.ReadString();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 50: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
          case 56: {
            State = (global::Google.Cloud.Domains.V1Beta1.Registration.Types.State) input.ReadEnum();
            break;
          }
          case 66:
          case 64: {
            issues_.AddEntriesFrom(ref input, _repeated_issues_codec);
            break;
          }
          case 74: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 82: {
            if (managementSettings_ == null) {
              ManagementSettings = new global::Google.Cloud.Domains.V1Beta1.ManagementSettings();
            }
            input.ReadMessage(ManagementSettings);
            break;
          }
          case 90: {
            if (dnsSettings_ == null) {
              DnsSettings = new global::Google.Cloud.Domains.V1Beta1.DnsSettings();
            }
            input.ReadMessage(DnsSettings);
            break;
          }
          case 98: {
            if (contactSettings_ == null) {
              ContactSettings = new global::Google.Cloud.Domains.V1Beta1.ContactSettings();
            }
            input.ReadMessage(ContactSettings);
            break;
          }
          case 106: {
            if (pendingContactSettings_ == null) {
              PendingContactSettings = new global::Google.Cloud.Domains.V1Beta1.ContactSettings();
            }
            input.ReadMessage(PendingContactSettings);
            break;
          }
          case 114:
          case 112: {
            supportedPrivacy_.AddEntriesFrom(ref input, _repeated_supportedPrivacy_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Registration message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible states of a `Registration`.
      /// </summary>
      public enum State {
        /// <summary>
        /// The state is undefined.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The domain is being registered.
        /// </summary>
        [pbr::OriginalName("REGISTRATION_PENDING")] RegistrationPending = 1,
        /// <summary>
        /// The domain registration failed. You can delete resources in this state
        /// to allow registration to be retried.
        /// </summary>
        [pbr::OriginalName("REGISTRATION_FAILED")] RegistrationFailed = 2,
        /// <summary>
        /// The domain is registered and operational. The domain renews automatically
        /// as long as it remains in this state.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 6,
        /// <summary>
        /// The domain is suspended and inoperative. For more details, see the
        /// `issues` field.
        /// </summary>
        [pbr::OriginalName("SUSPENDED")] Suspended = 7,
        /// <summary>
        /// The domain has been exported from Cloud Domains to
        /// [Google Domains](https://domains.google/). You can no longer update it
        /// with this API, and information shown about it may be stale. Without further action, domains in this
        /// state expire at their `expire_time`. You can delete the resource
        /// after the `expire_time` has passed.
        /// </summary>
        [pbr::OriginalName("EXPORTED")] Exported = 8,
      }

      /// <summary>
      /// Possible issues with a `Registration` that require attention.
      /// </summary>
      public enum Issue {
        /// <summary>
        /// The issue is undefined.
        /// </summary>
        [pbr::OriginalName("ISSUE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Contact the Cloud Support team to resolve a problem with this domain.
        /// </summary>
        [pbr::OriginalName("CONTACT_SUPPORT")] ContactSupport = 1,
        /// <summary>
        /// [ICANN](https://icann.org/) requires verification of the email address
        /// in the `Registration`'s `contact_settings.registrant_contact` field. To
        /// verify the email address, follow the
        /// instructions in the email the `registrant_contact` receives following
        /// registration. If you do not complete email verification within
        /// 14 days of registration, the domain is suspended. To resend the
        /// verification email, call ConfigureContactSettings and provide the current
        /// `registrant_contact.email`.
        /// </summary>
        [pbr::OriginalName("UNVERIFIED_EMAIL")] UnverifiedEmail = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Defines renewal, billing, and transfer settings for a `Registration`.
  /// </summary>
  public sealed partial class ManagementSettings : pb::IMessage<ManagementSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ManagementSettings> _parser = new pb::MessageParser<ManagementSettings>(() => new ManagementSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManagementSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagementSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagementSettings(ManagementSettings other) : this() {
      renewalMethod_ = other.renewalMethod_;
      transferLockState_ = other.transferLockState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagementSettings Clone() {
      return new ManagementSettings(this);
    }

    /// <summary>Field number for the "renewal_method" field.</summary>
    public const int RenewalMethodFieldNumber = 3;
    private global::Google.Cloud.Domains.V1Beta1.ManagementSettings.Types.RenewalMethod renewalMethod_ = global::Google.Cloud.Domains.V1Beta1.ManagementSettings.Types.RenewalMethod.Unspecified;
    /// <summary>
    /// Output only. The renewal method for this `Registration`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.ManagementSettings.Types.RenewalMethod RenewalMethod {
      get { return renewalMethod_; }
      set {
        renewalMethod_ = value;
      }
    }

    /// <summary>Field number for the "transfer_lock_state" field.</summary>
    public const int TransferLockStateFieldNumber = 4;
    private global::Google.Cloud.Domains.V1Beta1.TransferLockState transferLockState_ = global::Google.Cloud.Domains.V1Beta1.TransferLockState.Unspecified;
    /// <summary>
    /// Controls whether the domain can be transferred to another registrar.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.TransferLockState TransferLockState {
      get { return transferLockState_; }
      set {
        transferLockState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManagementSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManagementSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RenewalMethod != other.RenewalMethod) return false;
      if (TransferLockState != other.TransferLockState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RenewalMethod != global::Google.Cloud.Domains.V1Beta1.ManagementSettings.Types.RenewalMethod.Unspecified) hash ^= RenewalMethod.GetHashCode();
      if (TransferLockState != global::Google.Cloud.Domains.V1Beta1.TransferLockState.Unspecified) hash ^= TransferLockState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RenewalMethod != global::Google.Cloud.Domains.V1Beta1.ManagementSettings.Types.RenewalMethod.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RenewalMethod);
      }
      if (TransferLockState != global::Google.Cloud.Domains.V1Beta1.TransferLockState.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) TransferLockState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RenewalMethod != global::Google.Cloud.Domains.V1Beta1.ManagementSettings.Types.RenewalMethod.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RenewalMethod);
      }
      if (TransferLockState != global::Google.Cloud.Domains.V1Beta1.TransferLockState.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) TransferLockState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RenewalMethod != global::Google.Cloud.Domains.V1Beta1.ManagementSettings.Types.RenewalMethod.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RenewalMethod);
      }
      if (TransferLockState != global::Google.Cloud.Domains.V1Beta1.TransferLockState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TransferLockState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManagementSettings other) {
      if (other == null) {
        return;
      }
      if (other.RenewalMethod != global::Google.Cloud.Domains.V1Beta1.ManagementSettings.Types.RenewalMethod.Unspecified) {
        RenewalMethod = other.RenewalMethod;
      }
      if (other.TransferLockState != global::Google.Cloud.Domains.V1Beta1.TransferLockState.Unspecified) {
        TransferLockState = other.TransferLockState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            RenewalMethod = (global::Google.Cloud.Domains.V1Beta1.ManagementSettings.Types.RenewalMethod) input.ReadEnum();
            break;
          }
          case 32: {
            TransferLockState = (global::Google.Cloud.Domains.V1Beta1.TransferLockState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            RenewalMethod = (global::Google.Cloud.Domains.V1Beta1.ManagementSettings.Types.RenewalMethod) input.ReadEnum();
            break;
          }
          case 32: {
            TransferLockState = (global::Google.Cloud.Domains.V1Beta1.TransferLockState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ManagementSettings message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Defines how the `Registration` is renewed.
      /// </summary>
      public enum RenewalMethod {
        /// <summary>
        /// The renewal method is undefined.
        /// </summary>
        [pbr::OriginalName("RENEWAL_METHOD_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The domain is automatically renewed each year .
        ///
        /// To disable automatic renewals, export the domain by calling
        /// `ExportRegistration` .
        /// </summary>
        [pbr::OriginalName("AUTOMATIC_RENEWAL")] AutomaticRenewal = 1,
        /// <summary>
        /// The domain must be explicitly renewed each year before its
        /// `expire_time`. This option is only available when the `Registration`
        /// is in state `EXPORTED`.
        ///
        /// To manage the domain's current billing and
        /// renewal settings, go to [Google Domains](https://domains.google/).
        /// </summary>
        [pbr::OriginalName("MANUAL_RENEWAL")] ManualRenewal = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Defines the DNS configuration of a `Registration`, including name servers,
  /// DNSSEC, and glue records.
  /// </summary>
  public sealed partial class DnsSettings : pb::IMessage<DnsSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DnsSettings> _parser = new pb::MessageParser<DnsSettings>(() => new DnsSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DnsSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DnsSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DnsSettings(DnsSettings other) : this() {
      glueRecords_ = other.glueRecords_.Clone();
      switch (other.DnsProviderCase) {
        case DnsProviderOneofCase.CustomDns:
          CustomDns = other.CustomDns.Clone();
          break;
        case DnsProviderOneofCase.GoogleDomainsDns:
          GoogleDomainsDns = other.GoogleDomainsDns.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DnsSettings Clone() {
      return new DnsSettings(this);
    }

    /// <summary>Field number for the "custom_dns" field.</summary>
    public const int CustomDnsFieldNumber = 1;
    /// <summary>
    /// An arbitrary DNS provider identified by its name servers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.CustomDns CustomDns {
      get { return dnsProviderCase_ == DnsProviderOneofCase.CustomDns ? (global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.CustomDns) dnsProvider_ : null; }
      set {
        dnsProvider_ = value;
        dnsProviderCase_ = value == null ? DnsProviderOneofCase.None : DnsProviderOneofCase.CustomDns;
      }
    }

    /// <summary>Field number for the "google_domains_dns" field.</summary>
    public const int GoogleDomainsDnsFieldNumber = 2;
    /// <summary>
    /// The free DNS zone provided by
    /// [Google Domains](https://domains.google/).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GoogleDomainsDns GoogleDomainsDns {
      get { return dnsProviderCase_ == DnsProviderOneofCase.GoogleDomainsDns ? (global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GoogleDomainsDns) dnsProvider_ : null; }
      set {
        dnsProvider_ = value;
        dnsProviderCase_ = value == null ? DnsProviderOneofCase.None : DnsProviderOneofCase.GoogleDomainsDns;
      }
    }

    /// <summary>Field number for the "glue_records" field.</summary>
    public const int GlueRecordsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GlueRecord> _repeated_glueRecords_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GlueRecord.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GlueRecord> glueRecords_ = new pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GlueRecord>();
    /// <summary>
    /// The list of glue records for this `Registration`. Commonly empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GlueRecord> GlueRecords {
      get { return glueRecords_; }
    }

    private object dnsProvider_;
    /// <summary>Enum of possible cases for the "dns_provider" oneof.</summary>
    public enum DnsProviderOneofCase {
      None = 0,
      CustomDns = 1,
      GoogleDomainsDns = 2,
    }
    private DnsProviderOneofCase dnsProviderCase_ = DnsProviderOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DnsProviderOneofCase DnsProviderCase {
      get { return dnsProviderCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDnsProvider() {
      dnsProviderCase_ = DnsProviderOneofCase.None;
      dnsProvider_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DnsSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DnsSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CustomDns, other.CustomDns)) return false;
      if (!object.Equals(GoogleDomainsDns, other.GoogleDomainsDns)) return false;
      if(!glueRecords_.Equals(other.glueRecords_)) return false;
      if (DnsProviderCase != other.DnsProviderCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dnsProviderCase_ == DnsProviderOneofCase.CustomDns) hash ^= CustomDns.GetHashCode();
      if (dnsProviderCase_ == DnsProviderOneofCase.GoogleDomainsDns) hash ^= GoogleDomainsDns.GetHashCode();
      hash ^= glueRecords_.GetHashCode();
      hash ^= (int) dnsProviderCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dnsProviderCase_ == DnsProviderOneofCase.CustomDns) {
        output.WriteRawTag(10);
        output.WriteMessage(CustomDns);
      }
      if (dnsProviderCase_ == DnsProviderOneofCase.GoogleDomainsDns) {
        output.WriteRawTag(18);
        output.WriteMessage(GoogleDomainsDns);
      }
      glueRecords_.WriteTo(output, _repeated_glueRecords_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dnsProviderCase_ == DnsProviderOneofCase.CustomDns) {
        output.WriteRawTag(10);
        output.WriteMessage(CustomDns);
      }
      if (dnsProviderCase_ == DnsProviderOneofCase.GoogleDomainsDns) {
        output.WriteRawTag(18);
        output.WriteMessage(GoogleDomainsDns);
      }
      glueRecords_.WriteTo(ref output, _repeated_glueRecords_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dnsProviderCase_ == DnsProviderOneofCase.CustomDns) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CustomDns);
      }
      if (dnsProviderCase_ == DnsProviderOneofCase.GoogleDomainsDns) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GoogleDomainsDns);
      }
      size += glueRecords_.CalculateSize(_repeated_glueRecords_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DnsSettings other) {
      if (other == null) {
        return;
      }
      glueRecords_.Add(other.glueRecords_);
      switch (other.DnsProviderCase) {
        case DnsProviderOneofCase.CustomDns:
          if (CustomDns == null) {
            CustomDns = new global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.CustomDns();
          }
          CustomDns.MergeFrom(other.CustomDns);
          break;
        case DnsProviderOneofCase.GoogleDomainsDns:
          if (GoogleDomainsDns == null) {
            GoogleDomainsDns = new global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GoogleDomainsDns();
          }
          GoogleDomainsDns.MergeFrom(other.GoogleDomainsDns);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.CustomDns subBuilder = new global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.CustomDns();
            if (dnsProviderCase_ == DnsProviderOneofCase.CustomDns) {
              subBuilder.MergeFrom(CustomDns);
            }
            input.ReadMessage(subBuilder);
            CustomDns = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GoogleDomainsDns subBuilder = new global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GoogleDomainsDns();
            if (dnsProviderCase_ == DnsProviderOneofCase.GoogleDomainsDns) {
              subBuilder.MergeFrom(GoogleDomainsDns);
            }
            input.ReadMessage(subBuilder);
            GoogleDomainsDns = subBuilder;
            break;
          }
          case 34: {
            glueRecords_.AddEntriesFrom(input, _repeated_glueRecords_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.CustomDns subBuilder = new global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.CustomDns();
            if (dnsProviderCase_ == DnsProviderOneofCase.CustomDns) {
              subBuilder.MergeFrom(CustomDns);
            }
            input.ReadMessage(subBuilder);
            CustomDns = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GoogleDomainsDns subBuilder = new global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.GoogleDomainsDns();
            if (dnsProviderCase_ == DnsProviderOneofCase.GoogleDomainsDns) {
              subBuilder.MergeFrom(GoogleDomainsDns);
            }
            input.ReadMessage(subBuilder);
            GoogleDomainsDns = subBuilder;
            break;
          }
          case 34: {
            glueRecords_.AddEntriesFrom(ref input, _repeated_glueRecords_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DnsSettings message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The publication state of DS records for a `Registration`.
      /// </summary>
      public enum DsState {
        /// <summary>
        /// DS state is unspecified.
        /// </summary>
        [pbr::OriginalName("DS_STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// DNSSEC is disabled for this domain. No DS records for this domain are
        /// published in the parent DNS zone.
        /// </summary>
        [pbr::OriginalName("DS_RECORDS_UNPUBLISHED")] DsRecordsUnpublished = 1,
        /// <summary>
        /// DNSSEC is enabled for this domain. Appropriate DS records for this domain
        /// are published in the parent DNS zone. This option is valid only if the
        /// DNS zone referenced in the `Registration`'s `dns_provider` field is
        /// already DNSSEC-signed.
        /// </summary>
        [pbr::OriginalName("DS_RECORDS_PUBLISHED")] DsRecordsPublished = 2,
      }

      /// <summary>
      /// Configuration for an arbitrary DNS provider.
      /// </summary>
      public sealed partial class CustomDns : pb::IMessage<CustomDns>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CustomDns> _parser = new pb::MessageParser<CustomDns>(() => new CustomDns());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CustomDns> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Domains.V1Beta1.DnsSettings.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CustomDns() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CustomDns(CustomDns other) : this() {
          nameServers_ = other.nameServers_.Clone();
          dsRecords_ = other.dsRecords_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CustomDns Clone() {
          return new CustomDns(this);
        }

        /// <summary>Field number for the "name_servers" field.</summary>
        public const int NameServersFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_nameServers_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> nameServers_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Required. A list of name servers that store the DNS zone for this domain. Each name
        /// server is a domain name, with Unicode domain names expressed in
        /// Punycode format.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> NameServers {
          get { return nameServers_; }
        }

        /// <summary>Field number for the "ds_records" field.</summary>
        public const int DsRecordsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord> _repeated_dsRecords_codec
            = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord> dsRecords_ = new pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord>();
        /// <summary>
        /// The list of DS records for this domain, which are used to enable DNSSEC.
        /// The domain's DNS provider can provide the values to set here. If this
        /// field is empty, DNSSEC is disabled.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord> DsRecords {
          get { return dsRecords_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CustomDns);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CustomDns other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!nameServers_.Equals(other.nameServers_)) return false;
          if(!dsRecords_.Equals(other.dsRecords_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= nameServers_.GetHashCode();
          hash ^= dsRecords_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          nameServers_.WriteTo(output, _repeated_nameServers_codec);
          dsRecords_.WriteTo(output, _repeated_dsRecords_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          nameServers_.WriteTo(ref output, _repeated_nameServers_codec);
          dsRecords_.WriteTo(ref output, _repeated_dsRecords_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += nameServers_.CalculateSize(_repeated_nameServers_codec);
          size += dsRecords_.CalculateSize(_repeated_dsRecords_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CustomDns other) {
          if (other == null) {
            return;
          }
          nameServers_.Add(other.nameServers_);
          dsRecords_.Add(other.dsRecords_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                nameServers_.AddEntriesFrom(input, _repeated_nameServers_codec);
                break;
              }
              case 18: {
                dsRecords_.AddEntriesFrom(input, _repeated_dsRecords_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                nameServers_.AddEntriesFrom(ref input, _repeated_nameServers_codec);
                break;
              }
              case 18: {
                dsRecords_.AddEntriesFrom(ref input, _repeated_dsRecords_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Configuration for using the free DNS zone provided by Google Domains as a
      /// `Registration`'s `dns_provider`. You cannot configure the DNS zone itself
      /// using the API. To configure the DNS zone, go to
      /// [Google Domains](https://domains.google/).
      /// </summary>
      public sealed partial class GoogleDomainsDns : pb::IMessage<GoogleDomainsDns>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GoogleDomainsDns> _parser = new pb::MessageParser<GoogleDomainsDns>(() => new GoogleDomainsDns());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GoogleDomainsDns> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Domains.V1Beta1.DnsSettings.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GoogleDomainsDns() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GoogleDomainsDns(GoogleDomainsDns other) : this() {
          nameServers_ = other.nameServers_.Clone();
          dsState_ = other.dsState_;
          dsRecords_ = other.dsRecords_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GoogleDomainsDns Clone() {
          return new GoogleDomainsDns(this);
        }

        /// <summary>Field number for the "name_servers" field.</summary>
        public const int NameServersFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_nameServers_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> nameServers_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Output only. A list of name servers that store the DNS zone for this domain. Each name
        /// server is a domain name, with Unicode domain names expressed in
        /// Punycode format. This field is automatically populated with the name
        /// servers assigned to the Google Domains DNS zone.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> NameServers {
          get { return nameServers_; }
        }

        /// <summary>Field number for the "ds_state" field.</summary>
        public const int DsStateFieldNumber = 2;
        private global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsState dsState_ = global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsState.Unspecified;
        /// <summary>
        /// Required. The state of DS records for this domain. Used to enable or disable
        /// automatic DNSSEC.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsState DsState {
          get { return dsState_; }
          set {
            dsState_ = value;
          }
        }

        /// <summary>Field number for the "ds_records" field.</summary>
        public const int DsRecordsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord> _repeated_dsRecords_codec
            = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord> dsRecords_ = new pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord>();
        /// <summary>
        /// Output only. The list of DS records published for this domain. The list is
        /// automatically populated when `ds_state` is `DS_RECORDS_PUBLISHED`,
        /// otherwise it remains empty.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord> DsRecords {
          get { return dsRecords_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GoogleDomainsDns);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GoogleDomainsDns other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!nameServers_.Equals(other.nameServers_)) return false;
          if (DsState != other.DsState) return false;
          if(!dsRecords_.Equals(other.dsRecords_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= nameServers_.GetHashCode();
          if (DsState != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsState.Unspecified) hash ^= DsState.GetHashCode();
          hash ^= dsRecords_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          nameServers_.WriteTo(output, _repeated_nameServers_codec);
          if (DsState != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsState.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) DsState);
          }
          dsRecords_.WriteTo(output, _repeated_dsRecords_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          nameServers_.WriteTo(ref output, _repeated_nameServers_codec);
          if (DsState != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsState.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) DsState);
          }
          dsRecords_.WriteTo(ref output, _repeated_dsRecords_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += nameServers_.CalculateSize(_repeated_nameServers_codec);
          if (DsState != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsState.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DsState);
          }
          size += dsRecords_.CalculateSize(_repeated_dsRecords_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GoogleDomainsDns other) {
          if (other == null) {
            return;
          }
          nameServers_.Add(other.nameServers_);
          if (other.DsState != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsState.Unspecified) {
            DsState = other.DsState;
          }
          dsRecords_.Add(other.dsRecords_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                nameServers_.AddEntriesFrom(input, _repeated_nameServers_codec);
                break;
              }
              case 16: {
                DsState = (global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsState) input.ReadEnum();
                break;
              }
              case 26: {
                dsRecords_.AddEntriesFrom(input, _repeated_dsRecords_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                nameServers_.AddEntriesFrom(ref input, _repeated_nameServers_codec);
                break;
              }
              case 16: {
                DsState = (global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsState) input.ReadEnum();
                break;
              }
              case 26: {
                dsRecords_.AddEntriesFrom(ref input, _repeated_dsRecords_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Defines a Delegation Signer (DS) record, which is needed to enable DNSSEC
      /// for a domain. It contains a digest (hash) of a DNSKEY record that must be
      /// present in the domain's DNS zone.
      /// </summary>
      public sealed partial class DsRecord : pb::IMessage<DsRecord>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DsRecord> _parser = new pb::MessageParser<DsRecord>(() => new DsRecord());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DsRecord> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Domains.V1Beta1.DnsSettings.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DsRecord() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DsRecord(DsRecord other) : this() {
          keyTag_ = other.keyTag_;
          algorithm_ = other.algorithm_;
          digestType_ = other.digestType_;
          digest_ = other.digest_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DsRecord Clone() {
          return new DsRecord(this);
        }

        /// <summary>Field number for the "key_tag" field.</summary>
        public const int KeyTagFieldNumber = 1;
        private int keyTag_;
        /// <summary>
        /// The key tag of the record. Must be set in range 0 -- 65535.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int KeyTag {
          get { return keyTag_; }
          set {
            keyTag_ = value;
          }
        }

        /// <summary>Field number for the "algorithm" field.</summary>
        public const int AlgorithmFieldNumber = 2;
        private global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.Algorithm algorithm_ = global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.Algorithm.Unspecified;
        /// <summary>
        /// The algorithm used to generate the referenced DNSKEY.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.Algorithm Algorithm {
          get { return algorithm_; }
          set {
            algorithm_ = value;
          }
        }

        /// <summary>Field number for the "digest_type" field.</summary>
        public const int DigestTypeFieldNumber = 3;
        private global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.DigestType digestType_ = global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.DigestType.Unspecified;
        /// <summary>
        /// The hash function used to generate the digest of the referenced DNSKEY.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.DigestType DigestType {
          get { return digestType_; }
          set {
            digestType_ = value;
          }
        }

        /// <summary>Field number for the "digest" field.</summary>
        public const int DigestFieldNumber = 4;
        private string digest_ = "";
        /// <summary>
        /// The digest generated from the referenced DNSKEY.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Digest {
          get { return digest_; }
          set {
            digest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DsRecord);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DsRecord other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (KeyTag != other.KeyTag) return false;
          if (Algorithm != other.Algorithm) return false;
          if (DigestType != other.DigestType) return false;
          if (Digest != other.Digest) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (KeyTag != 0) hash ^= KeyTag.GetHashCode();
          if (Algorithm != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.Algorithm.Unspecified) hash ^= Algorithm.GetHashCode();
          if (DigestType != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.DigestType.Unspecified) hash ^= DigestType.GetHashCode();
          if (Digest.Length != 0) hash ^= Digest.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (KeyTag != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(KeyTag);
          }
          if (Algorithm != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.Algorithm.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Algorithm);
          }
          if (DigestType != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.DigestType.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) DigestType);
          }
          if (Digest.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Digest);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (KeyTag != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(KeyTag);
          }
          if (Algorithm != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.Algorithm.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Algorithm);
          }
          if (DigestType != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.DigestType.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) DigestType);
          }
          if (Digest.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Digest);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (KeyTag != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(KeyTag);
          }
          if (Algorithm != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.Algorithm.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Algorithm);
          }
          if (DigestType != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.DigestType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DigestType);
          }
          if (Digest.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Digest);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DsRecord other) {
          if (other == null) {
            return;
          }
          if (other.KeyTag != 0) {
            KeyTag = other.KeyTag;
          }
          if (other.Algorithm != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.Algorithm.Unspecified) {
            Algorithm = other.Algorithm;
          }
          if (other.DigestType != global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.DigestType.Unspecified) {
            DigestType = other.DigestType;
          }
          if (other.Digest.Length != 0) {
            Digest = other.Digest;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                KeyTag = input.ReadInt32();
                break;
              }
              case 16: {
                Algorithm = (global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.Algorithm) input.ReadEnum();
                break;
              }
              case 24: {
                DigestType = (global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.DigestType) input.ReadEnum();
                break;
              }
              case 34: {
                Digest = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                KeyTag = input.ReadInt32();
                break;
              }
              case 16: {
                Algorithm = (global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.Algorithm) input.ReadEnum();
                break;
              }
              case 24: {
                DigestType = (global::Google.Cloud.Domains.V1Beta1.DnsSettings.Types.DsRecord.Types.DigestType) input.ReadEnum();
                break;
              }
              case 34: {
                Digest = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the DsRecord message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// List of algorithms used to create a DNSKEY. Certain
          /// algorithms are not supported for particular domains.
          /// </summary>
          public enum Algorithm {
            /// <summary>
            /// The algorithm is unspecified.
            /// </summary>
            [pbr::OriginalName("ALGORITHM_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// DSA/SHA1. Not recommended for new deployments.
            /// </summary>
            [pbr::OriginalName("DSA")] Dsa = 3,
            /// <summary>
            /// ECC. Not recommended for new deployments.
            /// </summary>
            [pbr::OriginalName("ECC")] Ecc = 4,
            /// <summary>
            /// RSA/SHA-1. Not recommended for new deployments.
            /// </summary>
            [pbr::OriginalName("RSASHA1")] Rsasha1 = 5,
            /// <summary>
            /// DSA-NSEC3-SHA1. Not recommended for new deployments.
            /// </summary>
            [pbr::OriginalName("DSANSEC3SHA1")] Dsansec3Sha1 = 6,
            /// <summary>
            /// RSA/SHA1-NSEC3-SHA1. Not recommended for new deployments.
            /// </summary>
            [pbr::OriginalName("RSASHA1NSEC3SHA1")] Rsasha1Nsec3Sha1 = 7,
            /// <summary>
            /// RSA/SHA-256.
            /// </summary>
            [pbr::OriginalName("RSASHA256")] Rsasha256 = 8,
            /// <summary>
            /// RSA/SHA-512.
            /// </summary>
            [pbr::OriginalName("RSASHA512")] Rsasha512 = 10,
            /// <summary>
            /// GOST R 34.10-2001.
            /// </summary>
            [pbr::OriginalName("ECCGOST")] Eccgost = 12,
            /// <summary>
            /// ECDSA Curve P-256 with SHA-256.
            /// </summary>
            [pbr::OriginalName("ECDSAP256SHA256")] Ecdsap256Sha256 = 13,
            /// <summary>
            /// ECDSA Curve P-384 with SHA-384.
            /// </summary>
            [pbr::OriginalName("ECDSAP384SHA384")] Ecdsap384Sha384 = 14,
            /// <summary>
            /// Ed25519.
            /// </summary>
            [pbr::OriginalName("ED25519")] Ed25519 = 15,
            /// <summary>
            /// Ed448.
            /// </summary>
            [pbr::OriginalName("ED448")] Ed448 = 16,
          }

          /// <summary>
          /// List of hash functions that may have been used to generate a digest of a
          /// DNSKEY.
          /// </summary>
          public enum DigestType {
            /// <summary>
            /// The DigestType is unspecified.
            /// </summary>
            [pbr::OriginalName("DIGEST_TYPE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// SHA-1. Not recommended for new deployments.
            /// </summary>
            [pbr::OriginalName("SHA1")] Sha1 = 1,
            /// <summary>
            /// SHA-256.
            /// </summary>
            [pbr::OriginalName("SHA256")] Sha256 = 2,
            /// <summary>
            /// GOST R 34.11-94.
            /// </summary>
            [pbr::OriginalName("GOST3411")] Gost3411 = 3,
            /// <summary>
            /// SHA-384.
            /// </summary>
            [pbr::OriginalName("SHA384")] Sha384 = 4,
          }

        }
        #endregion

      }

      /// <summary>
      /// Defines a host on your domain that is a DNS name server for your domain
      /// and/or other domains. Glue records are a way of making the IP address of a
      /// name server known, even when it serves DNS queries for its parent domain.
      /// For example, when `ns.example.com` is a name server for `example.com`, the
      /// host `ns.example.com` must have a glue record to break the circular DNS
      /// reference.
      /// </summary>
      public sealed partial class GlueRecord : pb::IMessage<GlueRecord>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GlueRecord> _parser = new pb::MessageParser<GlueRecord>(() => new GlueRecord());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GlueRecord> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Domains.V1Beta1.DnsSettings.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GlueRecord() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GlueRecord(GlueRecord other) : this() {
          hostName_ = other.hostName_;
          ipv4Addresses_ = other.ipv4Addresses_.Clone();
          ipv6Addresses_ = other.ipv6Addresses_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GlueRecord Clone() {
          return new GlueRecord(this);
        }

        /// <summary>Field number for the "host_name" field.</summary>
        public const int HostNameFieldNumber = 1;
        private string hostName_ = "";
        /// <summary>
        /// Required. Domain name of the host in Punycode format.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string HostName {
          get { return hostName_; }
          set {
            hostName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ipv4_addresses" field.</summary>
        public const int Ipv4AddressesFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_ipv4Addresses_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> ipv4Addresses_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// List of IPv4 addresses corresponding to this host in the standard decimal
        /// format (e.g. `198.51.100.1`). At least one of `ipv4_address` and
        /// `ipv6_address` must be set.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Ipv4Addresses {
          get { return ipv4Addresses_; }
        }

        /// <summary>Field number for the "ipv6_addresses" field.</summary>
        public const int Ipv6AddressesFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_ipv6Addresses_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> ipv6Addresses_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// List of IPv6 addresses corresponding to this host in the standard
        /// hexadecimal format (e.g. `2001:db8::`). At least one of
        /// `ipv4_address` and `ipv6_address` must be set.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Ipv6Addresses {
          get { return ipv6Addresses_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GlueRecord);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GlueRecord other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HostName != other.HostName) return false;
          if(!ipv4Addresses_.Equals(other.ipv4Addresses_)) return false;
          if(!ipv6Addresses_.Equals(other.ipv6Addresses_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HostName.Length != 0) hash ^= HostName.GetHashCode();
          hash ^= ipv4Addresses_.GetHashCode();
          hash ^= ipv6Addresses_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HostName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HostName);
          }
          ipv4Addresses_.WriteTo(output, _repeated_ipv4Addresses_codec);
          ipv6Addresses_.WriteTo(output, _repeated_ipv6Addresses_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HostName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HostName);
          }
          ipv4Addresses_.WriteTo(ref output, _repeated_ipv4Addresses_codec);
          ipv6Addresses_.WriteTo(ref output, _repeated_ipv6Addresses_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HostName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HostName);
          }
          size += ipv4Addresses_.CalculateSize(_repeated_ipv4Addresses_codec);
          size += ipv6Addresses_.CalculateSize(_repeated_ipv6Addresses_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GlueRecord other) {
          if (other == null) {
            return;
          }
          if (other.HostName.Length != 0) {
            HostName = other.HostName;
          }
          ipv4Addresses_.Add(other.ipv4Addresses_);
          ipv6Addresses_.Add(other.ipv6Addresses_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                HostName = input.ReadString();
                break;
              }
              case 18: {
                ipv4Addresses_.AddEntriesFrom(input, _repeated_ipv4Addresses_codec);
                break;
              }
              case 26: {
                ipv6Addresses_.AddEntriesFrom(input, _repeated_ipv6Addresses_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                HostName = input.ReadString();
                break;
              }
              case 18: {
                ipv4Addresses_.AddEntriesFrom(ref input, _repeated_ipv4Addresses_codec);
                break;
              }
              case 26: {
                ipv6Addresses_.AddEntriesFrom(ref input, _repeated_ipv6Addresses_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Defines the contact information associated with a `Registration`.
  ///
  /// [ICANN](https://icann.org/) requires all domain names to have associated
  /// contact information. The `registrant_contact` is considered the
  /// domain's legal owner, and often the other contacts are identical.
  /// </summary>
  public sealed partial class ContactSettings : pb::IMessage<ContactSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContactSettings> _parser = new pb::MessageParser<ContactSettings>(() => new ContactSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContactSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactSettings(ContactSettings other) : this() {
      privacy_ = other.privacy_;
      registrantContact_ = other.registrantContact_ != null ? other.registrantContact_.Clone() : null;
      adminContact_ = other.adminContact_ != null ? other.adminContact_.Clone() : null;
      technicalContact_ = other.technicalContact_ != null ? other.technicalContact_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactSettings Clone() {
      return new ContactSettings(this);
    }

    /// <summary>Field number for the "privacy" field.</summary>
    public const int PrivacyFieldNumber = 1;
    private global::Google.Cloud.Domains.V1Beta1.ContactPrivacy privacy_ = global::Google.Cloud.Domains.V1Beta1.ContactPrivacy.Unspecified;
    /// <summary>
    /// Required. Privacy setting for the contacts associated with the `Registration`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.ContactPrivacy Privacy {
      get { return privacy_; }
      set {
        privacy_ = value;
      }
    }

    /// <summary>Field number for the "registrant_contact" field.</summary>
    public const int RegistrantContactFieldNumber = 2;
    private global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact registrantContact_;
    /// <summary>
    /// Required. The registrant contact for the `Registration`.
    ///
    /// *Caution: Anyone with access to this email address, phone number,
    /// and/or postal address can take control of the domain.*
    ///
    /// *Warning: For new `Registration`s, the registrant will receive an email
    /// confirmation that they must complete within 14 days to avoid domain
    /// suspension.*
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact RegistrantContact {
      get { return registrantContact_; }
      set {
        registrantContact_ = value;
      }
    }

    /// <summary>Field number for the "admin_contact" field.</summary>
    public const int AdminContactFieldNumber = 3;
    private global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact adminContact_;
    /// <summary>
    /// Required. The administrative contact for the `Registration`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact AdminContact {
      get { return adminContact_; }
      set {
        adminContact_ = value;
      }
    }

    /// <summary>Field number for the "technical_contact" field.</summary>
    public const int TechnicalContactFieldNumber = 4;
    private global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact technicalContact_;
    /// <summary>
    /// Required. The technical contact for the `Registration`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact TechnicalContact {
      get { return technicalContact_; }
      set {
        technicalContact_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContactSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContactSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Privacy != other.Privacy) return false;
      if (!object.Equals(RegistrantContact, other.RegistrantContact)) return false;
      if (!object.Equals(AdminContact, other.AdminContact)) return false;
      if (!object.Equals(TechnicalContact, other.TechnicalContact)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Privacy != global::Google.Cloud.Domains.V1Beta1.ContactPrivacy.Unspecified) hash ^= Privacy.GetHashCode();
      if (registrantContact_ != null) hash ^= RegistrantContact.GetHashCode();
      if (adminContact_ != null) hash ^= AdminContact.GetHashCode();
      if (technicalContact_ != null) hash ^= TechnicalContact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Privacy != global::Google.Cloud.Domains.V1Beta1.ContactPrivacy.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Privacy);
      }
      if (registrantContact_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegistrantContact);
      }
      if (adminContact_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdminContact);
      }
      if (technicalContact_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TechnicalContact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Privacy != global::Google.Cloud.Domains.V1Beta1.ContactPrivacy.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Privacy);
      }
      if (registrantContact_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegistrantContact);
      }
      if (adminContact_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdminContact);
      }
      if (technicalContact_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TechnicalContact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Privacy != global::Google.Cloud.Domains.V1Beta1.ContactPrivacy.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Privacy);
      }
      if (registrantContact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegistrantContact);
      }
      if (adminContact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdminContact);
      }
      if (technicalContact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TechnicalContact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContactSettings other) {
      if (other == null) {
        return;
      }
      if (other.Privacy != global::Google.Cloud.Domains.V1Beta1.ContactPrivacy.Unspecified) {
        Privacy = other.Privacy;
      }
      if (other.registrantContact_ != null) {
        if (registrantContact_ == null) {
          RegistrantContact = new global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact();
        }
        RegistrantContact.MergeFrom(other.RegistrantContact);
      }
      if (other.adminContact_ != null) {
        if (adminContact_ == null) {
          AdminContact = new global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact();
        }
        AdminContact.MergeFrom(other.AdminContact);
      }
      if (other.technicalContact_ != null) {
        if (technicalContact_ == null) {
          TechnicalContact = new global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact();
        }
        TechnicalContact.MergeFrom(other.TechnicalContact);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Privacy = (global::Google.Cloud.Domains.V1Beta1.ContactPrivacy) input.ReadEnum();
            break;
          }
          case 18: {
            if (registrantContact_ == null) {
              RegistrantContact = new global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact();
            }
            input.ReadMessage(RegistrantContact);
            break;
          }
          case 26: {
            if (adminContact_ == null) {
              AdminContact = new global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact();
            }
            input.ReadMessage(AdminContact);
            break;
          }
          case 34: {
            if (technicalContact_ == null) {
              TechnicalContact = new global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact();
            }
            input.ReadMessage(TechnicalContact);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Privacy = (global::Google.Cloud.Domains.V1Beta1.ContactPrivacy) input.ReadEnum();
            break;
          }
          case 18: {
            if (registrantContact_ == null) {
              RegistrantContact = new global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact();
            }
            input.ReadMessage(RegistrantContact);
            break;
          }
          case 26: {
            if (adminContact_ == null) {
              AdminContact = new global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact();
            }
            input.ReadMessage(AdminContact);
            break;
          }
          case 34: {
            if (technicalContact_ == null) {
              TechnicalContact = new global::Google.Cloud.Domains.V1Beta1.ContactSettings.Types.Contact();
            }
            input.ReadMessage(TechnicalContact);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ContactSettings message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Details required for a contact associated with a `Registration`.
      /// </summary>
      public sealed partial class Contact : pb::IMessage<Contact>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Contact> _parser = new pb::MessageParser<Contact>(() => new Contact());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Contact> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Domains.V1Beta1.ContactSettings.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Contact() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Contact(Contact other) : this() {
          postalAddress_ = other.postalAddress_ != null ? other.postalAddress_.Clone() : null;
          email_ = other.email_;
          phoneNumber_ = other.phoneNumber_;
          faxNumber_ = other.faxNumber_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Contact Clone() {
          return new Contact(this);
        }

        /// <summary>Field number for the "postal_address" field.</summary>
        public const int PostalAddressFieldNumber = 1;
        private global::Google.Type.PostalAddress postalAddress_;
        /// <summary>
        /// Required. Postal address of the contact.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Type.PostalAddress PostalAddress {
          get { return postalAddress_; }
          set {
            postalAddress_ = value;
          }
        }

        /// <summary>Field number for the "email" field.</summary>
        public const int EmailFieldNumber = 2;
        private string email_ = "";
        /// <summary>
        /// Required. Email address of the contact.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "phone_number" field.</summary>
        public const int PhoneNumberFieldNumber = 3;
        private string phoneNumber_ = "";
        /// <summary>
        /// Required. Phone number of the contact in international format. For example,
        /// `"+1-800-555-0123"`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PhoneNumber {
          get { return phoneNumber_; }
          set {
            phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fax_number" field.</summary>
        public const int FaxNumberFieldNumber = 4;
        private string faxNumber_ = "";
        /// <summary>
        /// Fax number of the contact in international format. For example,
        /// `"+1-800-555-0123"`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FaxNumber {
          get { return faxNumber_; }
          set {
            faxNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Contact);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Contact other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(PostalAddress, other.PostalAddress)) return false;
          if (Email != other.Email) return false;
          if (PhoneNumber != other.PhoneNumber) return false;
          if (FaxNumber != other.FaxNumber) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (postalAddress_ != null) hash ^= PostalAddress.GetHashCode();
          if (Email.Length != 0) hash ^= Email.GetHashCode();
          if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
          if (FaxNumber.Length != 0) hash ^= FaxNumber.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (postalAddress_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(PostalAddress);
          }
          if (Email.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Email);
          }
          if (PhoneNumber.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(PhoneNumber);
          }
          if (FaxNumber.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(FaxNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (postalAddress_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(PostalAddress);
          }
          if (Email.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Email);
          }
          if (PhoneNumber.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(PhoneNumber);
          }
          if (FaxNumber.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(FaxNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (postalAddress_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostalAddress);
          }
          if (Email.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
          }
          if (PhoneNumber.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
          }
          if (FaxNumber.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FaxNumber);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Contact other) {
          if (other == null) {
            return;
          }
          if (other.postalAddress_ != null) {
            if (postalAddress_ == null) {
              PostalAddress = new global::Google.Type.PostalAddress();
            }
            PostalAddress.MergeFrom(other.PostalAddress);
          }
          if (other.Email.Length != 0) {
            Email = other.Email;
          }
          if (other.PhoneNumber.Length != 0) {
            PhoneNumber = other.PhoneNumber;
          }
          if (other.FaxNumber.Length != 0) {
            FaxNumber = other.FaxNumber;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (postalAddress_ == null) {
                  PostalAddress = new global::Google.Type.PostalAddress();
                }
                input.ReadMessage(PostalAddress);
                break;
              }
              case 18: {
                Email = input.ReadString();
                break;
              }
              case 26: {
                PhoneNumber = input.ReadString();
                break;
              }
              case 34: {
                FaxNumber = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (postalAddress_ == null) {
                  PostalAddress = new global::Google.Type.PostalAddress();
                }
                input.ReadMessage(PostalAddress);
                break;
              }
              case 18: {
                Email = input.ReadString();
                break;
              }
              case 26: {
                PhoneNumber = input.ReadString();
                break;
              }
              case 34: {
                FaxNumber = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Request for the `SearchDomains` method.
  /// </summary>
  public sealed partial class SearchDomainsRequest : pb::IMessage<SearchDomainsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchDomainsRequest> _parser = new pb::MessageParser<SearchDomainsRequest>(() => new SearchDomainsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchDomainsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchDomainsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchDomainsRequest(SearchDomainsRequest other) : this() {
      query_ = other.query_;
      location_ = other.location_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchDomainsRequest Clone() {
      return new SearchDomainsRequest(this);
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 1;
    private string query_ = "";
    /// <summary>
    /// Required. String used to search for available domain names.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private string location_ = "";
    /// <summary>
    /// Required. The location. Must be in the format `projects/*/locations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchDomainsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchDomainsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Query != other.Query) return false;
      if (Location != other.Location) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Query.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Query);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Query.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Query);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchDomainsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Query = input.ReadString();
            break;
          }
          case 18: {
            Location = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Query = input.ReadString();
            break;
          }
          case 18: {
            Location = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for the `SearchDomains` method.
  /// </summary>
  public sealed partial class SearchDomainsResponse : pb::IMessage<SearchDomainsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchDomainsResponse> _parser = new pb::MessageParser<SearchDomainsResponse>(() => new SearchDomainsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchDomainsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchDomainsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchDomainsResponse(SearchDomainsResponse other) : this() {
      registerParameters_ = other.registerParameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchDomainsResponse Clone() {
      return new SearchDomainsResponse(this);
    }

    /// <summary>Field number for the "register_parameters" field.</summary>
    public const int RegisterParametersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Domains.V1Beta1.RegisterParameters> _repeated_registerParameters_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.RegisterParameters> registerParameters_ = new pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.RegisterParameters>();
    /// <summary>
    /// Results of the domain name search.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.RegisterParameters> RegisterParameters {
      get { return registerParameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchDomainsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchDomainsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!registerParameters_.Equals(other.registerParameters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= registerParameters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      registerParameters_.WriteTo(output, _repeated_registerParameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      registerParameters_.WriteTo(ref output, _repeated_registerParameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += registerParameters_.CalculateSize(_repeated_registerParameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchDomainsResponse other) {
      if (other == null) {
        return;
      }
      registerParameters_.Add(other.registerParameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            registerParameters_.AddEntriesFrom(input, _repeated_registerParameters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            registerParameters_.AddEntriesFrom(ref input, _repeated_registerParameters_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `RetrieveRegisterParameters` method.
  /// </summary>
  public sealed partial class RetrieveRegisterParametersRequest : pb::IMessage<RetrieveRegisterParametersRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RetrieveRegisterParametersRequest> _parser = new pb::MessageParser<RetrieveRegisterParametersRequest>(() => new RetrieveRegisterParametersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RetrieveRegisterParametersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveRegisterParametersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveRegisterParametersRequest(RetrieveRegisterParametersRequest other) : this() {
      domainName_ = other.domainName_;
      location_ = other.location_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveRegisterParametersRequest Clone() {
      return new RetrieveRegisterParametersRequest(this);
    }

    /// <summary>Field number for the "domain_name" field.</summary>
    public const int DomainNameFieldNumber = 1;
    private string domainName_ = "";
    /// <summary>
    /// Required. The domain name. Unicode domain names must be expressed in Punycode format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DomainName {
      get { return domainName_; }
      set {
        domainName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private string location_ = "";
    /// <summary>
    /// Required. The location. Must be in the format `projects/*/locations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RetrieveRegisterParametersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RetrieveRegisterParametersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DomainName != other.DomainName) return false;
      if (Location != other.Location) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DomainName.Length != 0) hash ^= DomainName.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DomainName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DomainName);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DomainName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DomainName);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DomainName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainName);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RetrieveRegisterParametersRequest other) {
      if (other == null) {
        return;
      }
      if (other.DomainName.Length != 0) {
        DomainName = other.DomainName;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DomainName = input.ReadString();
            break;
          }
          case 18: {
            Location = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DomainName = input.ReadString();
            break;
          }
          case 18: {
            Location = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for the `RetrieveRegisterParameters` method.
  /// </summary>
  public sealed partial class RetrieveRegisterParametersResponse : pb::IMessage<RetrieveRegisterParametersResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RetrieveRegisterParametersResponse> _parser = new pb::MessageParser<RetrieveRegisterParametersResponse>(() => new RetrieveRegisterParametersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RetrieveRegisterParametersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveRegisterParametersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveRegisterParametersResponse(RetrieveRegisterParametersResponse other) : this() {
      registerParameters_ = other.registerParameters_ != null ? other.registerParameters_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveRegisterParametersResponse Clone() {
      return new RetrieveRegisterParametersResponse(this);
    }

    /// <summary>Field number for the "register_parameters" field.</summary>
    public const int RegisterParametersFieldNumber = 1;
    private global::Google.Cloud.Domains.V1Beta1.RegisterParameters registerParameters_;
    /// <summary>
    /// Parameters to use when calling the `RegisterDomain` method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.RegisterParameters RegisterParameters {
      get { return registerParameters_; }
      set {
        registerParameters_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RetrieveRegisterParametersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RetrieveRegisterParametersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RegisterParameters, other.RegisterParameters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (registerParameters_ != null) hash ^= RegisterParameters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (registerParameters_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RegisterParameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (registerParameters_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RegisterParameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (registerParameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterParameters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RetrieveRegisterParametersResponse other) {
      if (other == null) {
        return;
      }
      if (other.registerParameters_ != null) {
        if (registerParameters_ == null) {
          RegisterParameters = new global::Google.Cloud.Domains.V1Beta1.RegisterParameters();
        }
        RegisterParameters.MergeFrom(other.RegisterParameters);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (registerParameters_ == null) {
              RegisterParameters = new global::Google.Cloud.Domains.V1Beta1.RegisterParameters();
            }
            input.ReadMessage(RegisterParameters);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (registerParameters_ == null) {
              RegisterParameters = new global::Google.Cloud.Domains.V1Beta1.RegisterParameters();
            }
            input.ReadMessage(RegisterParameters);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `RegisterDomain` method.
  /// </summary>
  public sealed partial class RegisterDomainRequest : pb::IMessage<RegisterDomainRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterDomainRequest> _parser = new pb::MessageParser<RegisterDomainRequest>(() => new RegisterDomainRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterDomainRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterDomainRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterDomainRequest(RegisterDomainRequest other) : this() {
      parent_ = other.parent_;
      registration_ = other.registration_ != null ? other.registration_.Clone() : null;
      domainNotices_ = other.domainNotices_.Clone();
      contactNotices_ = other.contactNotices_.Clone();
      yearlyPrice_ = other.yearlyPrice_ != null ? other.yearlyPrice_.Clone() : null;
      validateOnly_ = other.validateOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterDomainRequest Clone() {
      return new RegisterDomainRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The parent resource of the `Registration`. Must be in the
    /// format `projects/*/locations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registration" field.</summary>
    public const int RegistrationFieldNumber = 2;
    private global::Google.Cloud.Domains.V1Beta1.Registration registration_;
    /// <summary>
    /// Required. The complete `Registration` resource to be created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.Registration Registration {
      get { return registration_; }
      set {
        registration_ = value;
      }
    }

    /// <summary>Field number for the "domain_notices" field.</summary>
    public const int DomainNoticesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Domains.V1Beta1.DomainNotice> _repeated_domainNotices_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Google.Cloud.Domains.V1Beta1.DomainNotice) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DomainNotice> domainNotices_ = new pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DomainNotice>();
    /// <summary>
    /// The list of domain notices that you acknowledge. Call
    /// `RetrieveRegisterParameters` to see the notices that need acknowledgement.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DomainNotice> DomainNotices {
      get { return domainNotices_; }
    }

    /// <summary>Field number for the "contact_notices" field.</summary>
    public const int ContactNoticesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Domains.V1Beta1.ContactNotice> _repeated_contactNotices_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Google.Cloud.Domains.V1Beta1.ContactNotice) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.ContactNotice> contactNotices_ = new pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.ContactNotice>();
    /// <summary>
    /// The list of contact notices that the caller acknowledges. The notices
    /// required here depend on the values specified in
    /// `registration.contact_settings`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.ContactNotice> ContactNotices {
      get { return contactNotices_; }
    }

    /// <summary>Field number for the "yearly_price" field.</summary>
    public const int YearlyPriceFieldNumber = 5;
    private global::Google.Type.Money yearlyPrice_;
    /// <summary>
    /// Required. Yearly price to register or renew the domain.
    /// The value that should be put here can be obtained from
    /// RetrieveRegisterParameters or SearchDomains calls.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Money YearlyPrice {
      get { return yearlyPrice_; }
      set {
        yearlyPrice_ = value;
      }
    }

    /// <summary>Field number for the "validate_only" field.</summary>
    public const int ValidateOnlyFieldNumber = 6;
    private bool validateOnly_;
    /// <summary>
    /// When true, only validation will be performed, without actually registering
    /// the domain. Follows:
    /// https://cloud.google.com/apis/design/design_patterns#request_validation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ValidateOnly {
      get { return validateOnly_; }
      set {
        validateOnly_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterDomainRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterDomainRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(Registration, other.Registration)) return false;
      if(!domainNotices_.Equals(other.domainNotices_)) return false;
      if(!contactNotices_.Equals(other.contactNotices_)) return false;
      if (!object.Equals(YearlyPrice, other.YearlyPrice)) return false;
      if (ValidateOnly != other.ValidateOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (registration_ != null) hash ^= Registration.GetHashCode();
      hash ^= domainNotices_.GetHashCode();
      hash ^= contactNotices_.GetHashCode();
      if (yearlyPrice_ != null) hash ^= YearlyPrice.GetHashCode();
      if (ValidateOnly != false) hash ^= ValidateOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (registration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Registration);
      }
      domainNotices_.WriteTo(output, _repeated_domainNotices_codec);
      contactNotices_.WriteTo(output, _repeated_contactNotices_codec);
      if (yearlyPrice_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(YearlyPrice);
      }
      if (ValidateOnly != false) {
        output.WriteRawTag(48);
        output.WriteBool(ValidateOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (registration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Registration);
      }
      domainNotices_.WriteTo(ref output, _repeated_domainNotices_codec);
      contactNotices_.WriteTo(ref output, _repeated_contactNotices_codec);
      if (yearlyPrice_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(YearlyPrice);
      }
      if (ValidateOnly != false) {
        output.WriteRawTag(48);
        output.WriteBool(ValidateOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (registration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Registration);
      }
      size += domainNotices_.CalculateSize(_repeated_domainNotices_codec);
      size += contactNotices_.CalculateSize(_repeated_contactNotices_codec);
      if (yearlyPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(YearlyPrice);
      }
      if (ValidateOnly != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterDomainRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.registration_ != null) {
        if (registration_ == null) {
          Registration = new global::Google.Cloud.Domains.V1Beta1.Registration();
        }
        Registration.MergeFrom(other.Registration);
      }
      domainNotices_.Add(other.domainNotices_);
      contactNotices_.Add(other.contactNotices_);
      if (other.yearlyPrice_ != null) {
        if (yearlyPrice_ == null) {
          YearlyPrice = new global::Google.Type.Money();
        }
        YearlyPrice.MergeFrom(other.YearlyPrice);
      }
      if (other.ValidateOnly != false) {
        ValidateOnly = other.ValidateOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (registration_ == null) {
              Registration = new global::Google.Cloud.Domains.V1Beta1.Registration();
            }
            input.ReadMessage(Registration);
            break;
          }
          case 26:
          case 24: {
            domainNotices_.AddEntriesFrom(input, _repeated_domainNotices_codec);
            break;
          }
          case 34:
          case 32: {
            contactNotices_.AddEntriesFrom(input, _repeated_contactNotices_codec);
            break;
          }
          case 42: {
            if (yearlyPrice_ == null) {
              YearlyPrice = new global::Google.Type.Money();
            }
            input.ReadMessage(YearlyPrice);
            break;
          }
          case 48: {
            ValidateOnly = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (registration_ == null) {
              Registration = new global::Google.Cloud.Domains.V1Beta1.Registration();
            }
            input.ReadMessage(Registration);
            break;
          }
          case 26:
          case 24: {
            domainNotices_.AddEntriesFrom(ref input, _repeated_domainNotices_codec);
            break;
          }
          case 34:
          case 32: {
            contactNotices_.AddEntriesFrom(ref input, _repeated_contactNotices_codec);
            break;
          }
          case 42: {
            if (yearlyPrice_ == null) {
              YearlyPrice = new global::Google.Type.Money();
            }
            input.ReadMessage(YearlyPrice);
            break;
          }
          case 48: {
            ValidateOnly = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `ListRegistrations` method.
  /// </summary>
  public sealed partial class ListRegistrationsRequest : pb::IMessage<ListRegistrationsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListRegistrationsRequest> _parser = new pb::MessageParser<ListRegistrationsRequest>(() => new ListRegistrationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRegistrationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRegistrationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRegistrationsRequest(ListRegistrationsRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRegistrationsRequest Clone() {
      return new ListRegistrationsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The project and location from which to list `Registration`s, specified in
    /// the format `projects/*/locations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// Maximum number of results to return.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// When set to the `next_page_token` from a prior response, provides the next
    /// page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// Filter expression to restrict the `Registration`s returned.
    ///
    /// The expression must specify the field name, a comparison operator, and the
    /// value that you want to use for filtering. The value must be a string, a
    /// number, a boolean, or an enum value. The comparison operator should be one
    /// of =, !=, >, &lt;, >=, &lt;=, or : for prefix or wildcard matches.
    ///
    /// For example, to filter to a specific domain name, use an expression like
    /// `domainName="example.com"`. You can also check for the existence of a
    /// field; for example, to find domains using custom DNS settings, use an
    /// expression like `dnsSettings.customDns:*`.
    ///
    /// You can also create compound filters by combining expressions with the
    /// `AND` and `OR` operators. For example, to find domains that are suspended
    /// or have specific issues flagged, use an expression like
    /// `(state=SUSPENDED) OR (issue:*)`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRegistrationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRegistrationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRegistrationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for the `ListRegistrations` method.
  /// </summary>
  public sealed partial class ListRegistrationsResponse : pb::IMessage<ListRegistrationsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListRegistrationsResponse> _parser = new pb::MessageParser<ListRegistrationsResponse>(() => new ListRegistrationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRegistrationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRegistrationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRegistrationsResponse(ListRegistrationsResponse other) : this() {
      registrations_ = other.registrations_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRegistrationsResponse Clone() {
      return new ListRegistrationsResponse(this);
    }

    /// <summary>Field number for the "registrations" field.</summary>
    public const int RegistrationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Domains.V1Beta1.Registration> _repeated_registrations_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Domains.V1Beta1.Registration.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.Registration> registrations_ = new pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.Registration>();
    /// <summary>
    /// A list of `Registration`s.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.Registration> Registrations {
      get { return registrations_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// When present, there are more results to retrieve. Set `page_token` to this
    /// value on a subsequent call to get the next page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRegistrationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRegistrationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!registrations_.Equals(other.registrations_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= registrations_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      registrations_.WriteTo(output, _repeated_registrations_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      registrations_.WriteTo(ref output, _repeated_registrations_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += registrations_.CalculateSize(_repeated_registrations_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRegistrationsResponse other) {
      if (other == null) {
        return;
      }
      registrations_.Add(other.registrations_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            registrations_.AddEntriesFrom(input, _repeated_registrations_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            registrations_.AddEntriesFrom(ref input, _repeated_registrations_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `GetRegistration` method.
  /// </summary>
  public sealed partial class GetRegistrationRequest : pb::IMessage<GetRegistrationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRegistrationRequest> _parser = new pb::MessageParser<GetRegistrationRequest>(() => new GetRegistrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRegistrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRegistrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRegistrationRequest(GetRegistrationRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRegistrationRequest Clone() {
      return new GetRegistrationRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the `Registration` to get, in the format
    /// `projects/*/locations/*/registrations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRegistrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRegistrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRegistrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `UpdateRegistration` method.
  /// </summary>
  public sealed partial class UpdateRegistrationRequest : pb::IMessage<UpdateRegistrationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateRegistrationRequest> _parser = new pb::MessageParser<UpdateRegistrationRequest>(() => new UpdateRegistrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRegistrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRegistrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRegistrationRequest(UpdateRegistrationRequest other) : this() {
      registration_ = other.registration_ != null ? other.registration_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRegistrationRequest Clone() {
      return new UpdateRegistrationRequest(this);
    }

    /// <summary>Field number for the "registration" field.</summary>
    public const int RegistrationFieldNumber = 1;
    private global::Google.Cloud.Domains.V1Beta1.Registration registration_;
    /// <summary>
    /// Fields of the `Registration` to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.Registration Registration {
      get { return registration_; }
      set {
        registration_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. The field mask describing which fields to update as a comma-separated list.
    /// For example, if only the labels are being updated, the `update_mask` would
    /// be `"labels"`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRegistrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRegistrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Registration, other.Registration)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (registration_ != null) hash ^= Registration.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (registration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Registration);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (registration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Registration);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (registration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Registration);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRegistrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.registration_ != null) {
        if (registration_ == null) {
          Registration = new global::Google.Cloud.Domains.V1Beta1.Registration();
        }
        Registration.MergeFrom(other.Registration);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (registration_ == null) {
              Registration = new global::Google.Cloud.Domains.V1Beta1.Registration();
            }
            input.ReadMessage(Registration);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (registration_ == null) {
              Registration = new global::Google.Cloud.Domains.V1Beta1.Registration();
            }
            input.ReadMessage(Registration);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `ConfigureManagementSettings` method.
  /// </summary>
  public sealed partial class ConfigureManagementSettingsRequest : pb::IMessage<ConfigureManagementSettingsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigureManagementSettingsRequest> _parser = new pb::MessageParser<ConfigureManagementSettingsRequest>(() => new ConfigureManagementSettingsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigureManagementSettingsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureManagementSettingsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureManagementSettingsRequest(ConfigureManagementSettingsRequest other) : this() {
      registration_ = other.registration_;
      managementSettings_ = other.managementSettings_ != null ? other.managementSettings_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureManagementSettingsRequest Clone() {
      return new ConfigureManagementSettingsRequest(this);
    }

    /// <summary>Field number for the "registration" field.</summary>
    public const int RegistrationFieldNumber = 1;
    private string registration_ = "";
    /// <summary>
    /// Required. The name of the `Registration` whose management settings are being updated,
    /// in the format `projects/*/locations/*/registrations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Registration {
      get { return registration_; }
      set {
        registration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "management_settings" field.</summary>
    public const int ManagementSettingsFieldNumber = 2;
    private global::Google.Cloud.Domains.V1Beta1.ManagementSettings managementSettings_;
    /// <summary>
    /// Fields of the `ManagementSettings` to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.ManagementSettings ManagementSettings {
      get { return managementSettings_; }
      set {
        managementSettings_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. The field mask describing which fields to update as a comma-separated list.
    /// For example, if only the transfer lock is being updated, the `update_mask`
    /// would be `"transfer_lock_state"`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigureManagementSettingsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigureManagementSettingsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Registration != other.Registration) return false;
      if (!object.Equals(ManagementSettings, other.ManagementSettings)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Registration.Length != 0) hash ^= Registration.GetHashCode();
      if (managementSettings_ != null) hash ^= ManagementSettings.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Registration.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Registration);
      }
      if (managementSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ManagementSettings);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Registration.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Registration);
      }
      if (managementSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ManagementSettings);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Registration.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Registration);
      }
      if (managementSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ManagementSettings);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigureManagementSettingsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Registration.Length != 0) {
        Registration = other.Registration;
      }
      if (other.managementSettings_ != null) {
        if (managementSettings_ == null) {
          ManagementSettings = new global::Google.Cloud.Domains.V1Beta1.ManagementSettings();
        }
        ManagementSettings.MergeFrom(other.ManagementSettings);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Registration = input.ReadString();
            break;
          }
          case 18: {
            if (managementSettings_ == null) {
              ManagementSettings = new global::Google.Cloud.Domains.V1Beta1.ManagementSettings();
            }
            input.ReadMessage(ManagementSettings);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Registration = input.ReadString();
            break;
          }
          case 18: {
            if (managementSettings_ == null) {
              ManagementSettings = new global::Google.Cloud.Domains.V1Beta1.ManagementSettings();
            }
            input.ReadMessage(ManagementSettings);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `ConfigureDnsSettings` method.
  /// </summary>
  public sealed partial class ConfigureDnsSettingsRequest : pb::IMessage<ConfigureDnsSettingsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigureDnsSettingsRequest> _parser = new pb::MessageParser<ConfigureDnsSettingsRequest>(() => new ConfigureDnsSettingsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigureDnsSettingsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureDnsSettingsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureDnsSettingsRequest(ConfigureDnsSettingsRequest other) : this() {
      registration_ = other.registration_;
      dnsSettings_ = other.dnsSettings_ != null ? other.dnsSettings_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      validateOnly_ = other.validateOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureDnsSettingsRequest Clone() {
      return new ConfigureDnsSettingsRequest(this);
    }

    /// <summary>Field number for the "registration" field.</summary>
    public const int RegistrationFieldNumber = 1;
    private string registration_ = "";
    /// <summary>
    /// Required. The name of the `Registration` whose DNS settings are being updated,
    /// in the format `projects/*/locations/*/registrations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Registration {
      get { return registration_; }
      set {
        registration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dns_settings" field.</summary>
    public const int DnsSettingsFieldNumber = 2;
    private global::Google.Cloud.Domains.V1Beta1.DnsSettings dnsSettings_;
    /// <summary>
    /// Fields of the `DnsSettings` to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.DnsSettings DnsSettings {
      get { return dnsSettings_; }
      set {
        dnsSettings_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. The field mask describing which fields to update as a comma-separated list.
    /// For example, if only the name servers are being updated for an existing
    /// Custom DNS configuration, the `update_mask` would be
    /// `"custom_dns.name_servers"`.
    ///
    /// When changing the DNS provider from one type to another, pass the new
    /// provider's field name as part of the field mask. For example, when changing
    /// from a Google Domains DNS configuration to a Custom DNS configuration, the
    /// `update_mask` would be `"custom_dns"`. //
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "validate_only" field.</summary>
    public const int ValidateOnlyFieldNumber = 4;
    private bool validateOnly_;
    /// <summary>
    /// Validate the request without actually updating the DNS settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ValidateOnly {
      get { return validateOnly_; }
      set {
        validateOnly_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigureDnsSettingsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigureDnsSettingsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Registration != other.Registration) return false;
      if (!object.Equals(DnsSettings, other.DnsSettings)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (ValidateOnly != other.ValidateOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Registration.Length != 0) hash ^= Registration.GetHashCode();
      if (dnsSettings_ != null) hash ^= DnsSettings.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (ValidateOnly != false) hash ^= ValidateOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Registration.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Registration);
      }
      if (dnsSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DnsSettings);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (ValidateOnly != false) {
        output.WriteRawTag(32);
        output.WriteBool(ValidateOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Registration.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Registration);
      }
      if (dnsSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DnsSettings);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (ValidateOnly != false) {
        output.WriteRawTag(32);
        output.WriteBool(ValidateOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Registration.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Registration);
      }
      if (dnsSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DnsSettings);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (ValidateOnly != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigureDnsSettingsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Registration.Length != 0) {
        Registration = other.Registration;
      }
      if (other.dnsSettings_ != null) {
        if (dnsSettings_ == null) {
          DnsSettings = new global::Google.Cloud.Domains.V1Beta1.DnsSettings();
        }
        DnsSettings.MergeFrom(other.DnsSettings);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.ValidateOnly != false) {
        ValidateOnly = other.ValidateOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Registration = input.ReadString();
            break;
          }
          case 18: {
            if (dnsSettings_ == null) {
              DnsSettings = new global::Google.Cloud.Domains.V1Beta1.DnsSettings();
            }
            input.ReadMessage(DnsSettings);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 32: {
            ValidateOnly = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Registration = input.ReadString();
            break;
          }
          case 18: {
            if (dnsSettings_ == null) {
              DnsSettings = new global::Google.Cloud.Domains.V1Beta1.DnsSettings();
            }
            input.ReadMessage(DnsSettings);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 32: {
            ValidateOnly = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `ConfigureContactSettings` method.
  /// </summary>
  public sealed partial class ConfigureContactSettingsRequest : pb::IMessage<ConfigureContactSettingsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigureContactSettingsRequest> _parser = new pb::MessageParser<ConfigureContactSettingsRequest>(() => new ConfigureContactSettingsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigureContactSettingsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureContactSettingsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureContactSettingsRequest(ConfigureContactSettingsRequest other) : this() {
      registration_ = other.registration_;
      contactSettings_ = other.contactSettings_ != null ? other.contactSettings_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      contactNotices_ = other.contactNotices_.Clone();
      validateOnly_ = other.validateOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigureContactSettingsRequest Clone() {
      return new ConfigureContactSettingsRequest(this);
    }

    /// <summary>Field number for the "registration" field.</summary>
    public const int RegistrationFieldNumber = 1;
    private string registration_ = "";
    /// <summary>
    /// Required. The name of the `Registration` whose contact settings are being updated,
    /// in the format `projects/*/locations/*/registrations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Registration {
      get { return registration_; }
      set {
        registration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contact_settings" field.</summary>
    public const int ContactSettingsFieldNumber = 2;
    private global::Google.Cloud.Domains.V1Beta1.ContactSettings contactSettings_;
    /// <summary>
    /// Fields of the `ContactSettings` to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.ContactSettings ContactSettings {
      get { return contactSettings_; }
      set {
        contactSettings_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. The field mask describing which fields to update as a comma-separated list.
    /// For example, if only the registrant contact is being updated, the
    /// `update_mask` would be `"registrant_contact"`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "contact_notices" field.</summary>
    public const int ContactNoticesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Domains.V1Beta1.ContactNotice> _repeated_contactNotices_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Google.Cloud.Domains.V1Beta1.ContactNotice) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.ContactNotice> contactNotices_ = new pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.ContactNotice>();
    /// <summary>
    /// The list of contact notices that the caller acknowledges. The notices
    /// required here depend on the values specified in `contact_settings`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.ContactNotice> ContactNotices {
      get { return contactNotices_; }
    }

    /// <summary>Field number for the "validate_only" field.</summary>
    public const int ValidateOnlyFieldNumber = 5;
    private bool validateOnly_;
    /// <summary>
    /// Validate the request without actually updating the contact settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ValidateOnly {
      get { return validateOnly_; }
      set {
        validateOnly_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigureContactSettingsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigureContactSettingsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Registration != other.Registration) return false;
      if (!object.Equals(ContactSettings, other.ContactSettings)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if(!contactNotices_.Equals(other.contactNotices_)) return false;
      if (ValidateOnly != other.ValidateOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Registration.Length != 0) hash ^= Registration.GetHashCode();
      if (contactSettings_ != null) hash ^= ContactSettings.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      hash ^= contactNotices_.GetHashCode();
      if (ValidateOnly != false) hash ^= ValidateOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Registration.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Registration);
      }
      if (contactSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContactSettings);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      contactNotices_.WriteTo(output, _repeated_contactNotices_codec);
      if (ValidateOnly != false) {
        output.WriteRawTag(40);
        output.WriteBool(ValidateOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Registration.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Registration);
      }
      if (contactSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContactSettings);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      contactNotices_.WriteTo(ref output, _repeated_contactNotices_codec);
      if (ValidateOnly != false) {
        output.WriteRawTag(40);
        output.WriteBool(ValidateOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Registration.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Registration);
      }
      if (contactSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContactSettings);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      size += contactNotices_.CalculateSize(_repeated_contactNotices_codec);
      if (ValidateOnly != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigureContactSettingsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Registration.Length != 0) {
        Registration = other.Registration;
      }
      if (other.contactSettings_ != null) {
        if (contactSettings_ == null) {
          ContactSettings = new global::Google.Cloud.Domains.V1Beta1.ContactSettings();
        }
        ContactSettings.MergeFrom(other.ContactSettings);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      contactNotices_.Add(other.contactNotices_);
      if (other.ValidateOnly != false) {
        ValidateOnly = other.ValidateOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Registration = input.ReadString();
            break;
          }
          case 18: {
            if (contactSettings_ == null) {
              ContactSettings = new global::Google.Cloud.Domains.V1Beta1.ContactSettings();
            }
            input.ReadMessage(ContactSettings);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 34:
          case 32: {
            contactNotices_.AddEntriesFrom(input, _repeated_contactNotices_codec);
            break;
          }
          case 40: {
            ValidateOnly = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Registration = input.ReadString();
            break;
          }
          case 18: {
            if (contactSettings_ == null) {
              ContactSettings = new global::Google.Cloud.Domains.V1Beta1.ContactSettings();
            }
            input.ReadMessage(ContactSettings);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 34:
          case 32: {
            contactNotices_.AddEntriesFrom(ref input, _repeated_contactNotices_codec);
            break;
          }
          case 40: {
            ValidateOnly = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `ExportRegistration` method.
  /// </summary>
  public sealed partial class ExportRegistrationRequest : pb::IMessage<ExportRegistrationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExportRegistrationRequest> _parser = new pb::MessageParser<ExportRegistrationRequest>(() => new ExportRegistrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExportRegistrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportRegistrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportRegistrationRequest(ExportRegistrationRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportRegistrationRequest Clone() {
      return new ExportRegistrationRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the `Registration` to export,
    /// in the format `projects/*/locations/*/registrations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExportRegistrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExportRegistrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExportRegistrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `DeleteRegistration` method.
  /// </summary>
  public sealed partial class DeleteRegistrationRequest : pb::IMessage<DeleteRegistrationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteRegistrationRequest> _parser = new pb::MessageParser<DeleteRegistrationRequest>(() => new DeleteRegistrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRegistrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRegistrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRegistrationRequest(DeleteRegistrationRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRegistrationRequest Clone() {
      return new DeleteRegistrationRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the `Registration` to delete,
    /// in the format `projects/*/locations/*/registrations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRegistrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRegistrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRegistrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `RetrieveAuthorizationCode` method.
  /// </summary>
  public sealed partial class RetrieveAuthorizationCodeRequest : pb::IMessage<RetrieveAuthorizationCodeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RetrieveAuthorizationCodeRequest> _parser = new pb::MessageParser<RetrieveAuthorizationCodeRequest>(() => new RetrieveAuthorizationCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RetrieveAuthorizationCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveAuthorizationCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveAuthorizationCodeRequest(RetrieveAuthorizationCodeRequest other) : this() {
      registration_ = other.registration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RetrieveAuthorizationCodeRequest Clone() {
      return new RetrieveAuthorizationCodeRequest(this);
    }

    /// <summary>Field number for the "registration" field.</summary>
    public const int RegistrationFieldNumber = 1;
    private string registration_ = "";
    /// <summary>
    /// Required. The name of the `Registration` whose authorization code is being retrieved,
    /// in the format `projects/*/locations/*/registrations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Registration {
      get { return registration_; }
      set {
        registration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RetrieveAuthorizationCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RetrieveAuthorizationCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Registration != other.Registration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Registration.Length != 0) hash ^= Registration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Registration.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Registration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Registration.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Registration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Registration.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Registration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RetrieveAuthorizationCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Registration.Length != 0) {
        Registration = other.Registration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Registration = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Registration = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the `ResetAuthorizationCode` method.
  /// </summary>
  public sealed partial class ResetAuthorizationCodeRequest : pb::IMessage<ResetAuthorizationCodeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResetAuthorizationCodeRequest> _parser = new pb::MessageParser<ResetAuthorizationCodeRequest>(() => new ResetAuthorizationCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResetAuthorizationCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetAuthorizationCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetAuthorizationCodeRequest(ResetAuthorizationCodeRequest other) : this() {
      registration_ = other.registration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetAuthorizationCodeRequest Clone() {
      return new ResetAuthorizationCodeRequest(this);
    }

    /// <summary>Field number for the "registration" field.</summary>
    public const int RegistrationFieldNumber = 1;
    private string registration_ = "";
    /// <summary>
    /// Required. The name of the `Registration` whose authorization code is being reset,
    /// in the format `projects/*/locations/*/registrations/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Registration {
      get { return registration_; }
      set {
        registration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResetAuthorizationCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResetAuthorizationCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Registration != other.Registration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Registration.Length != 0) hash ^= Registration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Registration.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Registration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Registration.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Registration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Registration.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Registration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResetAuthorizationCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Registration.Length != 0) {
        Registration = other.Registration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Registration = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Registration = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Parameters required to register a new domain.
  /// </summary>
  public sealed partial class RegisterParameters : pb::IMessage<RegisterParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterParameters> _parser = new pb::MessageParser<RegisterParameters>(() => new RegisterParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterParameters(RegisterParameters other) : this() {
      domainName_ = other.domainName_;
      availability_ = other.availability_;
      supportedPrivacy_ = other.supportedPrivacy_.Clone();
      domainNotices_ = other.domainNotices_.Clone();
      yearlyPrice_ = other.yearlyPrice_ != null ? other.yearlyPrice_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterParameters Clone() {
      return new RegisterParameters(this);
    }

    /// <summary>Field number for the "domain_name" field.</summary>
    public const int DomainNameFieldNumber = 1;
    private string domainName_ = "";
    /// <summary>
    /// The domain name. Unicode domain names are expressed in Punycode format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DomainName {
      get { return domainName_; }
      set {
        domainName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "availability" field.</summary>
    public const int AvailabilityFieldNumber = 2;
    private global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Types.Availability availability_ = global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Types.Availability.Unspecified;
    /// <summary>
    /// Indicates whether the domain is available for registration. This value is
    /// accurate when obtained by calling `RetrieveRegisterParameters`, but is
    /// approximate when obtained by calling `SearchDomains`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Types.Availability Availability {
      get { return availability_; }
      set {
        availability_ = value;
      }
    }

    /// <summary>Field number for the "supported_privacy" field.</summary>
    public const int SupportedPrivacyFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Domains.V1Beta1.ContactPrivacy> _repeated_supportedPrivacy_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Google.Cloud.Domains.V1Beta1.ContactPrivacy) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.ContactPrivacy> supportedPrivacy_ = new pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.ContactPrivacy>();
    /// <summary>
    /// Contact privacy options that the domain supports.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.ContactPrivacy> SupportedPrivacy {
      get { return supportedPrivacy_; }
    }

    /// <summary>Field number for the "domain_notices" field.</summary>
    public const int DomainNoticesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Domains.V1Beta1.DomainNotice> _repeated_domainNotices_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Google.Cloud.Domains.V1Beta1.DomainNotice) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DomainNotice> domainNotices_ = new pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DomainNotice>();
    /// <summary>
    /// Notices about special properties of the domain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Domains.V1Beta1.DomainNotice> DomainNotices {
      get { return domainNotices_; }
    }

    /// <summary>Field number for the "yearly_price" field.</summary>
    public const int YearlyPriceFieldNumber = 5;
    private global::Google.Type.Money yearlyPrice_;
    /// <summary>
    /// Price to register or renew the domain for one year.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Money YearlyPrice {
      get { return yearlyPrice_; }
      set {
        yearlyPrice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DomainName != other.DomainName) return false;
      if (Availability != other.Availability) return false;
      if(!supportedPrivacy_.Equals(other.supportedPrivacy_)) return false;
      if(!domainNotices_.Equals(other.domainNotices_)) return false;
      if (!object.Equals(YearlyPrice, other.YearlyPrice)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DomainName.Length != 0) hash ^= DomainName.GetHashCode();
      if (Availability != global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Types.Availability.Unspecified) hash ^= Availability.GetHashCode();
      hash ^= supportedPrivacy_.GetHashCode();
      hash ^= domainNotices_.GetHashCode();
      if (yearlyPrice_ != null) hash ^= YearlyPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DomainName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DomainName);
      }
      if (Availability != global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Types.Availability.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Availability);
      }
      supportedPrivacy_.WriteTo(output, _repeated_supportedPrivacy_codec);
      domainNotices_.WriteTo(output, _repeated_domainNotices_codec);
      if (yearlyPrice_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(YearlyPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DomainName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DomainName);
      }
      if (Availability != global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Types.Availability.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Availability);
      }
      supportedPrivacy_.WriteTo(ref output, _repeated_supportedPrivacy_codec);
      domainNotices_.WriteTo(ref output, _repeated_domainNotices_codec);
      if (yearlyPrice_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(YearlyPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DomainName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainName);
      }
      if (Availability != global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Types.Availability.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Availability);
      }
      size += supportedPrivacy_.CalculateSize(_repeated_supportedPrivacy_codec);
      size += domainNotices_.CalculateSize(_repeated_domainNotices_codec);
      if (yearlyPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(YearlyPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterParameters other) {
      if (other == null) {
        return;
      }
      if (other.DomainName.Length != 0) {
        DomainName = other.DomainName;
      }
      if (other.Availability != global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Types.Availability.Unspecified) {
        Availability = other.Availability;
      }
      supportedPrivacy_.Add(other.supportedPrivacy_);
      domainNotices_.Add(other.domainNotices_);
      if (other.yearlyPrice_ != null) {
        if (yearlyPrice_ == null) {
          YearlyPrice = new global::Google.Type.Money();
        }
        YearlyPrice.MergeFrom(other.YearlyPrice);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DomainName = input.ReadString();
            break;
          }
          case 16: {
            Availability = (global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Types.Availability) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            supportedPrivacy_.AddEntriesFrom(input, _repeated_supportedPrivacy_codec);
            break;
          }
          case 34:
          case 32: {
            domainNotices_.AddEntriesFrom(input, _repeated_domainNotices_codec);
            break;
          }
          case 42: {
            if (yearlyPrice_ == null) {
              YearlyPrice = new global::Google.Type.Money();
            }
            input.ReadMessage(YearlyPrice);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DomainName = input.ReadString();
            break;
          }
          case 16: {
            Availability = (global::Google.Cloud.Domains.V1Beta1.RegisterParameters.Types.Availability) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            supportedPrivacy_.AddEntriesFrom(ref input, _repeated_supportedPrivacy_codec);
            break;
          }
          case 34:
          case 32: {
            domainNotices_.AddEntriesFrom(ref input, _repeated_domainNotices_codec);
            break;
          }
          case 42: {
            if (yearlyPrice_ == null) {
              YearlyPrice = new global::Google.Type.Money();
            }
            input.ReadMessage(YearlyPrice);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RegisterParameters message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible availability states of a domain name.
      /// </summary>
      public enum Availability {
        /// <summary>
        /// The availability is unspecified.
        /// </summary>
        [pbr::OriginalName("AVAILABILITY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The domain is available for registration.
        /// </summary>
        [pbr::OriginalName("AVAILABLE")] Available = 1,
        /// <summary>
        /// The domain is not available for registration. Generally this means it is
        /// already registered to another party.
        /// </summary>
        [pbr::OriginalName("UNAVAILABLE")] Unavailable = 2,
        /// <summary>
        /// The domain is not currently supported by Cloud Domains, but may
        /// be available elsewhere.
        /// </summary>
        [pbr::OriginalName("UNSUPPORTED")] Unsupported = 3,
        /// <summary>
        /// Cloud Domains is unable to determine domain availability, generally
        /// due to system maintenance at the domain name registry.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Defines an authorization code.
  /// </summary>
  public sealed partial class AuthorizationCode : pb::IMessage<AuthorizationCode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthorizationCode> _parser = new pb::MessageParser<AuthorizationCode>(() => new AuthorizationCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthorizationCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizationCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizationCode(AuthorizationCode other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizationCode Clone() {
      return new AuthorizationCode(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    /// <summary>
    /// The Authorization Code in ASCII. It can be used to transfer the domain
    /// to or from another registrar.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthorizationCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthorizationCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthorizationCode other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents the metadata of the long-running operation. Output only.
  /// </summary>
  public sealed partial class OperationMetadata : pb::IMessage<OperationMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OperationMetadata> _parser = new pb::MessageParser<OperationMetadata>(() => new OperationMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata(OperationMetadata other) : this() {
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      target_ = other.target_;
      verb_ = other.verb_;
      statusDetail_ = other.statusDetail_;
      apiVersion_ = other.apiVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata Clone() {
      return new OperationMetadata(this);
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// The time the operation was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The time the operation finished running.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 3;
    private string target_ = "";
    /// <summary>
    /// Server-defined resource path for the target of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "verb" field.</summary>
    public const int VerbFieldNumber = 4;
    private string verb_ = "";
    /// <summary>
    /// Name of the verb executed by the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Verb {
      get { return verb_; }
      set {
        verb_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status_detail" field.</summary>
    public const int StatusDetailFieldNumber = 5;
    private string statusDetail_ = "";
    /// <summary>
    /// Human-readable status of the operation, if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusDetail {
      get { return statusDetail_; }
      set {
        statusDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "api_version" field.</summary>
    public const int ApiVersionFieldNumber = 6;
    private string apiVersion_ = "";
    /// <summary>
    /// API version used to start the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApiVersion {
      get { return apiVersion_; }
      set {
        apiVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Target != other.Target) return false;
      if (Verb != other.Verb) return false;
      if (StatusDetail != other.StatusDetail) return false;
      if (ApiVersion != other.ApiVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (Verb.Length != 0) hash ^= Verb.GetHashCode();
      if (StatusDetail.Length != 0) hash ^= StatusDetail.GetHashCode();
      if (ApiVersion.Length != 0) hash ^= ApiVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (Verb.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Verb);
      }
      if (StatusDetail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusDetail);
      }
      if (ApiVersion.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ApiVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (Verb.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Verb);
      }
      if (StatusDetail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusDetail);
      }
      if (ApiVersion.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ApiVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (Verb.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Verb);
      }
      if (StatusDetail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusDetail);
      }
      if (ApiVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.Verb.Length != 0) {
        Verb = other.Verb;
      }
      if (other.StatusDetail.Length != 0) {
        StatusDetail = other.StatusDetail;
      }
      if (other.ApiVersion.Length != 0) {
        ApiVersion = other.ApiVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            Verb = input.ReadString();
            break;
          }
          case 42: {
            StatusDetail = input.ReadString();
            break;
          }
          case 50: {
            ApiVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            Verb = input.ReadString();
            break;
          }
          case 42: {
            StatusDetail = input.ReadString();
            break;
          }
          case 50: {
            ApiVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
