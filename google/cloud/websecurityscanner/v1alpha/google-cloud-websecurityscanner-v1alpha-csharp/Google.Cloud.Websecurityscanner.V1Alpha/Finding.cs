// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/websecurityscanner/v1alpha/finding.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Websecurityscanner.V1Alpha {

  /// <summary>Holder for reflection information generated from google/cloud/websecurityscanner/v1alpha/finding.proto</summary>
  public static partial class FindingReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/websecurityscanner/v1alpha/finding.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FindingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVnb29nbGUvY2xvdWQvd2Vic2VjdXJpdHlzY2FubmVyL3YxYWxwaGEvZmlu",
            "ZGluZy5wcm90bxInZ29vZ2xlLmNsb3VkLndlYnNlY3VyaXR5c2Nhbm5lci52",
            "MWFscGhhGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGjtnb29nbGUvY2xv",
            "dWQvd2Vic2VjdXJpdHlzY2FubmVyL3YxYWxwaGEvZmluZGluZ19hZGRvbi5w",
            "cm90byLpCAoHRmluZGluZxIMCgRuYW1lGAEgASgJElIKDGZpbmRpbmdfdHlw",
            "ZRgCIAEoDjI8Lmdvb2dsZS5jbG91ZC53ZWJzZWN1cml0eXNjYW5uZXIudjFh",
            "bHBoYS5GaW5kaW5nLkZpbmRpbmdUeXBlEhMKC2h0dHBfbWV0aG9kGAMgASgJ",
            "EhIKCmZ1enplZF91cmwYBCABKAkSDAoEYm9keRgFIAEoCRITCgtkZXNjcmlw",
            "dGlvbhgGIAEoCRIYChByZXByb2R1Y3Rpb25fdXJsGAcgASgJEhEKCWZyYW1l",
            "X3VybBgIIAEoCRIRCglmaW5hbF91cmwYCSABKAkSEwoLdHJhY2tpbmdfaWQY",
            "CiABKAkSUgoQb3V0ZGF0ZWRfbGlicmFyeRgLIAEoCzI4Lmdvb2dsZS5jbG91",
            "ZC53ZWJzZWN1cml0eXNjYW5uZXIudjFhbHBoYS5PdXRkYXRlZExpYnJhcnkS",
            "VgoSdmlvbGF0aW5nX3Jlc291cmNlGAwgASgLMjouZ29vZ2xlLmNsb3VkLndl",
            "YnNlY3VyaXR5c2Nhbm5lci52MWFscGhhLlZpb2xhdGluZ1Jlc291cmNlElYK",
            "EnZ1bG5lcmFibGVfaGVhZGVycxgPIAEoCzI6Lmdvb2dsZS5jbG91ZC53ZWJz",
            "ZWN1cml0eXNjYW5uZXIudjFhbHBoYS5WdWxuZXJhYmxlSGVhZGVycxJcChV2",
            "dWxuZXJhYmxlX3BhcmFtZXRlcnMYDSABKAsyPS5nb29nbGUuY2xvdWQud2Vi",
            "c2VjdXJpdHlzY2FubmVyLnYxYWxwaGEuVnVsbmVyYWJsZVBhcmFtZXRlcnMS",
            "OQoDeHNzGA4gASgLMiwuZ29vZ2xlLmNsb3VkLndlYnNlY3VyaXR5c2Nhbm5l",
            "ci52MWFscGhhLlhzcyK2AgoLRmluZGluZ1R5cGUSHAoYRklORElOR19UWVBF",
            "X1VOU1BFQ0lGSUVEEAASEQoNTUlYRURfQ09OVEVOVBABEhQKEE9VVERBVEVE",
            "X0xJQlJBUlkQAhIRCg1ST1NFVFRBX0ZMQVNIEAUSEAoMWFNTX0NBTExCQUNL",
            "EAMSDQoJWFNTX0VSUk9SEAQSFwoTQ0xFQVJfVEVYVF9QQVNTV09SRBAGEhgK",
            "FElOVkFMSURfQ09OVEVOVF9UWVBFEAcSGAoUWFNTX0FOR1VMQVJfQ0FMTEJB",
            "Q0sQCBISCg5JTlZBTElEX0hFQURFUhAJEiMKH01JU1NQRUxMRURfU0VDVVJJ",
            "VFlfSEVBREVSX05BTUUQChImCiJNSVNNQVRDSElOR19TRUNVUklUWV9IRUFE",
            "RVJfVkFMVUVTEAs6hAHqQYABCil3ZWJzZWN1cml0eXNjYW5uZXIuZ29vZ2xl",
            "YXBpcy5jb20vRmluZGluZxJTcHJvamVjdHMve3Byb2plY3R9L3NjYW5Db25m",
            "aWdzL3tzY2FuX2NvbmZpZ30vc2NhblJ1bnMve3NjYW5fcnVufS9maW5kaW5n",
            "cy97ZmluZGluZ31CmAEKK2NvbS5nb29nbGUuY2xvdWQud2Vic2VjdXJpdHlz",
            "Y2FubmVyLnYxYWxwaGFCDEZpbmRpbmdQcm90b1ABWllnb29nbGUuZ29sYW5n",
            "Lm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Nsb3VkL3dlYnNlY3VyaXR5c2Nh",
            "bm5lci92MWFscGhhO3dlYnNlY3VyaXR5c2Nhbm5lcmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Websecurityscanner.V1Alpha.FindingAddonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Websecurityscanner.V1Alpha.Finding), global::Google.Cloud.Websecurityscanner.V1Alpha.Finding.Parser, new[]{ "Name", "FindingType", "HttpMethod", "FuzzedUrl", "Body", "Description", "ReproductionUrl", "FrameUrl", "FinalUrl", "TrackingId", "OutdatedLibrary", "ViolatingResource", "VulnerableHeaders", "VulnerableParameters", "Xss" }, null, new[]{ typeof(global::Google.Cloud.Websecurityscanner.V1Alpha.Finding.Types.FindingType) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A Finding resource represents a vulnerability instance identified during a
  /// ScanRun.
  /// </summary>
  public sealed partial class Finding : pb::IMessage<Finding>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Finding> _parser = new pb::MessageParser<Finding>(() => new Finding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Finding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Websecurityscanner.V1Alpha.FindingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Finding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Finding(Finding other) : this() {
      name_ = other.name_;
      findingType_ = other.findingType_;
      httpMethod_ = other.httpMethod_;
      fuzzedUrl_ = other.fuzzedUrl_;
      body_ = other.body_;
      description_ = other.description_;
      reproductionUrl_ = other.reproductionUrl_;
      frameUrl_ = other.frameUrl_;
      finalUrl_ = other.finalUrl_;
      trackingId_ = other.trackingId_;
      outdatedLibrary_ = other.outdatedLibrary_ != null ? other.outdatedLibrary_.Clone() : null;
      violatingResource_ = other.violatingResource_ != null ? other.violatingResource_.Clone() : null;
      vulnerableHeaders_ = other.vulnerableHeaders_ != null ? other.vulnerableHeaders_.Clone() : null;
      vulnerableParameters_ = other.vulnerableParameters_ != null ? other.vulnerableParameters_.Clone() : null;
      xss_ = other.xss_ != null ? other.xss_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Finding Clone() {
      return new Finding(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The resource name of the Finding. The name follows the format of
    /// 'projects/{projectId}/scanConfigs/{scanConfigId}/scanruns/{scanRunId}/findings/{findingId}'.
    /// The finding IDs are generated by the system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "finding_type" field.</summary>
    public const int FindingTypeFieldNumber = 2;
    private global::Google.Cloud.Websecurityscanner.V1Alpha.Finding.Types.FindingType findingType_ = global::Google.Cloud.Websecurityscanner.V1Alpha.Finding.Types.FindingType.Unspecified;
    /// <summary>
    /// The type of the Finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Websecurityscanner.V1Alpha.Finding.Types.FindingType FindingType {
      get { return findingType_; }
      set {
        findingType_ = value;
      }
    }

    /// <summary>Field number for the "http_method" field.</summary>
    public const int HttpMethodFieldNumber = 3;
    private string httpMethod_ = "";
    /// <summary>
    /// The http method of the request that triggered the vulnerability, in
    /// uppercase.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HttpMethod {
      get { return httpMethod_; }
      set {
        httpMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fuzzed_url" field.</summary>
    public const int FuzzedUrlFieldNumber = 4;
    private string fuzzedUrl_ = "";
    /// <summary>
    /// The URL produced by the server-side fuzzer and used in the request that
    /// triggered the vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FuzzedUrl {
      get { return fuzzedUrl_; }
      set {
        fuzzedUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 5;
    private string body_ = "";
    /// <summary>
    /// The body of the request that triggered the vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    /// <summary>
    /// The description of the vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reproduction_url" field.</summary>
    public const int ReproductionUrlFieldNumber = 7;
    private string reproductionUrl_ = "";
    /// <summary>
    /// The URL containing human-readable payload that user can leverage to
    /// reproduce the vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReproductionUrl {
      get { return reproductionUrl_; }
      set {
        reproductionUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frame_url" field.</summary>
    public const int FrameUrlFieldNumber = 8;
    private string frameUrl_ = "";
    /// <summary>
    /// If the vulnerability was originated from nested IFrame, the immediate
    /// parent IFrame is reported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FrameUrl {
      get { return frameUrl_; }
      set {
        frameUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "final_url" field.</summary>
    public const int FinalUrlFieldNumber = 9;
    private string finalUrl_ = "";
    /// <summary>
    /// The URL where the browser lands when the vulnerability is detected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FinalUrl {
      get { return finalUrl_; }
      set {
        finalUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tracking_id" field.</summary>
    public const int TrackingIdFieldNumber = 10;
    private string trackingId_ = "";
    /// <summary>
    /// The tracking ID uniquely identifies a vulnerability instance across
    /// multiple ScanRuns.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrackingId {
      get { return trackingId_; }
      set {
        trackingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "outdated_library" field.</summary>
    public const int OutdatedLibraryFieldNumber = 11;
    private global::Google.Cloud.Websecurityscanner.V1Alpha.OutdatedLibrary outdatedLibrary_;
    /// <summary>
    /// An addon containing information about outdated libraries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Websecurityscanner.V1Alpha.OutdatedLibrary OutdatedLibrary {
      get { return outdatedLibrary_; }
      set {
        outdatedLibrary_ = value;
      }
    }

    /// <summary>Field number for the "violating_resource" field.</summary>
    public const int ViolatingResourceFieldNumber = 12;
    private global::Google.Cloud.Websecurityscanner.V1Alpha.ViolatingResource violatingResource_;
    /// <summary>
    /// An addon containing detailed information regarding any resource causing the
    /// vulnerability such as JavaScript sources, image, audio files, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Websecurityscanner.V1Alpha.ViolatingResource ViolatingResource {
      get { return violatingResource_; }
      set {
        violatingResource_ = value;
      }
    }

    /// <summary>Field number for the "vulnerable_headers" field.</summary>
    public const int VulnerableHeadersFieldNumber = 15;
    private global::Google.Cloud.Websecurityscanner.V1Alpha.VulnerableHeaders vulnerableHeaders_;
    /// <summary>
    /// An addon containing information about vulnerable or missing HTTP headers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Websecurityscanner.V1Alpha.VulnerableHeaders VulnerableHeaders {
      get { return vulnerableHeaders_; }
      set {
        vulnerableHeaders_ = value;
      }
    }

    /// <summary>Field number for the "vulnerable_parameters" field.</summary>
    public const int VulnerableParametersFieldNumber = 13;
    private global::Google.Cloud.Websecurityscanner.V1Alpha.VulnerableParameters vulnerableParameters_;
    /// <summary>
    /// An addon containing information about request parameters which were found
    /// to be vulnerable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Websecurityscanner.V1Alpha.VulnerableParameters VulnerableParameters {
      get { return vulnerableParameters_; }
      set {
        vulnerableParameters_ = value;
      }
    }

    /// <summary>Field number for the "xss" field.</summary>
    public const int XssFieldNumber = 14;
    private global::Google.Cloud.Websecurityscanner.V1Alpha.Xss xss_;
    /// <summary>
    /// An addon containing information reported for an XSS, if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Websecurityscanner.V1Alpha.Xss Xss {
      get { return xss_; }
      set {
        xss_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Finding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Finding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (FindingType != other.FindingType) return false;
      if (HttpMethod != other.HttpMethod) return false;
      if (FuzzedUrl != other.FuzzedUrl) return false;
      if (Body != other.Body) return false;
      if (Description != other.Description) return false;
      if (ReproductionUrl != other.ReproductionUrl) return false;
      if (FrameUrl != other.FrameUrl) return false;
      if (FinalUrl != other.FinalUrl) return false;
      if (TrackingId != other.TrackingId) return false;
      if (!object.Equals(OutdatedLibrary, other.OutdatedLibrary)) return false;
      if (!object.Equals(ViolatingResource, other.ViolatingResource)) return false;
      if (!object.Equals(VulnerableHeaders, other.VulnerableHeaders)) return false;
      if (!object.Equals(VulnerableParameters, other.VulnerableParameters)) return false;
      if (!object.Equals(Xss, other.Xss)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (FindingType != global::Google.Cloud.Websecurityscanner.V1Alpha.Finding.Types.FindingType.Unspecified) hash ^= FindingType.GetHashCode();
      if (HttpMethod.Length != 0) hash ^= HttpMethod.GetHashCode();
      if (FuzzedUrl.Length != 0) hash ^= FuzzedUrl.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (ReproductionUrl.Length != 0) hash ^= ReproductionUrl.GetHashCode();
      if (FrameUrl.Length != 0) hash ^= FrameUrl.GetHashCode();
      if (FinalUrl.Length != 0) hash ^= FinalUrl.GetHashCode();
      if (TrackingId.Length != 0) hash ^= TrackingId.GetHashCode();
      if (outdatedLibrary_ != null) hash ^= OutdatedLibrary.GetHashCode();
      if (violatingResource_ != null) hash ^= ViolatingResource.GetHashCode();
      if (vulnerableHeaders_ != null) hash ^= VulnerableHeaders.GetHashCode();
      if (vulnerableParameters_ != null) hash ^= VulnerableParameters.GetHashCode();
      if (xss_ != null) hash ^= Xss.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (FindingType != global::Google.Cloud.Websecurityscanner.V1Alpha.Finding.Types.FindingType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FindingType);
      }
      if (HttpMethod.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HttpMethod);
      }
      if (FuzzedUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FuzzedUrl);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Body);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (ReproductionUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ReproductionUrl);
      }
      if (FrameUrl.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FrameUrl);
      }
      if (FinalUrl.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FinalUrl);
      }
      if (TrackingId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(TrackingId);
      }
      if (outdatedLibrary_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(OutdatedLibrary);
      }
      if (violatingResource_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ViolatingResource);
      }
      if (vulnerableParameters_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(VulnerableParameters);
      }
      if (xss_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Xss);
      }
      if (vulnerableHeaders_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(VulnerableHeaders);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (FindingType != global::Google.Cloud.Websecurityscanner.V1Alpha.Finding.Types.FindingType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FindingType);
      }
      if (HttpMethod.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HttpMethod);
      }
      if (FuzzedUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FuzzedUrl);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Body);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (ReproductionUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ReproductionUrl);
      }
      if (FrameUrl.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FrameUrl);
      }
      if (FinalUrl.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FinalUrl);
      }
      if (TrackingId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(TrackingId);
      }
      if (outdatedLibrary_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(OutdatedLibrary);
      }
      if (violatingResource_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ViolatingResource);
      }
      if (vulnerableParameters_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(VulnerableParameters);
      }
      if (xss_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Xss);
      }
      if (vulnerableHeaders_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(VulnerableHeaders);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (FindingType != global::Google.Cloud.Websecurityscanner.V1Alpha.Finding.Types.FindingType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FindingType);
      }
      if (HttpMethod.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HttpMethod);
      }
      if (FuzzedUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FuzzedUrl);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (ReproductionUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReproductionUrl);
      }
      if (FrameUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameUrl);
      }
      if (FinalUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FinalUrl);
      }
      if (TrackingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackingId);
      }
      if (outdatedLibrary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutdatedLibrary);
      }
      if (violatingResource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ViolatingResource);
      }
      if (vulnerableHeaders_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VulnerableHeaders);
      }
      if (vulnerableParameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VulnerableParameters);
      }
      if (xss_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Xss);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Finding other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.FindingType != global::Google.Cloud.Websecurityscanner.V1Alpha.Finding.Types.FindingType.Unspecified) {
        FindingType = other.FindingType;
      }
      if (other.HttpMethod.Length != 0) {
        HttpMethod = other.HttpMethod;
      }
      if (other.FuzzedUrl.Length != 0) {
        FuzzedUrl = other.FuzzedUrl;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.ReproductionUrl.Length != 0) {
        ReproductionUrl = other.ReproductionUrl;
      }
      if (other.FrameUrl.Length != 0) {
        FrameUrl = other.FrameUrl;
      }
      if (other.FinalUrl.Length != 0) {
        FinalUrl = other.FinalUrl;
      }
      if (other.TrackingId.Length != 0) {
        TrackingId = other.TrackingId;
      }
      if (other.outdatedLibrary_ != null) {
        if (outdatedLibrary_ == null) {
          OutdatedLibrary = new global::Google.Cloud.Websecurityscanner.V1Alpha.OutdatedLibrary();
        }
        OutdatedLibrary.MergeFrom(other.OutdatedLibrary);
      }
      if (other.violatingResource_ != null) {
        if (violatingResource_ == null) {
          ViolatingResource = new global::Google.Cloud.Websecurityscanner.V1Alpha.ViolatingResource();
        }
        ViolatingResource.MergeFrom(other.ViolatingResource);
      }
      if (other.vulnerableHeaders_ != null) {
        if (vulnerableHeaders_ == null) {
          VulnerableHeaders = new global::Google.Cloud.Websecurityscanner.V1Alpha.VulnerableHeaders();
        }
        VulnerableHeaders.MergeFrom(other.VulnerableHeaders);
      }
      if (other.vulnerableParameters_ != null) {
        if (vulnerableParameters_ == null) {
          VulnerableParameters = new global::Google.Cloud.Websecurityscanner.V1Alpha.VulnerableParameters();
        }
        VulnerableParameters.MergeFrom(other.VulnerableParameters);
      }
      if (other.xss_ != null) {
        if (xss_ == null) {
          Xss = new global::Google.Cloud.Websecurityscanner.V1Alpha.Xss();
        }
        Xss.MergeFrom(other.Xss);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            FindingType = (global::Google.Cloud.Websecurityscanner.V1Alpha.Finding.Types.FindingType) input.ReadEnum();
            break;
          }
          case 26: {
            HttpMethod = input.ReadString();
            break;
          }
          case 34: {
            FuzzedUrl = input.ReadString();
            break;
          }
          case 42: {
            Body = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 58: {
            ReproductionUrl = input.ReadString();
            break;
          }
          case 66: {
            FrameUrl = input.ReadString();
            break;
          }
          case 74: {
            FinalUrl = input.ReadString();
            break;
          }
          case 82: {
            TrackingId = input.ReadString();
            break;
          }
          case 90: {
            if (outdatedLibrary_ == null) {
              OutdatedLibrary = new global::Google.Cloud.Websecurityscanner.V1Alpha.OutdatedLibrary();
            }
            input.ReadMessage(OutdatedLibrary);
            break;
          }
          case 98: {
            if (violatingResource_ == null) {
              ViolatingResource = new global::Google.Cloud.Websecurityscanner.V1Alpha.ViolatingResource();
            }
            input.ReadMessage(ViolatingResource);
            break;
          }
          case 106: {
            if (vulnerableParameters_ == null) {
              VulnerableParameters = new global::Google.Cloud.Websecurityscanner.V1Alpha.VulnerableParameters();
            }
            input.ReadMessage(VulnerableParameters);
            break;
          }
          case 114: {
            if (xss_ == null) {
              Xss = new global::Google.Cloud.Websecurityscanner.V1Alpha.Xss();
            }
            input.ReadMessage(Xss);
            break;
          }
          case 122: {
            if (vulnerableHeaders_ == null) {
              VulnerableHeaders = new global::Google.Cloud.Websecurityscanner.V1Alpha.VulnerableHeaders();
            }
            input.ReadMessage(VulnerableHeaders);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            FindingType = (global::Google.Cloud.Websecurityscanner.V1Alpha.Finding.Types.FindingType) input.ReadEnum();
            break;
          }
          case 26: {
            HttpMethod = input.ReadString();
            break;
          }
          case 34: {
            FuzzedUrl = input.ReadString();
            break;
          }
          case 42: {
            Body = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 58: {
            ReproductionUrl = input.ReadString();
            break;
          }
          case 66: {
            FrameUrl = input.ReadString();
            break;
          }
          case 74: {
            FinalUrl = input.ReadString();
            break;
          }
          case 82: {
            TrackingId = input.ReadString();
            break;
          }
          case 90: {
            if (outdatedLibrary_ == null) {
              OutdatedLibrary = new global::Google.Cloud.Websecurityscanner.V1Alpha.OutdatedLibrary();
            }
            input.ReadMessage(OutdatedLibrary);
            break;
          }
          case 98: {
            if (violatingResource_ == null) {
              ViolatingResource = new global::Google.Cloud.Websecurityscanner.V1Alpha.ViolatingResource();
            }
            input.ReadMessage(ViolatingResource);
            break;
          }
          case 106: {
            if (vulnerableParameters_ == null) {
              VulnerableParameters = new global::Google.Cloud.Websecurityscanner.V1Alpha.VulnerableParameters();
            }
            input.ReadMessage(VulnerableParameters);
            break;
          }
          case 114: {
            if (xss_ == null) {
              Xss = new global::Google.Cloud.Websecurityscanner.V1Alpha.Xss();
            }
            input.ReadMessage(Xss);
            break;
          }
          case 122: {
            if (vulnerableHeaders_ == null) {
              VulnerableHeaders = new global::Google.Cloud.Websecurityscanner.V1Alpha.VulnerableHeaders();
            }
            input.ReadMessage(VulnerableHeaders);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Finding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Types of Findings.
      /// </summary>
      public enum FindingType {
        /// <summary>
        /// The invalid finding type.
        /// </summary>
        [pbr::OriginalName("FINDING_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A page that was served over HTTPS also resources over HTTP. A
        /// man-in-the-middle attacker could tamper with the HTTP resource and gain
        /// full access to the website that loads the resource or to monitor the
        /// actions taken by the user.
        /// </summary>
        [pbr::OriginalName("MIXED_CONTENT")] MixedContent = 1,
        /// <summary>
        /// The version of an included library is known to contain a security issue.
        /// The scanner checks the version of library in use against a known list of
        /// vulnerable libraries. False positives are possible if the version
        /// detection fails or if the library has been manually patched.
        /// </summary>
        [pbr::OriginalName("OUTDATED_LIBRARY")] OutdatedLibrary = 2,
        /// <summary>
        /// This type of vulnerability occurs when the value of a request parameter
        /// is reflected at the beginning of the response, for example, in requests
        /// using JSONP. Under certain circumstances, an attacker may be able to
        /// supply an alphanumeric-only Flash file in the vulnerable parameter
        /// causing the browser to execute the Flash file as if it originated on the
        /// vulnerable server.
        /// </summary>
        [pbr::OriginalName("ROSETTA_FLASH")] RosettaFlash = 5,
        /// <summary>
        /// A cross-site scripting (XSS) bug is found via JavaScript callback. For
        /// detailed explanations on XSS, see
        /// https://www.google.com/about/appsecurity/learning/xss/.
        /// </summary>
        [pbr::OriginalName("XSS_CALLBACK")] XssCallback = 3,
        /// <summary>
        /// A potential cross-site scripting (XSS) bug due to JavaScript breakage.
        /// In some circumstances, the application under test might modify the test
        /// string before it is parsed by the browser. When the browser attempts to
        /// runs this modified test string, it will likely break and throw a
        /// JavaScript execution error, thus an injection issue is occurring.
        /// However, it may not be exploitable. Manual verification is needed to see
        /// if the test string modifications can be evaded and confirm that the issue
        /// is in fact an XSS vulnerability. For detailed explanations on XSS, see
        /// https://www.google.com/about/appsecurity/learning/xss/.
        /// </summary>
        [pbr::OriginalName("XSS_ERROR")] XssError = 4,
        /// <summary>
        /// An application appears to be transmitting a password field in clear text.
        /// An attacker can eavesdrop network traffic and sniff the password field.
        /// </summary>
        [pbr::OriginalName("CLEAR_TEXT_PASSWORD")] ClearTextPassword = 6,
        /// <summary>
        /// An application returns sensitive content with an invalid content type,
        /// or without an 'X-Content-Type-Options: nosniff' header.
        /// </summary>
        [pbr::OriginalName("INVALID_CONTENT_TYPE")] InvalidContentType = 7,
        /// <summary>
        /// A cross-site scripting (XSS) vulnerability in AngularJS module that
        /// occurs when a user-provided string is interpolated by Angular.
        /// </summary>
        [pbr::OriginalName("XSS_ANGULAR_CALLBACK")] XssAngularCallback = 8,
        /// <summary>
        /// A malformed or invalid valued header.
        /// </summary>
        [pbr::OriginalName("INVALID_HEADER")] InvalidHeader = 9,
        /// <summary>
        /// Misspelled security header name.
        /// </summary>
        [pbr::OriginalName("MISSPELLED_SECURITY_HEADER_NAME")] MisspelledSecurityHeaderName = 10,
        /// <summary>
        /// Mismatching values in a duplicate security header.
        /// </summary>
        [pbr::OriginalName("MISMATCHING_SECURITY_HEADER_VALUES")] MismatchingSecurityHeaderValues = 11,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
