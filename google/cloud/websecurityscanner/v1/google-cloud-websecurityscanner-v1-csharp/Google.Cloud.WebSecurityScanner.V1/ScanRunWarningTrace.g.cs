// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/websecurityscanner/v1/scan_run_warning_trace.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.WebSecurityScanner.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/websecurityscanner/v1/scan_run_warning_trace.proto</summary>
  public static partial class ScanRunWarningTraceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/websecurityscanner/v1/scan_run_warning_trace.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ScanRunWarningTraceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9nb29nbGUvY2xvdWQvd2Vic2VjdXJpdHlzY2FubmVyL3YxL3NjYW5fcnVu",
            "X3dhcm5pbmdfdHJhY2UucHJvdG8SImdvb2dsZS5jbG91ZC53ZWJzZWN1cml0",
            "eXNjYW5uZXIudjEi6QEKE1NjYW5SdW5XYXJuaW5nVHJhY2USSgoEY29kZRgB",
            "IAEoDjI8Lmdvb2dsZS5jbG91ZC53ZWJzZWN1cml0eXNjYW5uZXIudjEuU2Nh",
            "blJ1bldhcm5pbmdUcmFjZS5Db2RlIoUBCgRDb2RlEhQKEENPREVfVU5TUEVD",
            "SUZJRUQQABIeChpJTlNVRkZJQ0lFTlRfQ1JBV0xfUkVTVUxUUxABEhoKFlRP",
            "T19NQU5ZX0NSQVdMX1JFU1VMVFMQAhIXChNUT09fTUFOWV9GVVpaX1RBU0tT",
            "EAMSEgoOQkxPQ0tFRF9CWV9JQVAQBEKMAgomY29tLmdvb2dsZS5jbG91ZC53",
            "ZWJzZWN1cml0eXNjYW5uZXIudjFCGFNjYW5SdW5XYXJuaW5nVHJhY2VQcm90",
            "b1ABWlRnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Ns",
            "b3VkL3dlYnNlY3VyaXR5c2Nhbm5lci92MTt3ZWJzZWN1cml0eXNjYW5uZXKq",
            "AiJHb29nbGUuQ2xvdWQuV2ViU2VjdXJpdHlTY2FubmVyLlYxygIiR29vZ2xl",
            "XENsb3VkXFdlYlNlY3VyaXR5U2Nhbm5lclxWMeoCJUdvb2dsZTo6Q2xvdWQ6",
            "OldlYlNlY3VyaXR5U2Nhbm5lcjo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace), global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace.Parser, new[]{ "Code" }, null, new[]{ typeof(global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace.Types.Code) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Output only.
  /// Defines a warning trace message for ScanRun. Warning traces provide customers
  /// with useful information that helps make the scanning process more effective.
  /// </summary>
  public sealed partial class ScanRunWarningTrace : pb::IMessage<ScanRunWarningTrace>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScanRunWarningTrace> _parser = new pb::MessageParser<ScanRunWarningTrace>(() => new ScanRunWarningTrace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScanRunWarningTrace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTraceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScanRunWarningTrace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScanRunWarningTrace(ScanRunWarningTrace other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScanRunWarningTrace Clone() {
      return new ScanRunWarningTrace(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace.Types.Code code_ = global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace.Types.Code.Unspecified;
    /// <summary>
    /// Output only. Indicates the warning code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace.Types.Code Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScanRunWarningTrace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScanRunWarningTrace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace.Types.Code.Unspecified) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace.Types.Code.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace.Types.Code.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace.Types.Code.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScanRunWarningTrace other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace.Types.Code.Unspecified) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace.Types.Code) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Google.Cloud.WebSecurityScanner.V1.ScanRunWarningTrace.Types.Code) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ScanRunWarningTrace message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Output only.
      /// Defines a warning message code.
      /// Next id: 6
      /// </summary>
      public enum Code {
        /// <summary>
        /// Default value is never used.
        /// </summary>
        [pbr::OriginalName("CODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Indicates that a scan discovered an unexpectedly low number of URLs. This
        /// is sometimes caused by complex navigation features or by using a single
        /// URL for numerous pages.
        /// </summary>
        [pbr::OriginalName("INSUFFICIENT_CRAWL_RESULTS")] InsufficientCrawlResults = 1,
        /// <summary>
        /// Indicates that a scan discovered too many URLs to test, or excessive
        /// redundant URLs.
        /// </summary>
        [pbr::OriginalName("TOO_MANY_CRAWL_RESULTS")] TooManyCrawlResults = 2,
        /// <summary>
        /// Indicates that too many tests have been generated for the scan. Customer
        /// should try reducing the number of starting URLs, increasing the QPS rate,
        /// or narrowing down the scope of the scan using the excluded patterns.
        /// </summary>
        [pbr::OriginalName("TOO_MANY_FUZZ_TASKS")] TooManyFuzzTasks = 3,
        /// <summary>
        /// Indicates that a scan is blocked by IAP.
        /// </summary>
        [pbr::OriginalName("BLOCKED_BY_IAP")] BlockedByIap = 4,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
