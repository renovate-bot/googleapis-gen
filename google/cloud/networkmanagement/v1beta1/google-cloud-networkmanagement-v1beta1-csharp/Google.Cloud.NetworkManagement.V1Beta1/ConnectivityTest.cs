// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/networkmanagement/v1beta1/connectivity_test.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.NetworkManagement.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/networkmanagement/v1beta1/connectivity_test.proto</summary>
  public static partial class ConnectivityTestReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/networkmanagement/v1beta1/connectivity_test.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConnectivityTestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj5nb29nbGUvY2xvdWQvbmV0d29ya21hbmFnZW1lbnQvdjFiZXRhMS9jb25u",
            "ZWN0aXZpdHlfdGVzdC5wcm90bxImZ29vZ2xlLmNsb3VkLm5ldHdvcmttYW5h",
            "Z2VtZW50LnYxYmV0YTEaH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJv",
            "dG8aGWdvb2dsZS9hcGkvcmVzb3VyY2UucHJvdG8aMmdvb2dsZS9jbG91ZC9u",
            "ZXR3b3JrbWFuYWdlbWVudC92MWJldGExL3RyYWNlLnByb3RvGh9nb29nbGUv",
            "cHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhdnb29nbGUvcnBjL3N0YXR1cy5w",
            "cm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90byKxBgoQQ29ubmVj",
            "dGl2aXR5VGVzdBIRCgRuYW1lGAEgASgJQgPgQQISEwoLZGVzY3JpcHRpb24Y",
            "AiABKAkSRQoGc291cmNlGAMgASgLMjAuZ29vZ2xlLmNsb3VkLm5ldHdvcmtt",
            "YW5hZ2VtZW50LnYxYmV0YTEuRW5kcG9pbnRCA+BBAhJKCgtkZXN0aW5hdGlv",
            "bhgEIAEoCzIwLmdvb2dsZS5jbG91ZC5uZXR3b3JrbWFuYWdlbWVudC52MWJl",
            "dGExLkVuZHBvaW50QgPgQQISEAoIcHJvdG9jb2wYBSABKAkSGAoQcmVsYXRl",
            "ZF9wcm9qZWN0cxgGIAMoCRIZCgxkaXNwbGF5X25hbWUYByABKAlCA+BBAxJU",
            "CgZsYWJlbHMYCCADKAsyRC5nb29nbGUuY2xvdWQubmV0d29ya21hbmFnZW1l",
            "bnQudjFiZXRhMS5Db25uZWN0aXZpdHlUZXN0LkxhYmVsc0VudHJ5EjQKC2Ny",
            "ZWF0ZV90aW1lGAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID",
            "4EEDEjQKC3VwZGF0ZV90aW1lGAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcEID4EEDEl4KFHJlYWNoYWJpbGl0eV9kZXRhaWxzGAwgASgLMjsu",
            "Z29vZ2xlLmNsb3VkLm5ldHdvcmttYW5hZ2VtZW50LnYxYmV0YTEuUmVhY2hh",
            "YmlsaXR5RGV0YWlsc0ID4EEDElQKD3Byb2JpbmdfZGV0YWlscxgOIAEoCzI2",
            "Lmdvb2dsZS5jbG91ZC5uZXR3b3JrbWFuYWdlbWVudC52MWJldGExLlByb2Jp",
            "bmdEZXRhaWxzQgPgQQMaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0K",
            "BXZhbHVlGAIgASgJOgI4ATp06kFxCjFuZXR3b3JrbWFuYWdlbWVudC5nb29n",
            "bGVhcGlzLmNvbS9Db25uZWN0aXZpdHlUZXN0Ejxwcm9qZWN0cy97cHJvamVj",
            "dH0vbG9jYXRpb25zL2dsb2JhbC9jb25uZWN0aXZpdHlUZXN0cy97dGVzdH0i",
            "wgIKCEVuZHBvaW50EhIKCmlwX2FkZHJlc3MYASABKAkSDAoEcG9ydBgCIAEo",
            "BRIQCghpbnN0YW5jZRgDIAEoCRIaChJna2VfbWFzdGVyX2NsdXN0ZXIYByAB",
            "KAkSGgoSY2xvdWRfc3FsX2luc3RhbmNlGAggASgJEg8KB25ldHdvcmsYBCAB",
            "KAkSUgoMbmV0d29ya190eXBlGAUgASgOMjwuZ29vZ2xlLmNsb3VkLm5ldHdv",
            "cmttYW5hZ2VtZW50LnYxYmV0YTEuRW5kcG9pbnQuTmV0d29ya1R5cGUSEgoK",
            "cHJvamVjdF9pZBgGIAEoCSJRCgtOZXR3b3JrVHlwZRIcChhORVRXT1JLX1RZ",
            "UEVfVU5TUEVDSUZJRUQQABIPCgtHQ1BfTkVUV09SSxABEhMKD05PTl9HQ1Bf",
            "TkVUV09SSxACIt8CChNSZWFjaGFiaWxpdHlEZXRhaWxzElIKBnJlc3VsdBgB",
            "IAEoDjJCLmdvb2dsZS5jbG91ZC5uZXR3b3JrbWFuYWdlbWVudC52MWJldGEx",
            "LlJlYWNoYWJpbGl0eURldGFpbHMuUmVzdWx0Ei8KC3ZlcmlmeV90aW1lGAIg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIhCgVlcnJvchgDIAEo",
            "CzISLmdvb2dsZS5ycGMuU3RhdHVzEj0KBnRyYWNlcxgFIAMoCzItLmdvb2ds",
            "ZS5jbG91ZC5uZXR3b3JrbWFuYWdlbWVudC52MWJldGExLlRyYWNlImEKBlJl",
            "c3VsdBIWChJSRVNVTFRfVU5TUEVDSUZJRUQQABINCglSRUFDSEFCTEUQARIP",
            "CgtVTlJFQUNIQUJMRRACEg0KCUFNQklHVU9VUxAEEhAKDFVOREVURVJNSU5F",
            "RBAFIjwKEUxhdGVuY3lQZXJjZW50aWxlEg8KB3BlcmNlbnQYASABKAUSFgoO",
            "bGF0ZW5jeV9taWNyb3MYAiABKAMibQoTTGF0ZW5jeURpc3RyaWJ1dGlvbhJW",
            "ChNsYXRlbmN5X3BlcmNlbnRpbGVzGAEgAygLMjkuZ29vZ2xlLmNsb3VkLm5l",
            "dHdvcmttYW5hZ2VtZW50LnYxYmV0YTEuTGF0ZW5jeVBlcmNlbnRpbGUi4gUK",
            "DlByb2JpbmdEZXRhaWxzElQKBnJlc3VsdBgBIAEoDjJELmdvb2dsZS5jbG91",
            "ZC5uZXR3b3JrbWFuYWdlbWVudC52MWJldGExLlByb2JpbmdEZXRhaWxzLlBy",
            "b2JpbmdSZXN1bHQSLwoLdmVyaWZ5X3RpbWUYAiABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEiEKBWVycm9yGAMgASgLMhIuZ29vZ2xlLnJwYy5T",
            "dGF0dXMSXQoLYWJvcnRfY2F1c2UYBCABKA4ySC5nb29nbGUuY2xvdWQubmV0",
            "d29ya21hbmFnZW1lbnQudjFiZXRhMS5Qcm9iaW5nRGV0YWlscy5Qcm9iaW5n",
            "QWJvcnRDYXVzZRIYChBzZW50X3Byb2JlX2NvdW50GAUgASgFEh4KFnN1Y2Nl",
            "c3NmdWxfcHJvYmVfY291bnQYBiABKAUSSwoNZW5kcG9pbnRfaW5mbxgHIAEo",
            "CzI0Lmdvb2dsZS5jbG91ZC5uZXR3b3JrbWFuYWdlbWVudC52MWJldGExLkVu",
            "ZHBvaW50SW5mbxJUCg9wcm9iaW5nX2xhdGVuY3kYCCABKAsyOy5nb29nbGUu",
            "Y2xvdWQubmV0d29ya21hbmFnZW1lbnQudjFiZXRhMS5MYXRlbmN5RGlzdHJp",
            "YnV0aW9uIoABCg1Qcm9iaW5nUmVzdWx0Eh4KGlBST0JJTkdfUkVTVUxUX1VO",
            "U1BFQ0lGSUVEEAASDQoJUkVBQ0hBQkxFEAESDwoLVU5SRUFDSEFCTEUQAhId",
            "ChlSRUFDSEFCSUxJVFlfSU5DT05TSVNURU5UEAMSEAoMVU5ERVRFUk1JTkVE",
            "EAQiZwoRUHJvYmluZ0Fib3J0Q2F1c2USIwofUFJPQklOR19BQk9SVF9DQVVT",
            "RV9VTlNQRUNJRklFRBAAEhUKEVBFUk1JU1NJT05fREVOSUVEEAESFgoSTk9f",
            "U09VUkNFX0xPQ0FUSU9OEAJClQIKKmNvbS5nb29nbGUuY2xvdWQubmV0d29y",
            "a21hbmFnZW1lbnQudjFiZXRhMUIOVGVzdE91dGVyQ2xhc3NQAVpXZ29vZ2xl",
            "LmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9jbG91ZC9uZXR3b3Jr",
            "bWFuYWdlbWVudC92MWJldGExO25ldHdvcmttYW5hZ2VtZW50qgImR29vZ2xl",
            "LkNsb3VkLk5ldHdvcmtNYW5hZ2VtZW50LlYxQmV0YTHKAiZHb29nbGVcQ2xv",
            "dWRcTmV0d29ya01hbmFnZW1lbnRcVjFiZXRhMeoCKUdvb2dsZTo6Q2xvdWQ6",
            "Ok5ldHdvcmtNYW5hZ2VtZW50OjpWMWJldGExYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.NetworkManagement.V1Beta1.TraceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetworkManagement.V1Beta1.ConnectivityTest), global::Google.Cloud.NetworkManagement.V1Beta1.ConnectivityTest.Parser, new[]{ "Name", "Description", "Source", "Destination", "Protocol", "RelatedProjects", "DisplayName", "Labels", "CreateTime", "UpdateTime", "ReachabilityDetails", "ProbingDetails" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint), global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint.Parser, new[]{ "IpAddress", "Port", "Instance", "GkeMasterCluster", "CloudSqlInstance", "Network", "NetworkType", "ProjectId" }, null, new[]{ typeof(global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint.Types.NetworkType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails), global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails.Parser, new[]{ "Result", "VerifyTime", "Error", "Traces" }, null, new[]{ typeof(global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetworkManagement.V1Beta1.LatencyPercentile), global::Google.Cloud.NetworkManagement.V1Beta1.LatencyPercentile.Parser, new[]{ "Percent", "LatencyMicros" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetworkManagement.V1Beta1.LatencyDistribution), global::Google.Cloud.NetworkManagement.V1Beta1.LatencyDistribution.Parser, new[]{ "LatencyPercentiles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails), global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Parser, new[]{ "Result", "VerifyTime", "Error", "AbortCause", "SentProbeCount", "SuccessfulProbeCount", "EndpointInfo", "ProbingLatency" }, null, new[]{ typeof(global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingResult), typeof(global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingAbortCause) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A Connectivity Test for a network reachability analysis.
  /// </summary>
  public sealed partial class ConnectivityTest : pb::IMessage<ConnectivityTest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectivityTest> _parser = new pb::MessageParser<ConnectivityTest>(() => new ConnectivityTest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectivityTest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetworkManagement.V1Beta1.ConnectivityTestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectivityTest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectivityTest(ConnectivityTest other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      source_ = other.source_ != null ? other.source_.Clone() : null;
      destination_ = other.destination_ != null ? other.destination_.Clone() : null;
      protocol_ = other.protocol_;
      relatedProjects_ = other.relatedProjects_.Clone();
      displayName_ = other.displayName_;
      labels_ = other.labels_.Clone();
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      reachabilityDetails_ = other.reachabilityDetails_ != null ? other.reachabilityDetails_.Clone() : null;
      probingDetails_ = other.probingDetails_ != null ? other.probingDetails_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectivityTest Clone() {
      return new ConnectivityTest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Unique name of the resource using the form:
    ///     `projects/{project_id}/locations/global/connectivityTests/{test}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// The user-supplied description of the Connectivity Test.
    /// Maximum of 512 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 3;
    private global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint source_;
    /// <summary>
    /// Required. Source specification of the Connectivity Test.
    ///
    /// You can use a combination of source IP address, virtual machine
    /// (VM) instance, or Compute Engine network to uniquely identify
    /// the source location.
    ///
    /// Examples:
    /// If the source IP address is an internal IP address within a Google Cloud
    /// Virtual Private Cloud (VPC) network, then you must also specify the VPC
    /// network. Otherwise, specify the VM instance, which already contains its
    /// internal IP address and VPC network information.
    ///
    /// If the source of the test is within an on-premises network, then you must
    /// provide the destination VPC network.
    ///
    /// If the source endpoint is a Compute Engine VM instance with multiple
    /// network interfaces, the instance itself is not sufficient to identify the
    /// endpoint. So, you must also specify the source IP address or VPC network.
    ///
    /// A reachability analysis proceeds even if the source location is
    /// ambiguous. However, the test result may include endpoints that you don't
    /// intend to test.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 4;
    private global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint destination_;
    /// <summary>
    /// Required. Destination specification of the Connectivity Test.
    ///
    /// You can use a combination of destination IP address, Compute Engine
    /// VM instance, or VPC network to uniquely identify the destination
    /// location.
    ///
    /// Even if the destination IP address is not unique, the source IP
    /// location is unique. Usually, the analysis can infer the destination
    /// endpoint from route information.
    ///
    /// If the destination you specify is a VM instance and the instance has
    /// multiple network interfaces, then you must also specify either
    /// a destination IP address  or VPC network to identify the destination
    /// interface.
    ///
    /// A reachability analysis proceeds even if the destination location is
    /// ambiguous. However, the result can include endpoints that you don't
    /// intend to test.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint Destination {
      get { return destination_; }
      set {
        destination_ = value;
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 5;
    private string protocol_ = "";
    /// <summary>
    /// IP Protocol of the test. When not provided, "TCP" is assumed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Protocol {
      get { return protocol_; }
      set {
        protocol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "related_projects" field.</summary>
    public const int RelatedProjectsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_relatedProjects_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> relatedProjects_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Other projects that may be relevant for reachability analysis.
    /// This is applicable to scenarios where a test can cross project boundaries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RelatedProjects {
      get { return relatedProjects_; }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 7;
    private string displayName_ = "";
    /// <summary>
    /// Output only. The display name of a Connectivity Test.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 66);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Resource labels to represent user-provided metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time the test was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The time the test's configuration was updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "reachability_details" field.</summary>
    public const int ReachabilityDetailsFieldNumber = 12;
    private global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails reachabilityDetails_;
    /// <summary>
    /// Output only. The reachability details of this test from the latest run.
    /// The details are updated when creating a new test, updating an
    /// existing test, or triggering a one-time rerun of an existing test.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails ReachabilityDetails {
      get { return reachabilityDetails_; }
      set {
        reachabilityDetails_ = value;
      }
    }

    /// <summary>Field number for the "probing_details" field.</summary>
    public const int ProbingDetailsFieldNumber = 14;
    private global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails probingDetails_;
    /// <summary>
    /// Output only. The probing details of this test from the latest run, present for
    /// applicable tests only. The details are updated when creating a new test,
    /// updating an existing test, or triggering a one-time rerun of an existing
    /// test.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails ProbingDetails {
      get { return probingDetails_; }
      set {
        probingDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectivityTest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectivityTest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(Destination, other.Destination)) return false;
      if (Protocol != other.Protocol) return false;
      if(!relatedProjects_.Equals(other.relatedProjects_)) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(ReachabilityDetails, other.ReachabilityDetails)) return false;
      if (!object.Equals(ProbingDetails, other.ProbingDetails)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      if (destination_ != null) hash ^= Destination.GetHashCode();
      if (Protocol.Length != 0) hash ^= Protocol.GetHashCode();
      hash ^= relatedProjects_.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (reachabilityDetails_ != null) hash ^= ReachabilityDetails.GetHashCode();
      if (probingDetails_ != null) hash ^= ProbingDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (source_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Source);
      }
      if (destination_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Destination);
      }
      if (Protocol.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Protocol);
      }
      relatedProjects_.WriteTo(output, _repeated_relatedProjects_codec);
      if (DisplayName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DisplayName);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(UpdateTime);
      }
      if (reachabilityDetails_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ReachabilityDetails);
      }
      if (probingDetails_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ProbingDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (source_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Source);
      }
      if (destination_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Destination);
      }
      if (Protocol.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Protocol);
      }
      relatedProjects_.WriteTo(ref output, _repeated_relatedProjects_codec);
      if (DisplayName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DisplayName);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(UpdateTime);
      }
      if (reachabilityDetails_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ReachabilityDetails);
      }
      if (probingDetails_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ProbingDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (destination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Destination);
      }
      if (Protocol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Protocol);
      }
      size += relatedProjects_.CalculateSize(_repeated_relatedProjects_codec);
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (reachabilityDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReachabilityDetails);
      }
      if (probingDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProbingDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectivityTest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.source_ != null) {
        if (source_ == null) {
          Source = new global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.destination_ != null) {
        if (destination_ == null) {
          Destination = new global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint();
        }
        Destination.MergeFrom(other.Destination);
      }
      if (other.Protocol.Length != 0) {
        Protocol = other.Protocol;
      }
      relatedProjects_.Add(other.relatedProjects_);
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      labels_.Add(other.labels_);
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.reachabilityDetails_ != null) {
        if (reachabilityDetails_ == null) {
          ReachabilityDetails = new global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails();
        }
        ReachabilityDetails.MergeFrom(other.ReachabilityDetails);
      }
      if (other.probingDetails_ != null) {
        if (probingDetails_ == null) {
          ProbingDetails = new global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails();
        }
        ProbingDetails.MergeFrom(other.ProbingDetails);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (source_ == null) {
              Source = new global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint();
            }
            input.ReadMessage(Source);
            break;
          }
          case 34: {
            if (destination_ == null) {
              Destination = new global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint();
            }
            input.ReadMessage(Destination);
            break;
          }
          case 42: {
            Protocol = input.ReadString();
            break;
          }
          case 50: {
            relatedProjects_.AddEntriesFrom(input, _repeated_relatedProjects_codec);
            break;
          }
          case 58: {
            DisplayName = input.ReadString();
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 82: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 90: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 98: {
            if (reachabilityDetails_ == null) {
              ReachabilityDetails = new global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails();
            }
            input.ReadMessage(ReachabilityDetails);
            break;
          }
          case 114: {
            if (probingDetails_ == null) {
              ProbingDetails = new global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails();
            }
            input.ReadMessage(ProbingDetails);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (source_ == null) {
              Source = new global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint();
            }
            input.ReadMessage(Source);
            break;
          }
          case 34: {
            if (destination_ == null) {
              Destination = new global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint();
            }
            input.ReadMessage(Destination);
            break;
          }
          case 42: {
            Protocol = input.ReadString();
            break;
          }
          case 50: {
            relatedProjects_.AddEntriesFrom(ref input, _repeated_relatedProjects_codec);
            break;
          }
          case 58: {
            DisplayName = input.ReadString();
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 82: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 90: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 98: {
            if (reachabilityDetails_ == null) {
              ReachabilityDetails = new global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails();
            }
            input.ReadMessage(ReachabilityDetails);
            break;
          }
          case 114: {
            if (probingDetails_ == null) {
              ProbingDetails = new global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails();
            }
            input.ReadMessage(ProbingDetails);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Source or destination of the Connectivity Test.
  /// </summary>
  public sealed partial class Endpoint : pb::IMessage<Endpoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Endpoint> _parser = new pb::MessageParser<Endpoint>(() => new Endpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Endpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetworkManagement.V1Beta1.ConnectivityTestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint(Endpoint other) : this() {
      ipAddress_ = other.ipAddress_;
      port_ = other.port_;
      instance_ = other.instance_;
      gkeMasterCluster_ = other.gkeMasterCluster_;
      cloudSqlInstance_ = other.cloudSqlInstance_;
      network_ = other.network_;
      networkType_ = other.networkType_;
      projectId_ = other.projectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint Clone() {
      return new Endpoint(this);
    }

    /// <summary>Field number for the "ip_address" field.</summary>
    public const int IpAddressFieldNumber = 1;
    private string ipAddress_ = "";
    /// <summary>
    /// The IP address of the endpoint, which can be an external or internal IP.
    /// An IPv6 address is only allowed when the test's destination is a
    /// [global load balancer
    /// VIP](https://cloud.google.com/load-balancing/docs/load-balancing-overview).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpAddress {
      get { return ipAddress_; }
      set {
        ipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    /// <summary>
    /// The IP protocol port of the endpoint.
    /// Only applicable when protocol is TCP or UDP.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 3;
    private string instance_ = "";
    /// <summary>
    /// A Compute Engine instance URI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Instance {
      get { return instance_; }
      set {
        instance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gke_master_cluster" field.</summary>
    public const int GkeMasterClusterFieldNumber = 7;
    private string gkeMasterCluster_ = "";
    /// <summary>
    /// A cluster URI for [Google Kubernetes Engine
    /// master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GkeMasterCluster {
      get { return gkeMasterCluster_; }
      set {
        gkeMasterCluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cloud_sql_instance" field.</summary>
    public const int CloudSqlInstanceFieldNumber = 8;
    private string cloudSqlInstance_ = "";
    /// <summary>
    /// A [Cloud SQL](https://cloud.google.com/sql) instance URI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CloudSqlInstance {
      get { return cloudSqlInstance_; }
      set {
        cloudSqlInstance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 4;
    private string network_ = "";
    /// <summary>
    /// A Compute Engine network URI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network_type" field.</summary>
    public const int NetworkTypeFieldNumber = 5;
    private global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint.Types.NetworkType networkType_ = global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint.Types.NetworkType.Unspecified;
    /// <summary>
    /// Type of the network where the endpoint is located.
    /// Applicable only to source endpoint, as destination network type can be
    /// inferred from the source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint.Types.NetworkType NetworkType {
      get { return networkType_; }
      set {
        networkType_ = value;
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 6;
    private string projectId_ = "";
    /// <summary>
    /// Project ID where the endpoint is located.
    /// The Project ID can be derived from the URI if you provide a VM instance or
    /// network URI.
    /// The following are two cases where you must provide the project ID:
    /// 1. Only the IP address is specified, and the IP address is within a GCP
    /// project.
    /// 2. When you are using Shared VPC and the IP address that you provide is
    /// from the service project. In this case, the network that the IP address
    /// resides in is defined in the host project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Endpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Endpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IpAddress != other.IpAddress) return false;
      if (Port != other.Port) return false;
      if (Instance != other.Instance) return false;
      if (GkeMasterCluster != other.GkeMasterCluster) return false;
      if (CloudSqlInstance != other.CloudSqlInstance) return false;
      if (Network != other.Network) return false;
      if (NetworkType != other.NetworkType) return false;
      if (ProjectId != other.ProjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IpAddress.Length != 0) hash ^= IpAddress.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Instance.Length != 0) hash ^= Instance.GetHashCode();
      if (GkeMasterCluster.Length != 0) hash ^= GkeMasterCluster.GetHashCode();
      if (CloudSqlInstance.Length != 0) hash ^= CloudSqlInstance.GetHashCode();
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (NetworkType != global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint.Types.NetworkType.Unspecified) hash ^= NetworkType.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IpAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IpAddress);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (Instance.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Instance);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Network);
      }
      if (NetworkType != global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint.Types.NetworkType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) NetworkType);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ProjectId);
      }
      if (GkeMasterCluster.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GkeMasterCluster);
      }
      if (CloudSqlInstance.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CloudSqlInstance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IpAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IpAddress);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (Instance.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Instance);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Network);
      }
      if (NetworkType != global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint.Types.NetworkType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) NetworkType);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ProjectId);
      }
      if (GkeMasterCluster.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GkeMasterCluster);
      }
      if (CloudSqlInstance.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CloudSqlInstance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IpAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddress);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Instance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Instance);
      }
      if (GkeMasterCluster.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GkeMasterCluster);
      }
      if (CloudSqlInstance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CloudSqlInstance);
      }
      if (Network.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (NetworkType != global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint.Types.NetworkType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NetworkType);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Endpoint other) {
      if (other == null) {
        return;
      }
      if (other.IpAddress.Length != 0) {
        IpAddress = other.IpAddress;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Instance.Length != 0) {
        Instance = other.Instance;
      }
      if (other.GkeMasterCluster.Length != 0) {
        GkeMasterCluster = other.GkeMasterCluster;
      }
      if (other.CloudSqlInstance.Length != 0) {
        CloudSqlInstance = other.CloudSqlInstance;
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      if (other.NetworkType != global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint.Types.NetworkType.Unspecified) {
        NetworkType = other.NetworkType;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IpAddress = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Instance = input.ReadString();
            break;
          }
          case 34: {
            Network = input.ReadString();
            break;
          }
          case 40: {
            NetworkType = (global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint.Types.NetworkType) input.ReadEnum();
            break;
          }
          case 50: {
            ProjectId = input.ReadString();
            break;
          }
          case 58: {
            GkeMasterCluster = input.ReadString();
            break;
          }
          case 66: {
            CloudSqlInstance = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            IpAddress = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Instance = input.ReadString();
            break;
          }
          case 34: {
            Network = input.ReadString();
            break;
          }
          case 40: {
            NetworkType = (global::Google.Cloud.NetworkManagement.V1Beta1.Endpoint.Types.NetworkType) input.ReadEnum();
            break;
          }
          case 50: {
            ProjectId = input.ReadString();
            break;
          }
          case 58: {
            GkeMasterCluster = input.ReadString();
            break;
          }
          case 66: {
            CloudSqlInstance = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Endpoint message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The type definition of an endpoint's network. Use one of the
      /// following choices:
      /// </summary>
      public enum NetworkType {
        /// <summary>
        /// Default type if unspecified.
        /// </summary>
        [pbr::OriginalName("NETWORK_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A network hosted within Google Cloud Platform.
        /// To receive more detailed output, specify the URI for the source or
        /// destination network.
        /// </summary>
        [pbr::OriginalName("GCP_NETWORK")] GcpNetwork = 1,
        /// <summary>
        /// A network hosted outside of Google Cloud Platform.
        /// This can be an on-premises network, or a network hosted by another cloud
        /// provider.
        /// </summary>
        [pbr::OriginalName("NON_GCP_NETWORK")] NonGcpNetwork = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Results of the configuration analysis from the last run of the test.
  /// </summary>
  public sealed partial class ReachabilityDetails : pb::IMessage<ReachabilityDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReachabilityDetails> _parser = new pb::MessageParser<ReachabilityDetails>(() => new ReachabilityDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReachabilityDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetworkManagement.V1Beta1.ConnectivityTestReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachabilityDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachabilityDetails(ReachabilityDetails other) : this() {
      result_ = other.result_;
      verifyTime_ = other.verifyTime_ != null ? other.verifyTime_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      traces_ = other.traces_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachabilityDetails Clone() {
      return new ReachabilityDetails(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails.Types.Result result_ = global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails.Types.Result.Unspecified;
    /// <summary>
    /// The overall result of the test's configuration analysis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "verify_time" field.</summary>
    public const int VerifyTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp verifyTime_;
    /// <summary>
    /// The time of the configuration analysis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VerifyTime {
      get { return verifyTime_; }
      set {
        verifyTime_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 3;
    private global::Google.Rpc.Status error_;
    /// <summary>
    /// The details of a failure or a cancellation of reachability analysis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "traces" field.</summary>
    public const int TracesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.NetworkManagement.V1Beta1.Trace> _repeated_traces_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.NetworkManagement.V1Beta1.Trace.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.NetworkManagement.V1Beta1.Trace> traces_ = new pbc::RepeatedField<global::Google.Cloud.NetworkManagement.V1Beta1.Trace>();
    /// <summary>
    /// Result may contain a list of traces if a test has multiple possible
    /// paths in the network, such as when destination endpoint is a load balancer
    /// with multiple backends.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.NetworkManagement.V1Beta1.Trace> Traces {
      get { return traces_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReachabilityDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReachabilityDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(VerifyTime, other.VerifyTime)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if(!traces_.Equals(other.traces_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails.Types.Result.Unspecified) hash ^= Result.GetHashCode();
      if (verifyTime_ != null) hash ^= VerifyTime.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= traces_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Result != global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails.Types.Result.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (verifyTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VerifyTime);
      }
      if (error_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Error);
      }
      traces_.WriteTo(output, _repeated_traces_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Result != global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails.Types.Result.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (verifyTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VerifyTime);
      }
      if (error_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Error);
      }
      traces_.WriteTo(ref output, _repeated_traces_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails.Types.Result.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (verifyTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerifyTime);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += traces_.CalculateSize(_repeated_traces_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReachabilityDetails other) {
      if (other == null) {
        return;
      }
      if (other.Result != global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails.Types.Result.Unspecified) {
        Result = other.Result;
      }
      if (other.verifyTime_ != null) {
        if (verifyTime_ == null) {
          VerifyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VerifyTime.MergeFrom(other.VerifyTime);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Google.Rpc.Status();
        }
        Error.MergeFrom(other.Error);
      }
      traces_.Add(other.traces_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (verifyTime_ == null) {
              VerifyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VerifyTime);
            break;
          }
          case 26: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
          case 42: {
            traces_.AddEntriesFrom(input, _repeated_traces_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Google.Cloud.NetworkManagement.V1Beta1.ReachabilityDetails.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (verifyTime_ == null) {
              VerifyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VerifyTime);
            break;
          }
          case 26: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
          case 42: {
            traces_.AddEntriesFrom(ref input, _repeated_traces_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReachabilityDetails message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The overall result of the test's configuration analysis.
      /// </summary>
      public enum Result {
        /// <summary>
        /// No result was specified.
        /// </summary>
        [pbr::OriginalName("RESULT_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Possible scenarios are:
        ///
        /// * The configuration analysis determined that a packet originating from
        ///   the source is expected to reach the destination.
        /// * The analysis didn't complete because the user lacks permission for
        ///   some of the resources in the trace. However, at the time the user's
        ///   permission became insufficient, the trace had been successful so far.
        /// </summary>
        [pbr::OriginalName("REACHABLE")] Reachable = 1,
        /// <summary>
        /// A packet originating from the source is expected to be dropped before
        /// reaching the destination.
        /// </summary>
        [pbr::OriginalName("UNREACHABLE")] Unreachable = 2,
        /// <summary>
        /// The source and destination endpoints do not uniquely identify
        /// the test location in the network, and the reachability result contains
        /// multiple traces. For some traces, a packet could be delivered, and for
        /// others, it would not be.
        /// </summary>
        [pbr::OriginalName("AMBIGUOUS")] Ambiguous = 4,
        /// <summary>
        /// The configuration analysis did not complete. Possible reasons are:
        ///
        /// * A permissions error occurred--for example, the user might not have
        ///   read permission for all of the resources named in the test.
        /// * An internal error occurred.
        /// * The analyzer received an invalid or unsupported argument or was unable
        ///   to identify a known endpoint.
        /// </summary>
        [pbr::OriginalName("UNDETERMINED")] Undetermined = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Latency percentile rank and value.
  /// </summary>
  public sealed partial class LatencyPercentile : pb::IMessage<LatencyPercentile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LatencyPercentile> _parser = new pb::MessageParser<LatencyPercentile>(() => new LatencyPercentile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LatencyPercentile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetworkManagement.V1Beta1.ConnectivityTestReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LatencyPercentile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LatencyPercentile(LatencyPercentile other) : this() {
      percent_ = other.percent_;
      latencyMicros_ = other.latencyMicros_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LatencyPercentile Clone() {
      return new LatencyPercentile(this);
    }

    /// <summary>Field number for the "percent" field.</summary>
    public const int PercentFieldNumber = 1;
    private int percent_;
    /// <summary>
    /// Percentage of samples this data point applies to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Percent {
      get { return percent_; }
      set {
        percent_ = value;
      }
    }

    /// <summary>Field number for the "latency_micros" field.</summary>
    public const int LatencyMicrosFieldNumber = 2;
    private long latencyMicros_;
    /// <summary>
    /// percent-th percentile of latency observed, in microseconds.
    /// Fraction of percent/100 of samples have latency lower or
    /// equal to the value of this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LatencyMicros {
      get { return latencyMicros_; }
      set {
        latencyMicros_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LatencyPercentile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LatencyPercentile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Percent != other.Percent) return false;
      if (LatencyMicros != other.LatencyMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Percent != 0) hash ^= Percent.GetHashCode();
      if (LatencyMicros != 0L) hash ^= LatencyMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Percent != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Percent);
      }
      if (LatencyMicros != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LatencyMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Percent != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Percent);
      }
      if (LatencyMicros != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LatencyMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Percent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Percent);
      }
      if (LatencyMicros != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatencyMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LatencyPercentile other) {
      if (other == null) {
        return;
      }
      if (other.Percent != 0) {
        Percent = other.Percent;
      }
      if (other.LatencyMicros != 0L) {
        LatencyMicros = other.LatencyMicros;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Percent = input.ReadInt32();
            break;
          }
          case 16: {
            LatencyMicros = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Percent = input.ReadInt32();
            break;
          }
          case 16: {
            LatencyMicros = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes measured latency distribution.
  /// </summary>
  public sealed partial class LatencyDistribution : pb::IMessage<LatencyDistribution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LatencyDistribution> _parser = new pb::MessageParser<LatencyDistribution>(() => new LatencyDistribution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LatencyDistribution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetworkManagement.V1Beta1.ConnectivityTestReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LatencyDistribution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LatencyDistribution(LatencyDistribution other) : this() {
      latencyPercentiles_ = other.latencyPercentiles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LatencyDistribution Clone() {
      return new LatencyDistribution(this);
    }

    /// <summary>Field number for the "latency_percentiles" field.</summary>
    public const int LatencyPercentilesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.NetworkManagement.V1Beta1.LatencyPercentile> _repeated_latencyPercentiles_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.NetworkManagement.V1Beta1.LatencyPercentile.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.NetworkManagement.V1Beta1.LatencyPercentile> latencyPercentiles_ = new pbc::RepeatedField<global::Google.Cloud.NetworkManagement.V1Beta1.LatencyPercentile>();
    /// <summary>
    /// Representative latency percentiles.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.NetworkManagement.V1Beta1.LatencyPercentile> LatencyPercentiles {
      get { return latencyPercentiles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LatencyDistribution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LatencyDistribution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!latencyPercentiles_.Equals(other.latencyPercentiles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= latencyPercentiles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      latencyPercentiles_.WriteTo(output, _repeated_latencyPercentiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      latencyPercentiles_.WriteTo(ref output, _repeated_latencyPercentiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += latencyPercentiles_.CalculateSize(_repeated_latencyPercentiles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LatencyDistribution other) {
      if (other == null) {
        return;
      }
      latencyPercentiles_.Add(other.latencyPercentiles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            latencyPercentiles_.AddEntriesFrom(input, _repeated_latencyPercentiles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            latencyPercentiles_.AddEntriesFrom(ref input, _repeated_latencyPercentiles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Results of active probing from the last run of the test.
  /// </summary>
  public sealed partial class ProbingDetails : pb::IMessage<ProbingDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProbingDetails> _parser = new pb::MessageParser<ProbingDetails>(() => new ProbingDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProbingDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetworkManagement.V1Beta1.ConnectivityTestReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProbingDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProbingDetails(ProbingDetails other) : this() {
      result_ = other.result_;
      verifyTime_ = other.verifyTime_ != null ? other.verifyTime_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      abortCause_ = other.abortCause_;
      sentProbeCount_ = other.sentProbeCount_;
      successfulProbeCount_ = other.successfulProbeCount_;
      endpointInfo_ = other.endpointInfo_ != null ? other.endpointInfo_.Clone() : null;
      probingLatency_ = other.probingLatency_ != null ? other.probingLatency_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProbingDetails Clone() {
      return new ProbingDetails(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingResult result_ = global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingResult.Unspecified;
    /// <summary>
    /// The overall result of active probing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "verify_time" field.</summary>
    public const int VerifyTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp verifyTime_;
    /// <summary>
    /// The time that reachability was assessed through active probing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VerifyTime {
      get { return verifyTime_; }
      set {
        verifyTime_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 3;
    private global::Google.Rpc.Status error_;
    /// <summary>
    /// Details about an internal failure or the cancellation of active probing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "abort_cause" field.</summary>
    public const int AbortCauseFieldNumber = 4;
    private global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingAbortCause abortCause_ = global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingAbortCause.Unspecified;
    /// <summary>
    /// The reason probing was aborted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingAbortCause AbortCause {
      get { return abortCause_; }
      set {
        abortCause_ = value;
      }
    }

    /// <summary>Field number for the "sent_probe_count" field.</summary>
    public const int SentProbeCountFieldNumber = 5;
    private int sentProbeCount_;
    /// <summary>
    /// Number of probes sent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SentProbeCount {
      get { return sentProbeCount_; }
      set {
        sentProbeCount_ = value;
      }
    }

    /// <summary>Field number for the "successful_probe_count" field.</summary>
    public const int SuccessfulProbeCountFieldNumber = 6;
    private int successfulProbeCount_;
    /// <summary>
    /// Number of probes that reached the destination.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SuccessfulProbeCount {
      get { return successfulProbeCount_; }
      set {
        successfulProbeCount_ = value;
      }
    }

    /// <summary>Field number for the "endpoint_info" field.</summary>
    public const int EndpointInfoFieldNumber = 7;
    private global::Google.Cloud.NetworkManagement.V1Beta1.EndpointInfo endpointInfo_;
    /// <summary>
    /// The source and destination endpoints derived from the test input and used
    /// for active probing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1Beta1.EndpointInfo EndpointInfo {
      get { return endpointInfo_; }
      set {
        endpointInfo_ = value;
      }
    }

    /// <summary>Field number for the "probing_latency" field.</summary>
    public const int ProbingLatencyFieldNumber = 8;
    private global::Google.Cloud.NetworkManagement.V1Beta1.LatencyDistribution probingLatency_;
    /// <summary>
    /// Latency as measured by active probing in one direction:
    /// from the source to the destination endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1Beta1.LatencyDistribution ProbingLatency {
      get { return probingLatency_; }
      set {
        probingLatency_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProbingDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProbingDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(VerifyTime, other.VerifyTime)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (AbortCause != other.AbortCause) return false;
      if (SentProbeCount != other.SentProbeCount) return false;
      if (SuccessfulProbeCount != other.SuccessfulProbeCount) return false;
      if (!object.Equals(EndpointInfo, other.EndpointInfo)) return false;
      if (!object.Equals(ProbingLatency, other.ProbingLatency)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingResult.Unspecified) hash ^= Result.GetHashCode();
      if (verifyTime_ != null) hash ^= VerifyTime.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (AbortCause != global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingAbortCause.Unspecified) hash ^= AbortCause.GetHashCode();
      if (SentProbeCount != 0) hash ^= SentProbeCount.GetHashCode();
      if (SuccessfulProbeCount != 0) hash ^= SuccessfulProbeCount.GetHashCode();
      if (endpointInfo_ != null) hash ^= EndpointInfo.GetHashCode();
      if (probingLatency_ != null) hash ^= ProbingLatency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Result != global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingResult.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (verifyTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VerifyTime);
      }
      if (error_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Error);
      }
      if (AbortCause != global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingAbortCause.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) AbortCause);
      }
      if (SentProbeCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SentProbeCount);
      }
      if (SuccessfulProbeCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SuccessfulProbeCount);
      }
      if (endpointInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EndpointInfo);
      }
      if (probingLatency_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ProbingLatency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Result != global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingResult.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (verifyTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VerifyTime);
      }
      if (error_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Error);
      }
      if (AbortCause != global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingAbortCause.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) AbortCause);
      }
      if (SentProbeCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SentProbeCount);
      }
      if (SuccessfulProbeCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SuccessfulProbeCount);
      }
      if (endpointInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EndpointInfo);
      }
      if (probingLatency_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ProbingLatency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingResult.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (verifyTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerifyTime);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (AbortCause != global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingAbortCause.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AbortCause);
      }
      if (SentProbeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SentProbeCount);
      }
      if (SuccessfulProbeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuccessfulProbeCount);
      }
      if (endpointInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndpointInfo);
      }
      if (probingLatency_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProbingLatency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProbingDetails other) {
      if (other == null) {
        return;
      }
      if (other.Result != global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingResult.Unspecified) {
        Result = other.Result;
      }
      if (other.verifyTime_ != null) {
        if (verifyTime_ == null) {
          VerifyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VerifyTime.MergeFrom(other.VerifyTime);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Google.Rpc.Status();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.AbortCause != global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingAbortCause.Unspecified) {
        AbortCause = other.AbortCause;
      }
      if (other.SentProbeCount != 0) {
        SentProbeCount = other.SentProbeCount;
      }
      if (other.SuccessfulProbeCount != 0) {
        SuccessfulProbeCount = other.SuccessfulProbeCount;
      }
      if (other.endpointInfo_ != null) {
        if (endpointInfo_ == null) {
          EndpointInfo = new global::Google.Cloud.NetworkManagement.V1Beta1.EndpointInfo();
        }
        EndpointInfo.MergeFrom(other.EndpointInfo);
      }
      if (other.probingLatency_ != null) {
        if (probingLatency_ == null) {
          ProbingLatency = new global::Google.Cloud.NetworkManagement.V1Beta1.LatencyDistribution();
        }
        ProbingLatency.MergeFrom(other.ProbingLatency);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingResult) input.ReadEnum();
            break;
          }
          case 18: {
            if (verifyTime_ == null) {
              VerifyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VerifyTime);
            break;
          }
          case 26: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
          case 32: {
            AbortCause = (global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingAbortCause) input.ReadEnum();
            break;
          }
          case 40: {
            SentProbeCount = input.ReadInt32();
            break;
          }
          case 48: {
            SuccessfulProbeCount = input.ReadInt32();
            break;
          }
          case 58: {
            if (endpointInfo_ == null) {
              EndpointInfo = new global::Google.Cloud.NetworkManagement.V1Beta1.EndpointInfo();
            }
            input.ReadMessage(EndpointInfo);
            break;
          }
          case 66: {
            if (probingLatency_ == null) {
              ProbingLatency = new global::Google.Cloud.NetworkManagement.V1Beta1.LatencyDistribution();
            }
            input.ReadMessage(ProbingLatency);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingResult) input.ReadEnum();
            break;
          }
          case 18: {
            if (verifyTime_ == null) {
              VerifyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VerifyTime);
            break;
          }
          case 26: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
          case 32: {
            AbortCause = (global::Google.Cloud.NetworkManagement.V1Beta1.ProbingDetails.Types.ProbingAbortCause) input.ReadEnum();
            break;
          }
          case 40: {
            SentProbeCount = input.ReadInt32();
            break;
          }
          case 48: {
            SuccessfulProbeCount = input.ReadInt32();
            break;
          }
          case 58: {
            if (endpointInfo_ == null) {
              EndpointInfo = new global::Google.Cloud.NetworkManagement.V1Beta1.EndpointInfo();
            }
            input.ReadMessage(EndpointInfo);
            break;
          }
          case 66: {
            if (probingLatency_ == null) {
              ProbingLatency = new global::Google.Cloud.NetworkManagement.V1Beta1.LatencyDistribution();
            }
            input.ReadMessage(ProbingLatency);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ProbingDetails message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Overall probing result of the test.
      /// </summary>
      public enum ProbingResult {
        /// <summary>
        /// No result was specified.
        /// </summary>
        [pbr::OriginalName("PROBING_RESULT_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// At least 95% of packets reached the destination.
        /// </summary>
        [pbr::OriginalName("REACHABLE")] Reachable = 1,
        /// <summary>
        /// No packets reached the destination.
        /// </summary>
        [pbr::OriginalName("UNREACHABLE")] Unreachable = 2,
        /// <summary>
        /// Less than 95% of packets reached the destination.
        /// </summary>
        [pbr::OriginalName("REACHABILITY_INCONSISTENT")] ReachabilityInconsistent = 3,
        /// <summary>
        /// Reachability could not be determined. Possible reasons are:
        /// * The user lacks permission to access some of the network resources
        ///   required to run the test.
        /// * No valid source endpoint could be derived from the request.
        /// * An internal error occurred.
        /// </summary>
        [pbr::OriginalName("UNDETERMINED")] Undetermined = 4,
      }

      /// <summary>
      /// Abort cause types.
      /// </summary>
      public enum ProbingAbortCause {
        /// <summary>
        /// No reason was specified.
        /// </summary>
        [pbr::OriginalName("PROBING_ABORT_CAUSE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The user lacks permission to access some of the
        /// network resources required to run the test.
        /// </summary>
        [pbr::OriginalName("PERMISSION_DENIED")] PermissionDenied = 1,
        /// <summary>
        /// No valid source endpoint could be derived from the request.
        /// </summary>
        [pbr::OriginalName("NO_SOURCE_LOCATION")] NoSourceLocation = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
