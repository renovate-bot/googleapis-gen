// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/networkmanagement/v1/connectivity_test.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.NetworkManagement.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/networkmanagement/v1/connectivity_test.proto</summary>
  public static partial class ConnectivityTestReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/networkmanagement/v1/connectivity_test.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConnectivityTestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjlnb29nbGUvY2xvdWQvbmV0d29ya21hbmFnZW1lbnQvdjEvY29ubmVjdGl2",
            "aXR5X3Rlc3QucHJvdG8SIWdvb2dsZS5jbG91ZC5uZXR3b3JrbWFuYWdlbWVu",
            "dC52MRofZ29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xl",
            "L2FwaS9yZXNvdXJjZS5wcm90bxotZ29vZ2xlL2Nsb3VkL25ldHdvcmttYW5h",
            "Z2VtZW50L3YxL3RyYWNlLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0",
            "YW1wLnByb3RvGhdnb29nbGUvcnBjL3N0YXR1cy5wcm90bxocZ29vZ2xlL2Fw",
            "aS9hbm5vdGF0aW9ucy5wcm90byLHBQoQQ29ubmVjdGl2aXR5VGVzdBIRCgRu",
            "YW1lGAEgASgJQgPgQQISEwoLZGVzY3JpcHRpb24YAiABKAkSQAoGc291cmNl",
            "GAMgASgLMisuZ29vZ2xlLmNsb3VkLm5ldHdvcmttYW5hZ2VtZW50LnYxLkVu",
            "ZHBvaW50QgPgQQISRQoLZGVzdGluYXRpb24YBCABKAsyKy5nb29nbGUuY2xv",
            "dWQubmV0d29ya21hbmFnZW1lbnQudjEuRW5kcG9pbnRCA+BBAhIQCghwcm90",
            "b2NvbBgFIAEoCRIYChByZWxhdGVkX3Byb2plY3RzGAYgAygJEhkKDGRpc3Bs",
            "YXlfbmFtZRgHIAEoCUID4EEDEk8KBmxhYmVscxgIIAMoCzI/Lmdvb2dsZS5j",
            "bG91ZC5uZXR3b3JrbWFuYWdlbWVudC52MS5Db25uZWN0aXZpdHlUZXN0Lkxh",
            "YmVsc0VudHJ5EjQKC2NyZWF0ZV90aW1lGAogASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGAsgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDElkKFHJlYWNoYWJpbGl0eV9k",
            "ZXRhaWxzGAwgASgLMjYuZ29vZ2xlLmNsb3VkLm5ldHdvcmttYW5hZ2VtZW50",
            "LnYxLlJlYWNoYWJpbGl0eURldGFpbHNCA+BBAxotCgtMYWJlbHNFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBOnTqQXEKMW5ldHdvcmtt",
            "YW5hZ2VtZW50Lmdvb2dsZWFwaXMuY29tL0Nvbm5lY3Rpdml0eVRlc3QSPHBy",
            "b2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMvZ2xvYmFsL2Nvbm5lY3Rpdml0",
            "eVRlc3RzL3t0ZXN0fSK9AgoIRW5kcG9pbnQSEgoKaXBfYWRkcmVzcxgBIAEo",
            "CRIMCgRwb3J0GAIgASgFEhAKCGluc3RhbmNlGAMgASgJEhoKEmdrZV9tYXN0",
            "ZXJfY2x1c3RlchgHIAEoCRIaChJjbG91ZF9zcWxfaW5zdGFuY2UYCCABKAkS",
            "DwoHbmV0d29yaxgEIAEoCRJNCgxuZXR3b3JrX3R5cGUYBSABKA4yNy5nb29n",
            "bGUuY2xvdWQubmV0d29ya21hbmFnZW1lbnQudjEuRW5kcG9pbnQuTmV0d29y",
            "a1R5cGUSEgoKcHJvamVjdF9pZBgGIAEoCSJRCgtOZXR3b3JrVHlwZRIcChhO",
            "RVRXT1JLX1RZUEVfVU5TUEVDSUZJRUQQABIPCgtHQ1BfTkVUV09SSxABEhMK",
            "D05PTl9HQ1BfTkVUV09SSxACItUCChNSZWFjaGFiaWxpdHlEZXRhaWxzEk0K",
            "BnJlc3VsdBgBIAEoDjI9Lmdvb2dsZS5jbG91ZC5uZXR3b3JrbWFuYWdlbWVu",
            "dC52MS5SZWFjaGFiaWxpdHlEZXRhaWxzLlJlc3VsdBIvCgt2ZXJpZnlfdGlt",
            "ZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASIQoFZXJyb3IY",
            "AyABKAsyEi5nb29nbGUucnBjLlN0YXR1cxI4CgZ0cmFjZXMYBSADKAsyKC5n",
            "b29nbGUuY2xvdWQubmV0d29ya21hbmFnZW1lbnQudjEuVHJhY2UiYQoGUmVz",
            "dWx0EhYKElJFU1VMVF9VTlNQRUNJRklFRBAAEg0KCVJFQUNIQUJMRRABEg8K",
            "C1VOUkVBQ0hBQkxFEAISDQoJQU1CSUdVT1VTEAQSEAoMVU5ERVRFUk1JTkVE",
            "EAVC/AEKJWNvbS5nb29nbGUuY2xvdWQubmV0d29ya21hbmFnZW1lbnQudjFC",
            "DlRlc3RPdXRlckNsYXNzUAFaUmdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3Rv",
            "L2dvb2dsZWFwaXMvY2xvdWQvbmV0d29ya21hbmFnZW1lbnQvdjE7bmV0d29y",
            "a21hbmFnZW1lbnSqAiFHb29nbGUuQ2xvdWQuTmV0d29ya01hbmFnZW1lbnQu",
            "VjHKAiFHb29nbGVcQ2xvdWRcTmV0d29ya01hbmFnZW1lbnRcVjHqAiRHb29n",
            "bGU6OkNsb3VkOjpOZXR3b3JrTWFuYWdlbWVudDo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.NetworkManagement.V1.TraceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetworkManagement.V1.ConnectivityTest), global::Google.Cloud.NetworkManagement.V1.ConnectivityTest.Parser, new[]{ "Name", "Description", "Source", "Destination", "Protocol", "RelatedProjects", "DisplayName", "Labels", "CreateTime", "UpdateTime", "ReachabilityDetails" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetworkManagement.V1.Endpoint), global::Google.Cloud.NetworkManagement.V1.Endpoint.Parser, new[]{ "IpAddress", "Port", "Instance", "GkeMasterCluster", "CloudSqlInstance", "Network", "NetworkType", "ProjectId" }, null, new[]{ typeof(global::Google.Cloud.NetworkManagement.V1.Endpoint.Types.NetworkType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails), global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails.Parser, new[]{ "Result", "VerifyTime", "Error", "Traces" }, null, new[]{ typeof(global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails.Types.Result) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A Connectivity Test for a network reachability analysis.
  /// </summary>
  public sealed partial class ConnectivityTest : pb::IMessage<ConnectivityTest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectivityTest> _parser = new pb::MessageParser<ConnectivityTest>(() => new ConnectivityTest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectivityTest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetworkManagement.V1.ConnectivityTestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectivityTest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectivityTest(ConnectivityTest other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      source_ = other.source_ != null ? other.source_.Clone() : null;
      destination_ = other.destination_ != null ? other.destination_.Clone() : null;
      protocol_ = other.protocol_;
      relatedProjects_ = other.relatedProjects_.Clone();
      displayName_ = other.displayName_;
      labels_ = other.labels_.Clone();
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      reachabilityDetails_ = other.reachabilityDetails_ != null ? other.reachabilityDetails_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectivityTest Clone() {
      return new ConnectivityTest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Unique name of the resource using the form:
    ///     `projects/{project_id}/locations/global/connectivityTests/{test_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// The user-supplied description of the Connectivity Test.
    /// Maximum of 512 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 3;
    private global::Google.Cloud.NetworkManagement.V1.Endpoint source_;
    /// <summary>
    /// Required. Source specification of the Connectivity Test.
    ///
    /// You can use a combination of source IP address, virtual machine
    /// (VM) instance, or Compute Engine network to uniquely identify
    /// the source location.
    ///
    /// Examples:
    /// If the source IP address is an internal IP address within a Google Cloud
    /// Virtual Private Cloud (VPC) network, then you must also specify the VPC
    /// network. Otherwise, specify the VM instance, which already contains its
    /// internal IP address and VPC network information.
    ///
    /// If the source of the test is within an on-premises network, then you must
    /// provide the destination VPC network.
    ///
    /// If the source endpoint is a Compute Engine VM instance with multiple
    /// network interfaces, the instance itself is not sufficient to identify the
    /// endpoint. So, you must also specify the source IP address or VPC network.
    ///
    /// A reachability analysis proceeds even if the source location is
    /// ambiguous. However, the test result may include endpoints that you don't
    /// intend to test.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1.Endpoint Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 4;
    private global::Google.Cloud.NetworkManagement.V1.Endpoint destination_;
    /// <summary>
    /// Required. Destination specification of the Connectivity Test.
    ///
    /// You can use a combination of destination IP address, Compute Engine
    /// VM instance, or VPC network to uniquely identify the destination
    /// location.
    ///
    /// Even if the destination IP address is not unique, the source IP
    /// location is unique. Usually, the analysis can infer the destination
    /// endpoint from route information.
    ///
    /// If the destination you specify is a VM instance and the instance has
    /// multiple network interfaces, then you must also specify either
    /// a destination IP address  or VPC network to identify the destination
    /// interface.
    ///
    /// A reachability analysis proceeds even if the destination location is
    /// ambiguous. However, the result can include endpoints that you don't
    /// intend to test.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1.Endpoint Destination {
      get { return destination_; }
      set {
        destination_ = value;
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 5;
    private string protocol_ = "";
    /// <summary>
    /// IP Protocol of the test. When not provided, "TCP" is assumed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Protocol {
      get { return protocol_; }
      set {
        protocol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "related_projects" field.</summary>
    public const int RelatedProjectsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_relatedProjects_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> relatedProjects_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Other projects that may be relevant for reachability analysis.
    /// This is applicable to scenarios where a test can cross project boundaries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RelatedProjects {
      get { return relatedProjects_; }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 7;
    private string displayName_ = "";
    /// <summary>
    /// Output only. The display name of a Connectivity Test.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 66);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Resource labels to represent user-provided metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time the test was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The time the test's configuration was updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "reachability_details" field.</summary>
    public const int ReachabilityDetailsFieldNumber = 12;
    private global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails reachabilityDetails_;
    /// <summary>
    /// Output only. The reachability details of this test from the latest run.
    /// The details are updated when creating a new test, updating an
    /// existing test, or triggering a one-time rerun of an existing test.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails ReachabilityDetails {
      get { return reachabilityDetails_; }
      set {
        reachabilityDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectivityTest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectivityTest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(Destination, other.Destination)) return false;
      if (Protocol != other.Protocol) return false;
      if(!relatedProjects_.Equals(other.relatedProjects_)) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(ReachabilityDetails, other.ReachabilityDetails)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      if (destination_ != null) hash ^= Destination.GetHashCode();
      if (Protocol.Length != 0) hash ^= Protocol.GetHashCode();
      hash ^= relatedProjects_.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (reachabilityDetails_ != null) hash ^= ReachabilityDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (source_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Source);
      }
      if (destination_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Destination);
      }
      if (Protocol.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Protocol);
      }
      relatedProjects_.WriteTo(output, _repeated_relatedProjects_codec);
      if (DisplayName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DisplayName);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(UpdateTime);
      }
      if (reachabilityDetails_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ReachabilityDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (source_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Source);
      }
      if (destination_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Destination);
      }
      if (Protocol.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Protocol);
      }
      relatedProjects_.WriteTo(ref output, _repeated_relatedProjects_codec);
      if (DisplayName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DisplayName);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(UpdateTime);
      }
      if (reachabilityDetails_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ReachabilityDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (destination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Destination);
      }
      if (Protocol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Protocol);
      }
      size += relatedProjects_.CalculateSize(_repeated_relatedProjects_codec);
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (reachabilityDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReachabilityDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectivityTest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.source_ != null) {
        if (source_ == null) {
          Source = new global::Google.Cloud.NetworkManagement.V1.Endpoint();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.destination_ != null) {
        if (destination_ == null) {
          Destination = new global::Google.Cloud.NetworkManagement.V1.Endpoint();
        }
        Destination.MergeFrom(other.Destination);
      }
      if (other.Protocol.Length != 0) {
        Protocol = other.Protocol;
      }
      relatedProjects_.Add(other.relatedProjects_);
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      labels_.Add(other.labels_);
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.reachabilityDetails_ != null) {
        if (reachabilityDetails_ == null) {
          ReachabilityDetails = new global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails();
        }
        ReachabilityDetails.MergeFrom(other.ReachabilityDetails);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (source_ == null) {
              Source = new global::Google.Cloud.NetworkManagement.V1.Endpoint();
            }
            input.ReadMessage(Source);
            break;
          }
          case 34: {
            if (destination_ == null) {
              Destination = new global::Google.Cloud.NetworkManagement.V1.Endpoint();
            }
            input.ReadMessage(Destination);
            break;
          }
          case 42: {
            Protocol = input.ReadString();
            break;
          }
          case 50: {
            relatedProjects_.AddEntriesFrom(input, _repeated_relatedProjects_codec);
            break;
          }
          case 58: {
            DisplayName = input.ReadString();
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 82: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 90: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 98: {
            if (reachabilityDetails_ == null) {
              ReachabilityDetails = new global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails();
            }
            input.ReadMessage(ReachabilityDetails);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (source_ == null) {
              Source = new global::Google.Cloud.NetworkManagement.V1.Endpoint();
            }
            input.ReadMessage(Source);
            break;
          }
          case 34: {
            if (destination_ == null) {
              Destination = new global::Google.Cloud.NetworkManagement.V1.Endpoint();
            }
            input.ReadMessage(Destination);
            break;
          }
          case 42: {
            Protocol = input.ReadString();
            break;
          }
          case 50: {
            relatedProjects_.AddEntriesFrom(ref input, _repeated_relatedProjects_codec);
            break;
          }
          case 58: {
            DisplayName = input.ReadString();
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 82: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 90: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 98: {
            if (reachabilityDetails_ == null) {
              ReachabilityDetails = new global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails();
            }
            input.ReadMessage(ReachabilityDetails);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Source or destination of the Connectivity Test.
  /// </summary>
  public sealed partial class Endpoint : pb::IMessage<Endpoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Endpoint> _parser = new pb::MessageParser<Endpoint>(() => new Endpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Endpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetworkManagement.V1.ConnectivityTestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint(Endpoint other) : this() {
      ipAddress_ = other.ipAddress_;
      port_ = other.port_;
      instance_ = other.instance_;
      gkeMasterCluster_ = other.gkeMasterCluster_;
      cloudSqlInstance_ = other.cloudSqlInstance_;
      network_ = other.network_;
      networkType_ = other.networkType_;
      projectId_ = other.projectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint Clone() {
      return new Endpoint(this);
    }

    /// <summary>Field number for the "ip_address" field.</summary>
    public const int IpAddressFieldNumber = 1;
    private string ipAddress_ = "";
    /// <summary>
    /// The IP address of the endpoint, which can be an external or internal IP.
    /// An IPv6 address is only allowed when the test's destination is a
    /// [global load balancer VIP](/load-balancing/docs/load-balancing-overview).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpAddress {
      get { return ipAddress_; }
      set {
        ipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    /// <summary>
    /// The IP protocol port of the endpoint.
    /// Only applicable when protocol is TCP or UDP.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 3;
    private string instance_ = "";
    /// <summary>
    /// A Compute Engine instance URI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Instance {
      get { return instance_; }
      set {
        instance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gke_master_cluster" field.</summary>
    public const int GkeMasterClusterFieldNumber = 7;
    private string gkeMasterCluster_ = "";
    /// <summary>
    /// A cluster URI for [Google Kubernetes Engine
    /// master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GkeMasterCluster {
      get { return gkeMasterCluster_; }
      set {
        gkeMasterCluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cloud_sql_instance" field.</summary>
    public const int CloudSqlInstanceFieldNumber = 8;
    private string cloudSqlInstance_ = "";
    /// <summary>
    /// A [Cloud SQL](https://cloud.google.com/sql) instance URI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CloudSqlInstance {
      get { return cloudSqlInstance_; }
      set {
        cloudSqlInstance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 4;
    private string network_ = "";
    /// <summary>
    /// A Compute Engine network URI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network_type" field.</summary>
    public const int NetworkTypeFieldNumber = 5;
    private global::Google.Cloud.NetworkManagement.V1.Endpoint.Types.NetworkType networkType_ = global::Google.Cloud.NetworkManagement.V1.Endpoint.Types.NetworkType.Unspecified;
    /// <summary>
    /// Type of the network where the endpoint is located.
    /// Applicable only to source endpoint, as destination network type can be
    /// inferred from the source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1.Endpoint.Types.NetworkType NetworkType {
      get { return networkType_; }
      set {
        networkType_ = value;
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 6;
    private string projectId_ = "";
    /// <summary>
    /// Project ID where the endpoint is located.
    /// The Project ID can be derived from the URI if you provide a VM instance or
    /// network URI.
    /// The following are two cases where you must provide the project ID:
    /// 1. Only the IP address is specified, and the IP address is within a GCP
    /// project.
    /// 2. When you are using Shared VPC and the IP address that you provide is
    /// from the service project. In this case, the network that the IP address
    /// resides in is defined in the host project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Endpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Endpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IpAddress != other.IpAddress) return false;
      if (Port != other.Port) return false;
      if (Instance != other.Instance) return false;
      if (GkeMasterCluster != other.GkeMasterCluster) return false;
      if (CloudSqlInstance != other.CloudSqlInstance) return false;
      if (Network != other.Network) return false;
      if (NetworkType != other.NetworkType) return false;
      if (ProjectId != other.ProjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IpAddress.Length != 0) hash ^= IpAddress.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Instance.Length != 0) hash ^= Instance.GetHashCode();
      if (GkeMasterCluster.Length != 0) hash ^= GkeMasterCluster.GetHashCode();
      if (CloudSqlInstance.Length != 0) hash ^= CloudSqlInstance.GetHashCode();
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (NetworkType != global::Google.Cloud.NetworkManagement.V1.Endpoint.Types.NetworkType.Unspecified) hash ^= NetworkType.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IpAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IpAddress);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (Instance.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Instance);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Network);
      }
      if (NetworkType != global::Google.Cloud.NetworkManagement.V1.Endpoint.Types.NetworkType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) NetworkType);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ProjectId);
      }
      if (GkeMasterCluster.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GkeMasterCluster);
      }
      if (CloudSqlInstance.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CloudSqlInstance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IpAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IpAddress);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (Instance.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Instance);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Network);
      }
      if (NetworkType != global::Google.Cloud.NetworkManagement.V1.Endpoint.Types.NetworkType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) NetworkType);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ProjectId);
      }
      if (GkeMasterCluster.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GkeMasterCluster);
      }
      if (CloudSqlInstance.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CloudSqlInstance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IpAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddress);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Instance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Instance);
      }
      if (GkeMasterCluster.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GkeMasterCluster);
      }
      if (CloudSqlInstance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CloudSqlInstance);
      }
      if (Network.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (NetworkType != global::Google.Cloud.NetworkManagement.V1.Endpoint.Types.NetworkType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NetworkType);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Endpoint other) {
      if (other == null) {
        return;
      }
      if (other.IpAddress.Length != 0) {
        IpAddress = other.IpAddress;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Instance.Length != 0) {
        Instance = other.Instance;
      }
      if (other.GkeMasterCluster.Length != 0) {
        GkeMasterCluster = other.GkeMasterCluster;
      }
      if (other.CloudSqlInstance.Length != 0) {
        CloudSqlInstance = other.CloudSqlInstance;
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      if (other.NetworkType != global::Google.Cloud.NetworkManagement.V1.Endpoint.Types.NetworkType.Unspecified) {
        NetworkType = other.NetworkType;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IpAddress = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Instance = input.ReadString();
            break;
          }
          case 34: {
            Network = input.ReadString();
            break;
          }
          case 40: {
            NetworkType = (global::Google.Cloud.NetworkManagement.V1.Endpoint.Types.NetworkType) input.ReadEnum();
            break;
          }
          case 50: {
            ProjectId = input.ReadString();
            break;
          }
          case 58: {
            GkeMasterCluster = input.ReadString();
            break;
          }
          case 66: {
            CloudSqlInstance = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            IpAddress = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 26: {
            Instance = input.ReadString();
            break;
          }
          case 34: {
            Network = input.ReadString();
            break;
          }
          case 40: {
            NetworkType = (global::Google.Cloud.NetworkManagement.V1.Endpoint.Types.NetworkType) input.ReadEnum();
            break;
          }
          case 50: {
            ProjectId = input.ReadString();
            break;
          }
          case 58: {
            GkeMasterCluster = input.ReadString();
            break;
          }
          case 66: {
            CloudSqlInstance = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Endpoint message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The type definition of an endpoint's network. Use one of the
      /// following choices:
      /// </summary>
      public enum NetworkType {
        /// <summary>
        /// Default type if unspecified.
        /// </summary>
        [pbr::OriginalName("NETWORK_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A network hosted within Google Cloud Platform.
        /// To receive more detailed output, specify the URI for the source or
        /// destination network.
        /// </summary>
        [pbr::OriginalName("GCP_NETWORK")] GcpNetwork = 1,
        /// <summary>
        /// A network hosted outside of Google Cloud Platform.
        /// This can be an on-premises network, or a network hosted by another cloud
        /// provider.
        /// </summary>
        [pbr::OriginalName("NON_GCP_NETWORK")] NonGcpNetwork = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Results of the configuration analysis from the last run of the test.
  /// </summary>
  public sealed partial class ReachabilityDetails : pb::IMessage<ReachabilityDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReachabilityDetails> _parser = new pb::MessageParser<ReachabilityDetails>(() => new ReachabilityDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReachabilityDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetworkManagement.V1.ConnectivityTestReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachabilityDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachabilityDetails(ReachabilityDetails other) : this() {
      result_ = other.result_;
      verifyTime_ = other.verifyTime_ != null ? other.verifyTime_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      traces_ = other.traces_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachabilityDetails Clone() {
      return new ReachabilityDetails(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails.Types.Result result_ = global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails.Types.Result.Unspecified;
    /// <summary>
    /// The overall result of the test's configuration analysis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "verify_time" field.</summary>
    public const int VerifyTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp verifyTime_;
    /// <summary>
    /// The time of the configuration analysis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VerifyTime {
      get { return verifyTime_; }
      set {
        verifyTime_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 3;
    private global::Google.Rpc.Status error_;
    /// <summary>
    /// The details of a failure or a cancellation of reachability analysis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "traces" field.</summary>
    public const int TracesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.NetworkManagement.V1.Trace> _repeated_traces_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.NetworkManagement.V1.Trace.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.NetworkManagement.V1.Trace> traces_ = new pbc::RepeatedField<global::Google.Cloud.NetworkManagement.V1.Trace>();
    /// <summary>
    /// Result may contain a list of traces if a test has multiple possible
    /// paths in the network, such as when destination endpoint is a load balancer
    /// with multiple backends.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.NetworkManagement.V1.Trace> Traces {
      get { return traces_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReachabilityDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReachabilityDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(VerifyTime, other.VerifyTime)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if(!traces_.Equals(other.traces_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails.Types.Result.Unspecified) hash ^= Result.GetHashCode();
      if (verifyTime_ != null) hash ^= VerifyTime.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= traces_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Result != global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails.Types.Result.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (verifyTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VerifyTime);
      }
      if (error_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Error);
      }
      traces_.WriteTo(output, _repeated_traces_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Result != global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails.Types.Result.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (verifyTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VerifyTime);
      }
      if (error_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Error);
      }
      traces_.WriteTo(ref output, _repeated_traces_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails.Types.Result.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (verifyTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerifyTime);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += traces_.CalculateSize(_repeated_traces_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReachabilityDetails other) {
      if (other == null) {
        return;
      }
      if (other.Result != global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails.Types.Result.Unspecified) {
        Result = other.Result;
      }
      if (other.verifyTime_ != null) {
        if (verifyTime_ == null) {
          VerifyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VerifyTime.MergeFrom(other.VerifyTime);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Google.Rpc.Status();
        }
        Error.MergeFrom(other.Error);
      }
      traces_.Add(other.traces_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (verifyTime_ == null) {
              VerifyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VerifyTime);
            break;
          }
          case 26: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
          case 42: {
            traces_.AddEntriesFrom(input, _repeated_traces_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Google.Cloud.NetworkManagement.V1.ReachabilityDetails.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (verifyTime_ == null) {
              VerifyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VerifyTime);
            break;
          }
          case 26: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
          case 42: {
            traces_.AddEntriesFrom(ref input, _repeated_traces_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReachabilityDetails message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The overall result of the test's configuration analysis.
      /// </summary>
      public enum Result {
        /// <summary>
        /// No result was specified.
        /// </summary>
        [pbr::OriginalName("RESULT_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Possible scenarios are:
        ///
        /// * The configuration analysis determined that a packet originating from
        ///   the source is expected to reach the destination.
        /// * The analysis didn't complete because the user lacks permission for
        ///   some of the resources in the trace. However, at the time the user's
        ///   permission became insufficient, the trace had been successful so far.
        /// </summary>
        [pbr::OriginalName("REACHABLE")] Reachable = 1,
        /// <summary>
        /// A packet originating from the source is expected to be dropped before
        /// reaching the destination.
        /// </summary>
        [pbr::OriginalName("UNREACHABLE")] Unreachable = 2,
        /// <summary>
        /// The source and destination endpoints do not uniquely identify
        /// the test location in the network, and the reachability result contains
        /// multiple traces. For some traces, a packet could be delivered, and for
        /// others, it would not be.
        /// </summary>
        [pbr::OriginalName("AMBIGUOUS")] Ambiguous = 4,
        /// <summary>
        /// The configuration analysis did not complete. Possible reasons are:
        ///
        /// * A permissions error occurred--for example, the user might not have
        ///   read permission for all of the resources named in the test.
        /// * An internal error occurred.
        /// * The analyzer received an invalid or unsupported argument or was unable
        ///   to identify a known endpoint.
        /// </summary>
        [pbr::OriginalName("UNDETERMINED")] Undetermined = 5,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
