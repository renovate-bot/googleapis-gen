// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/retail/v2alpha/product.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Retail.V2Alpha {

  /// <summary>Holder for reflection information generated from google/cloud/retail/v2alpha/product.proto</summary>
  public static partial class ProductReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/retail/v2alpha/product.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProductReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvY2xvdWQvcmV0YWlsL3YyYWxwaGEvcHJvZHVjdC5wcm90bxIb",
            "Z29vZ2xlLmNsb3VkLnJldGFpbC52MmFscGhhGhxnb29nbGUvYXBpL2Fubm90",
            "YXRpb25zLnByb3RvGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3Rv",
            "Ghlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGihnb29nbGUvY2xvdWQvcmV0",
            "YWlsL3YyYWxwaGEvY29tbW9uLnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVy",
            "YXRpb24ucHJvdG8aIGdvb2dsZS9wcm90b2J1Zi9maWVsZF9tYXNrLnByb3Rv",
            "Gh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGh5nb29nbGUvcHJv",
            "dG9idWYvd3JhcHBlcnMucHJvdG8iyw0KB1Byb2R1Y3QSMQoLZXhwaXJlX3Rp",
            "bWUYECABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAASLQoDdHRs",
            "GBEgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uQgPgQQRIABIRCgRu",
            "YW1lGAEgASgJQgPgQQUSDwoCaWQYAiABKAlCA+BBBRI8CgR0eXBlGAMgASgO",
            "MikuZ29vZ2xlLmNsb3VkLnJldGFpbC52MmFscGhhLlByb2R1Y3QuVHlwZUID",
            "4EEFEhoKEnByaW1hcnlfcHJvZHVjdF9pZBgEIAEoCRIdChVjb2xsZWN0aW9u",
            "X21lbWJlcl9pZHMYBSADKAkSDAoEZ3RpbhgGIAEoCRISCgpjYXRlZ29yaWVz",
            "GAcgAygJEhIKBXRpdGxlGAggASgJQgPgQQISDgoGYnJhbmRzGAkgAygJEhMK",
            "C2Rlc2NyaXB0aW9uGAogASgJEhUKDWxhbmd1YWdlX2NvZGUYCyABKAkSSAoK",
            "YXR0cmlidXRlcxgMIAMoCzI0Lmdvb2dsZS5jbG91ZC5yZXRhaWwudjJhbHBo",
            "YS5Qcm9kdWN0LkF0dHJpYnV0ZXNFbnRyeRIMCgR0YWdzGA0gAygJEjoKCnBy",
            "aWNlX2luZm8YDiABKAsyJi5nb29nbGUuY2xvdWQucmV0YWlsLnYyYWxwaGEu",
            "UHJpY2VJbmZvEjMKBnJhdGluZxgPIAEoCzIjLmdvb2dsZS5jbG91ZC5yZXRh",
            "aWwudjJhbHBoYS5SYXRpbmcSMgoOYXZhaWxhYmxlX3RpbWUYEiABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEkcKDGF2YWlsYWJpbGl0eRgTIAEo",
            "DjIxLmdvb2dsZS5jbG91ZC5yZXRhaWwudjJhbHBoYS5Qcm9kdWN0LkF2YWls",
            "YWJpbGl0eRI3ChJhdmFpbGFibGVfcXVhbnRpdHkYFCABKAsyGy5nb29nbGUu",
            "cHJvdG9idWYuSW50MzJWYWx1ZRJGChBmdWxmaWxsbWVudF9pbmZvGBUgAygL",
            "MiwuZ29vZ2xlLmNsb3VkLnJldGFpbC52MmFscGhhLkZ1bGZpbGxtZW50SW5m",
            "bxILCgN1cmkYFiABKAkSMgoGaW1hZ2VzGBcgAygLMiIuZ29vZ2xlLmNsb3Vk",
            "LnJldGFpbC52MmFscGhhLkltYWdlEjcKCGF1ZGllbmNlGBggASgLMiUuZ29v",
            "Z2xlLmNsb3VkLnJldGFpbC52MmFscGhhLkF1ZGllbmNlEjoKCmNvbG9yX2lu",
            "Zm8YGSABKAsyJi5nb29nbGUuY2xvdWQucmV0YWlsLnYyYWxwaGEuQ29sb3JJ",
            "bmZvEg0KBXNpemVzGBogAygJEhEKCW1hdGVyaWFscxgbIAMoCRIQCghwYXR0",
            "ZXJucxgcIAMoCRISCgpjb25kaXRpb25zGB0gAygJEjoKCnByb21vdGlvbnMY",
            "IiADKAsyJi5nb29nbGUuY2xvdWQucmV0YWlsLnYyYWxwaGEuUHJvbW90aW9u",
            "EjAKDHB1Ymxpc2hfdGltZRghIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXASNgoScmV0cmlldmFibGVfZmllbGRzGB4gASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLkZpZWxkTWFzaxI7Cgh2YXJpYW50cxgfIAMoCzIkLmdvb2dsZS5j",
            "bG91ZC5yZXRhaWwudjJhbHBoYS5Qcm9kdWN0QgPgQQMaXwoPQXR0cmlidXRl",
            "c0VudHJ5EgsKA2tleRgBIAEoCRI7CgV2YWx1ZRgCIAEoCzIsLmdvb2dsZS5j",
            "bG91ZC5yZXRhaWwudjJhbHBoYS5DdXN0b21BdHRyaWJ1dGU6AjgBIkYKBFR5",
            "cGUSFAoQVFlQRV9VTlNQRUNJRklFRBAAEgsKB1BSSU1BUlkQARILCgdWQVJJ",
            "QU5UEAISDgoKQ09MTEVDVElPThADImkKDEF2YWlsYWJpbGl0eRIcChhBVkFJ",
            "TEFCSUxJVFlfVU5TUEVDSUZJRUQQABIMCghJTl9TVE9DSxABEhAKDE9VVF9P",
            "Rl9TVE9DSxACEgwKCFBSRU9SREVSEAMSDQoJQkFDS09SREVSEAQ6hAHqQYAB",
            "Ch1yZXRhaWwuZ29vZ2xlYXBpcy5jb20vUHJvZHVjdBJfcHJvamVjdHMve3By",
            "b2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2NhdGFsb2dzL3tjYXRhbG9n",
            "fS9icmFuY2hlcy97YnJhbmNofS9wcm9kdWN0cy97cHJvZHVjdH1CDAoKZXhw",
            "aXJhdGlvbkLJAgofY29tLmdvb2dsZS5jbG91ZC5yZXRhaWwudjJhbHBoYUIM",
            "UHJvZHVjdFByb3RvUAFaQWdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dv",
            "b2dsZWFwaXMvY2xvdWQvcmV0YWlsL3YyYWxwaGE7cmV0YWlsogIGUkVUQUlM",
            "qgIbR29vZ2xlLkNsb3VkLlJldGFpbC5WMkFscGhhygIbR29vZ2xlXENsb3Vk",
            "XFJldGFpbFxWMmFscGhh6gIeR29vZ2xlOjpDbG91ZDo6UmV0YWlsOjpWMmFs",
            "cGhh6kFsChxyZXRhaWwuZ29vZ2xlYXBpcy5jb20vQnJhbmNoEkxwcm9qZWN0",
            "cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vY2F0YWxvZ3Mve2Nh",
            "dGFsb2d9L2JyYW5jaGVzL3ticmFuY2h9YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Retail.V2Alpha.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Retail.V2Alpha.Product), global::Google.Cloud.Retail.V2Alpha.Product.Parser, new[]{ "ExpireTime", "Ttl", "Name", "Id", "Type", "PrimaryProductId", "CollectionMemberIds", "Gtin", "Categories", "Title", "Brands", "Description", "LanguageCode", "Attributes", "Tags", "PriceInfo", "Rating", "AvailableTime", "Availability", "AvailableQuantity", "FulfillmentInfo", "Uri", "Images", "Audience", "ColorInfo", "Sizes", "Materials", "Patterns", "Conditions", "Promotions", "PublishTime", "RetrievableFields", "Variants" }, new[]{ "Expiration" }, new[]{ typeof(global::Google.Cloud.Retail.V2Alpha.Product.Types.Type), typeof(global::Google.Cloud.Retail.V2Alpha.Product.Types.Availability) }, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Product captures all metadata information of items to be recommended or
  /// searched.
  /// </summary>
  public sealed partial class Product : pb::IMessage<Product>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Product> _parser = new pb::MessageParser<Product>(() => new Product());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Product> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Retail.V2Alpha.ProductReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Product() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Product(Product other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      type_ = other.type_;
      primaryProductId_ = other.primaryProductId_;
      collectionMemberIds_ = other.collectionMemberIds_.Clone();
      gtin_ = other.gtin_;
      categories_ = other.categories_.Clone();
      title_ = other.title_;
      brands_ = other.brands_.Clone();
      description_ = other.description_;
      languageCode_ = other.languageCode_;
      attributes_ = other.attributes_.Clone();
      tags_ = other.tags_.Clone();
      priceInfo_ = other.priceInfo_ != null ? other.priceInfo_.Clone() : null;
      rating_ = other.rating_ != null ? other.rating_.Clone() : null;
      availableTime_ = other.availableTime_ != null ? other.availableTime_.Clone() : null;
      availability_ = other.availability_;
      AvailableQuantity = other.AvailableQuantity;
      fulfillmentInfo_ = other.fulfillmentInfo_.Clone();
      uri_ = other.uri_;
      images_ = other.images_.Clone();
      audience_ = other.audience_ != null ? other.audience_.Clone() : null;
      colorInfo_ = other.colorInfo_ != null ? other.colorInfo_.Clone() : null;
      sizes_ = other.sizes_.Clone();
      materials_ = other.materials_.Clone();
      patterns_ = other.patterns_.Clone();
      conditions_ = other.conditions_.Clone();
      promotions_ = other.promotions_.Clone();
      publishTime_ = other.publishTime_ != null ? other.publishTime_.Clone() : null;
      retrievableFields_ = other.retrievableFields_ != null ? other.retrievableFields_.Clone() : null;
      variants_ = other.variants_.Clone();
      switch (other.ExpirationCase) {
        case ExpirationOneofCase.ExpireTime:
          ExpireTime = other.ExpireTime.Clone();
          break;
        case ExpirationOneofCase.Ttl:
          Ttl = other.Ttl.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Product Clone() {
      return new Product(this);
    }

    /// <summary>Field number for the "expire_time" field.</summary>
    public const int ExpireTimeFieldNumber = 16;
    /// <summary>
    /// The timestamp when this product becomes unavailable for
    /// [SearchService.Search][google.cloud.retail.v2alpha.SearchService.Search].
    ///
    /// If it is set, the [Product][google.cloud.retail.v2alpha.Product] is not
    /// available for
    /// [SearchService.Search][google.cloud.retail.v2alpha.SearchService.Search]
    /// after [expire_time][google.cloud.retail.v2alpha.Product.expire_time].
    /// However, the product can still be retrieved by
    /// [ProductService.GetProduct][google.cloud.retail.v2alpha.ProductService.GetProduct]
    /// and
    /// [ProductService.ListProducts][google.cloud.retail.v2alpha.ProductService.ListProducts].
    ///
    /// Google Merchant Center property
    /// [expiration_date](https://support.google.com/merchants/answer/6324499).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireTime {
      get { return expirationCase_ == ExpirationOneofCase.ExpireTime ? (global::Google.Protobuf.WellKnownTypes.Timestamp) expiration_ : null; }
      set {
        expiration_ = value;
        expirationCase_ = value == null ? ExpirationOneofCase.None : ExpirationOneofCase.ExpireTime;
      }
    }

    /// <summary>Field number for the "ttl" field.</summary>
    public const int TtlFieldNumber = 17;
    /// <summary>
    /// Input only. The TTL (time to live) of the product.
    ///
    /// If it is set,
    /// [expire_time][google.cloud.retail.v2alpha.Product.expire_time] is set as
    /// current timestamp plus [ttl][google.cloud.retail.v2alpha.Product.ttl].
    /// The derived
    /// [expire_time][google.cloud.retail.v2alpha.Product.expire_time] is
    /// returned in the output and [ttl][google.cloud.retail.v2alpha.Product.ttl]
    /// is left blank when retrieving the
    /// [Product][google.cloud.retail.v2alpha.Product].
    ///
    /// If it is set, the product is not available for
    /// [SearchService.Search][google.cloud.retail.v2alpha.SearchService.Search]
    /// after current timestamp plus
    /// [ttl][google.cloud.retail.v2alpha.Product.ttl]. However, the product can
    /// still be retrieved by
    /// [ProductService.GetProduct][google.cloud.retail.v2alpha.ProductService.GetProduct]
    /// and
    /// [ProductService.ListProducts][google.cloud.retail.v2alpha.ProductService.ListProducts].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Ttl {
      get { return expirationCase_ == ExpirationOneofCase.Ttl ? (global::Google.Protobuf.WellKnownTypes.Duration) expiration_ : null; }
      set {
        expiration_ = value;
        expirationCase_ = value == null ? ExpirationOneofCase.None : ExpirationOneofCase.Ttl;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Immutable. Full resource name of the product, such as
    /// `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
    ///
    /// The branch ID must be "default_branch".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// Immutable. [Product][google.cloud.retail.v2alpha.Product] identifier, which
    /// is the final component of [name][google.cloud.retail.v2alpha.Product.name].
    /// For example, this field is "id_1", if
    /// [name][google.cloud.retail.v2alpha.Product.name] is
    /// `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/id_1`.
    ///
    /// This field must be a UTF-8 encoded string with a length limit of 128
    /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
    ///
    /// Google Merchant Center property
    /// [id](https://support.google.com/merchants/answer/6324405). Schema.org
    /// Property [Product.sku](https://schema.org/sku).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Google.Cloud.Retail.V2Alpha.Product.Types.Type type_ = global::Google.Cloud.Retail.V2Alpha.Product.Types.Type.Unspecified;
    /// <summary>
    /// Immutable. The type of the product. Default to
    /// [Catalog.product_level_config.ingestion_product_type][google.cloud.retail.v2alpha.ProductLevelConfig.ingestion_product_type]
    /// if unset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Retail.V2Alpha.Product.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "primary_product_id" field.</summary>
    public const int PrimaryProductIdFieldNumber = 4;
    private string primaryProductId_ = "";
    /// <summary>
    /// Variant group identifier. Must be an
    /// [id][google.cloud.retail.v2alpha.Product.id], with the same parent branch
    /// with this product. Otherwise, an error is thrown.
    ///
    /// For [Type.PRIMARY][google.cloud.retail.v2alpha.Product.Type.PRIMARY]
    /// [Product][google.cloud.retail.v2alpha.Product]s, this field can only be
    /// empty or set to the same value as
    /// [id][google.cloud.retail.v2alpha.Product.id].
    ///
    /// For VARIANT [Product][google.cloud.retail.v2alpha.Product]s, this field
    /// cannot be empty. A maximum of 2,000 products are allowed to share the same
    /// [Type.PRIMARY][google.cloud.retail.v2alpha.Product.Type.PRIMARY]
    /// [Product][google.cloud.retail.v2alpha.Product]. Otherwise, an
    /// INVALID_ARGUMENT error is returned.
    ///
    /// Google Merchant Center Property
    /// [item_group_id](https://support.google.com/merchants/answer/6324507).
    /// Schema.org Property
    /// [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).
    ///
    /// This field must be enabled before it can be used. [Learn
    /// more](/recommendations-ai/docs/catalog#item-group-id).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrimaryProductId {
      get { return primaryProductId_; }
      set {
        primaryProductId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection_member_ids" field.</summary>
    public const int CollectionMemberIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_collectionMemberIds_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> collectionMemberIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The [id][google.cloud.retail.v2alpha.Product.id] of the collection members
    /// when [type][google.cloud.retail.v2alpha.Product.type] is
    /// [Type.COLLECTION][google.cloud.retail.v2alpha.Product.Type.COLLECTION].
    ///
    /// Should not set it for other types. A maximum of 1000 values are allowed.
    /// Otherwise, an INVALID_ARGUMENT error is return.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CollectionMemberIds {
      get { return collectionMemberIds_; }
    }

    /// <summary>Field number for the "gtin" field.</summary>
    public const int GtinFieldNumber = 6;
    private string gtin_ = "";
    /// <summary>
    /// The Global Trade Item Number (GTIN) of the product.
    ///
    /// This field must be a UTF-8 encoded string with a length limit of 128
    /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
    ///
    /// This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is
    /// returned.
    ///
    /// Google Merchant Center property
    /// [gtin](https://support.google.com/merchants/answer/6324461).
    /// Schema.org property
    /// [Product.isbn](https://schema.org/isbn) or
    /// [Product.gtin8](https://schema.org/gtin8) or
    /// [Product.gtin12](https://schema.org/gtin12) or
    /// [Product.gtin13](https://schema.org/gtin13) or
    /// [Product.gtin14](https://schema.org/gtin14).
    ///
    /// If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gtin {
      get { return gtin_; }
      set {
        gtin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "categories" field.</summary>
    public const int CategoriesFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_categories_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> categories_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Product categories. This field is repeated for supporting one product
    /// belonging to several parallel categories. Strongly recommended using the
    /// full path for better search / recommendation quality.
    ///
    /// To represent full path of category, use '>' sign to separate different
    /// hierarchies. If '>' is part of the category name, please replace it with
    /// other character(s).
    ///
    /// For example, if a shoes product belongs to both
    /// ["Shoes &amp; Accessories" -> "Shoes"] and
    /// ["Sports &amp; Fitness" -> "Athletic Clothing" -> "Shoes"], it could be
    /// represented as:
    ///
    ///      "categories": [
    ///        "Shoes &amp; Accessories > Shoes",
    ///        "Sports &amp; Fitness > Athletic Clothing > Shoes"
    ///      ]
    ///
    /// Must be set for
    /// [Type.PRIMARY][google.cloud.retail.v2alpha.Product.Type.PRIMARY]
    /// [Product][google.cloud.retail.v2alpha.Product] otherwise an
    /// INVALID_ARGUMENT error is returned.
    ///
    /// At most 250 values are allowed per
    /// [Product][google.cloud.retail.v2alpha.Product]. Empty values are not
    /// allowed. Each value must be a UTF-8 encoded string with a length limit of
    /// 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned.
    ///
    /// Google Merchant Center property
    /// [google_product_category][mc_google_product_category]. Schema.org property
    /// [Product.category] (https://schema.org/category).
    ///
    /// [mc_google_product_category]:
    /// https://support.google.com/merchants/answer/6324436
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Categories {
      get { return categories_; }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 8;
    private string title_ = "";
    /// <summary>
    /// Required. Product title.
    ///
    /// This field must be a UTF-8 encoded string with a length limit of 1,000
    /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
    ///
    /// Google Merchant Center property
    /// [title](https://support.google.com/merchants/answer/6324415). Schema.org
    /// property [Product.name](https://schema.org/name).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "brands" field.</summary>
    public const int BrandsFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_brands_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> brands_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The brands of the product.
    ///
    /// A maximum of 30 brands are allowed. Each brand must be a UTF-8 encoded
    /// string with a length limit of 1,000 characters. Otherwise, an
    /// INVALID_ARGUMENT error is returned.
    ///
    /// Google Merchant Center property
    /// [brand](https://support.google.com/merchants/answer/6324351). Schema.org
    /// property [Product.brand](https://schema.org/brand).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Brands {
      get { return brands_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 10;
    private string description_ = "";
    /// <summary>
    /// Product description.
    ///
    /// This field must be a UTF-8 encoded string with a length limit of 5,000
    /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
    ///
    /// Google Merchant Center property
    /// [description](https://support.google.com/merchants/answer/6324468).
    /// schema.org property [Product.description](https://schema.org/description).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 11;
    private string languageCode_ = "";
    /// <summary>
    /// Language of the title/description and other string attributes. Use language
    /// tags defined by [BCP 47][https://www.rfc-editor.org/rfc/bcp/bcp47.txt].
    ///
    /// For product prediction, this field is ignored and the model automatically
    /// detects the text language. The
    /// [Product][google.cloud.retail.v2alpha.Product] can include text in
    /// different languages, but duplicating
    /// [Product][google.cloud.retail.v2alpha.Product]s to provide text in multiple
    /// languages can result in degraded model performance.
    ///
    /// For product search this field is in use. It defaults to "en-US" if unset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 12;
    private static readonly pbc::MapField<string, global::Google.Cloud.Retail.V2Alpha.CustomAttribute>.Codec _map_attributes_codec
        = new pbc::MapField<string, global::Google.Cloud.Retail.V2Alpha.CustomAttribute>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Retail.V2Alpha.CustomAttribute.Parser), 98);
    private readonly pbc::MapField<string, global::Google.Cloud.Retail.V2Alpha.CustomAttribute> attributes_ = new pbc::MapField<string, global::Google.Cloud.Retail.V2Alpha.CustomAttribute>();
    /// <summary>
    /// Highly encouraged. Extra product attributes to be included. For example,
    /// for products, this could include the store name, vendor, style, color, etc.
    /// These are very strong signals for recommendation model, thus we highly
    /// recommend providing the attributes here.
    ///
    /// Features that can take on one of a limited number of possible values. Two
    /// types of features can be set are:
    ///
    /// Textual features. some examples would be the brand/maker of a product, or
    /// country of a customer. Numerical features. Some examples would be the
    /// height/weight of a product, or age of a customer.
    ///
    /// For example: `{ "vendor": {"text": ["vendor123", "vendor456"]},
    /// "lengths_cm": {"numbers":[2.3, 15.4]}, "heights_cm": {"numbers":[8.1, 6.4]}
    /// }`.
    ///
    /// This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT
    /// error is returned:
    ///
    /// * Max entries count: 200.
    /// * The key must be a UTF-8 encoded string with a length limit of 128
    ///   characters.
    /// * For indexable attribute, the key must match the pattern:
    ///   [a-zA-Z0-9][a-zA-Z0-9_]*. For example, key0LikeThis or KEY_1_LIKE_THIS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.Retail.V2Alpha.CustomAttribute> Attributes {
      get { return attributes_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Custom tags associated with the product.
    ///
    /// At most 250 values are allowed per
    /// [Product][google.cloud.retail.v2alpha.Product]. This value must be a UTF-8
    /// encoded string with a length limit of 1,000 characters. Otherwise, an
    /// INVALID_ARGUMENT error is returned.
    ///
    /// This tag can be used for filtering recommendation results by passing the
    /// tag as part of the
    /// [PredictRequest.filter][google.cloud.retail.v2alpha.PredictRequest.filter].
    ///
    /// Google Merchant Center property
    /// [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "price_info" field.</summary>
    public const int PriceInfoFieldNumber = 14;
    private global::Google.Cloud.Retail.V2Alpha.PriceInfo priceInfo_;
    /// <summary>
    /// Product price and cost information.
    ///
    /// Google Merchant Center property
    /// [price](https://support.google.com/merchants/answer/6324371).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Retail.V2Alpha.PriceInfo PriceInfo {
      get { return priceInfo_; }
      set {
        priceInfo_ = value;
      }
    }

    /// <summary>Field number for the "rating" field.</summary>
    public const int RatingFieldNumber = 15;
    private global::Google.Cloud.Retail.V2Alpha.Rating rating_;
    /// <summary>
    /// The rating of this product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Retail.V2Alpha.Rating Rating {
      get { return rating_; }
      set {
        rating_ = value;
      }
    }

    /// <summary>Field number for the "available_time" field.</summary>
    public const int AvailableTimeFieldNumber = 18;
    private global::Google.Protobuf.WellKnownTypes.Timestamp availableTime_;
    /// <summary>
    /// The timestamp when this [Product][google.cloud.retail.v2alpha.Product]
    /// becomes available for
    /// [SearchService.Search][google.cloud.retail.v2alpha.SearchService.Search].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AvailableTime {
      get { return availableTime_; }
      set {
        availableTime_ = value;
      }
    }

    /// <summary>Field number for the "availability" field.</summary>
    public const int AvailabilityFieldNumber = 19;
    private global::Google.Cloud.Retail.V2Alpha.Product.Types.Availability availability_ = global::Google.Cloud.Retail.V2Alpha.Product.Types.Availability.Unspecified;
    /// <summary>
    /// The online availability of the
    /// [Product][google.cloud.retail.v2alpha.Product]. Default to
    /// [Availability.IN_STOCK][google.cloud.retail.v2alpha.Product.Availability.IN_STOCK].
    ///
    /// Google Merchant Center Property
    /// [availability](https://support.google.com/merchants/answer/6324448).
    /// Schema.org Property [Offer.availability](https://schema.org/availability).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Retail.V2Alpha.Product.Types.Availability Availability {
      get { return availability_; }
      set {
        availability_ = value;
      }
    }

    /// <summary>Field number for the "available_quantity" field.</summary>
    public const int AvailableQuantityFieldNumber = 20;
    private static readonly pb::FieldCodec<int?> _single_availableQuantity_codec = pb::FieldCodec.ForStructWrapper<int>(162);
    private int? availableQuantity_;
    /// <summary>
    /// The available quantity of the item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? AvailableQuantity {
      get { return availableQuantity_; }
      set {
        availableQuantity_ = value;
      }
    }


    /// <summary>Field number for the "fulfillment_info" field.</summary>
    public const int FulfillmentInfoFieldNumber = 21;
    private static readonly pb::FieldCodec<global::Google.Cloud.Retail.V2Alpha.FulfillmentInfo> _repeated_fulfillmentInfo_codec
        = pb::FieldCodec.ForMessage(170, global::Google.Cloud.Retail.V2Alpha.FulfillmentInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Retail.V2Alpha.FulfillmentInfo> fulfillmentInfo_ = new pbc::RepeatedField<global::Google.Cloud.Retail.V2Alpha.FulfillmentInfo>();
    /// <summary>
    /// Fulfillment information, such as the store IDs for in-store pickup or
    /// region IDs for different shipping methods.
    ///
    /// All the elements must have distinct
    /// [FulfillmentInfo.type][google.cloud.retail.v2alpha.FulfillmentInfo.type].
    /// Otherwise, an INVALID_ARGUMENT error is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Retail.V2Alpha.FulfillmentInfo> FulfillmentInfo {
      get { return fulfillmentInfo_; }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 22;
    private string uri_ = "";
    /// <summary>
    /// Canonical URL directly linking to the product detail page.
    ///
    /// It is strongly recommended to provide a valid uri for the product,
    /// otherwise the service performance could be significantly degraded.
    ///
    /// This field must be a UTF-8 encoded string with a length limit of 5,000
    /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
    ///
    /// Google Merchant Center property
    /// [link](https://support.google.com/merchants/answer/6324416). Schema.org
    /// property [Offer.url](https://schema.org/url).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 23;
    private static readonly pb::FieldCodec<global::Google.Cloud.Retail.V2Alpha.Image> _repeated_images_codec
        = pb::FieldCodec.ForMessage(186, global::Google.Cloud.Retail.V2Alpha.Image.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Retail.V2Alpha.Image> images_ = new pbc::RepeatedField<global::Google.Cloud.Retail.V2Alpha.Image>();
    /// <summary>
    /// Product images for the product.Highly recommended to put the main image
    /// to the first.
    ///
    /// A maximum of 300 images are allowed.
    ///
    /// Google Merchant Center property
    /// [image_link](https://support.google.com/merchants/answer/6324350).
    /// Schema.org property [Product.image](https://schema.org/image).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Retail.V2Alpha.Image> Images {
      get { return images_; }
    }

    /// <summary>Field number for the "audience" field.</summary>
    public const int AudienceFieldNumber = 24;
    private global::Google.Cloud.Retail.V2Alpha.Audience audience_;
    /// <summary>
    /// The target group associated with a given audience (e.g. male, veterans,
    /// car owners, musicians, etc.) of the product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Retail.V2Alpha.Audience Audience {
      get { return audience_; }
      set {
        audience_ = value;
      }
    }

    /// <summary>Field number for the "color_info" field.</summary>
    public const int ColorInfoFieldNumber = 25;
    private global::Google.Cloud.Retail.V2Alpha.ColorInfo colorInfo_;
    /// <summary>
    /// The color of the product.
    ///
    /// Google Merchant Center property
    /// [color](https://support.google.com/merchants/answer/6324487). Schema.org
    /// property [Product.color](https://schema.org/color).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Retail.V2Alpha.ColorInfo ColorInfo {
      get { return colorInfo_; }
      set {
        colorInfo_ = value;
      }
    }

    /// <summary>Field number for the "sizes" field.</summary>
    public const int SizesFieldNumber = 26;
    private static readonly pb::FieldCodec<string> _repeated_sizes_codec
        = pb::FieldCodec.ForString(210);
    private readonly pbc::RepeatedField<string> sizes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The size of the product. To represent different size systems or size types,
    /// consider using this format: [[[size_system:]size_type:]size_value].
    ///
    /// For example, in "US:MENS:M", "US" represents size system; "MENS" represents
    /// size type; "M" represents size value. In "GIRLS:27", size system is empty;
    /// "GIRLS" represents size type; "27" represents size value. In "32 inches",
    /// both size system and size type are empty, while size value is "32 inches".
    ///
    /// A maximum of 20 values are allowed per
    /// [Product][google.cloud.retail.v2alpha.Product]. Each value must be a UTF-8
    /// encoded string with a length limit of 128 characters. Otherwise, an
    /// INVALID_ARGUMENT error is returned.
    ///
    /// Google Merchant Center property
    /// [size](https://support.google.com/merchants/answer/6324492),
    /// [size_type](https://support.google.com/merchants/answer/6324497) and
    /// [size_system](https://support.google.com/merchants/answer/6324502).
    /// Schema.org property [Product.size](https://schema.org/size).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Sizes {
      get { return sizes_; }
    }

    /// <summary>Field number for the "materials" field.</summary>
    public const int MaterialsFieldNumber = 27;
    private static readonly pb::FieldCodec<string> _repeated_materials_codec
        = pb::FieldCodec.ForString(218);
    private readonly pbc::RepeatedField<string> materials_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The material of the product. For example, "leather", "wooden".
    ///
    /// A maximum of 20 values are allowed. Each value must be a UTF-8 encoded
    /// string with a length limit of 128 characters. Otherwise, an
    /// INVALID_ARGUMENT error is returned.
    ///
    /// Google Merchant Center property
    /// [material](https://support.google.com/merchants/answer/6324410). Schema.org
    /// property [Product.material](https://schema.org/material).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Materials {
      get { return materials_; }
    }

    /// <summary>Field number for the "patterns" field.</summary>
    public const int PatternsFieldNumber = 28;
    private static readonly pb::FieldCodec<string> _repeated_patterns_codec
        = pb::FieldCodec.ForString(226);
    private readonly pbc::RepeatedField<string> patterns_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The pattern or graphic print of the product. For example, "striped", "polka
    /// dot", "paisley".
    ///
    /// A maximum of 20 values are allowed per
    /// [Product][google.cloud.retail.v2alpha.Product]. Each value must be a UTF-8
    /// encoded string with a length limit of 128 characters. Otherwise, an
    /// INVALID_ARGUMENT error is returned.
    ///
    /// Google Merchant Center property
    /// [pattern](https://support.google.com/merchants/answer/6324483). Schema.org
    /// property [Product.pattern](https://schema.org/pattern).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Patterns {
      get { return patterns_; }
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 29;
    private static readonly pb::FieldCodec<string> _repeated_conditions_codec
        = pb::FieldCodec.ForString(234);
    private readonly pbc::RepeatedField<string> conditions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The condition of the product. Strongly encouraged to use the standard
    /// values: "new", "refurbished", "used".
    ///
    /// A maximum of 5 values are allowed per
    /// [Product][google.cloud.retail.v2alpha.Product]. Each value must be a UTF-8
    /// encoded string with a length limit of 128 characters. Otherwise, an
    /// INVALID_ARGUMENT error is returned.
    ///
    /// Google Merchant Center property
    /// [condition](https://support.google.com/merchants/answer/6324469).
    /// Schema.org property
    /// [Offer.itemCondition](https://schema.org/itemCondition).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Conditions {
      get { return conditions_; }
    }

    /// <summary>Field number for the "promotions" field.</summary>
    public const int PromotionsFieldNumber = 34;
    private static readonly pb::FieldCodec<global::Google.Cloud.Retail.V2Alpha.Promotion> _repeated_promotions_codec
        = pb::FieldCodec.ForMessage(274, global::Google.Cloud.Retail.V2Alpha.Promotion.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Retail.V2Alpha.Promotion> promotions_ = new pbc::RepeatedField<global::Google.Cloud.Retail.V2Alpha.Promotion>();
    /// <summary>
    /// The promotions applied to the product. A maximum of 10 values are allowed
    /// per [Product][google.cloud.retail.v2alpha.Product].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Retail.V2Alpha.Promotion> Promotions {
      get { return promotions_; }
    }

    /// <summary>Field number for the "publish_time" field.</summary>
    public const int PublishTimeFieldNumber = 33;
    private global::Google.Protobuf.WellKnownTypes.Timestamp publishTime_;
    /// <summary>
    /// The timestamp when the product is published by the retailer for the first
    /// time, which indicates the freshness of the products. Note that this field
    /// is different from
    /// [available_time][google.cloud.retail.v2alpha.Product.available_time], given
    /// it purely describes product freshness regardless of when it is available on
    /// search and recommendation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PublishTime {
      get { return publishTime_; }
      set {
        publishTime_ = value;
      }
    }

    /// <summary>Field number for the "retrievable_fields" field.</summary>
    public const int RetrievableFieldsFieldNumber = 30;
    private global::Google.Protobuf.WellKnownTypes.FieldMask retrievableFields_;
    /// <summary>
    /// Indicates which fields in the
    /// [Product][google.cloud.retail.v2alpha.Product]s are returned in
    /// [SearchResponse][google.cloud.retail.v2alpha.SearchResponse].
    ///
    /// Supported fields for all [type][google.cloud.retail.v2alpha.Product.type]s:
    ///
    /// * [audience][google.cloud.retail.v2alpha.Product.audience]
    /// * [availability][google.cloud.retail.v2alpha.Product.availability]
    /// * [brands][google.cloud.retail.v2alpha.Product.brands]
    /// * [color_info][google.cloud.retail.v2alpha.Product.color_info]
    /// * [conditions][google.cloud.retail.v2alpha.Product.conditions]
    /// * [gtin][google.cloud.retail.v2alpha.Product.gtin]
    /// * [materials][google.cloud.retail.v2alpha.Product.materials]
    /// * [name][google.cloud.retail.v2alpha.Product.name]
    /// * [patterns][google.cloud.retail.v2alpha.Product.patterns]
    /// * [price_info][google.cloud.retail.v2alpha.Product.price_info]
    /// * [rating][google.cloud.retail.v2alpha.Product.rating]
    /// * [sizes][google.cloud.retail.v2alpha.Product.sizes]
    /// * [title][google.cloud.retail.v2alpha.Product.title]
    /// * [uri][google.cloud.retail.v2alpha.Product.uri]
    ///
    /// Supported fields only for
    /// [Type.PRIMARY][google.cloud.retail.v2alpha.Product.Type.PRIMARY] and
    /// [Type.COLLECTION][google.cloud.retail.v2alpha.Product.Type.COLLECTION]:
    ///
    /// * [categories][google.cloud.retail.v2alpha.Product.categories]
    /// * [description][google.cloud.retail.v2alpha.Product.description]
    /// * [images][google.cloud.retail.v2alpha.Product.images]
    ///
    /// Supported fields only for
    /// [Type.VARIANT][google.cloud.retail.v2alpha.Product.Type.VARIANT]:
    ///
    /// * Only the first image in
    /// [images][google.cloud.retail.v2alpha.Product.images]
    ///
    /// To mark [attributes][google.cloud.retail.v2alpha.Product.attributes] as
    /// retrievable, include paths of the form "attributes.key" where "key" is the
    /// key of a custom attribute, as specified in
    /// [attributes][google.cloud.retail.v2alpha.Product.attributes].
    ///
    /// For [Type.PRIMARY][google.cloud.retail.v2alpha.Product.Type.PRIMARY] and
    /// [Type.COLLECTION][google.cloud.retail.v2alpha.Product.Type.COLLECTION], the
    /// following fields are always returned in
    /// [SearchResponse][google.cloud.retail.v2alpha.SearchResponse] by default:
    ///
    /// * [name][google.cloud.retail.v2alpha.Product.name]
    ///
    /// For [Type.VARIANT][google.cloud.retail.v2alpha.Product.Type.VARIANT], the
    /// following fields are always returned in by default:
    ///
    /// * [name][google.cloud.retail.v2alpha.Product.name]
    /// * [color_info][google.cloud.retail.v2alpha.Product.color_info]
    ///
    /// Maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is
    /// returned.
    ///
    /// Note: Returning more fields in
    /// [SearchResponse][google.cloud.retail.v2alpha.SearchResponse] may increase
    /// response payload size and serving latency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask RetrievableFields {
      get { return retrievableFields_; }
      set {
        retrievableFields_ = value;
      }
    }

    /// <summary>Field number for the "variants" field.</summary>
    public const int VariantsFieldNumber = 31;
    private static readonly pb::FieldCodec<global::Google.Cloud.Retail.V2Alpha.Product> _repeated_variants_codec
        = pb::FieldCodec.ForMessage(250, global::Google.Cloud.Retail.V2Alpha.Product.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Retail.V2Alpha.Product> variants_ = new pbc::RepeatedField<global::Google.Cloud.Retail.V2Alpha.Product>();
    /// <summary>
    /// Output only. Product variants grouped together on primary product which
    /// share similar product attributes. It's automatically grouped by
    /// [primary_product_id][google.cloud.retail.v2alpha.Product.primary_product_id]
    /// for all the product variants. Only populated for
    /// [Type.PRIMARY][google.cloud.retail.v2alpha.Product.Type.PRIMARY]
    /// [Product][google.cloud.retail.v2alpha.Product]s.
    ///
    /// Note: This field is OUTPUT_ONLY for
    /// [ProductService.GetProduct][google.cloud.retail.v2alpha.ProductService.GetProduct].
    /// Do not set this field in API requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Retail.V2Alpha.Product> Variants {
      get { return variants_; }
    }

    private object expiration_;
    /// <summary>Enum of possible cases for the "expiration" oneof.</summary>
    public enum ExpirationOneofCase {
      None = 0,
      ExpireTime = 16,
      Ttl = 17,
    }
    private ExpirationOneofCase expirationCase_ = ExpirationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpirationOneofCase ExpirationCase {
      get { return expirationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpiration() {
      expirationCase_ = ExpirationOneofCase.None;
      expiration_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Product);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Product other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExpireTime, other.ExpireTime)) return false;
      if (!object.Equals(Ttl, other.Ttl)) return false;
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (PrimaryProductId != other.PrimaryProductId) return false;
      if(!collectionMemberIds_.Equals(other.collectionMemberIds_)) return false;
      if (Gtin != other.Gtin) return false;
      if(!categories_.Equals(other.categories_)) return false;
      if (Title != other.Title) return false;
      if(!brands_.Equals(other.brands_)) return false;
      if (Description != other.Description) return false;
      if (LanguageCode != other.LanguageCode) return false;
      if (!Attributes.Equals(other.Attributes)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!object.Equals(PriceInfo, other.PriceInfo)) return false;
      if (!object.Equals(Rating, other.Rating)) return false;
      if (!object.Equals(AvailableTime, other.AvailableTime)) return false;
      if (Availability != other.Availability) return false;
      if (AvailableQuantity != other.AvailableQuantity) return false;
      if(!fulfillmentInfo_.Equals(other.fulfillmentInfo_)) return false;
      if (Uri != other.Uri) return false;
      if(!images_.Equals(other.images_)) return false;
      if (!object.Equals(Audience, other.Audience)) return false;
      if (!object.Equals(ColorInfo, other.ColorInfo)) return false;
      if(!sizes_.Equals(other.sizes_)) return false;
      if(!materials_.Equals(other.materials_)) return false;
      if(!patterns_.Equals(other.patterns_)) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      if(!promotions_.Equals(other.promotions_)) return false;
      if (!object.Equals(PublishTime, other.PublishTime)) return false;
      if (!object.Equals(RetrievableFields, other.RetrievableFields)) return false;
      if(!variants_.Equals(other.variants_)) return false;
      if (ExpirationCase != other.ExpirationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (expirationCase_ == ExpirationOneofCase.ExpireTime) hash ^= ExpireTime.GetHashCode();
      if (expirationCase_ == ExpirationOneofCase.Ttl) hash ^= Ttl.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Type != global::Google.Cloud.Retail.V2Alpha.Product.Types.Type.Unspecified) hash ^= Type.GetHashCode();
      if (PrimaryProductId.Length != 0) hash ^= PrimaryProductId.GetHashCode();
      hash ^= collectionMemberIds_.GetHashCode();
      if (Gtin.Length != 0) hash ^= Gtin.GetHashCode();
      hash ^= categories_.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      hash ^= brands_.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      hash ^= Attributes.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (priceInfo_ != null) hash ^= PriceInfo.GetHashCode();
      if (rating_ != null) hash ^= Rating.GetHashCode();
      if (availableTime_ != null) hash ^= AvailableTime.GetHashCode();
      if (Availability != global::Google.Cloud.Retail.V2Alpha.Product.Types.Availability.Unspecified) hash ^= Availability.GetHashCode();
      if (availableQuantity_ != null) hash ^= AvailableQuantity.GetHashCode();
      hash ^= fulfillmentInfo_.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      hash ^= images_.GetHashCode();
      if (audience_ != null) hash ^= Audience.GetHashCode();
      if (colorInfo_ != null) hash ^= ColorInfo.GetHashCode();
      hash ^= sizes_.GetHashCode();
      hash ^= materials_.GetHashCode();
      hash ^= patterns_.GetHashCode();
      hash ^= conditions_.GetHashCode();
      hash ^= promotions_.GetHashCode();
      if (publishTime_ != null) hash ^= PublishTime.GetHashCode();
      if (retrievableFields_ != null) hash ^= RetrievableFields.GetHashCode();
      hash ^= variants_.GetHashCode();
      hash ^= (int) expirationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Type != global::Google.Cloud.Retail.V2Alpha.Product.Types.Type.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (PrimaryProductId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PrimaryProductId);
      }
      collectionMemberIds_.WriteTo(output, _repeated_collectionMemberIds_codec);
      if (Gtin.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Gtin);
      }
      categories_.WriteTo(output, _repeated_categories_codec);
      if (Title.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Title);
      }
      brands_.WriteTo(output, _repeated_brands_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Description);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(LanguageCode);
      }
      attributes_.WriteTo(output, _map_attributes_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (priceInfo_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(PriceInfo);
      }
      if (rating_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Rating);
      }
      if (expirationCase_ == ExpirationOneofCase.ExpireTime) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ExpireTime);
      }
      if (expirationCase_ == ExpirationOneofCase.Ttl) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Ttl);
      }
      if (availableTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(AvailableTime);
      }
      if (Availability != global::Google.Cloud.Retail.V2Alpha.Product.Types.Availability.Unspecified) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) Availability);
      }
      if (availableQuantity_ != null) {
        _single_availableQuantity_codec.WriteTagAndValue(output, AvailableQuantity);
      }
      fulfillmentInfo_.WriteTo(output, _repeated_fulfillmentInfo_codec);
      if (Uri.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Uri);
      }
      images_.WriteTo(output, _repeated_images_codec);
      if (audience_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Audience);
      }
      if (colorInfo_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(ColorInfo);
      }
      sizes_.WriteTo(output, _repeated_sizes_codec);
      materials_.WriteTo(output, _repeated_materials_codec);
      patterns_.WriteTo(output, _repeated_patterns_codec);
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (retrievableFields_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(RetrievableFields);
      }
      variants_.WriteTo(output, _repeated_variants_codec);
      if (publishTime_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(PublishTime);
      }
      promotions_.WriteTo(output, _repeated_promotions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Type != global::Google.Cloud.Retail.V2Alpha.Product.Types.Type.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (PrimaryProductId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PrimaryProductId);
      }
      collectionMemberIds_.WriteTo(ref output, _repeated_collectionMemberIds_codec);
      if (Gtin.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Gtin);
      }
      categories_.WriteTo(ref output, _repeated_categories_codec);
      if (Title.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Title);
      }
      brands_.WriteTo(ref output, _repeated_brands_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Description);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(LanguageCode);
      }
      attributes_.WriteTo(ref output, _map_attributes_codec);
      tags_.WriteTo(ref output, _repeated_tags_codec);
      if (priceInfo_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(PriceInfo);
      }
      if (rating_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Rating);
      }
      if (expirationCase_ == ExpirationOneofCase.ExpireTime) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ExpireTime);
      }
      if (expirationCase_ == ExpirationOneofCase.Ttl) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Ttl);
      }
      if (availableTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(AvailableTime);
      }
      if (Availability != global::Google.Cloud.Retail.V2Alpha.Product.Types.Availability.Unspecified) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) Availability);
      }
      if (availableQuantity_ != null) {
        _single_availableQuantity_codec.WriteTagAndValue(ref output, AvailableQuantity);
      }
      fulfillmentInfo_.WriteTo(ref output, _repeated_fulfillmentInfo_codec);
      if (Uri.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Uri);
      }
      images_.WriteTo(ref output, _repeated_images_codec);
      if (audience_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Audience);
      }
      if (colorInfo_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(ColorInfo);
      }
      sizes_.WriteTo(ref output, _repeated_sizes_codec);
      materials_.WriteTo(ref output, _repeated_materials_codec);
      patterns_.WriteTo(ref output, _repeated_patterns_codec);
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (retrievableFields_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(RetrievableFields);
      }
      variants_.WriteTo(ref output, _repeated_variants_codec);
      if (publishTime_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(PublishTime);
      }
      promotions_.WriteTo(ref output, _repeated_promotions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (expirationCase_ == ExpirationOneofCase.ExpireTime) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExpireTime);
      }
      if (expirationCase_ == ExpirationOneofCase.Ttl) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ttl);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Type != global::Google.Cloud.Retail.V2Alpha.Product.Types.Type.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (PrimaryProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrimaryProductId);
      }
      size += collectionMemberIds_.CalculateSize(_repeated_collectionMemberIds_codec);
      if (Gtin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gtin);
      }
      size += categories_.CalculateSize(_repeated_categories_codec);
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      size += brands_.CalculateSize(_repeated_brands_codec);
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      size += attributes_.CalculateSize(_map_attributes_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (priceInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriceInfo);
      }
      if (rating_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rating);
      }
      if (availableTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AvailableTime);
      }
      if (Availability != global::Google.Cloud.Retail.V2Alpha.Product.Types.Availability.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Availability);
      }
      if (availableQuantity_ != null) {
        size += _single_availableQuantity_codec.CalculateSizeWithTag(AvailableQuantity);
      }
      size += fulfillmentInfo_.CalculateSize(_repeated_fulfillmentInfo_codec);
      if (Uri.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      size += images_.CalculateSize(_repeated_images_codec);
      if (audience_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Audience);
      }
      if (colorInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ColorInfo);
      }
      size += sizes_.CalculateSize(_repeated_sizes_codec);
      size += materials_.CalculateSize(_repeated_materials_codec);
      size += patterns_.CalculateSize(_repeated_patterns_codec);
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      size += promotions_.CalculateSize(_repeated_promotions_codec);
      if (publishTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublishTime);
      }
      if (retrievableFields_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RetrievableFields);
      }
      size += variants_.CalculateSize(_repeated_variants_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Product other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Type != global::Google.Cloud.Retail.V2Alpha.Product.Types.Type.Unspecified) {
        Type = other.Type;
      }
      if (other.PrimaryProductId.Length != 0) {
        PrimaryProductId = other.PrimaryProductId;
      }
      collectionMemberIds_.Add(other.collectionMemberIds_);
      if (other.Gtin.Length != 0) {
        Gtin = other.Gtin;
      }
      categories_.Add(other.categories_);
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      brands_.Add(other.brands_);
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      attributes_.Add(other.attributes_);
      tags_.Add(other.tags_);
      if (other.priceInfo_ != null) {
        if (priceInfo_ == null) {
          PriceInfo = new global::Google.Cloud.Retail.V2Alpha.PriceInfo();
        }
        PriceInfo.MergeFrom(other.PriceInfo);
      }
      if (other.rating_ != null) {
        if (rating_ == null) {
          Rating = new global::Google.Cloud.Retail.V2Alpha.Rating();
        }
        Rating.MergeFrom(other.Rating);
      }
      if (other.availableTime_ != null) {
        if (availableTime_ == null) {
          AvailableTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AvailableTime.MergeFrom(other.AvailableTime);
      }
      if (other.Availability != global::Google.Cloud.Retail.V2Alpha.Product.Types.Availability.Unspecified) {
        Availability = other.Availability;
      }
      if (other.availableQuantity_ != null) {
        if (availableQuantity_ == null || other.AvailableQuantity != 0) {
          AvailableQuantity = other.AvailableQuantity;
        }
      }
      fulfillmentInfo_.Add(other.fulfillmentInfo_);
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      images_.Add(other.images_);
      if (other.audience_ != null) {
        if (audience_ == null) {
          Audience = new global::Google.Cloud.Retail.V2Alpha.Audience();
        }
        Audience.MergeFrom(other.Audience);
      }
      if (other.colorInfo_ != null) {
        if (colorInfo_ == null) {
          ColorInfo = new global::Google.Cloud.Retail.V2Alpha.ColorInfo();
        }
        ColorInfo.MergeFrom(other.ColorInfo);
      }
      sizes_.Add(other.sizes_);
      materials_.Add(other.materials_);
      patterns_.Add(other.patterns_);
      conditions_.Add(other.conditions_);
      promotions_.Add(other.promotions_);
      if (other.publishTime_ != null) {
        if (publishTime_ == null) {
          PublishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PublishTime.MergeFrom(other.PublishTime);
      }
      if (other.retrievableFields_ != null) {
        if (retrievableFields_ == null) {
          RetrievableFields = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        RetrievableFields.MergeFrom(other.RetrievableFields);
      }
      variants_.Add(other.variants_);
      switch (other.ExpirationCase) {
        case ExpirationOneofCase.ExpireTime:
          if (ExpireTime == null) {
            ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          ExpireTime.MergeFrom(other.ExpireTime);
          break;
        case ExpirationOneofCase.Ttl:
          if (Ttl == null) {
            Ttl = new global::Google.Protobuf.WellKnownTypes.Duration();
          }
          Ttl.MergeFrom(other.Ttl);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Google.Cloud.Retail.V2Alpha.Product.Types.Type) input.ReadEnum();
            break;
          }
          case 34: {
            PrimaryProductId = input.ReadString();
            break;
          }
          case 42: {
            collectionMemberIds_.AddEntriesFrom(input, _repeated_collectionMemberIds_codec);
            break;
          }
          case 50: {
            Gtin = input.ReadString();
            break;
          }
          case 58: {
            categories_.AddEntriesFrom(input, _repeated_categories_codec);
            break;
          }
          case 66: {
            Title = input.ReadString();
            break;
          }
          case 74: {
            brands_.AddEntriesFrom(input, _repeated_brands_codec);
            break;
          }
          case 82: {
            Description = input.ReadString();
            break;
          }
          case 90: {
            LanguageCode = input.ReadString();
            break;
          }
          case 98: {
            attributes_.AddEntriesFrom(input, _map_attributes_codec);
            break;
          }
          case 106: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 114: {
            if (priceInfo_ == null) {
              PriceInfo = new global::Google.Cloud.Retail.V2Alpha.PriceInfo();
            }
            input.ReadMessage(PriceInfo);
            break;
          }
          case 122: {
            if (rating_ == null) {
              Rating = new global::Google.Cloud.Retail.V2Alpha.Rating();
            }
            input.ReadMessage(Rating);
            break;
          }
          case 130: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (expirationCase_ == ExpirationOneofCase.ExpireTime) {
              subBuilder.MergeFrom(ExpireTime);
            }
            input.ReadMessage(subBuilder);
            ExpireTime = subBuilder;
            break;
          }
          case 138: {
            global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
            if (expirationCase_ == ExpirationOneofCase.Ttl) {
              subBuilder.MergeFrom(Ttl);
            }
            input.ReadMessage(subBuilder);
            Ttl = subBuilder;
            break;
          }
          case 146: {
            if (availableTime_ == null) {
              AvailableTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AvailableTime);
            break;
          }
          case 152: {
            Availability = (global::Google.Cloud.Retail.V2Alpha.Product.Types.Availability) input.ReadEnum();
            break;
          }
          case 162: {
            int? value = _single_availableQuantity_codec.Read(input);
            if (availableQuantity_ == null || value != 0) {
              AvailableQuantity = value;
            }
            break;
          }
          case 170: {
            fulfillmentInfo_.AddEntriesFrom(input, _repeated_fulfillmentInfo_codec);
            break;
          }
          case 178: {
            Uri = input.ReadString();
            break;
          }
          case 186: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
          case 194: {
            if (audience_ == null) {
              Audience = new global::Google.Cloud.Retail.V2Alpha.Audience();
            }
            input.ReadMessage(Audience);
            break;
          }
          case 202: {
            if (colorInfo_ == null) {
              ColorInfo = new global::Google.Cloud.Retail.V2Alpha.ColorInfo();
            }
            input.ReadMessage(ColorInfo);
            break;
          }
          case 210: {
            sizes_.AddEntriesFrom(input, _repeated_sizes_codec);
            break;
          }
          case 218: {
            materials_.AddEntriesFrom(input, _repeated_materials_codec);
            break;
          }
          case 226: {
            patterns_.AddEntriesFrom(input, _repeated_patterns_codec);
            break;
          }
          case 234: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
          case 242: {
            if (retrievableFields_ == null) {
              RetrievableFields = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(RetrievableFields);
            break;
          }
          case 250: {
            variants_.AddEntriesFrom(input, _repeated_variants_codec);
            break;
          }
          case 266: {
            if (publishTime_ == null) {
              PublishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishTime);
            break;
          }
          case 274: {
            promotions_.AddEntriesFrom(input, _repeated_promotions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Google.Cloud.Retail.V2Alpha.Product.Types.Type) input.ReadEnum();
            break;
          }
          case 34: {
            PrimaryProductId = input.ReadString();
            break;
          }
          case 42: {
            collectionMemberIds_.AddEntriesFrom(ref input, _repeated_collectionMemberIds_codec);
            break;
          }
          case 50: {
            Gtin = input.ReadString();
            break;
          }
          case 58: {
            categories_.AddEntriesFrom(ref input, _repeated_categories_codec);
            break;
          }
          case 66: {
            Title = input.ReadString();
            break;
          }
          case 74: {
            brands_.AddEntriesFrom(ref input, _repeated_brands_codec);
            break;
          }
          case 82: {
            Description = input.ReadString();
            break;
          }
          case 90: {
            LanguageCode = input.ReadString();
            break;
          }
          case 98: {
            attributes_.AddEntriesFrom(ref input, _map_attributes_codec);
            break;
          }
          case 106: {
            tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
            break;
          }
          case 114: {
            if (priceInfo_ == null) {
              PriceInfo = new global::Google.Cloud.Retail.V2Alpha.PriceInfo();
            }
            input.ReadMessage(PriceInfo);
            break;
          }
          case 122: {
            if (rating_ == null) {
              Rating = new global::Google.Cloud.Retail.V2Alpha.Rating();
            }
            input.ReadMessage(Rating);
            break;
          }
          case 130: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (expirationCase_ == ExpirationOneofCase.ExpireTime) {
              subBuilder.MergeFrom(ExpireTime);
            }
            input.ReadMessage(subBuilder);
            ExpireTime = subBuilder;
            break;
          }
          case 138: {
            global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
            if (expirationCase_ == ExpirationOneofCase.Ttl) {
              subBuilder.MergeFrom(Ttl);
            }
            input.ReadMessage(subBuilder);
            Ttl = subBuilder;
            break;
          }
          case 146: {
            if (availableTime_ == null) {
              AvailableTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AvailableTime);
            break;
          }
          case 152: {
            Availability = (global::Google.Cloud.Retail.V2Alpha.Product.Types.Availability) input.ReadEnum();
            break;
          }
          case 162: {
            int? value = _single_availableQuantity_codec.Read(ref input);
            if (availableQuantity_ == null || value != 0) {
              AvailableQuantity = value;
            }
            break;
          }
          case 170: {
            fulfillmentInfo_.AddEntriesFrom(ref input, _repeated_fulfillmentInfo_codec);
            break;
          }
          case 178: {
            Uri = input.ReadString();
            break;
          }
          case 186: {
            images_.AddEntriesFrom(ref input, _repeated_images_codec);
            break;
          }
          case 194: {
            if (audience_ == null) {
              Audience = new global::Google.Cloud.Retail.V2Alpha.Audience();
            }
            input.ReadMessage(Audience);
            break;
          }
          case 202: {
            if (colorInfo_ == null) {
              ColorInfo = new global::Google.Cloud.Retail.V2Alpha.ColorInfo();
            }
            input.ReadMessage(ColorInfo);
            break;
          }
          case 210: {
            sizes_.AddEntriesFrom(ref input, _repeated_sizes_codec);
            break;
          }
          case 218: {
            materials_.AddEntriesFrom(ref input, _repeated_materials_codec);
            break;
          }
          case 226: {
            patterns_.AddEntriesFrom(ref input, _repeated_patterns_codec);
            break;
          }
          case 234: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
          case 242: {
            if (retrievableFields_ == null) {
              RetrievableFields = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(RetrievableFields);
            break;
          }
          case 250: {
            variants_.AddEntriesFrom(ref input, _repeated_variants_codec);
            break;
          }
          case 266: {
            if (publishTime_ == null) {
              PublishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishTime);
            break;
          }
          case 274: {
            promotions_.AddEntriesFrom(ref input, _repeated_promotions_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Product message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The type of this product.
      /// </summary>
      public enum Type {
        /// <summary>
        /// Default value. Default to
        /// [Catalog.product_level_config.ingestion_product_type][google.cloud.retail.v2alpha.ProductLevelConfig.ingestion_product_type]
        /// if unset.
        /// </summary>
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The primary type.
        ///
        /// As the primary unit for predicting, indexing and search serving, a
        /// [Type.PRIMARY][google.cloud.retail.v2alpha.Product.Type.PRIMARY]
        /// [Product][google.cloud.retail.v2alpha.Product] is grouped with multiple
        /// [Type.VARIANT][google.cloud.retail.v2alpha.Product.Type.VARIANT]
        /// [Product][google.cloud.retail.v2alpha.Product]s.
        /// </summary>
        [pbr::OriginalName("PRIMARY")] Primary = 1,
        /// <summary>
        /// The variant type.
        ///
        /// [Type.VARIANT][google.cloud.retail.v2alpha.Product.Type.VARIANT]
        /// [Product][google.cloud.retail.v2alpha.Product]s usually share some common
        /// attributes on the same
        /// [Type.PRIMARY][google.cloud.retail.v2alpha.Product.Type.PRIMARY]
        /// [Product][google.cloud.retail.v2alpha.Product]s, but they have variant
        /// attributes like different colors, sizes and prices, etc.
        /// </summary>
        [pbr::OriginalName("VARIANT")] Variant = 2,
        /// <summary>
        /// The collection type. Collection products are bundled
        /// [Type.PRIMARY][google.cloud.retail.v2alpha.Product.Type.PRIMARY]
        /// [Product][google.cloud.retail.v2alpha.Product]s or
        /// [Type.VARIANT][google.cloud.retail.v2alpha.Product.Type.VARIANT]
        /// [Product][google.cloud.retail.v2alpha.Product]s that are sold together,
        /// such as a jewelry set with necklaces, earrings and rings, etc.
        /// </summary>
        [pbr::OriginalName("COLLECTION")] Collection = 3,
      }

      /// <summary>
      /// Product availability. If this field is unspecified, the product is
      /// assumed to be in stock.
      /// </summary>
      public enum Availability {
        /// <summary>
        /// Default product availability. Default to
        /// [Availability.IN_STOCK][google.cloud.retail.v2alpha.Product.Availability.IN_STOCK]
        /// if unset.
        /// </summary>
        [pbr::OriginalName("AVAILABILITY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Product in stock.
        /// </summary>
        [pbr::OriginalName("IN_STOCK")] InStock = 1,
        /// <summary>
        /// Product out of stock.
        /// </summary>
        [pbr::OriginalName("OUT_OF_STOCK")] OutOfStock = 2,
        /// <summary>
        /// Product that is in pre-order state.
        /// </summary>
        [pbr::OriginalName("PREORDER")] Preorder = 3,
        /// <summary>
        /// Product that is back-ordered (i.e. temporarily out of stock).
        /// </summary>
        [pbr::OriginalName("BACKORDER")] Backorder = 4,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
