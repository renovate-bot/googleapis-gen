// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/retail/v2beta/product_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Retail.V2Beta {
  /// <summary>
  /// Service for ingesting [Product][google.cloud.retail.v2beta.Product]
  /// information of the customer's website.
  /// </summary>
  public static partial class ProductService
  {
    static readonly string __ServiceName = "google.cloud.retail.v2beta.ProductService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2Beta.CreateProductRequest> __Marshaller_google_cloud_retail_v2beta_CreateProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2Beta.CreateProductRequest.Parser));
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2Beta.Product> __Marshaller_google_cloud_retail_v2beta_Product = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2Beta.Product.Parser));
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2Beta.GetProductRequest> __Marshaller_google_cloud_retail_v2beta_GetProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2Beta.GetProductRequest.Parser));
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2Beta.ListProductsRequest> __Marshaller_google_cloud_retail_v2beta_ListProductsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2Beta.ListProductsRequest.Parser));
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2Beta.ListProductsResponse> __Marshaller_google_cloud_retail_v2beta_ListProductsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2Beta.ListProductsResponse.Parser));
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2Beta.UpdateProductRequest> __Marshaller_google_cloud_retail_v2beta_UpdateProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2Beta.UpdateProductRequest.Parser));
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2Beta.DeleteProductRequest> __Marshaller_google_cloud_retail_v2beta_DeleteProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2Beta.DeleteProductRequest.Parser));
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2Beta.ImportProductsRequest> __Marshaller_google_cloud_retail_v2beta_ImportProductsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2Beta.ImportProductsRequest.Parser));
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2Beta.SetInventoryRequest> __Marshaller_google_cloud_retail_v2beta_SetInventoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2Beta.SetInventoryRequest.Parser));
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2Beta.AddFulfillmentPlacesRequest> __Marshaller_google_cloud_retail_v2beta_AddFulfillmentPlacesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2Beta.AddFulfillmentPlacesRequest.Parser));
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2Beta.RemoveFulfillmentPlacesRequest> __Marshaller_google_cloud_retail_v2beta_RemoveFulfillmentPlacesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2Beta.RemoveFulfillmentPlacesRequest.Parser));

    static readonly grpc::Method<global::Google.Cloud.Retail.V2Beta.CreateProductRequest, global::Google.Cloud.Retail.V2Beta.Product> __Method_CreateProduct = new grpc::Method<global::Google.Cloud.Retail.V2Beta.CreateProductRequest, global::Google.Cloud.Retail.V2Beta.Product>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProduct",
        __Marshaller_google_cloud_retail_v2beta_CreateProductRequest,
        __Marshaller_google_cloud_retail_v2beta_Product);

    static readonly grpc::Method<global::Google.Cloud.Retail.V2Beta.GetProductRequest, global::Google.Cloud.Retail.V2Beta.Product> __Method_GetProduct = new grpc::Method<global::Google.Cloud.Retail.V2Beta.GetProductRequest, global::Google.Cloud.Retail.V2Beta.Product>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProduct",
        __Marshaller_google_cloud_retail_v2beta_GetProductRequest,
        __Marshaller_google_cloud_retail_v2beta_Product);

    static readonly grpc::Method<global::Google.Cloud.Retail.V2Beta.ListProductsRequest, global::Google.Cloud.Retail.V2Beta.ListProductsResponse> __Method_ListProducts = new grpc::Method<global::Google.Cloud.Retail.V2Beta.ListProductsRequest, global::Google.Cloud.Retail.V2Beta.ListProductsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProducts",
        __Marshaller_google_cloud_retail_v2beta_ListProductsRequest,
        __Marshaller_google_cloud_retail_v2beta_ListProductsResponse);

    static readonly grpc::Method<global::Google.Cloud.Retail.V2Beta.UpdateProductRequest, global::Google.Cloud.Retail.V2Beta.Product> __Method_UpdateProduct = new grpc::Method<global::Google.Cloud.Retail.V2Beta.UpdateProductRequest, global::Google.Cloud.Retail.V2Beta.Product>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProduct",
        __Marshaller_google_cloud_retail_v2beta_UpdateProductRequest,
        __Marshaller_google_cloud_retail_v2beta_Product);

    static readonly grpc::Method<global::Google.Cloud.Retail.V2Beta.DeleteProductRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteProduct = new grpc::Method<global::Google.Cloud.Retail.V2Beta.DeleteProductRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProduct",
        __Marshaller_google_cloud_retail_v2beta_DeleteProductRequest,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Google.Cloud.Retail.V2Beta.ImportProductsRequest, global::Google.LongRunning.Operation> __Method_ImportProducts = new grpc::Method<global::Google.Cloud.Retail.V2Beta.ImportProductsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportProducts",
        __Marshaller_google_cloud_retail_v2beta_ImportProductsRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Google.Cloud.Retail.V2Beta.SetInventoryRequest, global::Google.LongRunning.Operation> __Method_SetInventory = new grpc::Method<global::Google.Cloud.Retail.V2Beta.SetInventoryRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetInventory",
        __Marshaller_google_cloud_retail_v2beta_SetInventoryRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Google.Cloud.Retail.V2Beta.AddFulfillmentPlacesRequest, global::Google.LongRunning.Operation> __Method_AddFulfillmentPlaces = new grpc::Method<global::Google.Cloud.Retail.V2Beta.AddFulfillmentPlacesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddFulfillmentPlaces",
        __Marshaller_google_cloud_retail_v2beta_AddFulfillmentPlacesRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Google.Cloud.Retail.V2Beta.RemoveFulfillmentPlacesRequest, global::Google.LongRunning.Operation> __Method_RemoveFulfillmentPlaces = new grpc::Method<global::Google.Cloud.Retail.V2Beta.RemoveFulfillmentPlacesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveFulfillmentPlaces",
        __Marshaller_google_cloud_retail_v2beta_RemoveFulfillmentPlacesRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Retail.V2Beta.ProductServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ProductService</summary>
    [grpc::BindServiceMethod(typeof(ProductService), "BindService")]
    public abstract partial class ProductServiceBase
    {
      /// <summary>
      /// Creates a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2Beta.Product> CreateProduct(global::Google.Cloud.Retail.V2Beta.CreateProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2Beta.Product> GetProduct(global::Google.Cloud.Retail.V2Beta.GetProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a list of [Product][google.cloud.retail.v2beta.Product]s.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2Beta.ListProductsResponse> ListProducts(global::Google.Cloud.Retail.V2Beta.ListProductsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2Beta.Product> UpdateProduct(global::Google.Cloud.Retail.V2Beta.UpdateProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteProduct(global::Google.Cloud.Retail.V2Beta.DeleteProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Bulk import of multiple [Product][google.cloud.retail.v2beta.Product]s.
      ///
      /// Request processing may be synchronous. No partial updating is supported.
      /// Non-existing items are created.
      ///
      /// Note that it is possible for a subset of the
      /// [Product][google.cloud.retail.v2beta.Product]s to be successfully updated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ImportProducts(global::Google.Cloud.Retail.V2Beta.ImportProductsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates inventory information for a
      /// [Product][google.cloud.retail.v2beta.Product] while respecting the last
      /// update timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// When inventory is updated with
      /// [CreateProduct][google.cloud.retail.v2beta.ProductService.CreateProduct]
      /// and
      /// [UpdateProduct][google.cloud.retail.v2beta.ProductService.UpdateProduct],
      /// the specified inventory field value(s) will overwrite any existing value(s)
      /// while ignoring the last update time for this field. Furthermore, the last
      /// update time for the specified inventory fields will be overwritten to the
      /// time of the
      /// [CreateProduct][google.cloud.retail.v2beta.ProductService.CreateProduct] or
      /// [UpdateProduct][google.cloud.retail.v2beta.ProductService.UpdateProduct]
      /// request.
      ///
      /// If no inventory fields are set in
      /// [CreateProductRequest.product][google.cloud.retail.v2beta.CreateProductRequest.product],
      /// then any pre-existing inventory information for this product will be used.
      ///
      /// If no inventory fields are set in [UpdateProductRequest.set_mask][],
      /// then any existing inventory information will be preserved.
      ///
      /// Pre-existing inventory information can only be updated with
      /// [SetInventory][google.cloud.retail.v2beta.ProductService.SetInventory],
      /// [AddFulfillmentPlaces][google.cloud.retail.v2beta.ProductService.AddFulfillmentPlaces],
      /// and
      /// [RemoveFulfillmentPlaces][google.cloud.retail.v2beta.ProductService.RemoveFulfillmentPlaces].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> SetInventory(global::Google.Cloud.Retail.V2Beta.SetInventoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Incrementally adds place IDs to
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2beta.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the added place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> AddFulfillmentPlaces(global::Google.Cloud.Retail.V2Beta.AddFulfillmentPlacesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Incrementally removes place IDs from a
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2beta.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the removed place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RemoveFulfillmentPlaces(global::Google.Cloud.Retail.V2Beta.RemoveFulfillmentPlacesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ProductService</summary>
    public partial class ProductServiceClient : grpc::ClientBase<ProductServiceClient>
    {
      /// <summary>Creates a new client for ProductService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ProductServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ProductService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ProductServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ProductServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ProductServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Retail.V2Beta.Product CreateProduct(global::Google.Cloud.Retail.V2Beta.CreateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Retail.V2Beta.Product CreateProduct(global::Google.Cloud.Retail.V2Beta.CreateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateProduct, null, options, request);
      }
      /// <summary>
      /// Creates a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2Beta.Product> CreateProductAsync(global::Google.Cloud.Retail.V2Beta.CreateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2Beta.Product> CreateProductAsync(global::Google.Cloud.Retail.V2Beta.CreateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateProduct, null, options, request);
      }
      /// <summary>
      /// Gets a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Retail.V2Beta.Product GetProduct(global::Google.Cloud.Retail.V2Beta.GetProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Retail.V2Beta.Product GetProduct(global::Google.Cloud.Retail.V2Beta.GetProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProduct, null, options, request);
      }
      /// <summary>
      /// Gets a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2Beta.Product> GetProductAsync(global::Google.Cloud.Retail.V2Beta.GetProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2Beta.Product> GetProductAsync(global::Google.Cloud.Retail.V2Beta.GetProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProduct, null, options, request);
      }
      /// <summary>
      /// Gets a list of [Product][google.cloud.retail.v2beta.Product]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Retail.V2Beta.ListProductsResponse ListProducts(global::Google.Cloud.Retail.V2Beta.ListProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a list of [Product][google.cloud.retail.v2beta.Product]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Retail.V2Beta.ListProductsResponse ListProducts(global::Google.Cloud.Retail.V2Beta.ListProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProducts, null, options, request);
      }
      /// <summary>
      /// Gets a list of [Product][google.cloud.retail.v2beta.Product]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2Beta.ListProductsResponse> ListProductsAsync(global::Google.Cloud.Retail.V2Beta.ListProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProductsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a list of [Product][google.cloud.retail.v2beta.Product]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2Beta.ListProductsResponse> ListProductsAsync(global::Google.Cloud.Retail.V2Beta.ListProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProducts, null, options, request);
      }
      /// <summary>
      /// Updates a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Retail.V2Beta.Product UpdateProduct(global::Google.Cloud.Retail.V2Beta.UpdateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Cloud.Retail.V2Beta.Product UpdateProduct(global::Google.Cloud.Retail.V2Beta.UpdateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProduct, null, options, request);
      }
      /// <summary>
      /// Updates a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2Beta.Product> UpdateProductAsync(global::Google.Cloud.Retail.V2Beta.UpdateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2Beta.Product> UpdateProductAsync(global::Google.Cloud.Retail.V2Beta.UpdateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProduct, null, options, request);
      }
      /// <summary>
      /// Deletes a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteProduct(global::Google.Cloud.Retail.V2Beta.DeleteProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteProduct(global::Google.Cloud.Retail.V2Beta.DeleteProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProduct, null, options, request);
      }
      /// <summary>
      /// Deletes a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteProductAsync(global::Google.Cloud.Retail.V2Beta.DeleteProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a [Product][google.cloud.retail.v2beta.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteProductAsync(global::Google.Cloud.Retail.V2Beta.DeleteProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProduct, null, options, request);
      }
      /// <summary>
      /// Bulk import of multiple [Product][google.cloud.retail.v2beta.Product]s.
      ///
      /// Request processing may be synchronous. No partial updating is supported.
      /// Non-existing items are created.
      ///
      /// Note that it is possible for a subset of the
      /// [Product][google.cloud.retail.v2beta.Product]s to be successfully updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation ImportProducts(global::Google.Cloud.Retail.V2Beta.ImportProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk import of multiple [Product][google.cloud.retail.v2beta.Product]s.
      ///
      /// Request processing may be synchronous. No partial updating is supported.
      /// Non-existing items are created.
      ///
      /// Note that it is possible for a subset of the
      /// [Product][google.cloud.retail.v2beta.Product]s to be successfully updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation ImportProducts(global::Google.Cloud.Retail.V2Beta.ImportProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportProducts, null, options, request);
      }
      /// <summary>
      /// Bulk import of multiple [Product][google.cloud.retail.v2beta.Product]s.
      ///
      /// Request processing may be synchronous. No partial updating is supported.
      /// Non-existing items are created.
      ///
      /// Note that it is possible for a subset of the
      /// [Product][google.cloud.retail.v2beta.Product]s to be successfully updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportProductsAsync(global::Google.Cloud.Retail.V2Beta.ImportProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportProductsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk import of multiple [Product][google.cloud.retail.v2beta.Product]s.
      ///
      /// Request processing may be synchronous. No partial updating is supported.
      /// Non-existing items are created.
      ///
      /// Note that it is possible for a subset of the
      /// [Product][google.cloud.retail.v2beta.Product]s to be successfully updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportProductsAsync(global::Google.Cloud.Retail.V2Beta.ImportProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportProducts, null, options, request);
      }
      /// <summary>
      /// Updates inventory information for a
      /// [Product][google.cloud.retail.v2beta.Product] while respecting the last
      /// update timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// When inventory is updated with
      /// [CreateProduct][google.cloud.retail.v2beta.ProductService.CreateProduct]
      /// and
      /// [UpdateProduct][google.cloud.retail.v2beta.ProductService.UpdateProduct],
      /// the specified inventory field value(s) will overwrite any existing value(s)
      /// while ignoring the last update time for this field. Furthermore, the last
      /// update time for the specified inventory fields will be overwritten to the
      /// time of the
      /// [CreateProduct][google.cloud.retail.v2beta.ProductService.CreateProduct] or
      /// [UpdateProduct][google.cloud.retail.v2beta.ProductService.UpdateProduct]
      /// request.
      ///
      /// If no inventory fields are set in
      /// [CreateProductRequest.product][google.cloud.retail.v2beta.CreateProductRequest.product],
      /// then any pre-existing inventory information for this product will be used.
      ///
      /// If no inventory fields are set in [UpdateProductRequest.set_mask][],
      /// then any existing inventory information will be preserved.
      ///
      /// Pre-existing inventory information can only be updated with
      /// [SetInventory][google.cloud.retail.v2beta.ProductService.SetInventory],
      /// [AddFulfillmentPlaces][google.cloud.retail.v2beta.ProductService.AddFulfillmentPlaces],
      /// and
      /// [RemoveFulfillmentPlaces][google.cloud.retail.v2beta.ProductService.RemoveFulfillmentPlaces].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation SetInventory(global::Google.Cloud.Retail.V2Beta.SetInventoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetInventory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates inventory information for a
      /// [Product][google.cloud.retail.v2beta.Product] while respecting the last
      /// update timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// When inventory is updated with
      /// [CreateProduct][google.cloud.retail.v2beta.ProductService.CreateProduct]
      /// and
      /// [UpdateProduct][google.cloud.retail.v2beta.ProductService.UpdateProduct],
      /// the specified inventory field value(s) will overwrite any existing value(s)
      /// while ignoring the last update time for this field. Furthermore, the last
      /// update time for the specified inventory fields will be overwritten to the
      /// time of the
      /// [CreateProduct][google.cloud.retail.v2beta.ProductService.CreateProduct] or
      /// [UpdateProduct][google.cloud.retail.v2beta.ProductService.UpdateProduct]
      /// request.
      ///
      /// If no inventory fields are set in
      /// [CreateProductRequest.product][google.cloud.retail.v2beta.CreateProductRequest.product],
      /// then any pre-existing inventory information for this product will be used.
      ///
      /// If no inventory fields are set in [UpdateProductRequest.set_mask][],
      /// then any existing inventory information will be preserved.
      ///
      /// Pre-existing inventory information can only be updated with
      /// [SetInventory][google.cloud.retail.v2beta.ProductService.SetInventory],
      /// [AddFulfillmentPlaces][google.cloud.retail.v2beta.ProductService.AddFulfillmentPlaces],
      /// and
      /// [RemoveFulfillmentPlaces][google.cloud.retail.v2beta.ProductService.RemoveFulfillmentPlaces].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation SetInventory(global::Google.Cloud.Retail.V2Beta.SetInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetInventory, null, options, request);
      }
      /// <summary>
      /// Updates inventory information for a
      /// [Product][google.cloud.retail.v2beta.Product] while respecting the last
      /// update timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// When inventory is updated with
      /// [CreateProduct][google.cloud.retail.v2beta.ProductService.CreateProduct]
      /// and
      /// [UpdateProduct][google.cloud.retail.v2beta.ProductService.UpdateProduct],
      /// the specified inventory field value(s) will overwrite any existing value(s)
      /// while ignoring the last update time for this field. Furthermore, the last
      /// update time for the specified inventory fields will be overwritten to the
      /// time of the
      /// [CreateProduct][google.cloud.retail.v2beta.ProductService.CreateProduct] or
      /// [UpdateProduct][google.cloud.retail.v2beta.ProductService.UpdateProduct]
      /// request.
      ///
      /// If no inventory fields are set in
      /// [CreateProductRequest.product][google.cloud.retail.v2beta.CreateProductRequest.product],
      /// then any pre-existing inventory information for this product will be used.
      ///
      /// If no inventory fields are set in [UpdateProductRequest.set_mask][],
      /// then any existing inventory information will be preserved.
      ///
      /// Pre-existing inventory information can only be updated with
      /// [SetInventory][google.cloud.retail.v2beta.ProductService.SetInventory],
      /// [AddFulfillmentPlaces][google.cloud.retail.v2beta.ProductService.AddFulfillmentPlaces],
      /// and
      /// [RemoveFulfillmentPlaces][google.cloud.retail.v2beta.ProductService.RemoveFulfillmentPlaces].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SetInventoryAsync(global::Google.Cloud.Retail.V2Beta.SetInventoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetInventoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates inventory information for a
      /// [Product][google.cloud.retail.v2beta.Product] while respecting the last
      /// update timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// When inventory is updated with
      /// [CreateProduct][google.cloud.retail.v2beta.ProductService.CreateProduct]
      /// and
      /// [UpdateProduct][google.cloud.retail.v2beta.ProductService.UpdateProduct],
      /// the specified inventory field value(s) will overwrite any existing value(s)
      /// while ignoring the last update time for this field. Furthermore, the last
      /// update time for the specified inventory fields will be overwritten to the
      /// time of the
      /// [CreateProduct][google.cloud.retail.v2beta.ProductService.CreateProduct] or
      /// [UpdateProduct][google.cloud.retail.v2beta.ProductService.UpdateProduct]
      /// request.
      ///
      /// If no inventory fields are set in
      /// [CreateProductRequest.product][google.cloud.retail.v2beta.CreateProductRequest.product],
      /// then any pre-existing inventory information for this product will be used.
      ///
      /// If no inventory fields are set in [UpdateProductRequest.set_mask][],
      /// then any existing inventory information will be preserved.
      ///
      /// Pre-existing inventory information can only be updated with
      /// [SetInventory][google.cloud.retail.v2beta.ProductService.SetInventory],
      /// [AddFulfillmentPlaces][google.cloud.retail.v2beta.ProductService.AddFulfillmentPlaces],
      /// and
      /// [RemoveFulfillmentPlaces][google.cloud.retail.v2beta.ProductService.RemoveFulfillmentPlaces].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SetInventoryAsync(global::Google.Cloud.Retail.V2Beta.SetInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetInventory, null, options, request);
      }
      /// <summary>
      /// Incrementally adds place IDs to
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2beta.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the added place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation AddFulfillmentPlaces(global::Google.Cloud.Retail.V2Beta.AddFulfillmentPlacesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddFulfillmentPlaces(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Incrementally adds place IDs to
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2beta.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the added place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation AddFulfillmentPlaces(global::Google.Cloud.Retail.V2Beta.AddFulfillmentPlacesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddFulfillmentPlaces, null, options, request);
      }
      /// <summary>
      /// Incrementally adds place IDs to
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2beta.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the added place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AddFulfillmentPlacesAsync(global::Google.Cloud.Retail.V2Beta.AddFulfillmentPlacesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddFulfillmentPlacesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Incrementally adds place IDs to
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2beta.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the added place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AddFulfillmentPlacesAsync(global::Google.Cloud.Retail.V2Beta.AddFulfillmentPlacesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddFulfillmentPlaces, null, options, request);
      }
      /// <summary>
      /// Incrementally removes place IDs from a
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2beta.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the removed place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation RemoveFulfillmentPlaces(global::Google.Cloud.Retail.V2Beta.RemoveFulfillmentPlacesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveFulfillmentPlaces(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Incrementally removes place IDs from a
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2beta.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the removed place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation RemoveFulfillmentPlaces(global::Google.Cloud.Retail.V2Beta.RemoveFulfillmentPlacesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveFulfillmentPlaces, null, options, request);
      }
      /// <summary>
      /// Incrementally removes place IDs from a
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2beta.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the removed place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RemoveFulfillmentPlacesAsync(global::Google.Cloud.Retail.V2Beta.RemoveFulfillmentPlacesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveFulfillmentPlacesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Incrementally removes place IDs from a
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2beta.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2beta.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the removed place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2beta.Product] queried by
      /// [GetProduct][google.cloud.retail.v2beta.ProductService.GetProduct] or
      /// [ListProducts][google.cloud.retail.v2beta.ProductService.ListProducts].
      ///
      /// This feature is only available for users who have Retail Search enabled.
      /// Contact Retail Support (retail-search-support@google.com) if you are
      /// interested in using Retail Search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RemoveFulfillmentPlacesAsync(global::Google.Cloud.Retail.V2Beta.RemoveFulfillmentPlacesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveFulfillmentPlaces, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ProductServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ProductServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ProductServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateProduct, serviceImpl.CreateProduct)
          .AddMethod(__Method_GetProduct, serviceImpl.GetProduct)
          .AddMethod(__Method_ListProducts, serviceImpl.ListProducts)
          .AddMethod(__Method_UpdateProduct, serviceImpl.UpdateProduct)
          .AddMethod(__Method_DeleteProduct, serviceImpl.DeleteProduct)
          .AddMethod(__Method_ImportProducts, serviceImpl.ImportProducts)
          .AddMethod(__Method_SetInventory, serviceImpl.SetInventory)
          .AddMethod(__Method_AddFulfillmentPlaces, serviceImpl.AddFulfillmentPlaces)
          .AddMethod(__Method_RemoveFulfillmentPlaces, serviceImpl.RemoveFulfillmentPlaces).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ProductServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2Beta.CreateProductRequest, global::Google.Cloud.Retail.V2Beta.Product>(serviceImpl.CreateProduct));
      serviceBinder.AddMethod(__Method_GetProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2Beta.GetProductRequest, global::Google.Cloud.Retail.V2Beta.Product>(serviceImpl.GetProduct));
      serviceBinder.AddMethod(__Method_ListProducts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2Beta.ListProductsRequest, global::Google.Cloud.Retail.V2Beta.ListProductsResponse>(serviceImpl.ListProducts));
      serviceBinder.AddMethod(__Method_UpdateProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2Beta.UpdateProductRequest, global::Google.Cloud.Retail.V2Beta.Product>(serviceImpl.UpdateProduct));
      serviceBinder.AddMethod(__Method_DeleteProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2Beta.DeleteProductRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteProduct));
      serviceBinder.AddMethod(__Method_ImportProducts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2Beta.ImportProductsRequest, global::Google.LongRunning.Operation>(serviceImpl.ImportProducts));
      serviceBinder.AddMethod(__Method_SetInventory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2Beta.SetInventoryRequest, global::Google.LongRunning.Operation>(serviceImpl.SetInventory));
      serviceBinder.AddMethod(__Method_AddFulfillmentPlaces, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2Beta.AddFulfillmentPlacesRequest, global::Google.LongRunning.Operation>(serviceImpl.AddFulfillmentPlaces));
      serviceBinder.AddMethod(__Method_RemoveFulfillmentPlaces, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2Beta.RemoveFulfillmentPlacesRequest, global::Google.LongRunning.Operation>(serviceImpl.RemoveFulfillmentPlaces));
    }

  }
}
#endregion
