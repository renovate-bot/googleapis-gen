// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/talent/v4beta1/common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Talent.V4Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/talent/v4beta1/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/talent/v4beta1/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihnb29nbGUvY2xvdWQvdGFsZW50L3Y0YmV0YTEvY29tbW9uLnByb3RvEhtn",
            "b29nbGUuY2xvdWQudGFsZW50LnY0YmV0YTEaH2dvb2dsZS9hcGkvZmllbGRf",
            "YmVoYXZpb3IucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJv",
            "dG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxoWZ29vZ2xlL3R5",
            "cGUvZGF0ZS5wcm90bxoYZ29vZ2xlL3R5cGUvbGF0bG5nLnByb3RvGhdnb29n",
            "bGUvdHlwZS9tb25leS5wcm90bxogZ29vZ2xlL3R5cGUvcG9zdGFsX2FkZHJl",
            "c3MucHJvdG8aG2dvb2dsZS90eXBlL3RpbWVvZmRheS5wcm90bxocZ29vZ2xl",
            "L2FwaS9hbm5vdGF0aW9ucy5wcm90byJuCg5UaW1lc3RhbXBSYW5nZRIuCgpz",
            "dGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIs",
            "CghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAi",
            "twMKCExvY2F0aW9uEkkKDWxvY2F0aW9uX3R5cGUYASABKA4yMi5nb29nbGUu",
            "Y2xvdWQudGFsZW50LnY0YmV0YTEuTG9jYXRpb24uTG9jYXRpb25UeXBlEjIK",
            "DnBvc3RhbF9hZGRyZXNzGAIgASgLMhouZ29vZ2xlLnR5cGUuUG9zdGFsQWRk",
            "cmVzcxIkCgdsYXRfbG5nGAMgASgLMhMuZ29vZ2xlLnR5cGUuTGF0TG5nEhQK",
            "DHJhZGl1c19taWxlcxgEIAEoASLvAQoMTG9jYXRpb25UeXBlEh0KGUxPQ0FU",
            "SU9OX1RZUEVfVU5TUEVDSUZJRUQQABILCgdDT1VOVFJZEAESFwoTQURNSU5J",
            "U1RSQVRJVkVfQVJFQRACEhsKF1NVQl9BRE1JTklTVFJBVElWRV9BUkVBEAMS",
            "DAoITE9DQUxJVFkQBBIPCgtQT1NUQUxfQ09ERRAFEhAKDFNVQl9MT0NBTElU",
            "WRAGEhIKDlNVQl9MT0NBTElUWV8xEAcSEgoOU1VCX0xPQ0FMSVRZXzIQCBIQ",
            "CgxORUlHSEJPUkhPT0QQCRISCg5TVFJFRVRfQUREUkVTUxAKIp8BCg9SZXF1",
            "ZXN0TWV0YWRhdGESDgoGZG9tYWluGAEgASgJEhIKCnNlc3Npb25faWQYAiAB",
            "KAkSDwoHdXNlcl9pZBgDIAEoCRIZChFhbGxvd19taXNzaW5nX2lkcxgEIAEo",
            "CBI8CgtkZXZpY2VfaW5mbxgFIAEoCzInLmdvb2dsZS5jbG91ZC50YWxlbnQu",
            "djRiZXRhMS5EZXZpY2VJbmZvIiYKEFJlc3BvbnNlTWV0YWRhdGESEgoKcmVx",
            "dWVzdF9pZBgBIAEoCSLPAQoKRGV2aWNlSW5mbxJHCgtkZXZpY2VfdHlwZRgB",
            "IAEoDjIyLmdvb2dsZS5jbG91ZC50YWxlbnQudjRiZXRhMS5EZXZpY2VJbmZv",
            "LkRldmljZVR5cGUSCgoCaWQYAiABKAkibAoKRGV2aWNlVHlwZRIbChdERVZJ",
            "Q0VfVFlQRV9VTlNQRUNJRklFRBAAEgcKA1dFQhABEg4KCk1PQklMRV9XRUIQ",
            "AhILCgdBTkRST0lEEAMSBwoDSU9TEAQSBwoDQk9UEAUSCQoFT1RIRVIQBiJR",
            "Cg9DdXN0b21BdHRyaWJ1dGUSFQoNc3RyaW5nX3ZhbHVlcxgBIAMoCRITCgts",
            "b25nX3ZhbHVlcxgCIAMoAxISCgpmaWx0ZXJhYmxlGAMgASgIIlcKElNwZWxs",
            "aW5nQ29ycmVjdGlvbhIRCgljb3JyZWN0ZWQYASABKAgSFgoOY29ycmVjdGVk",
            "X3RleHQYAiABKAkSFgoOY29ycmVjdGVkX2h0bWwYAyABKAkipgkKEENvbXBl",
            "bnNhdGlvbkluZm8SUAoHZW50cmllcxgBIAMoCzI/Lmdvb2dsZS5jbG91ZC50",
            "YWxlbnQudjRiZXRhMS5Db21wZW5zYXRpb25JbmZvLkNvbXBlbnNhdGlvbkVu",
            "dHJ5EnAKImFubnVhbGl6ZWRfYmFzZV9jb21wZW5zYXRpb25fcmFuZ2UYAiAB",
            "KAsyPy5nb29nbGUuY2xvdWQudGFsZW50LnY0YmV0YTEuQ29tcGVuc2F0aW9u",
            "SW5mby5Db21wZW5zYXRpb25SYW5nZUID4EEDEnEKI2FubnVhbGl6ZWRfdG90",
            "YWxfY29tcGVuc2F0aW9uX3JhbmdlGAMgASgLMj8uZ29vZ2xlLmNsb3VkLnRh",
            "bGVudC52NGJldGExLkNvbXBlbnNhdGlvbkluZm8uQ29tcGVuc2F0aW9uUmFu",
            "Z2VCA+BBAxqSAwoRQ29tcGVuc2F0aW9uRW50cnkSTAoEdHlwZRgBIAEoDjI+",
            "Lmdvb2dsZS5jbG91ZC50YWxlbnQudjRiZXRhMS5Db21wZW5zYXRpb25JbmZv",
            "LkNvbXBlbnNhdGlvblR5cGUSTAoEdW5pdBgCIAEoDjI+Lmdvb2dsZS5jbG91",
            "ZC50YWxlbnQudjRiZXRhMS5Db21wZW5zYXRpb25JbmZvLkNvbXBlbnNhdGlv",
            "blVuaXQSJAoGYW1vdW50GAMgASgLMhIuZ29vZ2xlLnR5cGUuTW9uZXlIABJQ",
            "CgVyYW5nZRgEIAEoCzI/Lmdvb2dsZS5jbG91ZC50YWxlbnQudjRiZXRhMS5D",
            "b21wZW5zYXRpb25JbmZvLkNvbXBlbnNhdGlvblJhbmdlSAASEwoLZGVzY3Jp",
            "cHRpb24YBSABKAkSPQoXZXhwZWN0ZWRfdW5pdHNfcGVyX3llYXIYBiABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuRG91YmxlVmFsdWVCFQoTY29tcGVuc2F0aW9u",
            "X2Ftb3VudBpvChFDb21wZW5zYXRpb25SYW5nZRIsChBtYXhfY29tcGVuc2F0",
            "aW9uGAIgASgLMhIuZ29vZ2xlLnR5cGUuTW9uZXkSLAoQbWluX2NvbXBlbnNh",
            "dGlvbhgBIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5IrUBChBDb21wZW5zYXRp",
            "b25UeXBlEiEKHUNPTVBFTlNBVElPTl9UWVBFX1VOU1BFQ0lGSUVEEAASCAoE",
            "QkFTRRABEgkKBUJPTlVTEAISEQoNU0lHTklOR19CT05VUxADEgoKBkVRVUlU",
            "WRAEEhIKDlBST0ZJVF9TSEFSSU5HEAUSDwoLQ09NTUlTU0lPTlMQBhIICgRU",
            "SVBTEAcSGwoXT1RIRVJfQ09NUEVOU0FUSU9OX1RZUEUQCCKcAQoQQ29tcGVu",
            "c2F0aW9uVW5pdBIhCh1DT01QRU5TQVRJT05fVU5JVF9VTlNQRUNJRklFRBAA",
            "EgoKBkhPVVJMWRABEgkKBURBSUxZEAISCgoGV0VFS0xZEAMSCwoHTU9OVEhM",
            "WRAEEgoKBllFQVJMWRAFEgwKCE9ORV9USU1FEAYSGwoXT1RIRVJfQ09NUEVO",
            "U0FUSU9OX1VOSVQQByKeAQoNQ2VydGlmaWNhdGlvbhIUCgxkaXNwbGF5X25h",
            "bWUYASABKAkSJwoMYWNxdWlyZV9kYXRlGAIgASgLMhEuZ29vZ2xlLnR5cGUu",
            "RGF0ZRImCgtleHBpcmVfZGF0ZRgDIAEoCzIRLmdvb2dsZS50eXBlLkRhdGUS",
            "EQoJYXV0aG9yaXR5GAQgASgJEhMKC2Rlc2NyaXB0aW9uGAUgASgJIr0BCgVT",
            "a2lsbBIUCgxkaXNwbGF5X25hbWUYASABKAkSKQoObGFzdF91c2VkX2RhdGUY",
            "AiABKAsyES5nb29nbGUudHlwZS5EYXRlEkEKBWxldmVsGAMgASgOMjIuZ29v",
            "Z2xlLmNsb3VkLnRhbGVudC52NGJldGExLlNraWxsUHJvZmljaWVuY3lMZXZl",
            "bBIPCgdjb250ZXh0GAQgASgJEh8KEnNraWxsX25hbWVfc25pcHBldBgFIAEo",
            "CUID4EEDInwKCUludGVydmlldxIzCgZyYXRpbmcYBiABKAsyIy5nb29nbGUu",
            "Y2xvdWQudGFsZW50LnY0YmV0YTEuUmF0aW5nEjoKB291dGNvbWUYByABKA4y",
            "JC5nb29nbGUuY2xvdWQudGFsZW50LnY0YmV0YTEuT3V0Y29tZUID4EECIkUK",
            "BlJhdGluZxIPCgdvdmVyYWxsGAEgASgBEgsKA21pbhgCIAEoARILCgNtYXgY",
            "AyABKAESEAoIaW50ZXJ2YWwYBCABKAEizAMKFkJhdGNoT3BlcmF0aW9uTWV0",
            "YWRhdGESSAoFc3RhdGUYASABKA4yOS5nb29nbGUuY2xvdWQudGFsZW50LnY0",
            "YmV0YTEuQmF0Y2hPcGVyYXRpb25NZXRhZGF0YS5TdGF0ZRIZChFzdGF0ZV9k",
            "ZXNjcmlwdGlvbhgCIAEoCRIVCg1zdWNjZXNzX2NvdW50GAMgASgFEhUKDWZh",
            "aWx1cmVfY291bnQYBCABKAUSEwoLdG90YWxfY291bnQYBSABKAUSLwoLY3Jl",
            "YXRlX3RpbWUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8K",
            "C3VwZGF0ZV90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cBIsCghlbmRfdGltZRgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXAiegoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIQCgxJTklUSUFM",
            "SVpJTkcQARIOCgpQUk9DRVNTSU5HEAISDQoJU1VDQ0VFREVEEAMSCgoGRkFJ",
            "TEVEEAQSDgoKQ0FOQ0VMTElORxAFEg0KCUNBTkNFTExFRBAGKnkKC0NvbXBh",
            "bnlTaXplEhwKGENPTVBBTllfU0laRV9VTlNQRUNJRklFRBAAEggKBE1JTkkQ",
            "ARIJCgVTTUFMTBACEgsKB1NNRURJVU0QAxIKCgZNRURJVU0QBBIHCgNCSUcQ",
            "BRIKCgZCSUdHRVIQBhIJCgVHSUFOVBAHKuIBCgpKb2JCZW5lZml0EhsKF0pP",
            "Ql9CRU5FRklUX1VOU1BFQ0lGSUVEEAASDgoKQ0hJTERfQ0FSRRABEgoKBkRF",
            "TlRBTBACEhQKEERPTUVTVElDX1BBUlRORVIQAxISCg5GTEVYSUJMRV9IT1VS",
            "UxAEEgsKB01FRElDQUwQBRISCg5MSUZFX0lOU1VSQU5DRRAGEhIKDlBBUkVO",
            "VEFMX0xFQVZFEAcSEwoPUkVUSVJFTUVOVF9QTEFOEAgSDQoJU0lDS19EQVlT",
            "EAkSDAoIVkFDQVRJT04QChIKCgZWSVNJT04QCyqOAgoKRGVncmVlVHlwZRIb",
            "ChdERUdSRUVfVFlQRV9VTlNQRUNJRklFRBAAEhUKEVBSSU1BUllfRURVQ0FU",
            "SU9OEAESHQoZTE9XRVJfU0VDT05EQVJZX0VEVUNBVElPThACEh0KGVVQUEVS",
            "X1NFQ09OREFSWV9FRFVDQVRJT04QAxIcChhBRFVMVF9SRU1FRElBTF9FRFVD",
            "QVRJT04QBBIcChhBU1NPQ0lBVEVTX09SX0VRVUlWQUxFTlQQBRIbChdCQUNI",
            "RUxPUlNfT1JfRVFVSVZBTEVOVBAGEhkKFU1BU1RFUlNfT1JfRVFVSVZBTEVO",
            "VBAHEhoKFkRPQ1RPUkFMX09SX0VRVUlWQUxFTlQQCCrcAQoORW1wbG95bWVu",
            "dFR5cGUSHwobRU1QTE9ZTUVOVF9UWVBFX1VOU1BFQ0lGSUVEEAASDQoJRlVM",
            "TF9USU1FEAESDQoJUEFSVF9USU1FEAISDgoKQ09OVFJBQ1RPUhADEhQKEENP",
            "TlRSQUNUX1RPX0hJUkUQBBINCglURU1QT1JBUlkQBRIKCgZJTlRFUk4QBhIN",
            "CglWT0xVTlRFRVIQBxIMCghQRVJfRElFTRAIEhIKDkZMWV9JTl9GTFlfT1VU",
            "EAkSGQoVT1RIRVJfRU1QTE9ZTUVOVF9UWVBFEAoqcQoISm9iTGV2ZWwSGQoV",
            "Sk9CX0xFVkVMX1VOU1BFQ0lGSUVEEAASDwoLRU5UUllfTEVWRUwQARIPCgtF",
            "WFBFUklFTkNFRBACEgsKB01BTkFHRVIQAxIMCghESVJFQ1RPUhAEEg0KCUVY",
            "RUNVVElWRRAFKroGCgtKb2JDYXRlZ29yeRIcChhKT0JfQ0FURUdPUllfVU5T",
            "UEVDSUZJRUQQABIaChZBQ0NPVU5USU5HX0FORF9GSU5BTkNFEAESHQoZQURN",
            "SU5JU1RSQVRJVkVfQU5EX09GRklDRRACEh0KGUFEVkVSVElTSU5HX0FORF9N",
            "QVJLRVRJTkcQAxIPCgtBTklNQUxfQ0FSRRAEEhoKFkFSVF9GQVNISU9OX0FO",
            "RF9ERVNJR04QBRIXChNCVVNJTkVTU19PUEVSQVRJT05TEAYSGwoXQ0xFQU5J",
            "TkdfQU5EX0ZBQ0lMSVRJRVMQBxITCg9DT01QVVRFUl9BTkRfSVQQCBIQCgxD",
            "T05TVFJVQ1RJT04QCRIUChBDVVNUT01FUl9TRVJWSUNFEAoSDQoJRURVQ0FU",
            "SU9OEAsSHAoYRU5URVJUQUlOTUVOVF9BTkRfVFJBVkVMEAwSGAoURkFSTUlO",
            "R19BTkRfT1VURE9PUlMQDRIOCgpIRUFMVEhDQVJFEA4SEwoPSFVNQU5fUkVT",
            "T1VSQ0VTEA8SJwojSU5TVEFMTEFUSU9OX01BSU5URU5BTkNFX0FORF9SRVBB",
            "SVIQEBIJCgVMRUdBTBAREg4KCk1BTkFHRU1FTlQQEhIfChtNQU5VRkFDVFVS",
            "SU5HX0FORF9XQVJFSE9VU0UQExIkCiBNRURJQV9DT01NVU5JQ0FUSU9OU19B",
            "TkRfV1JJVElORxAUEhYKEk9JTF9HQVNfQU5EX01JTklORxAVEh4KGlBFUlNP",
            "TkFMX0NBUkVfQU5EX1NFUlZJQ0VTEBYSFwoTUFJPVEVDVElWRV9TRVJWSUNF",
            "UxAXEg8KC1JFQUxfRVNUQVRFEBgSHgoaUkVTVEFVUkFOVF9BTkRfSE9TUElU",
            "QUxJVFkQGRIUChBTQUxFU19BTkRfUkVUQUlMEBoSGwoXU0NJRU5DRV9BTkRf",
            "RU5HSU5FRVJJTkcQGxIiCh5TT0NJQUxfU0VSVklDRVNfQU5EX05PTl9QUk9G",
            "SVQQHBIhCh1TUE9SVFNfRklUTkVTU19BTkRfUkVDUkVBVElPThAdEiAKHFRS",
            "QU5TUE9SVEFUSU9OX0FORF9MT0dJU1RJQ1MQHiplCg1Qb3N0aW5nUmVnaW9u",
            "Eh4KGlBPU1RJTkdfUkVHSU9OX1VOU1BFQ0lGSUVEEAASFwoTQURNSU5JU1RS",
            "QVRJVkVfQVJFQRABEgoKBk5BVElPThACEg8KC1RFTEVDT01NVVRFEAMqbgoK",
            "VmlzaWJpbGl0eRIaChZWSVNJQklMSVRZX1VOU1BFQ0lGSUVEEAASEAoMQUND",
            "T1VOVF9PTkxZEAESFgoSU0hBUkVEX1dJVEhfR09PR0xFEAISFgoSU0hBUkVE",
            "X1dJVEhfUFVCTElDEAMaAhgBKloKEENvbnRhY3RJbmZvVXNhZ2USIgoeQ09O",
            "VEFDVF9JTkZPX1VTQUdFX1VOU1BFQ0lGSUVEEAASDAoIUEVSU09OQUwQARII",
            "CgRXT1JLEAISCgoGU0NIT09MEAMqcQoQSHRtbFNhbml0aXphdGlvbhIhCh1I",
            "VE1MX1NBTklUSVpBVElPTl9VTlNQRUNJRklFRBAAEh4KGkhUTUxfU0FOSVRJ",
            "WkFUSU9OX0RJU0FCTEVEEAESGgoWU0lNUExFX0ZPUk1BVFRJTkdfT05MWRAC",
            "KmMKDUNvbW11dGVNZXRob2QSHgoaQ09NTVVURV9NRVRIT0RfVU5TUEVDSUZJ",
            "RUQQABILCgdEUklWSU5HEAESCwoHVFJBTlNJVBACEgsKB1dBTEtJTkcQAxIL",
            "CgdDWUNMSU5HEAQqogEKFVNraWxsUHJvZmljaWVuY3lMZXZlbBInCiNTS0lM",
            "TF9QUk9GSUNJRU5DWV9MRVZFTF9VTlNQRUNJRklFRBAAEg0KCVVOU0tJTExF",
            "RBAGEhkKFUZVTkRBTUVOVEFMX0FXQVJFTkVTUxABEgoKBk5PVklDRRACEhAK",
            "DElOVEVSTUVESUFURRADEgwKCEFEVkFOQ0VEEAQSCgoGRVhQRVJUEAUqZgoH",
            "T3V0Y29tZRIXChNPVVRDT01FX1VOU1BFQ0lGSUVEEAASDAoIUE9TSVRJVkUQ",
            "ARILCgdORVVUUkFMEAISDAoITkVHQVRJVkUQAxIZChVPVVRDT01FX05PVF9B",
            "VkFJTEFCTEUQBCqXAQoWQXZhaWxhYmlsaXR5U2lnbmFsVHlwZRIoCiRBVkFJ",
            "TEFCSUxJVFlfU0lHTkFMX1RZUEVfVU5TUEVDSUZJRUQQABITCg9KT0JfQVBQ",
            "TElDQVRJT04QARIRCg1SRVNVTUVfVVBEQVRFEAISFAoQQ0FORElEQVRFX1VQ",
            "REFURRADEhUKEUNMSUVOVF9TVUJNSVNTSU9OEARCeQofY29tLmdvb2dsZS5j",
            "bG91ZC50YWxlbnQudjRiZXRhMUILQ29tbW9uUHJvdG9QAVpBZ29vZ2xlLmdv",
            "bGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9jbG91ZC90YWxlbnQvdjRi",
            "ZXRhMTt0YWxlbnSiAgNDVFNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Type.DateReflection.Descriptor, global::Google.Type.LatlngReflection.Descriptor, global::Google.Type.MoneyReflection.Descriptor, global::Google.Type.PostalAddressReflection.Descriptor, global::Google.Type.TimeofdayReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Talent.V4Beta1.CompanySize), typeof(global::Google.Cloud.Talent.V4Beta1.JobBenefit), typeof(global::Google.Cloud.Talent.V4Beta1.DegreeType), typeof(global::Google.Cloud.Talent.V4Beta1.EmploymentType), typeof(global::Google.Cloud.Talent.V4Beta1.JobLevel), typeof(global::Google.Cloud.Talent.V4Beta1.JobCategory), typeof(global::Google.Cloud.Talent.V4Beta1.PostingRegion), typeof(global::Google.Cloud.Talent.V4Beta1.Visibility), typeof(global::Google.Cloud.Talent.V4Beta1.ContactInfoUsage), typeof(global::Google.Cloud.Talent.V4Beta1.HtmlSanitization), typeof(global::Google.Cloud.Talent.V4Beta1.CommuteMethod), typeof(global::Google.Cloud.Talent.V4Beta1.SkillProficiencyLevel), typeof(global::Google.Cloud.Talent.V4Beta1.Outcome), typeof(global::Google.Cloud.Talent.V4Beta1.AvailabilitySignalType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.TimestampRange), global::Google.Cloud.Talent.V4Beta1.TimestampRange.Parser, new[]{ "StartTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.Location), global::Google.Cloud.Talent.V4Beta1.Location.Parser, new[]{ "LocationType", "PostalAddress", "LatLng", "RadiusMiles" }, null, new[]{ typeof(global::Google.Cloud.Talent.V4Beta1.Location.Types.LocationType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.RequestMetadata), global::Google.Cloud.Talent.V4Beta1.RequestMetadata.Parser, new[]{ "Domain", "SessionId", "UserId", "AllowMissingIds", "DeviceInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.ResponseMetadata), global::Google.Cloud.Talent.V4Beta1.ResponseMetadata.Parser, new[]{ "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.DeviceInfo), global::Google.Cloud.Talent.V4Beta1.DeviceInfo.Parser, new[]{ "DeviceType", "Id" }, null, new[]{ typeof(global::Google.Cloud.Talent.V4Beta1.DeviceInfo.Types.DeviceType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.CustomAttribute), global::Google.Cloud.Talent.V4Beta1.CustomAttribute.Parser, new[]{ "StringValues", "LongValues", "Filterable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.SpellingCorrection), global::Google.Cloud.Talent.V4Beta1.SpellingCorrection.Parser, new[]{ "Corrected", "CorrectedText", "CorrectedHtml" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.CompensationInfo), global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Parser, new[]{ "Entries", "AnnualizedBaseCompensationRange", "AnnualizedTotalCompensationRange" }, null, new[]{ typeof(global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationType), typeof(global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationEntry), global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationEntry.Parser, new[]{ "Type", "Unit", "Amount", "Range", "Description", "ExpectedUnitsPerYear" }, new[]{ "CompensationAmount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange), global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange.Parser, new[]{ "MaxCompensation", "MinCompensation" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.Certification), global::Google.Cloud.Talent.V4Beta1.Certification.Parser, new[]{ "DisplayName", "AcquireDate", "ExpireDate", "Authority", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.Skill), global::Google.Cloud.Talent.V4Beta1.Skill.Parser, new[]{ "DisplayName", "LastUsedDate", "Level", "Context", "SkillNameSnippet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.Interview), global::Google.Cloud.Talent.V4Beta1.Interview.Parser, new[]{ "Rating", "Outcome" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.Rating), global::Google.Cloud.Talent.V4Beta1.Rating.Parser, new[]{ "Overall", "Min", "Max", "Interval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata), global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata.Parser, new[]{ "State", "StateDescription", "SuccessCount", "FailureCount", "TotalCount", "CreateTime", "UpdateTime", "EndTime" }, null, new[]{ typeof(global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata.Types.State) }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// An enum that represents the size of the company.
  /// </summary>
  public enum CompanySize {
    /// <summary>
    /// Default value if the size isn't specified.
    /// </summary>
    [pbr::OriginalName("COMPANY_SIZE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The company has less than 50 employees.
    /// </summary>
    [pbr::OriginalName("MINI")] Mini = 1,
    /// <summary>
    /// The company has between 50 and 99 employees.
    /// </summary>
    [pbr::OriginalName("SMALL")] Small = 2,
    /// <summary>
    /// The company has between 100 and 499 employees.
    /// </summary>
    [pbr::OriginalName("SMEDIUM")] Smedium = 3,
    /// <summary>
    /// The company has between 500 and 999 employees.
    /// </summary>
    [pbr::OriginalName("MEDIUM")] Medium = 4,
    /// <summary>
    /// The company has between 1,000 and 4,999 employees.
    /// </summary>
    [pbr::OriginalName("BIG")] Big = 5,
    /// <summary>
    /// The company has between 5,000 and 9,999 employees.
    /// </summary>
    [pbr::OriginalName("BIGGER")] Bigger = 6,
    /// <summary>
    /// The company has 10,000 or more employees.
    /// </summary>
    [pbr::OriginalName("GIANT")] Giant = 7,
  }

  /// <summary>
  /// An enum that represents employee benefits included with the job.
  /// </summary>
  public enum JobBenefit {
    /// <summary>
    /// Default value if the type isn't specified.
    /// </summary>
    [pbr::OriginalName("JOB_BENEFIT_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The job includes access to programs that support child care, such
    /// as daycare.
    /// </summary>
    [pbr::OriginalName("CHILD_CARE")] ChildCare = 1,
    /// <summary>
    /// The job includes dental services covered by a dental
    /// insurance plan.
    /// </summary>
    [pbr::OriginalName("DENTAL")] Dental = 2,
    /// <summary>
    /// The job offers specific benefits to domestic partners.
    /// </summary>
    [pbr::OriginalName("DOMESTIC_PARTNER")] DomesticPartner = 3,
    /// <summary>
    /// The job allows for a flexible work schedule.
    /// </summary>
    [pbr::OriginalName("FLEXIBLE_HOURS")] FlexibleHours = 4,
    /// <summary>
    /// The job includes health services covered by a medical insurance plan.
    /// </summary>
    [pbr::OriginalName("MEDICAL")] Medical = 5,
    /// <summary>
    /// The job includes a life insurance plan provided by the employer or
    /// available for purchase by the employee.
    /// </summary>
    [pbr::OriginalName("LIFE_INSURANCE")] LifeInsurance = 6,
    /// <summary>
    /// The job allows for a leave of absence to a parent to care for a newborn
    /// child.
    /// </summary>
    [pbr::OriginalName("PARENTAL_LEAVE")] ParentalLeave = 7,
    /// <summary>
    /// The job includes a workplace retirement plan provided by the
    /// employer or available for purchase by the employee.
    /// </summary>
    [pbr::OriginalName("RETIREMENT_PLAN")] RetirementPlan = 8,
    /// <summary>
    /// The job allows for paid time off due to illness.
    /// </summary>
    [pbr::OriginalName("SICK_DAYS")] SickDays = 9,
    /// <summary>
    /// The job includes paid time off for vacation.
    /// </summary>
    [pbr::OriginalName("VACATION")] Vacation = 10,
    /// <summary>
    /// The job includes vision services covered by a vision
    /// insurance plan.
    /// </summary>
    [pbr::OriginalName("VISION")] Vision = 11,
  }

  /// <summary>
  /// Educational degree level defined in International Standard Classification
  /// of Education (ISCED).
  /// </summary>
  public enum DegreeType {
    /// <summary>
    /// Default value. Represents no degree, or early childhood education.
    /// Maps to ISCED code 0.
    /// Ex) Kindergarten
    /// </summary>
    [pbr::OriginalName("DEGREE_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Primary education which is typically the first stage of compulsory
    /// education. ISCED code 1.
    /// Ex) Elementary school
    /// </summary>
    [pbr::OriginalName("PRIMARY_EDUCATION")] PrimaryEducation = 1,
    /// <summary>
    /// Lower secondary education; First stage of secondary education building on
    /// primary education, typically with a more subject-oriented curriculum.
    /// ISCED code 2.
    /// Ex) Middle school
    /// </summary>
    [pbr::OriginalName("LOWER_SECONDARY_EDUCATION")] LowerSecondaryEducation = 2,
    /// <summary>
    /// Middle education; Second/final stage of secondary education preparing for
    /// tertiary education and/or providing skills relevant to employment.
    /// Usually with an increased range of subject options and streams. ISCED
    /// code 3.
    /// Ex) High school
    /// </summary>
    [pbr::OriginalName("UPPER_SECONDARY_EDUCATION")] UpperSecondaryEducation = 3,
    /// <summary>
    /// Adult Remedial Education; Programmes providing learning experiences that
    /// build on secondary education and prepare for labour market entry and/or
    /// tertiary education. The content is broader than secondary but not as
    /// complex as tertiary education. ISCED code 4.
    /// </summary>
    [pbr::OriginalName("ADULT_REMEDIAL_EDUCATION")] AdultRemedialEducation = 4,
    /// <summary>
    /// Associate's or equivalent; Short first tertiary programmes that are
    /// typically practically-based, occupationally-specific and prepare for
    /// labour market entry. These programmes may also provide a pathway to other
    /// tertiary programmes. ISCED code 5.
    /// </summary>
    [pbr::OriginalName("ASSOCIATES_OR_EQUIVALENT")] AssociatesOrEquivalent = 5,
    /// <summary>
    /// Bachelor's or equivalent; Programmes designed to provide intermediate
    /// academic and/or professional knowledge, skills and competencies leading
    /// to a first tertiary degree or equivalent qualification. ISCED code 6.
    /// </summary>
    [pbr::OriginalName("BACHELORS_OR_EQUIVALENT")] BachelorsOrEquivalent = 6,
    /// <summary>
    /// Master's or equivalent; Programmes designed to provide advanced academic
    /// and/or professional knowledge, skills and competencies leading to a
    /// second tertiary degree or equivalent qualification. ISCED code 7.
    /// </summary>
    [pbr::OriginalName("MASTERS_OR_EQUIVALENT")] MastersOrEquivalent = 7,
    /// <summary>
    /// Doctoral or equivalent; Programmes designed primarily to lead to an
    /// advanced research qualification, usually concluding with the submission
    /// and defense of a substantive dissertation of publishable quality based on
    /// original research. ISCED code 8.
    /// </summary>
    [pbr::OriginalName("DOCTORAL_OR_EQUIVALENT")] DoctoralOrEquivalent = 8,
  }

  /// <summary>
  /// An enum that represents the employment type of a job.
  /// </summary>
  public enum EmploymentType {
    /// <summary>
    /// The default value if the employment type isn't specified.
    /// </summary>
    [pbr::OriginalName("EMPLOYMENT_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The job requires working a number of hours that constitute full
    /// time employment, typically 40 or more hours per week.
    /// </summary>
    [pbr::OriginalName("FULL_TIME")] FullTime = 1,
    /// <summary>
    /// The job entails working fewer hours than a full time job,
    /// typically less than 40 hours a week.
    /// </summary>
    [pbr::OriginalName("PART_TIME")] PartTime = 2,
    /// <summary>
    /// The job is offered as a contracted, as opposed to a salaried employee,
    /// position.
    /// </summary>
    [pbr::OriginalName("CONTRACTOR")] Contractor = 3,
    /// <summary>
    /// The job is offered as a contracted position with the understanding
    /// that it's converted into a full-time position at the end of the
    /// contract. Jobs of this type are also returned by a search for
    /// [EmploymentType.CONTRACTOR][google.cloud.talent.v4beta1.EmploymentType.CONTRACTOR] jobs.
    /// </summary>
    [pbr::OriginalName("CONTRACT_TO_HIRE")] ContractToHire = 4,
    /// <summary>
    /// The job is offered as a temporary employment opportunity, usually
    /// a short-term engagement.
    /// </summary>
    [pbr::OriginalName("TEMPORARY")] Temporary = 5,
    /// <summary>
    /// The job is a fixed-term opportunity for students or entry-level job
    /// seekers to obtain on-the-job training, typically offered as a summer
    /// position.
    /// </summary>
    [pbr::OriginalName("INTERN")] Intern = 6,
    /// <summary>
    /// The is an opportunity for an individual to volunteer, where there's no
    /// expectation of compensation for the provided services.
    /// </summary>
    [pbr::OriginalName("VOLUNTEER")] Volunteer = 7,
    /// <summary>
    /// The job requires an employee to work on an as-needed basis with a
    /// flexible schedule.
    /// </summary>
    [pbr::OriginalName("PER_DIEM")] PerDiem = 8,
    /// <summary>
    /// The job involves employing people in remote areas and flying them
    /// temporarily to the work site instead of relocating employees and their
    /// families permanently.
    /// </summary>
    [pbr::OriginalName("FLY_IN_FLY_OUT")] FlyInFlyOut = 9,
    /// <summary>
    /// The job does not fit any of the other listed types.
    /// </summary>
    [pbr::OriginalName("OTHER_EMPLOYMENT_TYPE")] OtherEmploymentType = 10,
  }

  /// <summary>
  /// An enum that represents the required experience level required for the job.
  /// </summary>
  public enum JobLevel {
    /// <summary>
    /// The default value if the level isn't specified.
    /// </summary>
    [pbr::OriginalName("JOB_LEVEL_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Entry-level individual contributors, typically with less than 2 years of
    /// experience in a similar role. Includes interns.
    /// </summary>
    [pbr::OriginalName("ENTRY_LEVEL")] EntryLevel = 1,
    /// <summary>
    /// Experienced individual contributors, typically with 2+ years of
    /// experience in a similar role.
    /// </summary>
    [pbr::OriginalName("EXPERIENCED")] Experienced = 2,
    /// <summary>
    /// Entry- to mid-level managers responsible for managing a team of people.
    /// </summary>
    [pbr::OriginalName("MANAGER")] Manager = 3,
    /// <summary>
    /// Senior-level managers responsible for managing teams of managers.
    /// </summary>
    [pbr::OriginalName("DIRECTOR")] Director = 4,
    /// <summary>
    /// Executive-level managers and above, including C-level positions.
    /// </summary>
    [pbr::OriginalName("EXECUTIVE")] Executive = 5,
  }

  /// <summary>
  /// An enum that represents the categorization or primary focus of specific
  /// role. This value is different than the "industry" associated with a role,
  /// which is related to the categorization of the company listing the job.
  /// </summary>
  public enum JobCategory {
    /// <summary>
    /// The default value if the category isn't specified.
    /// </summary>
    [pbr::OriginalName("JOB_CATEGORY_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// An accounting and finance job, such as an Accountant.
    /// </summary>
    [pbr::OriginalName("ACCOUNTING_AND_FINANCE")] AccountingAndFinance = 1,
    /// <summary>
    /// An administrative and office job, such as an Administrative Assistant.
    /// </summary>
    [pbr::OriginalName("ADMINISTRATIVE_AND_OFFICE")] AdministrativeAndOffice = 2,
    /// <summary>
    /// An advertising and marketing job, such as Marketing Manager.
    /// </summary>
    [pbr::OriginalName("ADVERTISING_AND_MARKETING")] AdvertisingAndMarketing = 3,
    /// <summary>
    /// An animal care job, such as Veterinarian.
    /// </summary>
    [pbr::OriginalName("ANIMAL_CARE")] AnimalCare = 4,
    /// <summary>
    /// An art, fashion, or design job, such as Designer.
    /// </summary>
    [pbr::OriginalName("ART_FASHION_AND_DESIGN")] ArtFashionAndDesign = 5,
    /// <summary>
    /// A business operations job, such as Business Operations Manager.
    /// </summary>
    [pbr::OriginalName("BUSINESS_OPERATIONS")] BusinessOperations = 6,
    /// <summary>
    /// A cleaning and facilities job, such as Custodial Staff.
    /// </summary>
    [pbr::OriginalName("CLEANING_AND_FACILITIES")] CleaningAndFacilities = 7,
    /// <summary>
    /// A computer and IT job, such as Systems Administrator.
    /// </summary>
    [pbr::OriginalName("COMPUTER_AND_IT")] ComputerAndIt = 8,
    /// <summary>
    /// A construction job, such as General Laborer.
    /// </summary>
    [pbr::OriginalName("CONSTRUCTION")] Construction = 9,
    /// <summary>
    /// A customer service job, such s Cashier.
    /// </summary>
    [pbr::OriginalName("CUSTOMER_SERVICE")] CustomerService = 10,
    /// <summary>
    /// An education job, such as School Teacher.
    /// </summary>
    [pbr::OriginalName("EDUCATION")] Education = 11,
    /// <summary>
    /// An entertainment and travel job, such as Flight Attendant.
    /// </summary>
    [pbr::OriginalName("ENTERTAINMENT_AND_TRAVEL")] EntertainmentAndTravel = 12,
    /// <summary>
    /// A farming or outdoor job, such as Park Ranger.
    /// </summary>
    [pbr::OriginalName("FARMING_AND_OUTDOORS")] FarmingAndOutdoors = 13,
    /// <summary>
    /// A healthcare job, such as Registered Nurse.
    /// </summary>
    [pbr::OriginalName("HEALTHCARE")] Healthcare = 14,
    /// <summary>
    /// A human resources job, such as Human Resources Director.
    /// </summary>
    [pbr::OriginalName("HUMAN_RESOURCES")] HumanResources = 15,
    /// <summary>
    /// An installation, maintenance, or repair job, such as Electrician.
    /// </summary>
    [pbr::OriginalName("INSTALLATION_MAINTENANCE_AND_REPAIR")] InstallationMaintenanceAndRepair = 16,
    /// <summary>
    /// A legal job, such as Law Clerk.
    /// </summary>
    [pbr::OriginalName("LEGAL")] Legal = 17,
    /// <summary>
    /// A management job, often used in conjunction with another category,
    /// such as Store Manager.
    /// </summary>
    [pbr::OriginalName("MANAGEMENT")] Management = 18,
    /// <summary>
    /// A manufacturing or warehouse job, such as Assembly Technician.
    /// </summary>
    [pbr::OriginalName("MANUFACTURING_AND_WAREHOUSE")] ManufacturingAndWarehouse = 19,
    /// <summary>
    /// A media, communications, or writing job, such as Media Relations.
    /// </summary>
    [pbr::OriginalName("MEDIA_COMMUNICATIONS_AND_WRITING")] MediaCommunicationsAndWriting = 20,
    /// <summary>
    /// An oil, gas or mining job, such as Offshore Driller.
    /// </summary>
    [pbr::OriginalName("OIL_GAS_AND_MINING")] OilGasAndMining = 21,
    /// <summary>
    /// A personal care and services job, such as Hair Stylist.
    /// </summary>
    [pbr::OriginalName("PERSONAL_CARE_AND_SERVICES")] PersonalCareAndServices = 22,
    /// <summary>
    /// A protective services job, such as Security Guard.
    /// </summary>
    [pbr::OriginalName("PROTECTIVE_SERVICES")] ProtectiveServices = 23,
    /// <summary>
    /// A real estate job, such as Buyer's Agent.
    /// </summary>
    [pbr::OriginalName("REAL_ESTATE")] RealEstate = 24,
    /// <summary>
    /// A restaurant and hospitality job, such as Restaurant Server.
    /// </summary>
    [pbr::OriginalName("RESTAURANT_AND_HOSPITALITY")] RestaurantAndHospitality = 25,
    /// <summary>
    /// A sales and/or retail job, such Sales Associate.
    /// </summary>
    [pbr::OriginalName("SALES_AND_RETAIL")] SalesAndRetail = 26,
    /// <summary>
    /// A science and engineering job, such as Lab Technician.
    /// </summary>
    [pbr::OriginalName("SCIENCE_AND_ENGINEERING")] ScienceAndEngineering = 27,
    /// <summary>
    /// A social services or non-profit job, such as Case Worker.
    /// </summary>
    [pbr::OriginalName("SOCIAL_SERVICES_AND_NON_PROFIT")] SocialServicesAndNonProfit = 28,
    /// <summary>
    /// A sports, fitness, or recreation job, such as Personal Trainer.
    /// </summary>
    [pbr::OriginalName("SPORTS_FITNESS_AND_RECREATION")] SportsFitnessAndRecreation = 29,
    /// <summary>
    /// A transportation or logistics job, such as Truck Driver.
    /// </summary>
    [pbr::OriginalName("TRANSPORTATION_AND_LOGISTICS")] TransportationAndLogistics = 30,
  }

  /// <summary>
  /// An enum that represents the job posting region. In most cases, job postings
  /// don't need to specify a region. If a region is given, jobs are
  /// eligible for searches in the specified region.
  /// </summary>
  public enum PostingRegion {
    /// <summary>
    /// If the region is unspecified, the job is only returned if it
    /// matches the [LocationFilter][google.cloud.talent.v4beta1.LocationFilter].
    /// </summary>
    [pbr::OriginalName("POSTING_REGION_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// In addition to exact location matching, job posting is returned when the
    /// [LocationFilter][google.cloud.talent.v4beta1.LocationFilter] in the search query is in the same administrative area
    /// as the returned job posting. For example, if a `ADMINISTRATIVE_AREA` job
    /// is posted in "CA, USA", it's returned if [LocationFilter][google.cloud.talent.v4beta1.LocationFilter] has
    /// "Mountain View".
    ///
    /// Administrative area refers to top-level administrative subdivision of this
    /// country. For example, US state, IT region, UK constituent nation and
    /// JP prefecture.
    /// </summary>
    [pbr::OriginalName("ADMINISTRATIVE_AREA")] AdministrativeArea = 1,
    /// <summary>
    /// In addition to exact location matching, job is returned when
    /// [LocationFilter][google.cloud.talent.v4beta1.LocationFilter] in search query is in the same country as this job.
    /// For example, if a `NATION_WIDE` job is posted in "USA", it's
    /// returned if [LocationFilter][google.cloud.talent.v4beta1.LocationFilter] has 'Mountain View'.
    /// </summary>
    [pbr::OriginalName("NATION")] Nation = 2,
    /// <summary>
    /// Job allows employees to work remotely (telecommute).
    /// If locations are provided with this value, the job is
    /// considered as having a location, but telecommuting is allowed.
    /// </summary>
    [pbr::OriginalName("TELECOMMUTE")] Telecommute = 3,
  }

  /// <summary>
  /// Deprecated. All resources are only visible to the owner.
  ///
  /// An enum that represents who has view access to the resource.
  /// </summary>
  public enum Visibility {
    /// <summary>
    /// Default value.
    /// </summary>
    [pbr::OriginalName("VISIBILITY_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The resource is only visible to the GCP account who owns it.
    /// </summary>
    [pbr::OriginalName("ACCOUNT_ONLY")] AccountOnly = 1,
    /// <summary>
    /// The resource is visible to the owner and may be visible to other
    /// applications and processes at Google.
    /// </summary>
    [pbr::OriginalName("SHARED_WITH_GOOGLE")] SharedWithGoogle = 2,
    /// <summary>
    /// The resource is visible to the owner and may be visible to all other API
    /// clients.
    /// </summary>
    [pbr::OriginalName("SHARED_WITH_PUBLIC")] SharedWithPublic = 3,
  }

  /// <summary>
  /// Enum that represents the usage of the contact information.
  /// </summary>
  public enum ContactInfoUsage {
    /// <summary>
    /// Default value.
    /// </summary>
    [pbr::OriginalName("CONTACT_INFO_USAGE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Personal use.
    /// </summary>
    [pbr::OriginalName("PERSONAL")] Personal = 1,
    /// <summary>
    /// Work use.
    /// </summary>
    [pbr::OriginalName("WORK")] Work = 2,
    /// <summary>
    /// School use.
    /// </summary>
    [pbr::OriginalName("SCHOOL")] School = 3,
  }

  /// <summary>
  /// Option for HTML content sanitization on user input fields, for example, job
  /// description. By setting this option, user can determine whether and how
  /// sanitization is performed on these fields.
  /// </summary>
  public enum HtmlSanitization {
    /// <summary>
    /// Default value.
    /// </summary>
    [pbr::OriginalName("HTML_SANITIZATION_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Disables sanitization on HTML input.
    /// </summary>
    [pbr::OriginalName("HTML_SANITIZATION_DISABLED")] Disabled = 1,
    /// <summary>
    /// Sanitizes HTML input, only accepts bold, italic, ordered list, and
    /// unordered list markup tags.
    /// </summary>
    [pbr::OriginalName("SIMPLE_FORMATTING_ONLY")] SimpleFormattingOnly = 2,
  }

  /// <summary>
  /// Method for commute.
  /// </summary>
  public enum CommuteMethod {
    /// <summary>
    /// Commute method isn't specified.
    /// </summary>
    [pbr::OriginalName("COMMUTE_METHOD_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Commute time is calculated based on driving time.
    /// </summary>
    [pbr::OriginalName("DRIVING")] Driving = 1,
    /// <summary>
    /// Commute time is calculated based on public transit including bus, metro,
    /// subway, and so on.
    /// </summary>
    [pbr::OriginalName("TRANSIT")] Transit = 2,
    /// <summary>
    /// Commute time is calculated based on walking time.
    /// </summary>
    [pbr::OriginalName("WALKING")] Walking = 3,
    /// <summary>
    /// Commute time is calculated based on biking time.
    /// </summary>
    [pbr::OriginalName("CYCLING")] Cycling = 4,
  }

  /// <summary>
  /// Enum that represents the skill proficiency level.
  /// </summary>
  public enum SkillProficiencyLevel {
    /// <summary>
    /// Default value.
    /// </summary>
    [pbr::OriginalName("SKILL_PROFICIENCY_LEVEL_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Lacks any proficiency in this skill.
    /// </summary>
    [pbr::OriginalName("UNSKILLED")] Unskilled = 6,
    /// <summary>
    /// Have a common knowledge or an understanding of basic techniques and
    /// concepts.
    /// </summary>
    [pbr::OriginalName("FUNDAMENTAL_AWARENESS")] FundamentalAwareness = 1,
    /// <summary>
    /// Have the level of experience gained in a classroom and/or experimental
    /// scenarios or as a trainee on-the-job.
    /// </summary>
    [pbr::OriginalName("NOVICE")] Novice = 2,
    /// <summary>
    /// Be able to successfully complete tasks in this skill as requested. Help
    /// from an expert may be required from time to time, but can usually perform
    /// skill independently.
    /// </summary>
    [pbr::OriginalName("INTERMEDIATE")] Intermediate = 3,
    /// <summary>
    /// Can perform the actions associated with this skill without assistance.
    /// </summary>
    [pbr::OriginalName("ADVANCED")] Advanced = 4,
    /// <summary>
    /// Known as an expert in this area.
    /// </summary>
    [pbr::OriginalName("EXPERT")] Expert = 5,
  }

  /// <summary>
  /// The overall outcome /decision / result indicator.
  /// </summary>
  public enum Outcome {
    /// <summary>
    /// Default value.
    /// </summary>
    [pbr::OriginalName("OUTCOME_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// A positive outcome / passing indicator (for example, candidate was
    /// recommended for hiring or to be moved forward in the hiring process,
    /// candidate passed a test).
    /// </summary>
    [pbr::OriginalName("POSITIVE")] Positive = 1,
    /// <summary>
    /// A neutral outcome / no clear indicator (for example, no strong
    /// reccommendation either to move forward / not move forward, neutral score).
    /// </summary>
    [pbr::OriginalName("NEUTRAL")] Neutral = 2,
    /// <summary>
    /// A negative outcome / failing indicator (for example, candidate was
    /// recommended to NOT move forward in the hiring process, failed a test).
    /// </summary>
    [pbr::OriginalName("NEGATIVE")] Negative = 3,
    /// <summary>
    /// The assessment outcome is not available or otherwise unknown (for example,
    /// candidate did not complete assessment).
    /// </summary>
    [pbr::OriginalName("OUTCOME_NOT_AVAILABLE")] NotAvailable = 4,
  }

  /// <summary>
  /// The type of candidate availability signal.
  /// </summary>
  public enum AvailabilitySignalType {
    /// <summary>
    /// Default value.
    /// </summary>
    [pbr::OriginalName("AVAILABILITY_SIGNAL_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Job application signal.
    ///
    /// In the context of [Profile.availability_signals][google.cloud.talent.v4beta1.Profile.availability_signals], this signal is related
    /// to the candidate's most recent application.
    /// [last_update_time][google.cloud.talent.v4beta1.AvailabilitySignal.last_update_time] is
    /// calculated from max([Application.create_time][google.cloud.talent.v4beta1.Application.create_time]) from all [Application][google.cloud.talent.v4beta1.Application]
    /// records where [Application.source][google.cloud.talent.v4beta1.Application.source] is any of the following:
    ///  [APPLY_DIRECT_WEB][google.cloud.talent.v4beta1.Application.ApplicationSource.APPLY_DIRECT_WEB]
    ///  [APPLY_DIRECT_MOBILE_WEB][google.cloud.talent.v4beta1.Application.ApplicationSource.APPLY_DIRECT_MOBILE_WEB]
    ///  [APPLY_DIRECT_MOBILE_APP][google.cloud.talent.v4beta1.Application.ApplicationSource.APPLY_DIRECT_MOBILE_APP]
    ///  [APPLY_DIRECT_IN_PERSON][google.cloud.talent.v4beta1.Application.ApplicationSource.APPLY_DIRECT_IN_PERSON]
    ///  [APPLY_INDIRECT][google.cloud.talent.v4beta1.Application.ApplicationSource.APPLY_INDIRECT]
    ///
    /// In the context of [AvailabilityFilter][google.cloud.talent.v4beta1.AvailabilityFilter], the filter is applied on
    /// [Profile.availability_signals][google.cloud.talent.v4beta1.Profile.availability_signals] where
    /// [type][google.cloud.talent.v4beta1.AvailabilitySignal.type] is JOB_APPLICATION.
    /// </summary>
    [pbr::OriginalName("JOB_APPLICATION")] JobApplication = 1,
    /// <summary>
    /// Resume update signal.
    ///
    /// In the context of [Profile.availability_signals][google.cloud.talent.v4beta1.Profile.availability_signals], this signal is related
    /// to the candidate's most recent update to their resume.
    /// For a [SummarizedProfile.summary][google.cloud.talent.v4beta1.SummarizedProfile.summary],
    /// [last_update_time][google.cloud.talent.v4beta1.AvailabilitySignal.last_update_time] is
    /// calculated from max([Profile.resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time]) from all
    /// [SummarizedProfile.profiles][google.cloud.talent.v4beta1.SummarizedProfile.profiles].
    ///
    /// In the context of [AvailabilityFilter][google.cloud.talent.v4beta1.AvailabilityFilter], the filter is applied on
    /// [Profile.availability_signals][google.cloud.talent.v4beta1.Profile.availability_signals] where
    /// [type][google.cloud.talent.v4beta1.AvailabilitySignal.type] is RESUME_UPDATE.
    /// </summary>
    [pbr::OriginalName("RESUME_UPDATE")] ResumeUpdate = 2,
    /// <summary>
    /// Candidate update signal.
    ///
    /// In the context of [Profile.availability_signals][google.cloud.talent.v4beta1.Profile.availability_signals], this signal is related
    /// to the candidate's most recent update to their profile.
    /// For a [SummarizedProfile.summary][google.cloud.talent.v4beta1.SummarizedProfile.summary],
    /// [last_update_time][google.cloud.talent.v4beta1.AvailabilitySignal.last_update_time] is
    /// calculated from max([Profile.candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time]) from all
    /// [SummarizedProfile.profiles][google.cloud.talent.v4beta1.SummarizedProfile.profiles].
    ///
    /// In the context of [AvailabilityFilter][google.cloud.talent.v4beta1.AvailabilityFilter], the filter is applied on
    /// [Profile.availability_signals][google.cloud.talent.v4beta1.Profile.availability_signals] where
    /// [type][google.cloud.talent.v4beta1.AvailabilitySignal.type] is CANDIDATE_UPDATE.
    /// </summary>
    [pbr::OriginalName("CANDIDATE_UPDATE")] CandidateUpdate = 3,
    /// <summary>
    /// Client submission signal.
    ///
    /// In the context of [Profile.availability_signals][google.cloud.talent.v4beta1.Profile.availability_signals], this signal is related
    /// to the candidate's most recent submission.
    /// [last_update_time][google.cloud.talent.v4beta1.AvailabilitySignal.last_update_time] is
    /// calculated from max([Application.create_time][google.cloud.talent.v4beta1.Application.create_time]) from all [Application][google.cloud.talent.v4beta1.Application]
    /// records where [Application.stage][google.cloud.talent.v4beta1.Application.stage] is any of the following:
    ///  [HIRING_MANAGER_REVIEW][google.cloud.talent.v4beta1.Application.ApplicationStage.HIRING_MANAGER_REVIEW]
    ///  [INTERVIEW][google.cloud.talent.v4beta1.Application.ApplicationStage.INTERVIEW]
    ///  [OFFER_EXTENDED][google.cloud.talent.v4beta1.Application.ApplicationStage.OFFER_EXTENDED]
    ///  [OFFER_ACCEPTED][google.cloud.talent.v4beta1.Application.ApplicationStage.OFFER_ACCEPTED]
    ///  [STARTED][google.cloud.talent.v4beta1.Application.ApplicationStage.STARTED]
    ///
    /// In the context of [AvailabilityFilter][google.cloud.talent.v4beta1.AvailabilityFilter], the filter is applied on
    /// [Profile.availability_signals][google.cloud.talent.v4beta1.Profile.availability_signals] where
    /// [type][google.cloud.talent.v4beta1.AvailabilitySignal.type] is CLIENT_SUBMISSION.
    /// </summary>
    [pbr::OriginalName("CLIENT_SUBMISSION")] ClientSubmission = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Message representing a period of time between two timestamps.
  /// </summary>
  public sealed partial class TimestampRange : pb::IMessage<TimestampRange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimestampRange> _parser = new pb::MessageParser<TimestampRange>(() => new TimestampRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimestampRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimestampRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimestampRange(TimestampRange other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimestampRange Clone() {
      return new TimestampRange(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Begin of the period (inclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// End of the period (exclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimestampRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimestampRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimestampRange other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A resource that represents a location with full geographic information.
  /// </summary>
  public sealed partial class Location : pb::IMessage<Location>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location(Location other) : this() {
      locationType_ = other.locationType_;
      postalAddress_ = other.postalAddress_ != null ? other.postalAddress_.Clone() : null;
      latLng_ = other.latLng_ != null ? other.latLng_.Clone() : null;
      radiusMiles_ = other.radiusMiles_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "location_type" field.</summary>
    public const int LocationTypeFieldNumber = 1;
    private global::Google.Cloud.Talent.V4Beta1.Location.Types.LocationType locationType_ = global::Google.Cloud.Talent.V4Beta1.Location.Types.LocationType.Unspecified;
    /// <summary>
    /// The type of a location, which corresponds to the address lines field of
    /// [google.type.PostalAddress][google.type.PostalAddress]. For example, "Downtown, Atlanta, GA, USA"
    /// has a type of [LocationType.NEIGHBORHOOD][google.cloud.talent.v4beta1.Location.LocationType.NEIGHBORHOOD], and "Kansas City, KS, USA"
    /// has a type of [LocationType.LOCALITY][google.cloud.talent.v4beta1.Location.LocationType.LOCALITY].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.Location.Types.LocationType LocationType {
      get { return locationType_; }
      set {
        locationType_ = value;
      }
    }

    /// <summary>Field number for the "postal_address" field.</summary>
    public const int PostalAddressFieldNumber = 2;
    private global::Google.Type.PostalAddress postalAddress_;
    /// <summary>
    /// Postal address of the location that includes human readable information,
    /// such as postal delivery and payments addresses. Given a postal address,
    /// a postal service can deliver items to a premises, P.O. Box, or other
    /// delivery location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.PostalAddress PostalAddress {
      get { return postalAddress_; }
      set {
        postalAddress_ = value;
      }
    }

    /// <summary>Field number for the "lat_lng" field.</summary>
    public const int LatLngFieldNumber = 3;
    private global::Google.Type.LatLng latLng_;
    /// <summary>
    /// An object representing a latitude/longitude pair.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.LatLng LatLng {
      get { return latLng_; }
      set {
        latLng_ = value;
      }
    }

    /// <summary>Field number for the "radius_miles" field.</summary>
    public const int RadiusMilesFieldNumber = 4;
    private double radiusMiles_;
    /// <summary>
    /// Radius in miles of the job location. This value is derived from the
    /// location bounding box in which a circle with the specified radius
    /// centered from [google.type.LatLng][google.type.LatLng] covers the area associated with the
    /// job location.
    /// For example, currently, "Mountain View, CA, USA" has a radius of
    /// 6.17 miles.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double RadiusMiles {
      get { return radiusMiles_; }
      set {
        radiusMiles_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LocationType != other.LocationType) return false;
      if (!object.Equals(PostalAddress, other.PostalAddress)) return false;
      if (!object.Equals(LatLng, other.LatLng)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RadiusMiles, other.RadiusMiles)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LocationType != global::Google.Cloud.Talent.V4Beta1.Location.Types.LocationType.Unspecified) hash ^= LocationType.GetHashCode();
      if (postalAddress_ != null) hash ^= PostalAddress.GetHashCode();
      if (latLng_ != null) hash ^= LatLng.GetHashCode();
      if (RadiusMiles != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RadiusMiles);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LocationType != global::Google.Cloud.Talent.V4Beta1.Location.Types.LocationType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LocationType);
      }
      if (postalAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PostalAddress);
      }
      if (latLng_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LatLng);
      }
      if (RadiusMiles != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(RadiusMiles);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LocationType != global::Google.Cloud.Talent.V4Beta1.Location.Types.LocationType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LocationType);
      }
      if (postalAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PostalAddress);
      }
      if (latLng_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LatLng);
      }
      if (RadiusMiles != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(RadiusMiles);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LocationType != global::Google.Cloud.Talent.V4Beta1.Location.Types.LocationType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LocationType);
      }
      if (postalAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostalAddress);
      }
      if (latLng_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatLng);
      }
      if (RadiusMiles != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.LocationType != global::Google.Cloud.Talent.V4Beta1.Location.Types.LocationType.Unspecified) {
        LocationType = other.LocationType;
      }
      if (other.postalAddress_ != null) {
        if (postalAddress_ == null) {
          PostalAddress = new global::Google.Type.PostalAddress();
        }
        PostalAddress.MergeFrom(other.PostalAddress);
      }
      if (other.latLng_ != null) {
        if (latLng_ == null) {
          LatLng = new global::Google.Type.LatLng();
        }
        LatLng.MergeFrom(other.LatLng);
      }
      if (other.RadiusMiles != 0D) {
        RadiusMiles = other.RadiusMiles;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LocationType = (global::Google.Cloud.Talent.V4Beta1.Location.Types.LocationType) input.ReadEnum();
            break;
          }
          case 18: {
            if (postalAddress_ == null) {
              PostalAddress = new global::Google.Type.PostalAddress();
            }
            input.ReadMessage(PostalAddress);
            break;
          }
          case 26: {
            if (latLng_ == null) {
              LatLng = new global::Google.Type.LatLng();
            }
            input.ReadMessage(LatLng);
            break;
          }
          case 33: {
            RadiusMiles = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LocationType = (global::Google.Cloud.Talent.V4Beta1.Location.Types.LocationType) input.ReadEnum();
            break;
          }
          case 18: {
            if (postalAddress_ == null) {
              PostalAddress = new global::Google.Type.PostalAddress();
            }
            input.ReadMessage(PostalAddress);
            break;
          }
          case 26: {
            if (latLng_ == null) {
              LatLng = new global::Google.Type.LatLng();
            }
            input.ReadMessage(LatLng);
            break;
          }
          case 33: {
            RadiusMiles = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Location message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// An enum which represents the type of a location.
      /// </summary>
      public enum LocationType {
        /// <summary>
        /// Default value if the type isn't specified.
        /// </summary>
        [pbr::OriginalName("LOCATION_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A country level location.
        /// </summary>
        [pbr::OriginalName("COUNTRY")] Country = 1,
        /// <summary>
        /// A state or equivalent level location.
        /// </summary>
        [pbr::OriginalName("ADMINISTRATIVE_AREA")] AdministrativeArea = 2,
        /// <summary>
        /// A county or equivalent level location.
        /// </summary>
        [pbr::OriginalName("SUB_ADMINISTRATIVE_AREA")] SubAdministrativeArea = 3,
        /// <summary>
        /// A city or equivalent level location.
        /// </summary>
        [pbr::OriginalName("LOCALITY")] Locality = 4,
        /// <summary>
        /// A postal code level location.
        /// </summary>
        [pbr::OriginalName("POSTAL_CODE")] PostalCode = 5,
        /// <summary>
        /// A sublocality is a subdivision of a locality, for example a city borough,
        /// ward, or arrondissement. Sublocalities are usually recognized by a local
        /// political authority. For example, Manhattan and Brooklyn are recognized
        /// as boroughs by the City of New York, and are therefore modeled as
        /// sublocalities.
        /// </summary>
        [pbr::OriginalName("SUB_LOCALITY")] SubLocality = 6,
        /// <summary>
        /// A district or equivalent level location.
        /// </summary>
        [pbr::OriginalName("SUB_LOCALITY_1")] SubLocality1 = 7,
        /// <summary>
        /// A smaller district or equivalent level display.
        /// </summary>
        [pbr::OriginalName("SUB_LOCALITY_2")] SubLocality2 = 8,
        /// <summary>
        /// A neighborhood level location.
        /// </summary>
        [pbr::OriginalName("NEIGHBORHOOD")] Neighborhood = 9,
        /// <summary>
        /// A street address level location.
        /// </summary>
        [pbr::OriginalName("STREET_ADDRESS")] StreetAddress = 10,
      }

    }
    #endregion

  }

  /// <summary>
  /// Meta information related to the job searcher or entity
  /// conducting the job search. This information is used to improve the
  /// performance of the service.
  /// </summary>
  public sealed partial class RequestMetadata : pb::IMessage<RequestMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestMetadata> _parser = new pb::MessageParser<RequestMetadata>(() => new RequestMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMetadata(RequestMetadata other) : this() {
      domain_ = other.domain_;
      sessionId_ = other.sessionId_;
      userId_ = other.userId_;
      allowMissingIds_ = other.allowMissingIds_;
      deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMetadata Clone() {
      return new RequestMetadata(this);
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 1;
    private string domain_ = "";
    /// <summary>
    /// Required if [allow_missing_ids][google.cloud.talent.v4beta1.RequestMetadata.allow_missing_ids] is unset or `false`.
    ///
    /// The client-defined scope or source of the service call, which typically
    /// is the domain on
    /// which the service has been implemented and is currently being run.
    ///
    /// For example, if the service is being run by client &lt;em>Foo, Inc.&lt;/em>, on
    /// job board www.foo.com and career site www.bar.com, then this field is
    /// set to "foo.com" for use on the job board, and "bar.com" for use on the
    /// career site.
    ///
    /// Note that any improvements to the model for a particular tenant site rely
    /// on this field being set correctly to a unique domain.
    ///
    /// The maximum number of allowed characters is 255.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 2;
    private string sessionId_ = "";
    /// <summary>
    /// Required if [allow_missing_ids][google.cloud.talent.v4beta1.RequestMetadata.allow_missing_ids] is unset or `false`.
    ///
    /// A unique session identification string. A session is defined as the
    /// duration of an end user's interaction with the service over a certain
    /// period.
    /// Obfuscate this field for privacy concerns before
    /// providing it to the service.
    ///
    /// Note that any improvements to the model for a particular tenant site rely
    /// on this field being set correctly to a unique session ID.
    ///
    /// The maximum number of allowed characters is 255.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private string userId_ = "";
    /// <summary>
    /// Required if [allow_missing_ids][google.cloud.talent.v4beta1.RequestMetadata.allow_missing_ids] is unset or `false`.
    ///
    /// A unique user identification string, as determined by the client.
    /// To have the strongest positive impact on search quality
    /// make sure the client-level is unique.
    /// Obfuscate this field for privacy concerns before
    /// providing it to the service.
    ///
    /// Note that any improvements to the model for a particular tenant site rely
    /// on this field being set correctly to a unique user ID.
    ///
    /// The maximum number of allowed characters is 255.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "allow_missing_ids" field.</summary>
    public const int AllowMissingIdsFieldNumber = 4;
    private bool allowMissingIds_;
    /// <summary>
    /// Only set when any of [domain][google.cloud.talent.v4beta1.RequestMetadata.domain], [session_id][google.cloud.talent.v4beta1.RequestMetadata.session_id] and [user_id][google.cloud.talent.v4beta1.RequestMetadata.user_id] isn't
    /// available for some reason. It is highly recommended not to set this field
    /// and provide accurate [domain][google.cloud.talent.v4beta1.RequestMetadata.domain], [session_id][google.cloud.talent.v4beta1.RequestMetadata.session_id] and [user_id][google.cloud.talent.v4beta1.RequestMetadata.user_id] for the
    /// best service experience.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowMissingIds {
      get { return allowMissingIds_; }
      set {
        allowMissingIds_ = value;
      }
    }

    /// <summary>Field number for the "device_info" field.</summary>
    public const int DeviceInfoFieldNumber = 5;
    private global::Google.Cloud.Talent.V4Beta1.DeviceInfo deviceInfo_;
    /// <summary>
    /// The type of device used by the job seeker at the time of the call to the
    /// service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.DeviceInfo DeviceInfo {
      get { return deviceInfo_; }
      set {
        deviceInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Domain != other.Domain) return false;
      if (SessionId != other.SessionId) return false;
      if (UserId != other.UserId) return false;
      if (AllowMissingIds != other.AllowMissingIds) return false;
      if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (AllowMissingIds != false) hash ^= AllowMissingIds.GetHashCode();
      if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Domain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Domain);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (AllowMissingIds != false) {
        output.WriteRawTag(32);
        output.WriteBool(AllowMissingIds);
      }
      if (deviceInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DeviceInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Domain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Domain);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (AllowMissingIds != false) {
        output.WriteRawTag(32);
        output.WriteBool(AllowMissingIds);
      }
      if (deviceInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DeviceInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (AllowMissingIds != false) {
        size += 1 + 1;
      }
      if (deviceInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.AllowMissingIds != false) {
        AllowMissingIds = other.AllowMissingIds;
      }
      if (other.deviceInfo_ != null) {
        if (deviceInfo_ == null) {
          DeviceInfo = new global::Google.Cloud.Talent.V4Beta1.DeviceInfo();
        }
        DeviceInfo.MergeFrom(other.DeviceInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Domain = input.ReadString();
            break;
          }
          case 18: {
            SessionId = input.ReadString();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 32: {
            AllowMissingIds = input.ReadBool();
            break;
          }
          case 42: {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::Google.Cloud.Talent.V4Beta1.DeviceInfo();
            }
            input.ReadMessage(DeviceInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Domain = input.ReadString();
            break;
          }
          case 18: {
            SessionId = input.ReadString();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 32: {
            AllowMissingIds = input.ReadBool();
            break;
          }
          case 42: {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::Google.Cloud.Talent.V4Beta1.DeviceInfo();
            }
            input.ReadMessage(DeviceInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Additional information returned to client, such as debugging information.
  /// </summary>
  public sealed partial class ResponseMetadata : pb::IMessage<ResponseMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResponseMetadata> _parser = new pb::MessageParser<ResponseMetadata>(() => new ResponseMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMetadata(ResponseMetadata other) : this() {
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMetadata Clone() {
      return new ResponseMetadata(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private string requestId_ = "";
    /// <summary>
    /// A unique id associated with this call.
    /// This id is logged for tracking purposes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RequestId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RequestId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseMetadata other) {
      if (other == null) {
        return;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Device information collected from the job seeker, candidate, or
  /// other entity conducting the job search. Providing this information improves
  /// the quality of the search results across devices.
  /// </summary>
  public sealed partial class DeviceInfo : pb::IMessage<DeviceInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceInfo> _parser = new pb::MessageParser<DeviceInfo>(() => new DeviceInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceInfo(DeviceInfo other) : this() {
      deviceType_ = other.deviceType_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceInfo Clone() {
      return new DeviceInfo(this);
    }

    /// <summary>Field number for the "device_type" field.</summary>
    public const int DeviceTypeFieldNumber = 1;
    private global::Google.Cloud.Talent.V4Beta1.DeviceInfo.Types.DeviceType deviceType_ = global::Google.Cloud.Talent.V4Beta1.DeviceInfo.Types.DeviceType.Unspecified;
    /// <summary>
    /// Type of the device.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.DeviceInfo.Types.DeviceType DeviceType {
      get { return deviceType_; }
      set {
        deviceType_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// A device-specific ID. The ID must be a unique identifier that
    /// distinguishes the device from other devices.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceType != other.DeviceType) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceType != global::Google.Cloud.Talent.V4Beta1.DeviceInfo.Types.DeviceType.Unspecified) hash ^= DeviceType.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceType != global::Google.Cloud.Talent.V4Beta1.DeviceInfo.Types.DeviceType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DeviceType);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceType != global::Google.Cloud.Talent.V4Beta1.DeviceInfo.Types.DeviceType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DeviceType);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceType != global::Google.Cloud.Talent.V4Beta1.DeviceInfo.Types.DeviceType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DeviceType);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceInfo other) {
      if (other == null) {
        return;
      }
      if (other.DeviceType != global::Google.Cloud.Talent.V4Beta1.DeviceInfo.Types.DeviceType.Unspecified) {
        DeviceType = other.DeviceType;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeviceType = (global::Google.Cloud.Talent.V4Beta1.DeviceInfo.Types.DeviceType) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DeviceType = (global::Google.Cloud.Talent.V4Beta1.DeviceInfo.Types.DeviceType) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DeviceInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// An enumeration describing an API access portal and exposure mechanism.
      /// </summary>
      public enum DeviceType {
        /// <summary>
        /// The device type isn't specified.
        /// </summary>
        [pbr::OriginalName("DEVICE_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A desktop web browser, such as, Chrome, Firefox, Safari, or Internet
        /// Explorer)
        /// </summary>
        [pbr::OriginalName("WEB")] Web = 1,
        /// <summary>
        /// A mobile device web browser, such as a phone or tablet with a Chrome
        /// browser.
        /// </summary>
        [pbr::OriginalName("MOBILE_WEB")] MobileWeb = 2,
        /// <summary>
        /// An Android device native application.
        /// </summary>
        [pbr::OriginalName("ANDROID")] Android = 3,
        /// <summary>
        /// An iOS device native application.
        /// </summary>
        [pbr::OriginalName("IOS")] Ios = 4,
        /// <summary>
        /// A bot, as opposed to a device operated by human beings, such as a web
        /// crawler.
        /// </summary>
        [pbr::OriginalName("BOT")] Bot = 5,
        /// <summary>
        /// Other devices types.
        /// </summary>
        [pbr::OriginalName("OTHER")] Other = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// Custom attribute values that are either filterable or non-filterable.
  /// </summary>
  public sealed partial class CustomAttribute : pb::IMessage<CustomAttribute>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustomAttribute> _parser = new pb::MessageParser<CustomAttribute>(() => new CustomAttribute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomAttribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomAttribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomAttribute(CustomAttribute other) : this() {
      stringValues_ = other.stringValues_.Clone();
      longValues_ = other.longValues_.Clone();
      filterable_ = other.filterable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomAttribute Clone() {
      return new CustomAttribute(this);
    }

    /// <summary>Field number for the "string_values" field.</summary>
    public const int StringValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_stringValues_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> stringValues_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Exactly one of [string_values][google.cloud.talent.v4beta1.CustomAttribute.string_values] or [long_values][google.cloud.talent.v4beta1.CustomAttribute.long_values] must be specified.
    ///
    /// This field is used to perform a string match (`CASE_SENSITIVE_MATCH` or
    /// `CASE_INSENSITIVE_MATCH`) search.
    /// For filterable `string_value`s, a maximum total number of 200 values
    /// is allowed, with each `string_value` has a byte size of no more than
    /// 500B. For unfilterable `string_values`, the maximum total byte size of
    /// unfilterable `string_values` is 50KB.
    ///
    /// Empty string isn't allowed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StringValues {
      get { return stringValues_; }
    }

    /// <summary>Field number for the "long_values" field.</summary>
    public const int LongValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_longValues_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> longValues_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Exactly one of [string_values][google.cloud.talent.v4beta1.CustomAttribute.string_values] or [long_values][google.cloud.talent.v4beta1.CustomAttribute.long_values] must be specified.
    ///
    /// This field is used to perform number range search.
    /// (`EQ`, `GT`, `GE`, `LE`, `LT`) over filterable `long_value`.
    ///
    /// Currently at most 1 [long_values][google.cloud.talent.v4beta1.CustomAttribute.long_values] is supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> LongValues {
      get { return longValues_; }
    }

    /// <summary>Field number for the "filterable" field.</summary>
    public const int FilterableFieldNumber = 3;
    private bool filterable_;
    /// <summary>
    /// If the `filterable` flag is true, custom field values are searchable.
    /// If false, values are not searchable.
    ///
    /// Default is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Filterable {
      get { return filterable_; }
      set {
        filterable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomAttribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomAttribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stringValues_.Equals(other.stringValues_)) return false;
      if(!longValues_.Equals(other.longValues_)) return false;
      if (Filterable != other.Filterable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stringValues_.GetHashCode();
      hash ^= longValues_.GetHashCode();
      if (Filterable != false) hash ^= Filterable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      stringValues_.WriteTo(output, _repeated_stringValues_codec);
      longValues_.WriteTo(output, _repeated_longValues_codec);
      if (Filterable != false) {
        output.WriteRawTag(24);
        output.WriteBool(Filterable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      stringValues_.WriteTo(ref output, _repeated_stringValues_codec);
      longValues_.WriteTo(ref output, _repeated_longValues_codec);
      if (Filterable != false) {
        output.WriteRawTag(24);
        output.WriteBool(Filterable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stringValues_.CalculateSize(_repeated_stringValues_codec);
      size += longValues_.CalculateSize(_repeated_longValues_codec);
      if (Filterable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomAttribute other) {
      if (other == null) {
        return;
      }
      stringValues_.Add(other.stringValues_);
      longValues_.Add(other.longValues_);
      if (other.Filterable != false) {
        Filterable = other.Filterable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stringValues_.AddEntriesFrom(input, _repeated_stringValues_codec);
            break;
          }
          case 18:
          case 16: {
            longValues_.AddEntriesFrom(input, _repeated_longValues_codec);
            break;
          }
          case 24: {
            Filterable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            stringValues_.AddEntriesFrom(ref input, _repeated_stringValues_codec);
            break;
          }
          case 18:
          case 16: {
            longValues_.AddEntriesFrom(ref input, _repeated_longValues_codec);
            break;
          }
          case 24: {
            Filterable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Spell check result.
  /// </summary>
  public sealed partial class SpellingCorrection : pb::IMessage<SpellingCorrection>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellingCorrection> _parser = new pb::MessageParser<SpellingCorrection>(() => new SpellingCorrection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpellingCorrection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpellingCorrection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpellingCorrection(SpellingCorrection other) : this() {
      corrected_ = other.corrected_;
      correctedText_ = other.correctedText_;
      correctedHtml_ = other.correctedHtml_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpellingCorrection Clone() {
      return new SpellingCorrection(this);
    }

    /// <summary>Field number for the "corrected" field.</summary>
    public const int CorrectedFieldNumber = 1;
    private bool corrected_;
    /// <summary>
    /// Indicates if the query was corrected by the spell checker.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Corrected {
      get { return corrected_; }
      set {
        corrected_ = value;
      }
    }

    /// <summary>Field number for the "corrected_text" field.</summary>
    public const int CorrectedTextFieldNumber = 2;
    private string correctedText_ = "";
    /// <summary>
    /// Correction output consisting of the corrected keyword string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorrectedText {
      get { return correctedText_; }
      set {
        correctedText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "corrected_html" field.</summary>
    public const int CorrectedHtmlFieldNumber = 3;
    private string correctedHtml_ = "";
    /// <summary>
    /// Corrected output with html tags to highlight the corrected words.
    /// Corrected words are called out with the "&lt;b>&lt;i>...&lt;/i>&lt;/b>" html tags.
    ///
    /// For example, the user input query is "software enginear", where the second
    /// word, "enginear," is incorrect. It should be "engineer". When spelling
    /// correction is enabled, this value is
    /// "software &lt;b>&lt;i>engineer&lt;/i>&lt;/b>".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorrectedHtml {
      get { return correctedHtml_; }
      set {
        correctedHtml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpellingCorrection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpellingCorrection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Corrected != other.Corrected) return false;
      if (CorrectedText != other.CorrectedText) return false;
      if (CorrectedHtml != other.CorrectedHtml) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Corrected != false) hash ^= Corrected.GetHashCode();
      if (CorrectedText.Length != 0) hash ^= CorrectedText.GetHashCode();
      if (CorrectedHtml.Length != 0) hash ^= CorrectedHtml.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Corrected != false) {
        output.WriteRawTag(8);
        output.WriteBool(Corrected);
      }
      if (CorrectedText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CorrectedText);
      }
      if (CorrectedHtml.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CorrectedHtml);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Corrected != false) {
        output.WriteRawTag(8);
        output.WriteBool(Corrected);
      }
      if (CorrectedText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CorrectedText);
      }
      if (CorrectedHtml.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CorrectedHtml);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Corrected != false) {
        size += 1 + 1;
      }
      if (CorrectedText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CorrectedText);
      }
      if (CorrectedHtml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CorrectedHtml);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpellingCorrection other) {
      if (other == null) {
        return;
      }
      if (other.Corrected != false) {
        Corrected = other.Corrected;
      }
      if (other.CorrectedText.Length != 0) {
        CorrectedText = other.CorrectedText;
      }
      if (other.CorrectedHtml.Length != 0) {
        CorrectedHtml = other.CorrectedHtml;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Corrected = input.ReadBool();
            break;
          }
          case 18: {
            CorrectedText = input.ReadString();
            break;
          }
          case 26: {
            CorrectedHtml = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Corrected = input.ReadBool();
            break;
          }
          case 18: {
            CorrectedText = input.ReadString();
            break;
          }
          case 26: {
            CorrectedHtml = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Job compensation details.
  /// </summary>
  public sealed partial class CompensationInfo : pb::IMessage<CompensationInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompensationInfo> _parser = new pb::MessageParser<CompensationInfo>(() => new CompensationInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompensationInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompensationInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompensationInfo(CompensationInfo other) : this() {
      entries_ = other.entries_.Clone();
      annualizedBaseCompensationRange_ = other.annualizedBaseCompensationRange_ != null ? other.annualizedBaseCompensationRange_.Clone() : null;
      annualizedTotalCompensationRange_ = other.annualizedTotalCompensationRange_ != null ? other.annualizedTotalCompensationRange_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompensationInfo Clone() {
      return new CompensationInfo(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationEntry.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationEntry> entries_ = new pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationEntry>();
    /// <summary>
    /// Job compensation information.
    ///
    /// At most one entry can be of type
    /// [CompensationInfo.CompensationType.BASE][google.cloud.talent.v4beta1.CompensationInfo.CompensationType.BASE], which is
    /// referred as **base compensation entry** for the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationEntry> Entries {
      get { return entries_; }
    }

    /// <summary>Field number for the "annualized_base_compensation_range" field.</summary>
    public const int AnnualizedBaseCompensationRangeFieldNumber = 2;
    private global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange annualizedBaseCompensationRange_;
    /// <summary>
    /// Output only. Annualized base compensation range. Computed as base compensation entry's
    /// [CompensationEntry.amount][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.amount] times
    /// [CompensationEntry.expected_units_per_year][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.expected_units_per_year].
    ///
    /// See [CompensationEntry][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry] for explanation on compensation annualization.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange AnnualizedBaseCompensationRange {
      get { return annualizedBaseCompensationRange_; }
      set {
        annualizedBaseCompensationRange_ = value;
      }
    }

    /// <summary>Field number for the "annualized_total_compensation_range" field.</summary>
    public const int AnnualizedTotalCompensationRangeFieldNumber = 3;
    private global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange annualizedTotalCompensationRange_;
    /// <summary>
    /// Output only. Annualized total compensation range. Computed as all compensation entries'
    /// [CompensationEntry.amount][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.amount] times
    /// [CompensationEntry.expected_units_per_year][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.expected_units_per_year].
    ///
    /// See [CompensationEntry][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry] for explanation on compensation annualization.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange AnnualizedTotalCompensationRange {
      get { return annualizedTotalCompensationRange_; }
      set {
        annualizedTotalCompensationRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompensationInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompensationInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      if (!object.Equals(AnnualizedBaseCompensationRange, other.AnnualizedBaseCompensationRange)) return false;
      if (!object.Equals(AnnualizedTotalCompensationRange, other.AnnualizedTotalCompensationRange)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (annualizedBaseCompensationRange_ != null) hash ^= AnnualizedBaseCompensationRange.GetHashCode();
      if (annualizedTotalCompensationRange_ != null) hash ^= AnnualizedTotalCompensationRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      entries_.WriteTo(output, _repeated_entries_codec);
      if (annualizedBaseCompensationRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AnnualizedBaseCompensationRange);
      }
      if (annualizedTotalCompensationRange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AnnualizedTotalCompensationRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (annualizedBaseCompensationRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AnnualizedBaseCompensationRange);
      }
      if (annualizedTotalCompensationRange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AnnualizedTotalCompensationRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (annualizedBaseCompensationRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnnualizedBaseCompensationRange);
      }
      if (annualizedTotalCompensationRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnnualizedTotalCompensationRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompensationInfo other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      if (other.annualizedBaseCompensationRange_ != null) {
        if (annualizedBaseCompensationRange_ == null) {
          AnnualizedBaseCompensationRange = new global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange();
        }
        AnnualizedBaseCompensationRange.MergeFrom(other.AnnualizedBaseCompensationRange);
      }
      if (other.annualizedTotalCompensationRange_ != null) {
        if (annualizedTotalCompensationRange_ == null) {
          AnnualizedTotalCompensationRange = new global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange();
        }
        AnnualizedTotalCompensationRange.MergeFrom(other.AnnualizedTotalCompensationRange);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
          case 18: {
            if (annualizedBaseCompensationRange_ == null) {
              AnnualizedBaseCompensationRange = new global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange();
            }
            input.ReadMessage(AnnualizedBaseCompensationRange);
            break;
          }
          case 26: {
            if (annualizedTotalCompensationRange_ == null) {
              AnnualizedTotalCompensationRange = new global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange();
            }
            input.ReadMessage(AnnualizedTotalCompensationRange);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
          case 18: {
            if (annualizedBaseCompensationRange_ == null) {
              AnnualizedBaseCompensationRange = new global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange();
            }
            input.ReadMessage(AnnualizedBaseCompensationRange);
            break;
          }
          case 26: {
            if (annualizedTotalCompensationRange_ == null) {
              AnnualizedTotalCompensationRange = new global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange();
            }
            input.ReadMessage(AnnualizedTotalCompensationRange);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CompensationInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The type of compensation.
      ///
      /// For compensation amounts specified in non-monetary amounts,
      /// describe the compensation scheme in the [CompensationEntry.description][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.description].
      ///
      /// For example, tipping format is described in
      /// [CompensationEntry.description][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.description] (for example, "expect 15-20% tips based
      /// on customer bill.") and an estimate of the tips provided in
      /// [CompensationEntry.amount][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.amount] or [CompensationEntry.range][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.range] ($10 per hour).
      ///
      /// For example, equity is described in [CompensationEntry.description][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.description]
      /// (for example, "1% - 2% equity vesting over 4 years, 1 year cliff") and
      /// value estimated in [CompensationEntry.amount][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.amount] or
      /// [CompensationEntry.range][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.range]. If no value estimate is possible, units are
      /// [CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED][google.cloud.talent.v4beta1.CompensationInfo.CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED] and then further
      /// clarified in [CompensationEntry.description][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.description] field.
      /// </summary>
      public enum CompensationType {
        /// <summary>
        /// Default value.
        /// </summary>
        [pbr::OriginalName("COMPENSATION_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Base compensation: Refers to the fixed amount of money paid to an
        /// employee by an employer in return for work performed. Base compensation
        /// does not include benefits, bonuses or any other potential compensation
        /// from an employer.
        /// </summary>
        [pbr::OriginalName("BASE")] Base = 1,
        /// <summary>
        /// Bonus.
        /// </summary>
        [pbr::OriginalName("BONUS")] Bonus = 2,
        /// <summary>
        /// Signing bonus.
        /// </summary>
        [pbr::OriginalName("SIGNING_BONUS")] SigningBonus = 3,
        /// <summary>
        /// Equity.
        /// </summary>
        [pbr::OriginalName("EQUITY")] Equity = 4,
        /// <summary>
        /// Profit sharing.
        /// </summary>
        [pbr::OriginalName("PROFIT_SHARING")] ProfitSharing = 5,
        /// <summary>
        /// Commission.
        /// </summary>
        [pbr::OriginalName("COMMISSIONS")] Commissions = 6,
        /// <summary>
        /// Tips.
        /// </summary>
        [pbr::OriginalName("TIPS")] Tips = 7,
        /// <summary>
        /// Other compensation type.
        /// </summary>
        [pbr::OriginalName("OTHER_COMPENSATION_TYPE")] OtherCompensationType = 8,
      }

      /// <summary>
      /// Pay frequency.
      /// </summary>
      public enum CompensationUnit {
        /// <summary>
        /// Default value.
        /// </summary>
        [pbr::OriginalName("COMPENSATION_UNIT_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Hourly.
        /// </summary>
        [pbr::OriginalName("HOURLY")] Hourly = 1,
        /// <summary>
        /// Daily.
        /// </summary>
        [pbr::OriginalName("DAILY")] Daily = 2,
        /// <summary>
        /// Weekly
        /// </summary>
        [pbr::OriginalName("WEEKLY")] Weekly = 3,
        /// <summary>
        /// Monthly.
        /// </summary>
        [pbr::OriginalName("MONTHLY")] Monthly = 4,
        /// <summary>
        /// Yearly.
        /// </summary>
        [pbr::OriginalName("YEARLY")] Yearly = 5,
        /// <summary>
        /// One time.
        /// </summary>
        [pbr::OriginalName("ONE_TIME")] OneTime = 6,
        /// <summary>
        /// Other compensation units.
        /// </summary>
        [pbr::OriginalName("OTHER_COMPENSATION_UNIT")] OtherCompensationUnit = 7,
      }

      /// <summary>
      /// A compensation entry that represents one component of compensation, such
      /// as base pay, bonus, or other compensation type.
      ///
      /// Annualization: One compensation entry can be annualized if
      /// - it contains valid [amount][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.amount] or [range][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.range].
      /// - and its [expected_units_per_year][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.expected_units_per_year] is set or can be derived.
      /// Its annualized range is determined as ([amount][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.amount] or [range][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.range]) times
      /// [expected_units_per_year][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.expected_units_per_year].
      /// </summary>
      public sealed partial class CompensationEntry : pb::IMessage<CompensationEntry>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CompensationEntry> _parser = new pb::MessageParser<CompensationEntry>(() => new CompensationEntry());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CompensationEntry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompensationEntry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompensationEntry(CompensationEntry other) : this() {
          type_ = other.type_;
          unit_ = other.unit_;
          description_ = other.description_;
          ExpectedUnitsPerYear = other.ExpectedUnitsPerYear;
          switch (other.CompensationAmountCase) {
            case CompensationAmountOneofCase.Amount:
              Amount = other.Amount.Clone();
              break;
            case CompensationAmountOneofCase.Range:
              Range = other.Range.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompensationEntry Clone() {
          return new CompensationEntry(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationType type_ = global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationType.Unspecified;
        /// <summary>
        /// Compensation type.
        ///
        /// Default is [CompensationType.COMPENSATION_TYPE_UNSPECIFIED][google.cloud.talent.v4beta1.CompensationInfo.CompensationType.COMPENSATION_TYPE_UNSPECIFIED].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "unit" field.</summary>
        public const int UnitFieldNumber = 2;
        private global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit unit_ = global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit.Unspecified;
        /// <summary>
        /// Frequency of the specified amount.
        ///
        /// Default is [CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED][google.cloud.talent.v4beta1.CompensationInfo.CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit Unit {
          get { return unit_; }
          set {
            unit_ = value;
          }
        }

        /// <summary>Field number for the "amount" field.</summary>
        public const int AmountFieldNumber = 3;
        /// <summary>
        /// Compensation amount.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Type.Money Amount {
          get { return compensationAmountCase_ == CompensationAmountOneofCase.Amount ? (global::Google.Type.Money) compensationAmount_ : null; }
          set {
            compensationAmount_ = value;
            compensationAmountCase_ = value == null ? CompensationAmountOneofCase.None : CompensationAmountOneofCase.Amount;
          }
        }

        /// <summary>Field number for the "range" field.</summary>
        public const int RangeFieldNumber = 4;
        /// <summary>
        /// Compensation range.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange Range {
          get { return compensationAmountCase_ == CompensationAmountOneofCase.Range ? (global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange) compensationAmount_ : null; }
          set {
            compensationAmount_ = value;
            compensationAmountCase_ = value == null ? CompensationAmountOneofCase.None : CompensationAmountOneofCase.Range;
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 5;
        private string description_ = "";
        /// <summary>
        /// Compensation description.  For example, could
        /// indicate equity terms or provide additional context to an estimated
        /// bonus.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "expected_units_per_year" field.</summary>
        public const int ExpectedUnitsPerYearFieldNumber = 6;
        private static readonly pb::FieldCodec<double?> _single_expectedUnitsPerYear_codec = pb::FieldCodec.ForStructWrapper<double>(50);
        private double? expectedUnitsPerYear_;
        /// <summary>
        /// Expected number of units paid each year. If not specified, when
        /// [Job.employment_types][google.cloud.talent.v4beta1.Job.employment_types] is FULLTIME, a default value is inferred
        /// based on [unit][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry.unit]. Default values:
        /// - HOURLY: 2080
        /// - DAILY: 260
        /// - WEEKLY: 52
        /// - MONTHLY: 12
        /// - ANNUAL: 1
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double? ExpectedUnitsPerYear {
          get { return expectedUnitsPerYear_; }
          set {
            expectedUnitsPerYear_ = value;
          }
        }


        private object compensationAmount_;
        /// <summary>Enum of possible cases for the "compensation_amount" oneof.</summary>
        public enum CompensationAmountOneofCase {
          None = 0,
          Amount = 3,
          Range = 4,
        }
        private CompensationAmountOneofCase compensationAmountCase_ = CompensationAmountOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompensationAmountOneofCase CompensationAmountCase {
          get { return compensationAmountCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearCompensationAmount() {
          compensationAmountCase_ = CompensationAmountOneofCase.None;
          compensationAmount_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CompensationEntry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CompensationEntry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Unit != other.Unit) return false;
          if (!object.Equals(Amount, other.Amount)) return false;
          if (!object.Equals(Range, other.Range)) return false;
          if (Description != other.Description) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(ExpectedUnitsPerYear, other.ExpectedUnitsPerYear)) return false;
          if (CompensationAmountCase != other.CompensationAmountCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationType.Unspecified) hash ^= Type.GetHashCode();
          if (Unit != global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit.Unspecified) hash ^= Unit.GetHashCode();
          if (compensationAmountCase_ == CompensationAmountOneofCase.Amount) hash ^= Amount.GetHashCode();
          if (compensationAmountCase_ == CompensationAmountOneofCase.Range) hash ^= Range.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (expectedUnitsPerYear_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(ExpectedUnitsPerYear);
          hash ^= (int) compensationAmountCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationType.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (Unit != global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Unit);
          }
          if (compensationAmountCase_ == CompensationAmountOneofCase.Amount) {
            output.WriteRawTag(26);
            output.WriteMessage(Amount);
          }
          if (compensationAmountCase_ == CompensationAmountOneofCase.Range) {
            output.WriteRawTag(34);
            output.WriteMessage(Range);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Description);
          }
          if (expectedUnitsPerYear_ != null) {
            _single_expectedUnitsPerYear_codec.WriteTagAndValue(output, ExpectedUnitsPerYear);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationType.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (Unit != global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Unit);
          }
          if (compensationAmountCase_ == CompensationAmountOneofCase.Amount) {
            output.WriteRawTag(26);
            output.WriteMessage(Amount);
          }
          if (compensationAmountCase_ == CompensationAmountOneofCase.Range) {
            output.WriteRawTag(34);
            output.WriteMessage(Range);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Description);
          }
          if (expectedUnitsPerYear_ != null) {
            _single_expectedUnitsPerYear_codec.WriteTagAndValue(ref output, ExpectedUnitsPerYear);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (Unit != global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Unit);
          }
          if (compensationAmountCase_ == CompensationAmountOneofCase.Amount) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
          }
          if (compensationAmountCase_ == CompensationAmountOneofCase.Range) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Range);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (expectedUnitsPerYear_ != null) {
            size += _single_expectedUnitsPerYear_codec.CalculateSizeWithTag(ExpectedUnitsPerYear);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CompensationEntry other) {
          if (other == null) {
            return;
          }
          if (other.Type != global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationType.Unspecified) {
            Type = other.Type;
          }
          if (other.Unit != global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit.Unspecified) {
            Unit = other.Unit;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.expectedUnitsPerYear_ != null) {
            if (expectedUnitsPerYear_ == null || other.ExpectedUnitsPerYear != 0D) {
              ExpectedUnitsPerYear = other.ExpectedUnitsPerYear;
            }
          }
          switch (other.CompensationAmountCase) {
            case CompensationAmountOneofCase.Amount:
              if (Amount == null) {
                Amount = new global::Google.Type.Money();
              }
              Amount.MergeFrom(other.Amount);
              break;
            case CompensationAmountOneofCase.Range:
              if (Range == null) {
                Range = new global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange();
              }
              Range.MergeFrom(other.Range);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = (global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationType) input.ReadEnum();
                break;
              }
              case 16: {
                Unit = (global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit) input.ReadEnum();
                break;
              }
              case 26: {
                global::Google.Type.Money subBuilder = new global::Google.Type.Money();
                if (compensationAmountCase_ == CompensationAmountOneofCase.Amount) {
                  subBuilder.MergeFrom(Amount);
                }
                input.ReadMessage(subBuilder);
                Amount = subBuilder;
                break;
              }
              case 34: {
                global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange subBuilder = new global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange();
                if (compensationAmountCase_ == CompensationAmountOneofCase.Range) {
                  subBuilder.MergeFrom(Range);
                }
                input.ReadMessage(subBuilder);
                Range = subBuilder;
                break;
              }
              case 42: {
                Description = input.ReadString();
                break;
              }
              case 50: {
                double? value = _single_expectedUnitsPerYear_codec.Read(input);
                if (expectedUnitsPerYear_ == null || value != 0D) {
                  ExpectedUnitsPerYear = value;
                }
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Type = (global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationType) input.ReadEnum();
                break;
              }
              case 16: {
                Unit = (global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit) input.ReadEnum();
                break;
              }
              case 26: {
                global::Google.Type.Money subBuilder = new global::Google.Type.Money();
                if (compensationAmountCase_ == CompensationAmountOneofCase.Amount) {
                  subBuilder.MergeFrom(Amount);
                }
                input.ReadMessage(subBuilder);
                Amount = subBuilder;
                break;
              }
              case 34: {
                global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange subBuilder = new global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange();
                if (compensationAmountCase_ == CompensationAmountOneofCase.Range) {
                  subBuilder.MergeFrom(Range);
                }
                input.ReadMessage(subBuilder);
                Range = subBuilder;
                break;
              }
              case 42: {
                Description = input.ReadString();
                break;
              }
              case 50: {
                double? value = _single_expectedUnitsPerYear_codec.Read(ref input);
                if (expectedUnitsPerYear_ == null || value != 0D) {
                  ExpectedUnitsPerYear = value;
                }
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Compensation range.
      /// </summary>
      public sealed partial class CompensationRange : pb::IMessage<CompensationRange>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CompensationRange> _parser = new pb::MessageParser<CompensationRange>(() => new CompensationRange());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CompensationRange> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompensationRange() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompensationRange(CompensationRange other) : this() {
          maxCompensation_ = other.maxCompensation_ != null ? other.maxCompensation_.Clone() : null;
          minCompensation_ = other.minCompensation_ != null ? other.minCompensation_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompensationRange Clone() {
          return new CompensationRange(this);
        }

        /// <summary>Field number for the "max_compensation" field.</summary>
        public const int MaxCompensationFieldNumber = 2;
        private global::Google.Type.Money maxCompensation_;
        /// <summary>
        /// The maximum amount of compensation. If left empty, the value is set
        /// to a maximal compensation value and the currency code is set to
        /// match the [currency code][google.type.Money.currency_code] of
        /// min_compensation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Type.Money MaxCompensation {
          get { return maxCompensation_; }
          set {
            maxCompensation_ = value;
          }
        }

        /// <summary>Field number for the "min_compensation" field.</summary>
        public const int MinCompensationFieldNumber = 1;
        private global::Google.Type.Money minCompensation_;
        /// <summary>
        /// The minimum amount of compensation. If left empty, the value is set
        /// to zero and the currency code is set to match the
        /// [currency code][google.type.Money.currency_code] of max_compensation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Type.Money MinCompensation {
          get { return minCompensation_; }
          set {
            minCompensation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CompensationRange);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CompensationRange other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(MaxCompensation, other.MaxCompensation)) return false;
          if (!object.Equals(MinCompensation, other.MinCompensation)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (maxCompensation_ != null) hash ^= MaxCompensation.GetHashCode();
          if (minCompensation_ != null) hash ^= MinCompensation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (minCompensation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(MinCompensation);
          }
          if (maxCompensation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(MaxCompensation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (minCompensation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(MinCompensation);
          }
          if (maxCompensation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(MaxCompensation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (maxCompensation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxCompensation);
          }
          if (minCompensation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinCompensation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CompensationRange other) {
          if (other == null) {
            return;
          }
          if (other.maxCompensation_ != null) {
            if (maxCompensation_ == null) {
              MaxCompensation = new global::Google.Type.Money();
            }
            MaxCompensation.MergeFrom(other.MaxCompensation);
          }
          if (other.minCompensation_ != null) {
            if (minCompensation_ == null) {
              MinCompensation = new global::Google.Type.Money();
            }
            MinCompensation.MergeFrom(other.MinCompensation);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (minCompensation_ == null) {
                  MinCompensation = new global::Google.Type.Money();
                }
                input.ReadMessage(MinCompensation);
                break;
              }
              case 18: {
                if (maxCompensation_ == null) {
                  MaxCompensation = new global::Google.Type.Money();
                }
                input.ReadMessage(MaxCompensation);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (minCompensation_ == null) {
                  MinCompensation = new global::Google.Type.Money();
                }
                input.ReadMessage(MinCompensation);
                break;
              }
              case 18: {
                if (maxCompensation_ == null) {
                  MaxCompensation = new global::Google.Type.Money();
                }
                input.ReadMessage(MaxCompensation);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Resource that represents a license or certification.
  /// </summary>
  public sealed partial class Certification : pb::IMessage<Certification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Certification> _parser = new pb::MessageParser<Certification>(() => new Certification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Certification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Certification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Certification(Certification other) : this() {
      displayName_ = other.displayName_;
      acquireDate_ = other.acquireDate_ != null ? other.acquireDate_.Clone() : null;
      expireDate_ = other.expireDate_ != null ? other.expireDate_.Clone() : null;
      authority_ = other.authority_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Certification Clone() {
      return new Certification(this);
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 1;
    private string displayName_ = "";
    /// <summary>
    /// Name of license or certification.
    ///
    /// Number of characters allowed is 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "acquire_date" field.</summary>
    public const int AcquireDateFieldNumber = 2;
    private global::Google.Type.Date acquireDate_;
    /// <summary>
    /// Acquisition date or effective date of license or certification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date AcquireDate {
      get { return acquireDate_; }
      set {
        acquireDate_ = value;
      }
    }

    /// <summary>Field number for the "expire_date" field.</summary>
    public const int ExpireDateFieldNumber = 3;
    private global::Google.Type.Date expireDate_;
    /// <summary>
    /// Expiration date of license of certification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date ExpireDate {
      get { return expireDate_; }
      set {
        expireDate_ = value;
      }
    }

    /// <summary>Field number for the "authority" field.</summary>
    public const int AuthorityFieldNumber = 4;
    private string authority_ = "";
    /// <summary>
    /// Authority of license, such as government.
    ///
    /// Number of characters allowed is 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Authority {
      get { return authority_; }
      set {
        authority_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// Description of license or certification.
    ///
    /// Number of characters allowed is 100,000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Certification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Certification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(AcquireDate, other.AcquireDate)) return false;
      if (!object.Equals(ExpireDate, other.ExpireDate)) return false;
      if (Authority != other.Authority) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (acquireDate_ != null) hash ^= AcquireDate.GetHashCode();
      if (expireDate_ != null) hash ^= ExpireDate.GetHashCode();
      if (Authority.Length != 0) hash ^= Authority.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (acquireDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AcquireDate);
      }
      if (expireDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpireDate);
      }
      if (Authority.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Authority);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (acquireDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AcquireDate);
      }
      if (expireDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpireDate);
      }
      if (Authority.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Authority);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (acquireDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AcquireDate);
      }
      if (expireDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireDate);
      }
      if (Authority.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Authority);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Certification other) {
      if (other == null) {
        return;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.acquireDate_ != null) {
        if (acquireDate_ == null) {
          AcquireDate = new global::Google.Type.Date();
        }
        AcquireDate.MergeFrom(other.AcquireDate);
      }
      if (other.expireDate_ != null) {
        if (expireDate_ == null) {
          ExpireDate = new global::Google.Type.Date();
        }
        ExpireDate.MergeFrom(other.ExpireDate);
      }
      if (other.Authority.Length != 0) {
        Authority = other.Authority;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            if (acquireDate_ == null) {
              AcquireDate = new global::Google.Type.Date();
            }
            input.ReadMessage(AcquireDate);
            break;
          }
          case 26: {
            if (expireDate_ == null) {
              ExpireDate = new global::Google.Type.Date();
            }
            input.ReadMessage(ExpireDate);
            break;
          }
          case 34: {
            Authority = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            if (acquireDate_ == null) {
              AcquireDate = new global::Google.Type.Date();
            }
            input.ReadMessage(AcquireDate);
            break;
          }
          case 26: {
            if (expireDate_ == null) {
              ExpireDate = new global::Google.Type.Date();
            }
            input.ReadMessage(ExpireDate);
            break;
          }
          case 34: {
            Authority = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Resource that represents a skill of a candidate.
  /// </summary>
  public sealed partial class Skill : pb::IMessage<Skill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Skill> _parser = new pb::MessageParser<Skill>(() => new Skill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill(Skill other) : this() {
      displayName_ = other.displayName_;
      lastUsedDate_ = other.lastUsedDate_ != null ? other.lastUsedDate_.Clone() : null;
      level_ = other.level_;
      context_ = other.context_;
      skillNameSnippet_ = other.skillNameSnippet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill Clone() {
      return new Skill(this);
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 1;
    private string displayName_ = "";
    /// <summary>
    /// Skill display name.
    ///
    /// For example, "Java", "Python".
    ///
    /// Number of characters allowed is 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_used_date" field.</summary>
    public const int LastUsedDateFieldNumber = 2;
    private global::Google.Type.Date lastUsedDate_;
    /// <summary>
    /// The last time this skill was used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date LastUsedDate {
      get { return lastUsedDate_; }
      set {
        lastUsedDate_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private global::Google.Cloud.Talent.V4Beta1.SkillProficiencyLevel level_ = global::Google.Cloud.Talent.V4Beta1.SkillProficiencyLevel.Unspecified;
    /// <summary>
    /// Skill proficiency level which indicates how proficient the candidate is at
    /// this skill.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.SkillProficiencyLevel Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 4;
    private string context_ = "";
    /// <summary>
    /// A paragraph describes context of this skill.
    ///
    /// Number of characters allowed is 100,000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Context {
      get { return context_; }
      set {
        context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skill_name_snippet" field.</summary>
    public const int SkillNameSnippetFieldNumber = 5;
    private string skillNameSnippet_ = "";
    /// <summary>
    /// Output only. Skill name snippet shows how the [display_name][google.cloud.talent.v4beta1.Skill.display_name] is related to a search
    /// query. It's empty if the [display_name][google.cloud.talent.v4beta1.Skill.display_name] isn't related to the search
    /// query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SkillNameSnippet {
      get { return skillNameSnippet_; }
      set {
        skillNameSnippet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(LastUsedDate, other.LastUsedDate)) return false;
      if (Level != other.Level) return false;
      if (Context != other.Context) return false;
      if (SkillNameSnippet != other.SkillNameSnippet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (lastUsedDate_ != null) hash ^= LastUsedDate.GetHashCode();
      if (Level != global::Google.Cloud.Talent.V4Beta1.SkillProficiencyLevel.Unspecified) hash ^= Level.GetHashCode();
      if (Context.Length != 0) hash ^= Context.GetHashCode();
      if (SkillNameSnippet.Length != 0) hash ^= SkillNameSnippet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (lastUsedDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LastUsedDate);
      }
      if (Level != global::Google.Cloud.Talent.V4Beta1.SkillProficiencyLevel.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Level);
      }
      if (Context.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Context);
      }
      if (SkillNameSnippet.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SkillNameSnippet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (lastUsedDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LastUsedDate);
      }
      if (Level != global::Google.Cloud.Talent.V4Beta1.SkillProficiencyLevel.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Level);
      }
      if (Context.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Context);
      }
      if (SkillNameSnippet.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SkillNameSnippet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (lastUsedDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUsedDate);
      }
      if (Level != global::Google.Cloud.Talent.V4Beta1.SkillProficiencyLevel.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (Context.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Context);
      }
      if (SkillNameSnippet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillNameSnippet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Skill other) {
      if (other == null) {
        return;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.lastUsedDate_ != null) {
        if (lastUsedDate_ == null) {
          LastUsedDate = new global::Google.Type.Date();
        }
        LastUsedDate.MergeFrom(other.LastUsedDate);
      }
      if (other.Level != global::Google.Cloud.Talent.V4Beta1.SkillProficiencyLevel.Unspecified) {
        Level = other.Level;
      }
      if (other.Context.Length != 0) {
        Context = other.Context;
      }
      if (other.SkillNameSnippet.Length != 0) {
        SkillNameSnippet = other.SkillNameSnippet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            if (lastUsedDate_ == null) {
              LastUsedDate = new global::Google.Type.Date();
            }
            input.ReadMessage(LastUsedDate);
            break;
          }
          case 24: {
            Level = (global::Google.Cloud.Talent.V4Beta1.SkillProficiencyLevel) input.ReadEnum();
            break;
          }
          case 34: {
            Context = input.ReadString();
            break;
          }
          case 42: {
            SkillNameSnippet = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            if (lastUsedDate_ == null) {
              LastUsedDate = new global::Google.Type.Date();
            }
            input.ReadMessage(LastUsedDate);
            break;
          }
          case 24: {
            Level = (global::Google.Cloud.Talent.V4Beta1.SkillProficiencyLevel) input.ReadEnum();
            break;
          }
          case 34: {
            Context = input.ReadString();
            break;
          }
          case 42: {
            SkillNameSnippet = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Details of an interview.
  /// </summary>
  public sealed partial class Interview : pb::IMessage<Interview>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Interview> _parser = new pb::MessageParser<Interview>(() => new Interview());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Interview> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interview() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interview(Interview other) : this() {
      rating_ = other.rating_ != null ? other.rating_.Clone() : null;
      outcome_ = other.outcome_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Interview Clone() {
      return new Interview(this);
    }

    /// <summary>Field number for the "rating" field.</summary>
    public const int RatingFieldNumber = 6;
    private global::Google.Cloud.Talent.V4Beta1.Rating rating_;
    /// <summary>
    /// The rating on this interview.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.Rating Rating {
      get { return rating_; }
      set {
        rating_ = value;
      }
    }

    /// <summary>Field number for the "outcome" field.</summary>
    public const int OutcomeFieldNumber = 7;
    private global::Google.Cloud.Talent.V4Beta1.Outcome outcome_ = global::Google.Cloud.Talent.V4Beta1.Outcome.Unspecified;
    /// <summary>
    /// Required. The overall decision resulting from this interview (positive, negative,
    /// nuetral).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.Outcome Outcome {
      get { return outcome_; }
      set {
        outcome_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Interview);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Interview other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rating, other.Rating)) return false;
      if (Outcome != other.Outcome) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rating_ != null) hash ^= Rating.GetHashCode();
      if (Outcome != global::Google.Cloud.Talent.V4Beta1.Outcome.Unspecified) hash ^= Outcome.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rating_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Rating);
      }
      if (Outcome != global::Google.Cloud.Talent.V4Beta1.Outcome.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Outcome);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rating_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Rating);
      }
      if (Outcome != global::Google.Cloud.Talent.V4Beta1.Outcome.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Outcome);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rating_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rating);
      }
      if (Outcome != global::Google.Cloud.Talent.V4Beta1.Outcome.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Outcome);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Interview other) {
      if (other == null) {
        return;
      }
      if (other.rating_ != null) {
        if (rating_ == null) {
          Rating = new global::Google.Cloud.Talent.V4Beta1.Rating();
        }
        Rating.MergeFrom(other.Rating);
      }
      if (other.Outcome != global::Google.Cloud.Talent.V4Beta1.Outcome.Unspecified) {
        Outcome = other.Outcome;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 50: {
            if (rating_ == null) {
              Rating = new global::Google.Cloud.Talent.V4Beta1.Rating();
            }
            input.ReadMessage(Rating);
            break;
          }
          case 56: {
            Outcome = (global::Google.Cloud.Talent.V4Beta1.Outcome) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 50: {
            if (rating_ == null) {
              Rating = new global::Google.Cloud.Talent.V4Beta1.Rating();
            }
            input.ReadMessage(Rating);
            break;
          }
          case 56: {
            Outcome = (global::Google.Cloud.Talent.V4Beta1.Outcome) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The details of the score received for an assessment or interview.
  /// </summary>
  public sealed partial class Rating : pb::IMessage<Rating>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Rating> _parser = new pb::MessageParser<Rating>(() => new Rating());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rating> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rating() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rating(Rating other) : this() {
      overall_ = other.overall_;
      min_ = other.min_;
      max_ = other.max_;
      interval_ = other.interval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rating Clone() {
      return new Rating(this);
    }

    /// <summary>Field number for the "overall" field.</summary>
    public const int OverallFieldNumber = 1;
    private double overall_;
    /// <summary>
    /// Overall score.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Overall {
      get { return overall_; }
      set {
        overall_ = value;
      }
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 2;
    private double min_;
    /// <summary>
    /// The minimum value for the score.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 3;
    private double max_;
    /// <summary>
    /// The maximum value for the score.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 4;
    private double interval_;
    /// <summary>
    /// The steps within the score (for example, interval = 1 max = 5
    /// min = 1 indicates that the score can be 1, 2, 3, 4, or 5)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rating);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rating other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Overall, other.Overall)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Min, other.Min)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Max, other.Max)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Interval, other.Interval)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Overall != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Overall);
      if (Min != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Min);
      if (Max != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Max);
      if (Interval != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Interval);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Overall != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Overall);
      }
      if (Min != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Min);
      }
      if (Max != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Max);
      }
      if (Interval != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Interval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Overall != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Overall);
      }
      if (Min != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Min);
      }
      if (Max != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Max);
      }
      if (Interval != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Interval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Overall != 0D) {
        size += 1 + 8;
      }
      if (Min != 0D) {
        size += 1 + 8;
      }
      if (Max != 0D) {
        size += 1 + 8;
      }
      if (Interval != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rating other) {
      if (other == null) {
        return;
      }
      if (other.Overall != 0D) {
        Overall = other.Overall;
      }
      if (other.Min != 0D) {
        Min = other.Min;
      }
      if (other.Max != 0D) {
        Max = other.Max;
      }
      if (other.Interval != 0D) {
        Interval = other.Interval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Overall = input.ReadDouble();
            break;
          }
          case 17: {
            Min = input.ReadDouble();
            break;
          }
          case 25: {
            Max = input.ReadDouble();
            break;
          }
          case 33: {
            Interval = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Overall = input.ReadDouble();
            break;
          }
          case 17: {
            Min = input.ReadDouble();
            break;
          }
          case 25: {
            Max = input.ReadDouble();
            break;
          }
          case 33: {
            Interval = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metadata used for long running operations returned by CTS batch APIs.
  /// It's used to replace [google.longrunning.Operation.metadata][google.longrunning.Operation.metadata].
  /// </summary>
  public sealed partial class BatchOperationMetadata : pb::IMessage<BatchOperationMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchOperationMetadata> _parser = new pb::MessageParser<BatchOperationMetadata>(() => new BatchOperationMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchOperationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchOperationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchOperationMetadata(BatchOperationMetadata other) : this() {
      state_ = other.state_;
      stateDescription_ = other.stateDescription_;
      successCount_ = other.successCount_;
      failureCount_ = other.failureCount_;
      totalCount_ = other.totalCount_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchOperationMetadata Clone() {
      return new BatchOperationMetadata(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata.Types.State state_ = global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata.Types.State.Unspecified;
    /// <summary>
    /// The state of a long running operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "state_description" field.</summary>
    public const int StateDescriptionFieldNumber = 2;
    private string stateDescription_ = "";
    /// <summary>
    /// More detailed information about operation state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StateDescription {
      get { return stateDescription_; }
      set {
        stateDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "success_count" field.</summary>
    public const int SuccessCountFieldNumber = 3;
    private int successCount_;
    /// <summary>
    /// Count of successful item(s) inside an operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SuccessCount {
      get { return successCount_; }
      set {
        successCount_ = value;
      }
    }

    /// <summary>Field number for the "failure_count" field.</summary>
    public const int FailureCountFieldNumber = 4;
    private int failureCount_;
    /// <summary>
    /// Count of failed item(s) inside an operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FailureCount {
      get { return failureCount_; }
      set {
        failureCount_ = value;
      }
    }

    /// <summary>Field number for the "total_count" field.</summary>
    public const int TotalCountFieldNumber = 5;
    private int totalCount_;
    /// <summary>
    /// Count of total item(s) inside an operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalCount {
      get { return totalCount_; }
      set {
        totalCount_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// The time when the batch operation is created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// The time when the batch operation status is updated. The metadata and the
    /// [update_time][google.cloud.talent.v4beta1.BatchOperationMetadata.update_time] is refreshed every minute otherwise cached data is
    /// returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The time when the batch operation is finished and
    /// [google.longrunning.Operation.done][google.longrunning.Operation.done] is set to `true`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchOperationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchOperationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (StateDescription != other.StateDescription) return false;
      if (SuccessCount != other.SuccessCount) return false;
      if (FailureCount != other.FailureCount) return false;
      if (TotalCount != other.TotalCount) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (StateDescription.Length != 0) hash ^= StateDescription.GetHashCode();
      if (SuccessCount != 0) hash ^= SuccessCount.GetHashCode();
      if (FailureCount != 0) hash ^= FailureCount.GetHashCode();
      if (TotalCount != 0) hash ^= TotalCount.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata.Types.State.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (StateDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StateDescription);
      }
      if (SuccessCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SuccessCount);
      }
      if (FailureCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FailureCount);
      }
      if (TotalCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalCount);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(UpdateTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata.Types.State.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (StateDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StateDescription);
      }
      if (SuccessCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SuccessCount);
      }
      if (FailureCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FailureCount);
      }
      if (TotalCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalCount);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(UpdateTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (StateDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateDescription);
      }
      if (SuccessCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuccessCount);
      }
      if (FailureCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FailureCount);
      }
      if (TotalCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalCount);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchOperationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.State != global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.StateDescription.Length != 0) {
        StateDescription = other.StateDescription;
      }
      if (other.SuccessCount != 0) {
        SuccessCount = other.SuccessCount;
      }
      if (other.FailureCount != 0) {
        FailureCount = other.FailureCount;
      }
      if (other.TotalCount != 0) {
        TotalCount = other.TotalCount;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata.Types.State) input.ReadEnum();
            break;
          }
          case 18: {
            StateDescription = input.ReadString();
            break;
          }
          case 24: {
            SuccessCount = input.ReadInt32();
            break;
          }
          case 32: {
            FailureCount = input.ReadInt32();
            break;
          }
          case 40: {
            TotalCount = input.ReadInt32();
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 66: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = (global::Google.Cloud.Talent.V4Beta1.BatchOperationMetadata.Types.State) input.ReadEnum();
            break;
          }
          case 18: {
            StateDescription = input.ReadString();
            break;
          }
          case 24: {
            SuccessCount = input.ReadInt32();
            break;
          }
          case 32: {
            FailureCount = input.ReadInt32();
            break;
          }
          case 40: {
            TotalCount = input.ReadInt32();
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 66: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BatchOperationMetadata message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum State {
        /// <summary>
        /// Default value.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The batch operation is being prepared for processing.
        /// </summary>
        [pbr::OriginalName("INITIALIZING")] Initializing = 1,
        /// <summary>
        /// The batch operation is actively being processed.
        /// </summary>
        [pbr::OriginalName("PROCESSING")] Processing = 2,
        /// <summary>
        /// The batch operation is processed, and at least one item has been
        /// successfully processed.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 3,
        /// <summary>
        /// The batch operation is done and no item has been successfully processed.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 4,
        /// <summary>
        /// The batch operation is in the process of cancelling after
        /// [google.longrunning.Operations.CancelOperation][google.longrunning.Operations.CancelOperation] is called.
        /// </summary>
        [pbr::OriginalName("CANCELLING")] Cancelling = 5,
        /// <summary>
        /// The batch operation is done after
        /// [google.longrunning.Operations.CancelOperation][google.longrunning.Operations.CancelOperation] is called. Any items
        /// processed before cancelling are returned in the response.
        /// </summary>
        [pbr::OriginalName("CANCELLED")] Cancelled = 6,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
