# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/cloud/securitycenter/settings/v1beta1/securitycenter_settings_service.proto for package 'Google.Cloud.SecurityCenter.Settings.V1beta1'
# Original file comments:
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/cloud/securitycenter/settings/v1beta1/securitycenter_settings_service_pb'

module Google
  module Cloud
    module SecurityCenter
      module Settings
        module V1beta1
          module SecurityCenterSettingsService
            # ## API Overview
            #
            # The SecurityCenterSettingsService is a sub-api of
            # `securitycenter.googleapis.com`. The service provides methods to manage
            # Security Center Settings, and Component Settings for GCP organizations,
            # folders, projects, and clusters.
            class Service

              include ::GRPC::GenericService

              self.marshal_class_method = :encode
              self.unmarshal_class_method = :decode
              self.service_name = 'google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService'

              # Retrieves the organizations service account, if it exists, otherwise it
              # creates the organization service account. This API is idempotent and
              # will only create a service account once. On subsequent calls it will
              # return the previously created service account.  SHA, SCC and CTD Infra
              # Automation will use this SA.  This SA will not have any permissions when
              # created.  The UI will provision this via IAM or the user will using
              # their own internal process. This API only creates SAs on the organization.
              # Folders are not supported and projects will use per-project SAs associated
              # with APIs enabled on a project. This API will be called by the UX
              # onboarding workflow.
              rpc :GetServiceAccount, ::Google::Cloud::SecurityCenter::Settings::V1beta1::GetServiceAccountRequest, ::Google::Cloud::SecurityCenter::Settings::V1beta1::ServiceAccount
              # Gets the Settings.
              rpc :GetSettings, ::Google::Cloud::SecurityCenter::Settings::V1beta1::GetSettingsRequest, ::Google::Cloud::SecurityCenter::Settings::V1beta1::Settings
              # Updates the Settings.
              rpc :UpdateSettings, ::Google::Cloud::SecurityCenter::Settings::V1beta1::UpdateSettingsRequest, ::Google::Cloud::SecurityCenter::Settings::V1beta1::Settings
              # Reset the organization, folder or project's settings and return
              # the settings of just that resource to the default.
              #
              # Settings are present at the organization, folder, project, and cluster
              # levels. Using Reset on a sub-organization level will remove that resource's
              # override and result in the parent's settings being used (eg: if Reset on a
              # cluster, project settings will be used).
              #
              # Using Reset on organization will remove the override that was set and
              # result in default settings being used.
              rpc :ResetSettings, ::Google::Cloud::SecurityCenter::Settings::V1beta1::ResetSettingsRequest, ::Google::Protobuf::Empty
              # Gets a list of settings.
              rpc :BatchGetSettings, ::Google::Cloud::SecurityCenter::Settings::V1beta1::BatchGetSettingsRequest, ::Google::Cloud::SecurityCenter::Settings::V1beta1::BatchGetSettingsResponse
              # CalculateEffectiveSettings looks up all of the Security Center
              # Settings resources in the GCP resource hierarchy, and calculates the
              # effective settings on that resource by applying the following rules:
              #  * Settings provided closer to the target resource take precedence over
              #    those further away (e.g. folder will override organization level
              #    settings).
              #  * Product defaults can be overridden at org, folder, project, and cluster
              #  levels.
              #  * Detectors will be filtered out if they belong to a billing tier the
              #  customer
              #    has not configured.
              rpc :CalculateEffectiveSettings, ::Google::Cloud::SecurityCenter::Settings::V1beta1::CalculateEffectiveSettingsRequest, ::Google::Cloud::SecurityCenter::Settings::V1beta1::Settings
              # Gets a list of effective settings.
              rpc :BatchCalculateEffectiveSettings, ::Google::Cloud::SecurityCenter::Settings::V1beta1::BatchCalculateEffectiveSettingsRequest, ::Google::Cloud::SecurityCenter::Settings::V1beta1::BatchCalculateEffectiveSettingsResponse
              # Gets the Component Settings.
              rpc :GetComponentSettings, ::Google::Cloud::SecurityCenter::Settings::V1beta1::GetComponentSettingsRequest, ::Google::Cloud::SecurityCenter::Settings::V1beta1::ComponentSettings
              # Updates the Component Settings.
              rpc :UpdateComponentSettings, ::Google::Cloud::SecurityCenter::Settings::V1beta1::UpdateComponentSettingsRequest, ::Google::Cloud::SecurityCenter::Settings::V1beta1::ComponentSettings
              # Reset the organization, folder or project's component settings and return
              # the settings to the default. Settings are present at the
              # organization, folder and project levels. Using Reset for a folder or
              # project will remove the override that was set and result in the
              # organization-level settings being used.
              rpc :ResetComponentSettings, ::Google::Cloud::SecurityCenter::Settings::V1beta1::ResetComponentSettingsRequest, ::Google::Protobuf::Empty
              # Gets the Effective Component Settings.
              rpc :CalculateEffectiveComponentSettings, ::Google::Cloud::SecurityCenter::Settings::V1beta1::CalculateEffectiveComponentSettingsRequest, ::Google::Cloud::SecurityCenter::Settings::V1beta1::ComponentSettings
              # Retrieves an unordered list of available detectors.
              rpc :ListDetectors, ::Google::Cloud::SecurityCenter::Settings::V1beta1::ListDetectorsRequest, ::Google::Cloud::SecurityCenter::Settings::V1beta1::ListDetectorsResponse
              # Retrieves an unordered list of available SCC components.
              rpc :ListComponents, ::Google::Cloud::SecurityCenter::Settings::V1beta1::ListComponentsRequest, ::Google::Cloud::SecurityCenter::Settings::V1beta1::ListComponentsResponse
            end

            Stub = Service.rpc_stub_class
          end
        end
      end
    end
  end
end
