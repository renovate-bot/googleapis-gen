// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/securitycenter/v1/finding.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.SecurityCenter.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/securitycenter/v1/finding.proto</summary>
  public static partial class FindingReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/securitycenter/v1/finding.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FindingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixnb29nbGUvY2xvdWQvc2VjdXJpdHljZW50ZXIvdjEvZmluZGluZy5wcm90",
            "bxIeZ29vZ2xlLmNsb3VkLnNlY3VyaXR5Y2VudGVyLnYxGh9nb29nbGUvYXBp",
            "L2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnBy",
            "b3RvGi5nb29nbGUvY2xvdWQvc2VjdXJpdHljZW50ZXIvdjEvaW5kaWNhdG9y",
            "LnByb3RvGjNnb29nbGUvY2xvdWQvc2VjdXJpdHljZW50ZXIvdjEvc2VjdXJp",
            "dHlfbWFya3MucHJvdG8aMmdvb2dsZS9jbG91ZC9zZWN1cml0eWNlbnRlci92",
            "MS92dWxuZXJhYmlsaXR5LnByb3RvGhxnb29nbGUvcHJvdG9idWYvc3RydWN0",
            "LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhxnb29n",
            "bGUvYXBpL2Fubm90YXRpb25zLnByb3RvIokKCgdGaW5kaW5nEgwKBG5hbWUY",
            "ASABKAkSDgoGcGFyZW50GAIgASgJEhUKDXJlc291cmNlX25hbWUYAyABKAkS",
            "PAoFc3RhdGUYBCABKA4yLS5nb29nbGUuY2xvdWQuc2VjdXJpdHljZW50ZXIu",
            "djEuRmluZGluZy5TdGF0ZRIQCghjYXRlZ29yeRgFIAEoCRIUCgxleHRlcm5h",
            "bF91cmkYBiABKAkSWAoRc291cmNlX3Byb3BlcnRpZXMYByADKAsyPS5nb29n",
            "bGUuY2xvdWQuc2VjdXJpdHljZW50ZXIudjEuRmluZGluZy5Tb3VyY2VQcm9w",
            "ZXJ0aWVzRW50cnkSSgoOc2VjdXJpdHlfbWFya3MYCCABKAsyLS5nb29nbGUu",
            "Y2xvdWQuc2VjdXJpdHljZW50ZXIudjEuU2VjdXJpdHlNYXJrc0ID4EEDEi4K",
            "CmV2ZW50X3RpbWUYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "Ei8KC2NyZWF0ZV90aW1lGAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBJCCghzZXZlcml0eRgMIAEoDjIwLmdvb2dsZS5jbG91ZC5zZWN1cml0",
            "eWNlbnRlci52MS5GaW5kaW5nLlNldmVyaXR5EhYKDmNhbm9uaWNhbF9uYW1l",
            "GA4gASgJEksKDWZpbmRpbmdfY2xhc3MYESABKA4yNC5nb29nbGUuY2xvdWQu",
            "c2VjdXJpdHljZW50ZXIudjEuRmluZGluZy5GaW5kaW5nQ2xhc3MSPAoJaW5k",
            "aWNhdG9yGBIgASgLMikuZ29vZ2xlLmNsb3VkLnNlY3VyaXR5Y2VudGVyLnYx",
            "LkluZGljYXRvchJECg12dWxuZXJhYmlsaXR5GBQgASgLMi0uZ29vZ2xlLmNs",
            "b3VkLnNlY3VyaXR5Y2VudGVyLnYxLlZ1bG5lcmFiaWxpdHkaTwoVU291cmNl",
            "UHJvcGVydGllc0VudHJ5EgsKA2tleRgBIAEoCRIlCgV2YWx1ZRgCIAEoCzIW",
            "Lmdvb2dsZS5wcm90b2J1Zi5WYWx1ZToCOAEiOAoFU3RhdGUSFQoRU1RBVEVf",
            "VU5TUEVDSUZJRUQQABIKCgZBQ1RJVkUQARIMCghJTkFDVElWRRACIlEKCFNl",
            "dmVyaXR5EhgKFFNFVkVSSVRZX1VOU1BFQ0lGSUVEEAASDAoIQ1JJVElDQUwQ",
            "ARIICgRISUdIEAISCgoGTUVESVVNEAMSBwoDTE9XEAQicwoMRmluZGluZ0Ns",
            "YXNzEh0KGUZJTkRJTkdfQ0xBU1NfVU5TUEVDSUZJRUQQABIKCgZUSFJFQVQQ",
            "ARIRCg1WVUxORVJBQklMSVRZEAISFAoQTUlTQ09ORklHVVJBVElPThADEg8K",
            "C09CU0VSVkFUSU9OEAQ62wHqQdcBCiVzZWN1cml0eWNlbnRlci5nb29nbGVh",
            "cGlzLmNvbS9GaW5kaW5nEkBvcmdhbml6YXRpb25zL3tvcmdhbml6YXRpb259",
            "L3NvdXJjZXMve3NvdXJjZX0vZmluZGluZ3Mve2ZpbmRpbmd9EjRmb2xkZXJz",
            "L3tmb2xkZXJ9L3NvdXJjZXMve3NvdXJjZX0vZmluZGluZ3Mve2ZpbmRpbmd9",
            "EjZwcm9qZWN0cy97cHJvamVjdH0vc291cmNlcy97c291cmNlfS9maW5kaW5n",
            "cy97ZmluZGluZ31C2gEKImNvbS5nb29nbGUuY2xvdWQuc2VjdXJpdHljZW50",
            "ZXIudjFQAVpMZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBp",
            "cy9jbG91ZC9zZWN1cml0eWNlbnRlci92MTtzZWN1cml0eWNlbnRlcqoCHkdv",
            "b2dsZS5DbG91ZC5TZWN1cml0eUNlbnRlci5WMcoCHkdvb2dsZVxDbG91ZFxT",
            "ZWN1cml0eUNlbnRlclxWMeoCIUdvb2dsZTo6Q2xvdWQ6OlNlY3VyaXR5Q2Vu",
            "dGVyOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.SecurityCenter.V1.IndicatorReflection.Descriptor, global::Google.Cloud.SecurityCenter.V1.SecurityMarksReflection.Descriptor, global::Google.Cloud.SecurityCenter.V1.VulnerabilityReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.SecurityCenter.V1.Finding), global::Google.Cloud.SecurityCenter.V1.Finding.Parser, new[]{ "Name", "Parent", "ResourceName", "State", "Category", "ExternalUri", "SourceProperties", "SecurityMarks", "EventTime", "CreateTime", "Severity", "CanonicalName", "FindingClass", "Indicator", "Vulnerability" }, null, new[]{ typeof(global::Google.Cloud.SecurityCenter.V1.Finding.Types.State), typeof(global::Google.Cloud.SecurityCenter.V1.Finding.Types.Severity), typeof(global::Google.Cloud.SecurityCenter.V1.Finding.Types.FindingClass) }, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Security Command Center finding.
  ///
  /// A finding is a record of assessment data like security, risk, health, or
  /// privacy, that is ingested into Security Command Center for presentation,
  /// notification, analysis, policy testing, and enforcement. For example, a
  /// cross-site scripting (XSS) vulnerability in an App Engine application is a
  /// finding.
  /// </summary>
  public sealed partial class Finding : pb::IMessage<Finding>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Finding> _parser = new pb::MessageParser<Finding>(() => new Finding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Finding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.SecurityCenter.V1.FindingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Finding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Finding(Finding other) : this() {
      name_ = other.name_;
      parent_ = other.parent_;
      resourceName_ = other.resourceName_;
      state_ = other.state_;
      category_ = other.category_;
      externalUri_ = other.externalUri_;
      sourceProperties_ = other.sourceProperties_.Clone();
      securityMarks_ = other.securityMarks_ != null ? other.securityMarks_.Clone() : null;
      eventTime_ = other.eventTime_ != null ? other.eventTime_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      severity_ = other.severity_;
      canonicalName_ = other.canonicalName_;
      findingClass_ = other.findingClass_;
      indicator_ = other.indicator_ != null ? other.indicator_.Clone() : null;
      vulnerability_ = other.vulnerability_ != null ? other.vulnerability_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Finding Clone() {
      return new Finding(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The relative resource name of this finding. See:
    /// https://cloud.google.com/apis/design/resource_names#relative_resource_name
    /// Example:
    /// "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 2;
    private string parent_ = "";
    /// <summary>
    /// The relative resource name of the source the finding belongs to. See:
    /// https://cloud.google.com/apis/design/resource_names#relative_resource_name
    /// This field is immutable after creation time.
    /// For example:
    /// "organizations/{organization_id}/sources/{source_id}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 3;
    private string resourceName_ = "";
    /// <summary>
    /// For findings on Google Cloud resources, the full resource
    /// name of the Google Cloud resource this finding is for. See:
    /// https://cloud.google.com/apis/design/resource_names#full_resource_name
    /// When the finding is for a non-Google Cloud resource, the resourceName can
    /// be a customer or partner defined string. This field is immutable after
    /// creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private global::Google.Cloud.SecurityCenter.V1.Finding.Types.State state_ = global::Google.Cloud.SecurityCenter.V1.Finding.Types.State.Unspecified;
    /// <summary>
    /// The state of the finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Finding.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 5;
    private string category_ = "";
    /// <summary>
    /// The additional taxonomy group within findings from a given source.
    /// This field is immutable after creation time.
    /// Example: "XSS_FLASH_INJECTION"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "external_uri" field.</summary>
    public const int ExternalUriFieldNumber = 6;
    private string externalUri_ = "";
    /// <summary>
    /// The URI that, if available, points to a web page outside of Security
    /// Command Center where additional information about the finding can be found.
    /// This field is guaranteed to be either empty or a well formed URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalUri {
      get { return externalUri_; }
      set {
        externalUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_properties" field.</summary>
    public const int SourcePropertiesFieldNumber = 7;
    private static readonly pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Value>.Codec _map_sourceProperties_codec
        = new pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Value>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Protobuf.WellKnownTypes.Value.Parser), 58);
    private readonly pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Value> sourceProperties_ = new pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Value>();
    /// <summary>
    /// Source specific properties. These properties are managed by the source
    /// that writes the finding. The key names in the source_properties map must be
    /// between 1 and 255 characters, and must start with a letter and contain
    /// alphanumeric characters or underscores only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Protobuf.WellKnownTypes.Value> SourceProperties {
      get { return sourceProperties_; }
    }

    /// <summary>Field number for the "security_marks" field.</summary>
    public const int SecurityMarksFieldNumber = 8;
    private global::Google.Cloud.SecurityCenter.V1.SecurityMarks securityMarks_;
    /// <summary>
    /// Output only. User specified security marks. These marks are entirely
    /// managed by the user and come from the SecurityMarks resource that belongs
    /// to the finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.SecurityMarks SecurityMarks {
      get { return securityMarks_; }
      set {
        securityMarks_ = value;
      }
    }

    /// <summary>Field number for the "event_time" field.</summary>
    public const int EventTimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp eventTime_;
    /// <summary>
    /// The time at which the event took place, or when an update to the finding
    /// occurred. For example, if the finding represents an open firewall it would
    /// capture the time the detector believes the firewall became open. The
    /// accuracy is determined by the detector. If the finding were to be resolved
    /// afterward, this time would reflect when the finding was resolved. Must not
    /// be set to a value greater than the current timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EventTime {
      get { return eventTime_; }
      set {
        eventTime_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// The time at which the finding was created in Security Command Center.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "severity" field.</summary>
    public const int SeverityFieldNumber = 12;
    private global::Google.Cloud.SecurityCenter.V1.Finding.Types.Severity severity_ = global::Google.Cloud.SecurityCenter.V1.Finding.Types.Severity.Unspecified;
    /// <summary>
    /// The severity of the finding. This field is managed by the source that
    /// writes the finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Finding.Types.Severity Severity {
      get { return severity_; }
      set {
        severity_ = value;
      }
    }

    /// <summary>Field number for the "canonical_name" field.</summary>
    public const int CanonicalNameFieldNumber = 14;
    private string canonicalName_ = "";
    /// <summary>
    /// The canonical name of the finding. It's either
    /// "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}",
    /// "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or
    /// "projects/{project_number}/sources/{source_id}/findings/{finding_id}",
    /// depending on the closest CRM ancestor of the resource associated with the
    /// finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CanonicalName {
      get { return canonicalName_; }
      set {
        canonicalName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "finding_class" field.</summary>
    public const int FindingClassFieldNumber = 17;
    private global::Google.Cloud.SecurityCenter.V1.Finding.Types.FindingClass findingClass_ = global::Google.Cloud.SecurityCenter.V1.Finding.Types.FindingClass.Unspecified;
    /// <summary>
    /// The class of the finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Finding.Types.FindingClass FindingClass {
      get { return findingClass_; }
      set {
        findingClass_ = value;
      }
    }

    /// <summary>Field number for the "indicator" field.</summary>
    public const int IndicatorFieldNumber = 18;
    private global::Google.Cloud.SecurityCenter.V1.Indicator indicator_;
    /// <summary>
    /// Represents what's commonly known as an Indicator of compromise (IoC) in
    /// computer forensics. This is an artifact observed on a network or in an
    /// operating system that, with high confidence, indicates a computer
    /// intrusion.
    /// Reference: https://en.wikipedia.org/wiki/Indicator_of_compromise
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Indicator Indicator {
      get { return indicator_; }
      set {
        indicator_ = value;
      }
    }

    /// <summary>Field number for the "vulnerability" field.</summary>
    public const int VulnerabilityFieldNumber = 20;
    private global::Google.Cloud.SecurityCenter.V1.Vulnerability vulnerability_;
    /// <summary>
    /// Represents vulnerability specific fields like cve, cvss scores etc.
    /// CVE stands for Common Vulnerabilities and Exposures
    /// (https://cve.mitre.org/about/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Vulnerability Vulnerability {
      get { return vulnerability_; }
      set {
        vulnerability_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Finding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Finding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Parent != other.Parent) return false;
      if (ResourceName != other.ResourceName) return false;
      if (State != other.State) return false;
      if (Category != other.Category) return false;
      if (ExternalUri != other.ExternalUri) return false;
      if (!SourceProperties.Equals(other.SourceProperties)) return false;
      if (!object.Equals(SecurityMarks, other.SecurityMarks)) return false;
      if (!object.Equals(EventTime, other.EventTime)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (Severity != other.Severity) return false;
      if (CanonicalName != other.CanonicalName) return false;
      if (FindingClass != other.FindingClass) return false;
      if (!object.Equals(Indicator, other.Indicator)) return false;
      if (!object.Equals(Vulnerability, other.Vulnerability)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (State != global::Google.Cloud.SecurityCenter.V1.Finding.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (ExternalUri.Length != 0) hash ^= ExternalUri.GetHashCode();
      hash ^= SourceProperties.GetHashCode();
      if (securityMarks_ != null) hash ^= SecurityMarks.GetHashCode();
      if (eventTime_ != null) hash ^= EventTime.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (Severity != global::Google.Cloud.SecurityCenter.V1.Finding.Types.Severity.Unspecified) hash ^= Severity.GetHashCode();
      if (CanonicalName.Length != 0) hash ^= CanonicalName.GetHashCode();
      if (FindingClass != global::Google.Cloud.SecurityCenter.V1.Finding.Types.FindingClass.Unspecified) hash ^= FindingClass.GetHashCode();
      if (indicator_ != null) hash ^= Indicator.GetHashCode();
      if (vulnerability_ != null) hash ^= Vulnerability.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parent);
      }
      if (ResourceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResourceName);
      }
      if (State != global::Google.Cloud.SecurityCenter.V1.Finding.Types.State.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (Category.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Category);
      }
      if (ExternalUri.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ExternalUri);
      }
      sourceProperties_.WriteTo(output, _map_sourceProperties_codec);
      if (securityMarks_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SecurityMarks);
      }
      if (eventTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EventTime);
      }
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (Severity != global::Google.Cloud.SecurityCenter.V1.Finding.Types.Severity.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Severity);
      }
      if (CanonicalName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CanonicalName);
      }
      if (FindingClass != global::Google.Cloud.SecurityCenter.V1.Finding.Types.FindingClass.Unspecified) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) FindingClass);
      }
      if (indicator_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Indicator);
      }
      if (vulnerability_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Vulnerability);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parent);
      }
      if (ResourceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResourceName);
      }
      if (State != global::Google.Cloud.SecurityCenter.V1.Finding.Types.State.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (Category.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Category);
      }
      if (ExternalUri.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ExternalUri);
      }
      sourceProperties_.WriteTo(ref output, _map_sourceProperties_codec);
      if (securityMarks_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SecurityMarks);
      }
      if (eventTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EventTime);
      }
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (Severity != global::Google.Cloud.SecurityCenter.V1.Finding.Types.Severity.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Severity);
      }
      if (CanonicalName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CanonicalName);
      }
      if (FindingClass != global::Google.Cloud.SecurityCenter.V1.Finding.Types.FindingClass.Unspecified) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) FindingClass);
      }
      if (indicator_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Indicator);
      }
      if (vulnerability_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Vulnerability);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (State != global::Google.Cloud.SecurityCenter.V1.Finding.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (ExternalUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalUri);
      }
      size += sourceProperties_.CalculateSize(_map_sourceProperties_codec);
      if (securityMarks_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SecurityMarks);
      }
      if (eventTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventTime);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (Severity != global::Google.Cloud.SecurityCenter.V1.Finding.Types.Severity.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
      }
      if (CanonicalName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CanonicalName);
      }
      if (FindingClass != global::Google.Cloud.SecurityCenter.V1.Finding.Types.FindingClass.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FindingClass);
      }
      if (indicator_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Indicator);
      }
      if (vulnerability_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Vulnerability);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Finding other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.State != global::Google.Cloud.SecurityCenter.V1.Finding.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.ExternalUri.Length != 0) {
        ExternalUri = other.ExternalUri;
      }
      sourceProperties_.Add(other.sourceProperties_);
      if (other.securityMarks_ != null) {
        if (securityMarks_ == null) {
          SecurityMarks = new global::Google.Cloud.SecurityCenter.V1.SecurityMarks();
        }
        SecurityMarks.MergeFrom(other.SecurityMarks);
      }
      if (other.eventTime_ != null) {
        if (eventTime_ == null) {
          EventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EventTime.MergeFrom(other.EventTime);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.Severity != global::Google.Cloud.SecurityCenter.V1.Finding.Types.Severity.Unspecified) {
        Severity = other.Severity;
      }
      if (other.CanonicalName.Length != 0) {
        CanonicalName = other.CanonicalName;
      }
      if (other.FindingClass != global::Google.Cloud.SecurityCenter.V1.Finding.Types.FindingClass.Unspecified) {
        FindingClass = other.FindingClass;
      }
      if (other.indicator_ != null) {
        if (indicator_ == null) {
          Indicator = new global::Google.Cloud.SecurityCenter.V1.Indicator();
        }
        Indicator.MergeFrom(other.Indicator);
      }
      if (other.vulnerability_ != null) {
        if (vulnerability_ == null) {
          Vulnerability = new global::Google.Cloud.SecurityCenter.V1.Vulnerability();
        }
        Vulnerability.MergeFrom(other.Vulnerability);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Parent = input.ReadString();
            break;
          }
          case 26: {
            ResourceName = input.ReadString();
            break;
          }
          case 32: {
            State = (global::Google.Cloud.SecurityCenter.V1.Finding.Types.State) input.ReadEnum();
            break;
          }
          case 42: {
            Category = input.ReadString();
            break;
          }
          case 50: {
            ExternalUri = input.ReadString();
            break;
          }
          case 58: {
            sourceProperties_.AddEntriesFrom(input, _map_sourceProperties_codec);
            break;
          }
          case 66: {
            if (securityMarks_ == null) {
              SecurityMarks = new global::Google.Cloud.SecurityCenter.V1.SecurityMarks();
            }
            input.ReadMessage(SecurityMarks);
            break;
          }
          case 74: {
            if (eventTime_ == null) {
              EventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EventTime);
            break;
          }
          case 82: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 96: {
            Severity = (global::Google.Cloud.SecurityCenter.V1.Finding.Types.Severity) input.ReadEnum();
            break;
          }
          case 114: {
            CanonicalName = input.ReadString();
            break;
          }
          case 136: {
            FindingClass = (global::Google.Cloud.SecurityCenter.V1.Finding.Types.FindingClass) input.ReadEnum();
            break;
          }
          case 146: {
            if (indicator_ == null) {
              Indicator = new global::Google.Cloud.SecurityCenter.V1.Indicator();
            }
            input.ReadMessage(Indicator);
            break;
          }
          case 162: {
            if (vulnerability_ == null) {
              Vulnerability = new global::Google.Cloud.SecurityCenter.V1.Vulnerability();
            }
            input.ReadMessage(Vulnerability);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Parent = input.ReadString();
            break;
          }
          case 26: {
            ResourceName = input.ReadString();
            break;
          }
          case 32: {
            State = (global::Google.Cloud.SecurityCenter.V1.Finding.Types.State) input.ReadEnum();
            break;
          }
          case 42: {
            Category = input.ReadString();
            break;
          }
          case 50: {
            ExternalUri = input.ReadString();
            break;
          }
          case 58: {
            sourceProperties_.AddEntriesFrom(ref input, _map_sourceProperties_codec);
            break;
          }
          case 66: {
            if (securityMarks_ == null) {
              SecurityMarks = new global::Google.Cloud.SecurityCenter.V1.SecurityMarks();
            }
            input.ReadMessage(SecurityMarks);
            break;
          }
          case 74: {
            if (eventTime_ == null) {
              EventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EventTime);
            break;
          }
          case 82: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 96: {
            Severity = (global::Google.Cloud.SecurityCenter.V1.Finding.Types.Severity) input.ReadEnum();
            break;
          }
          case 114: {
            CanonicalName = input.ReadString();
            break;
          }
          case 136: {
            FindingClass = (global::Google.Cloud.SecurityCenter.V1.Finding.Types.FindingClass) input.ReadEnum();
            break;
          }
          case 146: {
            if (indicator_ == null) {
              Indicator = new global::Google.Cloud.SecurityCenter.V1.Indicator();
            }
            input.ReadMessage(Indicator);
            break;
          }
          case 162: {
            if (vulnerability_ == null) {
              Vulnerability = new global::Google.Cloud.SecurityCenter.V1.Vulnerability();
            }
            input.ReadMessage(Vulnerability);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Finding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The state of the finding.
      /// </summary>
      public enum State {
        /// <summary>
        /// Unspecified state.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The finding requires attention and has not been addressed yet.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 1,
        /// <summary>
        /// The finding has been fixed, triaged as a non-issue or otherwise addressed
        /// and is no longer active.
        /// </summary>
        [pbr::OriginalName("INACTIVE")] Inactive = 2,
      }

      /// <summary>
      /// The severity of the finding.
      /// </summary>
      public enum Severity {
        /// <summary>
        /// This value is used for findings when a source doesn't write a severity
        /// value.
        /// </summary>
        [pbr::OriginalName("SEVERITY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Vulnerability:
        /// A critical vulnerability is easily discoverable by an external actor,
        /// exploitable, and results in the direct ability to execute arbitrary code,
        /// exfiltrate data, and otherwise gain additional access and privileges to
        /// cloud resources and workloads. Examples include publicly accessible
        /// unprotected user data, public SSH access with weak or no passwords, etc.
        ///
        /// Threat:
        /// Indicates a threat that is able to access, modify, or delete data or
        /// execute unauthorized code within existing resources.
        /// </summary>
        [pbr::OriginalName("CRITICAL")] Critical = 1,
        /// <summary>
        /// Vulnerability:
        /// A high risk vulnerability can be easily discovered and exploited in
        /// combination with other vulnerabilities in order to gain direct access and
        /// the ability to execute arbitrary code, exfiltrate data, and otherwise
        /// gain additional access and privileges to cloud resources and workloads.
        /// An example is a database with weak or no passwords that is only
        /// accessible internally. This database could easily be compromised by an
        /// actor that had access to the internal network.
        ///
        /// Threat:
        /// Indicates a threat that is able to create new computational resources in
        /// an environment but not able to access data or execute code in existing
        /// resources.
        /// </summary>
        [pbr::OriginalName("HIGH")] High = 2,
        /// <summary>
        /// Vulnerability:
        /// A medium risk vulnerability could be used by an actor to gain access to
        /// resources or privileges that enable them to eventually (through multiple
        /// steps or a complex exploit) gain access and the ability to execute
        /// arbitrary code or exfiltrate data. An example is a service account with
        /// access to more projects than it should have. If an actor gains access to
        /// the service account, they could potentially use that access to manipulate
        /// a project the service account was not intended to.
        ///
        /// Threat:
        /// Indicates a threat that is able to cause operational impact but may not
        /// access data or execute unauthorized code.
        /// </summary>
        [pbr::OriginalName("MEDIUM")] Medium = 3,
        /// <summary>
        /// Vulnerability:
        /// A low risk vulnerability hampers a security organization’s ability to
        /// detect vulnerabilities or active threats in their deployment, or prevents
        /// the root cause investigation of security issues. An example is monitoring
        /// and logs being disabled for resource configurations and access.
        ///
        /// Threat:
        /// Indicates a threat that has obtained minimal access to an environment but
        /// is not able to access data, execute code, or create resources.
        /// </summary>
        [pbr::OriginalName("LOW")] Low = 4,
      }

      /// <summary>
      /// Represents what kind of Finding it is.
      /// </summary>
      public enum FindingClass {
        /// <summary>
        /// Unspecified finding class.
        /// </summary>
        [pbr::OriginalName("FINDING_CLASS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Describes unwanted or malicious activity.
        /// </summary>
        [pbr::OriginalName("THREAT")] Threat = 1,
        /// <summary>
        /// Describes a potential weakness in software that increases risk to
        /// Confidentiality &amp; Integrity &amp; Availability.
        /// </summary>
        [pbr::OriginalName("VULNERABILITY")] Vulnerability = 2,
        /// <summary>
        /// Describes a potential weakness in cloud resource/asset configuration that
        /// increases risk.
        /// </summary>
        [pbr::OriginalName("MISCONFIGURATION")] Misconfiguration = 3,
        /// <summary>
        /// Describes a security observation that is for informational purposes.
        /// </summary>
        [pbr::OriginalName("OBSERVATION")] Observation = 4,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
