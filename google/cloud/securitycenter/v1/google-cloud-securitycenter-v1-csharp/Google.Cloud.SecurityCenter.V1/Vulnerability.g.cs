// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/securitycenter/v1/vulnerability.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.SecurityCenter.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/securitycenter/v1/vulnerability.proto</summary>
  public static partial class VulnerabilityReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/securitycenter/v1/vulnerability.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VulnerabilityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJnb29nbGUvY2xvdWQvc2VjdXJpdHljZW50ZXIvdjEvdnVsbmVyYWJpbGl0",
            "eS5wcm90bxIeZ29vZ2xlLmNsb3VkLnNlY3VyaXR5Y2VudGVyLnYxGhxnb29n",
            "bGUvYXBpL2Fubm90YXRpb25zLnByb3RvIkEKDVZ1bG5lcmFiaWxpdHkSMAoD",
            "Y3ZlGAEgASgLMiMuZ29vZ2xlLmNsb3VkLnNlY3VyaXR5Y2VudGVyLnYxLkN2",
            "ZSKIAQoDQ3ZlEgoKAmlkGAEgASgJEj0KCnJlZmVyZW5jZXMYAiADKAsyKS5n",
            "b29nbGUuY2xvdWQuc2VjdXJpdHljZW50ZXIudjEuUmVmZXJlbmNlEjYKBmN2",
            "c3N2MxgDIAEoCzImLmdvb2dsZS5jbG91ZC5zZWN1cml0eWNlbnRlci52MS5D",
            "dnNzdjMiKAoJUmVmZXJlbmNlEg4KBnNvdXJjZRgBIAEoCRILCgN1cmkYAiAB",
            "KAkisQoKBkN2c3N2MxISCgpiYXNlX3Njb3JlGAEgASgBEkoKDWF0dGFja192",
            "ZWN0b3IYBSABKA4yMy5nb29nbGUuY2xvdWQuc2VjdXJpdHljZW50ZXIudjEu",
            "Q3Zzc3YzLkF0dGFja1ZlY3RvchJSChFhdHRhY2tfY29tcGxleGl0eRgGIAEo",
            "DjI3Lmdvb2dsZS5jbG91ZC5zZWN1cml0eWNlbnRlci52MS5DdnNzdjMuQXR0",
            "YWNrQ29tcGxleGl0eRJWChNwcml2aWxlZ2VzX3JlcXVpcmVkGAcgASgOMjku",
            "Z29vZ2xlLmNsb3VkLnNlY3VyaXR5Y2VudGVyLnYxLkN2c3N2My5Qcml2aWxl",
            "Z2VzUmVxdWlyZWQSUAoQdXNlcl9pbnRlcmFjdGlvbhgIIAEoDjI2Lmdvb2ds",
            "ZS5jbG91ZC5zZWN1cml0eWNlbnRlci52MS5DdnNzdjMuVXNlckludGVyYWN0",
            "aW9uEjsKBXNjb3BlGAkgASgOMiwuZ29vZ2xlLmNsb3VkLnNlY3VyaXR5Y2Vu",
            "dGVyLnYxLkN2c3N2My5TY29wZRJNChZjb25maWRlbnRpYWxpdHlfaW1wYWN0",
            "GAogASgOMi0uZ29vZ2xlLmNsb3VkLnNlY3VyaXR5Y2VudGVyLnYxLkN2c3N2",
            "My5JbXBhY3QSRwoQaW50ZWdyaXR5X2ltcGFjdBgLIAEoDjItLmdvb2dsZS5j",
            "bG91ZC5zZWN1cml0eWNlbnRlci52MS5DdnNzdjMuSW1wYWN0EkoKE2F2YWls",
            "YWJpbGl0eV9pbXBhY3QYDCABKA4yLS5nb29nbGUuY2xvdWQuc2VjdXJpdHlj",
            "ZW50ZXIudjEuQ3Zzc3YzLkltcGFjdCKZAQoMQXR0YWNrVmVjdG9yEh0KGUFU",
            "VEFDS19WRUNUT1JfVU5TUEVDSUZJRUQQABIZChVBVFRBQ0tfVkVDVE9SX05F",
            "VFdPUksQARIaChZBVFRBQ0tfVkVDVE9SX0FESkFDRU5UEAISFwoTQVRUQUNL",
            "X1ZFQ1RPUl9MT0NBTBADEhoKFkFUVEFDS19WRUNUT1JfUEhZU0lDQUwQBCJs",
            "ChBBdHRhY2tDb21wbGV4aXR5EiEKHUFUVEFDS19DT01QTEVYSVRZX1VOU1BF",
            "Q0lGSUVEEAASGQoVQVRUQUNLX0NPTVBMRVhJVFlfTE9XEAESGgoWQVRUQUNL",
            "X0NPTVBMRVhJVFlfSElHSBACIpIBChJQcml2aWxlZ2VzUmVxdWlyZWQSIwof",
            "UFJJVklMRUdFU19SRVFVSVJFRF9VTlNQRUNJRklFRBAAEhwKGFBSSVZJTEVH",
            "RVNfUkVRVUlSRURfTk9ORRABEhsKF1BSSVZJTEVHRVNfUkVRVUlSRURfTE9X",
            "EAISHAoYUFJJVklMRUdFU19SRVFVSVJFRF9ISUdIEAMibQoPVXNlckludGVy",
            "YWN0aW9uEiAKHFVTRVJfSU5URVJBQ1RJT05fVU5TUEVDSUZJRUQQABIZChVV",
            "U0VSX0lOVEVSQUNUSU9OX05PTkUQARIdChlVU0VSX0lOVEVSQUNUSU9OX1JF",
            "UVVJUkVEEAIiRgoFU2NvcGUSFQoRU0NPUEVfVU5TUEVDSUZJRUQQABITCg9T",
            "Q09QRV9VTkNIQU5HRUQQARIRCg1TQ09QRV9DSEFOR0VEEAIiUgoGSW1wYWN0",
            "EhYKEklNUEFDVF9VTlNQRUNJRklFRBAAEg8KC0lNUEFDVF9ISUdIEAESDgoK",
            "SU1QQUNUX0xPVxACEg8KC0lNUEFDVF9OT05FEANC7gEKImNvbS5nb29nbGUu",
            "Y2xvdWQuc2VjdXJpdHljZW50ZXIudjFCElZ1bG5lcmFiaWxpdHlQcm90b1AB",
            "Wkxnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Nsb3Vk",
            "L3NlY3VyaXR5Y2VudGVyL3YxO3NlY3VyaXR5Y2VudGVyqgIeR29vZ2xlLkNs",
            "b3VkLlNlY3VyaXR5Q2VudGVyLlYxygIeR29vZ2xlXENsb3VkXFNlY3VyaXR5",
            "Q2VudGVyXFYx6gIhR29vZ2xlOjpDbG91ZDo6U2VjdXJpdHlDZW50ZXI6OlYx",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.SecurityCenter.V1.Vulnerability), global::Google.Cloud.SecurityCenter.V1.Vulnerability.Parser, new[]{ "Cve" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.SecurityCenter.V1.Cve), global::Google.Cloud.SecurityCenter.V1.Cve.Parser, new[]{ "Id", "References", "Cvssv3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.SecurityCenter.V1.Reference), global::Google.Cloud.SecurityCenter.V1.Reference.Parser, new[]{ "Source", "Uri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.SecurityCenter.V1.Cvssv3), global::Google.Cloud.SecurityCenter.V1.Cvssv3.Parser, new[]{ "BaseScore", "AttackVector", "AttackComplexity", "PrivilegesRequired", "UserInteraction", "Scope", "ConfidentialityImpact", "IntegrityImpact", "AvailabilityImpact" }, null, new[]{ typeof(global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackVector), typeof(global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackComplexity), typeof(global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.PrivilegesRequired), typeof(global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.UserInteraction), typeof(global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Scope), typeof(global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Refers to common vulnerability fields e.g. cve, cvss, cwe etc.
  /// </summary>
  public sealed partial class Vulnerability : pb::IMessage<Vulnerability>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Vulnerability> _parser = new pb::MessageParser<Vulnerability>(() => new Vulnerability());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vulnerability> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.SecurityCenter.V1.VulnerabilityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vulnerability() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vulnerability(Vulnerability other) : this() {
      cve_ = other.cve_ != null ? other.cve_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vulnerability Clone() {
      return new Vulnerability(this);
    }

    /// <summary>Field number for the "cve" field.</summary>
    public const int CveFieldNumber = 1;
    private global::Google.Cloud.SecurityCenter.V1.Cve cve_;
    /// <summary>
    /// CVE stands for Common Vulnerabilities and Exposures
    /// (https://cve.mitre.org/about/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Cve Cve {
      get { return cve_; }
      set {
        cve_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vulnerability);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vulnerability other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Cve, other.Cve)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cve_ != null) hash ^= Cve.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cve_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cve_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cve_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cve);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vulnerability other) {
      if (other == null) {
        return;
      }
      if (other.cve_ != null) {
        if (cve_ == null) {
          Cve = new global::Google.Cloud.SecurityCenter.V1.Cve();
        }
        Cve.MergeFrom(other.Cve);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cve_ == null) {
              Cve = new global::Google.Cloud.SecurityCenter.V1.Cve();
            }
            input.ReadMessage(Cve);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cve_ == null) {
              Cve = new global::Google.Cloud.SecurityCenter.V1.Cve();
            }
            input.ReadMessage(Cve);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CVE stands for Common Vulnerabilities and Exposures.
  /// More information: https://cve.mitre.org
  /// </summary>
  public sealed partial class Cve : pb::IMessage<Cve>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cve> _parser = new pb::MessageParser<Cve>(() => new Cve());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cve> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.SecurityCenter.V1.VulnerabilityReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cve() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cve(Cve other) : this() {
      id_ = other.id_;
      references_ = other.references_.Clone();
      cvssv3_ = other.cvssv3_ != null ? other.cvssv3_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cve Clone() {
      return new Cve(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The unique identifier for the vulnerability. e.g. CVE-2021-34527
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "references" field.</summary>
    public const int ReferencesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.SecurityCenter.V1.Reference> _repeated_references_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.SecurityCenter.V1.Reference.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.SecurityCenter.V1.Reference> references_ = new pbc::RepeatedField<global::Google.Cloud.SecurityCenter.V1.Reference>();
    /// <summary>
    /// Additional information about the CVE.
    /// e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.SecurityCenter.V1.Reference> References {
      get { return references_; }
    }

    /// <summary>Field number for the "cvssv3" field.</summary>
    public const int Cvssv3FieldNumber = 3;
    private global::Google.Cloud.SecurityCenter.V1.Cvssv3 cvssv3_;
    /// <summary>
    /// Describe Common Vulnerability Scoring System specified at
    /// https://www.first.org/cvss/v3.1/specification-document
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Cvssv3 Cvssv3 {
      get { return cvssv3_; }
      set {
        cvssv3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cve);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cve other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!references_.Equals(other.references_)) return false;
      if (!object.Equals(Cvssv3, other.Cvssv3)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= references_.GetHashCode();
      if (cvssv3_ != null) hash ^= Cvssv3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      references_.WriteTo(output, _repeated_references_codec);
      if (cvssv3_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cvssv3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      references_.WriteTo(ref output, _repeated_references_codec);
      if (cvssv3_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cvssv3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += references_.CalculateSize(_repeated_references_codec);
      if (cvssv3_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cvssv3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cve other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      references_.Add(other.references_);
      if (other.cvssv3_ != null) {
        if (cvssv3_ == null) {
          Cvssv3 = new global::Google.Cloud.SecurityCenter.V1.Cvssv3();
        }
        Cvssv3.MergeFrom(other.Cvssv3);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            references_.AddEntriesFrom(input, _repeated_references_codec);
            break;
          }
          case 26: {
            if (cvssv3_ == null) {
              Cvssv3 = new global::Google.Cloud.SecurityCenter.V1.Cvssv3();
            }
            input.ReadMessage(Cvssv3);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            references_.AddEntriesFrom(ref input, _repeated_references_codec);
            break;
          }
          case 26: {
            if (cvssv3_ == null) {
              Cvssv3 = new global::Google.Cloud.SecurityCenter.V1.Cvssv3();
            }
            input.ReadMessage(Cvssv3);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Additional Links
  /// </summary>
  public sealed partial class Reference : pb::IMessage<Reference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Reference> _parser = new pb::MessageParser<Reference>(() => new Reference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Reference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.SecurityCenter.V1.VulnerabilityReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reference(Reference other) : this() {
      source_ = other.source_;
      uri_ = other.uri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reference Clone() {
      return new Reference(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private string source_ = "";
    /// <summary>
    /// Source of the reference e.g. NVD
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 2;
    private string uri_ = "";
    /// <summary>
    /// Uri for the mentioned source e.g.
    /// https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Reference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Reference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Source != other.Source) return false;
      if (Uri != other.Uri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Source.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Source);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Source.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Source);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Reference other) {
      if (other == null) {
        return;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Source = input.ReadString();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Source = input.ReadString();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Common Vulnerability Scoring System version 3.
  /// </summary>
  public sealed partial class Cvssv3 : pb::IMessage<Cvssv3>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cvssv3> _parser = new pb::MessageParser<Cvssv3>(() => new Cvssv3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cvssv3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.SecurityCenter.V1.VulnerabilityReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cvssv3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cvssv3(Cvssv3 other) : this() {
      baseScore_ = other.baseScore_;
      attackVector_ = other.attackVector_;
      attackComplexity_ = other.attackComplexity_;
      privilegesRequired_ = other.privilegesRequired_;
      userInteraction_ = other.userInteraction_;
      scope_ = other.scope_;
      confidentialityImpact_ = other.confidentialityImpact_;
      integrityImpact_ = other.integrityImpact_;
      availabilityImpact_ = other.availabilityImpact_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cvssv3 Clone() {
      return new Cvssv3(this);
    }

    /// <summary>Field number for the "base_score" field.</summary>
    public const int BaseScoreFieldNumber = 1;
    private double baseScore_;
    /// <summary>
    /// The base score is a function of the base metric scores.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BaseScore {
      get { return baseScore_; }
      set {
        baseScore_ = value;
      }
    }

    /// <summary>Field number for the "attack_vector" field.</summary>
    public const int AttackVectorFieldNumber = 5;
    private global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackVector attackVector_ = global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackVector.Unspecified;
    /// <summary>
    /// Base Metrics
    /// Represents the intrinsic characteristics of a vulnerability that are
    /// constant over time and across user environments.
    /// This metric reflects the context by which vulnerability exploitation is
    /// possible.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackVector AttackVector {
      get { return attackVector_; }
      set {
        attackVector_ = value;
      }
    }

    /// <summary>Field number for the "attack_complexity" field.</summary>
    public const int AttackComplexityFieldNumber = 6;
    private global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackComplexity attackComplexity_ = global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackComplexity.Unspecified;
    /// <summary>
    /// This metric describes the conditions beyond the attacker's control that
    /// must exist in order to exploit the vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackComplexity AttackComplexity {
      get { return attackComplexity_; }
      set {
        attackComplexity_ = value;
      }
    }

    /// <summary>Field number for the "privileges_required" field.</summary>
    public const int PrivilegesRequiredFieldNumber = 7;
    private global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.PrivilegesRequired privilegesRequired_ = global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.PrivilegesRequired.Unspecified;
    /// <summary>
    /// This metric describes the level of privileges an attacker must possess
    /// before successfully exploiting the vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.PrivilegesRequired PrivilegesRequired {
      get { return privilegesRequired_; }
      set {
        privilegesRequired_ = value;
      }
    }

    /// <summary>Field number for the "user_interaction" field.</summary>
    public const int UserInteractionFieldNumber = 8;
    private global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.UserInteraction userInteraction_ = global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.UserInteraction.Unspecified;
    /// <summary>
    /// This metric captures the requirement for a human user, other than the
    /// attacker, to participate in the successful compromise of the vulnerable
    /// component.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.UserInteraction UserInteraction {
      get { return userInteraction_; }
      set {
        userInteraction_ = value;
      }
    }

    /// <summary>Field number for the "scope" field.</summary>
    public const int ScopeFieldNumber = 9;
    private global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Scope scope_ = global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Scope.Unspecified;
    /// <summary>
    /// The Scope metric captures whether a vulnerability in one vulnerable
    /// component impacts resources in components beyond its security scope.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Scope Scope {
      get { return scope_; }
      set {
        scope_ = value;
      }
    }

    /// <summary>Field number for the "confidentiality_impact" field.</summary>
    public const int ConfidentialityImpactFieldNumber = 10;
    private global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact confidentialityImpact_ = global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified;
    /// <summary>
    /// This metric measures the impact to the confidentiality of the information
    /// resources managed by a software component due to a successfully exploited
    /// vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact ConfidentialityImpact {
      get { return confidentialityImpact_; }
      set {
        confidentialityImpact_ = value;
      }
    }

    /// <summary>Field number for the "integrity_impact" field.</summary>
    public const int IntegrityImpactFieldNumber = 11;
    private global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact integrityImpact_ = global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified;
    /// <summary>
    /// This metric measures the impact to integrity of a successfully exploited
    /// vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact IntegrityImpact {
      get { return integrityImpact_; }
      set {
        integrityImpact_ = value;
      }
    }

    /// <summary>Field number for the "availability_impact" field.</summary>
    public const int AvailabilityImpactFieldNumber = 12;
    private global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact availabilityImpact_ = global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified;
    /// <summary>
    /// This metric measures the impact to the availability of the impacted
    /// component resulting from a successfully exploited vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact AvailabilityImpact {
      get { return availabilityImpact_; }
      set {
        availabilityImpact_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cvssv3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cvssv3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BaseScore, other.BaseScore)) return false;
      if (AttackVector != other.AttackVector) return false;
      if (AttackComplexity != other.AttackComplexity) return false;
      if (PrivilegesRequired != other.PrivilegesRequired) return false;
      if (UserInteraction != other.UserInteraction) return false;
      if (Scope != other.Scope) return false;
      if (ConfidentialityImpact != other.ConfidentialityImpact) return false;
      if (IntegrityImpact != other.IntegrityImpact) return false;
      if (AvailabilityImpact != other.AvailabilityImpact) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BaseScore != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BaseScore);
      if (AttackVector != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackVector.Unspecified) hash ^= AttackVector.GetHashCode();
      if (AttackComplexity != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackComplexity.Unspecified) hash ^= AttackComplexity.GetHashCode();
      if (PrivilegesRequired != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.PrivilegesRequired.Unspecified) hash ^= PrivilegesRequired.GetHashCode();
      if (UserInteraction != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.UserInteraction.Unspecified) hash ^= UserInteraction.GetHashCode();
      if (Scope != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Scope.Unspecified) hash ^= Scope.GetHashCode();
      if (ConfidentialityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) hash ^= ConfidentialityImpact.GetHashCode();
      if (IntegrityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) hash ^= IntegrityImpact.GetHashCode();
      if (AvailabilityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) hash ^= AvailabilityImpact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BaseScore != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(BaseScore);
      }
      if (AttackVector != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackVector.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AttackVector);
      }
      if (AttackComplexity != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackComplexity.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) AttackComplexity);
      }
      if (PrivilegesRequired != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.PrivilegesRequired.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) PrivilegesRequired);
      }
      if (UserInteraction != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.UserInteraction.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) UserInteraction);
      }
      if (Scope != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Scope.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Scope);
      }
      if (ConfidentialityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ConfidentialityImpact);
      }
      if (IntegrityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) {
        output.WriteRawTag(88);
        output.WriteEnum((int) IntegrityImpact);
      }
      if (AvailabilityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) AvailabilityImpact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BaseScore != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(BaseScore);
      }
      if (AttackVector != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackVector.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AttackVector);
      }
      if (AttackComplexity != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackComplexity.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) AttackComplexity);
      }
      if (PrivilegesRequired != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.PrivilegesRequired.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) PrivilegesRequired);
      }
      if (UserInteraction != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.UserInteraction.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) UserInteraction);
      }
      if (Scope != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Scope.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Scope);
      }
      if (ConfidentialityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ConfidentialityImpact);
      }
      if (IntegrityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) {
        output.WriteRawTag(88);
        output.WriteEnum((int) IntegrityImpact);
      }
      if (AvailabilityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) AvailabilityImpact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BaseScore != 0D) {
        size += 1 + 8;
      }
      if (AttackVector != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackVector.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AttackVector);
      }
      if (AttackComplexity != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackComplexity.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AttackComplexity);
      }
      if (PrivilegesRequired != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.PrivilegesRequired.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PrivilegesRequired);
      }
      if (UserInteraction != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.UserInteraction.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UserInteraction);
      }
      if (Scope != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Scope.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Scope);
      }
      if (ConfidentialityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ConfidentialityImpact);
      }
      if (IntegrityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IntegrityImpact);
      }
      if (AvailabilityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AvailabilityImpact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cvssv3 other) {
      if (other == null) {
        return;
      }
      if (other.BaseScore != 0D) {
        BaseScore = other.BaseScore;
      }
      if (other.AttackVector != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackVector.Unspecified) {
        AttackVector = other.AttackVector;
      }
      if (other.AttackComplexity != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackComplexity.Unspecified) {
        AttackComplexity = other.AttackComplexity;
      }
      if (other.PrivilegesRequired != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.PrivilegesRequired.Unspecified) {
        PrivilegesRequired = other.PrivilegesRequired;
      }
      if (other.UserInteraction != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.UserInteraction.Unspecified) {
        UserInteraction = other.UserInteraction;
      }
      if (other.Scope != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Scope.Unspecified) {
        Scope = other.Scope;
      }
      if (other.ConfidentialityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) {
        ConfidentialityImpact = other.ConfidentialityImpact;
      }
      if (other.IntegrityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) {
        IntegrityImpact = other.IntegrityImpact;
      }
      if (other.AvailabilityImpact != global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact.Unspecified) {
        AvailabilityImpact = other.AvailabilityImpact;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            BaseScore = input.ReadDouble();
            break;
          }
          case 40: {
            AttackVector = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackVector) input.ReadEnum();
            break;
          }
          case 48: {
            AttackComplexity = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackComplexity) input.ReadEnum();
            break;
          }
          case 56: {
            PrivilegesRequired = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.PrivilegesRequired) input.ReadEnum();
            break;
          }
          case 64: {
            UserInteraction = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.UserInteraction) input.ReadEnum();
            break;
          }
          case 72: {
            Scope = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Scope) input.ReadEnum();
            break;
          }
          case 80: {
            ConfidentialityImpact = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact) input.ReadEnum();
            break;
          }
          case 88: {
            IntegrityImpact = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact) input.ReadEnum();
            break;
          }
          case 96: {
            AvailabilityImpact = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            BaseScore = input.ReadDouble();
            break;
          }
          case 40: {
            AttackVector = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackVector) input.ReadEnum();
            break;
          }
          case 48: {
            AttackComplexity = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.AttackComplexity) input.ReadEnum();
            break;
          }
          case 56: {
            PrivilegesRequired = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.PrivilegesRequired) input.ReadEnum();
            break;
          }
          case 64: {
            UserInteraction = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.UserInteraction) input.ReadEnum();
            break;
          }
          case 72: {
            Scope = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Scope) input.ReadEnum();
            break;
          }
          case 80: {
            ConfidentialityImpact = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact) input.ReadEnum();
            break;
          }
          case 88: {
            IntegrityImpact = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact) input.ReadEnum();
            break;
          }
          case 96: {
            AvailabilityImpact = (global::Google.Cloud.SecurityCenter.V1.Cvssv3.Types.Impact) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Cvssv3 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// This metric reflects the context by which vulnerability exploitation is
      /// possible.
      /// </summary>
      public enum AttackVector {
        /// <summary>
        /// Invalid value.
        /// </summary>
        [pbr::OriginalName("ATTACK_VECTOR_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The vulnerable component is bound to the network stack and the set of
        /// possible attackers extends beyond the other options listed below, up to
        /// and including the entire Internet.
        /// </summary>
        [pbr::OriginalName("ATTACK_VECTOR_NETWORK")] Network = 1,
        /// <summary>
        /// The vulnerable component is bound to the network stack, but the attack is
        /// limited at the protocol level to a logically adjacent topology.
        /// </summary>
        [pbr::OriginalName("ATTACK_VECTOR_ADJACENT")] Adjacent = 2,
        /// <summary>
        /// The vulnerable component is not bound to the network stack and the
        /// attacker's path is via read/write/execute capabilities.
        /// </summary>
        [pbr::OriginalName("ATTACK_VECTOR_LOCAL")] Local = 3,
        /// <summary>
        /// The attack requires the attacker to physically touch or manipulate the
        /// vulnerable component.
        /// </summary>
        [pbr::OriginalName("ATTACK_VECTOR_PHYSICAL")] Physical = 4,
      }

      /// <summary>
      /// This metric describes the conditions beyond the attacker's control that
      /// must exist in order to exploit the vulnerability.
      /// </summary>
      public enum AttackComplexity {
        /// <summary>
        /// Invalid value.
        /// </summary>
        [pbr::OriginalName("ATTACK_COMPLEXITY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Specialized access conditions or extenuating circumstances do not exist.
        /// An attacker can expect repeatable success when attacking the vulnerable
        /// component.
        /// </summary>
        [pbr::OriginalName("ATTACK_COMPLEXITY_LOW")] Low = 1,
        /// <summary>
        /// A successful attack depends on conditions beyond the attacker's control.
        /// That is, a successful attack cannot be accomplished at will, but requires
        /// the attacker to invest in some measurable amount of effort in preparation
        /// or execution against the vulnerable component before a successful attack
        /// can be expected.
        /// </summary>
        [pbr::OriginalName("ATTACK_COMPLEXITY_HIGH")] High = 2,
      }

      /// <summary>
      /// This metric describes the level of privileges an attacker must possess
      /// before successfully exploiting the vulnerability.
      /// </summary>
      public enum PrivilegesRequired {
        /// <summary>
        /// Invalid value.
        /// </summary>
        [pbr::OriginalName("PRIVILEGES_REQUIRED_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The attacker is unauthorized prior to attack, and therefore does not
        /// require any access to settings or files of the vulnerable system to
        /// carry out an attack.
        /// </summary>
        [pbr::OriginalName("PRIVILEGES_REQUIRED_NONE")] None = 1,
        /// <summary>
        /// The attacker requires privileges that provide basic user capabilities
        /// that could normally affect only settings and files owned by a user.
        /// Alternatively, an attacker with Low privileges has the ability to access
        /// only non-sensitive resources.
        /// </summary>
        [pbr::OriginalName("PRIVILEGES_REQUIRED_LOW")] Low = 2,
        /// <summary>
        /// The attacker requires privileges that provide significant (e.g.,
        /// administrative) control over the vulnerable component allowing access to
        /// component-wide settings and files.
        /// </summary>
        [pbr::OriginalName("PRIVILEGES_REQUIRED_HIGH")] High = 3,
      }

      /// <summary>
      /// This metric captures the requirement for a human user, other than the
      /// attacker, to participate in the successful compromise of the vulnerable
      /// component.
      /// </summary>
      public enum UserInteraction {
        /// <summary>
        /// Invalid value.
        /// </summary>
        [pbr::OriginalName("USER_INTERACTION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The vulnerable system can be exploited without interaction from any user.
        /// </summary>
        [pbr::OriginalName("USER_INTERACTION_NONE")] None = 1,
        /// <summary>
        /// Successful exploitation of this vulnerability requires a user to take
        /// some action before the vulnerability can be exploited.
        /// </summary>
        [pbr::OriginalName("USER_INTERACTION_REQUIRED")] Required = 2,
      }

      /// <summary>
      /// The Scope metric captures whether a vulnerability in one vulnerable
      /// component impacts resources in components beyond its security scope.
      /// </summary>
      public enum Scope {
        /// <summary>
        /// Invalid value.
        /// </summary>
        [pbr::OriginalName("SCOPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// An exploited vulnerability can only affect resources managed by the same
        /// security authority.
        /// </summary>
        [pbr::OriginalName("SCOPE_UNCHANGED")] Unchanged = 1,
        /// <summary>
        /// An exploited vulnerability can affect resources beyond the security scope
        /// managed by the security authority of the vulnerable component.
        /// </summary>
        [pbr::OriginalName("SCOPE_CHANGED")] Changed = 2,
      }

      /// <summary>
      /// The Impact metrics capture the effects of a successfully exploited
      /// vulnerability on the component that suffers the worst outcome that is most
      /// directly and predictably associated with the attack.
      /// </summary>
      public enum Impact {
        /// <summary>
        /// Invalid value.
        /// </summary>
        [pbr::OriginalName("IMPACT_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// High impact.
        /// </summary>
        [pbr::OriginalName("IMPACT_HIGH")] High = 1,
        /// <summary>
        /// Low impact.
        /// </summary>
        [pbr::OriginalName("IMPACT_LOW")] Low = 2,
        /// <summary>
        /// No impact.
        /// </summary>
        [pbr::OriginalName("IMPACT_NONE")] None = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
