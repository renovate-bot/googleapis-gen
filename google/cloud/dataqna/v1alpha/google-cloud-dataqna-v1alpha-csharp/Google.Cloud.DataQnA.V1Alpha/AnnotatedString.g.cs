// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/dataqna/v1alpha/annotated_string.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.DataQnA.V1Alpha {

  /// <summary>Holder for reflection information generated from google/cloud/dataqna/v1alpha/annotated_string.proto</summary>
  public static partial class AnnotatedStringReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/dataqna/v1alpha/annotated_string.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AnnotatedStringReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNnb29nbGUvY2xvdWQvZGF0YXFuYS92MWFscGhhL2Fubm90YXRlZF9zdHJp",
            "bmcucHJvdG8SHGdvb2dsZS5jbG91ZC5kYXRhcW5hLnYxYWxwaGEimQMKD0Fu",
            "bm90YXRlZFN0cmluZxIWCg50ZXh0X2Zvcm1hdHRlZBgBIAEoCRIWCg5odG1s",
            "X2Zvcm1hdHRlZBgCIAEoCRJNCgdtYXJrdXBzGAMgAygLMjwuZ29vZ2xlLmNs",
            "b3VkLmRhdGFxbmEudjFhbHBoYS5Bbm5vdGF0ZWRTdHJpbmcuU2VtYW50aWNN",
            "YXJrdXAaigEKDlNlbWFudGljTWFya3VwEk4KBHR5cGUYASABKA4yQC5nb29n",
            "bGUuY2xvdWQuZGF0YXFuYS52MWFscGhhLkFubm90YXRlZFN0cmluZy5TZW1h",
            "bnRpY01hcmt1cFR5cGUSGAoQc3RhcnRfY2hhcl9pbmRleBgCIAEoBRIOCgZs",
            "ZW5ndGgYAyABKAUiegoSU2VtYW50aWNNYXJrdXBUeXBlEhsKF01BUktVUF9U",
            "WVBFX1VOU1BFQ0lGSUVEEAASCgoGTUVUUklDEAESDQoJRElNRU5TSU9OEAIS",
            "CgoGRklMVEVSEAMSCgoGVU5VU0VEEAQSCwoHQkxPQ0tFRBAFEgcKA1JPVxAG",
            "Qt8BCiBjb20uZ29vZ2xlLmNsb3VkLmRhdGFxbmEudjFhbHBoYUIUQW5ub3Rh",
            "dGVkU3RyaW5nUHJvdG9QAVpDZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8v",
            "Z29vZ2xlYXBpcy9jbG91ZC9kYXRhcW5hL3YxYWxwaGE7ZGF0YXFuYaoCHEdv",
            "b2dsZS5DbG91ZC5EYXRhUW5BLlYxQWxwaGHKAhxHb29nbGVcQ2xvdWRcRGF0",
            "YVFuQVxWMWFscGhh6gIfR29vZ2xlOjpDbG91ZDo6RGF0YVFuQTo6VjFhbHBo",
            "YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString), global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Parser, new[]{ "TextFormatted", "HtmlFormatted", "Markups" }, null, new[]{ typeof(global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkupType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkup), global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkup.Parser, new[]{ "Type", "StartCharIndex", "Length" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Describes string annotation from both semantic and formatting perspectives.
  /// Example:
  ///
  /// User Query:
  ///
  ///   top countries by population in Africa
  ///
  ///   0   4         14 17         28 31    37
  ///
  /// Table Data:
  ///
  /// + "country" - dimension
  /// + "population" - metric
  /// + "Africa" - value in the "continent" column
  ///
  /// text_formatted = `"top countries by population in Africa"`
  ///
  /// html_formatted =
  ///   `"top &lt;b>countries&lt;/b> by &lt;b>population&lt;/b> in &lt;i>Africa&lt;/i>"`
  ///
  /// ```
  /// markups = [
  ///   {DIMENSION, 4, 12}, // 'countries'
  ///   {METRIC, 17, 26}, // 'population'
  ///   {FILTER, 31, 36}  // 'Africa'
  /// ]
  /// ```
  ///
  /// Note that html formattings for 'DIMENSION' and 'METRIC' are the same, while
  /// semantic markups are different.
  /// </summary>
  public sealed partial class AnnotatedString : pb::IMessage<AnnotatedString>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnnotatedString> _parser = new pb::MessageParser<AnnotatedString>(() => new AnnotatedString());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnotatedString> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataQnA.V1Alpha.AnnotatedStringReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotatedString() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotatedString(AnnotatedString other) : this() {
      textFormatted_ = other.textFormatted_;
      htmlFormatted_ = other.htmlFormatted_;
      markups_ = other.markups_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotatedString Clone() {
      return new AnnotatedString(this);
    }

    /// <summary>Field number for the "text_formatted" field.</summary>
    public const int TextFormattedFieldNumber = 1;
    private string textFormatted_ = "";
    /// <summary>
    /// Text version of the string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TextFormatted {
      get { return textFormatted_; }
      set {
        textFormatted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "html_formatted" field.</summary>
    public const int HtmlFormattedFieldNumber = 2;
    private string htmlFormatted_ = "";
    /// <summary>
    /// HTML version of the string annotation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HtmlFormatted {
      get { return htmlFormatted_; }
      set {
        htmlFormatted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "markups" field.</summary>
    public const int MarkupsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkup> _repeated_markups_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkup.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkup> markups_ = new pbc::RepeatedField<global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkup>();
    /// <summary>
    /// Semantic version of the string annotation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkup> Markups {
      get { return markups_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnotatedString);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnotatedString other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TextFormatted != other.TextFormatted) return false;
      if (HtmlFormatted != other.HtmlFormatted) return false;
      if(!markups_.Equals(other.markups_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TextFormatted.Length != 0) hash ^= TextFormatted.GetHashCode();
      if (HtmlFormatted.Length != 0) hash ^= HtmlFormatted.GetHashCode();
      hash ^= markups_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TextFormatted.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TextFormatted);
      }
      if (HtmlFormatted.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HtmlFormatted);
      }
      markups_.WriteTo(output, _repeated_markups_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TextFormatted.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TextFormatted);
      }
      if (HtmlFormatted.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HtmlFormatted);
      }
      markups_.WriteTo(ref output, _repeated_markups_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TextFormatted.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextFormatted);
      }
      if (HtmlFormatted.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HtmlFormatted);
      }
      size += markups_.CalculateSize(_repeated_markups_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnotatedString other) {
      if (other == null) {
        return;
      }
      if (other.TextFormatted.Length != 0) {
        TextFormatted = other.TextFormatted;
      }
      if (other.HtmlFormatted.Length != 0) {
        HtmlFormatted = other.HtmlFormatted;
      }
      markups_.Add(other.markups_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TextFormatted = input.ReadString();
            break;
          }
          case 18: {
            HtmlFormatted = input.ReadString();
            break;
          }
          case 26: {
            markups_.AddEntriesFrom(input, _repeated_markups_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TextFormatted = input.ReadString();
            break;
          }
          case 18: {
            HtmlFormatted = input.ReadString();
            break;
          }
          case 26: {
            markups_.AddEntriesFrom(ref input, _repeated_markups_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AnnotatedString message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Semantic markup types.
      /// </summary>
      public enum SemanticMarkupType {
        /// <summary>
        /// No markup type was specified.
        /// </summary>
        [pbr::OriginalName("MARKUP_TYPE_UNSPECIFIED")] MarkupTypeUnspecified = 0,
        /// <summary>
        /// Markup for a substring denoting a metric.
        /// </summary>
        [pbr::OriginalName("METRIC")] Metric = 1,
        /// <summary>
        /// Markup for a substring denoting a dimension.
        /// </summary>
        [pbr::OriginalName("DIMENSION")] Dimension = 2,
        /// <summary>
        /// Markup for a substring denoting a filter.
        /// </summary>
        [pbr::OriginalName("FILTER")] Filter = 3,
        /// <summary>
        /// Markup for an unused substring.
        /// </summary>
        [pbr::OriginalName("UNUSED")] Unused = 4,
        /// <summary>
        /// Markup for a substring containing blocked phrases.
        /// </summary>
        [pbr::OriginalName("BLOCKED")] Blocked = 5,
        /// <summary>
        /// Markup for a substring that contains terms for row.
        /// </summary>
        [pbr::OriginalName("ROW")] Row = 6,
      }

      /// <summary>
      /// Semantic markup denotes a substring (by index and length) with markup
      /// information.
      /// </summary>
      public sealed partial class SemanticMarkup : pb::IMessage<SemanticMarkup>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SemanticMarkup> _parser = new pb::MessageParser<SemanticMarkup>(() => new SemanticMarkup());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SemanticMarkup> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SemanticMarkup() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SemanticMarkup(SemanticMarkup other) : this() {
          type_ = other.type_;
          startCharIndex_ = other.startCharIndex_;
          length_ = other.length_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SemanticMarkup Clone() {
          return new SemanticMarkup(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkupType type_ = global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkupType.MarkupTypeUnspecified;
        /// <summary>
        /// The semantic type of the markup substring.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkupType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "start_char_index" field.</summary>
        public const int StartCharIndexFieldNumber = 2;
        private int startCharIndex_;
        /// <summary>
        /// Unicode character index of the query.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int StartCharIndex {
          get { return startCharIndex_; }
          set {
            startCharIndex_ = value;
          }
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 3;
        private int length_;
        /// <summary>
        /// The length (number of unicode characters) of the markup substring.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Length {
          get { return length_; }
          set {
            length_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SemanticMarkup);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SemanticMarkup other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (StartCharIndex != other.StartCharIndex) return false;
          if (Length != other.Length) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkupType.MarkupTypeUnspecified) hash ^= Type.GetHashCode();
          if (StartCharIndex != 0) hash ^= StartCharIndex.GetHashCode();
          if (Length != 0) hash ^= Length.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkupType.MarkupTypeUnspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (StartCharIndex != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(StartCharIndex);
          }
          if (Length != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Length);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkupType.MarkupTypeUnspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (StartCharIndex != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(StartCharIndex);
          }
          if (Length != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Length);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkupType.MarkupTypeUnspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (StartCharIndex != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartCharIndex);
          }
          if (Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SemanticMarkup other) {
          if (other == null) {
            return;
          }
          if (other.Type != global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkupType.MarkupTypeUnspecified) {
            Type = other.Type;
          }
          if (other.StartCharIndex != 0) {
            StartCharIndex = other.StartCharIndex;
          }
          if (other.Length != 0) {
            Length = other.Length;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = (global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkupType) input.ReadEnum();
                break;
              }
              case 16: {
                StartCharIndex = input.ReadInt32();
                break;
              }
              case 24: {
                Length = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Type = (global::Google.Cloud.DataQnA.V1Alpha.AnnotatedString.Types.SemanticMarkupType) input.ReadEnum();
                break;
              }
              case 16: {
                StartCharIndex = input.ReadInt32();
                break;
              }
              case 24: {
                Length = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
