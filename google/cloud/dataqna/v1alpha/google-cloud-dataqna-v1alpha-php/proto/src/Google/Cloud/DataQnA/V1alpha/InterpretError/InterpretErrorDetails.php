<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataqna/v1alpha/question.proto

namespace Google\Cloud\DataQnA\V1alpha\InterpretError;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details on interpretation failure.
 *
 * Generated from protobuf message <code>google.cloud.dataqna.v1alpha.InterpretError.InterpretErrorDetails</code>
 */
class InterpretErrorDetails extends \Google\Protobuf\Internal\Message
{
    /**
     * Populated if parts of the query are unsupported.
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.InterpretError.InterpretUnsupportedDetails unsupported_details = 1;</code>
     */
    protected $unsupported_details = null;
    /**
     * Populated if the query is incomplete.
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.InterpretError.InterpretIncompleteQueryDetails incomplete_query_details = 2;</code>
     */
    protected $incomplete_query_details = null;
    /**
     * Populated if the query was too ambiguous.
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.InterpretError.InterpretAmbiguityDetails ambiguity_details = 3;</code>
     */
    protected $ambiguity_details = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\DataQnA\V1alpha\InterpretError\InterpretUnsupportedDetails $unsupported_details
     *           Populated if parts of the query are unsupported.
     *     @type \Google\Cloud\DataQnA\V1alpha\InterpretError\InterpretIncompleteQueryDetails $incomplete_query_details
     *           Populated if the query is incomplete.
     *     @type \Google\Cloud\DataQnA\V1alpha\InterpretError\InterpretAmbiguityDetails $ambiguity_details
     *           Populated if the query was too ambiguous.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataqna\V1Alpha\Question::initOnce();
        parent::__construct($data);
    }

    /**
     * Populated if parts of the query are unsupported.
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.InterpretError.InterpretUnsupportedDetails unsupported_details = 1;</code>
     * @return \Google\Cloud\DataQnA\V1alpha\InterpretError\InterpretUnsupportedDetails|null
     */
    public function getUnsupportedDetails()
    {
        return $this->unsupported_details;
    }

    public function hasUnsupportedDetails()
    {
        return isset($this->unsupported_details);
    }

    public function clearUnsupportedDetails()
    {
        unset($this->unsupported_details);
    }

    /**
     * Populated if parts of the query are unsupported.
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.InterpretError.InterpretUnsupportedDetails unsupported_details = 1;</code>
     * @param \Google\Cloud\DataQnA\V1alpha\InterpretError\InterpretUnsupportedDetails $var
     * @return $this
     */
    public function setUnsupportedDetails($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DataQnA\V1alpha\InterpretError\InterpretUnsupportedDetails::class);
        $this->unsupported_details = $var;

        return $this;
    }

    /**
     * Populated if the query is incomplete.
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.InterpretError.InterpretIncompleteQueryDetails incomplete_query_details = 2;</code>
     * @return \Google\Cloud\DataQnA\V1alpha\InterpretError\InterpretIncompleteQueryDetails|null
     */
    public function getIncompleteQueryDetails()
    {
        return $this->incomplete_query_details;
    }

    public function hasIncompleteQueryDetails()
    {
        return isset($this->incomplete_query_details);
    }

    public function clearIncompleteQueryDetails()
    {
        unset($this->incomplete_query_details);
    }

    /**
     * Populated if the query is incomplete.
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.InterpretError.InterpretIncompleteQueryDetails incomplete_query_details = 2;</code>
     * @param \Google\Cloud\DataQnA\V1alpha\InterpretError\InterpretIncompleteQueryDetails $var
     * @return $this
     */
    public function setIncompleteQueryDetails($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DataQnA\V1alpha\InterpretError\InterpretIncompleteQueryDetails::class);
        $this->incomplete_query_details = $var;

        return $this;
    }

    /**
     * Populated if the query was too ambiguous.
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.InterpretError.InterpretAmbiguityDetails ambiguity_details = 3;</code>
     * @return \Google\Cloud\DataQnA\V1alpha\InterpretError\InterpretAmbiguityDetails|null
     */
    public function getAmbiguityDetails()
    {
        return $this->ambiguity_details;
    }

    public function hasAmbiguityDetails()
    {
        return isset($this->ambiguity_details);
    }

    public function clearAmbiguityDetails()
    {
        unset($this->ambiguity_details);
    }

    /**
     * Populated if the query was too ambiguous.
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.InterpretError.InterpretAmbiguityDetails ambiguity_details = 3;</code>
     * @param \Google\Cloud\DataQnA\V1alpha\InterpretError\InterpretAmbiguityDetails $var
     * @return $this
     */
    public function setAmbiguityDetails($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DataQnA\V1alpha\InterpretError\InterpretAmbiguityDetails::class);
        $this->ambiguity_details = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(InterpretErrorDetails::class, \Google\Cloud\DataQnA\V1alpha\InterpretError_InterpretErrorDetails::class);

