<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataqna/v1alpha/question_service.proto

namespace Google\Cloud\DataQnA\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request to updates user feedback.
 *
 * Generated from protobuf message <code>google.cloud.dataqna.v1alpha.UpdateUserFeedbackRequest</code>
 */
class UpdateUserFeedbackRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The user feedback to update. This can be called even if there is no
     * user feedback so far.
     * The feedback's name field is used to identify the user feedback (and the
     * corresponding question) to update.
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.UserFeedback user_feedback = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $user_feedback = null;
    /**
     * The list of fields to be updated.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     */
    protected $update_mask = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\DataQnA\V1alpha\UserFeedback $user_feedback
     *           Required. The user feedback to update. This can be called even if there is no
     *           user feedback so far.
     *           The feedback's name field is used to identify the user feedback (and the
     *           corresponding question) to update.
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           The list of fields to be updated.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataqna\V1Alpha\QuestionService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The user feedback to update. This can be called even if there is no
     * user feedback so far.
     * The feedback's name field is used to identify the user feedback (and the
     * corresponding question) to update.
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.UserFeedback user_feedback = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\DataQnA\V1alpha\UserFeedback|null
     */
    public function getUserFeedback()
    {
        return $this->user_feedback;
    }

    public function hasUserFeedback()
    {
        return isset($this->user_feedback);
    }

    public function clearUserFeedback()
    {
        unset($this->user_feedback);
    }

    /**
     * Required. The user feedback to update. This can be called even if there is no
     * user feedback so far.
     * The feedback's name field is used to identify the user feedback (and the
     * corresponding question) to update.
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.UserFeedback user_feedback = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\DataQnA\V1alpha\UserFeedback $var
     * @return $this
     */
    public function setUserFeedback($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DataQnA\V1alpha\UserFeedback::class);
        $this->user_feedback = $var;

        return $this;
    }

    /**
     * The list of fields to be updated.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * The list of fields to be updated.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

}

