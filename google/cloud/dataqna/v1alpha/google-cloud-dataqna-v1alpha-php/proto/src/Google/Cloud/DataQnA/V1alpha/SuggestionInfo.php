<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataqna/v1alpha/auto_suggestion_service.proto

namespace Google\Cloud\DataQnA\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Detailed information about the suggestion.
 *
 * Generated from protobuf message <code>google.cloud.dataqna.v1alpha.SuggestionInfo</code>
 */
class SuggestionInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Annotations for the suggestion. This provides information about which part
     * of the suggestion corresponds to what semantic meaning (e.g. a metric).
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.AnnotatedString annotated_suggestion = 1;</code>
     */
    protected $annotated_suggestion = null;
    /**
     * Matches between user query and the annotated string.
     *
     * Generated from protobuf field <code>repeated .google.cloud.dataqna.v1alpha.SuggestionInfo.MatchInfo query_matches = 2;</code>
     */
    private $query_matches;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\DataQnA\V1alpha\AnnotatedString $annotated_suggestion
     *           Annotations for the suggestion. This provides information about which part
     *           of the suggestion corresponds to what semantic meaning (e.g. a metric).
     *     @type \Google\Cloud\DataQnA\V1alpha\SuggestionInfo\MatchInfo[]|\Google\Protobuf\Internal\RepeatedField $query_matches
     *           Matches between user query and the annotated string.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataqna\V1Alpha\AutoSuggestionService::initOnce();
        parent::__construct($data);
    }

    /**
     * Annotations for the suggestion. This provides information about which part
     * of the suggestion corresponds to what semantic meaning (e.g. a metric).
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.AnnotatedString annotated_suggestion = 1;</code>
     * @return \Google\Cloud\DataQnA\V1alpha\AnnotatedString|null
     */
    public function getAnnotatedSuggestion()
    {
        return $this->annotated_suggestion;
    }

    public function hasAnnotatedSuggestion()
    {
        return isset($this->annotated_suggestion);
    }

    public function clearAnnotatedSuggestion()
    {
        unset($this->annotated_suggestion);
    }

    /**
     * Annotations for the suggestion. This provides information about which part
     * of the suggestion corresponds to what semantic meaning (e.g. a metric).
     *
     * Generated from protobuf field <code>.google.cloud.dataqna.v1alpha.AnnotatedString annotated_suggestion = 1;</code>
     * @param \Google\Cloud\DataQnA\V1alpha\AnnotatedString $var
     * @return $this
     */
    public function setAnnotatedSuggestion($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DataQnA\V1alpha\AnnotatedString::class);
        $this->annotated_suggestion = $var;

        return $this;
    }

    /**
     * Matches between user query and the annotated string.
     *
     * Generated from protobuf field <code>repeated .google.cloud.dataqna.v1alpha.SuggestionInfo.MatchInfo query_matches = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getQueryMatches()
    {
        return $this->query_matches;
    }

    /**
     * Matches between user query and the annotated string.
     *
     * Generated from protobuf field <code>repeated .google.cloud.dataqna.v1alpha.SuggestionInfo.MatchInfo query_matches = 2;</code>
     * @param \Google\Cloud\DataQnA\V1alpha\SuggestionInfo\MatchInfo[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setQueryMatches($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\DataQnA\V1alpha\SuggestionInfo\MatchInfo::class);
        $this->query_matches = $arr;

        return $this;
    }

}

