// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/gaming/allocationendpoint/v1alpha/allocation_endpoint.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Gaming.Allocationendpoint.V1Alpha {

  /// <summary>Holder for reflection information generated from google/cloud/gaming/allocationendpoint/v1alpha/allocation_endpoint.proto</summary>
  public static partial class AllocationEndpointReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/gaming/allocationendpoint/v1alpha/allocation_endpoint.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AllocationEndpointReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ckhnb29nbGUvY2xvdWQvZ2FtaW5nL2FsbG9jYXRpb25lbmRwb2ludC92MWFs",
            "cGhhL2FsbG9jYXRpb25fZW5kcG9pbnQucHJvdG8SLmdvb2dsZS5jbG91ZC5n",
            "YW1pbmcuYWxsb2NhdGlvbmVuZHBvaW50LnYxYWxwaGEaHGdvb2dsZS9hcGkv",
            "YW5ub3RhdGlvbnMucHJvdG8aF2dvb2dsZS9hcGkvY2xpZW50LnByb3RvIvoB",
            "ChFBbGxvY2F0aW9uUmVxdWVzdBINCgVyZWFsbRgBIAEoCRImCh5kZWZhdWx0",
            "X2dhbWVfc2VydmVyX2RlcGxveW1lbnQYAiABKAkSYQoVZ2FtZV9zZXJ2ZXJf",
            "c2VsZWN0b3JzGAMgAygLMkIuZ29vZ2xlLmNsb3VkLmdhbWluZy5hbGxvY2F0",
            "aW9uZW5kcG9pbnQudjFhbHBoYS5HYW1lU2VydmVyU2VsZWN0b3ISSwoIbWV0",
            "YWRhdGEYBCABKAsyOS5nb29nbGUuY2xvdWQuZ2FtaW5nLmFsbG9jYXRpb25l",
            "bmRwb2ludC52MWFscGhhLk1ldGFQYXRjaCKpAgoSQWxsb2NhdGlvblJlc3Bv",
            "bnNlEhgKEGdhbWVfc2VydmVyX25hbWUYASABKAkSZgoFcG9ydHMYAiADKAsy",
            "Vy5nb29nbGUuY2xvdWQuZ2FtaW5nLmFsbG9jYXRpb25lbmRwb2ludC52MWFs",
            "cGhhLkFsbG9jYXRpb25SZXNwb25zZS5HYW1lU2VydmVyU3RhdHVzUG9ydBIP",
            "CgdhZGRyZXNzGAMgASgJEhEKCW5vZGVfbmFtZRgEIAEoCRIgChhnYW1lX3Nl",
            "cnZlcl9jbHVzdGVyX25hbWUYBSABKAkSFwoPZGVwbG95bWVudF9uYW1lGAYg",
            "ASgJGjIKFEdhbWVTZXJ2ZXJTdGF0dXNQb3J0EgwKBG5hbWUYASABKAkSDAoE",
            "cG9ydBgCIAEoBSKmAgoJTWV0YVBhdGNoElUKBmxhYmVscxgBIAMoCzJFLmdv",
            "b2dsZS5jbG91ZC5nYW1pbmcuYWxsb2NhdGlvbmVuZHBvaW50LnYxYWxwaGEu",
            "TWV0YVBhdGNoLkxhYmVsc0VudHJ5El8KC2Fubm90YXRpb25zGAIgAygLMkou",
            "Z29vZ2xlLmNsb3VkLmdhbWluZy5hbGxvY2F0aW9uZW5kcG9pbnQudjFhbHBo",
            "YS5NZXRhUGF0Y2guQW5ub3RhdGlvbnNFbnRyeRotCgtMYWJlbHNFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGjIKEEFubm90YXRpb25z",
            "RW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKzAQoSR2Ft",
            "ZVNlcnZlclNlbGVjdG9yEmkKDG1hdGNoX2xhYmVscxgBIAMoCzJTLmdvb2ds",
            "ZS5jbG91ZC5nYW1pbmcuYWxsb2NhdGlvbmVuZHBvaW50LnYxYWxwaGEuR2Ft",
            "ZVNlcnZlclNlbGVjdG9yLk1hdGNoTGFiZWxzRW50cnkaMgoQTWF0Y2hMYWJl",
            "bHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBMsEBChlB",
            "bGxvY2F0aW9uRW5kcG9pbnRTZXJ2aWNlEpMBCghBbGxvY2F0ZRJBLmdvb2ds",
            "ZS5jbG91ZC5nYW1pbmcuYWxsb2NhdGlvbmVuZHBvaW50LnYxYWxwaGEuQWxs",
            "b2NhdGlvblJlcXVlc3QaQi5nb29nbGUuY2xvdWQuZ2FtaW5nLmFsbG9jYXRp",
            "b25lbmRwb2ludC52MWFscGhhLkFsbG9jYXRpb25SZXNwb25zZSIAGg7KQQtl",
            "eGFtcGxlLmNvbUKxAQoyY29tLmdvb2dsZS5jbG91ZC5nYW1pbmcuYWxsb2Nh",
            "dGlvbmVuZHBvaW50LnYxYWxwaGFCF0FsbG9jYXRpb25FbmRwb2ludFByb3Rv",
            "UAFaYGdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvY2xv",
            "dWQvZ2FtaW5nL2FsbG9jYXRpb25lbmRwb2ludC92MWFscGhhO2FsbG9jYXRp",
            "b25lbmRwb2ludGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationRequest), global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationRequest.Parser, new[]{ "Realm", "DefaultGameServerDeployment", "GameServerSelectors", "Metadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationResponse), global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationResponse.Parser, new[]{ "GameServerName", "Ports", "Address", "NodeName", "GameServerClusterName", "DeploymentName" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationResponse.Types.GameServerStatusPort), global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationResponse.Types.GameServerStatusPort.Parser, new[]{ "Name", "Port" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.MetaPatch), global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.MetaPatch.Parser, new[]{ "Labels", "Annotations" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.GameServerSelector), global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.GameServerSelector.Parser, new[]{ "MatchLabels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AllocationRequest : pb::IMessage<AllocationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AllocationRequest> _parser = new pb::MessageParser<AllocationRequest>(() => new AllocationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AllocationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationEndpointReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AllocationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AllocationRequest(AllocationRequest other) : this() {
      realm_ = other.realm_;
      defaultGameServerDeployment_ = other.defaultGameServerDeployment_;
      gameServerSelectors_ = other.gameServerSelectors_.Clone();
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AllocationRequest Clone() {
      return new AllocationRequest(this);
    }

    /// <summary>Field number for the "realm" field.</summary>
    public const int RealmFieldNumber = 1;
    private string realm_ = "";
    /// <summary>
    /// The required realm name in the following form:
    /// `{location}/{realm}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Realm {
      get { return realm_; }
      set {
        realm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_game_server_deployment" field.</summary>
    public const int DefaultGameServerDeploymentFieldNumber = 2;
    private string defaultGameServerDeployment_ = "";
    /// <summary>
    /// The default game server deployment name.
    /// This is used to increase the likelihood of a successful
    /// allocation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultGameServerDeployment {
      get { return defaultGameServerDeployment_; }
      set {
        defaultGameServerDeployment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "game_server_selectors" field.</summary>
    public const int GameServerSelectorsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.GameServerSelector> _repeated_gameServerSelectors_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.GameServerSelector.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.GameServerSelector> gameServerSelectors_ = new pbc::RepeatedField<global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.GameServerSelector>();
    /// <summary>
    /// The ordered list of game server labels to match for allocations.
    /// If the first game server selector is not matched, the selection attempts
    /// the second game server selector, and so on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.GameServerSelector> GameServerSelectors {
      get { return gameServerSelectors_; }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 4;
    private global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.MetaPatch metadata_;
    /// <summary>
    /// Metadata is optional custom metadata that is added to the game server at
    /// allocation. You can use this to tell the server necessary session data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.MetaPatch Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AllocationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AllocationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Realm != other.Realm) return false;
      if (DefaultGameServerDeployment != other.DefaultGameServerDeployment) return false;
      if(!gameServerSelectors_.Equals(other.gameServerSelectors_)) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Realm.Length != 0) hash ^= Realm.GetHashCode();
      if (DefaultGameServerDeployment.Length != 0) hash ^= DefaultGameServerDeployment.GetHashCode();
      hash ^= gameServerSelectors_.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Realm.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Realm);
      }
      if (DefaultGameServerDeployment.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DefaultGameServerDeployment);
      }
      gameServerSelectors_.WriteTo(output, _repeated_gameServerSelectors_codec);
      if (metadata_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Realm.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Realm);
      }
      if (DefaultGameServerDeployment.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DefaultGameServerDeployment);
      }
      gameServerSelectors_.WriteTo(ref output, _repeated_gameServerSelectors_codec);
      if (metadata_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Realm.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Realm);
      }
      if (DefaultGameServerDeployment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultGameServerDeployment);
      }
      size += gameServerSelectors_.CalculateSize(_repeated_gameServerSelectors_codec);
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AllocationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Realm.Length != 0) {
        Realm = other.Realm;
      }
      if (other.DefaultGameServerDeployment.Length != 0) {
        DefaultGameServerDeployment = other.DefaultGameServerDeployment;
      }
      gameServerSelectors_.Add(other.gameServerSelectors_);
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.MetaPatch();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Realm = input.ReadString();
            break;
          }
          case 18: {
            DefaultGameServerDeployment = input.ReadString();
            break;
          }
          case 26: {
            gameServerSelectors_.AddEntriesFrom(input, _repeated_gameServerSelectors_codec);
            break;
          }
          case 34: {
            if (metadata_ == null) {
              Metadata = new global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.MetaPatch();
            }
            input.ReadMessage(Metadata);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Realm = input.ReadString();
            break;
          }
          case 18: {
            DefaultGameServerDeployment = input.ReadString();
            break;
          }
          case 26: {
            gameServerSelectors_.AddEntriesFrom(ref input, _repeated_gameServerSelectors_codec);
            break;
          }
          case 34: {
            if (metadata_ == null) {
              Metadata = new global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.MetaPatch();
            }
            input.ReadMessage(Metadata);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AllocationResponse : pb::IMessage<AllocationResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AllocationResponse> _parser = new pb::MessageParser<AllocationResponse>(() => new AllocationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AllocationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationEndpointReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AllocationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AllocationResponse(AllocationResponse other) : this() {
      gameServerName_ = other.gameServerName_;
      ports_ = other.ports_.Clone();
      address_ = other.address_;
      nodeName_ = other.nodeName_;
      gameServerClusterName_ = other.gameServerClusterName_;
      deploymentName_ = other.deploymentName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AllocationResponse Clone() {
      return new AllocationResponse(this);
    }

    /// <summary>Field number for the "game_server_name" field.</summary>
    public const int GameServerNameFieldNumber = 1;
    private string gameServerName_ = "";
    /// <summary>
    /// The name of the allocated game server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameServerName {
      get { return gameServerName_; }
      set {
        gameServerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ports" field.</summary>
    public const int PortsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationResponse.Types.GameServerStatusPort> _repeated_ports_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationResponse.Types.GameServerStatusPort.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationResponse.Types.GameServerStatusPort> ports_ = new pbc::RepeatedField<global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationResponse.Types.GameServerStatusPort>();
    /// <summary>
    /// The allocated game server's port information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationResponse.Types.GameServerStatusPort> Ports {
      get { return ports_; }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 3;
    private string address_ = "";
    /// <summary>
    /// The address of the allocated game server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_name" field.</summary>
    public const int NodeNameFieldNumber = 4;
    private string nodeName_ = "";
    /// <summary>
    /// The node name of the allocated game server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NodeName {
      get { return nodeName_; }
      set {
        nodeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "game_server_cluster_name" field.</summary>
    public const int GameServerClusterNameFieldNumber = 5;
    private string gameServerClusterName_ = "";
    /// <summary>
    /// The game server cluster from which the game server was allocated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameServerClusterName {
      get { return gameServerClusterName_; }
      set {
        gameServerClusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deployment_name" field.</summary>
    public const int DeploymentNameFieldNumber = 6;
    private string deploymentName_ = "";
    /// <summary>
    /// The game server deployment from which the game server was allocated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeploymentName {
      get { return deploymentName_; }
      set {
        deploymentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AllocationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AllocationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameServerName != other.GameServerName) return false;
      if(!ports_.Equals(other.ports_)) return false;
      if (Address != other.Address) return false;
      if (NodeName != other.NodeName) return false;
      if (GameServerClusterName != other.GameServerClusterName) return false;
      if (DeploymentName != other.DeploymentName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GameServerName.Length != 0) hash ^= GameServerName.GetHashCode();
      hash ^= ports_.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (NodeName.Length != 0) hash ^= NodeName.GetHashCode();
      if (GameServerClusterName.Length != 0) hash ^= GameServerClusterName.GetHashCode();
      if (DeploymentName.Length != 0) hash ^= DeploymentName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameServerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerName);
      }
      ports_.WriteTo(output, _repeated_ports_codec);
      if (Address.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Address);
      }
      if (NodeName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodeName);
      }
      if (GameServerClusterName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GameServerClusterName);
      }
      if (DeploymentName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DeploymentName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameServerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerName);
      }
      ports_.WriteTo(ref output, _repeated_ports_codec);
      if (Address.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Address);
      }
      if (NodeName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodeName);
      }
      if (GameServerClusterName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GameServerClusterName);
      }
      if (DeploymentName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DeploymentName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GameServerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerName);
      }
      size += ports_.CalculateSize(_repeated_ports_codec);
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (NodeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeName);
      }
      if (GameServerClusterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerClusterName);
      }
      if (DeploymentName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeploymentName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AllocationResponse other) {
      if (other == null) {
        return;
      }
      if (other.GameServerName.Length != 0) {
        GameServerName = other.GameServerName;
      }
      ports_.Add(other.ports_);
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.NodeName.Length != 0) {
        NodeName = other.NodeName;
      }
      if (other.GameServerClusterName.Length != 0) {
        GameServerClusterName = other.GameServerClusterName;
      }
      if (other.DeploymentName.Length != 0) {
        DeploymentName = other.DeploymentName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameServerName = input.ReadString();
            break;
          }
          case 18: {
            ports_.AddEntriesFrom(input, _repeated_ports_codec);
            break;
          }
          case 26: {
            Address = input.ReadString();
            break;
          }
          case 34: {
            NodeName = input.ReadString();
            break;
          }
          case 42: {
            GameServerClusterName = input.ReadString();
            break;
          }
          case 50: {
            DeploymentName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameServerName = input.ReadString();
            break;
          }
          case 18: {
            ports_.AddEntriesFrom(ref input, _repeated_ports_codec);
            break;
          }
          case 26: {
            Address = input.ReadString();
            break;
          }
          case 34: {
            NodeName = input.ReadString();
            break;
          }
          case 42: {
            GameServerClusterName = input.ReadString();
            break;
          }
          case 50: {
            DeploymentName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AllocationResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The game server port info that is allocated.
      /// </summary>
      public sealed partial class GameServerStatusPort : pb::IMessage<GameServerStatusPort>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GameServerStatusPort> _parser = new pb::MessageParser<GameServerStatusPort>(() => new GameServerStatusPort());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GameServerStatusPort> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GameServerStatusPort() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GameServerStatusPort(GameServerStatusPort other) : this() {
          name_ = other.name_;
          port_ = other.port_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GameServerStatusPort Clone() {
          return new GameServerStatusPort(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "port" field.</summary>
        public const int PortFieldNumber = 2;
        private int port_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Port {
          get { return port_; }
          set {
            port_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as GameServerStatusPort);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GameServerStatusPort other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Port != other.Port) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Port != 0) hash ^= Port.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Port != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Port);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Port != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Port);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Port != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GameServerStatusPort other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Port != 0) {
            Port = other.Port;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Port = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Port = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// MetaPatch is the metadata used to patch the Game Server metadata on
  /// allocation. It behaves exactly as it does in OSS.
  /// </summary>
  public sealed partial class MetaPatch : pb::IMessage<MetaPatch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetaPatch> _parser = new pb::MessageParser<MetaPatch>(() => new MetaPatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MetaPatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationEndpointReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetaPatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetaPatch(MetaPatch other) : this() {
      labels_ = other.labels_.Clone();
      annotations_ = other.annotations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetaPatch Clone() {
      return new MetaPatch(this);
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "annotations" field.</summary>
    public const int AnnotationsFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_annotations_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<string, string> annotations_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Annotations {
      get { return annotations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MetaPatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MetaPatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Labels.Equals(other.Labels)) return false;
      if (!Annotations.Equals(other.Annotations)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Labels.GetHashCode();
      hash ^= Annotations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      labels_.WriteTo(output, _map_labels_codec);
      annotations_.WriteTo(output, _map_annotations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      labels_.WriteTo(ref output, _map_labels_codec);
      annotations_.WriteTo(ref output, _map_annotations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += labels_.CalculateSize(_map_labels_codec);
      size += annotations_.CalculateSize(_map_annotations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MetaPatch other) {
      if (other == null) {
        return;
      }
      labels_.Add(other.labels_);
      annotations_.Add(other.annotations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 18: {
            annotations_.AddEntriesFrom(input, _map_annotations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 18: {
            annotations_.AddEntriesFrom(ref input, _map_annotations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// GameServerSelector used for finding a GameServer with matching labels.
  /// </summary>
  public sealed partial class GameServerSelector : pb::IMessage<GameServerSelector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameServerSelector> _parser = new pb::MessageParser<GameServerSelector>(() => new GameServerSelector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameServerSelector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.Allocationendpoint.V1Alpha.AllocationEndpointReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameServerSelector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameServerSelector(GameServerSelector other) : this() {
      matchLabels_ = other.matchLabels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameServerSelector Clone() {
      return new GameServerSelector(this);
    }

    /// <summary>Field number for the "match_labels" field.</summary>
    public const int MatchLabelsFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_matchLabels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> matchLabels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Labels to match.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> MatchLabels {
      get { return matchLabels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameServerSelector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameServerSelector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MatchLabels.Equals(other.MatchLabels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MatchLabels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      matchLabels_.WriteTo(output, _map_matchLabels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      matchLabels_.WriteTo(ref output, _map_matchLabels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += matchLabels_.CalculateSize(_map_matchLabels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameServerSelector other) {
      if (other == null) {
        return;
      }
      matchLabels_.Add(other.matchLabels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            matchLabels_.AddEntriesFrom(input, _map_matchLabels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            matchLabels_.AddEntriesFrom(ref input, _map_matchLabels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
