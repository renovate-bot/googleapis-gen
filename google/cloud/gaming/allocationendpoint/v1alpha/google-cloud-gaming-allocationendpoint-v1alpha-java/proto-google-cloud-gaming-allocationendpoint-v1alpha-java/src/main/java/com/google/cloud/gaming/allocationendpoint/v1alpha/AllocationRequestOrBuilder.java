// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gaming/allocationendpoint/v1alpha/allocation_endpoint.proto

package com.google.cloud.gaming.allocationendpoint.v1alpha;

public interface AllocationRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The required realm name in the following form:
   * `{location}/{realm}`.
   * </pre>
   *
   * <code>string realm = 1;</code>
   * @return The realm.
   */
  java.lang.String getRealm();
  /**
   * <pre>
   * The required realm name in the following form:
   * `{location}/{realm}`.
   * </pre>
   *
   * <code>string realm = 1;</code>
   * @return The bytes for realm.
   */
  com.google.protobuf.ByteString
      getRealmBytes();

  /**
   * <pre>
   * The default game server deployment name.
   * This is used to increase the likelihood of a successful
   * allocation.
   * </pre>
   *
   * <code>string default_game_server_deployment = 2;</code>
   * @return The defaultGameServerDeployment.
   */
  java.lang.String getDefaultGameServerDeployment();
  /**
   * <pre>
   * The default game server deployment name.
   * This is used to increase the likelihood of a successful
   * allocation.
   * </pre>
   *
   * <code>string default_game_server_deployment = 2;</code>
   * @return The bytes for defaultGameServerDeployment.
   */
  com.google.protobuf.ByteString
      getDefaultGameServerDeploymentBytes();

  /**
   * <pre>
   * The ordered list of game server labels to match for allocations.
   * If the first game server selector is not matched, the selection attempts
   * the second game server selector, and so on.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
   */
  java.util.List<com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector> 
      getGameServerSelectorsList();
  /**
   * <pre>
   * The ordered list of game server labels to match for allocations.
   * If the first game server selector is not matched, the selection attempts
   * the second game server selector, and so on.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
   */
  com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector getGameServerSelectors(int index);
  /**
   * <pre>
   * The ordered list of game server labels to match for allocations.
   * If the first game server selector is not matched, the selection attempts
   * the second game server selector, and so on.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
   */
  int getGameServerSelectorsCount();
  /**
   * <pre>
   * The ordered list of game server labels to match for allocations.
   * If the first game server selector is not matched, the selection attempts
   * the second game server selector, and so on.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
   */
  java.util.List<? extends com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelectorOrBuilder> 
      getGameServerSelectorsOrBuilderList();
  /**
   * <pre>
   * The ordered list of game server labels to match for allocations.
   * If the first game server selector is not matched, the selection attempts
   * the second game server selector, and so on.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
   */
  com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelectorOrBuilder getGameServerSelectorsOrBuilder(
      int index);

  /**
   * <pre>
   * Metadata is optional custom metadata that is added to the game server at
   * allocation. You can use this to tell the server necessary session data.
   * </pre>
   *
   * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   * <pre>
   * Metadata is optional custom metadata that is added to the game server at
   * allocation. You can use this to tell the server necessary session data.
   * </pre>
   *
   * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
   * @return The metadata.
   */
  com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch getMetadata();
  /**
   * <pre>
   * Metadata is optional custom metadata that is added to the game server at
   * allocation. You can use this to tell the server necessary session data.
   * </pre>
   *
   * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
   */
  com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatchOrBuilder getMetadataOrBuilder();
}
