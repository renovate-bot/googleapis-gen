// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gaming/allocationendpoint/v1alpha/allocation_endpoint.proto

package com.google.cloud.gaming.allocationendpoint.v1alpha;

/**
 * Protobuf type {@code google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest}
 */
public final class AllocationRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest)
    AllocationRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AllocationRequest.newBuilder() to construct.
  private AllocationRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AllocationRequest() {
    realm_ = "";
    defaultGameServerDeployment_ = "";
    gameServerSelectors_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AllocationRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AllocationRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            realm_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            defaultGameServerDeployment_ = s;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              gameServerSelectors_ = new java.util.ArrayList<com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector>();
              mutable_bitField0_ |= 0x00000001;
            }
            gameServerSelectors_.add(
                input.readMessage(com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.parser(), extensionRegistry));
            break;
          }
          case 34: {
            com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch.Builder subBuilder = null;
            if (metadata_ != null) {
              subBuilder = metadata_.toBuilder();
            }
            metadata_ = input.readMessage(com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(metadata_);
              metadata_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        gameServerSelectors_ = java.util.Collections.unmodifiableList(gameServerSelectors_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationEndpointProto.internal_static_google_cloud_gaming_allocationendpoint_v1alpha_AllocationRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationEndpointProto.internal_static_google_cloud_gaming_allocationendpoint_v1alpha_AllocationRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest.class, com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest.Builder.class);
  }

  public static final int REALM_FIELD_NUMBER = 1;
  private volatile java.lang.Object realm_;
  /**
   * <pre>
   * The required realm name in the following form:
   * `{location}/{realm}`.
   * </pre>
   *
   * <code>string realm = 1;</code>
   * @return The realm.
   */
  @java.lang.Override
  public java.lang.String getRealm() {
    java.lang.Object ref = realm_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      realm_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The required realm name in the following form:
   * `{location}/{realm}`.
   * </pre>
   *
   * <code>string realm = 1;</code>
   * @return The bytes for realm.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRealmBytes() {
    java.lang.Object ref = realm_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      realm_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEFAULT_GAME_SERVER_DEPLOYMENT_FIELD_NUMBER = 2;
  private volatile java.lang.Object defaultGameServerDeployment_;
  /**
   * <pre>
   * The default game server deployment name.
   * This is used to increase the likelihood of a successful
   * allocation.
   * </pre>
   *
   * <code>string default_game_server_deployment = 2;</code>
   * @return The defaultGameServerDeployment.
   */
  @java.lang.Override
  public java.lang.String getDefaultGameServerDeployment() {
    java.lang.Object ref = defaultGameServerDeployment_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      defaultGameServerDeployment_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The default game server deployment name.
   * This is used to increase the likelihood of a successful
   * allocation.
   * </pre>
   *
   * <code>string default_game_server_deployment = 2;</code>
   * @return The bytes for defaultGameServerDeployment.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDefaultGameServerDeploymentBytes() {
    java.lang.Object ref = defaultGameServerDeployment_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      defaultGameServerDeployment_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GAME_SERVER_SELECTORS_FIELD_NUMBER = 3;
  private java.util.List<com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector> gameServerSelectors_;
  /**
   * <pre>
   * The ordered list of game server labels to match for allocations.
   * If the first game server selector is not matched, the selection attempts
   * the second game server selector, and so on.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector> getGameServerSelectorsList() {
    return gameServerSelectors_;
  }
  /**
   * <pre>
   * The ordered list of game server labels to match for allocations.
   * If the first game server selector is not matched, the selection attempts
   * the second game server selector, and so on.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelectorOrBuilder> 
      getGameServerSelectorsOrBuilderList() {
    return gameServerSelectors_;
  }
  /**
   * <pre>
   * The ordered list of game server labels to match for allocations.
   * If the first game server selector is not matched, the selection attempts
   * the second game server selector, and so on.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
   */
  @java.lang.Override
  public int getGameServerSelectorsCount() {
    return gameServerSelectors_.size();
  }
  /**
   * <pre>
   * The ordered list of game server labels to match for allocations.
   * If the first game server selector is not matched, the selection attempts
   * the second game server selector, and so on.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
   */
  @java.lang.Override
  public com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector getGameServerSelectors(int index) {
    return gameServerSelectors_.get(index);
  }
  /**
   * <pre>
   * The ordered list of game server labels to match for allocations.
   * If the first game server selector is not matched, the selection attempts
   * the second game server selector, and so on.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
   */
  @java.lang.Override
  public com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelectorOrBuilder getGameServerSelectorsOrBuilder(
      int index) {
    return gameServerSelectors_.get(index);
  }

  public static final int METADATA_FIELD_NUMBER = 4;
  private com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata_;
  /**
   * <pre>
   * Metadata is optional custom metadata that is added to the game server at
   * allocation. You can use this to tell the server necessary session data.
   * </pre>
   *
   * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
   * @return Whether the metadata field is set.
   */
  @java.lang.Override
  public boolean hasMetadata() {
    return metadata_ != null;
  }
  /**
   * <pre>
   * Metadata is optional custom metadata that is added to the game server at
   * allocation. You can use this to tell the server necessary session data.
   * </pre>
   *
   * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
   * @return The metadata.
   */
  @java.lang.Override
  public com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch getMetadata() {
    return metadata_ == null ? com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch.getDefaultInstance() : metadata_;
  }
  /**
   * <pre>
   * Metadata is optional custom metadata that is added to the game server at
   * allocation. You can use this to tell the server necessary session data.
   * </pre>
   *
   * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
   */
  @java.lang.Override
  public com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatchOrBuilder getMetadataOrBuilder() {
    return getMetadata();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(realm_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, realm_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(defaultGameServerDeployment_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, defaultGameServerDeployment_);
    }
    for (int i = 0; i < gameServerSelectors_.size(); i++) {
      output.writeMessage(3, gameServerSelectors_.get(i));
    }
    if (metadata_ != null) {
      output.writeMessage(4, getMetadata());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(realm_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, realm_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(defaultGameServerDeployment_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, defaultGameServerDeployment_);
    }
    for (int i = 0; i < gameServerSelectors_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, gameServerSelectors_.get(i));
    }
    if (metadata_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getMetadata());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest)) {
      return super.equals(obj);
    }
    com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest other = (com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest) obj;

    if (!getRealm()
        .equals(other.getRealm())) return false;
    if (!getDefaultGameServerDeployment()
        .equals(other.getDefaultGameServerDeployment())) return false;
    if (!getGameServerSelectorsList()
        .equals(other.getGameServerSelectorsList())) return false;
    if (hasMetadata() != other.hasMetadata()) return false;
    if (hasMetadata()) {
      if (!getMetadata()
          .equals(other.getMetadata())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + REALM_FIELD_NUMBER;
    hash = (53 * hash) + getRealm().hashCode();
    hash = (37 * hash) + DEFAULT_GAME_SERVER_DEPLOYMENT_FIELD_NUMBER;
    hash = (53 * hash) + getDefaultGameServerDeployment().hashCode();
    if (getGameServerSelectorsCount() > 0) {
      hash = (37 * hash) + GAME_SERVER_SELECTORS_FIELD_NUMBER;
      hash = (53 * hash) + getGameServerSelectorsList().hashCode();
    }
    if (hasMetadata()) {
      hash = (37 * hash) + METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getMetadata().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest)
      com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationEndpointProto.internal_static_google_cloud_gaming_allocationendpoint_v1alpha_AllocationRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationEndpointProto.internal_static_google_cloud_gaming_allocationendpoint_v1alpha_AllocationRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest.class, com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest.Builder.class);
    }

    // Construct using com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getGameServerSelectorsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      realm_ = "";

      defaultGameServerDeployment_ = "";

      if (gameServerSelectorsBuilder_ == null) {
        gameServerSelectors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        gameServerSelectorsBuilder_.clear();
      }
      if (metadataBuilder_ == null) {
        metadata_ = null;
      } else {
        metadata_ = null;
        metadataBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationEndpointProto.internal_static_google_cloud_gaming_allocationendpoint_v1alpha_AllocationRequest_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest getDefaultInstanceForType() {
      return com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest build() {
      com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest buildPartial() {
      com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest result = new com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest(this);
      int from_bitField0_ = bitField0_;
      result.realm_ = realm_;
      result.defaultGameServerDeployment_ = defaultGameServerDeployment_;
      if (gameServerSelectorsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          gameServerSelectors_ = java.util.Collections.unmodifiableList(gameServerSelectors_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.gameServerSelectors_ = gameServerSelectors_;
      } else {
        result.gameServerSelectors_ = gameServerSelectorsBuilder_.build();
      }
      if (metadataBuilder_ == null) {
        result.metadata_ = metadata_;
      } else {
        result.metadata_ = metadataBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest) {
        return mergeFrom((com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest other) {
      if (other == com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest.getDefaultInstance()) return this;
      if (!other.getRealm().isEmpty()) {
        realm_ = other.realm_;
        onChanged();
      }
      if (!other.getDefaultGameServerDeployment().isEmpty()) {
        defaultGameServerDeployment_ = other.defaultGameServerDeployment_;
        onChanged();
      }
      if (gameServerSelectorsBuilder_ == null) {
        if (!other.gameServerSelectors_.isEmpty()) {
          if (gameServerSelectors_.isEmpty()) {
            gameServerSelectors_ = other.gameServerSelectors_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureGameServerSelectorsIsMutable();
            gameServerSelectors_.addAll(other.gameServerSelectors_);
          }
          onChanged();
        }
      } else {
        if (!other.gameServerSelectors_.isEmpty()) {
          if (gameServerSelectorsBuilder_.isEmpty()) {
            gameServerSelectorsBuilder_.dispose();
            gameServerSelectorsBuilder_ = null;
            gameServerSelectors_ = other.gameServerSelectors_;
            bitField0_ = (bitField0_ & ~0x00000001);
            gameServerSelectorsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGameServerSelectorsFieldBuilder() : null;
          } else {
            gameServerSelectorsBuilder_.addAllMessages(other.gameServerSelectors_);
          }
        }
      }
      if (other.hasMetadata()) {
        mergeMetadata(other.getMetadata());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object realm_ = "";
    /**
     * <pre>
     * The required realm name in the following form:
     * `{location}/{realm}`.
     * </pre>
     *
     * <code>string realm = 1;</code>
     * @return The realm.
     */
    public java.lang.String getRealm() {
      java.lang.Object ref = realm_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        realm_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The required realm name in the following form:
     * `{location}/{realm}`.
     * </pre>
     *
     * <code>string realm = 1;</code>
     * @return The bytes for realm.
     */
    public com.google.protobuf.ByteString
        getRealmBytes() {
      java.lang.Object ref = realm_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        realm_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The required realm name in the following form:
     * `{location}/{realm}`.
     * </pre>
     *
     * <code>string realm = 1;</code>
     * @param value The realm to set.
     * @return This builder for chaining.
     */
    public Builder setRealm(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      realm_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The required realm name in the following form:
     * `{location}/{realm}`.
     * </pre>
     *
     * <code>string realm = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearRealm() {
      
      realm_ = getDefaultInstance().getRealm();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The required realm name in the following form:
     * `{location}/{realm}`.
     * </pre>
     *
     * <code>string realm = 1;</code>
     * @param value The bytes for realm to set.
     * @return This builder for chaining.
     */
    public Builder setRealmBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      realm_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object defaultGameServerDeployment_ = "";
    /**
     * <pre>
     * The default game server deployment name.
     * This is used to increase the likelihood of a successful
     * allocation.
     * </pre>
     *
     * <code>string default_game_server_deployment = 2;</code>
     * @return The defaultGameServerDeployment.
     */
    public java.lang.String getDefaultGameServerDeployment() {
      java.lang.Object ref = defaultGameServerDeployment_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        defaultGameServerDeployment_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The default game server deployment name.
     * This is used to increase the likelihood of a successful
     * allocation.
     * </pre>
     *
     * <code>string default_game_server_deployment = 2;</code>
     * @return The bytes for defaultGameServerDeployment.
     */
    public com.google.protobuf.ByteString
        getDefaultGameServerDeploymentBytes() {
      java.lang.Object ref = defaultGameServerDeployment_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        defaultGameServerDeployment_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The default game server deployment name.
     * This is used to increase the likelihood of a successful
     * allocation.
     * </pre>
     *
     * <code>string default_game_server_deployment = 2;</code>
     * @param value The defaultGameServerDeployment to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultGameServerDeployment(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      defaultGameServerDeployment_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The default game server deployment name.
     * This is used to increase the likelihood of a successful
     * allocation.
     * </pre>
     *
     * <code>string default_game_server_deployment = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDefaultGameServerDeployment() {
      
      defaultGameServerDeployment_ = getDefaultInstance().getDefaultGameServerDeployment();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The default game server deployment name.
     * This is used to increase the likelihood of a successful
     * allocation.
     * </pre>
     *
     * <code>string default_game_server_deployment = 2;</code>
     * @param value The bytes for defaultGameServerDeployment to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultGameServerDeploymentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      defaultGameServerDeployment_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector> gameServerSelectors_ =
      java.util.Collections.emptyList();
    private void ensureGameServerSelectorsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        gameServerSelectors_ = new java.util.ArrayList<com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector>(gameServerSelectors_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector, com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.Builder, com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelectorOrBuilder> gameServerSelectorsBuilder_;

    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public java.util.List<com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector> getGameServerSelectorsList() {
      if (gameServerSelectorsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(gameServerSelectors_);
      } else {
        return gameServerSelectorsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public int getGameServerSelectorsCount() {
      if (gameServerSelectorsBuilder_ == null) {
        return gameServerSelectors_.size();
      } else {
        return gameServerSelectorsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector getGameServerSelectors(int index) {
      if (gameServerSelectorsBuilder_ == null) {
        return gameServerSelectors_.get(index);
      } else {
        return gameServerSelectorsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public Builder setGameServerSelectors(
        int index, com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector value) {
      if (gameServerSelectorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGameServerSelectorsIsMutable();
        gameServerSelectors_.set(index, value);
        onChanged();
      } else {
        gameServerSelectorsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public Builder setGameServerSelectors(
        int index, com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.Builder builderForValue) {
      if (gameServerSelectorsBuilder_ == null) {
        ensureGameServerSelectorsIsMutable();
        gameServerSelectors_.set(index, builderForValue.build());
        onChanged();
      } else {
        gameServerSelectorsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public Builder addGameServerSelectors(com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector value) {
      if (gameServerSelectorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGameServerSelectorsIsMutable();
        gameServerSelectors_.add(value);
        onChanged();
      } else {
        gameServerSelectorsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public Builder addGameServerSelectors(
        int index, com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector value) {
      if (gameServerSelectorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGameServerSelectorsIsMutable();
        gameServerSelectors_.add(index, value);
        onChanged();
      } else {
        gameServerSelectorsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public Builder addGameServerSelectors(
        com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.Builder builderForValue) {
      if (gameServerSelectorsBuilder_ == null) {
        ensureGameServerSelectorsIsMutable();
        gameServerSelectors_.add(builderForValue.build());
        onChanged();
      } else {
        gameServerSelectorsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public Builder addGameServerSelectors(
        int index, com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.Builder builderForValue) {
      if (gameServerSelectorsBuilder_ == null) {
        ensureGameServerSelectorsIsMutable();
        gameServerSelectors_.add(index, builderForValue.build());
        onChanged();
      } else {
        gameServerSelectorsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public Builder addAllGameServerSelectors(
        java.lang.Iterable<? extends com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector> values) {
      if (gameServerSelectorsBuilder_ == null) {
        ensureGameServerSelectorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, gameServerSelectors_);
        onChanged();
      } else {
        gameServerSelectorsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public Builder clearGameServerSelectors() {
      if (gameServerSelectorsBuilder_ == null) {
        gameServerSelectors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        gameServerSelectorsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public Builder removeGameServerSelectors(int index) {
      if (gameServerSelectorsBuilder_ == null) {
        ensureGameServerSelectorsIsMutable();
        gameServerSelectors_.remove(index);
        onChanged();
      } else {
        gameServerSelectorsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.Builder getGameServerSelectorsBuilder(
        int index) {
      return getGameServerSelectorsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelectorOrBuilder getGameServerSelectorsOrBuilder(
        int index) {
      if (gameServerSelectorsBuilder_ == null) {
        return gameServerSelectors_.get(index);  } else {
        return gameServerSelectorsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public java.util.List<? extends com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelectorOrBuilder> 
         getGameServerSelectorsOrBuilderList() {
      if (gameServerSelectorsBuilder_ != null) {
        return gameServerSelectorsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(gameServerSelectors_);
      }
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.Builder addGameServerSelectorsBuilder() {
      return getGameServerSelectorsFieldBuilder().addBuilder(
          com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.getDefaultInstance());
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.Builder addGameServerSelectorsBuilder(
        int index) {
      return getGameServerSelectorsFieldBuilder().addBuilder(
          index, com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.getDefaultInstance());
    }
    /**
     * <pre>
     * The ordered list of game server labels to match for allocations.
     * If the first game server selector is not matched, the selection attempts
     * the second game server selector, and so on.
     * </pre>
     *
     * <code>repeated .google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector game_server_selectors = 3;</code>
     */
    public java.util.List<com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.Builder> 
         getGameServerSelectorsBuilderList() {
      return getGameServerSelectorsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector, com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.Builder, com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelectorOrBuilder> 
        getGameServerSelectorsFieldBuilder() {
      if (gameServerSelectorsBuilder_ == null) {
        gameServerSelectorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector, com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelector.Builder, com.google.cloud.gaming.allocationendpoint.v1alpha.GameServerSelectorOrBuilder>(
                gameServerSelectors_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        gameServerSelectors_ = null;
      }
      return gameServerSelectorsBuilder_;
    }

    private com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch, com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch.Builder, com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatchOrBuilder> metadataBuilder_;
    /**
     * <pre>
     * Metadata is optional custom metadata that is added to the game server at
     * allocation. You can use this to tell the server necessary session data.
     * </pre>
     *
     * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
     * @return Whether the metadata field is set.
     */
    public boolean hasMetadata() {
      return metadataBuilder_ != null || metadata_ != null;
    }
    /**
     * <pre>
     * Metadata is optional custom metadata that is added to the game server at
     * allocation. You can use this to tell the server necessary session data.
     * </pre>
     *
     * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
     * @return The metadata.
     */
    public com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch getMetadata() {
      if (metadataBuilder_ == null) {
        return metadata_ == null ? com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch.getDefaultInstance() : metadata_;
      } else {
        return metadataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metadata is optional custom metadata that is added to the game server at
     * allocation. You can use this to tell the server necessary session data.
     * </pre>
     *
     * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
     */
    public Builder setMetadata(com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch value) {
      if (metadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        metadataBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Metadata is optional custom metadata that is added to the game server at
     * allocation. You can use this to tell the server necessary session data.
     * </pre>
     *
     * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
     */
    public Builder setMetadata(
        com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch.Builder builderForValue) {
      if (metadataBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        metadataBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Metadata is optional custom metadata that is added to the game server at
     * allocation. You can use this to tell the server necessary session data.
     * </pre>
     *
     * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
     */
    public Builder mergeMetadata(com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch value) {
      if (metadataBuilder_ == null) {
        if (metadata_ != null) {
          metadata_ =
            com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch.newBuilder(metadata_).mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        metadataBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Metadata is optional custom metadata that is added to the game server at
     * allocation. You can use this to tell the server necessary session data.
     * </pre>
     *
     * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
     */
    public Builder clearMetadata() {
      if (metadataBuilder_ == null) {
        metadata_ = null;
        onChanged();
      } else {
        metadata_ = null;
        metadataBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Metadata is optional custom metadata that is added to the game server at
     * allocation. You can use this to tell the server necessary session data.
     * </pre>
     *
     * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
     */
    public com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch.Builder getMetadataBuilder() {
      
      onChanged();
      return getMetadataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metadata is optional custom metadata that is added to the game server at
     * allocation. You can use this to tell the server necessary session data.
     * </pre>
     *
     * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
     */
    public com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatchOrBuilder getMetadataOrBuilder() {
      if (metadataBuilder_ != null) {
        return metadataBuilder_.getMessageOrBuilder();
      } else {
        return metadata_ == null ?
            com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch.getDefaultInstance() : metadata_;
      }
    }
    /**
     * <pre>
     * Metadata is optional custom metadata that is added to the game server at
     * allocation. You can use this to tell the server necessary session data.
     * </pre>
     *
     * <code>.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch metadata = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch, com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch.Builder, com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatchOrBuilder> 
        getMetadataFieldBuilder() {
      if (metadataBuilder_ == null) {
        metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch, com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatch.Builder, com.google.cloud.gaming.allocationendpoint.v1alpha.MetaPatchOrBuilder>(
                getMetadata(),
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      return metadataBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest)
  private static final com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest();
  }

  public static com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AllocationRequest>
      PARSER = new com.google.protobuf.AbstractParser<AllocationRequest>() {
    @java.lang.Override
    public AllocationRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AllocationRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AllocationRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AllocationRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.gaming.allocationendpoint.v1alpha.AllocationRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

