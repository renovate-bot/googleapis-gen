// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/gaming/v1beta/common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Gaming.V1Beta {

  /// <summary>Holder for reflection information generated from google/cloud/gaming/v1beta/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/gaming/v1beta/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidnb29nbGUvY2xvdWQvZ2FtaW5nL3YxYmV0YS9jb21tb24ucHJvdG8SGmdv",
            "b2dsZS5jbG91ZC5nYW1pbmcudjFiZXRhGh9nb29nbGUvYXBpL2ZpZWxkX2Jl",
            "aGF2aW9yLnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8a",
            "H2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aHGdvb2dsZS9hcGkv",
            "YW5ub3RhdGlvbnMucHJvdG8i4gMKEU9wZXJhdGlvbk1ldGFkYXRhEjQKC2Ny",
            "ZWF0ZV90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID",
            "4EEDEjEKCGVuZF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcEID4EEDEhMKBnRhcmdldBgDIAEoCUID4EEDEhEKBHZlcmIYBCABKAlC",
            "A+BBAxIbCg5zdGF0dXNfbWVzc2FnZRgFIAEoCUID4EEDEiMKFnJlcXVlc3Rl",
            "ZF9jYW5jZWxsYXRpb24YBiABKAhCA+BBAxIYCgthcGlfdmVyc2lvbhgHIAEo",
            "CUID4EEDEhgKC3VucmVhY2hhYmxlGAggAygJQgPgQQMSYQoQb3BlcmF0aW9u",
            "X3N0YXR1cxgJIAMoCzJCLmdvb2dsZS5jbG91ZC5nYW1pbmcudjFiZXRhLk9w",
            "ZXJhdGlvbk1ldGFkYXRhLk9wZXJhdGlvblN0YXR1c0VudHJ5QgPgQQMaYwoU",
            "T3BlcmF0aW9uU3RhdHVzRW50cnkSCwoDa2V5GAEgASgJEjoKBXZhbHVlGAIg",
            "ASgLMisuZ29vZ2xlLmNsb3VkLmdhbWluZy52MWJldGEuT3BlcmF0aW9uU3Rh",
            "dHVzOgI4ASLyAQoPT3BlcmF0aW9uU3RhdHVzEhEKBGRvbmUYASABKAhCA+BB",
            "AxJJCgplcnJvcl9jb2RlGAIgASgOMjUuZ29vZ2xlLmNsb3VkLmdhbWluZy52",
            "MWJldGEuT3BlcmF0aW9uU3RhdHVzLkVycm9yQ29kZRIVCg1lcnJvcl9tZXNz",
            "YWdlGAMgASgJImoKCUVycm9yQ29kZRIaChZFUlJPUl9DT0RFX1VOU1BFQ0lG",
            "SUVEEAASEgoOSU5URVJOQUxfRVJST1IQARIVChFQRVJNSVNTSU9OX0RFTklF",
            "RBACEhYKEkNMVVNURVJfQ09OTkVDVElPThADIoUBCg1MYWJlbFNlbGVjdG9y",
            "EkUKBmxhYmVscxgBIAMoCzI1Lmdvb2dsZS5jbG91ZC5nYW1pbmcudjFiZXRh",
            "LkxhYmVsU2VsZWN0b3IuTGFiZWxzRW50cnkaLQoLTGFiZWxzRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIfCg1SZWFsbVNlbGVjdG9y",
            "Eg4KBnJlYWxtcxgBIAMoCSKxAQoIU2NoZWR1bGUSLgoKc3RhcnRfdGltZRgB",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIZW5kX3RpbWUY",
            "AiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjQKEWNyb25fam9i",
            "X2R1cmF0aW9uGAMgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEhEK",
            "CWNyb25fc3BlYxgEIAEoCSI7CgpTcGVjU291cmNlEh8KF2dhbWVfc2VydmVy",
            "X2NvbmZpZ19uYW1lGAEgASgJEgwKBG5hbWUYAiABKAkiwQQKDVRhcmdldERl",
            "dGFpbHMSIAoYZ2FtZV9zZXJ2ZXJfY2x1c3Rlcl9uYW1lGAEgASgJEiMKG2dh",
            "bWVfc2VydmVyX2RlcGxveW1lbnRfbmFtZRgCIAEoCRJTCg1mbGVldF9kZXRh",
            "aWxzGAMgAygLMjwuZ29vZ2xlLmNsb3VkLmdhbWluZy52MWJldGEuVGFyZ2V0",
            "RGV0YWlscy5UYXJnZXRGbGVldERldGFpbHMakwMKElRhcmdldEZsZWV0RGV0",
            "YWlscxJXCgVmbGVldBgBIAEoCzJILmdvb2dsZS5jbG91ZC5nYW1pbmcudjFi",
            "ZXRhLlRhcmdldERldGFpbHMuVGFyZ2V0RmxlZXREZXRhaWxzLlRhcmdldEZs",
            "ZWV0EmYKCmF1dG9zY2FsZXIYAiABKAsyUi5nb29nbGUuY2xvdWQuZ2FtaW5n",
            "LnYxYmV0YS5UYXJnZXREZXRhaWxzLlRhcmdldEZsZWV0RGV0YWlscy5UYXJn",
            "ZXRGbGVldEF1dG9zY2FsZXIaWAoLVGFyZ2V0RmxlZXQSDAoEbmFtZRgBIAEo",
            "CRI7CgtzcGVjX3NvdXJjZRgCIAEoCzImLmdvb2dsZS5jbG91ZC5nYW1pbmcu",
            "djFiZXRhLlNwZWNTb3VyY2UaYgoVVGFyZ2V0RmxlZXRBdXRvc2NhbGVyEgwK",
            "BG5hbWUYASABKAkSOwoLc3BlY19zb3VyY2UYAiABKAsyJi5nb29nbGUuY2xv",
            "dWQuZ2FtaW5nLnYxYmV0YS5TcGVjU291cmNlIkkKC1RhcmdldFN0YXRlEjoK",
            "B2RldGFpbHMYASADKAsyKS5nb29nbGUuY2xvdWQuZ2FtaW5nLnYxYmV0YS5U",
            "YXJnZXREZXRhaWxzIq8FChREZXBsb3llZEZsZWV0RGV0YWlscxJWCg5kZXBs",
            "b3llZF9mbGVldBgBIAEoCzI+Lmdvb2dsZS5jbG91ZC5nYW1pbmcudjFiZXRh",
            "LkRlcGxveWVkRmxlZXREZXRhaWxzLkRlcGxveWVkRmxlZXQSZQoTZGVwbG95",
            "ZWRfYXV0b3NjYWxlchgCIAEoCzJILmdvb2dsZS5jbG91ZC5nYW1pbmcudjFi",
            "ZXRhLkRlcGxveWVkRmxlZXREZXRhaWxzLkRlcGxveWVkRmxlZXRBdXRvc2Nh",
            "bGVyGssCCg1EZXBsb3llZEZsZWV0Eg0KBWZsZWV0GAEgASgJEhIKCmZsZWV0",
            "X3NwZWMYAiABKAkSOwoLc3BlY19zb3VyY2UYAyABKAsyJi5nb29nbGUuY2xv",
            "dWQuZ2FtaW5nLnYxYmV0YS5TcGVjU291cmNlEmIKBnN0YXR1cxgFIAEoCzJS",
            "Lmdvb2dsZS5jbG91ZC5nYW1pbmcudjFiZXRhLkRlcGxveWVkRmxlZXREZXRh",
            "aWxzLkRlcGxveWVkRmxlZXQuRGVwbG95ZWRGbGVldFN0YXR1cxp2ChNEZXBs",
            "b3llZEZsZWV0U3RhdHVzEhYKDnJlYWR5X3JlcGxpY2FzGAEgASgDEhoKEmFs",
            "bG9jYXRlZF9yZXBsaWNhcxgCIAEoAxIZChFyZXNlcnZlZF9yZXBsaWNhcxgD",
            "IAEoAxIQCghyZXBsaWNhcxgEIAEoAxqJAQoXRGVwbG95ZWRGbGVldEF1dG9z",
            "Y2FsZXISEgoKYXV0b3NjYWxlchgBIAEoCRI7CgtzcGVjX3NvdXJjZRgEIAEo",
            "CzImLmdvb2dsZS5jbG91ZC5nYW1pbmcudjFiZXRhLlNwZWNTb3VyY2USHQoV",
            "ZmxlZXRfYXV0b3NjYWxlcl9zcGVjGAMgASgJQmQKHmNvbS5nb29nbGUuY2xv",
            "dWQuZ2FtaW5nLnYxYmV0YVABWkBnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90",
            "by9nb29nbGVhcGlzL2Nsb3VkL2dhbWluZy92MWJldGE7Z2FtaW5nYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.OperationMetadata), global::Google.Cloud.Gaming.V1Beta.OperationMetadata.Parser, new[]{ "CreateTime", "EndTime", "Target", "Verb", "StatusMessage", "RequestedCancellation", "ApiVersion", "Unreachable", "OperationStatus" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.OperationStatus), global::Google.Cloud.Gaming.V1Beta.OperationStatus.Parser, new[]{ "Done", "ErrorCode", "ErrorMessage" }, null, new[]{ typeof(global::Google.Cloud.Gaming.V1Beta.OperationStatus.Types.ErrorCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.LabelSelector), global::Google.Cloud.Gaming.V1Beta.LabelSelector.Parser, new[]{ "Labels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.RealmSelector), global::Google.Cloud.Gaming.V1Beta.RealmSelector.Parser, new[]{ "Realms" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.Schedule), global::Google.Cloud.Gaming.V1Beta.Schedule.Parser, new[]{ "StartTime", "EndTime", "CronJobDuration", "CronSpec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.SpecSource), global::Google.Cloud.Gaming.V1Beta.SpecSource.Parser, new[]{ "GameServerConfigName", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.TargetDetails), global::Google.Cloud.Gaming.V1Beta.TargetDetails.Parser, new[]{ "GameServerClusterName", "GameServerDeploymentName", "FleetDetails" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails), global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Parser, new[]{ "Fleet", "Autoscaler" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleet), global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleet.Parser, new[]{ "Name", "SpecSource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleetAutoscaler), global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleetAutoscaler.Parser, new[]{ "Name", "SpecSource" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.TargetState), global::Google.Cloud.Gaming.V1Beta.TargetState.Parser, new[]{ "Details" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails), global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Parser, new[]{ "DeployedFleet", "DeployedAutoscaler" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet), global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet.Parser, new[]{ "Fleet", "FleetSpec", "SpecSource", "Status" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet.Types.DeployedFleetStatus), global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet.Types.DeployedFleetStatus.Parser, new[]{ "ReadyReplicas", "AllocatedReplicas", "ReservedReplicas", "Replicas" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleetAutoscaler), global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleetAutoscaler.Parser, new[]{ "Autoscaler", "SpecSource", "FleetAutoscalerSpec" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Represents the metadata of the long-running operation.
  /// </summary>
  public sealed partial class OperationMetadata : pb::IMessage<OperationMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OperationMetadata> _parser = new pb::MessageParser<OperationMetadata>(() => new OperationMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.V1Beta.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata(OperationMetadata other) : this() {
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      target_ = other.target_;
      verb_ = other.verb_;
      statusMessage_ = other.statusMessage_;
      requestedCancellation_ = other.requestedCancellation_;
      apiVersion_ = other.apiVersion_;
      unreachable_ = other.unreachable_.Clone();
      operationStatus_ = other.operationStatus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata Clone() {
      return new OperationMetadata(this);
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time the operation was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Output only. The time the operation finished running.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 3;
    private string target_ = "";
    /// <summary>
    /// Output only. Server-defined resource path for the target of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "verb" field.</summary>
    public const int VerbFieldNumber = 4;
    private string verb_ = "";
    /// <summary>
    /// Output only. Name of the verb executed by the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Verb {
      get { return verb_; }
      set {
        verb_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 5;
    private string statusMessage_ = "";
    /// <summary>
    /// Output only. Human-readable status of the operation, if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requested_cancellation" field.</summary>
    public const int RequestedCancellationFieldNumber = 6;
    private bool requestedCancellation_;
    /// <summary>
    /// Output only. Identifies whether the user has requested cancellation
    /// of the operation. Operations that have successfully been cancelled
    /// have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
    /// corresponding to `Code.CANCELLED`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RequestedCancellation {
      get { return requestedCancellation_; }
      set {
        requestedCancellation_ = value;
      }
    }

    /// <summary>Field number for the "api_version" field.</summary>
    public const int ApiVersionFieldNumber = 7;
    private string apiVersion_ = "";
    /// <summary>
    /// Output only. API version used to start the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApiVersion {
      get { return apiVersion_; }
      set {
        apiVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unreachable" field.</summary>
    public const int UnreachableFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_unreachable_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> unreachable_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Output only. List of Locations that could not be reached.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Unreachable {
      get { return unreachable_; }
    }

    /// <summary>Field number for the "operation_status" field.</summary>
    public const int OperationStatusFieldNumber = 9;
    private static readonly pbc::MapField<string, global::Google.Cloud.Gaming.V1Beta.OperationStatus>.Codec _map_operationStatus_codec
        = new pbc::MapField<string, global::Google.Cloud.Gaming.V1Beta.OperationStatus>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Gaming.V1Beta.OperationStatus.Parser), 74);
    private readonly pbc::MapField<string, global::Google.Cloud.Gaming.V1Beta.OperationStatus> operationStatus_ = new pbc::MapField<string, global::Google.Cloud.Gaming.V1Beta.OperationStatus>();
    /// <summary>
    /// Output only. Operation status for Game Services API operations. Operation status is in
    /// the form of key-value pairs where keys are resource IDs and the values show
    /// the status of the operation. In case of failures, the value includes an
    /// error code and error message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.Gaming.V1Beta.OperationStatus> OperationStatus {
      get { return operationStatus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Target != other.Target) return false;
      if (Verb != other.Verb) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (RequestedCancellation != other.RequestedCancellation) return false;
      if (ApiVersion != other.ApiVersion) return false;
      if(!unreachable_.Equals(other.unreachable_)) return false;
      if (!OperationStatus.Equals(other.OperationStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (Verb.Length != 0) hash ^= Verb.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      if (RequestedCancellation != false) hash ^= RequestedCancellation.GetHashCode();
      if (ApiVersion.Length != 0) hash ^= ApiVersion.GetHashCode();
      hash ^= unreachable_.GetHashCode();
      hash ^= OperationStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (Verb.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Verb);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusMessage);
      }
      if (RequestedCancellation != false) {
        output.WriteRawTag(48);
        output.WriteBool(RequestedCancellation);
      }
      if (ApiVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ApiVersion);
      }
      unreachable_.WriteTo(output, _repeated_unreachable_codec);
      operationStatus_.WriteTo(output, _map_operationStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (Verb.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Verb);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusMessage);
      }
      if (RequestedCancellation != false) {
        output.WriteRawTag(48);
        output.WriteBool(RequestedCancellation);
      }
      if (ApiVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ApiVersion);
      }
      unreachable_.WriteTo(ref output, _repeated_unreachable_codec);
      operationStatus_.WriteTo(ref output, _map_operationStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (Verb.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Verb);
      }
      if (StatusMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      if (RequestedCancellation != false) {
        size += 1 + 1;
      }
      if (ApiVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiVersion);
      }
      size += unreachable_.CalculateSize(_repeated_unreachable_codec);
      size += operationStatus_.CalculateSize(_map_operationStatus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.Verb.Length != 0) {
        Verb = other.Verb;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      if (other.RequestedCancellation != false) {
        RequestedCancellation = other.RequestedCancellation;
      }
      if (other.ApiVersion.Length != 0) {
        ApiVersion = other.ApiVersion;
      }
      unreachable_.Add(other.unreachable_);
      operationStatus_.Add(other.operationStatus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            Verb = input.ReadString();
            break;
          }
          case 42: {
            StatusMessage = input.ReadString();
            break;
          }
          case 48: {
            RequestedCancellation = input.ReadBool();
            break;
          }
          case 58: {
            ApiVersion = input.ReadString();
            break;
          }
          case 66: {
            unreachable_.AddEntriesFrom(input, _repeated_unreachable_codec);
            break;
          }
          case 74: {
            operationStatus_.AddEntriesFrom(input, _map_operationStatus_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            Verb = input.ReadString();
            break;
          }
          case 42: {
            StatusMessage = input.ReadString();
            break;
          }
          case 48: {
            RequestedCancellation = input.ReadBool();
            break;
          }
          case 58: {
            ApiVersion = input.ReadString();
            break;
          }
          case 66: {
            unreachable_.AddEntriesFrom(ref input, _repeated_unreachable_codec);
            break;
          }
          case 74: {
            operationStatus_.AddEntriesFrom(ref input, _map_operationStatus_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OperationStatus : pb::IMessage<OperationStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OperationStatus> _parser = new pb::MessageParser<OperationStatus>(() => new OperationStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.V1Beta.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationStatus(OperationStatus other) : this() {
      done_ = other.done_;
      errorCode_ = other.errorCode_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationStatus Clone() {
      return new OperationStatus(this);
    }

    /// <summary>Field number for the "done" field.</summary>
    public const int DoneFieldNumber = 1;
    private bool done_;
    /// <summary>
    /// Output only. Whether the operation is done or still in progress.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Done {
      get { return done_; }
      set {
        done_ = value;
      }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 2;
    private global::Google.Cloud.Gaming.V1Beta.OperationStatus.Types.ErrorCode errorCode_ = global::Google.Cloud.Gaming.V1Beta.OperationStatus.Types.ErrorCode.Unspecified;
    /// <summary>
    /// The error code in case of failures.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Gaming.V1Beta.OperationStatus.Types.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 3;
    private string errorMessage_ = "";
    /// <summary>
    /// The human-readable error message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Done != other.Done) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Done != false) hash ^= Done.GetHashCode();
      if (ErrorCode != global::Google.Cloud.Gaming.V1Beta.OperationStatus.Types.ErrorCode.Unspecified) hash ^= ErrorCode.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Done != false) {
        output.WriteRawTag(8);
        output.WriteBool(Done);
      }
      if (ErrorCode != global::Google.Cloud.Gaming.V1Beta.OperationStatus.Types.ErrorCode.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Done != false) {
        output.WriteRawTag(8);
        output.WriteBool(Done);
      }
      if (ErrorCode != global::Google.Cloud.Gaming.V1Beta.OperationStatus.Types.ErrorCode.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Done != false) {
        size += 1 + 1;
      }
      if (ErrorCode != global::Google.Cloud.Gaming.V1Beta.OperationStatus.Types.ErrorCode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationStatus other) {
      if (other == null) {
        return;
      }
      if (other.Done != false) {
        Done = other.Done;
      }
      if (other.ErrorCode != global::Google.Cloud.Gaming.V1Beta.OperationStatus.Types.ErrorCode.Unspecified) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Done = input.ReadBool();
            break;
          }
          case 16: {
            ErrorCode = (global::Google.Cloud.Gaming.V1Beta.OperationStatus.Types.ErrorCode) input.ReadEnum();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Done = input.ReadBool();
            break;
          }
          case 16: {
            ErrorCode = (global::Google.Cloud.Gaming.V1Beta.OperationStatus.Types.ErrorCode) input.ReadEnum();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OperationStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ErrorCode {
        [pbr::OriginalName("ERROR_CODE_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 1,
        [pbr::OriginalName("PERMISSION_DENIED")] PermissionDenied = 2,
        [pbr::OriginalName("CLUSTER_CONNECTION")] ClusterConnection = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// The label selector, used to group labels on the resources.
  /// </summary>
  public sealed partial class LabelSelector : pb::IMessage<LabelSelector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabelSelector> _parser = new pb::MessageParser<LabelSelector>(() => new LabelSelector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelSelector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.V1Beta.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelSelector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelSelector(LabelSelector other) : this() {
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelSelector Clone() {
      return new LabelSelector(this);
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Resource labels for this selector.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelSelector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelSelector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Labels.Equals(other.Labels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Labels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      labels_.WriteTo(output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      labels_.WriteTo(ref output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += labels_.CalculateSize(_map_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelSelector other) {
      if (other == null) {
        return;
      }
      labels_.Add(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The realm selector, used to match realm resources.
  /// </summary>
  public sealed partial class RealmSelector : pb::IMessage<RealmSelector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RealmSelector> _parser = new pb::MessageParser<RealmSelector>(() => new RealmSelector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RealmSelector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.V1Beta.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RealmSelector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RealmSelector(RealmSelector other) : this() {
      realms_ = other.realms_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RealmSelector Clone() {
      return new RealmSelector(this);
    }

    /// <summary>Field number for the "realms" field.</summary>
    public const int RealmsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_realms_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> realms_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of realms to match.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Realms {
      get { return realms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RealmSelector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RealmSelector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!realms_.Equals(other.realms_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= realms_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      realms_.WriteTo(output, _repeated_realms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      realms_.WriteTo(ref output, _repeated_realms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += realms_.CalculateSize(_repeated_realms_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RealmSelector other) {
      if (other == null) {
        return;
      }
      realms_.Add(other.realms_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            realms_.AddEntriesFrom(input, _repeated_realms_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            realms_.AddEntriesFrom(ref input, _repeated_realms_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The schedule of a recurring or one time event. The event's time span is
  /// specified by start_time and end_time. If the scheduled event's timespan is
  /// larger than the cron_spec + cron_job_duration, the event will be recurring.
  /// If only cron_spec + cron_job_duration are specified, the event is effective
  /// starting at the local time specified by cron_spec, and is recurring.
  ///
  ///   start_time|-------[cron job]-------[cron job]-------[cron job]---|end_time
  ///   cron job: cron spec start time + duration
  /// </summary>
  public sealed partial class Schedule : pb::IMessage<Schedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schedule> _parser = new pb::MessageParser<Schedule>(() => new Schedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Schedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.V1Beta.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule(Schedule other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      cronJobDuration_ = other.cronJobDuration_ != null ? other.cronJobDuration_.Clone() : null;
      cronSpec_ = other.cronSpec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule Clone() {
      return new Schedule(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The start time of the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The end time of the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "cron_job_duration" field.</summary>
    public const int CronJobDurationFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration cronJobDuration_;
    /// <summary>
    /// The duration for the cron job event. The duration of the event is effective
    /// after the cron job's start time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration CronJobDuration {
      get { return cronJobDuration_; }
      set {
        cronJobDuration_ = value;
      }
    }

    /// <summary>Field number for the "cron_spec" field.</summary>
    public const int CronSpecFieldNumber = 4;
    private string cronSpec_ = "";
    /// <summary>
    /// The cron definition of the scheduled event. See
    /// https://en.wikipedia.org/wiki/Cron. Cron spec specifies the local time as
    /// defined by the realm.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CronSpec {
      get { return cronSpec_; }
      set {
        cronSpec_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Schedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Schedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (!object.Equals(CronJobDuration, other.CronJobDuration)) return false;
      if (CronSpec != other.CronSpec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (cronJobDuration_ != null) hash ^= CronJobDuration.GetHashCode();
      if (CronSpec.Length != 0) hash ^= CronSpec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (cronJobDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CronJobDuration);
      }
      if (CronSpec.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CronSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (cronJobDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CronJobDuration);
      }
      if (CronSpec.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CronSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (cronJobDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CronJobDuration);
      }
      if (CronSpec.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CronSpec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Schedule other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.cronJobDuration_ != null) {
        if (cronJobDuration_ == null) {
          CronJobDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        CronJobDuration.MergeFrom(other.CronJobDuration);
      }
      if (other.CronSpec.Length != 0) {
        CronSpec = other.CronSpec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            if (cronJobDuration_ == null) {
              CronJobDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(CronJobDuration);
            break;
          }
          case 34: {
            CronSpec = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            if (cronJobDuration_ == null) {
              CronJobDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(CronJobDuration);
            break;
          }
          case 34: {
            CronSpec = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Encapsulates Agones fleet spec and Agones autoscaler spec sources.
  /// </summary>
  public sealed partial class SpecSource : pb::IMessage<SpecSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpecSource> _parser = new pb::MessageParser<SpecSource>(() => new SpecSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.V1Beta.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecSource(SpecSource other) : this() {
      gameServerConfigName_ = other.gameServerConfigName_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecSource Clone() {
      return new SpecSource(this);
    }

    /// <summary>Field number for the "game_server_config_name" field.</summary>
    public const int GameServerConfigNameFieldNumber = 1;
    private string gameServerConfigName_ = "";
    /// <summary>
    /// The game server config resource. Uses the form:
    ///
    /// `projects/{project}/locations/{location}/gameServerDeployments/{deployment_id}/configs/{config_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameServerConfigName {
      get { return gameServerConfigName_; }
      set {
        gameServerConfigName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// The name of the Agones leet config or Agones scaling config used to derive
    /// the Agones fleet or Agones autoscaler spec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameServerConfigName != other.GameServerConfigName) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameServerConfigName.Length != 0) hash ^= GameServerConfigName.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameServerConfigName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerConfigName);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameServerConfigName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerConfigName);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameServerConfigName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerConfigName);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecSource other) {
      if (other == null) {
        return;
      }
      if (other.GameServerConfigName.Length != 0) {
        GameServerConfigName = other.GameServerConfigName;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameServerConfigName = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameServerConfigName = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Details about the Agones resources.
  /// </summary>
  public sealed partial class TargetDetails : pb::IMessage<TargetDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetDetails> _parser = new pb::MessageParser<TargetDetails>(() => new TargetDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.V1Beta.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetDetails(TargetDetails other) : this() {
      gameServerClusterName_ = other.gameServerClusterName_;
      gameServerDeploymentName_ = other.gameServerDeploymentName_;
      fleetDetails_ = other.fleetDetails_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetDetails Clone() {
      return new TargetDetails(this);
    }

    /// <summary>Field number for the "game_server_cluster_name" field.</summary>
    public const int GameServerClusterNameFieldNumber = 1;
    private string gameServerClusterName_ = "";
    /// <summary>
    /// The game server cluster name. Uses the form:
    ///
    /// `projects/{project}/locations/{location}/realms/{realm}/gameServerClusters/{cluster}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameServerClusterName {
      get { return gameServerClusterName_; }
      set {
        gameServerClusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "game_server_deployment_name" field.</summary>
    public const int GameServerDeploymentNameFieldNumber = 2;
    private string gameServerDeploymentName_ = "";
    /// <summary>
    /// The game server deployment name. Uses the form:
    ///
    /// `projects/{project}/locations/{location}/gameServerDeployments/{deployment_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameServerDeploymentName {
      get { return gameServerDeploymentName_; }
      set {
        gameServerDeploymentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fleet_details" field.</summary>
    public const int FleetDetailsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails> _repeated_fleetDetails_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails> fleetDetails_ = new pbc::RepeatedField<global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails>();
    /// <summary>
    /// Agones fleet details for game server clusters and game server deployments.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails> FleetDetails {
      get { return fleetDetails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameServerClusterName != other.GameServerClusterName) return false;
      if (GameServerDeploymentName != other.GameServerDeploymentName) return false;
      if(!fleetDetails_.Equals(other.fleetDetails_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameServerClusterName.Length != 0) hash ^= GameServerClusterName.GetHashCode();
      if (GameServerDeploymentName.Length != 0) hash ^= GameServerDeploymentName.GetHashCode();
      hash ^= fleetDetails_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameServerClusterName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerClusterName);
      }
      if (GameServerDeploymentName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameServerDeploymentName);
      }
      fleetDetails_.WriteTo(output, _repeated_fleetDetails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameServerClusterName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerClusterName);
      }
      if (GameServerDeploymentName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameServerDeploymentName);
      }
      fleetDetails_.WriteTo(ref output, _repeated_fleetDetails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameServerClusterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerClusterName);
      }
      if (GameServerDeploymentName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerDeploymentName);
      }
      size += fleetDetails_.CalculateSize(_repeated_fleetDetails_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetDetails other) {
      if (other == null) {
        return;
      }
      if (other.GameServerClusterName.Length != 0) {
        GameServerClusterName = other.GameServerClusterName;
      }
      if (other.GameServerDeploymentName.Length != 0) {
        GameServerDeploymentName = other.GameServerDeploymentName;
      }
      fleetDetails_.Add(other.fleetDetails_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameServerClusterName = input.ReadString();
            break;
          }
          case 18: {
            GameServerDeploymentName = input.ReadString();
            break;
          }
          case 26: {
            fleetDetails_.AddEntriesFrom(input, _repeated_fleetDetails_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameServerClusterName = input.ReadString();
            break;
          }
          case 18: {
            GameServerDeploymentName = input.ReadString();
            break;
          }
          case 26: {
            fleetDetails_.AddEntriesFrom(ref input, _repeated_fleetDetails_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TargetDetails message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Details of the target Agones fleet.
      /// </summary>
      public sealed partial class TargetFleetDetails : pb::IMessage<TargetFleetDetails>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TargetFleetDetails> _parser = new pb::MessageParser<TargetFleetDetails>(() => new TargetFleetDetails());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TargetFleetDetails> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Gaming.V1Beta.TargetDetails.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TargetFleetDetails() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TargetFleetDetails(TargetFleetDetails other) : this() {
          fleet_ = other.fleet_ != null ? other.fleet_.Clone() : null;
          autoscaler_ = other.autoscaler_ != null ? other.autoscaler_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TargetFleetDetails Clone() {
          return new TargetFleetDetails(this);
        }

        /// <summary>Field number for the "fleet" field.</summary>
        public const int FleetFieldNumber = 1;
        private global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleet fleet_;
        /// <summary>
        /// Reference to target Agones fleet.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleet Fleet {
          get { return fleet_; }
          set {
            fleet_ = value;
          }
        }

        /// <summary>Field number for the "autoscaler" field.</summary>
        public const int AutoscalerFieldNumber = 2;
        private global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleetAutoscaler autoscaler_;
        /// <summary>
        /// Reference to target Agones fleet autoscaling policy.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleetAutoscaler Autoscaler {
          get { return autoscaler_; }
          set {
            autoscaler_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TargetFleetDetails);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TargetFleetDetails other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Fleet, other.Fleet)) return false;
          if (!object.Equals(Autoscaler, other.Autoscaler)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (fleet_ != null) hash ^= Fleet.GetHashCode();
          if (autoscaler_ != null) hash ^= Autoscaler.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (fleet_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Fleet);
          }
          if (autoscaler_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Autoscaler);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (fleet_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Fleet);
          }
          if (autoscaler_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Autoscaler);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (fleet_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fleet);
          }
          if (autoscaler_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Autoscaler);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TargetFleetDetails other) {
          if (other == null) {
            return;
          }
          if (other.fleet_ != null) {
            if (fleet_ == null) {
              Fleet = new global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleet();
            }
            Fleet.MergeFrom(other.Fleet);
          }
          if (other.autoscaler_ != null) {
            if (autoscaler_ == null) {
              Autoscaler = new global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleetAutoscaler();
            }
            Autoscaler.MergeFrom(other.Autoscaler);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (fleet_ == null) {
                  Fleet = new global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleet();
                }
                input.ReadMessage(Fleet);
                break;
              }
              case 18: {
                if (autoscaler_ == null) {
                  Autoscaler = new global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleetAutoscaler();
                }
                input.ReadMessage(Autoscaler);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (fleet_ == null) {
                  Fleet = new global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleet();
                }
                input.ReadMessage(Fleet);
                break;
              }
              case 18: {
                if (autoscaler_ == null) {
                  Autoscaler = new global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Types.TargetFleetAutoscaler();
                }
                input.ReadMessage(Autoscaler);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the TargetFleetDetails message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Target Agones fleet specification.
          /// </summary>
          public sealed partial class TargetFleet : pb::IMessage<TargetFleet>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<TargetFleet> _parser = new pb::MessageParser<TargetFleet>(() => new TargetFleet());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<TargetFleet> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TargetFleet() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TargetFleet(TargetFleet other) : this() {
              name_ = other.name_;
              specSource_ = other.specSource_ != null ? other.specSource_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TargetFleet Clone() {
              return new TargetFleet(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private string name_ = "";
            /// <summary>
            /// The name of the Agones fleet.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "spec_source" field.</summary>
            public const int SpecSourceFieldNumber = 2;
            private global::Google.Cloud.Gaming.V1Beta.SpecSource specSource_;
            /// <summary>
            /// Encapsulates the source of the Agones fleet spec.
            /// The Agones fleet spec source.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.Gaming.V1Beta.SpecSource SpecSource {
              get { return specSource_; }
              set {
                specSource_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as TargetFleet);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(TargetFleet other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (!object.Equals(SpecSource, other.SpecSource)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (specSource_ != null) hash ^= SpecSource.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (specSource_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SpecSource);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (specSource_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SpecSource);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (specSource_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecSource);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(TargetFleet other) {
              if (other == null) {
                return;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.specSource_ != null) {
                if (specSource_ == null) {
                  SpecSource = new global::Google.Cloud.Gaming.V1Beta.SpecSource();
                }
                SpecSource.MergeFrom(other.SpecSource);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (specSource_ == null) {
                      SpecSource = new global::Google.Cloud.Gaming.V1Beta.SpecSource();
                    }
                    input.ReadMessage(SpecSource);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (specSource_ == null) {
                      SpecSource = new global::Google.Cloud.Gaming.V1Beta.SpecSource();
                    }
                    input.ReadMessage(SpecSource);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Target Agones autoscaler policy reference.
          /// </summary>
          public sealed partial class TargetFleetAutoscaler : pb::IMessage<TargetFleetAutoscaler>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<TargetFleetAutoscaler> _parser = new pb::MessageParser<TargetFleetAutoscaler>(() => new TargetFleetAutoscaler());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<TargetFleetAutoscaler> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Gaming.V1Beta.TargetDetails.Types.TargetFleetDetails.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TargetFleetAutoscaler() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TargetFleetAutoscaler(TargetFleetAutoscaler other) : this() {
              name_ = other.name_;
              specSource_ = other.specSource_ != null ? other.specSource_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TargetFleetAutoscaler Clone() {
              return new TargetFleetAutoscaler(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private string name_ = "";
            /// <summary>
            /// The name of the Agones autoscaler.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "spec_source" field.</summary>
            public const int SpecSourceFieldNumber = 2;
            private global::Google.Cloud.Gaming.V1Beta.SpecSource specSource_;
            /// <summary>
            /// Encapsulates the source of the Agones fleet spec.
            /// Details about the Agones autoscaler spec.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.Gaming.V1Beta.SpecSource SpecSource {
              get { return specSource_; }
              set {
                specSource_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as TargetFleetAutoscaler);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(TargetFleetAutoscaler other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (!object.Equals(SpecSource, other.SpecSource)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (specSource_ != null) hash ^= SpecSource.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (specSource_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SpecSource);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (specSource_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(SpecSource);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (specSource_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecSource);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(TargetFleetAutoscaler other) {
              if (other == null) {
                return;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.specSource_ != null) {
                if (specSource_ == null) {
                  SpecSource = new global::Google.Cloud.Gaming.V1Beta.SpecSource();
                }
                SpecSource.MergeFrom(other.SpecSource);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (specSource_ == null) {
                      SpecSource = new global::Google.Cloud.Gaming.V1Beta.SpecSource();
                    }
                    input.ReadMessage(SpecSource);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (specSource_ == null) {
                      SpecSource = new global::Google.Cloud.Gaming.V1Beta.SpecSource();
                    }
                    input.ReadMessage(SpecSource);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Encapsulates the Target state.
  /// </summary>
  public sealed partial class TargetState : pb::IMessage<TargetState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetState> _parser = new pb::MessageParser<TargetState>(() => new TargetState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.V1Beta.CommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetState(TargetState other) : this() {
      details_ = other.details_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetState Clone() {
      return new TargetState(this);
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Gaming.V1Beta.TargetDetails> _repeated_details_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Gaming.V1Beta.TargetDetails.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Gaming.V1Beta.TargetDetails> details_ = new pbc::RepeatedField<global::Google.Cloud.Gaming.V1Beta.TargetDetails>();
    /// <summary>
    /// Details about Agones fleets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Gaming.V1Beta.TargetDetails> Details {
      get { return details_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!details_.Equals(other.details_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= details_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      details_.WriteTo(output, _repeated_details_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      details_.WriteTo(ref output, _repeated_details_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += details_.CalculateSize(_repeated_details_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetState other) {
      if (other == null) {
        return;
      }
      details_.Add(other.details_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            details_.AddEntriesFrom(input, _repeated_details_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            details_.AddEntriesFrom(ref input, _repeated_details_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Details of the deployed Agones fleet.
  /// </summary>
  public sealed partial class DeployedFleetDetails : pb::IMessage<DeployedFleetDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeployedFleetDetails> _parser = new pb::MessageParser<DeployedFleetDetails>(() => new DeployedFleetDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployedFleetDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Gaming.V1Beta.CommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployedFleetDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployedFleetDetails(DeployedFleetDetails other) : this() {
      deployedFleet_ = other.deployedFleet_ != null ? other.deployedFleet_.Clone() : null;
      deployedAutoscaler_ = other.deployedAutoscaler_ != null ? other.deployedAutoscaler_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployedFleetDetails Clone() {
      return new DeployedFleetDetails(this);
    }

    /// <summary>Field number for the "deployed_fleet" field.</summary>
    public const int DeployedFleetFieldNumber = 1;
    private global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet deployedFleet_;
    /// <summary>
    /// Information about the Agones fleet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet DeployedFleet {
      get { return deployedFleet_; }
      set {
        deployedFleet_ = value;
      }
    }

    /// <summary>Field number for the "deployed_autoscaler" field.</summary>
    public const int DeployedAutoscalerFieldNumber = 2;
    private global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleetAutoscaler deployedAutoscaler_;
    /// <summary>
    /// Information about the Agones autoscaler for that fleet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleetAutoscaler DeployedAutoscaler {
      get { return deployedAutoscaler_; }
      set {
        deployedAutoscaler_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployedFleetDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployedFleetDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DeployedFleet, other.DeployedFleet)) return false;
      if (!object.Equals(DeployedAutoscaler, other.DeployedAutoscaler)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (deployedFleet_ != null) hash ^= DeployedFleet.GetHashCode();
      if (deployedAutoscaler_ != null) hash ^= DeployedAutoscaler.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (deployedFleet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeployedFleet);
      }
      if (deployedAutoscaler_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeployedAutoscaler);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (deployedFleet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeployedFleet);
      }
      if (deployedAutoscaler_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeployedAutoscaler);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (deployedFleet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeployedFleet);
      }
      if (deployedAutoscaler_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeployedAutoscaler);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployedFleetDetails other) {
      if (other == null) {
        return;
      }
      if (other.deployedFleet_ != null) {
        if (deployedFleet_ == null) {
          DeployedFleet = new global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet();
        }
        DeployedFleet.MergeFrom(other.DeployedFleet);
      }
      if (other.deployedAutoscaler_ != null) {
        if (deployedAutoscaler_ == null) {
          DeployedAutoscaler = new global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleetAutoscaler();
        }
        DeployedAutoscaler.MergeFrom(other.DeployedAutoscaler);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (deployedFleet_ == null) {
              DeployedFleet = new global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet();
            }
            input.ReadMessage(DeployedFleet);
            break;
          }
          case 18: {
            if (deployedAutoscaler_ == null) {
              DeployedAutoscaler = new global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleetAutoscaler();
            }
            input.ReadMessage(DeployedAutoscaler);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (deployedFleet_ == null) {
              DeployedFleet = new global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet();
            }
            input.ReadMessage(DeployedFleet);
            break;
          }
          case 18: {
            if (deployedAutoscaler_ == null) {
              DeployedAutoscaler = new global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleetAutoscaler();
            }
            input.ReadMessage(DeployedAutoscaler);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DeployedFleetDetails message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Agones fleet specification and details.
      /// </summary>
      public sealed partial class DeployedFleet : pb::IMessage<DeployedFleet>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DeployedFleet> _parser = new pb::MessageParser<DeployedFleet>(() => new DeployedFleet());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeployedFleet> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeployedFleet() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeployedFleet(DeployedFleet other) : this() {
          fleet_ = other.fleet_;
          fleetSpec_ = other.fleetSpec_;
          specSource_ = other.specSource_ != null ? other.specSource_.Clone() : null;
          status_ = other.status_ != null ? other.status_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeployedFleet Clone() {
          return new DeployedFleet(this);
        }

        /// <summary>Field number for the "fleet" field.</summary>
        public const int FleetFieldNumber = 1;
        private string fleet_ = "";
        /// <summary>
        /// The name of the Agones fleet.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Fleet {
          get { return fleet_; }
          set {
            fleet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fleet_spec" field.</summary>
        public const int FleetSpecFieldNumber = 2;
        private string fleetSpec_ = "";
        /// <summary>
        /// The fleet spec retrieved from the Agones fleet.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FleetSpec {
          get { return fleetSpec_; }
          set {
            fleetSpec_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "spec_source" field.</summary>
        public const int SpecSourceFieldNumber = 3;
        private global::Google.Cloud.Gaming.V1Beta.SpecSource specSource_;
        /// <summary>
        /// The source spec that is used to create the Agones fleet.
        /// The GameServerConfig resource may no longer exist in the system.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Gaming.V1Beta.SpecSource SpecSource {
          get { return specSource_; }
          set {
            specSource_ = value;
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 5;
        private global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet.Types.DeployedFleetStatus status_;
        /// <summary>
        /// The current status of the Agones fleet.
        /// Includes count of game servers in various states.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet.Types.DeployedFleetStatus Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DeployedFleet);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeployedFleet other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Fleet != other.Fleet) return false;
          if (FleetSpec != other.FleetSpec) return false;
          if (!object.Equals(SpecSource, other.SpecSource)) return false;
          if (!object.Equals(Status, other.Status)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Fleet.Length != 0) hash ^= Fleet.GetHashCode();
          if (FleetSpec.Length != 0) hash ^= FleetSpec.GetHashCode();
          if (specSource_ != null) hash ^= SpecSource.GetHashCode();
          if (status_ != null) hash ^= Status.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Fleet.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Fleet);
          }
          if (FleetSpec.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(FleetSpec);
          }
          if (specSource_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(SpecSource);
          }
          if (status_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(Status);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Fleet.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Fleet);
          }
          if (FleetSpec.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(FleetSpec);
          }
          if (specSource_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(SpecSource);
          }
          if (status_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(Status);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Fleet.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Fleet);
          }
          if (FleetSpec.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FleetSpec);
          }
          if (specSource_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecSource);
          }
          if (status_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeployedFleet other) {
          if (other == null) {
            return;
          }
          if (other.Fleet.Length != 0) {
            Fleet = other.Fleet;
          }
          if (other.FleetSpec.Length != 0) {
            FleetSpec = other.FleetSpec;
          }
          if (other.specSource_ != null) {
            if (specSource_ == null) {
              SpecSource = new global::Google.Cloud.Gaming.V1Beta.SpecSource();
            }
            SpecSource.MergeFrom(other.SpecSource);
          }
          if (other.status_ != null) {
            if (status_ == null) {
              Status = new global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet.Types.DeployedFleetStatus();
            }
            Status.MergeFrom(other.Status);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Fleet = input.ReadString();
                break;
              }
              case 18: {
                FleetSpec = input.ReadString();
                break;
              }
              case 26: {
                if (specSource_ == null) {
                  SpecSource = new global::Google.Cloud.Gaming.V1Beta.SpecSource();
                }
                input.ReadMessage(SpecSource);
                break;
              }
              case 42: {
                if (status_ == null) {
                  Status = new global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet.Types.DeployedFleetStatus();
                }
                input.ReadMessage(Status);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Fleet = input.ReadString();
                break;
              }
              case 18: {
                FleetSpec = input.ReadString();
                break;
              }
              case 26: {
                if (specSource_ == null) {
                  SpecSource = new global::Google.Cloud.Gaming.V1Beta.SpecSource();
                }
                input.ReadMessage(SpecSource);
                break;
              }
              case 42: {
                if (status_ == null) {
                  Status = new global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet.Types.DeployedFleetStatus();
                }
                input.ReadMessage(Status);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the DeployedFleet message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// DeployedFleetStatus has details about the Agones fleets such as how many
          /// are running, how many allocated, and so on.
          /// </summary>
          public sealed partial class DeployedFleetStatus : pb::IMessage<DeployedFleetStatus>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<DeployedFleetStatus> _parser = new pb::MessageParser<DeployedFleetStatus>(() => new DeployedFleetStatus());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<DeployedFleetStatus> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Types.DeployedFleet.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DeployedFleetStatus() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DeployedFleetStatus(DeployedFleetStatus other) : this() {
              readyReplicas_ = other.readyReplicas_;
              allocatedReplicas_ = other.allocatedReplicas_;
              reservedReplicas_ = other.reservedReplicas_;
              replicas_ = other.replicas_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DeployedFleetStatus Clone() {
              return new DeployedFleetStatus(this);
            }

            /// <summary>Field number for the "ready_replicas" field.</summary>
            public const int ReadyReplicasFieldNumber = 1;
            private long readyReplicas_;
            /// <summary>
            /// The number of GameServer replicas in the READY state in this fleet.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long ReadyReplicas {
              get { return readyReplicas_; }
              set {
                readyReplicas_ = value;
              }
            }

            /// <summary>Field number for the "allocated_replicas" field.</summary>
            public const int AllocatedReplicasFieldNumber = 2;
            private long allocatedReplicas_;
            /// <summary>
            /// The number of GameServer replicas in the ALLOCATED state in this fleet.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long AllocatedReplicas {
              get { return allocatedReplicas_; }
              set {
                allocatedReplicas_ = value;
              }
            }

            /// <summary>Field number for the "reserved_replicas" field.</summary>
            public const int ReservedReplicasFieldNumber = 3;
            private long reservedReplicas_;
            /// <summary>
            /// The number of GameServer replicas in the RESERVED state in this fleet.
            /// Reserved instances won't be deleted on scale down, but won't cause
            /// an autoscaler to scale up.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long ReservedReplicas {
              get { return reservedReplicas_; }
              set {
                reservedReplicas_ = value;
              }
            }

            /// <summary>Field number for the "replicas" field.</summary>
            public const int ReplicasFieldNumber = 4;
            private long replicas_;
            /// <summary>
            /// The total number of current GameServer replicas in this fleet.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long Replicas {
              get { return replicas_; }
              set {
                replicas_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as DeployedFleetStatus);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(DeployedFleetStatus other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ReadyReplicas != other.ReadyReplicas) return false;
              if (AllocatedReplicas != other.AllocatedReplicas) return false;
              if (ReservedReplicas != other.ReservedReplicas) return false;
              if (Replicas != other.Replicas) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ReadyReplicas != 0L) hash ^= ReadyReplicas.GetHashCode();
              if (AllocatedReplicas != 0L) hash ^= AllocatedReplicas.GetHashCode();
              if (ReservedReplicas != 0L) hash ^= ReservedReplicas.GetHashCode();
              if (Replicas != 0L) hash ^= Replicas.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (ReadyReplicas != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ReadyReplicas);
              }
              if (AllocatedReplicas != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(AllocatedReplicas);
              }
              if (ReservedReplicas != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(ReservedReplicas);
              }
              if (Replicas != 0L) {
                output.WriteRawTag(32);
                output.WriteInt64(Replicas);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (ReadyReplicas != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ReadyReplicas);
              }
              if (AllocatedReplicas != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(AllocatedReplicas);
              }
              if (ReservedReplicas != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(ReservedReplicas);
              }
              if (Replicas != 0L) {
                output.WriteRawTag(32);
                output.WriteInt64(Replicas);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ReadyReplicas != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReadyReplicas);
              }
              if (AllocatedReplicas != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(AllocatedReplicas);
              }
              if (ReservedReplicas != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReservedReplicas);
              }
              if (Replicas != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Replicas);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(DeployedFleetStatus other) {
              if (other == null) {
                return;
              }
              if (other.ReadyReplicas != 0L) {
                ReadyReplicas = other.ReadyReplicas;
              }
              if (other.AllocatedReplicas != 0L) {
                AllocatedReplicas = other.AllocatedReplicas;
              }
              if (other.ReservedReplicas != 0L) {
                ReservedReplicas = other.ReservedReplicas;
              }
              if (other.Replicas != 0L) {
                Replicas = other.Replicas;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ReadyReplicas = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    AllocatedReplicas = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    ReservedReplicas = input.ReadInt64();
                    break;
                  }
                  case 32: {
                    Replicas = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    ReadyReplicas = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    AllocatedReplicas = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    ReservedReplicas = input.ReadInt64();
                    break;
                  }
                  case 32: {
                    Replicas = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Details about the Agones autoscaler.
      /// </summary>
      public sealed partial class DeployedFleetAutoscaler : pb::IMessage<DeployedFleetAutoscaler>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DeployedFleetAutoscaler> _parser = new pb::MessageParser<DeployedFleetAutoscaler>(() => new DeployedFleetAutoscaler());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeployedFleetAutoscaler> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Gaming.V1Beta.DeployedFleetDetails.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeployedFleetAutoscaler() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeployedFleetAutoscaler(DeployedFleetAutoscaler other) : this() {
          autoscaler_ = other.autoscaler_;
          specSource_ = other.specSource_ != null ? other.specSource_.Clone() : null;
          fleetAutoscalerSpec_ = other.fleetAutoscalerSpec_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeployedFleetAutoscaler Clone() {
          return new DeployedFleetAutoscaler(this);
        }

        /// <summary>Field number for the "autoscaler" field.</summary>
        public const int AutoscalerFieldNumber = 1;
        private string autoscaler_ = "";
        /// <summary>
        /// The name of the Agones autoscaler.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Autoscaler {
          get { return autoscaler_; }
          set {
            autoscaler_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "spec_source" field.</summary>
        public const int SpecSourceFieldNumber = 4;
        private global::Google.Cloud.Gaming.V1Beta.SpecSource specSource_;
        /// <summary>
        /// The source spec that is used to create the autoscaler.
        /// The GameServerConfig resource may no longer exist in the system.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Gaming.V1Beta.SpecSource SpecSource {
          get { return specSource_; }
          set {
            specSource_ = value;
          }
        }

        /// <summary>Field number for the "fleet_autoscaler_spec" field.</summary>
        public const int FleetAutoscalerSpecFieldNumber = 3;
        private string fleetAutoscalerSpec_ = "";
        /// <summary>
        /// The autoscaler spec retrieved from Agones.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FleetAutoscalerSpec {
          get { return fleetAutoscalerSpec_; }
          set {
            fleetAutoscalerSpec_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DeployedFleetAutoscaler);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeployedFleetAutoscaler other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Autoscaler != other.Autoscaler) return false;
          if (!object.Equals(SpecSource, other.SpecSource)) return false;
          if (FleetAutoscalerSpec != other.FleetAutoscalerSpec) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Autoscaler.Length != 0) hash ^= Autoscaler.GetHashCode();
          if (specSource_ != null) hash ^= SpecSource.GetHashCode();
          if (FleetAutoscalerSpec.Length != 0) hash ^= FleetAutoscalerSpec.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Autoscaler.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Autoscaler);
          }
          if (FleetAutoscalerSpec.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(FleetAutoscalerSpec);
          }
          if (specSource_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(SpecSource);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Autoscaler.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Autoscaler);
          }
          if (FleetAutoscalerSpec.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(FleetAutoscalerSpec);
          }
          if (specSource_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(SpecSource);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Autoscaler.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Autoscaler);
          }
          if (specSource_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecSource);
          }
          if (FleetAutoscalerSpec.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FleetAutoscalerSpec);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeployedFleetAutoscaler other) {
          if (other == null) {
            return;
          }
          if (other.Autoscaler.Length != 0) {
            Autoscaler = other.Autoscaler;
          }
          if (other.specSource_ != null) {
            if (specSource_ == null) {
              SpecSource = new global::Google.Cloud.Gaming.V1Beta.SpecSource();
            }
            SpecSource.MergeFrom(other.SpecSource);
          }
          if (other.FleetAutoscalerSpec.Length != 0) {
            FleetAutoscalerSpec = other.FleetAutoscalerSpec;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Autoscaler = input.ReadString();
                break;
              }
              case 26: {
                FleetAutoscalerSpec = input.ReadString();
                break;
              }
              case 34: {
                if (specSource_ == null) {
                  SpecSource = new global::Google.Cloud.Gaming.V1Beta.SpecSource();
                }
                input.ReadMessage(SpecSource);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Autoscaler = input.ReadString();
                break;
              }
              case 26: {
                FleetAutoscalerSpec = input.ReadString();
                break;
              }
              case 34: {
                if (specSource_ == null) {
                  SpecSource = new global::Google.Cloud.Gaming.V1Beta.SpecSource();
                }
                input.ReadMessage(SpecSource);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
