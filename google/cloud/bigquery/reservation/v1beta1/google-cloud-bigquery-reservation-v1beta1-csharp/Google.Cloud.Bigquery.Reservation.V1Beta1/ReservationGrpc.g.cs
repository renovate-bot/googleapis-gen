// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/bigquery/reservation/v1beta1/reservation.proto
// </auto-generated>
// Original file comments:
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Bigquery.Reservation.V1Beta1 {
  /// <summary>
  /// This API allows users to manage their flat-rate BigQuery reservations.
  ///
  /// A reservation provides computational resource guarantees, in the form of
  /// [slots](https://cloud.google.com/bigquery/docs/slots), to users. A slot is a
  /// unit of computational power in BigQuery, and serves as the basic unit of
  /// parallelism. In a scan of a multi-partitioned table, a single slot operates
  /// on a single partition of the table. A reservation resource exists as a child
  /// resource of the admin project and location, e.g.:
  ///   `projects/myproject/locations/US/reservations/reservationName`.
  ///
  /// A capacity commitment is a way to purchase compute capacity for BigQuery jobs
  /// (in the form of slots) with some committed period of usage. A capacity
  /// commitment resource exists as a child resource of the admin project and
  /// location, e.g.:
  ///   `projects/myproject/locations/US/capacityCommitments/id`.
  /// </summary>
  public static partial class ReservationService
  {
    static readonly string __ServiceName = "google.cloud.bigquery.reservation.v1beta1.ReservationService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateReservationRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_CreateReservationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateReservationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> __Marshaller_google_cloud_bigquery_reservation_v1beta1_Reservation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_ListReservationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsResponse> __Marshaller_google_cloud_bigquery_reservation_v1beta1_ListReservationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetReservationRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_GetReservationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetReservationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteReservationRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_DeleteReservationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteReservationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateReservationRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_UpdateReservationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateReservationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateCapacityCommitmentRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_CreateCapacityCommitmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateCapacityCommitmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> __Marshaller_google_cloud_bigquery_reservation_v1beta1_CapacityCommitment = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_ListCapacityCommitmentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsResponse> __Marshaller_google_cloud_bigquery_reservation_v1beta1_ListCapacityCommitmentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetCapacityCommitmentRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_GetCapacityCommitmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetCapacityCommitmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteCapacityCommitmentRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_DeleteCapacityCommitmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteCapacityCommitmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateCapacityCommitmentRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_UpdateCapacityCommitmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateCapacityCommitmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_SplitCapacityCommitmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentResponse> __Marshaller_google_cloud_bigquery_reservation_v1beta1_SplitCapacityCommitmentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.MergeCapacityCommitmentsRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_MergeCapacityCommitmentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.MergeCapacityCommitmentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateAssignmentRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_CreateAssignmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateAssignmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment> __Marshaller_google_cloud_bigquery_reservation_v1beta1_Assignment = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_ListAssignmentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsResponse> __Marshaller_google_cloud_bigquery_reservation_v1beta1_ListAssignmentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteAssignmentRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_DeleteAssignmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteAssignmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_SearchAssignmentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsResponse> __Marshaller_google_cloud_bigquery_reservation_v1beta1_SearchAssignmentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.MoveAssignmentRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_MoveAssignmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.MoveAssignmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetBiReservationRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_GetBiReservationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetBiReservationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation> __Marshaller_google_cloud_bigquery_reservation_v1beta1_BiReservation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateBiReservationRequest> __Marshaller_google_cloud_bigquery_reservation_v1beta1_UpdateBiReservationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateBiReservationRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> __Method_CreateReservation = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateReservation",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_CreateReservationRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_Reservation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsResponse> __Method_ListReservations = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListReservations",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_ListReservationsRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_ListReservationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> __Method_GetReservation = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetReservation",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_GetReservationRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_Reservation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteReservationRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteReservation = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteReservationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteReservation",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_DeleteReservationRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> __Method_UpdateReservation = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateReservation",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_UpdateReservationRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_Reservation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateCapacityCommitmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> __Method_CreateCapacityCommitment = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateCapacityCommitmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCapacityCommitment",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_CreateCapacityCommitmentRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_CapacityCommitment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsResponse> __Method_ListCapacityCommitments = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCapacityCommitments",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_ListCapacityCommitmentsRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_ListCapacityCommitmentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetCapacityCommitmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> __Method_GetCapacityCommitment = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetCapacityCommitmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCapacityCommitment",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_GetCapacityCommitmentRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_CapacityCommitment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteCapacityCommitmentRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCapacityCommitment = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteCapacityCommitmentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCapacityCommitment",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_DeleteCapacityCommitmentRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateCapacityCommitmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> __Method_UpdateCapacityCommitment = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateCapacityCommitmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCapacityCommitment",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_UpdateCapacityCommitmentRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_CapacityCommitment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentResponse> __Method_SplitCapacityCommitment = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SplitCapacityCommitment",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_SplitCapacityCommitmentRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_SplitCapacityCommitmentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.MergeCapacityCommitmentsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> __Method_MergeCapacityCommitments = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.MergeCapacityCommitmentsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MergeCapacityCommitments",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_MergeCapacityCommitmentsRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_CapacityCommitment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateAssignmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment> __Method_CreateAssignment = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateAssignmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAssignment",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_CreateAssignmentRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_Assignment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsResponse> __Method_ListAssignments = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAssignments",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_ListAssignmentsRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_ListAssignmentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteAssignmentRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAssignment = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteAssignmentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAssignment",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_DeleteAssignmentRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsResponse> __Method_SearchAssignments = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchAssignments",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_SearchAssignmentsRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_SearchAssignmentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.MoveAssignmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment> __Method_MoveAssignment = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.MoveAssignmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MoveAssignment",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_MoveAssignmentRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_Assignment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetBiReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation> __Method_GetBiReservation = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetBiReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBiReservation",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_GetBiReservationRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_BiReservation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateBiReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation> __Method_UpdateBiReservation = new grpc::Method<global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateBiReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBiReservation",
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_UpdateBiReservationRequest,
        __Marshaller_google_cloud_bigquery_reservation_v1beta1_BiReservation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Bigquery.Reservation.V1Beta1.ReservationReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ReservationService</summary>
    [grpc::BindServiceMethod(typeof(ReservationService), "BindService")]
    public abstract partial class ReservationServiceBase
    {
      /// <summary>
      /// Creates a new reservation resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> CreateReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateReservationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all the reservations for the project in the specified location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsResponse> ListReservations(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns information about the reservation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> GetReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetReservationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a reservation.
      /// Returns `google.rpc.Code.FAILED_PRECONDITION` when reservation has
      /// assignments.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteReservationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an existing reservation resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> UpdateReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateReservationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new capacity commitment resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> CreateCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateCapacityCommitmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all the capacity commitments for the admin project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsResponse> ListCapacityCommitments(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns information about the capacity commitment.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> GetCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetCapacityCommitmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a capacity commitment. Attempting to delete capacity commitment
      /// before its commitment_end_time will fail with the error code
      /// `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteCapacityCommitmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an existing capacity commitment.
      ///
      /// Only `plan` and `renewal_plan` fields can be updated.
      ///
      /// Plan can only be changed to a plan of a longer commitment period.
      /// Attempting to change to a plan with shorter commitment period will fail
      /// with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> UpdateCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateCapacityCommitmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Splits capacity commitment to two commitments of the same plan and
      /// `commitment_end_time`.
      ///
      /// A common use case is to enable downgrading commitments.
      ///
      /// For example, in order to downgrade from 10000 slots to 8000, you might
      /// split a 10000 capacity commitment into commitments of 2000 and 8000. Then,
      /// you would change the plan of the first one to `FLEX` and then delete it.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentResponse> SplitCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Merges capacity commitments of the same plan into a single commitment.
      ///
      /// The resulting capacity commitment has the greater commitment_end_time
      /// out of the to-be-merged capacity commitments.
      ///
      /// Attempting to merge capacity commitments of different plan will fail
      /// with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> MergeCapacityCommitments(global::Google.Cloud.Bigquery.Reservation.V1Beta1.MergeCapacityCommitmentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an assignment object which allows the given project to submit jobs
      /// of a certain type using slots from the specified reservation.
      ///
      /// Currently a
      /// resource (project, folder, organization) can only have one assignment per
      /// each (job_type, location) combination, and that reservation will be used
      /// for all jobs of the matching type.
      ///
      /// Different assignments can be created on different levels of the
      /// projects, folders or organization hierarchy.  During query execution,
      /// the assignment is looked up at the project, folder and organization levels
      /// in that order. The first assignment found is applied to the query.
      ///
      /// When creating assignments, it does not matter if other assignments exist at
      /// higher levels.
      ///
      /// Example:
      ///
      /// * The organization `organizationA` contains two projects, `project1`
      ///   and `project2`.
      /// * Assignments for all three entities (`organizationA`, `project1`, and
      ///   `project2`) could all be created and mapped to the same or different
      ///   reservations.
      ///
      /// Returns `google.rpc.Code.PERMISSION_DENIED` if user does not have
      /// 'bigquery.admin' permissions on the project using the reservation
      /// and the project that owns this reservation.
      ///
      /// Returns `google.rpc.Code.INVALID_ARGUMENT` when location of the assignment
      /// does not match location of the reservation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment> CreateAssignment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateAssignmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists assignments.
      ///
      /// Only explicitly created assignments will be returned.
      ///
      /// Example:
      ///
      /// * Organization `organizationA` contains two projects, `project1` and
      ///   `project2`.
      /// * Reservation `res1` exists and was created previously.
      /// * CreateAssignment was used previously to define the following
      ///   associations between entities and reservations: `&lt;organizationA, res1>`
      ///   and `&lt;project1, res1>`
      ///
      /// In this example, ListAssignments will just return the above two assignments
      /// for reservation `res1`, and no expansion/merge will happen.
      ///
      /// The wildcard "-" can be used for
      /// reservations in the request. In that case all assignments belongs to the
      /// specified project and location will be listed.
      ///
      /// **Note** "-" cannot be used for projects nor locations.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsResponse> ListAssignments(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a assignment. No expansion will happen.
      ///
      /// Example:
      ///
      /// * Organization `organizationA` contains two projects, `project1` and
      ///   `project2`.
      /// * Reservation `res1` exists and was created previously.
      /// * CreateAssignment was used previously to define the following
      ///   associations between entities and reservations: `&lt;organizationA, res1>`
      ///   and `&lt;project1, res1>`
      ///
      /// In this example, deletion of the `&lt;organizationA, res1>` assignment won't
      /// affect the other assignment `&lt;project1, res1>`. After said deletion,
      /// queries from `project1` will still use `res1` while queries from
      /// `project2` will switch to use on-demand mode.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAssignment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteAssignmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Looks up assignments for a specified resource for a particular region.
      /// If the request is about a project:
      ///
      /// 1. Assignments created on the project will be returned if they exist.
      /// 2. Otherwise assignments created on the closest ancestor will be
      ///    returned.
      /// 3. Assignments for different JobTypes will all be returned.
      ///
      /// The same logic applies if the request is about a folder.
      ///
      /// If the request is about an organization, then assignments created on the
      /// organization will be returned (organization doesn't have ancestors).
      ///
      /// Comparing to ListAssignments, there are some behavior
      /// differences:
      ///
      /// 1. permission on the assignee will be verified in this API.
      /// 2. Hierarchy lookup (project->folder->organization) happens in this API.
      /// 3. Parent here is `projects/*/locations/*`, instead of
      ///    `projects/*/locations/*reservations/*`.
      ///
      /// **Note** "-" cannot be used for projects
      /// nor locations.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsResponse> SearchAssignments(global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Moves an assignment under a new reservation.
      ///
      /// This differs from removing an existing assignment and recreating a new one
      /// by providing a transactional change that ensures an assignee always has an
      /// associated reservation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment> MoveAssignment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.MoveAssignmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves a BI reservation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation> GetBiReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetBiReservationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a BI reservation.
      ///
      /// Only fields specified in the `field_mask` are updated.
      ///
      /// A singleton BI reservation always exists with default size 0.
      /// In order to reserve BI capacity it needs to be updated to an amount
      /// greater than 0. In order to release BI capacity reservation size
      /// must be set to 0.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation> UpdateBiReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateBiReservationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ReservationService</summary>
    public partial class ReservationServiceClient : grpc::ClientBase<ReservationServiceClient>
    {
      /// <summary>Creates a new client for ReservationService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ReservationServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ReservationService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ReservationServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ReservationServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ReservationServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a new reservation resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation CreateReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateReservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateReservation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new reservation resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation CreateReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateReservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateReservation, null, options, request);
      }
      /// <summary>
      /// Creates a new reservation resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> CreateReservationAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateReservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateReservationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new reservation resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> CreateReservationAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateReservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateReservation, null, options, request);
      }
      /// <summary>
      /// Lists all the reservations for the project in the specified location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsResponse ListReservations(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListReservations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the reservations for the project in the specified location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsResponse ListReservations(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListReservations, null, options, request);
      }
      /// <summary>
      /// Lists all the reservations for the project in the specified location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsResponse> ListReservationsAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListReservationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the reservations for the project in the specified location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsResponse> ListReservationsAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListReservations, null, options, request);
      }
      /// <summary>
      /// Returns information about the reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation GetReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetReservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetReservation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about the reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation GetReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetReservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetReservation, null, options, request);
      }
      /// <summary>
      /// Returns information about the reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> GetReservationAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetReservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetReservationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about the reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> GetReservationAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetReservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetReservation, null, options, request);
      }
      /// <summary>
      /// Deletes a reservation.
      /// Returns `google.rpc.Code.FAILED_PRECONDITION` when reservation has
      /// assignments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteReservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteReservation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a reservation.
      /// Returns `google.rpc.Code.FAILED_PRECONDITION` when reservation has
      /// assignments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteReservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteReservation, null, options, request);
      }
      /// <summary>
      /// Deletes a reservation.
      /// Returns `google.rpc.Code.FAILED_PRECONDITION` when reservation has
      /// assignments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteReservationAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteReservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteReservationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a reservation.
      /// Returns `google.rpc.Code.FAILED_PRECONDITION` when reservation has
      /// assignments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteReservationAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteReservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteReservation, null, options, request);
      }
      /// <summary>
      /// Updates an existing reservation resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation UpdateReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateReservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateReservation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing reservation resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation UpdateReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateReservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateReservation, null, options, request);
      }
      /// <summary>
      /// Updates an existing reservation resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> UpdateReservationAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateReservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateReservationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing reservation resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation> UpdateReservationAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateReservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateReservation, null, options, request);
      }
      /// <summary>
      /// Creates a new capacity commitment resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment CreateCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateCapacityCommitmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCapacityCommitment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new capacity commitment resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment CreateCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateCapacityCommitmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCapacityCommitment, null, options, request);
      }
      /// <summary>
      /// Creates a new capacity commitment resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> CreateCapacityCommitmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateCapacityCommitmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCapacityCommitmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new capacity commitment resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> CreateCapacityCommitmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateCapacityCommitmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCapacityCommitment, null, options, request);
      }
      /// <summary>
      /// Lists all the capacity commitments for the admin project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsResponse ListCapacityCommitments(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCapacityCommitments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the capacity commitments for the admin project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsResponse ListCapacityCommitments(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCapacityCommitments, null, options, request);
      }
      /// <summary>
      /// Lists all the capacity commitments for the admin project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsResponse> ListCapacityCommitmentsAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCapacityCommitmentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the capacity commitments for the admin project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsResponse> ListCapacityCommitmentsAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCapacityCommitments, null, options, request);
      }
      /// <summary>
      /// Returns information about the capacity commitment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment GetCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetCapacityCommitmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCapacityCommitment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about the capacity commitment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment GetCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetCapacityCommitmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCapacityCommitment, null, options, request);
      }
      /// <summary>
      /// Returns information about the capacity commitment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> GetCapacityCommitmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetCapacityCommitmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCapacityCommitmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about the capacity commitment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> GetCapacityCommitmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetCapacityCommitmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCapacityCommitment, null, options, request);
      }
      /// <summary>
      /// Deletes a capacity commitment. Attempting to delete capacity commitment
      /// before its commitment_end_time will fail with the error code
      /// `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteCapacityCommitmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCapacityCommitment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a capacity commitment. Attempting to delete capacity commitment
      /// before its commitment_end_time will fail with the error code
      /// `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteCapacityCommitmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCapacityCommitment, null, options, request);
      }
      /// <summary>
      /// Deletes a capacity commitment. Attempting to delete capacity commitment
      /// before its commitment_end_time will fail with the error code
      /// `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCapacityCommitmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteCapacityCommitmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCapacityCommitmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a capacity commitment. Attempting to delete capacity commitment
      /// before its commitment_end_time will fail with the error code
      /// `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCapacityCommitmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteCapacityCommitmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCapacityCommitment, null, options, request);
      }
      /// <summary>
      /// Updates an existing capacity commitment.
      ///
      /// Only `plan` and `renewal_plan` fields can be updated.
      ///
      /// Plan can only be changed to a plan of a longer commitment period.
      /// Attempting to change to a plan with shorter commitment period will fail
      /// with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment UpdateCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateCapacityCommitmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCapacityCommitment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing capacity commitment.
      ///
      /// Only `plan` and `renewal_plan` fields can be updated.
      ///
      /// Plan can only be changed to a plan of a longer commitment period.
      /// Attempting to change to a plan with shorter commitment period will fail
      /// with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment UpdateCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateCapacityCommitmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCapacityCommitment, null, options, request);
      }
      /// <summary>
      /// Updates an existing capacity commitment.
      ///
      /// Only `plan` and `renewal_plan` fields can be updated.
      ///
      /// Plan can only be changed to a plan of a longer commitment period.
      /// Attempting to change to a plan with shorter commitment period will fail
      /// with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> UpdateCapacityCommitmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateCapacityCommitmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCapacityCommitmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing capacity commitment.
      ///
      /// Only `plan` and `renewal_plan` fields can be updated.
      ///
      /// Plan can only be changed to a plan of a longer commitment period.
      /// Attempting to change to a plan with shorter commitment period will fail
      /// with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> UpdateCapacityCommitmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateCapacityCommitmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCapacityCommitment, null, options, request);
      }
      /// <summary>
      /// Splits capacity commitment to two commitments of the same plan and
      /// `commitment_end_time`.
      ///
      /// A common use case is to enable downgrading commitments.
      ///
      /// For example, in order to downgrade from 10000 slots to 8000, you might
      /// split a 10000 capacity commitment into commitments of 2000 and 8000. Then,
      /// you would change the plan of the first one to `FLEX` and then delete it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentResponse SplitCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SplitCapacityCommitment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Splits capacity commitment to two commitments of the same plan and
      /// `commitment_end_time`.
      ///
      /// A common use case is to enable downgrading commitments.
      ///
      /// For example, in order to downgrade from 10000 slots to 8000, you might
      /// split a 10000 capacity commitment into commitments of 2000 and 8000. Then,
      /// you would change the plan of the first one to `FLEX` and then delete it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentResponse SplitCapacityCommitment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SplitCapacityCommitment, null, options, request);
      }
      /// <summary>
      /// Splits capacity commitment to two commitments of the same plan and
      /// `commitment_end_time`.
      ///
      /// A common use case is to enable downgrading commitments.
      ///
      /// For example, in order to downgrade from 10000 slots to 8000, you might
      /// split a 10000 capacity commitment into commitments of 2000 and 8000. Then,
      /// you would change the plan of the first one to `FLEX` and then delete it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentResponse> SplitCapacityCommitmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SplitCapacityCommitmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Splits capacity commitment to two commitments of the same plan and
      /// `commitment_end_time`.
      ///
      /// A common use case is to enable downgrading commitments.
      ///
      /// For example, in order to downgrade from 10000 slots to 8000, you might
      /// split a 10000 capacity commitment into commitments of 2000 and 8000. Then,
      /// you would change the plan of the first one to `FLEX` and then delete it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentResponse> SplitCapacityCommitmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SplitCapacityCommitment, null, options, request);
      }
      /// <summary>
      /// Merges capacity commitments of the same plan into a single commitment.
      ///
      /// The resulting capacity commitment has the greater commitment_end_time
      /// out of the to-be-merged capacity commitments.
      ///
      /// Attempting to merge capacity commitments of different plan will fail
      /// with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment MergeCapacityCommitments(global::Google.Cloud.Bigquery.Reservation.V1Beta1.MergeCapacityCommitmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MergeCapacityCommitments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Merges capacity commitments of the same plan into a single commitment.
      ///
      /// The resulting capacity commitment has the greater commitment_end_time
      /// out of the to-be-merged capacity commitments.
      ///
      /// Attempting to merge capacity commitments of different plan will fail
      /// with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment MergeCapacityCommitments(global::Google.Cloud.Bigquery.Reservation.V1Beta1.MergeCapacityCommitmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MergeCapacityCommitments, null, options, request);
      }
      /// <summary>
      /// Merges capacity commitments of the same plan into a single commitment.
      ///
      /// The resulting capacity commitment has the greater commitment_end_time
      /// out of the to-be-merged capacity commitments.
      ///
      /// Attempting to merge capacity commitments of different plan will fail
      /// with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> MergeCapacityCommitmentsAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.MergeCapacityCommitmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MergeCapacityCommitmentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Merges capacity commitments of the same plan into a single commitment.
      ///
      /// The resulting capacity commitment has the greater commitment_end_time
      /// out of the to-be-merged capacity commitments.
      ///
      /// Attempting to merge capacity commitments of different plan will fail
      /// with the error code `google.rpc.Code.FAILED_PRECONDITION`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment> MergeCapacityCommitmentsAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.MergeCapacityCommitmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MergeCapacityCommitments, null, options, request);
      }
      /// <summary>
      /// Creates an assignment object which allows the given project to submit jobs
      /// of a certain type using slots from the specified reservation.
      ///
      /// Currently a
      /// resource (project, folder, organization) can only have one assignment per
      /// each (job_type, location) combination, and that reservation will be used
      /// for all jobs of the matching type.
      ///
      /// Different assignments can be created on different levels of the
      /// projects, folders or organization hierarchy.  During query execution,
      /// the assignment is looked up at the project, folder and organization levels
      /// in that order. The first assignment found is applied to the query.
      ///
      /// When creating assignments, it does not matter if other assignments exist at
      /// higher levels.
      ///
      /// Example:
      ///
      /// * The organization `organizationA` contains two projects, `project1`
      ///   and `project2`.
      /// * Assignments for all three entities (`organizationA`, `project1`, and
      ///   `project2`) could all be created and mapped to the same or different
      ///   reservations.
      ///
      /// Returns `google.rpc.Code.PERMISSION_DENIED` if user does not have
      /// 'bigquery.admin' permissions on the project using the reservation
      /// and the project that owns this reservation.
      ///
      /// Returns `google.rpc.Code.INVALID_ARGUMENT` when location of the assignment
      /// does not match location of the reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment CreateAssignment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateAssignmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAssignment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an assignment object which allows the given project to submit jobs
      /// of a certain type using slots from the specified reservation.
      ///
      /// Currently a
      /// resource (project, folder, organization) can only have one assignment per
      /// each (job_type, location) combination, and that reservation will be used
      /// for all jobs of the matching type.
      ///
      /// Different assignments can be created on different levels of the
      /// projects, folders or organization hierarchy.  During query execution,
      /// the assignment is looked up at the project, folder and organization levels
      /// in that order. The first assignment found is applied to the query.
      ///
      /// When creating assignments, it does not matter if other assignments exist at
      /// higher levels.
      ///
      /// Example:
      ///
      /// * The organization `organizationA` contains two projects, `project1`
      ///   and `project2`.
      /// * Assignments for all three entities (`organizationA`, `project1`, and
      ///   `project2`) could all be created and mapped to the same or different
      ///   reservations.
      ///
      /// Returns `google.rpc.Code.PERMISSION_DENIED` if user does not have
      /// 'bigquery.admin' permissions on the project using the reservation
      /// and the project that owns this reservation.
      ///
      /// Returns `google.rpc.Code.INVALID_ARGUMENT` when location of the assignment
      /// does not match location of the reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment CreateAssignment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateAssignmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAssignment, null, options, request);
      }
      /// <summary>
      /// Creates an assignment object which allows the given project to submit jobs
      /// of a certain type using slots from the specified reservation.
      ///
      /// Currently a
      /// resource (project, folder, organization) can only have one assignment per
      /// each (job_type, location) combination, and that reservation will be used
      /// for all jobs of the matching type.
      ///
      /// Different assignments can be created on different levels of the
      /// projects, folders or organization hierarchy.  During query execution,
      /// the assignment is looked up at the project, folder and organization levels
      /// in that order. The first assignment found is applied to the query.
      ///
      /// When creating assignments, it does not matter if other assignments exist at
      /// higher levels.
      ///
      /// Example:
      ///
      /// * The organization `organizationA` contains two projects, `project1`
      ///   and `project2`.
      /// * Assignments for all three entities (`organizationA`, `project1`, and
      ///   `project2`) could all be created and mapped to the same or different
      ///   reservations.
      ///
      /// Returns `google.rpc.Code.PERMISSION_DENIED` if user does not have
      /// 'bigquery.admin' permissions on the project using the reservation
      /// and the project that owns this reservation.
      ///
      /// Returns `google.rpc.Code.INVALID_ARGUMENT` when location of the assignment
      /// does not match location of the reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment> CreateAssignmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateAssignmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAssignmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an assignment object which allows the given project to submit jobs
      /// of a certain type using slots from the specified reservation.
      ///
      /// Currently a
      /// resource (project, folder, organization) can only have one assignment per
      /// each (job_type, location) combination, and that reservation will be used
      /// for all jobs of the matching type.
      ///
      /// Different assignments can be created on different levels of the
      /// projects, folders or organization hierarchy.  During query execution,
      /// the assignment is looked up at the project, folder and organization levels
      /// in that order. The first assignment found is applied to the query.
      ///
      /// When creating assignments, it does not matter if other assignments exist at
      /// higher levels.
      ///
      /// Example:
      ///
      /// * The organization `organizationA` contains two projects, `project1`
      ///   and `project2`.
      /// * Assignments for all three entities (`organizationA`, `project1`, and
      ///   `project2`) could all be created and mapped to the same or different
      ///   reservations.
      ///
      /// Returns `google.rpc.Code.PERMISSION_DENIED` if user does not have
      /// 'bigquery.admin' permissions on the project using the reservation
      /// and the project that owns this reservation.
      ///
      /// Returns `google.rpc.Code.INVALID_ARGUMENT` when location of the assignment
      /// does not match location of the reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment> CreateAssignmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateAssignmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAssignment, null, options, request);
      }
      /// <summary>
      /// Lists assignments.
      ///
      /// Only explicitly created assignments will be returned.
      ///
      /// Example:
      ///
      /// * Organization `organizationA` contains two projects, `project1` and
      ///   `project2`.
      /// * Reservation `res1` exists and was created previously.
      /// * CreateAssignment was used previously to define the following
      ///   associations between entities and reservations: `&lt;organizationA, res1>`
      ///   and `&lt;project1, res1>`
      ///
      /// In this example, ListAssignments will just return the above two assignments
      /// for reservation `res1`, and no expansion/merge will happen.
      ///
      /// The wildcard "-" can be used for
      /// reservations in the request. In that case all assignments belongs to the
      /// specified project and location will be listed.
      ///
      /// **Note** "-" cannot be used for projects nor locations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsResponse ListAssignments(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAssignments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists assignments.
      ///
      /// Only explicitly created assignments will be returned.
      ///
      /// Example:
      ///
      /// * Organization `organizationA` contains two projects, `project1` and
      ///   `project2`.
      /// * Reservation `res1` exists and was created previously.
      /// * CreateAssignment was used previously to define the following
      ///   associations between entities and reservations: `&lt;organizationA, res1>`
      ///   and `&lt;project1, res1>`
      ///
      /// In this example, ListAssignments will just return the above two assignments
      /// for reservation `res1`, and no expansion/merge will happen.
      ///
      /// The wildcard "-" can be used for
      /// reservations in the request. In that case all assignments belongs to the
      /// specified project and location will be listed.
      ///
      /// **Note** "-" cannot be used for projects nor locations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsResponse ListAssignments(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAssignments, null, options, request);
      }
      /// <summary>
      /// Lists assignments.
      ///
      /// Only explicitly created assignments will be returned.
      ///
      /// Example:
      ///
      /// * Organization `organizationA` contains two projects, `project1` and
      ///   `project2`.
      /// * Reservation `res1` exists and was created previously.
      /// * CreateAssignment was used previously to define the following
      ///   associations between entities and reservations: `&lt;organizationA, res1>`
      ///   and `&lt;project1, res1>`
      ///
      /// In this example, ListAssignments will just return the above two assignments
      /// for reservation `res1`, and no expansion/merge will happen.
      ///
      /// The wildcard "-" can be used for
      /// reservations in the request. In that case all assignments belongs to the
      /// specified project and location will be listed.
      ///
      /// **Note** "-" cannot be used for projects nor locations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsResponse> ListAssignmentsAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAssignmentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists assignments.
      ///
      /// Only explicitly created assignments will be returned.
      ///
      /// Example:
      ///
      /// * Organization `organizationA` contains two projects, `project1` and
      ///   `project2`.
      /// * Reservation `res1` exists and was created previously.
      /// * CreateAssignment was used previously to define the following
      ///   associations between entities and reservations: `&lt;organizationA, res1>`
      ///   and `&lt;project1, res1>`
      ///
      /// In this example, ListAssignments will just return the above two assignments
      /// for reservation `res1`, and no expansion/merge will happen.
      ///
      /// The wildcard "-" can be used for
      /// reservations in the request. In that case all assignments belongs to the
      /// specified project and location will be listed.
      ///
      /// **Note** "-" cannot be used for projects nor locations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsResponse> ListAssignmentsAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAssignments, null, options, request);
      }
      /// <summary>
      /// Deletes a assignment. No expansion will happen.
      ///
      /// Example:
      ///
      /// * Organization `organizationA` contains two projects, `project1` and
      ///   `project2`.
      /// * Reservation `res1` exists and was created previously.
      /// * CreateAssignment was used previously to define the following
      ///   associations between entities and reservations: `&lt;organizationA, res1>`
      ///   and `&lt;project1, res1>`
      ///
      /// In this example, deletion of the `&lt;organizationA, res1>` assignment won't
      /// affect the other assignment `&lt;project1, res1>`. After said deletion,
      /// queries from `project1` will still use `res1` while queries from
      /// `project2` will switch to use on-demand mode.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAssignment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteAssignmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAssignment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a assignment. No expansion will happen.
      ///
      /// Example:
      ///
      /// * Organization `organizationA` contains two projects, `project1` and
      ///   `project2`.
      /// * Reservation `res1` exists and was created previously.
      /// * CreateAssignment was used previously to define the following
      ///   associations between entities and reservations: `&lt;organizationA, res1>`
      ///   and `&lt;project1, res1>`
      ///
      /// In this example, deletion of the `&lt;organizationA, res1>` assignment won't
      /// affect the other assignment `&lt;project1, res1>`. After said deletion,
      /// queries from `project1` will still use `res1` while queries from
      /// `project2` will switch to use on-demand mode.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAssignment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteAssignmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAssignment, null, options, request);
      }
      /// <summary>
      /// Deletes a assignment. No expansion will happen.
      ///
      /// Example:
      ///
      /// * Organization `organizationA` contains two projects, `project1` and
      ///   `project2`.
      /// * Reservation `res1` exists and was created previously.
      /// * CreateAssignment was used previously to define the following
      ///   associations between entities and reservations: `&lt;organizationA, res1>`
      ///   and `&lt;project1, res1>`
      ///
      /// In this example, deletion of the `&lt;organizationA, res1>` assignment won't
      /// affect the other assignment `&lt;project1, res1>`. After said deletion,
      /// queries from `project1` will still use `res1` while queries from
      /// `project2` will switch to use on-demand mode.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAssignmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteAssignmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAssignmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a assignment. No expansion will happen.
      ///
      /// Example:
      ///
      /// * Organization `organizationA` contains two projects, `project1` and
      ///   `project2`.
      /// * Reservation `res1` exists and was created previously.
      /// * CreateAssignment was used previously to define the following
      ///   associations between entities and reservations: `&lt;organizationA, res1>`
      ///   and `&lt;project1, res1>`
      ///
      /// In this example, deletion of the `&lt;organizationA, res1>` assignment won't
      /// affect the other assignment `&lt;project1, res1>`. After said deletion,
      /// queries from `project1` will still use `res1` while queries from
      /// `project2` will switch to use on-demand mode.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAssignmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteAssignmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAssignment, null, options, request);
      }
      /// <summary>
      /// Looks up assignments for a specified resource for a particular region.
      /// If the request is about a project:
      ///
      /// 1. Assignments created on the project will be returned if they exist.
      /// 2. Otherwise assignments created on the closest ancestor will be
      ///    returned.
      /// 3. Assignments for different JobTypes will all be returned.
      ///
      /// The same logic applies if the request is about a folder.
      ///
      /// If the request is about an organization, then assignments created on the
      /// organization will be returned (organization doesn't have ancestors).
      ///
      /// Comparing to ListAssignments, there are some behavior
      /// differences:
      ///
      /// 1. permission on the assignee will be verified in this API.
      /// 2. Hierarchy lookup (project->folder->organization) happens in this API.
      /// 3. Parent here is `projects/*/locations/*`, instead of
      ///    `projects/*/locations/*reservations/*`.
      ///
      /// **Note** "-" cannot be used for projects
      /// nor locations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsResponse SearchAssignments(global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchAssignments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Looks up assignments for a specified resource for a particular region.
      /// If the request is about a project:
      ///
      /// 1. Assignments created on the project will be returned if they exist.
      /// 2. Otherwise assignments created on the closest ancestor will be
      ///    returned.
      /// 3. Assignments for different JobTypes will all be returned.
      ///
      /// The same logic applies if the request is about a folder.
      ///
      /// If the request is about an organization, then assignments created on the
      /// organization will be returned (organization doesn't have ancestors).
      ///
      /// Comparing to ListAssignments, there are some behavior
      /// differences:
      ///
      /// 1. permission on the assignee will be verified in this API.
      /// 2. Hierarchy lookup (project->folder->organization) happens in this API.
      /// 3. Parent here is `projects/*/locations/*`, instead of
      ///    `projects/*/locations/*reservations/*`.
      ///
      /// **Note** "-" cannot be used for projects
      /// nor locations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsResponse SearchAssignments(global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchAssignments, null, options, request);
      }
      /// <summary>
      /// Looks up assignments for a specified resource for a particular region.
      /// If the request is about a project:
      ///
      /// 1. Assignments created on the project will be returned if they exist.
      /// 2. Otherwise assignments created on the closest ancestor will be
      ///    returned.
      /// 3. Assignments for different JobTypes will all be returned.
      ///
      /// The same logic applies if the request is about a folder.
      ///
      /// If the request is about an organization, then assignments created on the
      /// organization will be returned (organization doesn't have ancestors).
      ///
      /// Comparing to ListAssignments, there are some behavior
      /// differences:
      ///
      /// 1. permission on the assignee will be verified in this API.
      /// 2. Hierarchy lookup (project->folder->organization) happens in this API.
      /// 3. Parent here is `projects/*/locations/*`, instead of
      ///    `projects/*/locations/*reservations/*`.
      ///
      /// **Note** "-" cannot be used for projects
      /// nor locations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsResponse> SearchAssignmentsAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchAssignmentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Looks up assignments for a specified resource for a particular region.
      /// If the request is about a project:
      ///
      /// 1. Assignments created on the project will be returned if they exist.
      /// 2. Otherwise assignments created on the closest ancestor will be
      ///    returned.
      /// 3. Assignments for different JobTypes will all be returned.
      ///
      /// The same logic applies if the request is about a folder.
      ///
      /// If the request is about an organization, then assignments created on the
      /// organization will be returned (organization doesn't have ancestors).
      ///
      /// Comparing to ListAssignments, there are some behavior
      /// differences:
      ///
      /// 1. permission on the assignee will be verified in this API.
      /// 2. Hierarchy lookup (project->folder->organization) happens in this API.
      /// 3. Parent here is `projects/*/locations/*`, instead of
      ///    `projects/*/locations/*reservations/*`.
      ///
      /// **Note** "-" cannot be used for projects
      /// nor locations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsResponse> SearchAssignmentsAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchAssignments, null, options, request);
      }
      /// <summary>
      /// Moves an assignment under a new reservation.
      ///
      /// This differs from removing an existing assignment and recreating a new one
      /// by providing a transactional change that ensures an assignee always has an
      /// associated reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment MoveAssignment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.MoveAssignmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveAssignment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Moves an assignment under a new reservation.
      ///
      /// This differs from removing an existing assignment and recreating a new one
      /// by providing a transactional change that ensures an assignee always has an
      /// associated reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment MoveAssignment(global::Google.Cloud.Bigquery.Reservation.V1Beta1.MoveAssignmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MoveAssignment, null, options, request);
      }
      /// <summary>
      /// Moves an assignment under a new reservation.
      ///
      /// This differs from removing an existing assignment and recreating a new one
      /// by providing a transactional change that ensures an assignee always has an
      /// associated reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment> MoveAssignmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.MoveAssignmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveAssignmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Moves an assignment under a new reservation.
      ///
      /// This differs from removing an existing assignment and recreating a new one
      /// by providing a transactional change that ensures an assignee always has an
      /// associated reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment> MoveAssignmentAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.MoveAssignmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MoveAssignment, null, options, request);
      }
      /// <summary>
      /// Retrieves a BI reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation GetBiReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetBiReservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBiReservation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a BI reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation GetBiReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetBiReservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBiReservation, null, options, request);
      }
      /// <summary>
      /// Retrieves a BI reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation> GetBiReservationAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetBiReservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBiReservationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a BI reservation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation> GetBiReservationAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetBiReservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBiReservation, null, options, request);
      }
      /// <summary>
      /// Updates a BI reservation.
      ///
      /// Only fields specified in the `field_mask` are updated.
      ///
      /// A singleton BI reservation always exists with default size 0.
      /// In order to reserve BI capacity it needs to be updated to an amount
      /// greater than 0. In order to release BI capacity reservation size
      /// must be set to 0.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation UpdateBiReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateBiReservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBiReservation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a BI reservation.
      ///
      /// Only fields specified in the `field_mask` are updated.
      ///
      /// A singleton BI reservation always exists with default size 0.
      /// In order to reserve BI capacity it needs to be updated to an amount
      /// greater than 0. In order to release BI capacity reservation size
      /// must be set to 0.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation UpdateBiReservation(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateBiReservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBiReservation, null, options, request);
      }
      /// <summary>
      /// Updates a BI reservation.
      ///
      /// Only fields specified in the `field_mask` are updated.
      ///
      /// A singleton BI reservation always exists with default size 0.
      /// In order to reserve BI capacity it needs to be updated to an amount
      /// greater than 0. In order to release BI capacity reservation size
      /// must be set to 0.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation> UpdateBiReservationAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateBiReservationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBiReservationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a BI reservation.
      ///
      /// Only fields specified in the `field_mask` are updated.
      ///
      /// A singleton BI reservation always exists with default size 0.
      /// In order to reserve BI capacity it needs to be updated to an amount
      /// greater than 0. In order to release BI capacity reservation size
      /// must be set to 0.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation> UpdateBiReservationAsync(global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateBiReservationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBiReservation, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ReservationServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ReservationServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ReservationServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateReservation, serviceImpl.CreateReservation)
          .AddMethod(__Method_ListReservations, serviceImpl.ListReservations)
          .AddMethod(__Method_GetReservation, serviceImpl.GetReservation)
          .AddMethod(__Method_DeleteReservation, serviceImpl.DeleteReservation)
          .AddMethod(__Method_UpdateReservation, serviceImpl.UpdateReservation)
          .AddMethod(__Method_CreateCapacityCommitment, serviceImpl.CreateCapacityCommitment)
          .AddMethod(__Method_ListCapacityCommitments, serviceImpl.ListCapacityCommitments)
          .AddMethod(__Method_GetCapacityCommitment, serviceImpl.GetCapacityCommitment)
          .AddMethod(__Method_DeleteCapacityCommitment, serviceImpl.DeleteCapacityCommitment)
          .AddMethod(__Method_UpdateCapacityCommitment, serviceImpl.UpdateCapacityCommitment)
          .AddMethod(__Method_SplitCapacityCommitment, serviceImpl.SplitCapacityCommitment)
          .AddMethod(__Method_MergeCapacityCommitments, serviceImpl.MergeCapacityCommitments)
          .AddMethod(__Method_CreateAssignment, serviceImpl.CreateAssignment)
          .AddMethod(__Method_ListAssignments, serviceImpl.ListAssignments)
          .AddMethod(__Method_DeleteAssignment, serviceImpl.DeleteAssignment)
          .AddMethod(__Method_SearchAssignments, serviceImpl.SearchAssignments)
          .AddMethod(__Method_MoveAssignment, serviceImpl.MoveAssignment)
          .AddMethod(__Method_GetBiReservation, serviceImpl.GetBiReservation)
          .AddMethod(__Method_UpdateBiReservation, serviceImpl.UpdateBiReservation).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ReservationServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateReservation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation>(serviceImpl.CreateReservation));
      serviceBinder.AddMethod(__Method_ListReservations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListReservationsResponse>(serviceImpl.ListReservations));
      serviceBinder.AddMethod(__Method_GetReservation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation>(serviceImpl.GetReservation));
      serviceBinder.AddMethod(__Method_DeleteReservation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteReservationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteReservation));
      serviceBinder.AddMethod(__Method_UpdateReservation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Reservation>(serviceImpl.UpdateReservation));
      serviceBinder.AddMethod(__Method_CreateCapacityCommitment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateCapacityCommitmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment>(serviceImpl.CreateCapacityCommitment));
      serviceBinder.AddMethod(__Method_ListCapacityCommitments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListCapacityCommitmentsResponse>(serviceImpl.ListCapacityCommitments));
      serviceBinder.AddMethod(__Method_GetCapacityCommitment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetCapacityCommitmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment>(serviceImpl.GetCapacityCommitment));
      serviceBinder.AddMethod(__Method_DeleteCapacityCommitment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteCapacityCommitmentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteCapacityCommitment));
      serviceBinder.AddMethod(__Method_UpdateCapacityCommitment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateCapacityCommitmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment>(serviceImpl.UpdateCapacityCommitment));
      serviceBinder.AddMethod(__Method_SplitCapacityCommitment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.SplitCapacityCommitmentResponse>(serviceImpl.SplitCapacityCommitment));
      serviceBinder.AddMethod(__Method_MergeCapacityCommitments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.MergeCapacityCommitmentsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.CapacityCommitment>(serviceImpl.MergeCapacityCommitments));
      serviceBinder.AddMethod(__Method_CreateAssignment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.CreateAssignmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment>(serviceImpl.CreateAssignment));
      serviceBinder.AddMethod(__Method_ListAssignments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.ListAssignmentsResponse>(serviceImpl.ListAssignments));
      serviceBinder.AddMethod(__Method_DeleteAssignment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.DeleteAssignmentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAssignment));
      serviceBinder.AddMethod(__Method_SearchAssignments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.SearchAssignmentsResponse>(serviceImpl.SearchAssignments));
      serviceBinder.AddMethod(__Method_MoveAssignment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.MoveAssignmentRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.Assignment>(serviceImpl.MoveAssignment));
      serviceBinder.AddMethod(__Method_GetBiReservation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.GetBiReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation>(serviceImpl.GetBiReservation));
      serviceBinder.AddMethod(__Method_UpdateBiReservation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Bigquery.Reservation.V1Beta1.UpdateBiReservationRequest, global::Google.Cloud.Bigquery.Reservation.V1Beta1.BiReservation>(serviceImpl.UpdateBiReservation));
    }

  }
}
#endregion
