// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/bigquery/v2/standard_sql.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Bigquery.V2 {

  /// <summary>Holder for reflection information generated from google/cloud/bigquery/v2/standard_sql.proto</summary>
  public static partial class StandardSqlReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/bigquery/v2/standard_sql.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StandardSqlReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Citnb29nbGUvY2xvdWQvYmlncXVlcnkvdjIvc3RhbmRhcmRfc3FsLnByb3Rv",
            "Ehhnb29nbGUuY2xvdWQuYmlncXVlcnkudjIaH2dvb2dsZS9hcGkvZmllbGRf",
            "YmVoYXZpb3IucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8i",
            "8wMKE1N0YW5kYXJkU3FsRGF0YVR5cGUSTgoJdHlwZV9raW5kGAEgASgOMjYu",
            "Z29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnYyLlN0YW5kYXJkU3FsRGF0YVR5cGUu",
            "VHlwZUtpbmRCA+BBAhJLChJhcnJheV9lbGVtZW50X3R5cGUYAiABKAsyLS5n",
            "b29nbGUuY2xvdWQuYmlncXVlcnkudjIuU3RhbmRhcmRTcWxEYXRhVHlwZUgA",
            "EkYKC3N0cnVjdF90eXBlGAMgASgLMi8uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5",
            "LnYyLlN0YW5kYXJkU3FsU3RydWN0VHlwZUgAIuoBCghUeXBlS2luZBIZChVU",
            "WVBFX0tJTkRfVU5TUEVDSUZJRUQQABIJCgVJTlQ2NBACEggKBEJPT0wQBRIL",
            "CgdGTE9BVDY0EAcSCgoGU1RSSU5HEAgSCQoFQllURVMQCRINCglUSU1FU1RB",
            "TVAQExIICgREQVRFEAoSCAoEVElNRRAUEgwKCERBVEVUSU1FEBUSDAoISU5U",
            "RVJWQUwQGhINCglHRU9HUkFQSFkQFhILCgdOVU1FUklDEBcSDgoKQklHTlVN",
            "RVJJQxAYEggKBEpTT04QGRIJCgVBUlJBWRAQEgoKBlNUUlVDVBARQgoKCHN1",
            "Yl90eXBlImcKEFN0YW5kYXJkU3FsRmllbGQSEQoEbmFtZRgBIAEoCUID4EEB",
            "EkAKBHR5cGUYAiABKAsyLS5nb29nbGUuY2xvdWQuYmlncXVlcnkudjIuU3Rh",
            "bmRhcmRTcWxEYXRhVHlwZUID4EEBIlMKFVN0YW5kYXJkU3FsU3RydWN0VHlw",
            "ZRI6CgZmaWVsZHMYASADKAsyKi5nb29nbGUuY2xvdWQuYmlncXVlcnkudjIu",
            "U3RhbmRhcmRTcWxGaWVsZCJTChRTdGFuZGFyZFNxbFRhYmxlVHlwZRI7Cgdj",
            "b2x1bW5zGAEgAygLMiouZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnYyLlN0YW5k",
            "YXJkU3FsRmllbGRCcgocY29tLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS52MkIQ",
            "U3RhbmRhcmRTcWxQcm90b1pAZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8v",
            "Z29vZ2xlYXBpcy9jbG91ZC9iaWdxdWVyeS92MjtiaWdxdWVyeWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.V2.StandardSqlDataType), global::Google.Cloud.Bigquery.V2.StandardSqlDataType.Parser, new[]{ "TypeKind", "ArrayElementType", "StructType" }, new[]{ "SubType" }, new[]{ typeof(global::Google.Cloud.Bigquery.V2.StandardSqlDataType.Types.TypeKind) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.V2.StandardSqlField), global::Google.Cloud.Bigquery.V2.StandardSqlField.Parser, new[]{ "Name", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.V2.StandardSqlStructType), global::Google.Cloud.Bigquery.V2.StandardSqlStructType.Parser, new[]{ "Fields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.V2.StandardSqlTableType), global::Google.Cloud.Bigquery.V2.StandardSqlTableType.Parser, new[]{ "Columns" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The type of a variable, e.g., a function argument.
  /// Examples:
  /// INT64: {type_kind="INT64"}
  /// ARRAY&lt;STRING>: {type_kind="ARRAY", array_element_type="STRING"}
  /// STRUCT&lt;x STRING, y ARRAY&lt;DATE>>:
  ///   {type_kind="STRUCT",
  ///    struct_type={fields=[
  ///      {name="x", type={type_kind="STRING"}},
  ///      {name="y", type={type_kind="ARRAY", array_element_type="DATE"}}
  ///    ]}}
  /// </summary>
  public sealed partial class StandardSqlDataType : pb::IMessage<StandardSqlDataType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StandardSqlDataType> _parser = new pb::MessageParser<StandardSqlDataType>(() => new StandardSqlDataType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StandardSqlDataType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.V2.StandardSqlReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardSqlDataType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardSqlDataType(StandardSqlDataType other) : this() {
      typeKind_ = other.typeKind_;
      switch (other.SubTypeCase) {
        case SubTypeOneofCase.ArrayElementType:
          ArrayElementType = other.ArrayElementType.Clone();
          break;
        case SubTypeOneofCase.StructType:
          StructType = other.StructType.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardSqlDataType Clone() {
      return new StandardSqlDataType(this);
    }

    /// <summary>Field number for the "type_kind" field.</summary>
    public const int TypeKindFieldNumber = 1;
    private global::Google.Cloud.Bigquery.V2.StandardSqlDataType.Types.TypeKind typeKind_ = global::Google.Cloud.Bigquery.V2.StandardSqlDataType.Types.TypeKind.Unspecified;
    /// <summary>
    /// Required. The top level type of this field.
    /// Can be any standard SQL data type (e.g., "INT64", "DATE", "ARRAY").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.V2.StandardSqlDataType.Types.TypeKind TypeKind {
      get { return typeKind_; }
      set {
        typeKind_ = value;
      }
    }

    /// <summary>Field number for the "array_element_type" field.</summary>
    public const int ArrayElementTypeFieldNumber = 2;
    /// <summary>
    /// The type of the array's elements, if type_kind = "ARRAY".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.V2.StandardSqlDataType ArrayElementType {
      get { return subTypeCase_ == SubTypeOneofCase.ArrayElementType ? (global::Google.Cloud.Bigquery.V2.StandardSqlDataType) subType_ : null; }
      set {
        subType_ = value;
        subTypeCase_ = value == null ? SubTypeOneofCase.None : SubTypeOneofCase.ArrayElementType;
      }
    }

    /// <summary>Field number for the "struct_type" field.</summary>
    public const int StructTypeFieldNumber = 3;
    /// <summary>
    /// The fields of this struct, in order, if type_kind = "STRUCT".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.V2.StandardSqlStructType StructType {
      get { return subTypeCase_ == SubTypeOneofCase.StructType ? (global::Google.Cloud.Bigquery.V2.StandardSqlStructType) subType_ : null; }
      set {
        subType_ = value;
        subTypeCase_ = value == null ? SubTypeOneofCase.None : SubTypeOneofCase.StructType;
      }
    }

    private object subType_;
    /// <summary>Enum of possible cases for the "sub_type" oneof.</summary>
    public enum SubTypeOneofCase {
      None = 0,
      ArrayElementType = 2,
      StructType = 3,
    }
    private SubTypeOneofCase subTypeCase_ = SubTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubTypeOneofCase SubTypeCase {
      get { return subTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubType() {
      subTypeCase_ = SubTypeOneofCase.None;
      subType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StandardSqlDataType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StandardSqlDataType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeKind != other.TypeKind) return false;
      if (!object.Equals(ArrayElementType, other.ArrayElementType)) return false;
      if (!object.Equals(StructType, other.StructType)) return false;
      if (SubTypeCase != other.SubTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TypeKind != global::Google.Cloud.Bigquery.V2.StandardSqlDataType.Types.TypeKind.Unspecified) hash ^= TypeKind.GetHashCode();
      if (subTypeCase_ == SubTypeOneofCase.ArrayElementType) hash ^= ArrayElementType.GetHashCode();
      if (subTypeCase_ == SubTypeOneofCase.StructType) hash ^= StructType.GetHashCode();
      hash ^= (int) subTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TypeKind != global::Google.Cloud.Bigquery.V2.StandardSqlDataType.Types.TypeKind.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TypeKind);
      }
      if (subTypeCase_ == SubTypeOneofCase.ArrayElementType) {
        output.WriteRawTag(18);
        output.WriteMessage(ArrayElementType);
      }
      if (subTypeCase_ == SubTypeOneofCase.StructType) {
        output.WriteRawTag(26);
        output.WriteMessage(StructType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TypeKind != global::Google.Cloud.Bigquery.V2.StandardSqlDataType.Types.TypeKind.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TypeKind);
      }
      if (subTypeCase_ == SubTypeOneofCase.ArrayElementType) {
        output.WriteRawTag(18);
        output.WriteMessage(ArrayElementType);
      }
      if (subTypeCase_ == SubTypeOneofCase.StructType) {
        output.WriteRawTag(26);
        output.WriteMessage(StructType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TypeKind != global::Google.Cloud.Bigquery.V2.StandardSqlDataType.Types.TypeKind.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeKind);
      }
      if (subTypeCase_ == SubTypeOneofCase.ArrayElementType) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrayElementType);
      }
      if (subTypeCase_ == SubTypeOneofCase.StructType) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StructType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StandardSqlDataType other) {
      if (other == null) {
        return;
      }
      if (other.TypeKind != global::Google.Cloud.Bigquery.V2.StandardSqlDataType.Types.TypeKind.Unspecified) {
        TypeKind = other.TypeKind;
      }
      switch (other.SubTypeCase) {
        case SubTypeOneofCase.ArrayElementType:
          if (ArrayElementType == null) {
            ArrayElementType = new global::Google.Cloud.Bigquery.V2.StandardSqlDataType();
          }
          ArrayElementType.MergeFrom(other.ArrayElementType);
          break;
        case SubTypeOneofCase.StructType:
          if (StructType == null) {
            StructType = new global::Google.Cloud.Bigquery.V2.StandardSqlStructType();
          }
          StructType.MergeFrom(other.StructType);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TypeKind = (global::Google.Cloud.Bigquery.V2.StandardSqlDataType.Types.TypeKind) input.ReadEnum();
            break;
          }
          case 18: {
            global::Google.Cloud.Bigquery.V2.StandardSqlDataType subBuilder = new global::Google.Cloud.Bigquery.V2.StandardSqlDataType();
            if (subTypeCase_ == SubTypeOneofCase.ArrayElementType) {
              subBuilder.MergeFrom(ArrayElementType);
            }
            input.ReadMessage(subBuilder);
            ArrayElementType = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Bigquery.V2.StandardSqlStructType subBuilder = new global::Google.Cloud.Bigquery.V2.StandardSqlStructType();
            if (subTypeCase_ == SubTypeOneofCase.StructType) {
              subBuilder.MergeFrom(StructType);
            }
            input.ReadMessage(subBuilder);
            StructType = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TypeKind = (global::Google.Cloud.Bigquery.V2.StandardSqlDataType.Types.TypeKind) input.ReadEnum();
            break;
          }
          case 18: {
            global::Google.Cloud.Bigquery.V2.StandardSqlDataType subBuilder = new global::Google.Cloud.Bigquery.V2.StandardSqlDataType();
            if (subTypeCase_ == SubTypeOneofCase.ArrayElementType) {
              subBuilder.MergeFrom(ArrayElementType);
            }
            input.ReadMessage(subBuilder);
            ArrayElementType = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Bigquery.V2.StandardSqlStructType subBuilder = new global::Google.Cloud.Bigquery.V2.StandardSqlStructType();
            if (subTypeCase_ == SubTypeOneofCase.StructType) {
              subBuilder.MergeFrom(StructType);
            }
            input.ReadMessage(subBuilder);
            StructType = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StandardSqlDataType message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum TypeKind {
        /// <summary>
        /// Invalid type.
        /// </summary>
        [pbr::OriginalName("TYPE_KIND_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Encoded as a string in decimal format.
        /// </summary>
        [pbr::OriginalName("INT64")] Int64 = 2,
        /// <summary>
        /// Encoded as a boolean "false" or "true".
        /// </summary>
        [pbr::OriginalName("BOOL")] Bool = 5,
        /// <summary>
        /// Encoded as a number, or string "NaN", "Infinity" or "-Infinity".
        /// </summary>
        [pbr::OriginalName("FLOAT64")] Float64 = 7,
        /// <summary>
        /// Encoded as a string value.
        /// </summary>
        [pbr::OriginalName("STRING")] String = 8,
        /// <summary>
        /// Encoded as a base64 string per RFC 4648, section 4.
        /// </summary>
        [pbr::OriginalName("BYTES")] Bytes = 9,
        /// <summary>
        /// Encoded as an RFC 3339 timestamp with mandatory "Z" time zone string:
        /// 1985-04-12T23:20:50.52Z
        /// </summary>
        [pbr::OriginalName("TIMESTAMP")] Timestamp = 19,
        /// <summary>
        /// Encoded as RFC 3339 full-date format string: 1985-04-12
        /// </summary>
        [pbr::OriginalName("DATE")] Date = 10,
        /// <summary>
        /// Encoded as RFC 3339 partial-time format string: 23:20:50.52
        /// </summary>
        [pbr::OriginalName("TIME")] Time = 20,
        /// <summary>
        /// Encoded as RFC 3339 full-date "T" partial-time: 1985-04-12T23:20:50.52
        /// </summary>
        [pbr::OriginalName("DATETIME")] Datetime = 21,
        /// <summary>
        /// Encoded as fully qualified 3 part: 0-5 15 2:30:45.6
        /// </summary>
        [pbr::OriginalName("INTERVAL")] Interval = 26,
        /// <summary>
        /// Encoded as WKT
        /// </summary>
        [pbr::OriginalName("GEOGRAPHY")] Geography = 22,
        /// <summary>
        /// Encoded as a decimal string.
        /// </summary>
        [pbr::OriginalName("NUMERIC")] Numeric = 23,
        /// <summary>
        /// Encoded as a decimal string.
        /// </summary>
        [pbr::OriginalName("BIGNUMERIC")] Bignumeric = 24,
        /// <summary>
        /// Encoded as a string.
        /// </summary>
        [pbr::OriginalName("JSON")] Json = 25,
        /// <summary>
        /// Encoded as a list with types matching Type.array_type.
        /// </summary>
        [pbr::OriginalName("ARRAY")] Array = 16,
        /// <summary>
        /// Encoded as a list with fields of type Type.struct_type[i]. List is used
        /// because a JSON object cannot have duplicate field names.
        /// </summary>
        [pbr::OriginalName("STRUCT")] Struct = 17,
      }

    }
    #endregion

  }

  /// <summary>
  /// A field or a column.
  /// </summary>
  public sealed partial class StandardSqlField : pb::IMessage<StandardSqlField>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StandardSqlField> _parser = new pb::MessageParser<StandardSqlField>(() => new StandardSqlField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StandardSqlField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.V2.StandardSqlReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardSqlField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardSqlField(StandardSqlField other) : this() {
      name_ = other.name_;
      type_ = other.type_ != null ? other.type_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardSqlField Clone() {
      return new StandardSqlField(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Optional. The name of this field. Can be absent for struct fields.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Google.Cloud.Bigquery.V2.StandardSqlDataType type_;
    /// <summary>
    /// Optional. The type of this parameter. Absent if not explicitly
    /// specified (e.g., CREATE FUNCTION statement can omit the return type;
    /// in this case the output parameter does not have this "type" field).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.V2.StandardSqlDataType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StandardSqlField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StandardSqlField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Type, other.Type)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (type_ != null) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (type_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (type_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StandardSqlField other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::Google.Cloud.Bigquery.V2.StandardSqlDataType();
        }
        Type.MergeFrom(other.Type);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (type_ == null) {
              Type = new global::Google.Cloud.Bigquery.V2.StandardSqlDataType();
            }
            input.ReadMessage(Type);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (type_ == null) {
              Type = new global::Google.Cloud.Bigquery.V2.StandardSqlDataType();
            }
            input.ReadMessage(Type);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StandardSqlStructType : pb::IMessage<StandardSqlStructType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StandardSqlStructType> _parser = new pb::MessageParser<StandardSqlStructType>(() => new StandardSqlStructType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StandardSqlStructType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.V2.StandardSqlReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardSqlStructType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardSqlStructType(StandardSqlStructType other) : this() {
      fields_ = other.fields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardSqlStructType Clone() {
      return new StandardSqlStructType(this);
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigquery.V2.StandardSqlField> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Bigquery.V2.StandardSqlField.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigquery.V2.StandardSqlField> fields_ = new pbc::RepeatedField<global::Google.Cloud.Bigquery.V2.StandardSqlField>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigquery.V2.StandardSqlField> Fields {
      get { return fields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StandardSqlStructType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StandardSqlStructType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fields_.Equals(other.fields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fields_.WriteTo(output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fields_.WriteTo(ref output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StandardSqlStructType other) {
      if (other == null) {
        return;
      }
      fields_.Add(other.fields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fields_.AddEntriesFrom(ref input, _repeated_fields_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A table type
  /// </summary>
  public sealed partial class StandardSqlTableType : pb::IMessage<StandardSqlTableType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StandardSqlTableType> _parser = new pb::MessageParser<StandardSqlTableType>(() => new StandardSqlTableType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StandardSqlTableType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.V2.StandardSqlReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardSqlTableType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardSqlTableType(StandardSqlTableType other) : this() {
      columns_ = other.columns_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardSqlTableType Clone() {
      return new StandardSqlTableType(this);
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigquery.V2.StandardSqlField> _repeated_columns_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Bigquery.V2.StandardSqlField.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigquery.V2.StandardSqlField> columns_ = new pbc::RepeatedField<global::Google.Cloud.Bigquery.V2.StandardSqlField>();
    /// <summary>
    /// The columns in this table type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigquery.V2.StandardSqlField> Columns {
      get { return columns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StandardSqlTableType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StandardSqlTableType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!columns_.Equals(other.columns_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= columns_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      columns_.WriteTo(output, _repeated_columns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      columns_.WriteTo(ref output, _repeated_columns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += columns_.CalculateSize(_repeated_columns_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StandardSqlTableType other) {
      if (other == null) {
        return;
      }
      columns_.Add(other.columns_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
