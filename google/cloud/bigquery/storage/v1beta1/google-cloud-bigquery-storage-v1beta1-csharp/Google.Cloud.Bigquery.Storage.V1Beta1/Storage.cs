// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/bigquery/storage/v1beta1/storage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Bigquery.Storage.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/bigquery/storage/v1beta1/storage.proto</summary>
  public static partial class StorageReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/bigquery/storage/v1beta1/storage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StorageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNnb29nbGUvY2xvdWQvYmlncXVlcnkvc3RvcmFnZS92MWJldGExL3N0b3Jh",
            "Z2UucHJvdG8SJWdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0",
            "YTEaHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aF2dvb2dsZS9hcGkv",
            "Y2xpZW50LnByb3RvGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3Rv",
            "Ghlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGjFnb29nbGUvY2xvdWQvYmln",
            "cXVlcnkvc3RvcmFnZS92MWJldGExL2Fycm93LnByb3RvGjBnb29nbGUvY2xv",
            "dWQvYmlncXVlcnkvc3RvcmFnZS92MWJldGExL2F2cm8ucHJvdG8aOGdvb2ds",
            "ZS9jbG91ZC9iaWdxdWVyeS9zdG9yYWdlL3YxYmV0YTEvcmVhZF9vcHRpb25z",
            "LnByb3RvGjtnb29nbGUvY2xvdWQvYmlncXVlcnkvc3RvcmFnZS92MWJldGEx",
            "L3RhYmxlX3JlZmVyZW5jZS5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5",
            "LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvInwKBlN0",
            "cmVhbRIMCgRuYW1lGAEgASgJOmTqQWEKJWJpZ3F1ZXJ5c3RvcmFnZS5nb29n",
            "bGVhcGlzLmNvbS9TdHJlYW0SOHByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlv",
            "bnMve2xvY2F0aW9ufS9zdHJlYW1zL3tzdHJlYW19Il8KDlN0cmVhbVBvc2l0",
            "aW9uEj0KBnN0cmVhbRgBIAEoCzItLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5z",
            "dG9yYWdlLnYxYmV0YTEuU3RyZWFtEg4KBm9mZnNldBgCIAEoAyKNBQoLUmVh",
            "ZFNlc3Npb24SDAoEbmFtZRgBIAEoCRIvCgtleHBpcmVfdGltZRgCIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASSAoLYXZyb19zY2hlbWEYBSAB",
            "KAsyMS5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGExLkF2",
            "cm9TY2hlbWFIABJKCgxhcnJvd19zY2hlbWEYBiABKAsyMi5nb29nbGUuY2xv",
            "dWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGExLkFycm93U2NoZW1hSAASPgoH",
            "c3RyZWFtcxgEIAMoCzItLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdl",
            "LnYxYmV0YTEuU3RyZWFtEk4KD3RhYmxlX3JlZmVyZW5jZRgHIAEoCzI1Lmdv",
            "b2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTEuVGFibGVSZWZl",
            "cmVuY2USTgoPdGFibGVfbW9kaWZpZXJzGAggASgLMjUuZ29vZ2xlLmNsb3Vk",
            "LmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMS5UYWJsZU1vZGlmaWVycxJSChFz",
            "aGFyZGluZ19zdHJhdGVneRgJIAEoDjI3Lmdvb2dsZS5jbG91ZC5iaWdxdWVy",
            "eS5zdG9yYWdlLnYxYmV0YTEuU2hhcmRpbmdTdHJhdGVneTpr6kFoCipiaWdx",
            "dWVyeXN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vUmVhZFNlc3Npb24SOnByb2pl",
            "Y3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9zZXNzaW9ucy97",
            "c2Vzc2lvbn1CCAoGc2NoZW1hIoUEChhDcmVhdGVSZWFkU2Vzc2lvblJlcXVl",
            "c3QSUwoPdGFibGVfcmVmZXJlbmNlGAEgASgLMjUuZ29vZ2xlLmNsb3VkLmJp",
            "Z3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMS5UYWJsZVJlZmVyZW5jZUID4EECEkMK",
            "BnBhcmVudBgGIAEoCUIz4EEC+kEtCitjbG91ZHJlc291cmNlbWFuYWdlci5n",
            "b29nbGVhcGlzLmNvbS9Qcm9qZWN0Ek4KD3RhYmxlX21vZGlmaWVycxgCIAEo",
            "CzI1Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTEuVGFi",
            "bGVNb2RpZmllcnMSGQoRcmVxdWVzdGVkX3N0cmVhbXMYAyABKAUSTQoMcmVh",
            "ZF9vcHRpb25zGAQgASgLMjcuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3Jh",
            "Z2UudjFiZXRhMS5UYWJsZVJlYWRPcHRpb25zEkEKBmZvcm1hdBgFIAEoDjIx",
            "Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTEuRGF0YUZv",
            "cm1hdBJSChFzaGFyZGluZ19zdHJhdGVneRgHIAEoDjI3Lmdvb2dsZS5jbG91",
            "ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTEuU2hhcmRpbmdTdHJhdGVneSJk",
            "Cg9SZWFkUm93c1JlcXVlc3QSUQoNcmVhZF9wb3NpdGlvbhgBIAEoCzI1Lmdv",
            "b2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTEuU3RyZWFtUG9z",
            "aXRpb25CA+BBAiKgAQoMU3RyZWFtU3RhdHVzEhsKE2VzdGltYXRlZF9yb3df",
            "Y291bnQYASABKAMSGQoRZnJhY3Rpb25fY29uc3VtZWQYAiABKAISQQoIcHJv",
            "Z3Jlc3MYBCABKAsyLy5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52",
            "MWJldGExLlByb2dyZXNzEhUKDWlzX3NwbGl0dGFibGUYAyABKAgiPgoIUHJv",
            "Z3Jlc3MSGQoRYXRfcmVzcG9uc2Vfc3RhcnQYASABKAISFwoPYXRfcmVzcG9u",
            "c2VfZW5kGAIgASgCIioKDlRocm90dGxlU3RhdHVzEhgKEHRocm90dGxlX3Bl",
            "cmNlbnQYASABKAUi3wIKEFJlYWRSb3dzUmVzcG9uc2USRAoJYXZyb19yb3dz",
            "GAMgASgLMi8uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRh",
            "MS5BdnJvUm93c0gAElUKEmFycm93X3JlY29yZF9iYXRjaBgEIAEoCzI3Lmdv",
            "b2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTEuQXJyb3dSZWNv",
            "cmRCYXRjaEgAEhEKCXJvd19jb3VudBgGIAEoAxJDCgZzdGF0dXMYAiABKAsy",
            "My5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGExLlN0cmVh",
            "bVN0YXR1cxJOCg90aHJvdHRsZV9zdGF0dXMYBSABKAsyNS5nb29nbGUuY2xv",
            "dWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGExLlRocm90dGxlU3RhdHVzQgYK",
            "BHJvd3MikAEKJEJhdGNoQ3JlYXRlUmVhZFNlc3Npb25TdHJlYW1zUmVxdWVz",
            "dBJICgdzZXNzaW9uGAEgASgLMjIuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0",
            "b3JhZ2UudjFiZXRhMS5SZWFkU2Vzc2lvbkID4EECEh4KEXJlcXVlc3RlZF9z",
            "dHJlYW1zGAIgASgFQgPgQQIiZwolQmF0Y2hDcmVhdGVSZWFkU2Vzc2lvblN0",
            "cmVhbXNSZXNwb25zZRI+CgdzdHJlYW1zGAEgAygLMi0uZ29vZ2xlLmNsb3Vk",
            "LmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMS5TdHJlYW0iWwoVRmluYWxpemVT",
            "dHJlYW1SZXF1ZXN0EkIKBnN0cmVhbRgCIAEoCzItLmdvb2dsZS5jbG91ZC5i",
            "aWdxdWVyeS5zdG9yYWdlLnYxYmV0YTEuU3RyZWFtQgPgQQIidwoWU3BsaXRS",
            "ZWFkU3RyZWFtUmVxdWVzdBJLCg9vcmlnaW5hbF9zdHJlYW0YASABKAsyLS5n",
            "b29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGExLlN0cmVhbUID",
            "4EECEhAKCGZyYWN0aW9uGAIgASgCIqkBChdTcGxpdFJlYWRTdHJlYW1SZXNw",
            "b25zZRJFCg5wcmltYXJ5X3N0cmVhbRgBIAEoCzItLmdvb2dsZS5jbG91ZC5i",
            "aWdxdWVyeS5zdG9yYWdlLnYxYmV0YTEuU3RyZWFtEkcKEHJlbWFpbmRlcl9z",
            "dHJlYW0YAiABKAsyLS5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52",
            "MWJldGExLlN0cmVhbSo+CgpEYXRhRm9ybWF0EhsKF0RBVEFfRk9STUFUX1VO",
            "U1BFQ0lGSUVEEAASCAoEQVZSTxABEgkKBUFSUk9XEAMqTwoQU2hhcmRpbmdT",
            "dHJhdGVneRIhCh1TSEFSRElOR19TVFJBVEVHWV9VTlNQRUNJRklFRBAAEgoK",
            "BkxJUVVJRBABEgwKCEJBTEFOQ0VEEAIy6woKD0JpZ1F1ZXJ5U3RvcmFnZRKz",
            "AgoRQ3JlYXRlUmVhZFNlc3Npb24SPy5nb29nbGUuY2xvdWQuYmlncXVlcnku",
            "c3RvcmFnZS52MWJldGExLkNyZWF0ZVJlYWRTZXNzaW9uUmVxdWVzdBoyLmdv",
            "b2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTEuUmVhZFNlc3Np",
            "b24iqAGC0+STAnciMC92MWJldGExL3t0YWJsZV9yZWZlcmVuY2UucHJvamVj",
            "dF9pZD1wcm9qZWN0cy8qfToBKlpAIjsvdjFiZXRhMS97dGFibGVfcmVmZXJl",
            "bmNlLmRhdGFzZXRfaWQ9cHJvamVjdHMvKi9kYXRhc2V0cy8qfToBKtpBKHRh",
            "YmxlX3JlZmVyZW5jZSxwYXJlbnQscmVxdWVzdGVkX3N0cmVhbXMS0AEKCFJl",
            "YWRSb3dzEjYuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRh",
            "MS5SZWFkUm93c1JlcXVlc3QaNy5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3Rv",
            "cmFnZS52MWJldGExLlJlYWRSb3dzUmVzcG9uc2UiUYLT5JMCOxI5L3YxYmV0",
            "YTEve3JlYWRfcG9zaXRpb24uc3RyZWFtLm5hbWU9cHJvamVjdHMvKi9zdHJl",
            "YW1zLyp92kENcmVhZF9wb3NpdGlvbjABEpACCh1CYXRjaENyZWF0ZVJlYWRT",
            "ZXNzaW9uU3RyZWFtcxJLLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdl",
            "LnYxYmV0YTEuQmF0Y2hDcmVhdGVSZWFkU2Vzc2lvblN0cmVhbXNSZXF1ZXN0",
            "GkwuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMS5CYXRj",
            "aENyZWF0ZVJlYWRTZXNzaW9uU3RyZWFtc1Jlc3BvbnNlIlSC0+STAjIiLS92",
            "MWJldGExL3tzZXNzaW9uLm5hbWU9cHJvamVjdHMvKi9zZXNzaW9ucy8qfToB",
            "KtpBGXNlc3Npb24scmVxdWVzdGVkX3N0cmVhbXMSpwEKDkZpbmFsaXplU3Ry",
            "ZWFtEjwuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMS5G",
            "aW5hbGl6ZVN0cmVhbVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHki",
            "P4LT5JMCMCIrL3YxYmV0YTEve3N0cmVhbS5uYW1lPXByb2plY3RzLyovc3Ry",
            "ZWFtcy8qfToBKtpBBnN0cmVhbRLgAQoPU3BsaXRSZWFkU3RyZWFtEj0uZ29v",
            "Z2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMS5TcGxpdFJlYWRT",
            "dHJlYW1SZXF1ZXN0Gj4uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2Uu",
            "djFiZXRhMS5TcGxpdFJlYWRTdHJlYW1SZXNwb25zZSJOgtPkkwI2EjQvdjFi",
            "ZXRhMS97b3JpZ2luYWxfc3RyZWFtLm5hbWU9cHJvamVjdHMvKi9zdHJlYW1z",
            "Lyp92kEPb3JpZ2luYWxfc3RyZWFtGq4BykEeYmlncXVlcnlzdG9yYWdlLmdv",
            "b2dsZWFwaXMuY29t0kGJAWh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1",
            "dGgvYmlncXVlcnksaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9i",
            "aWdxdWVyeS5yZWFkb25seSxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9h",
            "dXRoL2Nsb3VkLXBsYXRmb3JtQnkKKWNvbS5nb29nbGUuY2xvdWQuYmlncXVl",
            "cnkuc3RvcmFnZS52MWJldGExWkxnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90",
            "by9nb29nbGVhcGlzL2Nsb3VkL2JpZ3F1ZXJ5L3N0b3JhZ2UvdjFiZXRhMTtz",
            "dG9yYWdlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowReflection.Descriptor, global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroReflection.Descriptor, global::Google.Cloud.Bigquery.Storage.V1Beta1.ReadOptionsReflection.Descriptor, global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReferenceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.DataFormat), typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream), global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamPosition), global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamPosition.Parser, new[]{ "Stream", "Offset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.ReadSession), global::Google.Cloud.Bigquery.Storage.V1Beta1.ReadSession.Parser, new[]{ "Name", "ExpireTime", "AvroSchema", "ArrowSchema", "Streams", "TableReference", "TableModifiers", "ShardingStrategy" }, new[]{ "Schema" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.CreateReadSessionRequest), global::Google.Cloud.Bigquery.Storage.V1Beta1.CreateReadSessionRequest.Parser, new[]{ "TableReference", "Parent", "TableModifiers", "RequestedStreams", "ReadOptions", "Format", "ShardingStrategy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.ReadRowsRequest), global::Google.Cloud.Bigquery.Storage.V1Beta1.ReadRowsRequest.Parser, new[]{ "ReadPosition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamStatus), global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamStatus.Parser, new[]{ "EstimatedRowCount", "FractionConsumed", "Progress", "IsSplittable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.Progress), global::Google.Cloud.Bigquery.Storage.V1Beta1.Progress.Parser, new[]{ "AtResponseStart", "AtResponseEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.ThrottleStatus), global::Google.Cloud.Bigquery.Storage.V1Beta1.ThrottleStatus.Parser, new[]{ "ThrottlePercent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.ReadRowsResponse), global::Google.Cloud.Bigquery.Storage.V1Beta1.ReadRowsResponse.Parser, new[]{ "AvroRows", "ArrowRecordBatch", "RowCount", "Status", "ThrottleStatus" }, new[]{ "Rows" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.BatchCreateReadSessionStreamsRequest), global::Google.Cloud.Bigquery.Storage.V1Beta1.BatchCreateReadSessionStreamsRequest.Parser, new[]{ "Session", "RequestedStreams" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.BatchCreateReadSessionStreamsResponse), global::Google.Cloud.Bigquery.Storage.V1Beta1.BatchCreateReadSessionStreamsResponse.Parser, new[]{ "Streams" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.FinalizeStreamRequest), global::Google.Cloud.Bigquery.Storage.V1Beta1.FinalizeStreamRequest.Parser, new[]{ "Stream" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.SplitReadStreamRequest), global::Google.Cloud.Bigquery.Storage.V1Beta1.SplitReadStreamRequest.Parser, new[]{ "OriginalStream", "Fraction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta1.SplitReadStreamResponse), global::Google.Cloud.Bigquery.Storage.V1Beta1.SplitReadStreamResponse.Parser, new[]{ "PrimaryStream", "RemainderStream" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Data format for input or output data.
  /// </summary>
  public enum DataFormat {
    /// <summary>
    /// Data format is unspecified.
    /// </summary>
    [pbr::OriginalName("DATA_FORMAT_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Avro is a standard open source row based file format.
    /// See https://avro.apache.org/ for more details.
    /// </summary>
    [pbr::OriginalName("AVRO")] Avro = 1,
    [pbr::OriginalName("ARROW")] Arrow = 3,
  }

  /// <summary>
  /// Strategy for distributing data among multiple streams in a read session.
  /// </summary>
  public enum ShardingStrategy {
    /// <summary>
    /// Same as LIQUID.
    /// </summary>
    [pbr::OriginalName("SHARDING_STRATEGY_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Assigns data to each stream based on the client's read rate. The faster the
    /// client reads from a stream, the more data is assigned to the stream. In
    /// this strategy, it's possible to read all data from a single stream even if
    /// there are other streams present.
    /// </summary>
    [pbr::OriginalName("LIQUID")] Liquid = 1,
    /// <summary>
    /// Assigns data to each stream such that roughly the same number of rows can
    /// be read from each stream. Because the server-side unit for assigning data
    /// is collections of rows, the API does not guarantee that each stream will
    /// return the same number or rows. Additionally, the limits are enforced based
    /// on the number of pre-filtering rows, so some filters can lead to lopsided
    /// assignments.
    /// </summary>
    [pbr::OriginalName("BALANCED")] Balanced = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Information about a single data stream within a read session.
  /// </summary>
  public sealed partial class Stream : pb::IMessage<Stream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Stream> _parser = new pb::MessageParser<Stream>(() => new Stream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stream(Stream other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stream Clone() {
      return new Stream(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the stream, in the form
    /// `projects/{project_id}/locations/{location}/streams/{stream_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stream other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Expresses a point within a given stream using an offset position.
  /// </summary>
  public sealed partial class StreamPosition : pb::IMessage<StreamPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamPosition> _parser = new pb::MessageParser<StreamPosition>(() => new StreamPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamPosition(StreamPosition other) : this() {
      stream_ = other.stream_ != null ? other.stream_.Clone() : null;
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamPosition Clone() {
      return new StreamPosition(this);
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 1;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream stream_;
    /// <summary>
    /// Identifier for a given Stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream Stream {
      get { return stream_; }
      set {
        stream_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    /// <summary>
    /// Position in the stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stream, other.Stream)) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stream_ != null) hash ^= Stream.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stream_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stream);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stream_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stream);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stream);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamPosition other) {
      if (other == null) {
        return;
      }
      if (other.stream_ != null) {
        if (stream_ == null) {
          Stream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
        }
        Stream.MergeFrom(other.Stream);
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stream_ == null) {
              Stream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
            }
            input.ReadMessage(Stream);
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stream_ == null) {
              Stream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
            }
            input.ReadMessage(Stream);
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Information returned from a `CreateReadSession` request.
  /// </summary>
  public sealed partial class ReadSession : pb::IMessage<ReadSession>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadSession> _parser = new pb::MessageParser<ReadSession>(() => new ReadSession());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadSession(ReadSession other) : this() {
      name_ = other.name_;
      expireTime_ = other.expireTime_ != null ? other.expireTime_.Clone() : null;
      streams_ = other.streams_.Clone();
      tableReference_ = other.tableReference_ != null ? other.tableReference_.Clone() : null;
      tableModifiers_ = other.tableModifiers_ != null ? other.tableModifiers_.Clone() : null;
      shardingStrategy_ = other.shardingStrategy_;
      switch (other.SchemaCase) {
        case SchemaOneofCase.AvroSchema:
          AvroSchema = other.AvroSchema.Clone();
          break;
        case SchemaOneofCase.ArrowSchema:
          ArrowSchema = other.ArrowSchema.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadSession Clone() {
      return new ReadSession(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Unique identifier for the session, in the form
    /// `projects/{project_id}/locations/{location}/sessions/{session_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expire_time" field.</summary>
    public const int ExpireTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expireTime_;
    /// <summary>
    /// Time at which the session becomes invalid. After this time, subsequent
    /// requests to read this Session will return errors.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    /// <summary>Field number for the "avro_schema" field.</summary>
    public const int AvroSchemaFieldNumber = 5;
    /// <summary>
    /// Avro schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroSchema AvroSchema {
      get { return schemaCase_ == SchemaOneofCase.AvroSchema ? (global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroSchema) schema_ : null; }
      set {
        schema_ = value;
        schemaCase_ = value == null ? SchemaOneofCase.None : SchemaOneofCase.AvroSchema;
      }
    }

    /// <summary>Field number for the "arrow_schema" field.</summary>
    public const int ArrowSchemaFieldNumber = 6;
    /// <summary>
    /// Arrow schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowSchema ArrowSchema {
      get { return schemaCase_ == SchemaOneofCase.ArrowSchema ? (global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowSchema) schema_ : null; }
      set {
        schema_ = value;
        schemaCase_ = value == null ? SchemaOneofCase.None : SchemaOneofCase.ArrowSchema;
      }
    }

    /// <summary>Field number for the "streams" field.</summary>
    public const int StreamsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream> _repeated_streams_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream> streams_ = new pbc::RepeatedField<global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream>();
    /// <summary>
    /// Streams associated with this session.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream> Streams {
      get { return streams_; }
    }

    /// <summary>Field number for the "table_reference" field.</summary>
    public const int TableReferenceFieldNumber = 7;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReference tableReference_;
    /// <summary>
    /// Table that this ReadSession is reading from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReference TableReference {
      get { return tableReference_; }
      set {
        tableReference_ = value;
      }
    }

    /// <summary>Field number for the "table_modifiers" field.</summary>
    public const int TableModifiersFieldNumber = 8;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.TableModifiers tableModifiers_;
    /// <summary>
    /// Any modifiers which are applied when reading from the specified table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.TableModifiers TableModifiers {
      get { return tableModifiers_; }
      set {
        tableModifiers_ = value;
      }
    }

    /// <summary>Field number for the "sharding_strategy" field.</summary>
    public const int ShardingStrategyFieldNumber = 9;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy shardingStrategy_ = global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy.Unspecified;
    /// <summary>
    /// The strategy to use for distributing data among the streams.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy ShardingStrategy {
      get { return shardingStrategy_; }
      set {
        shardingStrategy_ = value;
      }
    }

    private object schema_;
    /// <summary>Enum of possible cases for the "schema" oneof.</summary>
    public enum SchemaOneofCase {
      None = 0,
      AvroSchema = 5,
      ArrowSchema = 6,
    }
    private SchemaOneofCase schemaCase_ = SchemaOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchemaOneofCase SchemaCase {
      get { return schemaCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSchema() {
      schemaCase_ = SchemaOneofCase.None;
      schema_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(ExpireTime, other.ExpireTime)) return false;
      if (!object.Equals(AvroSchema, other.AvroSchema)) return false;
      if (!object.Equals(ArrowSchema, other.ArrowSchema)) return false;
      if(!streams_.Equals(other.streams_)) return false;
      if (!object.Equals(TableReference, other.TableReference)) return false;
      if (!object.Equals(TableModifiers, other.TableModifiers)) return false;
      if (ShardingStrategy != other.ShardingStrategy) return false;
      if (SchemaCase != other.SchemaCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (expireTime_ != null) hash ^= ExpireTime.GetHashCode();
      if (schemaCase_ == SchemaOneofCase.AvroSchema) hash ^= AvroSchema.GetHashCode();
      if (schemaCase_ == SchemaOneofCase.ArrowSchema) hash ^= ArrowSchema.GetHashCode();
      hash ^= streams_.GetHashCode();
      if (tableReference_ != null) hash ^= TableReference.GetHashCode();
      if (tableModifiers_ != null) hash ^= TableModifiers.GetHashCode();
      if (ShardingStrategy != global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy.Unspecified) hash ^= ShardingStrategy.GetHashCode();
      hash ^= (int) schemaCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (expireTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExpireTime);
      }
      streams_.WriteTo(output, _repeated_streams_codec);
      if (schemaCase_ == SchemaOneofCase.AvroSchema) {
        output.WriteRawTag(42);
        output.WriteMessage(AvroSchema);
      }
      if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
        output.WriteRawTag(50);
        output.WriteMessage(ArrowSchema);
      }
      if (tableReference_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TableReference);
      }
      if (tableModifiers_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TableModifiers);
      }
      if (ShardingStrategy != global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) ShardingStrategy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (expireTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExpireTime);
      }
      streams_.WriteTo(ref output, _repeated_streams_codec);
      if (schemaCase_ == SchemaOneofCase.AvroSchema) {
        output.WriteRawTag(42);
        output.WriteMessage(AvroSchema);
      }
      if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
        output.WriteRawTag(50);
        output.WriteMessage(ArrowSchema);
      }
      if (tableReference_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TableReference);
      }
      if (tableModifiers_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TableModifiers);
      }
      if (ShardingStrategy != global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) ShardingStrategy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (expireTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireTime);
      }
      if (schemaCase_ == SchemaOneofCase.AvroSchema) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvroSchema);
      }
      if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrowSchema);
      }
      size += streams_.CalculateSize(_repeated_streams_codec);
      if (tableReference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableReference);
      }
      if (tableModifiers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableModifiers);
      }
      if (ShardingStrategy != global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShardingStrategy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadSession other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.expireTime_ != null) {
        if (expireTime_ == null) {
          ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpireTime.MergeFrom(other.ExpireTime);
      }
      streams_.Add(other.streams_);
      if (other.tableReference_ != null) {
        if (tableReference_ == null) {
          TableReference = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReference();
        }
        TableReference.MergeFrom(other.TableReference);
      }
      if (other.tableModifiers_ != null) {
        if (tableModifiers_ == null) {
          TableModifiers = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableModifiers();
        }
        TableModifiers.MergeFrom(other.TableModifiers);
      }
      if (other.ShardingStrategy != global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy.Unspecified) {
        ShardingStrategy = other.ShardingStrategy;
      }
      switch (other.SchemaCase) {
        case SchemaOneofCase.AvroSchema:
          if (AvroSchema == null) {
            AvroSchema = new global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroSchema();
          }
          AvroSchema.MergeFrom(other.AvroSchema);
          break;
        case SchemaOneofCase.ArrowSchema:
          if (ArrowSchema == null) {
            ArrowSchema = new global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowSchema();
          }
          ArrowSchema.MergeFrom(other.ArrowSchema);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
          case 34: {
            streams_.AddEntriesFrom(input, _repeated_streams_codec);
            break;
          }
          case 42: {
            global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroSchema subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroSchema();
            if (schemaCase_ == SchemaOneofCase.AvroSchema) {
              subBuilder.MergeFrom(AvroSchema);
            }
            input.ReadMessage(subBuilder);
            AvroSchema = subBuilder;
            break;
          }
          case 50: {
            global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowSchema subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowSchema();
            if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
              subBuilder.MergeFrom(ArrowSchema);
            }
            input.ReadMessage(subBuilder);
            ArrowSchema = subBuilder;
            break;
          }
          case 58: {
            if (tableReference_ == null) {
              TableReference = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReference();
            }
            input.ReadMessage(TableReference);
            break;
          }
          case 66: {
            if (tableModifiers_ == null) {
              TableModifiers = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableModifiers();
            }
            input.ReadMessage(TableModifiers);
            break;
          }
          case 72: {
            ShardingStrategy = (global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
          case 34: {
            streams_.AddEntriesFrom(ref input, _repeated_streams_codec);
            break;
          }
          case 42: {
            global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroSchema subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroSchema();
            if (schemaCase_ == SchemaOneofCase.AvroSchema) {
              subBuilder.MergeFrom(AvroSchema);
            }
            input.ReadMessage(subBuilder);
            AvroSchema = subBuilder;
            break;
          }
          case 50: {
            global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowSchema subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowSchema();
            if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
              subBuilder.MergeFrom(ArrowSchema);
            }
            input.ReadMessage(subBuilder);
            ArrowSchema = subBuilder;
            break;
          }
          case 58: {
            if (tableReference_ == null) {
              TableReference = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReference();
            }
            input.ReadMessage(TableReference);
            break;
          }
          case 66: {
            if (tableModifiers_ == null) {
              TableModifiers = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableModifiers();
            }
            input.ReadMessage(TableModifiers);
            break;
          }
          case 72: {
            ShardingStrategy = (global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Creates a new read session, which may include additional options such as
  /// requested parallelism, projection filters and constraints.
  /// </summary>
  public sealed partial class CreateReadSessionRequest : pb::IMessage<CreateReadSessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateReadSessionRequest> _parser = new pb::MessageParser<CreateReadSessionRequest>(() => new CreateReadSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateReadSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReadSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReadSessionRequest(CreateReadSessionRequest other) : this() {
      tableReference_ = other.tableReference_ != null ? other.tableReference_.Clone() : null;
      parent_ = other.parent_;
      tableModifiers_ = other.tableModifiers_ != null ? other.tableModifiers_.Clone() : null;
      requestedStreams_ = other.requestedStreams_;
      readOptions_ = other.readOptions_ != null ? other.readOptions_.Clone() : null;
      format_ = other.format_;
      shardingStrategy_ = other.shardingStrategy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReadSessionRequest Clone() {
      return new CreateReadSessionRequest(this);
    }

    /// <summary>Field number for the "table_reference" field.</summary>
    public const int TableReferenceFieldNumber = 1;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReference tableReference_;
    /// <summary>
    /// Required. Reference to the table to read.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReference TableReference {
      get { return tableReference_; }
      set {
        tableReference_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 6;
    private string parent_ = "";
    /// <summary>
    /// Required. String of the form `projects/{project_id}` indicating the
    /// project this ReadSession is associated with. This is the project that will
    /// be billed for usage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "table_modifiers" field.</summary>
    public const int TableModifiersFieldNumber = 2;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.TableModifiers tableModifiers_;
    /// <summary>
    /// Any modifiers to the Table (e.g. snapshot timestamp).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.TableModifiers TableModifiers {
      get { return tableModifiers_; }
      set {
        tableModifiers_ = value;
      }
    }

    /// <summary>Field number for the "requested_streams" field.</summary>
    public const int RequestedStreamsFieldNumber = 3;
    private int requestedStreams_;
    /// <summary>
    /// Initial number of streams. If unset or 0, we will
    /// provide a value of streams so as to produce reasonable throughput. Must be
    /// non-negative. The number of streams may be lower than the requested number,
    /// depending on the amount parallelism that is reasonable for the table and
    /// the maximum amount of parallelism allowed by the system.
    ///
    /// Streams must be read starting from offset 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequestedStreams {
      get { return requestedStreams_; }
      set {
        requestedStreams_ = value;
      }
    }

    /// <summary>Field number for the "read_options" field.</summary>
    public const int ReadOptionsFieldNumber = 4;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReadOptions readOptions_;
    /// <summary>
    /// Read options for this session (e.g. column selection, filters).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReadOptions ReadOptions {
      get { return readOptions_; }
      set {
        readOptions_ = value;
      }
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 5;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.DataFormat format_ = global::Google.Cloud.Bigquery.Storage.V1Beta1.DataFormat.Unspecified;
    /// <summary>
    /// Data output format. Currently default to Avro.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.DataFormat Format {
      get { return format_; }
      set {
        format_ = value;
      }
    }

    /// <summary>Field number for the "sharding_strategy" field.</summary>
    public const int ShardingStrategyFieldNumber = 7;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy shardingStrategy_ = global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy.Unspecified;
    /// <summary>
    /// The strategy to use for distributing data among multiple streams. Currently
    /// defaults to liquid sharding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy ShardingStrategy {
      get { return shardingStrategy_; }
      set {
        shardingStrategy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateReadSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateReadSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TableReference, other.TableReference)) return false;
      if (Parent != other.Parent) return false;
      if (!object.Equals(TableModifiers, other.TableModifiers)) return false;
      if (RequestedStreams != other.RequestedStreams) return false;
      if (!object.Equals(ReadOptions, other.ReadOptions)) return false;
      if (Format != other.Format) return false;
      if (ShardingStrategy != other.ShardingStrategy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tableReference_ != null) hash ^= TableReference.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (tableModifiers_ != null) hash ^= TableModifiers.GetHashCode();
      if (RequestedStreams != 0) hash ^= RequestedStreams.GetHashCode();
      if (readOptions_ != null) hash ^= ReadOptions.GetHashCode();
      if (Format != global::Google.Cloud.Bigquery.Storage.V1Beta1.DataFormat.Unspecified) hash ^= Format.GetHashCode();
      if (ShardingStrategy != global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy.Unspecified) hash ^= ShardingStrategy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tableReference_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TableReference);
      }
      if (tableModifiers_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TableModifiers);
      }
      if (RequestedStreams != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RequestedStreams);
      }
      if (readOptions_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReadOptions);
      }
      if (Format != global::Google.Cloud.Bigquery.Storage.V1Beta1.DataFormat.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Format);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Parent);
      }
      if (ShardingStrategy != global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ShardingStrategy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tableReference_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TableReference);
      }
      if (tableModifiers_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TableModifiers);
      }
      if (RequestedStreams != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RequestedStreams);
      }
      if (readOptions_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReadOptions);
      }
      if (Format != global::Google.Cloud.Bigquery.Storage.V1Beta1.DataFormat.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Format);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Parent);
      }
      if (ShardingStrategy != global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ShardingStrategy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tableReference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableReference);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (tableModifiers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableModifiers);
      }
      if (RequestedStreams != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestedStreams);
      }
      if (readOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadOptions);
      }
      if (Format != global::Google.Cloud.Bigquery.Storage.V1Beta1.DataFormat.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Format);
      }
      if (ShardingStrategy != global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShardingStrategy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateReadSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.tableReference_ != null) {
        if (tableReference_ == null) {
          TableReference = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReference();
        }
        TableReference.MergeFrom(other.TableReference);
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.tableModifiers_ != null) {
        if (tableModifiers_ == null) {
          TableModifiers = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableModifiers();
        }
        TableModifiers.MergeFrom(other.TableModifiers);
      }
      if (other.RequestedStreams != 0) {
        RequestedStreams = other.RequestedStreams;
      }
      if (other.readOptions_ != null) {
        if (readOptions_ == null) {
          ReadOptions = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReadOptions();
        }
        ReadOptions.MergeFrom(other.ReadOptions);
      }
      if (other.Format != global::Google.Cloud.Bigquery.Storage.V1Beta1.DataFormat.Unspecified) {
        Format = other.Format;
      }
      if (other.ShardingStrategy != global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy.Unspecified) {
        ShardingStrategy = other.ShardingStrategy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tableReference_ == null) {
              TableReference = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReference();
            }
            input.ReadMessage(TableReference);
            break;
          }
          case 18: {
            if (tableModifiers_ == null) {
              TableModifiers = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableModifiers();
            }
            input.ReadMessage(TableModifiers);
            break;
          }
          case 24: {
            RequestedStreams = input.ReadInt32();
            break;
          }
          case 34: {
            if (readOptions_ == null) {
              ReadOptions = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReadOptions();
            }
            input.ReadMessage(ReadOptions);
            break;
          }
          case 40: {
            Format = (global::Google.Cloud.Bigquery.Storage.V1Beta1.DataFormat) input.ReadEnum();
            break;
          }
          case 50: {
            Parent = input.ReadString();
            break;
          }
          case 56: {
            ShardingStrategy = (global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tableReference_ == null) {
              TableReference = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReference();
            }
            input.ReadMessage(TableReference);
            break;
          }
          case 18: {
            if (tableModifiers_ == null) {
              TableModifiers = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableModifiers();
            }
            input.ReadMessage(TableModifiers);
            break;
          }
          case 24: {
            RequestedStreams = input.ReadInt32();
            break;
          }
          case 34: {
            if (readOptions_ == null) {
              ReadOptions = new global::Google.Cloud.Bigquery.Storage.V1Beta1.TableReadOptions();
            }
            input.ReadMessage(ReadOptions);
            break;
          }
          case 40: {
            Format = (global::Google.Cloud.Bigquery.Storage.V1Beta1.DataFormat) input.ReadEnum();
            break;
          }
          case 50: {
            Parent = input.ReadString();
            break;
          }
          case 56: {
            ShardingStrategy = (global::Google.Cloud.Bigquery.Storage.V1Beta1.ShardingStrategy) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Requesting row data via `ReadRows` must provide Stream position information.
  /// </summary>
  public sealed partial class ReadRowsRequest : pb::IMessage<ReadRowsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadRowsRequest> _parser = new pb::MessageParser<ReadRowsRequest>(() => new ReadRowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadRowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsRequest(ReadRowsRequest other) : this() {
      readPosition_ = other.readPosition_ != null ? other.readPosition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsRequest Clone() {
      return new ReadRowsRequest(this);
    }

    /// <summary>Field number for the "read_position" field.</summary>
    public const int ReadPositionFieldNumber = 1;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamPosition readPosition_;
    /// <summary>
    /// Required. Identifier of the position in the stream to start reading from.
    /// The offset requested must be less than the last row read from ReadRows.
    /// Requesting a larger offset is undefined.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamPosition ReadPosition {
      get { return readPosition_; }
      set {
        readPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadRowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadRowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReadPosition, other.ReadPosition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (readPosition_ != null) hash ^= ReadPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (readPosition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReadPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (readPosition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReadPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (readPosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadPosition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadRowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.readPosition_ != null) {
        if (readPosition_ == null) {
          ReadPosition = new global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamPosition();
        }
        ReadPosition.MergeFrom(other.ReadPosition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (readPosition_ == null) {
              ReadPosition = new global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamPosition();
            }
            input.ReadMessage(ReadPosition);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (readPosition_ == null) {
              ReadPosition = new global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamPosition();
            }
            input.ReadMessage(ReadPosition);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Progress information for a given Stream.
  /// </summary>
  public sealed partial class StreamStatus : pb::IMessage<StreamStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamStatus> _parser = new pb::MessageParser<StreamStatus>(() => new StreamStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamStatus(StreamStatus other) : this() {
      estimatedRowCount_ = other.estimatedRowCount_;
      fractionConsumed_ = other.fractionConsumed_;
      progress_ = other.progress_ != null ? other.progress_.Clone() : null;
      isSplittable_ = other.isSplittable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamStatus Clone() {
      return new StreamStatus(this);
    }

    /// <summary>Field number for the "estimated_row_count" field.</summary>
    public const int EstimatedRowCountFieldNumber = 1;
    private long estimatedRowCount_;
    /// <summary>
    /// Number of estimated rows in the current stream. May change over time as
    /// different readers in the stream progress at rates which are relatively fast
    /// or slow.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EstimatedRowCount {
      get { return estimatedRowCount_; }
      set {
        estimatedRowCount_ = value;
      }
    }

    /// <summary>Field number for the "fraction_consumed" field.</summary>
    public const int FractionConsumedFieldNumber = 2;
    private float fractionConsumed_;
    /// <summary>
    /// A value in the range [0.0, 1.0] that represents the fraction of rows
    /// assigned to this stream that have been processed by the server. In the
    /// presence of read filters, the server may process more rows than it returns,
    /// so this value reflects progress through the pre-filtering rows.
    ///
    /// This value is only populated for sessions created through the BALANCED
    /// sharding strategy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float FractionConsumed {
      get { return fractionConsumed_; }
      set {
        fractionConsumed_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 4;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.Progress progress_;
    /// <summary>
    /// Represents the progress of the current stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.Progress Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    /// <summary>Field number for the "is_splittable" field.</summary>
    public const int IsSplittableFieldNumber = 3;
    private bool isSplittable_;
    /// <summary>
    /// Whether this stream can be split. For sessions that use the LIQUID sharding
    /// strategy, this value is always false. For BALANCED sessions, this value is
    /// false when enough data have been read such that no more splits are possible
    /// at that point or beyond. For small tables or streams that are the result of
    /// a chain of splits, this value may never be true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSplittable {
      get { return isSplittable_; }
      set {
        isSplittable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EstimatedRowCount != other.EstimatedRowCount) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FractionConsumed, other.FractionConsumed)) return false;
      if (!object.Equals(Progress, other.Progress)) return false;
      if (IsSplittable != other.IsSplittable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EstimatedRowCount != 0L) hash ^= EstimatedRowCount.GetHashCode();
      if (FractionConsumed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FractionConsumed);
      if (progress_ != null) hash ^= Progress.GetHashCode();
      if (IsSplittable != false) hash ^= IsSplittable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EstimatedRowCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EstimatedRowCount);
      }
      if (FractionConsumed != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(FractionConsumed);
      }
      if (IsSplittable != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsSplittable);
      }
      if (progress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EstimatedRowCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EstimatedRowCount);
      }
      if (FractionConsumed != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(FractionConsumed);
      }
      if (IsSplittable != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsSplittable);
      }
      if (progress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EstimatedRowCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EstimatedRowCount);
      }
      if (FractionConsumed != 0F) {
        size += 1 + 4;
      }
      if (progress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Progress);
      }
      if (IsSplittable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamStatus other) {
      if (other == null) {
        return;
      }
      if (other.EstimatedRowCount != 0L) {
        EstimatedRowCount = other.EstimatedRowCount;
      }
      if (other.FractionConsumed != 0F) {
        FractionConsumed = other.FractionConsumed;
      }
      if (other.progress_ != null) {
        if (progress_ == null) {
          Progress = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Progress();
        }
        Progress.MergeFrom(other.Progress);
      }
      if (other.IsSplittable != false) {
        IsSplittable = other.IsSplittable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EstimatedRowCount = input.ReadInt64();
            break;
          }
          case 21: {
            FractionConsumed = input.ReadFloat();
            break;
          }
          case 24: {
            IsSplittable = input.ReadBool();
            break;
          }
          case 34: {
            if (progress_ == null) {
              Progress = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Progress();
            }
            input.ReadMessage(Progress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EstimatedRowCount = input.ReadInt64();
            break;
          }
          case 21: {
            FractionConsumed = input.ReadFloat();
            break;
          }
          case 24: {
            IsSplittable = input.ReadBool();
            break;
          }
          case 34: {
            if (progress_ == null) {
              Progress = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Progress();
            }
            input.ReadMessage(Progress);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Progress : pb::IMessage<Progress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Progress> _parser = new pb::MessageParser<Progress>(() => new Progress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Progress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Progress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Progress(Progress other) : this() {
      atResponseStart_ = other.atResponseStart_;
      atResponseEnd_ = other.atResponseEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Progress Clone() {
      return new Progress(this);
    }

    /// <summary>Field number for the "at_response_start" field.</summary>
    public const int AtResponseStartFieldNumber = 1;
    private float atResponseStart_;
    /// <summary>
    /// The fraction of rows assigned to the stream that have been processed by the
    /// server so far, not including the rows in the current response message.
    ///
    /// This value, along with `at_response_end`, can be used to interpolate the
    /// progress made as the rows in the message are being processed using the
    /// following formula: `at_response_start + (at_response_end -
    /// at_response_start) * rows_processed_from_response / rows_in_response`.
    ///
    /// Note that if a filter is provided, the `at_response_end` value of the
    /// previous response may not necessarily be equal to the `at_response_start`
    /// value of the current response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AtResponseStart {
      get { return atResponseStart_; }
      set {
        atResponseStart_ = value;
      }
    }

    /// <summary>Field number for the "at_response_end" field.</summary>
    public const int AtResponseEndFieldNumber = 2;
    private float atResponseEnd_;
    /// <summary>
    /// Similar to `at_response_start`, except that this value includes the rows in
    /// the current response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AtResponseEnd {
      get { return atResponseEnd_; }
      set {
        atResponseEnd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Progress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Progress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtResponseStart, other.AtResponseStart)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AtResponseEnd, other.AtResponseEnd)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AtResponseStart != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtResponseStart);
      if (AtResponseEnd != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AtResponseEnd);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AtResponseStart != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(AtResponseStart);
      }
      if (AtResponseEnd != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(AtResponseEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AtResponseStart != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(AtResponseStart);
      }
      if (AtResponseEnd != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(AtResponseEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AtResponseStart != 0F) {
        size += 1 + 4;
      }
      if (AtResponseEnd != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Progress other) {
      if (other == null) {
        return;
      }
      if (other.AtResponseStart != 0F) {
        AtResponseStart = other.AtResponseStart;
      }
      if (other.AtResponseEnd != 0F) {
        AtResponseEnd = other.AtResponseEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            AtResponseStart = input.ReadFloat();
            break;
          }
          case 21: {
            AtResponseEnd = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            AtResponseStart = input.ReadFloat();
            break;
          }
          case 21: {
            AtResponseEnd = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Information on if the current connection is being throttled.
  /// </summary>
  public sealed partial class ThrottleStatus : pb::IMessage<ThrottleStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThrottleStatus> _parser = new pb::MessageParser<ThrottleStatus>(() => new ThrottleStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThrottleStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrottleStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrottleStatus(ThrottleStatus other) : this() {
      throttlePercent_ = other.throttlePercent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrottleStatus Clone() {
      return new ThrottleStatus(this);
    }

    /// <summary>Field number for the "throttle_percent" field.</summary>
    public const int ThrottlePercentFieldNumber = 1;
    private int throttlePercent_;
    /// <summary>
    /// How much this connection is being throttled.
    /// 0 is no throttling, 100 is completely throttled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThrottlePercent {
      get { return throttlePercent_; }
      set {
        throttlePercent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThrottleStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThrottleStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThrottlePercent != other.ThrottlePercent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ThrottlePercent != 0) hash ^= ThrottlePercent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ThrottlePercent != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ThrottlePercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ThrottlePercent != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ThrottlePercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ThrottlePercent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThrottlePercent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThrottleStatus other) {
      if (other == null) {
        return;
      }
      if (other.ThrottlePercent != 0) {
        ThrottlePercent = other.ThrottlePercent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ThrottlePercent = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ThrottlePercent = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response from calling `ReadRows` may include row data, progress and
  /// throttling information.
  /// </summary>
  public sealed partial class ReadRowsResponse : pb::IMessage<ReadRowsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadRowsResponse> _parser = new pb::MessageParser<ReadRowsResponse>(() => new ReadRowsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadRowsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsResponse(ReadRowsResponse other) : this() {
      rowCount_ = other.rowCount_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      throttleStatus_ = other.throttleStatus_ != null ? other.throttleStatus_.Clone() : null;
      switch (other.RowsCase) {
        case RowsOneofCase.AvroRows:
          AvroRows = other.AvroRows.Clone();
          break;
        case RowsOneofCase.ArrowRecordBatch:
          ArrowRecordBatch = other.ArrowRecordBatch.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsResponse Clone() {
      return new ReadRowsResponse(this);
    }

    /// <summary>Field number for the "avro_rows" field.</summary>
    public const int AvroRowsFieldNumber = 3;
    /// <summary>
    /// Serialized row data in AVRO format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroRows AvroRows {
      get { return rowsCase_ == RowsOneofCase.AvroRows ? (global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroRows) rows_ : null; }
      set {
        rows_ = value;
        rowsCase_ = value == null ? RowsOneofCase.None : RowsOneofCase.AvroRows;
      }
    }

    /// <summary>Field number for the "arrow_record_batch" field.</summary>
    public const int ArrowRecordBatchFieldNumber = 4;
    /// <summary>
    /// Serialized row data in Arrow RecordBatch format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowRecordBatch ArrowRecordBatch {
      get { return rowsCase_ == RowsOneofCase.ArrowRecordBatch ? (global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowRecordBatch) rows_ : null; }
      set {
        rows_ = value;
        rowsCase_ = value == null ? RowsOneofCase.None : RowsOneofCase.ArrowRecordBatch;
      }
    }

    /// <summary>Field number for the "row_count" field.</summary>
    public const int RowCountFieldNumber = 6;
    private long rowCount_;
    /// <summary>
    /// Number of serialized rows in the rows block. This value is recorded here,
    /// in addition to the row_count values in the output-specific messages in
    /// `rows`, so that code which needs to record progress through the stream can
    /// do so in an output format-independent way.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RowCount {
      get { return rowCount_; }
      set {
        rowCount_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamStatus status_;
    /// <summary>
    /// Estimated stream statistics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "throttle_status" field.</summary>
    public const int ThrottleStatusFieldNumber = 5;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.ThrottleStatus throttleStatus_;
    /// <summary>
    /// Throttling status. If unset, the latest response still describes
    /// the current throttling status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.ThrottleStatus ThrottleStatus {
      get { return throttleStatus_; }
      set {
        throttleStatus_ = value;
      }
    }

    private object rows_;
    /// <summary>Enum of possible cases for the "rows" oneof.</summary>
    public enum RowsOneofCase {
      None = 0,
      AvroRows = 3,
      ArrowRecordBatch = 4,
    }
    private RowsOneofCase rowsCase_ = RowsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowsOneofCase RowsCase {
      get { return rowsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRows() {
      rowsCase_ = RowsOneofCase.None;
      rows_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadRowsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadRowsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AvroRows, other.AvroRows)) return false;
      if (!object.Equals(ArrowRecordBatch, other.ArrowRecordBatch)) return false;
      if (RowCount != other.RowCount) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(ThrottleStatus, other.ThrottleStatus)) return false;
      if (RowsCase != other.RowsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rowsCase_ == RowsOneofCase.AvroRows) hash ^= AvroRows.GetHashCode();
      if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) hash ^= ArrowRecordBatch.GetHashCode();
      if (RowCount != 0L) hash ^= RowCount.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (throttleStatus_ != null) hash ^= ThrottleStatus.GetHashCode();
      hash ^= (int) rowsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (rowsCase_ == RowsOneofCase.AvroRows) {
        output.WriteRawTag(26);
        output.WriteMessage(AvroRows);
      }
      if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
        output.WriteRawTag(34);
        output.WriteMessage(ArrowRecordBatch);
      }
      if (throttleStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ThrottleStatus);
      }
      if (RowCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(RowCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (rowsCase_ == RowsOneofCase.AvroRows) {
        output.WriteRawTag(26);
        output.WriteMessage(AvroRows);
      }
      if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
        output.WriteRawTag(34);
        output.WriteMessage(ArrowRecordBatch);
      }
      if (throttleStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ThrottleStatus);
      }
      if (RowCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(RowCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rowsCase_ == RowsOneofCase.AvroRows) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvroRows);
      }
      if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrowRecordBatch);
      }
      if (RowCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowCount);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (throttleStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThrottleStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadRowsResponse other) {
      if (other == null) {
        return;
      }
      if (other.RowCount != 0L) {
        RowCount = other.RowCount;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamStatus();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.throttleStatus_ != null) {
        if (throttleStatus_ == null) {
          ThrottleStatus = new global::Google.Cloud.Bigquery.Storage.V1Beta1.ThrottleStatus();
        }
        ThrottleStatus.MergeFrom(other.ThrottleStatus);
      }
      switch (other.RowsCase) {
        case RowsOneofCase.AvroRows:
          if (AvroRows == null) {
            AvroRows = new global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroRows();
          }
          AvroRows.MergeFrom(other.AvroRows);
          break;
        case RowsOneofCase.ArrowRecordBatch:
          if (ArrowRecordBatch == null) {
            ArrowRecordBatch = new global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowRecordBatch();
          }
          ArrowRecordBatch.MergeFrom(other.ArrowRecordBatch);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (status_ == null) {
              Status = new global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 26: {
            global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroRows subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroRows();
            if (rowsCase_ == RowsOneofCase.AvroRows) {
              subBuilder.MergeFrom(AvroRows);
            }
            input.ReadMessage(subBuilder);
            AvroRows = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowRecordBatch subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowRecordBatch();
            if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
              subBuilder.MergeFrom(ArrowRecordBatch);
            }
            input.ReadMessage(subBuilder);
            ArrowRecordBatch = subBuilder;
            break;
          }
          case 42: {
            if (throttleStatus_ == null) {
              ThrottleStatus = new global::Google.Cloud.Bigquery.Storage.V1Beta1.ThrottleStatus();
            }
            input.ReadMessage(ThrottleStatus);
            break;
          }
          case 48: {
            RowCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (status_ == null) {
              Status = new global::Google.Cloud.Bigquery.Storage.V1Beta1.StreamStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 26: {
            global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroRows subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta1.AvroRows();
            if (rowsCase_ == RowsOneofCase.AvroRows) {
              subBuilder.MergeFrom(AvroRows);
            }
            input.ReadMessage(subBuilder);
            AvroRows = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowRecordBatch subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta1.ArrowRecordBatch();
            if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
              subBuilder.MergeFrom(ArrowRecordBatch);
            }
            input.ReadMessage(subBuilder);
            ArrowRecordBatch = subBuilder;
            break;
          }
          case 42: {
            if (throttleStatus_ == null) {
              ThrottleStatus = new global::Google.Cloud.Bigquery.Storage.V1Beta1.ThrottleStatus();
            }
            input.ReadMessage(ThrottleStatus);
            break;
          }
          case 48: {
            RowCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Information needed to request additional streams for an established read
  /// session.
  /// </summary>
  public sealed partial class BatchCreateReadSessionStreamsRequest : pb::IMessage<BatchCreateReadSessionStreamsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchCreateReadSessionStreamsRequest> _parser = new pb::MessageParser<BatchCreateReadSessionStreamsRequest>(() => new BatchCreateReadSessionStreamsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchCreateReadSessionStreamsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCreateReadSessionStreamsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCreateReadSessionStreamsRequest(BatchCreateReadSessionStreamsRequest other) : this() {
      session_ = other.session_ != null ? other.session_.Clone() : null;
      requestedStreams_ = other.requestedStreams_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCreateReadSessionStreamsRequest Clone() {
      return new BatchCreateReadSessionStreamsRequest(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.ReadSession session_;
    /// <summary>
    /// Required. Must be a non-expired session obtained from a call to
    /// CreateReadSession. Only the name field needs to be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.ReadSession Session {
      get { return session_; }
      set {
        session_ = value;
      }
    }

    /// <summary>Field number for the "requested_streams" field.</summary>
    public const int RequestedStreamsFieldNumber = 2;
    private int requestedStreams_;
    /// <summary>
    /// Required. Number of new streams requested. Must be positive.
    /// Number of added streams may be less than this, see CreateReadSessionRequest
    /// for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequestedStreams {
      get { return requestedStreams_; }
      set {
        requestedStreams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchCreateReadSessionStreamsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchCreateReadSessionStreamsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Session, other.Session)) return false;
      if (RequestedStreams != other.RequestedStreams) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (session_ != null) hash ^= Session.GetHashCode();
      if (RequestedStreams != 0) hash ^= RequestedStreams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (session_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Session);
      }
      if (RequestedStreams != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RequestedStreams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (session_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Session);
      }
      if (RequestedStreams != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RequestedStreams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (session_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Session);
      }
      if (RequestedStreams != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestedStreams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchCreateReadSessionStreamsRequest other) {
      if (other == null) {
        return;
      }
      if (other.session_ != null) {
        if (session_ == null) {
          Session = new global::Google.Cloud.Bigquery.Storage.V1Beta1.ReadSession();
        }
        Session.MergeFrom(other.Session);
      }
      if (other.RequestedStreams != 0) {
        RequestedStreams = other.RequestedStreams;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (session_ == null) {
              Session = new global::Google.Cloud.Bigquery.Storage.V1Beta1.ReadSession();
            }
            input.ReadMessage(Session);
            break;
          }
          case 16: {
            RequestedStreams = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (session_ == null) {
              Session = new global::Google.Cloud.Bigquery.Storage.V1Beta1.ReadSession();
            }
            input.ReadMessage(Session);
            break;
          }
          case 16: {
            RequestedStreams = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response from `BatchCreateReadSessionStreams` returns the stream
  /// identifiers for the newly created streams.
  /// </summary>
  public sealed partial class BatchCreateReadSessionStreamsResponse : pb::IMessage<BatchCreateReadSessionStreamsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchCreateReadSessionStreamsResponse> _parser = new pb::MessageParser<BatchCreateReadSessionStreamsResponse>(() => new BatchCreateReadSessionStreamsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchCreateReadSessionStreamsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCreateReadSessionStreamsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCreateReadSessionStreamsResponse(BatchCreateReadSessionStreamsResponse other) : this() {
      streams_ = other.streams_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCreateReadSessionStreamsResponse Clone() {
      return new BatchCreateReadSessionStreamsResponse(this);
    }

    /// <summary>Field number for the "streams" field.</summary>
    public const int StreamsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream> _repeated_streams_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream> streams_ = new pbc::RepeatedField<global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream>();
    /// <summary>
    /// Newly added streams.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream> Streams {
      get { return streams_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchCreateReadSessionStreamsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchCreateReadSessionStreamsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!streams_.Equals(other.streams_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= streams_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      streams_.WriteTo(output, _repeated_streams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      streams_.WriteTo(ref output, _repeated_streams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += streams_.CalculateSize(_repeated_streams_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchCreateReadSessionStreamsResponse other) {
      if (other == null) {
        return;
      }
      streams_.Add(other.streams_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            streams_.AddEntriesFrom(input, _repeated_streams_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            streams_.AddEntriesFrom(ref input, _repeated_streams_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request information for invoking `FinalizeStream`.
  /// </summary>
  public sealed partial class FinalizeStreamRequest : pb::IMessage<FinalizeStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FinalizeStreamRequest> _parser = new pb::MessageParser<FinalizeStreamRequest>(() => new FinalizeStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FinalizeStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalizeStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalizeStreamRequest(FinalizeStreamRequest other) : this() {
      stream_ = other.stream_ != null ? other.stream_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalizeStreamRequest Clone() {
      return new FinalizeStreamRequest(this);
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 2;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream stream_;
    /// <summary>
    /// Required. Stream to finalize.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream Stream {
      get { return stream_; }
      set {
        stream_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FinalizeStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FinalizeStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stream, other.Stream)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stream_ != null) hash ^= Stream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stream);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FinalizeStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.stream_ != null) {
        if (stream_ == null) {
          Stream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
        }
        Stream.MergeFrom(other.Stream);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (stream_ == null) {
              Stream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
            }
            input.ReadMessage(Stream);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (stream_ == null) {
              Stream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
            }
            input.ReadMessage(Stream);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request information for `SplitReadStream`.
  /// </summary>
  public sealed partial class SplitReadStreamRequest : pb::IMessage<SplitReadStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SplitReadStreamRequest> _parser = new pb::MessageParser<SplitReadStreamRequest>(() => new SplitReadStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SplitReadStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamRequest(SplitReadStreamRequest other) : this() {
      originalStream_ = other.originalStream_ != null ? other.originalStream_.Clone() : null;
      fraction_ = other.fraction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamRequest Clone() {
      return new SplitReadStreamRequest(this);
    }

    /// <summary>Field number for the "original_stream" field.</summary>
    public const int OriginalStreamFieldNumber = 1;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream originalStream_;
    /// <summary>
    /// Required. Stream to split.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream OriginalStream {
      get { return originalStream_; }
      set {
        originalStream_ = value;
      }
    }

    /// <summary>Field number for the "fraction" field.</summary>
    public const int FractionFieldNumber = 2;
    private float fraction_;
    /// <summary>
    /// A value in the range (0.0, 1.0) that specifies the fractional point at
    /// which the original stream should be split. The actual split point is
    /// evaluated on pre-filtered rows, so if a filter is provided, then there is
    /// no guarantee that the division of the rows between the new child streams
    /// will be proportional to this fractional value. Additionally, because the
    /// server-side unit for assigning data is collections of rows, this fraction
    /// will always map to to a data storage boundary on the server side.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Fraction {
      get { return fraction_; }
      set {
        fraction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SplitReadStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SplitReadStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OriginalStream, other.OriginalStream)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Fraction, other.Fraction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (originalStream_ != null) hash ^= OriginalStream.GetHashCode();
      if (Fraction != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Fraction);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (originalStream_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OriginalStream);
      }
      if (Fraction != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Fraction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (originalStream_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OriginalStream);
      }
      if (Fraction != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Fraction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (originalStream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginalStream);
      }
      if (Fraction != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SplitReadStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.originalStream_ != null) {
        if (originalStream_ == null) {
          OriginalStream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
        }
        OriginalStream.MergeFrom(other.OriginalStream);
      }
      if (other.Fraction != 0F) {
        Fraction = other.Fraction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (originalStream_ == null) {
              OriginalStream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
            }
            input.ReadMessage(OriginalStream);
            break;
          }
          case 21: {
            Fraction = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (originalStream_ == null) {
              OriginalStream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
            }
            input.ReadMessage(OriginalStream);
            break;
          }
          case 21: {
            Fraction = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response from `SplitReadStream`.
  /// </summary>
  public sealed partial class SplitReadStreamResponse : pb::IMessage<SplitReadStreamResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SplitReadStreamResponse> _parser = new pb::MessageParser<SplitReadStreamResponse>(() => new SplitReadStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SplitReadStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta1.StorageReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamResponse(SplitReadStreamResponse other) : this() {
      primaryStream_ = other.primaryStream_ != null ? other.primaryStream_.Clone() : null;
      remainderStream_ = other.remainderStream_ != null ? other.remainderStream_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamResponse Clone() {
      return new SplitReadStreamResponse(this);
    }

    /// <summary>Field number for the "primary_stream" field.</summary>
    public const int PrimaryStreamFieldNumber = 1;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream primaryStream_;
    /// <summary>
    /// Primary stream, which contains the beginning portion of
    /// |original_stream|. An empty value indicates that the original stream can no
    /// longer be split.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream PrimaryStream {
      get { return primaryStream_; }
      set {
        primaryStream_ = value;
      }
    }

    /// <summary>Field number for the "remainder_stream" field.</summary>
    public const int RemainderStreamFieldNumber = 2;
    private global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream remainderStream_;
    /// <summary>
    /// Remainder stream, which contains the tail of |original_stream|. An empty
    /// value indicates that the original stream can no longer be split.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream RemainderStream {
      get { return remainderStream_; }
      set {
        remainderStream_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SplitReadStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SplitReadStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PrimaryStream, other.PrimaryStream)) return false;
      if (!object.Equals(RemainderStream, other.RemainderStream)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (primaryStream_ != null) hash ^= PrimaryStream.GetHashCode();
      if (remainderStream_ != null) hash ^= RemainderStream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (primaryStream_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrimaryStream);
      }
      if (remainderStream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RemainderStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (primaryStream_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrimaryStream);
      }
      if (remainderStream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RemainderStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (primaryStream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimaryStream);
      }
      if (remainderStream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemainderStream);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SplitReadStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.primaryStream_ != null) {
        if (primaryStream_ == null) {
          PrimaryStream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
        }
        PrimaryStream.MergeFrom(other.PrimaryStream);
      }
      if (other.remainderStream_ != null) {
        if (remainderStream_ == null) {
          RemainderStream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
        }
        RemainderStream.MergeFrom(other.RemainderStream);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (primaryStream_ == null) {
              PrimaryStream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
            }
            input.ReadMessage(PrimaryStream);
            break;
          }
          case 18: {
            if (remainderStream_ == null) {
              RemainderStream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
            }
            input.ReadMessage(RemainderStream);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (primaryStream_ == null) {
              PrimaryStream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
            }
            input.ReadMessage(PrimaryStream);
            break;
          }
          case 18: {
            if (remainderStream_ == null) {
              RemainderStream = new global::Google.Cloud.Bigquery.Storage.V1Beta1.Stream();
            }
            input.ReadMessage(RemainderStream);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
