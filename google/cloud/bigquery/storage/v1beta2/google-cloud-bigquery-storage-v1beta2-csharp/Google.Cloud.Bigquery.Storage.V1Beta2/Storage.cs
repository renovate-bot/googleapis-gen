// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/bigquery/storage/v1beta2/storage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Bigquery.Storage.V1Beta2 {

  /// <summary>Holder for reflection information generated from google/cloud/bigquery/storage/v1beta2/storage.proto</summary>
  public static partial class StorageReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/bigquery/storage/v1beta2/storage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StorageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNnb29nbGUvY2xvdWQvYmlncXVlcnkvc3RvcmFnZS92MWJldGEyL3N0b3Jh",
            "Z2UucHJvdG8SJWdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0",
            "YTIaHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aF2dvb2dsZS9hcGkv",
            "Y2xpZW50LnByb3RvGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3Rv",
            "Ghlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGjFnb29nbGUvY2xvdWQvYmln",
            "cXVlcnkvc3RvcmFnZS92MWJldGEyL2Fycm93LnByb3RvGjBnb29nbGUvY2xv",
            "dWQvYmlncXVlcnkvc3RvcmFnZS92MWJldGEyL2F2cm8ucHJvdG8aNGdvb2ds",
            "ZS9jbG91ZC9iaWdxdWVyeS9zdG9yYWdlL3YxYmV0YTIvcHJvdG9idWYucHJv",
            "dG8aMmdvb2dsZS9jbG91ZC9iaWdxdWVyeS9zdG9yYWdlL3YxYmV0YTIvc3Ry",
            "ZWFtLnByb3RvGjFnb29nbGUvY2xvdWQvYmlncXVlcnkvc3RvcmFnZS92MWJl",
            "dGEyL3RhYmxlLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnBy",
            "b3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8aF2dvb2dsZS9y",
            "cGMvc3RhdHVzLnByb3RvIsgBChhDcmVhdGVSZWFkU2Vzc2lvblJlcXVlc3QS",
            "QwoGcGFyZW50GAEgASgJQjPgQQL6QS0KK2Nsb3VkcmVzb3VyY2VtYW5hZ2Vy",
            "Lmdvb2dsZWFwaXMuY29tL1Byb2plY3QSTQoMcmVhZF9zZXNzaW9uGAIgASgL",
            "MjIuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMi5SZWFk",
            "U2Vzc2lvbkID4EECEhgKEG1heF9zdHJlYW1fY291bnQYAyABKAUiaQoPUmVh",
            "ZFJvd3NSZXF1ZXN0EkYKC3JlYWRfc3RyZWFtGAEgASgJQjHgQQL6QSsKKWJp",
            "Z3F1ZXJ5c3RvcmFnZS5nb29nbGVhcGlzLmNvbS9SZWFkU3RyZWFtEg4KBm9m",
            "ZnNldBgCIAEoAyIpCg1UaHJvdHRsZVN0YXRlEhgKEHRocm90dGxlX3BlcmNl",
            "bnQYASABKAUinAEKC1N0cmVhbVN0YXRzEk0KCHByb2dyZXNzGAIgASgLMjsu",
            "Z29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMi5TdHJlYW1T",
            "dGF0cy5Qcm9ncmVzcxo+CghQcm9ncmVzcxIZChFhdF9yZXNwb25zZV9zdGFy",
            "dBgBIAEoARIXCg9hdF9yZXNwb25zZV9lbmQYAiABKAEihQQKEFJlYWRSb3dz",
            "UmVzcG9uc2USRAoJYXZyb19yb3dzGAMgASgLMi8uZ29vZ2xlLmNsb3VkLmJp",
            "Z3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMi5BdnJvUm93c0gAElUKEmFycm93X3Jl",
            "Y29yZF9iYXRjaBgEIAEoCzI3Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9y",
            "YWdlLnYxYmV0YTIuQXJyb3dSZWNvcmRCYXRjaEgAEhEKCXJvd19jb3VudBgG",
            "IAEoAxJBCgVzdGF0cxgCIAEoCzIyLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5z",
            "dG9yYWdlLnYxYmV0YTIuU3RyZWFtU3RhdHMSTAoOdGhyb3R0bGVfc3RhdGUY",
            "BSABKAsyNC5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEy",
            "LlRocm90dGxlU3RhdGUSTQoLYXZyb19zY2hlbWEYByABKAsyMS5nb29nbGUu",
            "Y2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEyLkF2cm9TY2hlbWFCA+BB",
            "A0gBEk8KDGFycm93X3NjaGVtYRgIIAEoCzIyLmdvb2dsZS5jbG91ZC5iaWdx",
            "dWVyeS5zdG9yYWdlLnYxYmV0YTIuQXJyb3dTY2hlbWFCA+BBA0gBQgYKBHJv",
            "d3NCCAoGc2NoZW1hImsKFlNwbGl0UmVhZFN0cmVhbVJlcXVlc3QSPwoEbmFt",
            "ZRgBIAEoCUIx4EEC+kErCiliaWdxdWVyeXN0b3JhZ2UuZ29vZ2xlYXBpcy5j",
            "b20vUmVhZFN0cmVhbRIQCghmcmFjdGlvbhgCIAEoASKxAQoXU3BsaXRSZWFk",
            "U3RyZWFtUmVzcG9uc2USSQoOcHJpbWFyeV9zdHJlYW0YASABKAsyMS5nb29n",
            "bGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEyLlJlYWRTdHJlYW0S",
            "SwoQcmVtYWluZGVyX3N0cmVhbRgCIAEoCzIxLmdvb2dsZS5jbG91ZC5iaWdx",
            "dWVyeS5zdG9yYWdlLnYxYmV0YTIuUmVhZFN0cmVhbSKgAQoYQ3JlYXRlV3Jp",
            "dGVTdHJlYW1SZXF1ZXN0EjUKBnBhcmVudBgBIAEoCUIl4EEC+kEfCh1iaWdx",
            "dWVyeS5nb29nbGVhcGlzLmNvbS9UYWJsZRJNCgx3cml0ZV9zdHJlYW0YAiAB",
            "KAsyMi5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEyLldy",
            "aXRlU3RyZWFtQgPgQQIilwMKEUFwcGVuZFJvd3NSZXF1ZXN0EkgKDHdyaXRl",
            "X3N0cmVhbRgBIAEoCUIy4EEC+kEsCipiaWdxdWVyeXN0b3JhZ2UuZ29vZ2xl",
            "YXBpcy5jb20vV3JpdGVTdHJlYW0SKwoGb2Zmc2V0GAIgASgLMhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDY0VmFsdWUSWAoKcHJvdG9fcm93cxgEIAEoCzJCLmdv",
            "b2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTIuQXBwZW5kUm93",
            "c1JlcXVlc3QuUHJvdG9EYXRhSAASEAoIdHJhY2VfaWQYBiABKAkalgEKCVBy",
            "b3RvRGF0YRJJCg13cml0ZXJfc2NoZW1hGAEgASgLMjIuZ29vZ2xlLmNsb3Vk",
            "LmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMi5Qcm90b1NjaGVtYRI+CgRyb3dz",
            "GAIgASgLMjAuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRh",
            "Mi5Qcm90b1Jvd3NCBgoEcm93cyKvAgoSQXBwZW5kUm93c1Jlc3BvbnNlEl8K",
            "DWFwcGVuZF9yZXN1bHQYASABKAsyRi5nb29nbGUuY2xvdWQuYmlncXVlcnku",
            "c3RvcmFnZS52MWJldGEyLkFwcGVuZFJvd3NSZXNwb25zZS5BcHBlbmRSZXN1",
            "bHRIABIjCgVlcnJvchgCIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzSAASSgoO",
            "dXBkYXRlZF9zY2hlbWEYAyABKAsyMi5nb29nbGUuY2xvdWQuYmlncXVlcnku",
            "c3RvcmFnZS52MWJldGEyLlRhYmxlU2NoZW1hGjsKDEFwcGVuZFJlc3VsdBIr",
            "CgZvZmZzZXQYASABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZUIK",
            "CghyZXNwb25zZSJZChVHZXRXcml0ZVN0cmVhbVJlcXVlc3QSQAoEbmFtZRgB",
            "IAEoCUIy4EEC+kEsCipiaWdxdWVyeXN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20v",
            "V3JpdGVTdHJlYW0iUQoeQmF0Y2hDb21taXRXcml0ZVN0cmVhbXNSZXF1ZXN0",
            "EhMKBnBhcmVudBgBIAEoCUID4EECEhoKDXdyaXRlX3N0cmVhbXMYAiADKAlC",
            "A+BBAiKeAQofQmF0Y2hDb21taXRXcml0ZVN0cmVhbXNSZXNwb25zZRIvCgtj",
            "b21taXRfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "SgoNc3RyZWFtX2Vycm9ycxgCIAMoCzIzLmdvb2dsZS5jbG91ZC5iaWdxdWVy",
            "eS5zdG9yYWdlLnYxYmV0YTIuU3RvcmFnZUVycm9yIl4KGkZpbmFsaXplV3Jp",
            "dGVTdHJlYW1SZXF1ZXN0EkAKBG5hbWUYASABKAlCMuBBAvpBLAoqYmlncXVl",
            "cnlzdG9yYWdlLmdvb2dsZWFwaXMuY29tL1dyaXRlU3RyZWFtIjAKG0ZpbmFs",
            "aXplV3JpdGVTdHJlYW1SZXNwb25zZRIRCglyb3dfY291bnQYASABKAMiiQEK",
            "EEZsdXNoUm93c1JlcXVlc3QSSAoMd3JpdGVfc3RyZWFtGAEgASgJQjLgQQL6",
            "QSwKKmJpZ3F1ZXJ5c3RvcmFnZS5nb29nbGVhcGlzLmNvbS9Xcml0ZVN0cmVh",
            "bRIrCgZvZmZzZXQYAiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1",
            "ZSIjChFGbHVzaFJvd3NSZXNwb25zZRIOCgZvZmZzZXQYASABKAMi1AIKDFN0",
            "b3JhZ2VFcnJvchJSCgRjb2RlGAEgASgOMkQuZ29vZ2xlLmNsb3VkLmJpZ3F1",
            "ZXJ5LnN0b3JhZ2UudjFiZXRhMi5TdG9yYWdlRXJyb3IuU3RvcmFnZUVycm9y",
            "Q29kZRIOCgZlbnRpdHkYAiABKAkSFQoNZXJyb3JfbWVzc2FnZRgDIAEoCSLI",
            "AQoQU3RvcmFnZUVycm9yQ29kZRIiCh5TVE9SQUdFX0VSUk9SX0NPREVfVU5T",
            "UEVDSUZJRUQQABITCg9UQUJMRV9OT1RfRk9VTkQQARIcChhTVFJFQU1fQUxS",
            "RUFEWV9DT01NSVRURUQQAhIUChBTVFJFQU1fTk9UX0ZPVU5EEAMSFwoTSU5W",
            "QUxJRF9TVFJFQU1fVFlQRRAEEhgKFElOVkFMSURfU1RSRUFNX1NUQVRFEAUS",
            "FAoQU1RSRUFNX0ZJTkFMSVpFRBAGMvMGCgxCaWdRdWVyeVJlYWQS+AEKEUNy",
            "ZWF0ZVJlYWRTZXNzaW9uEj8uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3Jh",
            "Z2UudjFiZXRhMi5DcmVhdGVSZWFkU2Vzc2lvblJlcXVlc3QaMi5nb29nbGUu",
            "Y2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEyLlJlYWRTZXNzaW9uIm6C",
            "0+STAkEiPC92MWJldGEyL3tyZWFkX3Nlc3Npb24udGFibGU9cHJvamVjdHMv",
            "Ki9kYXRhc2V0cy8qL3RhYmxlcy8qfToBKtpBJHBhcmVudCxyZWFkX3Nlc3Np",
            "b24sbWF4X3N0cmVhbV9jb3VudBLeAQoIUmVhZFJvd3MSNi5nb29nbGUuY2xv",
            "dWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEyLlJlYWRSb3dzUmVxdWVzdBo3",
            "Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYxYmV0YTIuUmVhZFJv",
            "d3NSZXNwb25zZSJfgtPkkwJEEkIvdjFiZXRhMi97cmVhZF9zdHJlYW09cHJv",
            "amVjdHMvKi9sb2NhdGlvbnMvKi9zZXNzaW9ucy8qL3N0cmVhbXMvKn3aQRJy",
            "ZWFkX3N0cmVhbSxvZmZzZXQwARLVAQoPU3BsaXRSZWFkU3RyZWFtEj0uZ29v",
            "Z2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMi5TcGxpdFJlYWRT",
            "dHJlYW1SZXF1ZXN0Gj4uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2Uu",
            "djFiZXRhMi5TcGxpdFJlYWRTdHJlYW1SZXNwb25zZSJDgtPkkwI9EjsvdjFi",
            "ZXRhMi97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3Nlc3Npb25zLyov",
            "c3RyZWFtcy8qfRquAcpBHmJpZ3F1ZXJ5c3RvcmFnZS5nb29nbGVhcGlzLmNv",
            "bdJBiQFodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2JpZ3F1ZXJ5",
            "LGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvYmlncXVlcnkucmVh",
            "ZG9ubHksaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1w",
            "bGF0Zm9ybTKWDAoNQmlnUXVlcnlXcml0ZRLmAQoRQ3JlYXRlV3JpdGVTdHJl",
            "YW0SPy5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEyLkNy",
            "ZWF0ZVdyaXRlU3RyZWFtUmVxdWVzdBoyLmdvb2dsZS5jbG91ZC5iaWdxdWVy",
            "eS5zdG9yYWdlLnYxYmV0YTIuV3JpdGVTdHJlYW0iXILT5JMCQCIwL3YxYmV0",
            "YTIve3BhcmVudD1wcm9qZWN0cy8qL2RhdGFzZXRzLyovdGFibGVzLyp9Ogx3",
            "cml0ZV9zdHJlYW3aQRNwYXJlbnQsd3JpdGVfc3RyZWFtEuEBCgpBcHBlbmRS",
            "b3dzEjguZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMi5B",
            "cHBlbmRSb3dzUmVxdWVzdBo5Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9y",
            "YWdlLnYxYmV0YTIuQXBwZW5kUm93c1Jlc3BvbnNlIlqC0+STAkUiQC92MWJl",
            "dGEyL3t3cml0ZV9zdHJlYW09cHJvamVjdHMvKi9kYXRhc2V0cy8qL3RhYmxl",
            "cy8qL3N0cmVhbXMvKn06ASraQQx3cml0ZV9zdHJlYW0oATABEs4BCg5HZXRX",
            "cml0ZVN0cmVhbRI8Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdlLnYx",
            "YmV0YTIuR2V0V3JpdGVTdHJlYW1SZXF1ZXN0GjIuZ29vZ2xlLmNsb3VkLmJp",
            "Z3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMi5Xcml0ZVN0cmVhbSJKgtPkkwI9Ijgv",
            "djFiZXRhMi97bmFtZT1wcm9qZWN0cy8qL2RhdGFzZXRzLyovdGFibGVzLyov",
            "c3RyZWFtcy8qfToBKtpBBG5hbWUS6AEKE0ZpbmFsaXplV3JpdGVTdHJlYW0S",
            "QS5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEyLkZpbmFs",
            "aXplV3JpdGVTdHJlYW1SZXF1ZXN0GkIuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5",
            "LnN0b3JhZ2UudjFiZXRhMi5GaW5hbGl6ZVdyaXRlU3RyZWFtUmVzcG9uc2Ui",
            "SoLT5JMCPSI4L3YxYmV0YTIve25hbWU9cHJvamVjdHMvKi9kYXRhc2V0cy8q",
            "L3RhYmxlcy8qL3N0cmVhbXMvKn06ASraQQRuYW1lEusBChdCYXRjaENvbW1p",
            "dFdyaXRlU3RyZWFtcxJFLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5zdG9yYWdl",
            "LnYxYmV0YTIuQmF0Y2hDb21taXRXcml0ZVN0cmVhbXNSZXF1ZXN0GkYuZ29v",
            "Z2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2UudjFiZXRhMi5CYXRjaENvbW1p",
            "dFdyaXRlU3RyZWFtc1Jlc3BvbnNlIkGC0+STAjISMC92MWJldGEyL3twYXJl",
            "bnQ9cHJvamVjdHMvKi9kYXRhc2V0cy8qL3RhYmxlcy8qfdpBBnBhcmVudBLa",
            "AQoJRmx1c2hSb3dzEjcuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5LnN0b3JhZ2Uu",
            "djFiZXRhMi5GbHVzaFJvd3NSZXF1ZXN0GjguZ29vZ2xlLmNsb3VkLmJpZ3F1",
            "ZXJ5LnN0b3JhZ2UudjFiZXRhMi5GbHVzaFJvd3NSZXNwb25zZSJagtPkkwJF",
            "IkAvdjFiZXRhMi97d3JpdGVfc3RyZWFtPXByb2plY3RzLyovZGF0YXNldHMv",
            "Ki90YWJsZXMvKi9zdHJlYW1zLyp9OgEq2kEMd3JpdGVfc3RyZWFtGrABykEe",
            "YmlncXVlcnlzdG9yYWdlLmdvb2dsZWFwaXMuY29t0kGLAWh0dHBzOi8vd3d3",
            "Lmdvb2dsZWFwaXMuY29tL2F1dGgvYmlncXVlcnksaHR0cHM6Ly93d3cuZ29v",
            "Z2xlYXBpcy5jb20vYXV0aC9iaWdxdWVyeS5pbnNlcnRkYXRhLGh0dHBzOi8v",
            "d3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1CiQEKKWNv",
            "bS5nb29nbGUuY2xvdWQuYmlncXVlcnkuc3RvcmFnZS52MWJldGEyQgxTdG9y",
            "YWdlUHJvdG9QAVpMZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xl",
            "YXBpcy9jbG91ZC9iaWdxdWVyeS9zdG9yYWdlL3YxYmV0YTI7c3RvcmFnZWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowReflection.Descriptor, global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroReflection.Descriptor, global::Google.Cloud.Bigquery.Storage.V1Beta2.ProtobufReflection.Descriptor, global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamReflection.Descriptor, global::Google.Cloud.Bigquery.Storage.V1Beta2.TableReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.CreateReadSessionRequest), global::Google.Cloud.Bigquery.Storage.V1Beta2.CreateReadSessionRequest.Parser, new[]{ "Parent", "ReadSession", "MaxStreamCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadRowsRequest), global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadRowsRequest.Parser, new[]{ "ReadStream", "Offset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.ThrottleState), global::Google.Cloud.Bigquery.Storage.V1Beta2.ThrottleState.Parser, new[]{ "ThrottlePercent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats), global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats.Parser, new[]{ "Progress" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats.Types.Progress), global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats.Types.Progress.Parser, new[]{ "AtResponseStart", "AtResponseEnd" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadRowsResponse), global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadRowsResponse.Parser, new[]{ "AvroRows", "ArrowRecordBatch", "RowCount", "Stats", "ThrottleState", "AvroSchema", "ArrowSchema" }, new[]{ "Rows", "Schema" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.SplitReadStreamRequest), global::Google.Cloud.Bigquery.Storage.V1Beta2.SplitReadStreamRequest.Parser, new[]{ "Name", "Fraction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.SplitReadStreamResponse), global::Google.Cloud.Bigquery.Storage.V1Beta2.SplitReadStreamResponse.Parser, new[]{ "PrimaryStream", "RemainderStream" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.CreateWriteStreamRequest), global::Google.Cloud.Bigquery.Storage.V1Beta2.CreateWriteStreamRequest.Parser, new[]{ "Parent", "WriteStream" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsRequest), global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsRequest.Parser, new[]{ "WriteStream", "Offset", "ProtoRows", "TraceId" }, new[]{ "Rows" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsRequest.Types.ProtoData), global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsRequest.Types.ProtoData.Parser, new[]{ "WriterSchema", "Rows" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsResponse), global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsResponse.Parser, new[]{ "AppendResult", "Error", "UpdatedSchema" }, new[]{ "Response" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsResponse.Types.AppendResult), global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsResponse.Types.AppendResult.Parser, new[]{ "Offset" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.GetWriteStreamRequest), global::Google.Cloud.Bigquery.Storage.V1Beta2.GetWriteStreamRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.BatchCommitWriteStreamsRequest), global::Google.Cloud.Bigquery.Storage.V1Beta2.BatchCommitWriteStreamsRequest.Parser, new[]{ "Parent", "WriteStreams" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.BatchCommitWriteStreamsResponse), global::Google.Cloud.Bigquery.Storage.V1Beta2.BatchCommitWriteStreamsResponse.Parser, new[]{ "CommitTime", "StreamErrors" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.FinalizeWriteStreamRequest), global::Google.Cloud.Bigquery.Storage.V1Beta2.FinalizeWriteStreamRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.FinalizeWriteStreamResponse), global::Google.Cloud.Bigquery.Storage.V1Beta2.FinalizeWriteStreamResponse.Parser, new[]{ "RowCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.FlushRowsRequest), global::Google.Cloud.Bigquery.Storage.V1Beta2.FlushRowsRequest.Parser, new[]{ "WriteStream", "Offset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.FlushRowsResponse), global::Google.Cloud.Bigquery.Storage.V1Beta2.FlushRowsResponse.Parser, new[]{ "Offset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError), global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Parser, new[]{ "Code", "Entity", "ErrorMessage" }, null, new[]{ typeof(global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Types.StorageErrorCode) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request message for `CreateReadSession`.
  /// </summary>
  public sealed partial class CreateReadSessionRequest : pb::IMessage<CreateReadSessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateReadSessionRequest> _parser = new pb::MessageParser<CreateReadSessionRequest>(() => new CreateReadSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateReadSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReadSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReadSessionRequest(CreateReadSessionRequest other) : this() {
      parent_ = other.parent_;
      readSession_ = other.readSession_ != null ? other.readSession_.Clone() : null;
      maxStreamCount_ = other.maxStreamCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReadSessionRequest Clone() {
      return new CreateReadSessionRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The request project that owns the session, in the form of
    /// `projects/{project_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "read_session" field.</summary>
    public const int ReadSessionFieldNumber = 2;
    private global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadSession readSession_;
    /// <summary>
    /// Required. Session to be created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadSession ReadSession {
      get { return readSession_; }
      set {
        readSession_ = value;
      }
    }

    /// <summary>Field number for the "max_stream_count" field.</summary>
    public const int MaxStreamCountFieldNumber = 3;
    private int maxStreamCount_;
    /// <summary>
    /// Max initial number of streams. If unset or zero, the server will
    /// provide a value of streams so as to produce reasonable throughput. Must be
    /// non-negative. The number of streams may be lower than the requested number,
    /// depending on the amount parallelism that is reasonable for the table. Error
    /// will be returned if the max count is greater than the current system
    /// max limit of 1,000.
    ///
    /// Streams must be read starting from offset 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxStreamCount {
      get { return maxStreamCount_; }
      set {
        maxStreamCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateReadSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateReadSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(ReadSession, other.ReadSession)) return false;
      if (MaxStreamCount != other.MaxStreamCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (readSession_ != null) hash ^= ReadSession.GetHashCode();
      if (MaxStreamCount != 0) hash ^= MaxStreamCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (readSession_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReadSession);
      }
      if (MaxStreamCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxStreamCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (readSession_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReadSession);
      }
      if (MaxStreamCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxStreamCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (readSession_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadSession);
      }
      if (MaxStreamCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxStreamCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateReadSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.readSession_ != null) {
        if (readSession_ == null) {
          ReadSession = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadSession();
        }
        ReadSession.MergeFrom(other.ReadSession);
      }
      if (other.MaxStreamCount != 0) {
        MaxStreamCount = other.MaxStreamCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (readSession_ == null) {
              ReadSession = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadSession();
            }
            input.ReadMessage(ReadSession);
            break;
          }
          case 24: {
            MaxStreamCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (readSession_ == null) {
              ReadSession = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadSession();
            }
            input.ReadMessage(ReadSession);
            break;
          }
          case 24: {
            MaxStreamCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for `ReadRows`.
  /// </summary>
  public sealed partial class ReadRowsRequest : pb::IMessage<ReadRowsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadRowsRequest> _parser = new pb::MessageParser<ReadRowsRequest>(() => new ReadRowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadRowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsRequest(ReadRowsRequest other) : this() {
      readStream_ = other.readStream_;
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsRequest Clone() {
      return new ReadRowsRequest(this);
    }

    /// <summary>Field number for the "read_stream" field.</summary>
    public const int ReadStreamFieldNumber = 1;
    private string readStream_ = "";
    /// <summary>
    /// Required. Stream to read rows from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReadStream {
      get { return readStream_; }
      set {
        readStream_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    /// <summary>
    /// The offset requested must be less than the last row read from Read.
    /// Requesting a larger offset is undefined. If not specified, start reading
    /// from offset zero.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadRowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadRowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReadStream != other.ReadStream) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReadStream.Length != 0) hash ^= ReadStream.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReadStream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReadStream);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReadStream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReadStream);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReadStream.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReadStream);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadRowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ReadStream.Length != 0) {
        ReadStream = other.ReadStream;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReadStream = input.ReadString();
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ReadStream = input.ReadString();
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Information on if the current connection is being throttled.
  /// </summary>
  public sealed partial class ThrottleState : pb::IMessage<ThrottleState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThrottleState> _parser = new pb::MessageParser<ThrottleState>(() => new ThrottleState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThrottleState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrottleState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrottleState(ThrottleState other) : this() {
      throttlePercent_ = other.throttlePercent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrottleState Clone() {
      return new ThrottleState(this);
    }

    /// <summary>Field number for the "throttle_percent" field.</summary>
    public const int ThrottlePercentFieldNumber = 1;
    private int throttlePercent_;
    /// <summary>
    /// How much this connection is being throttled. Zero means no throttling,
    /// 100 means fully throttled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThrottlePercent {
      get { return throttlePercent_; }
      set {
        throttlePercent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThrottleState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThrottleState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThrottlePercent != other.ThrottlePercent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ThrottlePercent != 0) hash ^= ThrottlePercent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ThrottlePercent != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ThrottlePercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ThrottlePercent != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ThrottlePercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ThrottlePercent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThrottlePercent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThrottleState other) {
      if (other == null) {
        return;
      }
      if (other.ThrottlePercent != 0) {
        ThrottlePercent = other.ThrottlePercent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ThrottlePercent = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ThrottlePercent = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Estimated stream statistics for a given Stream.
  /// </summary>
  public sealed partial class StreamStats : pb::IMessage<StreamStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamStats> _parser = new pb::MessageParser<StreamStats>(() => new StreamStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamStats(StreamStats other) : this() {
      progress_ = other.progress_ != null ? other.progress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamStats Clone() {
      return new StreamStats(this);
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 2;
    private global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats.Types.Progress progress_;
    /// <summary>
    /// Represents the progress of the current stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats.Types.Progress Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Progress, other.Progress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (progress_ != null) hash ^= Progress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (progress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (progress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (progress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Progress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamStats other) {
      if (other == null) {
        return;
      }
      if (other.progress_ != null) {
        if (progress_ == null) {
          Progress = new global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats.Types.Progress();
        }
        Progress.MergeFrom(other.Progress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (progress_ == null) {
              Progress = new global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats.Types.Progress();
            }
            input.ReadMessage(Progress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (progress_ == null) {
              Progress = new global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats.Types.Progress();
            }
            input.ReadMessage(Progress);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StreamStats message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Progress : pb::IMessage<Progress>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Progress> _parser = new pb::MessageParser<Progress>(() => new Progress());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Progress> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Progress() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Progress(Progress other) : this() {
          atResponseStart_ = other.atResponseStart_;
          atResponseEnd_ = other.atResponseEnd_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Progress Clone() {
          return new Progress(this);
        }

        /// <summary>Field number for the "at_response_start" field.</summary>
        public const int AtResponseStartFieldNumber = 1;
        private double atResponseStart_;
        /// <summary>
        /// The fraction of rows assigned to the stream that have been processed by
        /// the server so far, not including the rows in the current response
        /// message.
        ///
        /// This value, along with `at_response_end`, can be used to interpolate
        /// the progress made as the rows in the message are being processed using
        /// the following formula: `at_response_start + (at_response_end -
        /// at_response_start) * rows_processed_from_response / rows_in_response`.
        ///
        /// Note that if a filter is provided, the `at_response_end` value of the
        /// previous response may not necessarily be equal to the
        /// `at_response_start` value of the current response.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double AtResponseStart {
          get { return atResponseStart_; }
          set {
            atResponseStart_ = value;
          }
        }

        /// <summary>Field number for the "at_response_end" field.</summary>
        public const int AtResponseEndFieldNumber = 2;
        private double atResponseEnd_;
        /// <summary>
        /// Similar to `at_response_start`, except that this value includes the
        /// rows in the current response.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double AtResponseEnd {
          get { return atResponseEnd_; }
          set {
            atResponseEnd_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Progress);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Progress other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AtResponseStart, other.AtResponseStart)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AtResponseEnd, other.AtResponseEnd)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AtResponseStart != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AtResponseStart);
          if (AtResponseEnd != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AtResponseEnd);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (AtResponseStart != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(AtResponseStart);
          }
          if (AtResponseEnd != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(AtResponseEnd);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (AtResponseStart != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(AtResponseStart);
          }
          if (AtResponseEnd != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(AtResponseEnd);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AtResponseStart != 0D) {
            size += 1 + 8;
          }
          if (AtResponseEnd != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Progress other) {
          if (other == null) {
            return;
          }
          if (other.AtResponseStart != 0D) {
            AtResponseStart = other.AtResponseStart;
          }
          if (other.AtResponseEnd != 0D) {
            AtResponseEnd = other.AtResponseEnd;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                AtResponseStart = input.ReadDouble();
                break;
              }
              case 17: {
                AtResponseEnd = input.ReadDouble();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                AtResponseStart = input.ReadDouble();
                break;
              }
              case 17: {
                AtResponseEnd = input.ReadDouble();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Response from calling `ReadRows` may include row data, progress and
  /// throttling information.
  /// </summary>
  public sealed partial class ReadRowsResponse : pb::IMessage<ReadRowsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadRowsResponse> _parser = new pb::MessageParser<ReadRowsResponse>(() => new ReadRowsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadRowsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsResponse(ReadRowsResponse other) : this() {
      rowCount_ = other.rowCount_;
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      throttleState_ = other.throttleState_ != null ? other.throttleState_.Clone() : null;
      switch (other.RowsCase) {
        case RowsOneofCase.AvroRows:
          AvroRows = other.AvroRows.Clone();
          break;
        case RowsOneofCase.ArrowRecordBatch:
          ArrowRecordBatch = other.ArrowRecordBatch.Clone();
          break;
      }

      switch (other.SchemaCase) {
        case SchemaOneofCase.AvroSchema:
          AvroSchema = other.AvroSchema.Clone();
          break;
        case SchemaOneofCase.ArrowSchema:
          ArrowSchema = other.ArrowSchema.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsResponse Clone() {
      return new ReadRowsResponse(this);
    }

    /// <summary>Field number for the "avro_rows" field.</summary>
    public const int AvroRowsFieldNumber = 3;
    /// <summary>
    /// Serialized row data in AVRO format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroRows AvroRows {
      get { return rowsCase_ == RowsOneofCase.AvroRows ? (global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroRows) rows_ : null; }
      set {
        rows_ = value;
        rowsCase_ = value == null ? RowsOneofCase.None : RowsOneofCase.AvroRows;
      }
    }

    /// <summary>Field number for the "arrow_record_batch" field.</summary>
    public const int ArrowRecordBatchFieldNumber = 4;
    /// <summary>
    /// Serialized row data in Arrow RecordBatch format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowRecordBatch ArrowRecordBatch {
      get { return rowsCase_ == RowsOneofCase.ArrowRecordBatch ? (global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowRecordBatch) rows_ : null; }
      set {
        rows_ = value;
        rowsCase_ = value == null ? RowsOneofCase.None : RowsOneofCase.ArrowRecordBatch;
      }
    }

    /// <summary>Field number for the "row_count" field.</summary>
    public const int RowCountFieldNumber = 6;
    private long rowCount_;
    /// <summary>
    /// Number of serialized rows in the rows block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RowCount {
      get { return rowCount_; }
      set {
        rowCount_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 2;
    private global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats stats_;
    /// <summary>
    /// Statistics for the stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    /// <summary>Field number for the "throttle_state" field.</summary>
    public const int ThrottleStateFieldNumber = 5;
    private global::Google.Cloud.Bigquery.Storage.V1Beta2.ThrottleState throttleState_;
    /// <summary>
    /// Throttling state. If unset, the latest response still describes
    /// the current throttling status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.ThrottleState ThrottleState {
      get { return throttleState_; }
      set {
        throttleState_ = value;
      }
    }

    /// <summary>Field number for the "avro_schema" field.</summary>
    public const int AvroSchemaFieldNumber = 7;
    /// <summary>
    /// Output only. Avro schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroSchema AvroSchema {
      get { return schemaCase_ == SchemaOneofCase.AvroSchema ? (global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroSchema) schema_ : null; }
      set {
        schema_ = value;
        schemaCase_ = value == null ? SchemaOneofCase.None : SchemaOneofCase.AvroSchema;
      }
    }

    /// <summary>Field number for the "arrow_schema" field.</summary>
    public const int ArrowSchemaFieldNumber = 8;
    /// <summary>
    /// Output only. Arrow schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowSchema ArrowSchema {
      get { return schemaCase_ == SchemaOneofCase.ArrowSchema ? (global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowSchema) schema_ : null; }
      set {
        schema_ = value;
        schemaCase_ = value == null ? SchemaOneofCase.None : SchemaOneofCase.ArrowSchema;
      }
    }

    private object rows_;
    /// <summary>Enum of possible cases for the "rows" oneof.</summary>
    public enum RowsOneofCase {
      None = 0,
      AvroRows = 3,
      ArrowRecordBatch = 4,
    }
    private RowsOneofCase rowsCase_ = RowsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowsOneofCase RowsCase {
      get { return rowsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRows() {
      rowsCase_ = RowsOneofCase.None;
      rows_ = null;
    }

    private object schema_;
    /// <summary>Enum of possible cases for the "schema" oneof.</summary>
    public enum SchemaOneofCase {
      None = 0,
      AvroSchema = 7,
      ArrowSchema = 8,
    }
    private SchemaOneofCase schemaCase_ = SchemaOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchemaOneofCase SchemaCase {
      get { return schemaCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSchema() {
      schemaCase_ = SchemaOneofCase.None;
      schema_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadRowsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadRowsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AvroRows, other.AvroRows)) return false;
      if (!object.Equals(ArrowRecordBatch, other.ArrowRecordBatch)) return false;
      if (RowCount != other.RowCount) return false;
      if (!object.Equals(Stats, other.Stats)) return false;
      if (!object.Equals(ThrottleState, other.ThrottleState)) return false;
      if (!object.Equals(AvroSchema, other.AvroSchema)) return false;
      if (!object.Equals(ArrowSchema, other.ArrowSchema)) return false;
      if (RowsCase != other.RowsCase) return false;
      if (SchemaCase != other.SchemaCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rowsCase_ == RowsOneofCase.AvroRows) hash ^= AvroRows.GetHashCode();
      if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) hash ^= ArrowRecordBatch.GetHashCode();
      if (RowCount != 0L) hash ^= RowCount.GetHashCode();
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (throttleState_ != null) hash ^= ThrottleState.GetHashCode();
      if (schemaCase_ == SchemaOneofCase.AvroSchema) hash ^= AvroSchema.GetHashCode();
      if (schemaCase_ == SchemaOneofCase.ArrowSchema) hash ^= ArrowSchema.GetHashCode();
      hash ^= (int) rowsCase_;
      hash ^= (int) schemaCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stats);
      }
      if (rowsCase_ == RowsOneofCase.AvroRows) {
        output.WriteRawTag(26);
        output.WriteMessage(AvroRows);
      }
      if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
        output.WriteRawTag(34);
        output.WriteMessage(ArrowRecordBatch);
      }
      if (throttleState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ThrottleState);
      }
      if (RowCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(RowCount);
      }
      if (schemaCase_ == SchemaOneofCase.AvroSchema) {
        output.WriteRawTag(58);
        output.WriteMessage(AvroSchema);
      }
      if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
        output.WriteRawTag(66);
        output.WriteMessage(ArrowSchema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stats);
      }
      if (rowsCase_ == RowsOneofCase.AvroRows) {
        output.WriteRawTag(26);
        output.WriteMessage(AvroRows);
      }
      if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
        output.WriteRawTag(34);
        output.WriteMessage(ArrowRecordBatch);
      }
      if (throttleState_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ThrottleState);
      }
      if (RowCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(RowCount);
      }
      if (schemaCase_ == SchemaOneofCase.AvroSchema) {
        output.WriteRawTag(58);
        output.WriteMessage(AvroSchema);
      }
      if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
        output.WriteRawTag(66);
        output.WriteMessage(ArrowSchema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rowsCase_ == RowsOneofCase.AvroRows) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvroRows);
      }
      if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrowRecordBatch);
      }
      if (RowCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowCount);
      }
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (throttleState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThrottleState);
      }
      if (schemaCase_ == SchemaOneofCase.AvroSchema) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvroSchema);
      }
      if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrowSchema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadRowsResponse other) {
      if (other == null) {
        return;
      }
      if (other.RowCount != 0L) {
        RowCount = other.RowCount;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats();
        }
        Stats.MergeFrom(other.Stats);
      }
      if (other.throttleState_ != null) {
        if (throttleState_ == null) {
          ThrottleState = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ThrottleState();
        }
        ThrottleState.MergeFrom(other.ThrottleState);
      }
      switch (other.RowsCase) {
        case RowsOneofCase.AvroRows:
          if (AvroRows == null) {
            AvroRows = new global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroRows();
          }
          AvroRows.MergeFrom(other.AvroRows);
          break;
        case RowsOneofCase.ArrowRecordBatch:
          if (ArrowRecordBatch == null) {
            ArrowRecordBatch = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowRecordBatch();
          }
          ArrowRecordBatch.MergeFrom(other.ArrowRecordBatch);
          break;
      }

      switch (other.SchemaCase) {
        case SchemaOneofCase.AvroSchema:
          if (AvroSchema == null) {
            AvroSchema = new global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroSchema();
          }
          AvroSchema.MergeFrom(other.AvroSchema);
          break;
        case SchemaOneofCase.ArrowSchema:
          if (ArrowSchema == null) {
            ArrowSchema = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowSchema();
          }
          ArrowSchema.MergeFrom(other.ArrowSchema);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (stats_ == null) {
              Stats = new global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 26: {
            global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroRows subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroRows();
            if (rowsCase_ == RowsOneofCase.AvroRows) {
              subBuilder.MergeFrom(AvroRows);
            }
            input.ReadMessage(subBuilder);
            AvroRows = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowRecordBatch subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowRecordBatch();
            if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
              subBuilder.MergeFrom(ArrowRecordBatch);
            }
            input.ReadMessage(subBuilder);
            ArrowRecordBatch = subBuilder;
            break;
          }
          case 42: {
            if (throttleState_ == null) {
              ThrottleState = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ThrottleState();
            }
            input.ReadMessage(ThrottleState);
            break;
          }
          case 48: {
            RowCount = input.ReadInt64();
            break;
          }
          case 58: {
            global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroSchema subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroSchema();
            if (schemaCase_ == SchemaOneofCase.AvroSchema) {
              subBuilder.MergeFrom(AvroSchema);
            }
            input.ReadMessage(subBuilder);
            AvroSchema = subBuilder;
            break;
          }
          case 66: {
            global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowSchema subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowSchema();
            if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
              subBuilder.MergeFrom(ArrowSchema);
            }
            input.ReadMessage(subBuilder);
            ArrowSchema = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (stats_ == null) {
              Stats = new global::Google.Cloud.Bigquery.Storage.V1Beta2.StreamStats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 26: {
            global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroRows subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroRows();
            if (rowsCase_ == RowsOneofCase.AvroRows) {
              subBuilder.MergeFrom(AvroRows);
            }
            input.ReadMessage(subBuilder);
            AvroRows = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowRecordBatch subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowRecordBatch();
            if (rowsCase_ == RowsOneofCase.ArrowRecordBatch) {
              subBuilder.MergeFrom(ArrowRecordBatch);
            }
            input.ReadMessage(subBuilder);
            ArrowRecordBatch = subBuilder;
            break;
          }
          case 42: {
            if (throttleState_ == null) {
              ThrottleState = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ThrottleState();
            }
            input.ReadMessage(ThrottleState);
            break;
          }
          case 48: {
            RowCount = input.ReadInt64();
            break;
          }
          case 58: {
            global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroSchema subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta2.AvroSchema();
            if (schemaCase_ == SchemaOneofCase.AvroSchema) {
              subBuilder.MergeFrom(AvroSchema);
            }
            input.ReadMessage(subBuilder);
            AvroSchema = subBuilder;
            break;
          }
          case 66: {
            global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowSchema subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ArrowSchema();
            if (schemaCase_ == SchemaOneofCase.ArrowSchema) {
              subBuilder.MergeFrom(ArrowSchema);
            }
            input.ReadMessage(subBuilder);
            ArrowSchema = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for `SplitReadStream`.
  /// </summary>
  public sealed partial class SplitReadStreamRequest : pb::IMessage<SplitReadStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SplitReadStreamRequest> _parser = new pb::MessageParser<SplitReadStreamRequest>(() => new SplitReadStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SplitReadStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamRequest(SplitReadStreamRequest other) : this() {
      name_ = other.name_;
      fraction_ = other.fraction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamRequest Clone() {
      return new SplitReadStreamRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Name of the stream to split.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fraction" field.</summary>
    public const int FractionFieldNumber = 2;
    private double fraction_;
    /// <summary>
    /// A value in the range (0.0, 1.0) that specifies the fractional point at
    /// which the original stream should be split. The actual split point is
    /// evaluated on pre-filtered rows, so if a filter is provided, then there is
    /// no guarantee that the division of the rows between the new child streams
    /// will be proportional to this fractional value. Additionally, because the
    /// server-side unit for assigning data is collections of rows, this fraction
    /// will always map to a data storage boundary on the server side.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Fraction {
      get { return fraction_; }
      set {
        fraction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SplitReadStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SplitReadStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Fraction, other.Fraction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Fraction != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Fraction);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Fraction != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Fraction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Fraction != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Fraction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Fraction != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SplitReadStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Fraction != 0D) {
        Fraction = other.Fraction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Fraction = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Fraction = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SplitReadStreamResponse : pb::IMessage<SplitReadStreamResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SplitReadStreamResponse> _parser = new pb::MessageParser<SplitReadStreamResponse>(() => new SplitReadStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SplitReadStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamResponse(SplitReadStreamResponse other) : this() {
      primaryStream_ = other.primaryStream_ != null ? other.primaryStream_.Clone() : null;
      remainderStream_ = other.remainderStream_ != null ? other.remainderStream_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitReadStreamResponse Clone() {
      return new SplitReadStreamResponse(this);
    }

    /// <summary>Field number for the "primary_stream" field.</summary>
    public const int PrimaryStreamFieldNumber = 1;
    private global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadStream primaryStream_;
    /// <summary>
    /// Primary stream, which contains the beginning portion of
    /// |original_stream|. An empty value indicates that the original stream can no
    /// longer be split.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadStream PrimaryStream {
      get { return primaryStream_; }
      set {
        primaryStream_ = value;
      }
    }

    /// <summary>Field number for the "remainder_stream" field.</summary>
    public const int RemainderStreamFieldNumber = 2;
    private global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadStream remainderStream_;
    /// <summary>
    /// Remainder stream, which contains the tail of |original_stream|. An empty
    /// value indicates that the original stream can no longer be split.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadStream RemainderStream {
      get { return remainderStream_; }
      set {
        remainderStream_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SplitReadStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SplitReadStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PrimaryStream, other.PrimaryStream)) return false;
      if (!object.Equals(RemainderStream, other.RemainderStream)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (primaryStream_ != null) hash ^= PrimaryStream.GetHashCode();
      if (remainderStream_ != null) hash ^= RemainderStream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (primaryStream_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrimaryStream);
      }
      if (remainderStream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RemainderStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (primaryStream_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrimaryStream);
      }
      if (remainderStream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RemainderStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (primaryStream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimaryStream);
      }
      if (remainderStream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemainderStream);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SplitReadStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.primaryStream_ != null) {
        if (primaryStream_ == null) {
          PrimaryStream = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadStream();
        }
        PrimaryStream.MergeFrom(other.PrimaryStream);
      }
      if (other.remainderStream_ != null) {
        if (remainderStream_ == null) {
          RemainderStream = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadStream();
        }
        RemainderStream.MergeFrom(other.RemainderStream);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (primaryStream_ == null) {
              PrimaryStream = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadStream();
            }
            input.ReadMessage(PrimaryStream);
            break;
          }
          case 18: {
            if (remainderStream_ == null) {
              RemainderStream = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadStream();
            }
            input.ReadMessage(RemainderStream);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (primaryStream_ == null) {
              PrimaryStream = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadStream();
            }
            input.ReadMessage(PrimaryStream);
            break;
          }
          case 18: {
            if (remainderStream_ == null) {
              RemainderStream = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ReadStream();
            }
            input.ReadMessage(RemainderStream);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for `CreateWriteStream`.
  /// </summary>
  public sealed partial class CreateWriteStreamRequest : pb::IMessage<CreateWriteStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateWriteStreamRequest> _parser = new pb::MessageParser<CreateWriteStreamRequest>(() => new CreateWriteStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateWriteStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWriteStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWriteStreamRequest(CreateWriteStreamRequest other) : this() {
      parent_ = other.parent_;
      writeStream_ = other.writeStream_ != null ? other.writeStream_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWriteStreamRequest Clone() {
      return new CreateWriteStreamRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Reference to the table to which the stream belongs, in the format
    /// of `projects/{project}/datasets/{dataset}/tables/{table}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "write_stream" field.</summary>
    public const int WriteStreamFieldNumber = 2;
    private global::Google.Cloud.Bigquery.Storage.V1Beta2.WriteStream writeStream_;
    /// <summary>
    /// Required. Stream to be created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.WriteStream WriteStream {
      get { return writeStream_; }
      set {
        writeStream_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateWriteStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateWriteStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(WriteStream, other.WriteStream)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (writeStream_ != null) hash ^= WriteStream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (writeStream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WriteStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (writeStream_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WriteStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (writeStream_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WriteStream);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateWriteStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.writeStream_ != null) {
        if (writeStream_ == null) {
          WriteStream = new global::Google.Cloud.Bigquery.Storage.V1Beta2.WriteStream();
        }
        WriteStream.MergeFrom(other.WriteStream);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (writeStream_ == null) {
              WriteStream = new global::Google.Cloud.Bigquery.Storage.V1Beta2.WriteStream();
            }
            input.ReadMessage(WriteStream);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (writeStream_ == null) {
              WriteStream = new global::Google.Cloud.Bigquery.Storage.V1Beta2.WriteStream();
            }
            input.ReadMessage(WriteStream);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for `AppendRows`.
  /// </summary>
  public sealed partial class AppendRowsRequest : pb::IMessage<AppendRowsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppendRowsRequest> _parser = new pb::MessageParser<AppendRowsRequest>(() => new AppendRowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppendRowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendRowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendRowsRequest(AppendRowsRequest other) : this() {
      writeStream_ = other.writeStream_;
      Offset = other.Offset;
      traceId_ = other.traceId_;
      switch (other.RowsCase) {
        case RowsOneofCase.ProtoRows:
          ProtoRows = other.ProtoRows.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendRowsRequest Clone() {
      return new AppendRowsRequest(this);
    }

    /// <summary>Field number for the "write_stream" field.</summary>
    public const int WriteStreamFieldNumber = 1;
    private string writeStream_ = "";
    /// <summary>
    /// Required. The stream that is the target of the append operation. This value must be
    /// specified for the initial request. If subsequent requests specify the
    /// stream name, it must equal to the value provided in the first request.
    /// To write to the _default stream, populate this field with a string in the
    /// format `projects/{project}/datasets/{dataset}/tables/{table}/_default`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WriteStream {
      get { return writeStream_; }
      set {
        writeStream_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_offset_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? offset_;
    /// <summary>
    /// If present, the write is only performed if the next append offset is same
    /// as the provided value. If not present, the write is performed at the
    /// current end of stream. Specifying a value for this field is not allowed
    /// when calling AppendRows for the '_default' stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }


    /// <summary>Field number for the "proto_rows" field.</summary>
    public const int ProtoRowsFieldNumber = 4;
    /// <summary>
    /// Rows in proto format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsRequest.Types.ProtoData ProtoRows {
      get { return rowsCase_ == RowsOneofCase.ProtoRows ? (global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsRequest.Types.ProtoData) rows_ : null; }
      set {
        rows_ = value;
        rowsCase_ = value == null ? RowsOneofCase.None : RowsOneofCase.ProtoRows;
      }
    }

    /// <summary>Field number for the "trace_id" field.</summary>
    public const int TraceIdFieldNumber = 6;
    private string traceId_ = "";
    /// <summary>
    /// Id set by client to annotate its identity. Only initial request setting is
    /// respected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TraceId {
      get { return traceId_; }
      set {
        traceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object rows_;
    /// <summary>Enum of possible cases for the "rows" oneof.</summary>
    public enum RowsOneofCase {
      None = 0,
      ProtoRows = 4,
    }
    private RowsOneofCase rowsCase_ = RowsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowsOneofCase RowsCase {
      get { return rowsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRows() {
      rowsCase_ = RowsOneofCase.None;
      rows_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppendRowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppendRowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WriteStream != other.WriteStream) return false;
      if (Offset != other.Offset) return false;
      if (!object.Equals(ProtoRows, other.ProtoRows)) return false;
      if (TraceId != other.TraceId) return false;
      if (RowsCase != other.RowsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WriteStream.Length != 0) hash ^= WriteStream.GetHashCode();
      if (offset_ != null) hash ^= Offset.GetHashCode();
      if (rowsCase_ == RowsOneofCase.ProtoRows) hash ^= ProtoRows.GetHashCode();
      if (TraceId.Length != 0) hash ^= TraceId.GetHashCode();
      hash ^= (int) rowsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WriteStream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WriteStream);
      }
      if (offset_ != null) {
        _single_offset_codec.WriteTagAndValue(output, Offset);
      }
      if (rowsCase_ == RowsOneofCase.ProtoRows) {
        output.WriteRawTag(34);
        output.WriteMessage(ProtoRows);
      }
      if (TraceId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TraceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WriteStream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WriteStream);
      }
      if (offset_ != null) {
        _single_offset_codec.WriteTagAndValue(ref output, Offset);
      }
      if (rowsCase_ == RowsOneofCase.ProtoRows) {
        output.WriteRawTag(34);
        output.WriteMessage(ProtoRows);
      }
      if (TraceId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TraceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WriteStream.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WriteStream);
      }
      if (offset_ != null) {
        size += _single_offset_codec.CalculateSizeWithTag(Offset);
      }
      if (rowsCase_ == RowsOneofCase.ProtoRows) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProtoRows);
      }
      if (TraceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TraceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppendRowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.WriteStream.Length != 0) {
        WriteStream = other.WriteStream;
      }
      if (other.offset_ != null) {
        if (offset_ == null || other.Offset != 0L) {
          Offset = other.Offset;
        }
      }
      if (other.TraceId.Length != 0) {
        TraceId = other.TraceId;
      }
      switch (other.RowsCase) {
        case RowsOneofCase.ProtoRows:
          if (ProtoRows == null) {
            ProtoRows = new global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsRequest.Types.ProtoData();
          }
          ProtoRows.MergeFrom(other.ProtoRows);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WriteStream = input.ReadString();
            break;
          }
          case 18: {
            long? value = _single_offset_codec.Read(input);
            if (offset_ == null || value != 0L) {
              Offset = value;
            }
            break;
          }
          case 34: {
            global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsRequest.Types.ProtoData subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsRequest.Types.ProtoData();
            if (rowsCase_ == RowsOneofCase.ProtoRows) {
              subBuilder.MergeFrom(ProtoRows);
            }
            input.ReadMessage(subBuilder);
            ProtoRows = subBuilder;
            break;
          }
          case 50: {
            TraceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WriteStream = input.ReadString();
            break;
          }
          case 18: {
            long? value = _single_offset_codec.Read(ref input);
            if (offset_ == null || value != 0L) {
              Offset = value;
            }
            break;
          }
          case 34: {
            global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsRequest.Types.ProtoData subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsRequest.Types.ProtoData();
            if (rowsCase_ == RowsOneofCase.ProtoRows) {
              subBuilder.MergeFrom(ProtoRows);
            }
            input.ReadMessage(subBuilder);
            ProtoRows = subBuilder;
            break;
          }
          case 50: {
            TraceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AppendRowsRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Proto schema and data.
      /// </summary>
      public sealed partial class ProtoData : pb::IMessage<ProtoData>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ProtoData> _parser = new pb::MessageParser<ProtoData>(() => new ProtoData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProtoData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProtoData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProtoData(ProtoData other) : this() {
          writerSchema_ = other.writerSchema_ != null ? other.writerSchema_.Clone() : null;
          rows_ = other.rows_ != null ? other.rows_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProtoData Clone() {
          return new ProtoData(this);
        }

        /// <summary>Field number for the "writer_schema" field.</summary>
        public const int WriterSchemaFieldNumber = 1;
        private global::Google.Cloud.Bigquery.Storage.V1Beta2.ProtoSchema writerSchema_;
        /// <summary>
        /// Proto schema used to serialize the data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Bigquery.Storage.V1Beta2.ProtoSchema WriterSchema {
          get { return writerSchema_; }
          set {
            writerSchema_ = value;
          }
        }

        /// <summary>Field number for the "rows" field.</summary>
        public const int RowsFieldNumber = 2;
        private global::Google.Cloud.Bigquery.Storage.V1Beta2.ProtoRows rows_;
        /// <summary>
        /// Serialized row data in protobuf message format.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Bigquery.Storage.V1Beta2.ProtoRows Rows {
          get { return rows_; }
          set {
            rows_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ProtoData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProtoData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(WriterSchema, other.WriterSchema)) return false;
          if (!object.Equals(Rows, other.Rows)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (writerSchema_ != null) hash ^= WriterSchema.GetHashCode();
          if (rows_ != null) hash ^= Rows.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (writerSchema_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(WriterSchema);
          }
          if (rows_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Rows);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (writerSchema_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(WriterSchema);
          }
          if (rows_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Rows);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (writerSchema_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(WriterSchema);
          }
          if (rows_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rows);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProtoData other) {
          if (other == null) {
            return;
          }
          if (other.writerSchema_ != null) {
            if (writerSchema_ == null) {
              WriterSchema = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ProtoSchema();
            }
            WriterSchema.MergeFrom(other.WriterSchema);
          }
          if (other.rows_ != null) {
            if (rows_ == null) {
              Rows = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ProtoRows();
            }
            Rows.MergeFrom(other.Rows);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (writerSchema_ == null) {
                  WriterSchema = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ProtoSchema();
                }
                input.ReadMessage(WriterSchema);
                break;
              }
              case 18: {
                if (rows_ == null) {
                  Rows = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ProtoRows();
                }
                input.ReadMessage(Rows);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (writerSchema_ == null) {
                  WriterSchema = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ProtoSchema();
                }
                input.ReadMessage(WriterSchema);
                break;
              }
              case 18: {
                if (rows_ == null) {
                  Rows = new global::Google.Cloud.Bigquery.Storage.V1Beta2.ProtoRows();
                }
                input.ReadMessage(Rows);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Response message for `AppendRows`.
  /// </summary>
  public sealed partial class AppendRowsResponse : pb::IMessage<AppendRowsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppendRowsResponse> _parser = new pb::MessageParser<AppendRowsResponse>(() => new AppendRowsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppendRowsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendRowsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendRowsResponse(AppendRowsResponse other) : this() {
      updatedSchema_ = other.updatedSchema_ != null ? other.updatedSchema_.Clone() : null;
      switch (other.ResponseCase) {
        case ResponseOneofCase.AppendResult:
          AppendResult = other.AppendResult.Clone();
          break;
        case ResponseOneofCase.Error:
          Error = other.Error.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendRowsResponse Clone() {
      return new AppendRowsResponse(this);
    }

    /// <summary>Field number for the "append_result" field.</summary>
    public const int AppendResultFieldNumber = 1;
    /// <summary>
    /// Result if the append is successful.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsResponse.Types.AppendResult AppendResult {
      get { return responseCase_ == ResponseOneofCase.AppendResult ? (global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsResponse.Types.AppendResult) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.AppendResult;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    /// <summary>
    /// Error returned when problems were encountered.  If present,
    /// it indicates rows were not accepted into the system.
    /// Users can retry or continue with other append requests within the
    /// same connection.
    ///
    /// Additional information about error signalling:
    ///
    /// ALREADY_EXISTS: Happens when an append specified an offset, and the
    /// backend already has received data at this offset.  Typically encountered
    /// in retry scenarios, and can be ignored.
    ///
    /// OUT_OF_RANGE: Returned when the specified offset in the stream is beyond
    /// the current end of the stream.
    ///
    /// INVALID_ARGUMENT: Indicates a malformed request or data.
    ///
    /// ABORTED: Request processing is aborted because of prior failures.  The
    /// request can be retried if previous failure is addressed.
    ///
    /// INTERNAL: Indicates server side error(s) that can be retried.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Error {
      get { return responseCase_ == ResponseOneofCase.Error ? (global::Google.Rpc.Status) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Error;
      }
    }

    /// <summary>Field number for the "updated_schema" field.</summary>
    public const int UpdatedSchemaFieldNumber = 3;
    private global::Google.Cloud.Bigquery.Storage.V1Beta2.TableSchema updatedSchema_;
    /// <summary>
    /// If backend detects a schema update, pass it to user so that user can
    /// use it to input new type of message. It will be empty when no schema
    /// updates have occurred.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.TableSchema UpdatedSchema {
      get { return updatedSchema_; }
      set {
        updatedSchema_ = value;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      AppendResult = 1,
      Error = 2,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppendRowsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppendRowsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AppendResult, other.AppendResult)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(UpdatedSchema, other.UpdatedSchema)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.AppendResult) hash ^= AppendResult.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Error) hash ^= Error.GetHashCode();
      if (updatedSchema_ != null) hash ^= UpdatedSchema.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseCase_ == ResponseOneofCase.AppendResult) {
        output.WriteRawTag(10);
        output.WriteMessage(AppendResult);
      }
      if (responseCase_ == ResponseOneofCase.Error) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (updatedSchema_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdatedSchema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseCase_ == ResponseOneofCase.AppendResult) {
        output.WriteRawTag(10);
        output.WriteMessage(AppendResult);
      }
      if (responseCase_ == ResponseOneofCase.Error) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (updatedSchema_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdatedSchema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.AppendResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppendResult);
      }
      if (responseCase_ == ResponseOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (updatedSchema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatedSchema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppendRowsResponse other) {
      if (other == null) {
        return;
      }
      if (other.updatedSchema_ != null) {
        if (updatedSchema_ == null) {
          UpdatedSchema = new global::Google.Cloud.Bigquery.Storage.V1Beta2.TableSchema();
        }
        UpdatedSchema.MergeFrom(other.UpdatedSchema);
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.AppendResult:
          if (AppendResult == null) {
            AppendResult = new global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsResponse.Types.AppendResult();
          }
          AppendResult.MergeFrom(other.AppendResult);
          break;
        case ResponseOneofCase.Error:
          if (Error == null) {
            Error = new global::Google.Rpc.Status();
          }
          Error.MergeFrom(other.Error);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsResponse.Types.AppendResult subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsResponse.Types.AppendResult();
            if (responseCase_ == ResponseOneofCase.AppendResult) {
              subBuilder.MergeFrom(AppendResult);
            }
            input.ReadMessage(subBuilder);
            AppendResult = subBuilder;
            break;
          }
          case 18: {
            global::Google.Rpc.Status subBuilder = new global::Google.Rpc.Status();
            if (responseCase_ == ResponseOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
          case 26: {
            if (updatedSchema_ == null) {
              UpdatedSchema = new global::Google.Cloud.Bigquery.Storage.V1Beta2.TableSchema();
            }
            input.ReadMessage(UpdatedSchema);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsResponse.Types.AppendResult subBuilder = new global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsResponse.Types.AppendResult();
            if (responseCase_ == ResponseOneofCase.AppendResult) {
              subBuilder.MergeFrom(AppendResult);
            }
            input.ReadMessage(subBuilder);
            AppendResult = subBuilder;
            break;
          }
          case 18: {
            global::Google.Rpc.Status subBuilder = new global::Google.Rpc.Status();
            if (responseCase_ == ResponseOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
          case 26: {
            if (updatedSchema_ == null) {
              UpdatedSchema = new global::Google.Cloud.Bigquery.Storage.V1Beta2.TableSchema();
            }
            input.ReadMessage(UpdatedSchema);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AppendRowsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// AppendResult is returned for successful append requests.
      /// </summary>
      public sealed partial class AppendResult : pb::IMessage<AppendResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AppendResult> _parser = new pb::MessageParser<AppendResult>(() => new AppendResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AppendResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.AppendRowsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppendResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppendResult(AppendResult other) : this() {
          Offset = other.Offset;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AppendResult Clone() {
          return new AppendResult(this);
        }

        /// <summary>Field number for the "offset" field.</summary>
        public const int OffsetFieldNumber = 1;
        private static readonly pb::FieldCodec<long?> _single_offset_codec = pb::FieldCodec.ForStructWrapper<long>(10);
        private long? offset_;
        /// <summary>
        /// The row offset at which the last append occurred. The offset will not be
        /// set if appending using default streams.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? Offset {
          get { return offset_; }
          set {
            offset_ = value;
          }
        }


        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AppendResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AppendResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Offset != other.Offset) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (offset_ != null) hash ^= Offset.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (offset_ != null) {
            _single_offset_codec.WriteTagAndValue(output, Offset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (offset_ != null) {
            _single_offset_codec.WriteTagAndValue(ref output, Offset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (offset_ != null) {
            size += _single_offset_codec.CalculateSizeWithTag(Offset);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AppendResult other) {
          if (other == null) {
            return;
          }
          if (other.offset_ != null) {
            if (offset_ == null || other.Offset != 0L) {
              Offset = other.Offset;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                long? value = _single_offset_codec.Read(input);
                if (offset_ == null || value != 0L) {
                  Offset = value;
                }
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                long? value = _single_offset_codec.Read(ref input);
                if (offset_ == null || value != 0L) {
                  Offset = value;
                }
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Request message for `GetWriteStreamRequest`.
  /// </summary>
  public sealed partial class GetWriteStreamRequest : pb::IMessage<GetWriteStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetWriteStreamRequest> _parser = new pb::MessageParser<GetWriteStreamRequest>(() => new GetWriteStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWriteStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWriteStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWriteStreamRequest(GetWriteStreamRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWriteStreamRequest Clone() {
      return new GetWriteStreamRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Name of the stream to get, in the form of
    /// `projects/{project}/datasets/{dataset}/tables/{table}/streams/{stream}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWriteStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWriteStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWriteStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for `BatchCommitWriteStreams`.
  /// </summary>
  public sealed partial class BatchCommitWriteStreamsRequest : pb::IMessage<BatchCommitWriteStreamsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchCommitWriteStreamsRequest> _parser = new pb::MessageParser<BatchCommitWriteStreamsRequest>(() => new BatchCommitWriteStreamsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchCommitWriteStreamsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCommitWriteStreamsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCommitWriteStreamsRequest(BatchCommitWriteStreamsRequest other) : this() {
      parent_ = other.parent_;
      writeStreams_ = other.writeStreams_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCommitWriteStreamsRequest Clone() {
      return new BatchCommitWriteStreamsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent table that all the streams should belong to, in the form of
    /// `projects/{project}/datasets/{dataset}/tables/{table}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "write_streams" field.</summary>
    public const int WriteStreamsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_writeStreams_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> writeStreams_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. The group of streams that will be committed atomically.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> WriteStreams {
      get { return writeStreams_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchCommitWriteStreamsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchCommitWriteStreamsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if(!writeStreams_.Equals(other.writeStreams_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      hash ^= writeStreams_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      writeStreams_.WriteTo(output, _repeated_writeStreams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      writeStreams_.WriteTo(ref output, _repeated_writeStreams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      size += writeStreams_.CalculateSize(_repeated_writeStreams_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchCommitWriteStreamsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      writeStreams_.Add(other.writeStreams_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            writeStreams_.AddEntriesFrom(input, _repeated_writeStreams_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            writeStreams_.AddEntriesFrom(ref input, _repeated_writeStreams_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for `BatchCommitWriteStreams`.
  /// </summary>
  public sealed partial class BatchCommitWriteStreamsResponse : pb::IMessage<BatchCommitWriteStreamsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchCommitWriteStreamsResponse> _parser = new pb::MessageParser<BatchCommitWriteStreamsResponse>(() => new BatchCommitWriteStreamsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchCommitWriteStreamsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCommitWriteStreamsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCommitWriteStreamsResponse(BatchCommitWriteStreamsResponse other) : this() {
      commitTime_ = other.commitTime_ != null ? other.commitTime_.Clone() : null;
      streamErrors_ = other.streamErrors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCommitWriteStreamsResponse Clone() {
      return new BatchCommitWriteStreamsResponse(this);
    }

    /// <summary>Field number for the "commit_time" field.</summary>
    public const int CommitTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp commitTime_;
    /// <summary>
    /// The time at which streams were committed in microseconds granularity.
    /// This field will only exist when there are no stream errors.
    /// **Note** if this field is not set, it means the commit was not successful.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CommitTime {
      get { return commitTime_; }
      set {
        commitTime_ = value;
      }
    }

    /// <summary>Field number for the "stream_errors" field.</summary>
    public const int StreamErrorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError> _repeated_streamErrors_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError> streamErrors_ = new pbc::RepeatedField<global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError>();
    /// <summary>
    /// Stream level error if commit failed. Only streams with error will be in
    /// the list.
    /// If empty, there is no error and all streams are committed successfully.
    /// If non empty, certain streams have errors and ZERO stream is committed due
    /// to atomicity guarantee.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError> StreamErrors {
      get { return streamErrors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchCommitWriteStreamsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchCommitWriteStreamsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CommitTime, other.CommitTime)) return false;
      if(!streamErrors_.Equals(other.streamErrors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (commitTime_ != null) hash ^= CommitTime.GetHashCode();
      hash ^= streamErrors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (commitTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CommitTime);
      }
      streamErrors_.WriteTo(output, _repeated_streamErrors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (commitTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CommitTime);
      }
      streamErrors_.WriteTo(ref output, _repeated_streamErrors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (commitTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommitTime);
      }
      size += streamErrors_.CalculateSize(_repeated_streamErrors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchCommitWriteStreamsResponse other) {
      if (other == null) {
        return;
      }
      if (other.commitTime_ != null) {
        if (commitTime_ == null) {
          CommitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CommitTime.MergeFrom(other.CommitTime);
      }
      streamErrors_.Add(other.streamErrors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (commitTime_ == null) {
              CommitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CommitTime);
            break;
          }
          case 18: {
            streamErrors_.AddEntriesFrom(input, _repeated_streamErrors_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (commitTime_ == null) {
              CommitTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CommitTime);
            break;
          }
          case 18: {
            streamErrors_.AddEntriesFrom(ref input, _repeated_streamErrors_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for invoking `FinalizeWriteStream`.
  /// </summary>
  public sealed partial class FinalizeWriteStreamRequest : pb::IMessage<FinalizeWriteStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FinalizeWriteStreamRequest> _parser = new pb::MessageParser<FinalizeWriteStreamRequest>(() => new FinalizeWriteStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FinalizeWriteStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalizeWriteStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalizeWriteStreamRequest(FinalizeWriteStreamRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalizeWriteStreamRequest Clone() {
      return new FinalizeWriteStreamRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Name of the stream to finalize, in the form of
    /// `projects/{project}/datasets/{dataset}/tables/{table}/streams/{stream}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FinalizeWriteStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FinalizeWriteStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FinalizeWriteStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for `FinalizeWriteStream`.
  /// </summary>
  public sealed partial class FinalizeWriteStreamResponse : pb::IMessage<FinalizeWriteStreamResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FinalizeWriteStreamResponse> _parser = new pb::MessageParser<FinalizeWriteStreamResponse>(() => new FinalizeWriteStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FinalizeWriteStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalizeWriteStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalizeWriteStreamResponse(FinalizeWriteStreamResponse other) : this() {
      rowCount_ = other.rowCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalizeWriteStreamResponse Clone() {
      return new FinalizeWriteStreamResponse(this);
    }

    /// <summary>Field number for the "row_count" field.</summary>
    public const int RowCountFieldNumber = 1;
    private long rowCount_;
    /// <summary>
    /// Number of rows in the finalized stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RowCount {
      get { return rowCount_; }
      set {
        rowCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FinalizeWriteStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FinalizeWriteStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowCount != other.RowCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowCount != 0L) hash ^= RowCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RowCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RowCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RowCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RowCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FinalizeWriteStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.RowCount != 0L) {
        RowCount = other.RowCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RowCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for `FlushRows`.
  /// </summary>
  public sealed partial class FlushRowsRequest : pb::IMessage<FlushRowsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FlushRowsRequest> _parser = new pb::MessageParser<FlushRowsRequest>(() => new FlushRowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlushRowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlushRowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlushRowsRequest(FlushRowsRequest other) : this() {
      writeStream_ = other.writeStream_;
      Offset = other.Offset;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlushRowsRequest Clone() {
      return new FlushRowsRequest(this);
    }

    /// <summary>Field number for the "write_stream" field.</summary>
    public const int WriteStreamFieldNumber = 1;
    private string writeStream_ = "";
    /// <summary>
    /// Required. The stream that is the target of the flush operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WriteStream {
      get { return writeStream_; }
      set {
        writeStream_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_offset_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? offset_;
    /// <summary>
    /// Ending offset of the flush operation. Rows before this offset(including
    /// this offset) will be flushed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlushRowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlushRowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WriteStream != other.WriteStream) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WriteStream.Length != 0) hash ^= WriteStream.GetHashCode();
      if (offset_ != null) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WriteStream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WriteStream);
      }
      if (offset_ != null) {
        _single_offset_codec.WriteTagAndValue(output, Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WriteStream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WriteStream);
      }
      if (offset_ != null) {
        _single_offset_codec.WriteTagAndValue(ref output, Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WriteStream.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WriteStream);
      }
      if (offset_ != null) {
        size += _single_offset_codec.CalculateSizeWithTag(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlushRowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.WriteStream.Length != 0) {
        WriteStream = other.WriteStream;
      }
      if (other.offset_ != null) {
        if (offset_ == null || other.Offset != 0L) {
          Offset = other.Offset;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WriteStream = input.ReadString();
            break;
          }
          case 18: {
            long? value = _single_offset_codec.Read(input);
            if (offset_ == null || value != 0L) {
              Offset = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WriteStream = input.ReadString();
            break;
          }
          case 18: {
            long? value = _single_offset_codec.Read(ref input);
            if (offset_ == null || value != 0L) {
              Offset = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Respond message for `FlushRows`.
  /// </summary>
  public sealed partial class FlushRowsResponse : pb::IMessage<FlushRowsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FlushRowsResponse> _parser = new pb::MessageParser<FlushRowsResponse>(() => new FlushRowsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlushRowsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlushRowsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlushRowsResponse(FlushRowsResponse other) : this() {
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlushRowsResponse Clone() {
      return new FlushRowsResponse(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private long offset_;
    /// <summary>
    /// The rows before this offset (including this offset) are flushed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlushRowsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlushRowsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Offset != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Offset != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlushRowsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Offset = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Structured custom BigQuery Storage error message. The error can be attached
  /// as error details in the returned rpc Status. In particular, the use of error
  /// codes allows more structured error handling, and reduces the need to evaluate
  /// unstructured error text strings.
  /// </summary>
  public sealed partial class StorageError : pb::IMessage<StorageError>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StorageError> _parser = new pb::MessageParser<StorageError>(() => new StorageError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageError(StorageError other) : this() {
      code_ = other.code_;
      entity_ = other.entity_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageError Clone() {
      return new StorageError(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Types.StorageErrorCode code_ = global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Types.StorageErrorCode.Unspecified;
    /// <summary>
    /// BigQuery Storage specific error code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Types.StorageErrorCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 2;
    private string entity_ = "";
    /// <summary>
    /// Name of the failed entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Entity {
      get { return entity_; }
      set {
        entity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 3;
    private string errorMessage_ = "";
    /// <summary>
    /// Message that describes the error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Entity != other.Entity) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Types.StorageErrorCode.Unspecified) hash ^= Code.GetHashCode();
      if (Entity.Length != 0) hash ^= Entity.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Types.StorageErrorCode.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Entity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Entity);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Types.StorageErrorCode.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Entity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Entity);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Types.StorageErrorCode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Entity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Entity);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageError other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Types.StorageErrorCode.Unspecified) {
        Code = other.Code;
      }
      if (other.Entity.Length != 0) {
        Entity = other.Entity;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Types.StorageErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            Entity = input.ReadString();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Google.Cloud.Bigquery.Storage.V1Beta2.StorageError.Types.StorageErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            Entity = input.ReadString();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StorageError message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Error code for `StorageError`.
      /// </summary>
      public enum StorageErrorCode {
        /// <summary>
        /// Default error.
        /// </summary>
        [pbr::OriginalName("STORAGE_ERROR_CODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Table is not found in the system.
        /// </summary>
        [pbr::OriginalName("TABLE_NOT_FOUND")] TableNotFound = 1,
        /// <summary>
        /// Stream is already committed.
        /// </summary>
        [pbr::OriginalName("STREAM_ALREADY_COMMITTED")] StreamAlreadyCommitted = 2,
        /// <summary>
        /// Stream is not found.
        /// </summary>
        [pbr::OriginalName("STREAM_NOT_FOUND")] StreamNotFound = 3,
        /// <summary>
        /// Invalid Stream type.
        /// For example, you try to commit a stream that is not pending.
        /// </summary>
        [pbr::OriginalName("INVALID_STREAM_TYPE")] InvalidStreamType = 4,
        /// <summary>
        /// Invalid Stream state.
        /// For example, you try to commit a stream that is not finalized or is
        /// garbaged.
        /// </summary>
        [pbr::OriginalName("INVALID_STREAM_STATE")] InvalidStreamState = 5,
        /// <summary>
        /// Stream is finalized.
        /// </summary>
        [pbr::OriginalName("STREAM_FINALIZED")] StreamFinalized = 6,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
