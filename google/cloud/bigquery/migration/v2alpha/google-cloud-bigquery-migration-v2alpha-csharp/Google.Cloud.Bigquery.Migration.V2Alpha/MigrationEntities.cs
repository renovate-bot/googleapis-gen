// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/bigquery/migration/v2alpha/migration_entities.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Bigquery.Migration.V2Alpha {

  /// <summary>Holder for reflection information generated from google/cloud/bigquery/migration/v2alpha/migration_entities.proto</summary>
  public static partial class MigrationEntitiesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/bigquery/migration/v2alpha/migration_entities.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MigrationEntitiesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkBnb29nbGUvY2xvdWQvYmlncXVlcnkvbWlncmF0aW9uL3YyYWxwaGEvbWln",
            "cmF0aW9uX2VudGl0aWVzLnByb3RvEidnb29nbGUuY2xvdWQuYmlncXVlcnku",
            "bWlncmF0aW9uLnYyYWxwaGEaH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3Iu",
            "cHJvdG8aGWdvb2dsZS9hcGkvcmVzb3VyY2UucHJvdG8aRWdvb2dsZS9jbG91",
            "ZC9iaWdxdWVyeS9taWdyYXRpb24vdjJhbHBoYS9taWdyYXRpb25fZXJyb3Jf",
            "ZGV0YWlscy5wcm90bxo/Z29vZ2xlL2Nsb3VkL2JpZ3F1ZXJ5L21pZ3JhdGlv",
            "bi92MmFscGhhL21pZ3JhdGlvbl9tZXRyaWNzLnByb3RvGhlnb29nbGUvcHJv",
            "dG9idWYvYW55LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnBy",
            "b3RvGh5nb29nbGUvcnBjL2Vycm9yX2RldGFpbHMucHJvdG8iggUKEU1pZ3Jh",
            "dGlvbldvcmtmbG93EhQKBG5hbWUYASABKAlCBuBBA+BBBRIUCgxkaXNwbGF5",
            "X25hbWUYBiABKAkSVAoFdGFza3MYAiADKAsyRS5nb29nbGUuY2xvdWQuYmln",
            "cXVlcnkubWlncmF0aW9uLnYyYWxwaGEuTWlncmF0aW9uV29ya2Zsb3cuVGFz",
            "a3NFbnRyeRJUCgVzdGF0ZRgDIAEoDjJALmdvb2dsZS5jbG91ZC5iaWdxdWVy",
            "eS5taWdyYXRpb24udjJhbHBoYS5NaWdyYXRpb25Xb3JrZmxvdy5TdGF0ZUID",
            "4EEDEi8KC2NyZWF0ZV90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBI0ChBsYXN0X3VwZGF0ZV90aW1lGAUgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcBpkCgpUYXNrc0VudHJ5EgsKA2tleRgBIAEoCRJF",
            "CgV2YWx1ZRgCIAEoCzI2Lmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5taWdyYXRp",
            "b24udjJhbHBoYS5NaWdyYXRpb25UYXNrOgI4ASJRCgVTdGF0ZRIVChFTVEFU",
            "RV9VTlNQRUNJRklFRBAAEgkKBURSQUZUEAESCwoHUlVOTklORxACEgoKBlBB",
            "VVNFRBADEg0KCUNPTVBMRVRFRBAEOnXqQXIKMmJpZ3F1ZXJ5bWlncmF0aW9u",
            "Lmdvb2dsZWFwaXMuY29tL01pZ3JhdGlvbldvcmtmbG93Ejxwcm9qZWN0cy97",
            "cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vd29ya2Zsb3dzL3t3b3Jr",
            "Zmxvd30iuwMKDU1pZ3JhdGlvblRhc2sSEgoCaWQYASABKAlCBuBBA+BBBRIM",
            "CgR0eXBlGAIgASgJEiUKB2RldGFpbHMYAyABKAsyFC5nb29nbGUucHJvdG9i",
            "dWYuQW55ElAKBXN0YXRlGAQgASgOMjwuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5",
            "Lm1pZ3JhdGlvbi52MmFscGhhLk1pZ3JhdGlvblRhc2suU3RhdGVCA+BBAxI0",
            "ChBwcm9jZXNzaW5nX2Vycm9yGAUgASgLMhUuZ29vZ2xlLnJwYy5FcnJvcklu",
            "Zm9CA+BBAxIvCgtjcmVhdGVfdGltZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASNAoQbGFzdF91cGRhdGVfdGltZRgHIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXAicgoFU3RhdGUSFQoRU1RBVEVfVU5TUEVD",
            "SUZJRUQQABILCgdQRU5ESU5HEAESEQoNT1JDSEVTVFJBVElORxACEgsKB1JV",
            "Tk5JTkcQAxIKCgZQQVVTRUQQBBINCglTVUNDRUVERUQQBRIKCgZGQUlMRUQQ",
            "BiLfBQoQTWlncmF0aW9uU3VidGFzaxIUCgRuYW1lGAEgASgJQgbgQQPgQQUS",
            "DwoHdGFza19pZBgCIAEoCRIMCgR0eXBlGAMgASgJElMKBXN0YXRlGAUgASgO",
            "Mj8uZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5Lm1pZ3JhdGlvbi52MmFscGhhLk1p",
            "Z3JhdGlvblN1YnRhc2suU3RhdGVCA+BBAxI0ChBwcm9jZXNzaW5nX2Vycm9y",
            "GAYgASgLMhUuZ29vZ2xlLnJwYy5FcnJvckluZm9CA+BBAxJhChZyZXNvdXJj",
            "ZV9lcnJvcl9kZXRhaWxzGAwgAygLMjwuZ29vZ2xlLmNsb3VkLmJpZ3F1ZXJ5",
            "Lm1pZ3JhdGlvbi52MmFscGhhLlJlc291cmNlRXJyb3JEZXRhaWxCA+BBAxIc",
            "ChRyZXNvdXJjZV9lcnJvcl9jb3VudBgNIAEoBRIvCgtjcmVhdGVfdGltZRgH",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNAoQbGFzdF91cGRh",
            "dGVfdGltZRgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASRAoH",
            "bWV0cmljcxgLIAMoCzIzLmdvb2dsZS5jbG91ZC5iaWdxdWVyeS5taWdyYXRp",
            "b24udjJhbHBoYS5UaW1lU2VyaWVzIlIKBVN0YXRlEhUKEVNUQVRFX1VOU1BF",
            "Q0lGSUVEEAASCgoGQUNUSVZFEAESCwoHUlVOTklORxACEg0KCVNVQ0NFRURF",
            "RBADEgoKBkZBSUxFRBAEOogB6kGEAQoxYmlncXVlcnltaWdyYXRpb24uZ29v",
            "Z2xlYXBpcy5jb20vTWlncmF0aW9uU3VidGFzaxJPcHJvamVjdHMve3Byb2pl",
            "Y3R9L2xvY2F0aW9ucy97bG9jYXRpb259L3dvcmtmbG93cy97d29ya2Zsb3d9",
            "L3N1YnRhc2tzL3tzdWJ0YXNrfUKZAQorY29tLmdvb2dsZS5jbG91ZC5iaWdx",
            "dWVyeS5taWdyYXRpb24udjJhbHBoYUIWTWlncmF0aW9uRW50aXRpZXNQcm90",
            "b1ABWlBnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Ns",
            "b3VkL2JpZ3F1ZXJ5L21pZ3JhdGlvbi92MmFscGhhO21pZ3JhdGlvbmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationErrorDetailsReflection.Descriptor, global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationMetricsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.ErrorDetailsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow), global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow.Parser, new[]{ "Name", "DisplayName", "Tasks", "State", "CreateTime", "LastUpdateTime" }, null, new[]{ typeof(global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask), global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Parser, new[]{ "Id", "Type", "Details", "State", "ProcessingError", "CreateTime", "LastUpdateTime" }, null, new[]{ typeof(global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask), global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask.Parser, new[]{ "Name", "TaskId", "Type", "State", "ProcessingError", "ResourceErrorDetails", "ResourceErrorCount", "CreateTime", "LastUpdateTime", "Metrics" }, null, new[]{ typeof(global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask.Types.State) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A migration workflow which specifies what needs to be done for an EDW
  /// migration.
  /// </summary>
  public sealed partial class MigrationWorkflow : pb::IMessage<MigrationWorkflow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MigrationWorkflow> _parser = new pb::MessageParser<MigrationWorkflow>(() => new MigrationWorkflow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MigrationWorkflow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationEntitiesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationWorkflow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationWorkflow(MigrationWorkflow other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      tasks_ = other.tasks_.Clone();
      state_ = other.state_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      lastUpdateTime_ = other.lastUpdateTime_ != null ? other.lastUpdateTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationWorkflow Clone() {
      return new MigrationWorkflow(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Immutable. The unique identifier for the migration workflow. The ID is
    /// server-generated.
    ///
    /// Example: `projects/123/locations/us/workflows/345`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 6;
    private string displayName_ = "";
    /// <summary>
    /// The display name of the workflow. This can be set to give a workflow
    /// a descriptive name. There is no guarantee or enforcement of uniqueness.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tasks" field.</summary>
    public const int TasksFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask>.Codec _map_tasks_codec
        = new pbc::MapField<string, global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Parser), 18);
    private readonly pbc::MapField<string, global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask> tasks_ = new pbc::MapField<string, global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask>();
    /// <summary>
    /// The tasks in a workflow in a named map. The name (i.e. key) has no
    /// meaning and is merely a convenient way to address a specific task
    /// in a workflow.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask> Tasks {
      get { return tasks_; }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow.Types.State state_ = global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow.Types.State.Unspecified;
    /// <summary>
    /// Output only. That status of the workflow.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Time when the workflow was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "last_update_time" field.</summary>
    public const int LastUpdateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdateTime_;
    /// <summary>
    /// Time when the workflow was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdateTime {
      get { return lastUpdateTime_; }
      set {
        lastUpdateTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MigrationWorkflow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MigrationWorkflow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!Tasks.Equals(other.Tasks)) return false;
      if (State != other.State) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(LastUpdateTime, other.LastUpdateTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      hash ^= Tasks.GetHashCode();
      if (State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (lastUpdateTime_ != null) hash ^= LastUpdateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      tasks_.WriteTo(output, _map_tasks_codec);
      if (State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (lastUpdateTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LastUpdateTime);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      tasks_.WriteTo(ref output, _map_tasks_codec);
      if (State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (lastUpdateTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LastUpdateTime);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      size += tasks_.CalculateSize(_map_tasks_codec);
      if (State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (lastUpdateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MigrationWorkflow other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      tasks_.Add(other.tasks_);
      if (other.State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.lastUpdateTime_ != null) {
        if (lastUpdateTime_ == null) {
          LastUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastUpdateTime.MergeFrom(other.LastUpdateTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            tasks_.AddEntriesFrom(input, _map_tasks_codec);
            break;
          }
          case 24: {
            State = (global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow.Types.State) input.ReadEnum();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (lastUpdateTime_ == null) {
              LastUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastUpdateTime);
            break;
          }
          case 50: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            tasks_.AddEntriesFrom(ref input, _map_tasks_codec);
            break;
          }
          case 24: {
            State = (global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationWorkflow.Types.State) input.ReadEnum();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (lastUpdateTime_ == null) {
              LastUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastUpdateTime);
            break;
          }
          case 50: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MigrationWorkflow message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible migration workflow states.
      /// </summary>
      public enum State {
        /// <summary>
        /// Workflow state is unspecified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Workflow is in draft status, i.e. tasks are not yet eligible for
        /// execution.
        /// </summary>
        [pbr::OriginalName("DRAFT")] Draft = 1,
        /// <summary>
        /// Workflow is running (i.e. tasks are eligible for execution).
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// Workflow is paused. Tasks currently in progress may continue, but no
        /// further tasks will be scheduled.
        /// </summary>
        [pbr::OriginalName("PAUSED")] Paused = 3,
        /// <summary>
        /// Workflow is complete. There should not be any task in a non-terminal
        /// state, but if they are (e.g. forced termination), they will not be
        /// scheduled.
        /// </summary>
        [pbr::OriginalName("COMPLETED")] Completed = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// A single task for a migration which has details about the configuration of
  /// the task.
  /// </summary>
  public sealed partial class MigrationTask : pb::IMessage<MigrationTask>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MigrationTask> _parser = new pb::MessageParser<MigrationTask>(() => new MigrationTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MigrationTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationEntitiesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationTask(MigrationTask other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      details_ = other.details_ != null ? other.details_.Clone() : null;
      state_ = other.state_;
      processingError_ = other.processingError_ != null ? other.processingError_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      lastUpdateTime_ = other.lastUpdateTime_ != null ? other.lastUpdateTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationTask Clone() {
      return new MigrationTask(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Output only. Immutable. The unique identifier for the migration task. The ID is server-generated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    /// <summary>
    /// The type of the task. This must be a supported task type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Any details_;
    /// <summary>
    /// The details of the task. The type URL must be one of the supported task
    /// details messages and correspond to the Task's type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Types.State state_ = global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current state of the task.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "processing_error" field.</summary>
    public const int ProcessingErrorFieldNumber = 5;
    private global::Google.Rpc.ErrorInfo processingError_;
    /// <summary>
    /// Output only. An explanation that may be populated when the task is in FAILED state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.ErrorInfo ProcessingError {
      get { return processingError_; }
      set {
        processingError_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Time when the task was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "last_update_time" field.</summary>
    public const int LastUpdateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdateTime_;
    /// <summary>
    /// Time when the task was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdateTime {
      get { return lastUpdateTime_; }
      set {
        lastUpdateTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MigrationTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MigrationTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(Details, other.Details)) return false;
      if (State != other.State) return false;
      if (!object.Equals(ProcessingError, other.ProcessingError)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(LastUpdateTime, other.LastUpdateTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (details_ != null) hash ^= Details.GetHashCode();
      if (State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (processingError_ != null) hash ^= ProcessingError.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (lastUpdateTime_ != null) hash ^= LastUpdateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (details_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Details);
      }
      if (State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Types.State.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (processingError_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProcessingError);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (lastUpdateTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastUpdateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (details_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Details);
      }
      if (State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Types.State.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (processingError_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProcessingError);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (lastUpdateTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastUpdateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (processingError_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessingError);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (lastUpdateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MigrationTask other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.details_ != null) {
        if (details_ == null) {
          Details = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Details.MergeFrom(other.Details);
      }
      if (other.State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.processingError_ != null) {
        if (processingError_ == null) {
          ProcessingError = new global::Google.Rpc.ErrorInfo();
        }
        ProcessingError.MergeFrom(other.ProcessingError);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.lastUpdateTime_ != null) {
        if (lastUpdateTime_ == null) {
          LastUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastUpdateTime.MergeFrom(other.LastUpdateTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            if (details_ == null) {
              Details = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Details);
            break;
          }
          case 32: {
            State = (global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Types.State) input.ReadEnum();
            break;
          }
          case 42: {
            if (processingError_ == null) {
              ProcessingError = new global::Google.Rpc.ErrorInfo();
            }
            input.ReadMessage(ProcessingError);
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (lastUpdateTime_ == null) {
              LastUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastUpdateTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            if (details_ == null) {
              Details = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Details);
            break;
          }
          case 32: {
            State = (global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationTask.Types.State) input.ReadEnum();
            break;
          }
          case 42: {
            if (processingError_ == null) {
              ProcessingError = new global::Google.Rpc.ErrorInfo();
            }
            input.ReadMessage(ProcessingError);
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (lastUpdateTime_ == null) {
              LastUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastUpdateTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MigrationTask message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible states of a migration task.
      /// </summary>
      public enum State {
        /// <summary>
        /// The state is unspecified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The task is waiting for orchestration.
        /// </summary>
        [pbr::OriginalName("PENDING")] Pending = 1,
        /// <summary>
        /// The task is assigned to an orchestrator.
        /// </summary>
        [pbr::OriginalName("ORCHESTRATING")] Orchestrating = 2,
        /// <summary>
        /// The task is running, i.e. its subtasks are ready for execution.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 3,
        /// <summary>
        /// Tha task is paused. Assigned subtasks can continue, but no new subtasks
        /// will be scheduled.
        /// </summary>
        [pbr::OriginalName("PAUSED")] Paused = 4,
        /// <summary>
        /// The task finished successfully.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 5,
        /// <summary>
        /// The task finished unsuccessfully.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// A subtask for a migration which carries details about the configuration of
  /// the subtask. The content of the details should not matter to the end user,
  /// but is a contract between the subtask creator and subtask worker.
  /// </summary>
  public sealed partial class MigrationSubtask : pb::IMessage<MigrationSubtask>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MigrationSubtask> _parser = new pb::MessageParser<MigrationSubtask>(() => new MigrationSubtask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MigrationSubtask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationEntitiesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationSubtask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationSubtask(MigrationSubtask other) : this() {
      name_ = other.name_;
      taskId_ = other.taskId_;
      type_ = other.type_;
      state_ = other.state_;
      processingError_ = other.processingError_ != null ? other.processingError_.Clone() : null;
      resourceErrorDetails_ = other.resourceErrorDetails_.Clone();
      resourceErrorCount_ = other.resourceErrorCount_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      lastUpdateTime_ = other.lastUpdateTime_ != null ? other.lastUpdateTime_.Clone() : null;
      metrics_ = other.metrics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MigrationSubtask Clone() {
      return new MigrationSubtask(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Immutable. The resource name for the migration subtask. The ID is
    /// server-generated.
    ///
    /// Example: `projects/123/locations/us/workflows/345/subtasks/678`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private string taskId_ = "";
    /// <summary>
    /// The unique ID of the task to which this subtask belongs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private string type_ = "";
    /// <summary>
    /// The type of the Subtask. The migration service does not check whether this
    /// is a known type. It is up to the task creator (i.e. orchestrator or worker)
    /// to ensure it only creates subtasks for which there are compatible workers
    /// polling for Subtasks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask.Types.State state_ = global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current state of the subtask.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "processing_error" field.</summary>
    public const int ProcessingErrorFieldNumber = 6;
    private global::Google.Rpc.ErrorInfo processingError_;
    /// <summary>
    /// Output only. An explanation that may be populated when the task is in FAILED state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.ErrorInfo ProcessingError {
      get { return processingError_; }
      set {
        processingError_ = value;
      }
    }

    /// <summary>Field number for the "resource_error_details" field.</summary>
    public const int ResourceErrorDetailsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigquery.Migration.V2Alpha.ResourceErrorDetail> _repeated_resourceErrorDetails_codec
        = pb::FieldCodec.ForMessage(98, global::Google.Cloud.Bigquery.Migration.V2Alpha.ResourceErrorDetail.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigquery.Migration.V2Alpha.ResourceErrorDetail> resourceErrorDetails_ = new pbc::RepeatedField<global::Google.Cloud.Bigquery.Migration.V2Alpha.ResourceErrorDetail>();
    /// <summary>
    /// Output only. Provides details to errors and issues encountered while processing the
    /// subtask. Presence of error details does not mean that the subtask failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigquery.Migration.V2Alpha.ResourceErrorDetail> ResourceErrorDetails {
      get { return resourceErrorDetails_; }
    }

    /// <summary>Field number for the "resource_error_count" field.</summary>
    public const int ResourceErrorCountFieldNumber = 13;
    private int resourceErrorCount_;
    /// <summary>
    /// The number or resources with errors. Note: This is not the total
    /// number of errors as each resource can have more than one error.
    /// This is used to indicate truncation by having a `resource_error_count`
    /// that is higher than the size of `resource_error_details`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResourceErrorCount {
      get { return resourceErrorCount_; }
      set {
        resourceErrorCount_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Time when the subtask was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "last_update_time" field.</summary>
    public const int LastUpdateTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdateTime_;
    /// <summary>
    /// Time when the subtask was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdateTime {
      get { return lastUpdateTime_; }
      set {
        lastUpdateTime_ = value;
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigquery.Migration.V2Alpha.TimeSeries> _repeated_metrics_codec
        = pb::FieldCodec.ForMessage(90, global::Google.Cloud.Bigquery.Migration.V2Alpha.TimeSeries.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigquery.Migration.V2Alpha.TimeSeries> metrics_ = new pbc::RepeatedField<global::Google.Cloud.Bigquery.Migration.V2Alpha.TimeSeries>();
    /// <summary>
    /// The metrics for the subtask.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigquery.Migration.V2Alpha.TimeSeries> Metrics {
      get { return metrics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MigrationSubtask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MigrationSubtask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (TaskId != other.TaskId) return false;
      if (Type != other.Type) return false;
      if (State != other.State) return false;
      if (!object.Equals(ProcessingError, other.ProcessingError)) return false;
      if(!resourceErrorDetails_.Equals(other.resourceErrorDetails_)) return false;
      if (ResourceErrorCount != other.ResourceErrorCount) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(LastUpdateTime, other.LastUpdateTime)) return false;
      if(!metrics_.Equals(other.metrics_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (processingError_ != null) hash ^= ProcessingError.GetHashCode();
      hash ^= resourceErrorDetails_.GetHashCode();
      if (ResourceErrorCount != 0) hash ^= ResourceErrorCount.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (lastUpdateTime_ != null) hash ^= LastUpdateTime.GetHashCode();
      hash ^= metrics_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskId);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Type);
      }
      if (State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask.Types.State.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) State);
      }
      if (processingError_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ProcessingError);
      }
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (lastUpdateTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LastUpdateTime);
      }
      metrics_.WriteTo(output, _repeated_metrics_codec);
      resourceErrorDetails_.WriteTo(output, _repeated_resourceErrorDetails_codec);
      if (ResourceErrorCount != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(ResourceErrorCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskId);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Type);
      }
      if (State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask.Types.State.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) State);
      }
      if (processingError_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ProcessingError);
      }
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (lastUpdateTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LastUpdateTime);
      }
      metrics_.WriteTo(ref output, _repeated_metrics_codec);
      resourceErrorDetails_.WriteTo(ref output, _repeated_resourceErrorDetails_codec);
      if (ResourceErrorCount != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(ResourceErrorCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (processingError_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessingError);
      }
      size += resourceErrorDetails_.CalculateSize(_repeated_resourceErrorDetails_codec);
      if (ResourceErrorCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResourceErrorCount);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (lastUpdateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdateTime);
      }
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MigrationSubtask other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.State != global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.processingError_ != null) {
        if (processingError_ == null) {
          ProcessingError = new global::Google.Rpc.ErrorInfo();
        }
        ProcessingError.MergeFrom(other.ProcessingError);
      }
      resourceErrorDetails_.Add(other.resourceErrorDetails_);
      if (other.ResourceErrorCount != 0) {
        ResourceErrorCount = other.ResourceErrorCount;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.lastUpdateTime_ != null) {
        if (lastUpdateTime_ == null) {
          LastUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastUpdateTime.MergeFrom(other.LastUpdateTime);
      }
      metrics_.Add(other.metrics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            TaskId = input.ReadString();
            break;
          }
          case 26: {
            Type = input.ReadString();
            break;
          }
          case 40: {
            State = (global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask.Types.State) input.ReadEnum();
            break;
          }
          case 50: {
            if (processingError_ == null) {
              ProcessingError = new global::Google.Rpc.ErrorInfo();
            }
            input.ReadMessage(ProcessingError);
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            if (lastUpdateTime_ == null) {
              LastUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastUpdateTime);
            break;
          }
          case 90: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
          case 98: {
            resourceErrorDetails_.AddEntriesFrom(input, _repeated_resourceErrorDetails_codec);
            break;
          }
          case 104: {
            ResourceErrorCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            TaskId = input.ReadString();
            break;
          }
          case 26: {
            Type = input.ReadString();
            break;
          }
          case 40: {
            State = (global::Google.Cloud.Bigquery.Migration.V2Alpha.MigrationSubtask.Types.State) input.ReadEnum();
            break;
          }
          case 50: {
            if (processingError_ == null) {
              ProcessingError = new global::Google.Rpc.ErrorInfo();
            }
            input.ReadMessage(ProcessingError);
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            if (lastUpdateTime_ == null) {
              LastUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastUpdateTime);
            break;
          }
          case 90: {
            metrics_.AddEntriesFrom(ref input, _repeated_metrics_codec);
            break;
          }
          case 98: {
            resourceErrorDetails_.AddEntriesFrom(ref input, _repeated_resourceErrorDetails_codec);
            break;
          }
          case 104: {
            ResourceErrorCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MigrationSubtask message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible states of a migration subtask.
      /// </summary>
      public enum State {
        /// <summary>
        /// The state is unspecified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The subtask is ready, i.e. it is ready for execution.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 1,
        /// <summary>
        /// The subtask is running, i.e. it is assigned to a worker for execution.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// The subtask finished successfully.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 3,
        /// <summary>
        /// The subtask finished unsuccessfully.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 4,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
