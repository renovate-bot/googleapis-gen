// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/datalabeling/v1beta1/data_labeling_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2019 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.DataLabeling.V1Beta1 {
  /// <summary>
  /// Service for the AI Platform Data Labeling API.
  /// </summary>
  public static partial class DataLabelingService
  {
    static readonly string __ServiceName = "google.cloud.datalabeling.v1beta1.DataLabelingService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.CreateDatasetRequest> __Marshaller_google_cloud_datalabeling_v1beta1_CreateDatasetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.CreateDatasetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.Dataset> __Marshaller_google_cloud_datalabeling_v1beta1_Dataset = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.Dataset.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.GetDatasetRequest> __Marshaller_google_cloud_datalabeling_v1beta1_GetDatasetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.GetDatasetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsRequest> __Marshaller_google_cloud_datalabeling_v1beta1_ListDatasetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsResponse> __Marshaller_google_cloud_datalabeling_v1beta1_ListDatasetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.DeleteDatasetRequest> __Marshaller_google_cloud_datalabeling_v1beta1_DeleteDatasetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.DeleteDatasetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ImportDataRequest> __Marshaller_google_cloud_datalabeling_v1beta1_ImportDataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ImportDataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ExportDataRequest> __Marshaller_google_cloud_datalabeling_v1beta1_ExportDataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ExportDataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.GetDataItemRequest> __Marshaller_google_cloud_datalabeling_v1beta1_GetDataItemRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.GetDataItemRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.DataItem> __Marshaller_google_cloud_datalabeling_v1beta1_DataItem = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.DataItem.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsRequest> __Marshaller_google_cloud_datalabeling_v1beta1_ListDataItemsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsResponse> __Marshaller_google_cloud_datalabeling_v1beta1_ListDataItemsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotatedDatasetRequest> __Marshaller_google_cloud_datalabeling_v1beta1_GetAnnotatedDatasetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotatedDatasetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.AnnotatedDataset> __Marshaller_google_cloud_datalabeling_v1beta1_AnnotatedDataset = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.AnnotatedDataset.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsRequest> __Marshaller_google_cloud_datalabeling_v1beta1_ListAnnotatedDatasetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsResponse> __Marshaller_google_cloud_datalabeling_v1beta1_ListAnnotatedDatasetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotatedDatasetRequest> __Marshaller_google_cloud_datalabeling_v1beta1_DeleteAnnotatedDatasetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotatedDatasetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.LabelImageRequest> __Marshaller_google_cloud_datalabeling_v1beta1_LabelImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.LabelImageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.LabelVideoRequest> __Marshaller_google_cloud_datalabeling_v1beta1_LabelVideoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.LabelVideoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.LabelTextRequest> __Marshaller_google_cloud_datalabeling_v1beta1_LabelTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.LabelTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.GetExampleRequest> __Marshaller_google_cloud_datalabeling_v1beta1_GetExampleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.GetExampleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.Example> __Marshaller_google_cloud_datalabeling_v1beta1_Example = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.Example.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesRequest> __Marshaller_google_cloud_datalabeling_v1beta1_ListExamplesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesResponse> __Marshaller_google_cloud_datalabeling_v1beta1_ListExamplesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.CreateAnnotationSpecSetRequest> __Marshaller_google_cloud_datalabeling_v1beta1_CreateAnnotationSpecSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.CreateAnnotationSpecSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet> __Marshaller_google_cloud_datalabeling_v1beta1_AnnotationSpecSet = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotationSpecSetRequest> __Marshaller_google_cloud_datalabeling_v1beta1_GetAnnotationSpecSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotationSpecSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsRequest> __Marshaller_google_cloud_datalabeling_v1beta1_ListAnnotationSpecSetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsResponse> __Marshaller_google_cloud_datalabeling_v1beta1_ListAnnotationSpecSetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotationSpecSetRequest> __Marshaller_google_cloud_datalabeling_v1beta1_DeleteAnnotationSpecSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotationSpecSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.CreateInstructionRequest> __Marshaller_google_cloud_datalabeling_v1beta1_CreateInstructionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.CreateInstructionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.GetInstructionRequest> __Marshaller_google_cloud_datalabeling_v1beta1_GetInstructionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.GetInstructionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.Instruction> __Marshaller_google_cloud_datalabeling_v1beta1_Instruction = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.Instruction.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsRequest> __Marshaller_google_cloud_datalabeling_v1beta1_ListInstructionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsResponse> __Marshaller_google_cloud_datalabeling_v1beta1_ListInstructionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.DeleteInstructionRequest> __Marshaller_google_cloud_datalabeling_v1beta1_DeleteInstructionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.DeleteInstructionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationRequest> __Marshaller_google_cloud_datalabeling_v1beta1_GetEvaluationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.Evaluation> __Marshaller_google_cloud_datalabeling_v1beta1_Evaluation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.Evaluation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsRequest> __Marshaller_google_cloud_datalabeling_v1beta1_SearchEvaluationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsResponse> __Marshaller_google_cloud_datalabeling_v1beta1_SearchEvaluationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsRequest> __Marshaller_google_cloud_datalabeling_v1beta1_SearchExampleComparisonsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsResponse> __Marshaller_google_cloud_datalabeling_v1beta1_SearchExampleComparisonsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.CreateEvaluationJobRequest> __Marshaller_google_cloud_datalabeling_v1beta1_CreateEvaluationJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.CreateEvaluationJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> __Marshaller_google_cloud_datalabeling_v1beta1_EvaluationJob = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.UpdateEvaluationJobRequest> __Marshaller_google_cloud_datalabeling_v1beta1_UpdateEvaluationJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.UpdateEvaluationJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationJobRequest> __Marshaller_google_cloud_datalabeling_v1beta1_GetEvaluationJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.PauseEvaluationJobRequest> __Marshaller_google_cloud_datalabeling_v1beta1_PauseEvaluationJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.PauseEvaluationJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ResumeEvaluationJobRequest> __Marshaller_google_cloud_datalabeling_v1beta1_ResumeEvaluationJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ResumeEvaluationJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.DeleteEvaluationJobRequest> __Marshaller_google_cloud_datalabeling_v1beta1_DeleteEvaluationJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.DeleteEvaluationJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsRequest> __Marshaller_google_cloud_datalabeling_v1beta1_ListEvaluationJobsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsResponse> __Marshaller_google_cloud_datalabeling_v1beta1_ListEvaluationJobsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.CreateDatasetRequest, global::Google.Cloud.DataLabeling.V1Beta1.Dataset> __Method_CreateDataset = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.CreateDatasetRequest, global::Google.Cloud.DataLabeling.V1Beta1.Dataset>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDataset",
        __Marshaller_google_cloud_datalabeling_v1beta1_CreateDatasetRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_Dataset);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetDatasetRequest, global::Google.Cloud.DataLabeling.V1Beta1.Dataset> __Method_GetDataset = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetDatasetRequest, global::Google.Cloud.DataLabeling.V1Beta1.Dataset>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataset",
        __Marshaller_google_cloud_datalabeling_v1beta1_GetDatasetRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_Dataset);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsResponse> __Method_ListDatasets = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDatasets",
        __Marshaller_google_cloud_datalabeling_v1beta1_ListDatasetsRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_ListDatasetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.DeleteDatasetRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteDataset = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.DeleteDatasetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDataset",
        __Marshaller_google_cloud_datalabeling_v1beta1_DeleteDatasetRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ImportDataRequest, global::Google.LongRunning.Operation> __Method_ImportData = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ImportDataRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportData",
        __Marshaller_google_cloud_datalabeling_v1beta1_ImportDataRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ExportDataRequest, global::Google.LongRunning.Operation> __Method_ExportData = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ExportDataRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportData",
        __Marshaller_google_cloud_datalabeling_v1beta1_ExportDataRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetDataItemRequest, global::Google.Cloud.DataLabeling.V1Beta1.DataItem> __Method_GetDataItem = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetDataItemRequest, global::Google.Cloud.DataLabeling.V1Beta1.DataItem>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataItem",
        __Marshaller_google_cloud_datalabeling_v1beta1_GetDataItemRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_DataItem);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsResponse> __Method_ListDataItems = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDataItems",
        __Marshaller_google_cloud_datalabeling_v1beta1_ListDataItemsRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_ListDataItemsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotatedDatasetRequest, global::Google.Cloud.DataLabeling.V1Beta1.AnnotatedDataset> __Method_GetAnnotatedDataset = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotatedDatasetRequest, global::Google.Cloud.DataLabeling.V1Beta1.AnnotatedDataset>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAnnotatedDataset",
        __Marshaller_google_cloud_datalabeling_v1beta1_GetAnnotatedDatasetRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_AnnotatedDataset);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsResponse> __Method_ListAnnotatedDatasets = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAnnotatedDatasets",
        __Marshaller_google_cloud_datalabeling_v1beta1_ListAnnotatedDatasetsRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_ListAnnotatedDatasetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotatedDatasetRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAnnotatedDataset = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotatedDatasetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAnnotatedDataset",
        __Marshaller_google_cloud_datalabeling_v1beta1_DeleteAnnotatedDatasetRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.LabelImageRequest, global::Google.LongRunning.Operation> __Method_LabelImage = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.LabelImageRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LabelImage",
        __Marshaller_google_cloud_datalabeling_v1beta1_LabelImageRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.LabelVideoRequest, global::Google.LongRunning.Operation> __Method_LabelVideo = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.LabelVideoRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LabelVideo",
        __Marshaller_google_cloud_datalabeling_v1beta1_LabelVideoRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.LabelTextRequest, global::Google.LongRunning.Operation> __Method_LabelText = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.LabelTextRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LabelText",
        __Marshaller_google_cloud_datalabeling_v1beta1_LabelTextRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetExampleRequest, global::Google.Cloud.DataLabeling.V1Beta1.Example> __Method_GetExample = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetExampleRequest, global::Google.Cloud.DataLabeling.V1Beta1.Example>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExample",
        __Marshaller_google_cloud_datalabeling_v1beta1_GetExampleRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_Example);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesResponse> __Method_ListExamples = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListExamples",
        __Marshaller_google_cloud_datalabeling_v1beta1_ListExamplesRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_ListExamplesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.CreateAnnotationSpecSetRequest, global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet> __Method_CreateAnnotationSpecSet = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.CreateAnnotationSpecSetRequest, global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAnnotationSpecSet",
        __Marshaller_google_cloud_datalabeling_v1beta1_CreateAnnotationSpecSetRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_AnnotationSpecSet);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotationSpecSetRequest, global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet> __Method_GetAnnotationSpecSet = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotationSpecSetRequest, global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAnnotationSpecSet",
        __Marshaller_google_cloud_datalabeling_v1beta1_GetAnnotationSpecSetRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_AnnotationSpecSet);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsResponse> __Method_ListAnnotationSpecSets = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAnnotationSpecSets",
        __Marshaller_google_cloud_datalabeling_v1beta1_ListAnnotationSpecSetsRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_ListAnnotationSpecSetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotationSpecSetRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAnnotationSpecSet = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotationSpecSetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAnnotationSpecSet",
        __Marshaller_google_cloud_datalabeling_v1beta1_DeleteAnnotationSpecSetRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.CreateInstructionRequest, global::Google.LongRunning.Operation> __Method_CreateInstruction = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.CreateInstructionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateInstruction",
        __Marshaller_google_cloud_datalabeling_v1beta1_CreateInstructionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetInstructionRequest, global::Google.Cloud.DataLabeling.V1Beta1.Instruction> __Method_GetInstruction = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetInstructionRequest, global::Google.Cloud.DataLabeling.V1Beta1.Instruction>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInstruction",
        __Marshaller_google_cloud_datalabeling_v1beta1_GetInstructionRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_Instruction);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsResponse> __Method_ListInstructions = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInstructions",
        __Marshaller_google_cloud_datalabeling_v1beta1_ListInstructionsRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_ListInstructionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.DeleteInstructionRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteInstruction = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.DeleteInstructionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteInstruction",
        __Marshaller_google_cloud_datalabeling_v1beta1_DeleteInstructionRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationRequest, global::Google.Cloud.DataLabeling.V1Beta1.Evaluation> __Method_GetEvaluation = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationRequest, global::Google.Cloud.DataLabeling.V1Beta1.Evaluation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEvaluation",
        __Marshaller_google_cloud_datalabeling_v1beta1_GetEvaluationRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_Evaluation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsRequest, global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsResponse> __Method_SearchEvaluations = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsRequest, global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchEvaluations",
        __Marshaller_google_cloud_datalabeling_v1beta1_SearchEvaluationsRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_SearchEvaluationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsRequest, global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsResponse> __Method_SearchExampleComparisons = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsRequest, global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchExampleComparisons",
        __Marshaller_google_cloud_datalabeling_v1beta1_SearchExampleComparisonsRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_SearchExampleComparisonsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.CreateEvaluationJobRequest, global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> __Method_CreateEvaluationJob = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.CreateEvaluationJobRequest, global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEvaluationJob",
        __Marshaller_google_cloud_datalabeling_v1beta1_CreateEvaluationJobRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_EvaluationJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.UpdateEvaluationJobRequest, global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> __Method_UpdateEvaluationJob = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.UpdateEvaluationJobRequest, global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEvaluationJob",
        __Marshaller_google_cloud_datalabeling_v1beta1_UpdateEvaluationJobRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_EvaluationJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationJobRequest, global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> __Method_GetEvaluationJob = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationJobRequest, global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEvaluationJob",
        __Marshaller_google_cloud_datalabeling_v1beta1_GetEvaluationJobRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_EvaluationJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.PauseEvaluationJobRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_PauseEvaluationJob = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.PauseEvaluationJobRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PauseEvaluationJob",
        __Marshaller_google_cloud_datalabeling_v1beta1_PauseEvaluationJobRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ResumeEvaluationJobRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ResumeEvaluationJob = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ResumeEvaluationJobRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResumeEvaluationJob",
        __Marshaller_google_cloud_datalabeling_v1beta1_ResumeEvaluationJobRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.DeleteEvaluationJobRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteEvaluationJob = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.DeleteEvaluationJobRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEvaluationJob",
        __Marshaller_google_cloud_datalabeling_v1beta1_DeleteEvaluationJobRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsResponse> __Method_ListEvaluationJobs = new grpc::Method<global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEvaluationJobs",
        __Marshaller_google_cloud_datalabeling_v1beta1_ListEvaluationJobsRequest,
        __Marshaller_google_cloud_datalabeling_v1beta1_ListEvaluationJobsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.DataLabeling.V1Beta1.DataLabelingServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DataLabelingService</summary>
    [grpc::BindServiceMethod(typeof(DataLabelingService), "BindService")]
    public abstract partial class DataLabelingServiceBase
    {
      /// <summary>
      /// Creates dataset. If success return a Dataset resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.Dataset> CreateDataset(global::Google.Cloud.DataLabeling.V1Beta1.CreateDatasetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets dataset by resource name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.Dataset> GetDataset(global::Google.Cloud.DataLabeling.V1Beta1.GetDatasetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists datasets under a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsResponse> ListDatasets(global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a dataset by resource name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDataset(global::Google.Cloud.DataLabeling.V1Beta1.DeleteDatasetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Imports data into dataset based on source locations defined in request.
      /// It can be called multiple times for the same dataset. Each dataset can
      /// only have one long running operation running on it. For example, no
      /// labeling task (also long running operation) can be started while
      /// importing is still ongoing. Vice versa.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ImportData(global::Google.Cloud.DataLabeling.V1Beta1.ImportDataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Exports data and annotations from dataset.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ExportData(global::Google.Cloud.DataLabeling.V1Beta1.ExportDataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a data item in a dataset by resource name. This API can be
      /// called after data are imported into dataset.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.DataItem> GetDataItem(global::Google.Cloud.DataLabeling.V1Beta1.GetDataItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists data items in a dataset. This API can be called after data
      /// are imported into dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsResponse> ListDataItems(global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an annotated dataset by resource name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.AnnotatedDataset> GetAnnotatedDataset(global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotatedDatasetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists annotated datasets for a dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsResponse> ListAnnotatedDatasets(global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an annotated dataset by resource name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAnnotatedDataset(global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotatedDatasetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Starts a labeling task for image. The type of image labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> LabelImage(global::Google.Cloud.DataLabeling.V1Beta1.LabelImageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Starts a labeling task for video. The type of video labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> LabelVideo(global::Google.Cloud.DataLabeling.V1Beta1.LabelVideoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Starts a labeling task for text. The type of text labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> LabelText(global::Google.Cloud.DataLabeling.V1Beta1.LabelTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an example by resource name, including both data and annotation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.Example> GetExample(global::Google.Cloud.DataLabeling.V1Beta1.GetExampleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists examples in an annotated dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesResponse> ListExamples(global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an annotation spec set by providing a set of labels.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet> CreateAnnotationSpecSet(global::Google.Cloud.DataLabeling.V1Beta1.CreateAnnotationSpecSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an annotation spec set by resource name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet> GetAnnotationSpecSet(global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotationSpecSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists annotation spec sets for a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsResponse> ListAnnotationSpecSets(global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an annotation spec set by resource name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAnnotationSpecSet(global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotationSpecSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an instruction for how data should be labeled.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateInstruction(global::Google.Cloud.DataLabeling.V1Beta1.CreateInstructionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an instruction by resource name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.Instruction> GetInstruction(global::Google.Cloud.DataLabeling.V1Beta1.GetInstructionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists instructions for a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsResponse> ListInstructions(global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an instruction object by resource name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInstruction(global::Google.Cloud.DataLabeling.V1Beta1.DeleteInstructionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an evaluation by resource name (to search, use
      /// [projects.evaluations.search][google.cloud.datalabeling.v1beta1.DataLabelingService.SearchEvaluations]).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.Evaluation> GetEvaluation(global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Searches [evaluations][google.cloud.datalabeling.v1beta1.Evaluation] within a project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsResponse> SearchEvaluations(global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Searches example comparisons from an evaluation. The return format is a
      /// list of example comparisons that show ground truth and prediction(s) for
      /// a single input. Search by providing an evaluation ID.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsResponse> SearchExampleComparisons(global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an evaluation job.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> CreateEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.CreateEvaluationJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an evaluation job. You can only update certain fields of the job's
      /// [EvaluationJobConfig][google.cloud.datalabeling.v1beta1.EvaluationJobConfig]: `humanAnnotationConfig.instruction`,
      /// `exampleCount`, and `exampleSamplePercentage`.
      ///
      /// If you want to change any other aspect of the evaluation job, you must
      /// delete the job and create a new one.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> UpdateEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.UpdateEvaluationJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an evaluation job by resource name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> GetEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Pauses an evaluation job. Pausing an evaluation job that is already in a
      /// `PAUSED` state is a no-op.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> PauseEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.PauseEvaluationJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resumes a paused evaluation job. A deleted evaluation job can't be resumed.
      /// Resuming a running or scheduled evaluation job is a no-op.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ResumeEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.ResumeEvaluationJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stops and deletes an evaluation job.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.DeleteEvaluationJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all evaluation jobs within a project with possible filters.
      /// Pagination is supported.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsResponse> ListEvaluationJobs(global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DataLabelingService</summary>
    public partial class DataLabelingServiceClient : grpc::ClientBase<DataLabelingServiceClient>
    {
      /// <summary>Creates a new client for DataLabelingService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DataLabelingServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DataLabelingService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DataLabelingServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DataLabelingServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DataLabelingServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates dataset. If success return a Dataset resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.Dataset CreateDataset(global::Google.Cloud.DataLabeling.V1Beta1.CreateDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDataset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates dataset. If success return a Dataset resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.Dataset CreateDataset(global::Google.Cloud.DataLabeling.V1Beta1.CreateDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDataset, null, options, request);
      }
      /// <summary>
      /// Creates dataset. If success return a Dataset resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.Dataset> CreateDatasetAsync(global::Google.Cloud.DataLabeling.V1Beta1.CreateDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDatasetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates dataset. If success return a Dataset resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.Dataset> CreateDatasetAsync(global::Google.Cloud.DataLabeling.V1Beta1.CreateDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDataset, null, options, request);
      }
      /// <summary>
      /// Gets dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.Dataset GetDataset(global::Google.Cloud.DataLabeling.V1Beta1.GetDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.Dataset GetDataset(global::Google.Cloud.DataLabeling.V1Beta1.GetDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataset, null, options, request);
      }
      /// <summary>
      /// Gets dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.Dataset> GetDatasetAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDatasetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.Dataset> GetDatasetAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataset, null, options, request);
      }
      /// <summary>
      /// Lists datasets under a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsResponse ListDatasets(global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDatasets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists datasets under a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsResponse ListDatasets(global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDatasets, null, options, request);
      }
      /// <summary>
      /// Lists datasets under a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsResponse> ListDatasetsAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDatasetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists datasets under a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsResponse> ListDatasetsAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDatasets, null, options, request);
      }
      /// <summary>
      /// Deletes a dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDataset(global::Google.Cloud.DataLabeling.V1Beta1.DeleteDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDataset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDataset(global::Google.Cloud.DataLabeling.V1Beta1.DeleteDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDataset, null, options, request);
      }
      /// <summary>
      /// Deletes a dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDatasetAsync(global::Google.Cloud.DataLabeling.V1Beta1.DeleteDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDatasetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDatasetAsync(global::Google.Cloud.DataLabeling.V1Beta1.DeleteDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDataset, null, options, request);
      }
      /// <summary>
      /// Imports data into dataset based on source locations defined in request.
      /// It can be called multiple times for the same dataset. Each dataset can
      /// only have one long running operation running on it. For example, no
      /// labeling task (also long running operation) can be started while
      /// importing is still ongoing. Vice versa.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportData(global::Google.Cloud.DataLabeling.V1Beta1.ImportDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports data into dataset based on source locations defined in request.
      /// It can be called multiple times for the same dataset. Each dataset can
      /// only have one long running operation running on it. For example, no
      /// labeling task (also long running operation) can be started while
      /// importing is still ongoing. Vice versa.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportData(global::Google.Cloud.DataLabeling.V1Beta1.ImportDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportData, null, options, request);
      }
      /// <summary>
      /// Imports data into dataset based on source locations defined in request.
      /// It can be called multiple times for the same dataset. Each dataset can
      /// only have one long running operation running on it. For example, no
      /// labeling task (also long running operation) can be started while
      /// importing is still ongoing. Vice versa.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportDataAsync(global::Google.Cloud.DataLabeling.V1Beta1.ImportDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports data into dataset based on source locations defined in request.
      /// It can be called multiple times for the same dataset. Each dataset can
      /// only have one long running operation running on it. For example, no
      /// labeling task (also long running operation) can be started while
      /// importing is still ongoing. Vice versa.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportDataAsync(global::Google.Cloud.DataLabeling.V1Beta1.ImportDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportData, null, options, request);
      }
      /// <summary>
      /// Exports data and annotations from dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportData(global::Google.Cloud.DataLabeling.V1Beta1.ExportDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports data and annotations from dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportData(global::Google.Cloud.DataLabeling.V1Beta1.ExportDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportData, null, options, request);
      }
      /// <summary>
      /// Exports data and annotations from dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportDataAsync(global::Google.Cloud.DataLabeling.V1Beta1.ExportDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports data and annotations from dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportDataAsync(global::Google.Cloud.DataLabeling.V1Beta1.ExportDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportData, null, options, request);
      }
      /// <summary>
      /// Gets a data item in a dataset by resource name. This API can be
      /// called after data are imported into dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.DataItem GetDataItem(global::Google.Cloud.DataLabeling.V1Beta1.GetDataItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a data item in a dataset by resource name. This API can be
      /// called after data are imported into dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.DataItem GetDataItem(global::Google.Cloud.DataLabeling.V1Beta1.GetDataItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataItem, null, options, request);
      }
      /// <summary>
      /// Gets a data item in a dataset by resource name. This API can be
      /// called after data are imported into dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.DataItem> GetDataItemAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetDataItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a data item in a dataset by resource name. This API can be
      /// called after data are imported into dataset.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.DataItem> GetDataItemAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetDataItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataItem, null, options, request);
      }
      /// <summary>
      /// Lists data items in a dataset. This API can be called after data
      /// are imported into dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsResponse ListDataItems(global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDataItems(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists data items in a dataset. This API can be called after data
      /// are imported into dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsResponse ListDataItems(global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDataItems, null, options, request);
      }
      /// <summary>
      /// Lists data items in a dataset. This API can be called after data
      /// are imported into dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsResponse> ListDataItemsAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDataItemsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists data items in a dataset. This API can be called after data
      /// are imported into dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsResponse> ListDataItemsAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDataItems, null, options, request);
      }
      /// <summary>
      /// Gets an annotated dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.AnnotatedDataset GetAnnotatedDataset(global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotatedDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAnnotatedDataset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an annotated dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.AnnotatedDataset GetAnnotatedDataset(global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotatedDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAnnotatedDataset, null, options, request);
      }
      /// <summary>
      /// Gets an annotated dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.AnnotatedDataset> GetAnnotatedDatasetAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotatedDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAnnotatedDatasetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an annotated dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.AnnotatedDataset> GetAnnotatedDatasetAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotatedDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAnnotatedDataset, null, options, request);
      }
      /// <summary>
      /// Lists annotated datasets for a dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsResponse ListAnnotatedDatasets(global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAnnotatedDatasets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists annotated datasets for a dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsResponse ListAnnotatedDatasets(global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAnnotatedDatasets, null, options, request);
      }
      /// <summary>
      /// Lists annotated datasets for a dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsResponse> ListAnnotatedDatasetsAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAnnotatedDatasetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists annotated datasets for a dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsResponse> ListAnnotatedDatasetsAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAnnotatedDatasets, null, options, request);
      }
      /// <summary>
      /// Deletes an annotated dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAnnotatedDataset(global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotatedDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAnnotatedDataset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an annotated dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAnnotatedDataset(global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotatedDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAnnotatedDataset, null, options, request);
      }
      /// <summary>
      /// Deletes an annotated dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAnnotatedDatasetAsync(global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotatedDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAnnotatedDatasetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an annotated dataset by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAnnotatedDatasetAsync(global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotatedDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAnnotatedDataset, null, options, request);
      }
      /// <summary>
      /// Starts a labeling task for image. The type of image labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation LabelImage(global::Google.Cloud.DataLabeling.V1Beta1.LabelImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LabelImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a labeling task for image. The type of image labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation LabelImage(global::Google.Cloud.DataLabeling.V1Beta1.LabelImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LabelImage, null, options, request);
      }
      /// <summary>
      /// Starts a labeling task for image. The type of image labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> LabelImageAsync(global::Google.Cloud.DataLabeling.V1Beta1.LabelImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LabelImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a labeling task for image. The type of image labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> LabelImageAsync(global::Google.Cloud.DataLabeling.V1Beta1.LabelImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LabelImage, null, options, request);
      }
      /// <summary>
      /// Starts a labeling task for video. The type of video labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation LabelVideo(global::Google.Cloud.DataLabeling.V1Beta1.LabelVideoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LabelVideo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a labeling task for video. The type of video labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation LabelVideo(global::Google.Cloud.DataLabeling.V1Beta1.LabelVideoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LabelVideo, null, options, request);
      }
      /// <summary>
      /// Starts a labeling task for video. The type of video labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> LabelVideoAsync(global::Google.Cloud.DataLabeling.V1Beta1.LabelVideoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LabelVideoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a labeling task for video. The type of video labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> LabelVideoAsync(global::Google.Cloud.DataLabeling.V1Beta1.LabelVideoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LabelVideo, null, options, request);
      }
      /// <summary>
      /// Starts a labeling task for text. The type of text labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation LabelText(global::Google.Cloud.DataLabeling.V1Beta1.LabelTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LabelText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a labeling task for text. The type of text labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation LabelText(global::Google.Cloud.DataLabeling.V1Beta1.LabelTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LabelText, null, options, request);
      }
      /// <summary>
      /// Starts a labeling task for text. The type of text labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> LabelTextAsync(global::Google.Cloud.DataLabeling.V1Beta1.LabelTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LabelTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a labeling task for text. The type of text labeling task is
      /// configured by feature in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> LabelTextAsync(global::Google.Cloud.DataLabeling.V1Beta1.LabelTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LabelText, null, options, request);
      }
      /// <summary>
      /// Gets an example by resource name, including both data and annotation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.Example GetExample(global::Google.Cloud.DataLabeling.V1Beta1.GetExampleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExample(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an example by resource name, including both data and annotation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.Example GetExample(global::Google.Cloud.DataLabeling.V1Beta1.GetExampleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetExample, null, options, request);
      }
      /// <summary>
      /// Gets an example by resource name, including both data and annotation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.Example> GetExampleAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetExampleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExampleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an example by resource name, including both data and annotation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.Example> GetExampleAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetExampleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetExample, null, options, request);
      }
      /// <summary>
      /// Lists examples in an annotated dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesResponse ListExamples(global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListExamples(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists examples in an annotated dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesResponse ListExamples(global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListExamples, null, options, request);
      }
      /// <summary>
      /// Lists examples in an annotated dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesResponse> ListExamplesAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListExamplesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists examples in an annotated dataset. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesResponse> ListExamplesAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListExamples, null, options, request);
      }
      /// <summary>
      /// Creates an annotation spec set by providing a set of labels.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet CreateAnnotationSpecSet(global::Google.Cloud.DataLabeling.V1Beta1.CreateAnnotationSpecSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAnnotationSpecSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an annotation spec set by providing a set of labels.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet CreateAnnotationSpecSet(global::Google.Cloud.DataLabeling.V1Beta1.CreateAnnotationSpecSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAnnotationSpecSet, null, options, request);
      }
      /// <summary>
      /// Creates an annotation spec set by providing a set of labels.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet> CreateAnnotationSpecSetAsync(global::Google.Cloud.DataLabeling.V1Beta1.CreateAnnotationSpecSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAnnotationSpecSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an annotation spec set by providing a set of labels.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet> CreateAnnotationSpecSetAsync(global::Google.Cloud.DataLabeling.V1Beta1.CreateAnnotationSpecSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAnnotationSpecSet, null, options, request);
      }
      /// <summary>
      /// Gets an annotation spec set by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet GetAnnotationSpecSet(global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotationSpecSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAnnotationSpecSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an annotation spec set by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet GetAnnotationSpecSet(global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotationSpecSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAnnotationSpecSet, null, options, request);
      }
      /// <summary>
      /// Gets an annotation spec set by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet> GetAnnotationSpecSetAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotationSpecSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAnnotationSpecSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an annotation spec set by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet> GetAnnotationSpecSetAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotationSpecSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAnnotationSpecSet, null, options, request);
      }
      /// <summary>
      /// Lists annotation spec sets for a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsResponse ListAnnotationSpecSets(global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAnnotationSpecSets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists annotation spec sets for a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsResponse ListAnnotationSpecSets(global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAnnotationSpecSets, null, options, request);
      }
      /// <summary>
      /// Lists annotation spec sets for a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsResponse> ListAnnotationSpecSetsAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAnnotationSpecSetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists annotation spec sets for a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsResponse> ListAnnotationSpecSetsAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAnnotationSpecSets, null, options, request);
      }
      /// <summary>
      /// Deletes an annotation spec set by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAnnotationSpecSet(global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotationSpecSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAnnotationSpecSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an annotation spec set by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAnnotationSpecSet(global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotationSpecSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAnnotationSpecSet, null, options, request);
      }
      /// <summary>
      /// Deletes an annotation spec set by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAnnotationSpecSetAsync(global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotationSpecSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAnnotationSpecSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an annotation spec set by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAnnotationSpecSetAsync(global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotationSpecSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAnnotationSpecSet, null, options, request);
      }
      /// <summary>
      /// Creates an instruction for how data should be labeled.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateInstruction(global::Google.Cloud.DataLabeling.V1Beta1.CreateInstructionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInstruction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an instruction for how data should be labeled.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateInstruction(global::Google.Cloud.DataLabeling.V1Beta1.CreateInstructionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateInstruction, null, options, request);
      }
      /// <summary>
      /// Creates an instruction for how data should be labeled.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateInstructionAsync(global::Google.Cloud.DataLabeling.V1Beta1.CreateInstructionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInstructionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an instruction for how data should be labeled.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateInstructionAsync(global::Google.Cloud.DataLabeling.V1Beta1.CreateInstructionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateInstruction, null, options, request);
      }
      /// <summary>
      /// Gets an instruction by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.Instruction GetInstruction(global::Google.Cloud.DataLabeling.V1Beta1.GetInstructionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInstruction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an instruction by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.Instruction GetInstruction(global::Google.Cloud.DataLabeling.V1Beta1.GetInstructionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInstruction, null, options, request);
      }
      /// <summary>
      /// Gets an instruction by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.Instruction> GetInstructionAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetInstructionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInstructionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an instruction by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.Instruction> GetInstructionAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetInstructionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInstruction, null, options, request);
      }
      /// <summary>
      /// Lists instructions for a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsResponse ListInstructions(global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstructions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists instructions for a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsResponse ListInstructions(global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInstructions, null, options, request);
      }
      /// <summary>
      /// Lists instructions for a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsResponse> ListInstructionsAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstructionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists instructions for a project. Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsResponse> ListInstructionsAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInstructions, null, options, request);
      }
      /// <summary>
      /// Deletes an instruction object by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteInstruction(global::Google.Cloud.DataLabeling.V1Beta1.DeleteInstructionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInstruction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an instruction object by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteInstruction(global::Google.Cloud.DataLabeling.V1Beta1.DeleteInstructionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteInstruction, null, options, request);
      }
      /// <summary>
      /// Deletes an instruction object by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInstructionAsync(global::Google.Cloud.DataLabeling.V1Beta1.DeleteInstructionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInstructionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an instruction object by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteInstructionAsync(global::Google.Cloud.DataLabeling.V1Beta1.DeleteInstructionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteInstruction, null, options, request);
      }
      /// <summary>
      /// Gets an evaluation by resource name (to search, use
      /// [projects.evaluations.search][google.cloud.datalabeling.v1beta1.DataLabelingService.SearchEvaluations]).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.Evaluation GetEvaluation(global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEvaluation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an evaluation by resource name (to search, use
      /// [projects.evaluations.search][google.cloud.datalabeling.v1beta1.DataLabelingService.SearchEvaluations]).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.Evaluation GetEvaluation(global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEvaluation, null, options, request);
      }
      /// <summary>
      /// Gets an evaluation by resource name (to search, use
      /// [projects.evaluations.search][google.cloud.datalabeling.v1beta1.DataLabelingService.SearchEvaluations]).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.Evaluation> GetEvaluationAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEvaluationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an evaluation by resource name (to search, use
      /// [projects.evaluations.search][google.cloud.datalabeling.v1beta1.DataLabelingService.SearchEvaluations]).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.Evaluation> GetEvaluationAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEvaluation, null, options, request);
      }
      /// <summary>
      /// Searches [evaluations][google.cloud.datalabeling.v1beta1.Evaluation] within a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsResponse SearchEvaluations(global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchEvaluations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches [evaluations][google.cloud.datalabeling.v1beta1.Evaluation] within a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsResponse SearchEvaluations(global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchEvaluations, null, options, request);
      }
      /// <summary>
      /// Searches [evaluations][google.cloud.datalabeling.v1beta1.Evaluation] within a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsResponse> SearchEvaluationsAsync(global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchEvaluationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches [evaluations][google.cloud.datalabeling.v1beta1.Evaluation] within a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsResponse> SearchEvaluationsAsync(global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchEvaluations, null, options, request);
      }
      /// <summary>
      /// Searches example comparisons from an evaluation. The return format is a
      /// list of example comparisons that show ground truth and prediction(s) for
      /// a single input. Search by providing an evaluation ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsResponse SearchExampleComparisons(global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchExampleComparisons(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches example comparisons from an evaluation. The return format is a
      /// list of example comparisons that show ground truth and prediction(s) for
      /// a single input. Search by providing an evaluation ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsResponse SearchExampleComparisons(global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchExampleComparisons, null, options, request);
      }
      /// <summary>
      /// Searches example comparisons from an evaluation. The return format is a
      /// list of example comparisons that show ground truth and prediction(s) for
      /// a single input. Search by providing an evaluation ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsResponse> SearchExampleComparisonsAsync(global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchExampleComparisonsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches example comparisons from an evaluation. The return format is a
      /// list of example comparisons that show ground truth and prediction(s) for
      /// a single input. Search by providing an evaluation ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsResponse> SearchExampleComparisonsAsync(global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchExampleComparisons, null, options, request);
      }
      /// <summary>
      /// Creates an evaluation job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob CreateEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.CreateEvaluationJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEvaluationJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an evaluation job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob CreateEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.CreateEvaluationJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEvaluationJob, null, options, request);
      }
      /// <summary>
      /// Creates an evaluation job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> CreateEvaluationJobAsync(global::Google.Cloud.DataLabeling.V1Beta1.CreateEvaluationJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEvaluationJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an evaluation job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> CreateEvaluationJobAsync(global::Google.Cloud.DataLabeling.V1Beta1.CreateEvaluationJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEvaluationJob, null, options, request);
      }
      /// <summary>
      /// Updates an evaluation job. You can only update certain fields of the job's
      /// [EvaluationJobConfig][google.cloud.datalabeling.v1beta1.EvaluationJobConfig]: `humanAnnotationConfig.instruction`,
      /// `exampleCount`, and `exampleSamplePercentage`.
      ///
      /// If you want to change any other aspect of the evaluation job, you must
      /// delete the job and create a new one.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob UpdateEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.UpdateEvaluationJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEvaluationJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an evaluation job. You can only update certain fields of the job's
      /// [EvaluationJobConfig][google.cloud.datalabeling.v1beta1.EvaluationJobConfig]: `humanAnnotationConfig.instruction`,
      /// `exampleCount`, and `exampleSamplePercentage`.
      ///
      /// If you want to change any other aspect of the evaluation job, you must
      /// delete the job and create a new one.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob UpdateEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.UpdateEvaluationJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEvaluationJob, null, options, request);
      }
      /// <summary>
      /// Updates an evaluation job. You can only update certain fields of the job's
      /// [EvaluationJobConfig][google.cloud.datalabeling.v1beta1.EvaluationJobConfig]: `humanAnnotationConfig.instruction`,
      /// `exampleCount`, and `exampleSamplePercentage`.
      ///
      /// If you want to change any other aspect of the evaluation job, you must
      /// delete the job and create a new one.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> UpdateEvaluationJobAsync(global::Google.Cloud.DataLabeling.V1Beta1.UpdateEvaluationJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEvaluationJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an evaluation job. You can only update certain fields of the job's
      /// [EvaluationJobConfig][google.cloud.datalabeling.v1beta1.EvaluationJobConfig]: `humanAnnotationConfig.instruction`,
      /// `exampleCount`, and `exampleSamplePercentage`.
      ///
      /// If you want to change any other aspect of the evaluation job, you must
      /// delete the job and create a new one.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> UpdateEvaluationJobAsync(global::Google.Cloud.DataLabeling.V1Beta1.UpdateEvaluationJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEvaluationJob, null, options, request);
      }
      /// <summary>
      /// Gets an evaluation job by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob GetEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEvaluationJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an evaluation job by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob GetEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEvaluationJob, null, options, request);
      }
      /// <summary>
      /// Gets an evaluation job by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> GetEvaluationJobAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEvaluationJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an evaluation job by resource name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob> GetEvaluationJobAsync(global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEvaluationJob, null, options, request);
      }
      /// <summary>
      /// Pauses an evaluation job. Pausing an evaluation job that is already in a
      /// `PAUSED` state is a no-op.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty PauseEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.PauseEvaluationJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PauseEvaluationJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Pauses an evaluation job. Pausing an evaluation job that is already in a
      /// `PAUSED` state is a no-op.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty PauseEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.PauseEvaluationJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PauseEvaluationJob, null, options, request);
      }
      /// <summary>
      /// Pauses an evaluation job. Pausing an evaluation job that is already in a
      /// `PAUSED` state is a no-op.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> PauseEvaluationJobAsync(global::Google.Cloud.DataLabeling.V1Beta1.PauseEvaluationJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PauseEvaluationJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Pauses an evaluation job. Pausing an evaluation job that is already in a
      /// `PAUSED` state is a no-op.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> PauseEvaluationJobAsync(global::Google.Cloud.DataLabeling.V1Beta1.PauseEvaluationJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PauseEvaluationJob, null, options, request);
      }
      /// <summary>
      /// Resumes a paused evaluation job. A deleted evaluation job can't be resumed.
      /// Resuming a running or scheduled evaluation job is a no-op.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ResumeEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.ResumeEvaluationJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResumeEvaluationJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resumes a paused evaluation job. A deleted evaluation job can't be resumed.
      /// Resuming a running or scheduled evaluation job is a no-op.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ResumeEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.ResumeEvaluationJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResumeEvaluationJob, null, options, request);
      }
      /// <summary>
      /// Resumes a paused evaluation job. A deleted evaluation job can't be resumed.
      /// Resuming a running or scheduled evaluation job is a no-op.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ResumeEvaluationJobAsync(global::Google.Cloud.DataLabeling.V1Beta1.ResumeEvaluationJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResumeEvaluationJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resumes a paused evaluation job. A deleted evaluation job can't be resumed.
      /// Resuming a running or scheduled evaluation job is a no-op.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ResumeEvaluationJobAsync(global::Google.Cloud.DataLabeling.V1Beta1.ResumeEvaluationJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResumeEvaluationJob, null, options, request);
      }
      /// <summary>
      /// Stops and deletes an evaluation job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.DeleteEvaluationJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEvaluationJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops and deletes an evaluation job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEvaluationJob(global::Google.Cloud.DataLabeling.V1Beta1.DeleteEvaluationJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEvaluationJob, null, options, request);
      }
      /// <summary>
      /// Stops and deletes an evaluation job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEvaluationJobAsync(global::Google.Cloud.DataLabeling.V1Beta1.DeleteEvaluationJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEvaluationJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops and deletes an evaluation job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEvaluationJobAsync(global::Google.Cloud.DataLabeling.V1Beta1.DeleteEvaluationJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEvaluationJob, null, options, request);
      }
      /// <summary>
      /// Lists all evaluation jobs within a project with possible filters.
      /// Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsResponse ListEvaluationJobs(global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEvaluationJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all evaluation jobs within a project with possible filters.
      /// Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsResponse ListEvaluationJobs(global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEvaluationJobs, null, options, request);
      }
      /// <summary>
      /// Lists all evaluation jobs within a project with possible filters.
      /// Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsResponse> ListEvaluationJobsAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEvaluationJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all evaluation jobs within a project with possible filters.
      /// Pagination is supported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsResponse> ListEvaluationJobsAsync(global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEvaluationJobs, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DataLabelingServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DataLabelingServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DataLabelingServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateDataset, serviceImpl.CreateDataset)
          .AddMethod(__Method_GetDataset, serviceImpl.GetDataset)
          .AddMethod(__Method_ListDatasets, serviceImpl.ListDatasets)
          .AddMethod(__Method_DeleteDataset, serviceImpl.DeleteDataset)
          .AddMethod(__Method_ImportData, serviceImpl.ImportData)
          .AddMethod(__Method_ExportData, serviceImpl.ExportData)
          .AddMethod(__Method_GetDataItem, serviceImpl.GetDataItem)
          .AddMethod(__Method_ListDataItems, serviceImpl.ListDataItems)
          .AddMethod(__Method_GetAnnotatedDataset, serviceImpl.GetAnnotatedDataset)
          .AddMethod(__Method_ListAnnotatedDatasets, serviceImpl.ListAnnotatedDatasets)
          .AddMethod(__Method_DeleteAnnotatedDataset, serviceImpl.DeleteAnnotatedDataset)
          .AddMethod(__Method_LabelImage, serviceImpl.LabelImage)
          .AddMethod(__Method_LabelVideo, serviceImpl.LabelVideo)
          .AddMethod(__Method_LabelText, serviceImpl.LabelText)
          .AddMethod(__Method_GetExample, serviceImpl.GetExample)
          .AddMethod(__Method_ListExamples, serviceImpl.ListExamples)
          .AddMethod(__Method_CreateAnnotationSpecSet, serviceImpl.CreateAnnotationSpecSet)
          .AddMethod(__Method_GetAnnotationSpecSet, serviceImpl.GetAnnotationSpecSet)
          .AddMethod(__Method_ListAnnotationSpecSets, serviceImpl.ListAnnotationSpecSets)
          .AddMethod(__Method_DeleteAnnotationSpecSet, serviceImpl.DeleteAnnotationSpecSet)
          .AddMethod(__Method_CreateInstruction, serviceImpl.CreateInstruction)
          .AddMethod(__Method_GetInstruction, serviceImpl.GetInstruction)
          .AddMethod(__Method_ListInstructions, serviceImpl.ListInstructions)
          .AddMethod(__Method_DeleteInstruction, serviceImpl.DeleteInstruction)
          .AddMethod(__Method_GetEvaluation, serviceImpl.GetEvaluation)
          .AddMethod(__Method_SearchEvaluations, serviceImpl.SearchEvaluations)
          .AddMethod(__Method_SearchExampleComparisons, serviceImpl.SearchExampleComparisons)
          .AddMethod(__Method_CreateEvaluationJob, serviceImpl.CreateEvaluationJob)
          .AddMethod(__Method_UpdateEvaluationJob, serviceImpl.UpdateEvaluationJob)
          .AddMethod(__Method_GetEvaluationJob, serviceImpl.GetEvaluationJob)
          .AddMethod(__Method_PauseEvaluationJob, serviceImpl.PauseEvaluationJob)
          .AddMethod(__Method_ResumeEvaluationJob, serviceImpl.ResumeEvaluationJob)
          .AddMethod(__Method_DeleteEvaluationJob, serviceImpl.DeleteEvaluationJob)
          .AddMethod(__Method_ListEvaluationJobs, serviceImpl.ListEvaluationJobs).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DataLabelingServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateDataset, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.CreateDatasetRequest, global::Google.Cloud.DataLabeling.V1Beta1.Dataset>(serviceImpl.CreateDataset));
      serviceBinder.AddMethod(__Method_GetDataset, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.GetDatasetRequest, global::Google.Cloud.DataLabeling.V1Beta1.Dataset>(serviceImpl.GetDataset));
      serviceBinder.AddMethod(__Method_ListDatasets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListDatasetsResponse>(serviceImpl.ListDatasets));
      serviceBinder.AddMethod(__Method_DeleteDataset, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.DeleteDatasetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteDataset));
      serviceBinder.AddMethod(__Method_ImportData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.ImportDataRequest, global::Google.LongRunning.Operation>(serviceImpl.ImportData));
      serviceBinder.AddMethod(__Method_ExportData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.ExportDataRequest, global::Google.LongRunning.Operation>(serviceImpl.ExportData));
      serviceBinder.AddMethod(__Method_GetDataItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.GetDataItemRequest, global::Google.Cloud.DataLabeling.V1Beta1.DataItem>(serviceImpl.GetDataItem));
      serviceBinder.AddMethod(__Method_ListDataItems, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListDataItemsResponse>(serviceImpl.ListDataItems));
      serviceBinder.AddMethod(__Method_GetAnnotatedDataset, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotatedDatasetRequest, global::Google.Cloud.DataLabeling.V1Beta1.AnnotatedDataset>(serviceImpl.GetAnnotatedDataset));
      serviceBinder.AddMethod(__Method_ListAnnotatedDatasets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotatedDatasetsResponse>(serviceImpl.ListAnnotatedDatasets));
      serviceBinder.AddMethod(__Method_DeleteAnnotatedDataset, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotatedDatasetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAnnotatedDataset));
      serviceBinder.AddMethod(__Method_LabelImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.LabelImageRequest, global::Google.LongRunning.Operation>(serviceImpl.LabelImage));
      serviceBinder.AddMethod(__Method_LabelVideo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.LabelVideoRequest, global::Google.LongRunning.Operation>(serviceImpl.LabelVideo));
      serviceBinder.AddMethod(__Method_LabelText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.LabelTextRequest, global::Google.LongRunning.Operation>(serviceImpl.LabelText));
      serviceBinder.AddMethod(__Method_GetExample, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.GetExampleRequest, global::Google.Cloud.DataLabeling.V1Beta1.Example>(serviceImpl.GetExample));
      serviceBinder.AddMethod(__Method_ListExamples, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListExamplesResponse>(serviceImpl.ListExamples));
      serviceBinder.AddMethod(__Method_CreateAnnotationSpecSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.CreateAnnotationSpecSetRequest, global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet>(serviceImpl.CreateAnnotationSpecSet));
      serviceBinder.AddMethod(__Method_GetAnnotationSpecSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.GetAnnotationSpecSetRequest, global::Google.Cloud.DataLabeling.V1Beta1.AnnotationSpecSet>(serviceImpl.GetAnnotationSpecSet));
      serviceBinder.AddMethod(__Method_ListAnnotationSpecSets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListAnnotationSpecSetsResponse>(serviceImpl.ListAnnotationSpecSets));
      serviceBinder.AddMethod(__Method_DeleteAnnotationSpecSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.DeleteAnnotationSpecSetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAnnotationSpecSet));
      serviceBinder.AddMethod(__Method_CreateInstruction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.CreateInstructionRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateInstruction));
      serviceBinder.AddMethod(__Method_GetInstruction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.GetInstructionRequest, global::Google.Cloud.DataLabeling.V1Beta1.Instruction>(serviceImpl.GetInstruction));
      serviceBinder.AddMethod(__Method_ListInstructions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListInstructionsResponse>(serviceImpl.ListInstructions));
      serviceBinder.AddMethod(__Method_DeleteInstruction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.DeleteInstructionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteInstruction));
      serviceBinder.AddMethod(__Method_GetEvaluation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationRequest, global::Google.Cloud.DataLabeling.V1Beta1.Evaluation>(serviceImpl.GetEvaluation));
      serviceBinder.AddMethod(__Method_SearchEvaluations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsRequest, global::Google.Cloud.DataLabeling.V1Beta1.SearchEvaluationsResponse>(serviceImpl.SearchEvaluations));
      serviceBinder.AddMethod(__Method_SearchExampleComparisons, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsRequest, global::Google.Cloud.DataLabeling.V1Beta1.SearchExampleComparisonsResponse>(serviceImpl.SearchExampleComparisons));
      serviceBinder.AddMethod(__Method_CreateEvaluationJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.CreateEvaluationJobRequest, global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob>(serviceImpl.CreateEvaluationJob));
      serviceBinder.AddMethod(__Method_UpdateEvaluationJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.UpdateEvaluationJobRequest, global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob>(serviceImpl.UpdateEvaluationJob));
      serviceBinder.AddMethod(__Method_GetEvaluationJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.GetEvaluationJobRequest, global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob>(serviceImpl.GetEvaluationJob));
      serviceBinder.AddMethod(__Method_PauseEvaluationJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.PauseEvaluationJobRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.PauseEvaluationJob));
      serviceBinder.AddMethod(__Method_ResumeEvaluationJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.ResumeEvaluationJobRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ResumeEvaluationJob));
      serviceBinder.AddMethod(__Method_DeleteEvaluationJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.DeleteEvaluationJobRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteEvaluationJob));
      serviceBinder.AddMethod(__Method_ListEvaluationJobs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsRequest, global::Google.Cloud.DataLabeling.V1Beta1.ListEvaluationJobsResponse>(serviceImpl.ListEvaluationJobs));
    }

  }
}
#endregion
