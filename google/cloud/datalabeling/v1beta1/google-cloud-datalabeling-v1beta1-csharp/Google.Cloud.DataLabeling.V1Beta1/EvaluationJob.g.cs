// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/datalabeling/v1beta1/evaluation_job.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.DataLabeling.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/datalabeling/v1beta1/evaluation_job.proto</summary>
  public static partial class EvaluationJobReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/datalabeling/v1beta1/evaluation_job.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EvaluationJobReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZnb29nbGUvY2xvdWQvZGF0YWxhYmVsaW5nL3YxYmV0YTEvZXZhbHVhdGlv",
            "bl9qb2IucHJvdG8SIWdvb2dsZS5jbG91ZC5kYXRhbGFiZWxpbmcudjFiZXRh",
            "MRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxoZZ29vZ2xlL2FwaS9y",
            "ZXNvdXJjZS5wcm90bxovZ29vZ2xlL2Nsb3VkL2RhdGFsYWJlbGluZy92MWJl",
            "dGExL2RhdGFzZXQucHJvdG8aMmdvb2dsZS9jbG91ZC9kYXRhbGFiZWxpbmcv",
            "djFiZXRhMS9ldmFsdWF0aW9uLnByb3RvGj9nb29nbGUvY2xvdWQvZGF0YWxh",
            "YmVsaW5nL3YxYmV0YTEvaHVtYW5fYW5ub3RhdGlvbl9jb25maWcucHJvdG8a",
            "H2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aF2dvb2dsZS9ycGMv",
            "c3RhdHVzLnByb3RvIuIECg1FdmFsdWF0aW9uSm9iEgwKBG5hbWUYASABKAkS",
            "EwoLZGVzY3JpcHRpb24YAiABKAkSRQoFc3RhdGUYAyABKA4yNi5nb29nbGUu",
            "Y2xvdWQuZGF0YWxhYmVsaW5nLnYxYmV0YTEuRXZhbHVhdGlvbkpvYi5TdGF0",
            "ZRIQCghzY2hlZHVsZRgEIAEoCRIVCg1tb2RlbF92ZXJzaW9uGAUgASgJElUK",
            "FWV2YWx1YXRpb25fam9iX2NvbmZpZxgGIAEoCzI2Lmdvb2dsZS5jbG91ZC5k",
            "YXRhbGFiZWxpbmcudjFiZXRhMS5FdmFsdWF0aW9uSm9iQ29uZmlnEhsKE2Fu",
            "bm90YXRpb25fc3BlY19zZXQYByABKAkSIgoabGFiZWxfbWlzc2luZ19ncm91",
            "bmRfdHJ1dGgYCCABKAgSPAoIYXR0ZW1wdHMYCSADKAsyKi5nb29nbGUuY2xv",
            "dWQuZGF0YWxhYmVsaW5nLnYxYmV0YTEuQXR0ZW1wdBIvCgtjcmVhdGVfdGlt",
            "ZRgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiUwoFU3RhdGUS",
            "FQoRU1RBVEVfVU5TUEVDSUZJRUQQABINCglTQ0hFRFVMRUQQARILCgdSVU5O",
            "SU5HEAISCgoGUEFVU0VEEAMSCwoHU1RPUFBFRBAEOmLqQV8KKWRhdGFsYWJl",
            "bGluZy5nb29nbGVhcGlzLmNvbS9FdmFsdWF0aW9uSm9iEjJwcm9qZWN0cy97",
            "cHJvamVjdH0vZXZhbHVhdGlvbkpvYnMve2V2YWx1YXRpb25fam9ifSKNBwoT",
            "RXZhbHVhdGlvbkpvYkNvbmZpZxJjChtpbWFnZV9jbGFzc2lmaWNhdGlvbl9j",
            "b25maWcYBCABKAsyPC5nb29nbGUuY2xvdWQuZGF0YWxhYmVsaW5nLnYxYmV0",
            "YTEuSW1hZ2VDbGFzc2lmaWNhdGlvbkNvbmZpZ0gAElUKFGJvdW5kaW5nX3Bv",
            "bHlfY29uZmlnGAUgASgLMjUuZ29vZ2xlLmNsb3VkLmRhdGFsYWJlbGluZy52",
            "MWJldGExLkJvdW5kaW5nUG9seUNvbmZpZ0gAEmEKGnRleHRfY2xhc3NpZmlj",
            "YXRpb25fY29uZmlnGAggASgLMjsuZ29vZ2xlLmNsb3VkLmRhdGFsYWJlbGlu",
            "Zy52MWJldGExLlRleHRDbGFzc2lmaWNhdGlvbkNvbmZpZ0gAEkQKDGlucHV0",
            "X2NvbmZpZxgBIAEoCzIuLmdvb2dsZS5jbG91ZC5kYXRhbGFiZWxpbmcudjFi",
            "ZXRhMS5JbnB1dENvbmZpZxJOChFldmFsdWF0aW9uX2NvbmZpZxgCIAEoCzIz",
            "Lmdvb2dsZS5jbG91ZC5kYXRhbGFiZWxpbmcudjFiZXRhMS5FdmFsdWF0aW9u",
            "Q29uZmlnElkKF2h1bWFuX2Fubm90YXRpb25fY29uZmlnGAMgASgLMjguZ29v",
            "Z2xlLmNsb3VkLmRhdGFsYWJlbGluZy52MWJldGExLkh1bWFuQW5ub3RhdGlv",
            "bkNvbmZpZxJsChRiaWdxdWVyeV9pbXBvcnRfa2V5cxgJIAMoCzJOLmdvb2ds",
            "ZS5jbG91ZC5kYXRhbGFiZWxpbmcudjFiZXRhMS5FdmFsdWF0aW9uSm9iQ29u",
            "ZmlnLkJpZ3F1ZXJ5SW1wb3J0S2V5c0VudHJ5EhUKDWV4YW1wbGVfY291bnQY",
            "CiABKAUSIQoZZXhhbXBsZV9zYW1wbGVfcGVyY2VudGFnZRgLIAEoARJgChtl",
            "dmFsdWF0aW9uX2pvYl9hbGVydF9jb25maWcYDSABKAsyOy5nb29nbGUuY2xv",
            "dWQuZGF0YWxhYmVsaW5nLnYxYmV0YTEuRXZhbHVhdGlvbkpvYkFsZXJ0Q29u",
            "ZmlnGjkKF0JpZ3F1ZXJ5SW1wb3J0S2V5c0VudHJ5EgsKA2tleRgBIAEoCRIN",
            "CgV2YWx1ZRgCIAEoCToCOAFCIQofaHVtYW5fYW5ub3RhdGlvbl9yZXF1ZXN0",
            "X2NvbmZpZyJYChhFdmFsdWF0aW9uSm9iQWxlcnRDb25maWcSDQoFZW1haWwY",
            "ASABKAkSLQolbWluX2FjY2VwdGFibGVfbWVhbl9hdmVyYWdlX3ByZWNpc2lv",
            "bhgCIAEoASJpCgdBdHRlbXB0EjAKDGF0dGVtcHRfdGltZRgBIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoQcGFydGlhbF9mYWlsdXJlcxgC",
            "IAMoCzISLmdvb2dsZS5ycGMuU3RhdHVzQucBCiVjb20uZ29vZ2xlLmNsb3Vk",
            "LmRhdGFsYWJlbGluZy52MWJldGExUAFaTWdvb2dsZS5nb2xhbmcub3JnL2dl",
            "bnByb3RvL2dvb2dsZWFwaXMvY2xvdWQvZGF0YWxhYmVsaW5nL3YxYmV0YTE7",
            "ZGF0YWxhYmVsaW5nqgIhR29vZ2xlLkNsb3VkLkRhdGFMYWJlbGluZy5WMUJl",
            "dGExygIhR29vZ2xlXENsb3VkXERhdGFMYWJlbGluZ1xWMWJldGEx6gIkR29v",
            "Z2xlOjpDbG91ZDo6RGF0YUxhYmVsaW5nOjpWMWJldGExYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.DataLabeling.V1Beta1.DatasetReflection.Descriptor, global::Google.Cloud.DataLabeling.V1Beta1.EvaluationReflection.Descriptor, global::Google.Cloud.DataLabeling.V1Beta1.HumanAnnotationConfigReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob), global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Parser, new[]{ "Name", "Description", "State", "Schedule", "ModelVersion", "EvaluationJobConfig", "AnnotationSpecSet", "LabelMissingGroundTruth", "Attempts", "CreateTime" }, null, new[]{ typeof(global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobConfig), global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobConfig.Parser, new[]{ "ImageClassificationConfig", "BoundingPolyConfig", "TextClassificationConfig", "InputConfig", "EvaluationConfig", "HumanAnnotationConfig", "BigqueryImportKeys", "ExampleCount", "ExampleSamplePercentage", "EvaluationJobAlertConfig" }, new[]{ "HumanAnnotationRequestConfig" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobAlertConfig), global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobAlertConfig.Parser, new[]{ "Email", "MinAcceptableMeanAveragePrecision" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DataLabeling.V1Beta1.Attempt), global::Google.Cloud.DataLabeling.V1Beta1.Attempt.Parser, new[]{ "AttemptTime", "PartialFailures" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Defines an evaluation job that runs periodically to generate
  /// [Evaluations][google.cloud.datalabeling.v1beta1.Evaluation]. [Creating an evaluation
  /// job](/ml-engine/docs/continuous-evaluation/create-job) is the starting point
  /// for using continuous evaluation.
  /// </summary>
  public sealed partial class EvaluationJob : pb::IMessage<EvaluationJob>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EvaluationJob> _parser = new pb::MessageParser<EvaluationJob>(() => new EvaluationJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EvaluationJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvaluationJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvaluationJob(EvaluationJob other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      state_ = other.state_;
      schedule_ = other.schedule_;
      modelVersion_ = other.modelVersion_;
      evaluationJobConfig_ = other.evaluationJobConfig_ != null ? other.evaluationJobConfig_.Clone() : null;
      annotationSpecSet_ = other.annotationSpecSet_;
      labelMissingGroundTruth_ = other.labelMissingGroundTruth_;
      attempts_ = other.attempts_.Clone();
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvaluationJob Clone() {
      return new EvaluationJob(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. After you create a job, Data Labeling Service assigns a name
    /// to the job with the following format:
    ///
    /// "projects/&lt;var>{project_id}&lt;/var>/evaluationJobs/&lt;var>{evaluation_job_id}&lt;/var>"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Required. Description of the job. The description can be up to 25,000
    /// characters long.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Types.State state_ = global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Types.State.Unspecified;
    /// <summary>
    /// Output only. Describes the current state of the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 4;
    private string schedule_ = "";
    /// <summary>
    /// Required. Describes the interval at which the job runs. This interval must
    /// be at least 1 day, and it is rounded to the nearest day. For example, if
    /// you specify a 50-hour interval, the job runs every 2 days.
    ///
    /// You can provide the schedule in
    /// [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an
    /// [English-like
    /// format](/appengine/docs/standard/python/config/cronref#schedule_format).
    ///
    /// Regardless of what you specify, the job will run at 10:00 AM UTC. Only the
    /// interval from this schedule is used, not the specific time of day.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Schedule {
      get { return schedule_; }
      set {
        schedule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_version" field.</summary>
    public const int ModelVersionFieldNumber = 5;
    private string modelVersion_ = "";
    /// <summary>
    /// Required. The [AI Platform Prediction model
    /// version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction
    /// input and output is sampled from this model version. When creating an
    /// evaluation job, specify the model version in the following format:
    ///
    /// "projects/&lt;var>{project_id}&lt;/var>/models/&lt;var>{model_name}&lt;/var>/versions/&lt;var>{version_name}&lt;/var>"
    ///
    /// There can only be one evaluation job per model version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelVersion {
      get { return modelVersion_; }
      set {
        modelVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "evaluation_job_config" field.</summary>
    public const int EvaluationJobConfigFieldNumber = 6;
    private global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobConfig evaluationJobConfig_;
    /// <summary>
    /// Required. Configuration details for the evaluation job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobConfig EvaluationJobConfig {
      get { return evaluationJobConfig_; }
      set {
        evaluationJobConfig_ = value;
      }
    }

    /// <summary>Field number for the "annotation_spec_set" field.</summary>
    public const int AnnotationSpecSetFieldNumber = 7;
    private string annotationSpecSet_ = "";
    /// <summary>
    /// Required. Name of the [AnnotationSpecSet][google.cloud.datalabeling.v1beta1.AnnotationSpecSet] describing all the
    /// labels that your machine learning model outputs. You must create this
    /// resource before you create an evaluation job and provide its name in the
    /// following format:
    ///
    /// "projects/&lt;var>{project_id}&lt;/var>/annotationSpecSets/&lt;var>{annotation_spec_set_id}&lt;/var>"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnnotationSpecSet {
      get { return annotationSpecSet_; }
      set {
        annotationSpecSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "label_missing_ground_truth" field.</summary>
    public const int LabelMissingGroundTruthFieldNumber = 8;
    private bool labelMissingGroundTruth_;
    /// <summary>
    /// Required. Whether you want Data Labeling Service to provide ground truth
    /// labels for prediction input. If you want the service to assign human
    /// labelers to annotate your data, set this to `true`. If you want to provide
    /// your own ground truth labels in the evaluation job's BigQuery table, set
    /// this to `false`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LabelMissingGroundTruth {
      get { return labelMissingGroundTruth_; }
      set {
        labelMissingGroundTruth_ = value;
      }
    }

    /// <summary>Field number for the "attempts" field.</summary>
    public const int AttemptsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Google.Cloud.DataLabeling.V1Beta1.Attempt> _repeated_attempts_codec
        = pb::FieldCodec.ForMessage(74, global::Google.Cloud.DataLabeling.V1Beta1.Attempt.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DataLabeling.V1Beta1.Attempt> attempts_ = new pbc::RepeatedField<global::Google.Cloud.DataLabeling.V1Beta1.Attempt>();
    /// <summary>
    /// Output only. Every time the evaluation job runs and an error occurs, the
    /// failed attempt is appended to this array.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DataLabeling.V1Beta1.Attempt> Attempts {
      get { return attempts_; }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Timestamp of when this evaluation job was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EvaluationJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EvaluationJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (State != other.State) return false;
      if (Schedule != other.Schedule) return false;
      if (ModelVersion != other.ModelVersion) return false;
      if (!object.Equals(EvaluationJobConfig, other.EvaluationJobConfig)) return false;
      if (AnnotationSpecSet != other.AnnotationSpecSet) return false;
      if (LabelMissingGroundTruth != other.LabelMissingGroundTruth) return false;
      if(!attempts_.Equals(other.attempts_)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (State != global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (Schedule.Length != 0) hash ^= Schedule.GetHashCode();
      if (ModelVersion.Length != 0) hash ^= ModelVersion.GetHashCode();
      if (evaluationJobConfig_ != null) hash ^= EvaluationJobConfig.GetHashCode();
      if (AnnotationSpecSet.Length != 0) hash ^= AnnotationSpecSet.GetHashCode();
      if (LabelMissingGroundTruth != false) hash ^= LabelMissingGroundTruth.GetHashCode();
      hash ^= attempts_.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (State != global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (Schedule.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Schedule);
      }
      if (ModelVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ModelVersion);
      }
      if (evaluationJobConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(EvaluationJobConfig);
      }
      if (AnnotationSpecSet.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AnnotationSpecSet);
      }
      if (LabelMissingGroundTruth != false) {
        output.WriteRawTag(64);
        output.WriteBool(LabelMissingGroundTruth);
      }
      attempts_.WriteTo(output, _repeated_attempts_codec);
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (State != global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (Schedule.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Schedule);
      }
      if (ModelVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ModelVersion);
      }
      if (evaluationJobConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(EvaluationJobConfig);
      }
      if (AnnotationSpecSet.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AnnotationSpecSet);
      }
      if (LabelMissingGroundTruth != false) {
        output.WriteRawTag(64);
        output.WriteBool(LabelMissingGroundTruth);
      }
      attempts_.WriteTo(ref output, _repeated_attempts_codec);
      if (createTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (State != global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Schedule.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Schedule);
      }
      if (ModelVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelVersion);
      }
      if (evaluationJobConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EvaluationJobConfig);
      }
      if (AnnotationSpecSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnnotationSpecSet);
      }
      if (LabelMissingGroundTruth != false) {
        size += 1 + 1;
      }
      size += attempts_.CalculateSize(_repeated_attempts_codec);
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EvaluationJob other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.State != global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.Schedule.Length != 0) {
        Schedule = other.Schedule;
      }
      if (other.ModelVersion.Length != 0) {
        ModelVersion = other.ModelVersion;
      }
      if (other.evaluationJobConfig_ != null) {
        if (evaluationJobConfig_ == null) {
          EvaluationJobConfig = new global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobConfig();
        }
        EvaluationJobConfig.MergeFrom(other.EvaluationJobConfig);
      }
      if (other.AnnotationSpecSet.Length != 0) {
        AnnotationSpecSet = other.AnnotationSpecSet;
      }
      if (other.LabelMissingGroundTruth != false) {
        LabelMissingGroundTruth = other.LabelMissingGroundTruth;
      }
      attempts_.Add(other.attempts_);
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 24: {
            State = (global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Types.State) input.ReadEnum();
            break;
          }
          case 34: {
            Schedule = input.ReadString();
            break;
          }
          case 42: {
            ModelVersion = input.ReadString();
            break;
          }
          case 50: {
            if (evaluationJobConfig_ == null) {
              EvaluationJobConfig = new global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobConfig();
            }
            input.ReadMessage(EvaluationJobConfig);
            break;
          }
          case 58: {
            AnnotationSpecSet = input.ReadString();
            break;
          }
          case 64: {
            LabelMissingGroundTruth = input.ReadBool();
            break;
          }
          case 74: {
            attempts_.AddEntriesFrom(input, _repeated_attempts_codec);
            break;
          }
          case 82: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 24: {
            State = (global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJob.Types.State) input.ReadEnum();
            break;
          }
          case 34: {
            Schedule = input.ReadString();
            break;
          }
          case 42: {
            ModelVersion = input.ReadString();
            break;
          }
          case 50: {
            if (evaluationJobConfig_ == null) {
              EvaluationJobConfig = new global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobConfig();
            }
            input.ReadMessage(EvaluationJobConfig);
            break;
          }
          case 58: {
            AnnotationSpecSet = input.ReadString();
            break;
          }
          case 64: {
            LabelMissingGroundTruth = input.ReadBool();
            break;
          }
          case 74: {
            attempts_.AddEntriesFrom(ref input, _repeated_attempts_codec);
            break;
          }
          case 82: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the EvaluationJob message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// State of the job.
      /// </summary>
      public enum State {
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The job is scheduled to run at the [configured interval][google.cloud.datalabeling.v1beta1.EvaluationJob.schedule]. You
        /// can [pause][google.cloud.datalabeling.v1beta1.DataLabelingService.PauseEvaluationJob] or
        /// [delete][google.cloud.datalabeling.v1beta1.DataLabelingService.DeleteEvaluationJob] the job.
        ///
        /// When the job is in this state, it samples prediction input and output
        /// from your model version into your BigQuery table as predictions occur.
        /// </summary>
        [pbr::OriginalName("SCHEDULED")] Scheduled = 1,
        /// <summary>
        /// The job is currently running. When the job runs, Data Labeling Service
        /// does several things:
        ///
        /// 1. If you have configured your job to use Data Labeling Service for
        ///    ground truth labeling, the service creates a
        ///    [Dataset][google.cloud.datalabeling.v1beta1.Dataset] and a labeling task for all data sampled
        ///    since the last time the job ran. Human labelers provide ground truth
        ///    labels for your data. Human labeling may take hours, or even days,
        ///    depending on how much data has been sampled. The job remains in the
        ///    `RUNNING` state during this time, and it can even be running multiple
        ///    times in parallel if it gets triggered again (for example 24 hours
        ///    later) before the earlier run has completed. When human labelers have
        ///    finished labeling the data, the next step occurs.
        ///    &lt;br>&lt;br>
        ///    If you have configured your job to provide your own ground truth
        ///    labels, Data Labeling Service still creates a [Dataset][google.cloud.datalabeling.v1beta1.Dataset] for newly
        ///    sampled data, but it expects that you have already added ground truth
        ///    labels to the BigQuery table by this time. The next step occurs
        ///    immediately.
        ///
        /// 2. Data Labeling Service creates an [Evaluation][google.cloud.datalabeling.v1beta1.Evaluation] by comparing your
        ///    model version's predictions with the ground truth labels.
        ///
        /// If the job remains in this state for a long time, it continues to sample
        /// prediction data into your BigQuery table and will run again at the next
        /// interval, even if it causes the job to run multiple times in parallel.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// The job is not sampling prediction input and output into your BigQuery
        /// table and it will not run according to its schedule. You can
        /// [resume][google.cloud.datalabeling.v1beta1.DataLabelingService.ResumeEvaluationJob] the job.
        /// </summary>
        [pbr::OriginalName("PAUSED")] Paused = 3,
        /// <summary>
        /// The job has this state right before it is deleted.
        /// </summary>
        [pbr::OriginalName("STOPPED")] Stopped = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Configures specific details of how a continuous evaluation job works. Provide
  /// this configuration when you create an EvaluationJob.
  /// </summary>
  public sealed partial class EvaluationJobConfig : pb::IMessage<EvaluationJobConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EvaluationJobConfig> _parser = new pb::MessageParser<EvaluationJobConfig>(() => new EvaluationJobConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EvaluationJobConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvaluationJobConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvaluationJobConfig(EvaluationJobConfig other) : this() {
      inputConfig_ = other.inputConfig_ != null ? other.inputConfig_.Clone() : null;
      evaluationConfig_ = other.evaluationConfig_ != null ? other.evaluationConfig_.Clone() : null;
      humanAnnotationConfig_ = other.humanAnnotationConfig_ != null ? other.humanAnnotationConfig_.Clone() : null;
      bigqueryImportKeys_ = other.bigqueryImportKeys_.Clone();
      exampleCount_ = other.exampleCount_;
      exampleSamplePercentage_ = other.exampleSamplePercentage_;
      evaluationJobAlertConfig_ = other.evaluationJobAlertConfig_ != null ? other.evaluationJobAlertConfig_.Clone() : null;
      switch (other.HumanAnnotationRequestConfigCase) {
        case HumanAnnotationRequestConfigOneofCase.ImageClassificationConfig:
          ImageClassificationConfig = other.ImageClassificationConfig.Clone();
          break;
        case HumanAnnotationRequestConfigOneofCase.BoundingPolyConfig:
          BoundingPolyConfig = other.BoundingPolyConfig.Clone();
          break;
        case HumanAnnotationRequestConfigOneofCase.TextClassificationConfig:
          TextClassificationConfig = other.TextClassificationConfig.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvaluationJobConfig Clone() {
      return new EvaluationJobConfig(this);
    }

    /// <summary>Field number for the "image_classification_config" field.</summary>
    public const int ImageClassificationConfigFieldNumber = 4;
    /// <summary>
    /// Specify this field if your model version performs image classification or
    /// general classification.
    ///
    /// `annotationSpecSet` in this configuration must match
    /// [EvaluationJob.annotationSpecSet][google.cloud.datalabeling.v1beta1.EvaluationJob.annotation_spec_set].
    /// `allowMultiLabel` in this configuration must match
    /// `classificationMetadata.isMultiLabel` in [input_config][google.cloud.datalabeling.v1beta1.EvaluationJobConfig.input_config].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataLabeling.V1Beta1.ImageClassificationConfig ImageClassificationConfig {
      get { return humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.ImageClassificationConfig ? (global::Google.Cloud.DataLabeling.V1Beta1.ImageClassificationConfig) humanAnnotationRequestConfig_ : null; }
      set {
        humanAnnotationRequestConfig_ = value;
        humanAnnotationRequestConfigCase_ = value == null ? HumanAnnotationRequestConfigOneofCase.None : HumanAnnotationRequestConfigOneofCase.ImageClassificationConfig;
      }
    }

    /// <summary>Field number for the "bounding_poly_config" field.</summary>
    public const int BoundingPolyConfigFieldNumber = 5;
    /// <summary>
    /// Specify this field if your model version performs image object detection
    /// (bounding box detection).
    ///
    /// `annotationSpecSet` in this configuration must match
    /// [EvaluationJob.annotationSpecSet][google.cloud.datalabeling.v1beta1.EvaluationJob.annotation_spec_set].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataLabeling.V1Beta1.BoundingPolyConfig BoundingPolyConfig {
      get { return humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.BoundingPolyConfig ? (global::Google.Cloud.DataLabeling.V1Beta1.BoundingPolyConfig) humanAnnotationRequestConfig_ : null; }
      set {
        humanAnnotationRequestConfig_ = value;
        humanAnnotationRequestConfigCase_ = value == null ? HumanAnnotationRequestConfigOneofCase.None : HumanAnnotationRequestConfigOneofCase.BoundingPolyConfig;
      }
    }

    /// <summary>Field number for the "text_classification_config" field.</summary>
    public const int TextClassificationConfigFieldNumber = 8;
    /// <summary>
    /// Specify this field if your model version performs text classification.
    ///
    /// `annotationSpecSet` in this configuration must match
    /// [EvaluationJob.annotationSpecSet][google.cloud.datalabeling.v1beta1.EvaluationJob.annotation_spec_set].
    /// `allowMultiLabel` in this configuration must match
    /// `classificationMetadata.isMultiLabel` in [input_config][google.cloud.datalabeling.v1beta1.EvaluationJobConfig.input_config].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataLabeling.V1Beta1.TextClassificationConfig TextClassificationConfig {
      get { return humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.TextClassificationConfig ? (global::Google.Cloud.DataLabeling.V1Beta1.TextClassificationConfig) humanAnnotationRequestConfig_ : null; }
      set {
        humanAnnotationRequestConfig_ = value;
        humanAnnotationRequestConfigCase_ = value == null ? HumanAnnotationRequestConfigOneofCase.None : HumanAnnotationRequestConfigOneofCase.TextClassificationConfig;
      }
    }

    /// <summary>Field number for the "input_config" field.</summary>
    public const int InputConfigFieldNumber = 1;
    private global::Google.Cloud.DataLabeling.V1Beta1.InputConfig inputConfig_;
    /// <summary>
    /// Rquired. Details for the sampled prediction input. Within this
    /// configuration, there are requirements for several fields:
    ///
    /// * `dataType` must be one of `IMAGE`, `TEXT`, or `GENERAL_DATA`.
    /// * `annotationType` must be one of `IMAGE_CLASSIFICATION_ANNOTATION`,
    ///   `TEXT_CLASSIFICATION_ANNOTATION`, `GENERAL_CLASSIFICATION_ANNOTATION`,
    ///   or `IMAGE_BOUNDING_BOX_ANNOTATION` (image object detection).
    /// * If your machine learning model performs classification, you must specify
    ///   `classificationMetadata.isMultiLabel`.
    /// * You must specify `bigquerySource` (not `gcsSource`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataLabeling.V1Beta1.InputConfig InputConfig {
      get { return inputConfig_; }
      set {
        inputConfig_ = value;
      }
    }

    /// <summary>Field number for the "evaluation_config" field.</summary>
    public const int EvaluationConfigFieldNumber = 2;
    private global::Google.Cloud.DataLabeling.V1Beta1.EvaluationConfig evaluationConfig_;
    /// <summary>
    /// Required. Details for calculating evaluation metrics and creating
    /// [Evaulations][google.cloud.datalabeling.v1beta1.Evaluation]. If your model version performs image object
    /// detection, you must specify the `boundingBoxEvaluationOptions` field within
    /// this configuration. Otherwise, provide an empty object for this
    /// configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataLabeling.V1Beta1.EvaluationConfig EvaluationConfig {
      get { return evaluationConfig_; }
      set {
        evaluationConfig_ = value;
      }
    }

    /// <summary>Field number for the "human_annotation_config" field.</summary>
    public const int HumanAnnotationConfigFieldNumber = 3;
    private global::Google.Cloud.DataLabeling.V1Beta1.HumanAnnotationConfig humanAnnotationConfig_;
    /// <summary>
    /// Optional. Details for human annotation of your data. If you set
    /// [labelMissingGroundTruth][google.cloud.datalabeling.v1beta1.EvaluationJob.label_missing_ground_truth] to
    /// `true` for this evaluation job, then you must specify this field. If you
    /// plan to provide your own ground truth labels, then omit this field.
    ///
    /// Note that you must create an [Instruction][google.cloud.datalabeling.v1beta1.Instruction] resource before you can
    /// specify this field. Provide the name of the instruction resource in the
    /// `instruction` field within this configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataLabeling.V1Beta1.HumanAnnotationConfig HumanAnnotationConfig {
      get { return humanAnnotationConfig_; }
      set {
        humanAnnotationConfig_ = value;
      }
    }

    /// <summary>Field number for the "bigquery_import_keys" field.</summary>
    public const int BigqueryImportKeysFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_bigqueryImportKeys_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 74);
    private readonly pbc::MapField<string, string> bigqueryImportKeys_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Required. Prediction keys that tell Data Labeling Service where to find the
    /// data for evaluation in your BigQuery table. When the service samples
    /// prediction input and output from your model version and saves it to
    /// BigQuery, the data gets stored as JSON strings in the BigQuery table. These
    /// keys tell Data Labeling Service how to parse the JSON.
    ///
    /// You can provide the following entries in this field:
    ///
    /// * `data_json_key`: the data key for prediction input. You must provide
    ///   either this key or `reference_json_key`.
    /// * `reference_json_key`: the data reference key for prediction input. You
    ///   must provide either this key or `data_json_key`.
    /// * `label_json_key`: the label key for prediction output. Required.
    /// * `label_score_json_key`: the score key for prediction output. Required.
    /// * `bounding_box_json_key`: the bounding box key for prediction output.
    ///   Required if your model version perform image object detection.
    ///
    /// Learn [how to configure prediction
    /// keys](/ml-engine/docs/continuous-evaluation/create-job#prediction-keys).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> BigqueryImportKeys {
      get { return bigqueryImportKeys_; }
    }

    /// <summary>Field number for the "example_count" field.</summary>
    public const int ExampleCountFieldNumber = 10;
    private int exampleCount_;
    /// <summary>
    /// Required. The maximum number of predictions to sample and save to BigQuery
    /// during each [evaluation interval][google.cloud.datalabeling.v1beta1.EvaluationJob.schedule]. This limit
    /// overrides `example_sample_percentage`: even if the service has not sampled
    /// enough predictions to fulfill `example_sample_perecentage` during an
    /// interval, it stops sampling predictions when it meets this limit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExampleCount {
      get { return exampleCount_; }
      set {
        exampleCount_ = value;
      }
    }

    /// <summary>Field number for the "example_sample_percentage" field.</summary>
    public const int ExampleSamplePercentageFieldNumber = 11;
    private double exampleSamplePercentage_;
    /// <summary>
    /// Required. Fraction of predictions to sample and save to BigQuery during
    /// each [evaluation interval][google.cloud.datalabeling.v1beta1.EvaluationJob.schedule]. For example, 0.1 means
    /// 10% of predictions served by your model version get saved to BigQuery.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ExampleSamplePercentage {
      get { return exampleSamplePercentage_; }
      set {
        exampleSamplePercentage_ = value;
      }
    }

    /// <summary>Field number for the "evaluation_job_alert_config" field.</summary>
    public const int EvaluationJobAlertConfigFieldNumber = 13;
    private global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobAlertConfig evaluationJobAlertConfig_;
    /// <summary>
    /// Optional. Configuration details for evaluation job alerts. Specify this
    /// field if you want to receive email alerts if the evaluation job finds that
    /// your predictions have low mean average precision during a run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobAlertConfig EvaluationJobAlertConfig {
      get { return evaluationJobAlertConfig_; }
      set {
        evaluationJobAlertConfig_ = value;
      }
    }

    private object humanAnnotationRequestConfig_;
    /// <summary>Enum of possible cases for the "human_annotation_request_config" oneof.</summary>
    public enum HumanAnnotationRequestConfigOneofCase {
      None = 0,
      ImageClassificationConfig = 4,
      BoundingPolyConfig = 5,
      TextClassificationConfig = 8,
    }
    private HumanAnnotationRequestConfigOneofCase humanAnnotationRequestConfigCase_ = HumanAnnotationRequestConfigOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HumanAnnotationRequestConfigOneofCase HumanAnnotationRequestConfigCase {
      get { return humanAnnotationRequestConfigCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHumanAnnotationRequestConfig() {
      humanAnnotationRequestConfigCase_ = HumanAnnotationRequestConfigOneofCase.None;
      humanAnnotationRequestConfig_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EvaluationJobConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EvaluationJobConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ImageClassificationConfig, other.ImageClassificationConfig)) return false;
      if (!object.Equals(BoundingPolyConfig, other.BoundingPolyConfig)) return false;
      if (!object.Equals(TextClassificationConfig, other.TextClassificationConfig)) return false;
      if (!object.Equals(InputConfig, other.InputConfig)) return false;
      if (!object.Equals(EvaluationConfig, other.EvaluationConfig)) return false;
      if (!object.Equals(HumanAnnotationConfig, other.HumanAnnotationConfig)) return false;
      if (!BigqueryImportKeys.Equals(other.BigqueryImportKeys)) return false;
      if (ExampleCount != other.ExampleCount) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ExampleSamplePercentage, other.ExampleSamplePercentage)) return false;
      if (!object.Equals(EvaluationJobAlertConfig, other.EvaluationJobAlertConfig)) return false;
      if (HumanAnnotationRequestConfigCase != other.HumanAnnotationRequestConfigCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.ImageClassificationConfig) hash ^= ImageClassificationConfig.GetHashCode();
      if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.BoundingPolyConfig) hash ^= BoundingPolyConfig.GetHashCode();
      if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.TextClassificationConfig) hash ^= TextClassificationConfig.GetHashCode();
      if (inputConfig_ != null) hash ^= InputConfig.GetHashCode();
      if (evaluationConfig_ != null) hash ^= EvaluationConfig.GetHashCode();
      if (humanAnnotationConfig_ != null) hash ^= HumanAnnotationConfig.GetHashCode();
      hash ^= BigqueryImportKeys.GetHashCode();
      if (ExampleCount != 0) hash ^= ExampleCount.GetHashCode();
      if (ExampleSamplePercentage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ExampleSamplePercentage);
      if (evaluationJobAlertConfig_ != null) hash ^= EvaluationJobAlertConfig.GetHashCode();
      hash ^= (int) humanAnnotationRequestConfigCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (inputConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InputConfig);
      }
      if (evaluationConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EvaluationConfig);
      }
      if (humanAnnotationConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HumanAnnotationConfig);
      }
      if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.ImageClassificationConfig) {
        output.WriteRawTag(34);
        output.WriteMessage(ImageClassificationConfig);
      }
      if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.BoundingPolyConfig) {
        output.WriteRawTag(42);
        output.WriteMessage(BoundingPolyConfig);
      }
      if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.TextClassificationConfig) {
        output.WriteRawTag(66);
        output.WriteMessage(TextClassificationConfig);
      }
      bigqueryImportKeys_.WriteTo(output, _map_bigqueryImportKeys_codec);
      if (ExampleCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ExampleCount);
      }
      if (ExampleSamplePercentage != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(ExampleSamplePercentage);
      }
      if (evaluationJobAlertConfig_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(EvaluationJobAlertConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (inputConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InputConfig);
      }
      if (evaluationConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EvaluationConfig);
      }
      if (humanAnnotationConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HumanAnnotationConfig);
      }
      if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.ImageClassificationConfig) {
        output.WriteRawTag(34);
        output.WriteMessage(ImageClassificationConfig);
      }
      if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.BoundingPolyConfig) {
        output.WriteRawTag(42);
        output.WriteMessage(BoundingPolyConfig);
      }
      if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.TextClassificationConfig) {
        output.WriteRawTag(66);
        output.WriteMessage(TextClassificationConfig);
      }
      bigqueryImportKeys_.WriteTo(ref output, _map_bigqueryImportKeys_codec);
      if (ExampleCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ExampleCount);
      }
      if (ExampleSamplePercentage != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(ExampleSamplePercentage);
      }
      if (evaluationJobAlertConfig_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(EvaluationJobAlertConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.ImageClassificationConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageClassificationConfig);
      }
      if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.BoundingPolyConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoundingPolyConfig);
      }
      if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.TextClassificationConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextClassificationConfig);
      }
      if (inputConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InputConfig);
      }
      if (evaluationConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EvaluationConfig);
      }
      if (humanAnnotationConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HumanAnnotationConfig);
      }
      size += bigqueryImportKeys_.CalculateSize(_map_bigqueryImportKeys_codec);
      if (ExampleCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExampleCount);
      }
      if (ExampleSamplePercentage != 0D) {
        size += 1 + 8;
      }
      if (evaluationJobAlertConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EvaluationJobAlertConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EvaluationJobConfig other) {
      if (other == null) {
        return;
      }
      if (other.inputConfig_ != null) {
        if (inputConfig_ == null) {
          InputConfig = new global::Google.Cloud.DataLabeling.V1Beta1.InputConfig();
        }
        InputConfig.MergeFrom(other.InputConfig);
      }
      if (other.evaluationConfig_ != null) {
        if (evaluationConfig_ == null) {
          EvaluationConfig = new global::Google.Cloud.DataLabeling.V1Beta1.EvaluationConfig();
        }
        EvaluationConfig.MergeFrom(other.EvaluationConfig);
      }
      if (other.humanAnnotationConfig_ != null) {
        if (humanAnnotationConfig_ == null) {
          HumanAnnotationConfig = new global::Google.Cloud.DataLabeling.V1Beta1.HumanAnnotationConfig();
        }
        HumanAnnotationConfig.MergeFrom(other.HumanAnnotationConfig);
      }
      bigqueryImportKeys_.Add(other.bigqueryImportKeys_);
      if (other.ExampleCount != 0) {
        ExampleCount = other.ExampleCount;
      }
      if (other.ExampleSamplePercentage != 0D) {
        ExampleSamplePercentage = other.ExampleSamplePercentage;
      }
      if (other.evaluationJobAlertConfig_ != null) {
        if (evaluationJobAlertConfig_ == null) {
          EvaluationJobAlertConfig = new global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobAlertConfig();
        }
        EvaluationJobAlertConfig.MergeFrom(other.EvaluationJobAlertConfig);
      }
      switch (other.HumanAnnotationRequestConfigCase) {
        case HumanAnnotationRequestConfigOneofCase.ImageClassificationConfig:
          if (ImageClassificationConfig == null) {
            ImageClassificationConfig = new global::Google.Cloud.DataLabeling.V1Beta1.ImageClassificationConfig();
          }
          ImageClassificationConfig.MergeFrom(other.ImageClassificationConfig);
          break;
        case HumanAnnotationRequestConfigOneofCase.BoundingPolyConfig:
          if (BoundingPolyConfig == null) {
            BoundingPolyConfig = new global::Google.Cloud.DataLabeling.V1Beta1.BoundingPolyConfig();
          }
          BoundingPolyConfig.MergeFrom(other.BoundingPolyConfig);
          break;
        case HumanAnnotationRequestConfigOneofCase.TextClassificationConfig:
          if (TextClassificationConfig == null) {
            TextClassificationConfig = new global::Google.Cloud.DataLabeling.V1Beta1.TextClassificationConfig();
          }
          TextClassificationConfig.MergeFrom(other.TextClassificationConfig);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (inputConfig_ == null) {
              InputConfig = new global::Google.Cloud.DataLabeling.V1Beta1.InputConfig();
            }
            input.ReadMessage(InputConfig);
            break;
          }
          case 18: {
            if (evaluationConfig_ == null) {
              EvaluationConfig = new global::Google.Cloud.DataLabeling.V1Beta1.EvaluationConfig();
            }
            input.ReadMessage(EvaluationConfig);
            break;
          }
          case 26: {
            if (humanAnnotationConfig_ == null) {
              HumanAnnotationConfig = new global::Google.Cloud.DataLabeling.V1Beta1.HumanAnnotationConfig();
            }
            input.ReadMessage(HumanAnnotationConfig);
            break;
          }
          case 34: {
            global::Google.Cloud.DataLabeling.V1Beta1.ImageClassificationConfig subBuilder = new global::Google.Cloud.DataLabeling.V1Beta1.ImageClassificationConfig();
            if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.ImageClassificationConfig) {
              subBuilder.MergeFrom(ImageClassificationConfig);
            }
            input.ReadMessage(subBuilder);
            ImageClassificationConfig = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.DataLabeling.V1Beta1.BoundingPolyConfig subBuilder = new global::Google.Cloud.DataLabeling.V1Beta1.BoundingPolyConfig();
            if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.BoundingPolyConfig) {
              subBuilder.MergeFrom(BoundingPolyConfig);
            }
            input.ReadMessage(subBuilder);
            BoundingPolyConfig = subBuilder;
            break;
          }
          case 66: {
            global::Google.Cloud.DataLabeling.V1Beta1.TextClassificationConfig subBuilder = new global::Google.Cloud.DataLabeling.V1Beta1.TextClassificationConfig();
            if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.TextClassificationConfig) {
              subBuilder.MergeFrom(TextClassificationConfig);
            }
            input.ReadMessage(subBuilder);
            TextClassificationConfig = subBuilder;
            break;
          }
          case 74: {
            bigqueryImportKeys_.AddEntriesFrom(input, _map_bigqueryImportKeys_codec);
            break;
          }
          case 80: {
            ExampleCount = input.ReadInt32();
            break;
          }
          case 89: {
            ExampleSamplePercentage = input.ReadDouble();
            break;
          }
          case 106: {
            if (evaluationJobAlertConfig_ == null) {
              EvaluationJobAlertConfig = new global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobAlertConfig();
            }
            input.ReadMessage(EvaluationJobAlertConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (inputConfig_ == null) {
              InputConfig = new global::Google.Cloud.DataLabeling.V1Beta1.InputConfig();
            }
            input.ReadMessage(InputConfig);
            break;
          }
          case 18: {
            if (evaluationConfig_ == null) {
              EvaluationConfig = new global::Google.Cloud.DataLabeling.V1Beta1.EvaluationConfig();
            }
            input.ReadMessage(EvaluationConfig);
            break;
          }
          case 26: {
            if (humanAnnotationConfig_ == null) {
              HumanAnnotationConfig = new global::Google.Cloud.DataLabeling.V1Beta1.HumanAnnotationConfig();
            }
            input.ReadMessage(HumanAnnotationConfig);
            break;
          }
          case 34: {
            global::Google.Cloud.DataLabeling.V1Beta1.ImageClassificationConfig subBuilder = new global::Google.Cloud.DataLabeling.V1Beta1.ImageClassificationConfig();
            if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.ImageClassificationConfig) {
              subBuilder.MergeFrom(ImageClassificationConfig);
            }
            input.ReadMessage(subBuilder);
            ImageClassificationConfig = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.DataLabeling.V1Beta1.BoundingPolyConfig subBuilder = new global::Google.Cloud.DataLabeling.V1Beta1.BoundingPolyConfig();
            if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.BoundingPolyConfig) {
              subBuilder.MergeFrom(BoundingPolyConfig);
            }
            input.ReadMessage(subBuilder);
            BoundingPolyConfig = subBuilder;
            break;
          }
          case 66: {
            global::Google.Cloud.DataLabeling.V1Beta1.TextClassificationConfig subBuilder = new global::Google.Cloud.DataLabeling.V1Beta1.TextClassificationConfig();
            if (humanAnnotationRequestConfigCase_ == HumanAnnotationRequestConfigOneofCase.TextClassificationConfig) {
              subBuilder.MergeFrom(TextClassificationConfig);
            }
            input.ReadMessage(subBuilder);
            TextClassificationConfig = subBuilder;
            break;
          }
          case 74: {
            bigqueryImportKeys_.AddEntriesFrom(ref input, _map_bigqueryImportKeys_codec);
            break;
          }
          case 80: {
            ExampleCount = input.ReadInt32();
            break;
          }
          case 89: {
            ExampleSamplePercentage = input.ReadDouble();
            break;
          }
          case 106: {
            if (evaluationJobAlertConfig_ == null) {
              EvaluationJobAlertConfig = new global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobAlertConfig();
            }
            input.ReadMessage(EvaluationJobAlertConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Provides details for how an evaluation job sends email alerts based on the
  /// results of a run.
  /// </summary>
  public sealed partial class EvaluationJobAlertConfig : pb::IMessage<EvaluationJobAlertConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EvaluationJobAlertConfig> _parser = new pb::MessageParser<EvaluationJobAlertConfig>(() => new EvaluationJobAlertConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EvaluationJobAlertConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvaluationJobAlertConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvaluationJobAlertConfig(EvaluationJobAlertConfig other) : this() {
      email_ = other.email_;
      minAcceptableMeanAveragePrecision_ = other.minAcceptableMeanAveragePrecision_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvaluationJobAlertConfig Clone() {
      return new EvaluationJobAlertConfig(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    /// <summary>
    /// Required. An email address to send alerts to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "min_acceptable_mean_average_precision" field.</summary>
    public const int MinAcceptableMeanAveragePrecisionFieldNumber = 2;
    private double minAcceptableMeanAveragePrecision_;
    /// <summary>
    /// Required. A number between 0 and 1 that describes a minimum mean average
    /// precision threshold. When the evaluation job runs, if it calculates that
    /// your model version's predictions from the recent interval have
    /// [meanAveragePrecision][google.cloud.datalabeling.v1beta1.PrCurve.mean_average_precision] below this
    /// threshold, then it sends an alert to your specified email.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MinAcceptableMeanAveragePrecision {
      get { return minAcceptableMeanAveragePrecision_; }
      set {
        minAcceptableMeanAveragePrecision_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EvaluationJobAlertConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EvaluationJobAlertConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinAcceptableMeanAveragePrecision, other.MinAcceptableMeanAveragePrecision)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (MinAcceptableMeanAveragePrecision != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinAcceptableMeanAveragePrecision);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (MinAcceptableMeanAveragePrecision != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(MinAcceptableMeanAveragePrecision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (MinAcceptableMeanAveragePrecision != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(MinAcceptableMeanAveragePrecision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (MinAcceptableMeanAveragePrecision != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EvaluationJobAlertConfig other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.MinAcceptableMeanAveragePrecision != 0D) {
        MinAcceptableMeanAveragePrecision = other.MinAcceptableMeanAveragePrecision;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 17: {
            MinAcceptableMeanAveragePrecision = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 17: {
            MinAcceptableMeanAveragePrecision = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Records a failed evaluation job run.
  /// </summary>
  public sealed partial class Attempt : pb::IMessage<Attempt>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Attempt> _parser = new pb::MessageParser<Attempt>(() => new Attempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DataLabeling.V1Beta1.EvaluationJobReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attempt(Attempt other) : this() {
      attemptTime_ = other.attemptTime_ != null ? other.attemptTime_.Clone() : null;
      partialFailures_ = other.partialFailures_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attempt Clone() {
      return new Attempt(this);
    }

    /// <summary>Field number for the "attempt_time" field.</summary>
    public const int AttemptTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp attemptTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AttemptTime {
      get { return attemptTime_; }
      set {
        attemptTime_ = value;
      }
    }

    /// <summary>Field number for the "partial_failures" field.</summary>
    public const int PartialFailuresFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Rpc.Status> _repeated_partialFailures_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Rpc.Status.Parser);
    private readonly pbc::RepeatedField<global::Google.Rpc.Status> partialFailures_ = new pbc::RepeatedField<global::Google.Rpc.Status>();
    /// <summary>
    /// Details of errors that occurred.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Rpc.Status> PartialFailures {
      get { return partialFailures_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AttemptTime, other.AttemptTime)) return false;
      if(!partialFailures_.Equals(other.partialFailures_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (attemptTime_ != null) hash ^= AttemptTime.GetHashCode();
      hash ^= partialFailures_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (attemptTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AttemptTime);
      }
      partialFailures_.WriteTo(output, _repeated_partialFailures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (attemptTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AttemptTime);
      }
      partialFailures_.WriteTo(ref output, _repeated_partialFailures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (attemptTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttemptTime);
      }
      size += partialFailures_.CalculateSize(_repeated_partialFailures_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attempt other) {
      if (other == null) {
        return;
      }
      if (other.attemptTime_ != null) {
        if (attemptTime_ == null) {
          AttemptTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AttemptTime.MergeFrom(other.AttemptTime);
      }
      partialFailures_.Add(other.partialFailures_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (attemptTime_ == null) {
              AttemptTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AttemptTime);
            break;
          }
          case 18: {
            partialFailures_.AddEntriesFrom(input, _repeated_partialFailures_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (attemptTime_ == null) {
              AttemptTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AttemptTime);
            break;
          }
          case 18: {
            partialFailures_.AddEntriesFrom(ref input, _repeated_partialFailures_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
