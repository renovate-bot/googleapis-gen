// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/dataproc/v1/clusters.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Dataproc.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/dataproc/v1/clusters.proto</summary>
  public static partial class ClustersReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/dataproc/v1/clusters.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClustersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidnb29nbGUvY2xvdWQvZGF0YXByb2MvdjEvY2x1c3RlcnMucHJvdG8SGGdv",
            "b2dsZS5jbG91ZC5kYXRhcHJvYy52MRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9u",
            "cy5wcm90bxoXZ29vZ2xlL2FwaS9jbGllbnQucHJvdG8aH2dvb2dsZS9hcGkv",
            "ZmllbGRfYmVoYXZpb3IucHJvdG8aGWdvb2dsZS9hcGkvcmVzb3VyY2UucHJv",
            "dG8aJWdvb2dsZS9jbG91ZC9kYXRhcHJvYy92MS9zaGFyZWQucHJvdG8aI2dv",
            "b2dsZS9sb25ncnVubmluZy9vcGVyYXRpb25zLnByb3RvGh5nb29nbGUvcHJv",
            "dG9idWYvZHVyYXRpb24ucHJvdG8aIGdvb2dsZS9wcm90b2J1Zi9maWVsZF9t",
            "YXNrLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIs0D",
            "CgdDbHVzdGVyEhcKCnByb2plY3RfaWQYASABKAlCA+BBAhIZCgxjbHVzdGVy",
            "X25hbWUYAiABKAlCA+BBAhI8CgZjb25maWcYAyABKAsyJy5nb29nbGUuY2xv",
            "dWQuZGF0YXByb2MudjEuQ2x1c3RlckNvbmZpZ0ID4EECEkIKBmxhYmVscxgI",
            "IAMoCzItLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5DbHVzdGVyLkxhYmVs",
            "c0VudHJ5QgPgQQESPAoGc3RhdHVzGAQgASgLMicuZ29vZ2xlLmNsb3VkLmRh",
            "dGFwcm9jLnYxLkNsdXN0ZXJTdGF0dXNCA+BBAxJECg5zdGF0dXNfaGlzdG9y",
            "eRgHIAMoCzInLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5DbHVzdGVyU3Rh",
            "dHVzQgPgQQMSGQoMY2x1c3Rlcl91dWlkGAYgASgJQgPgQQMSPgoHbWV0cmlj",
            "cxgJIAEoCzIoLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5DbHVzdGVyTWV0",
            "cmljc0ID4EEDGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1",
            "ZRgCIAEoCToCOAEiqQgKDUNsdXN0ZXJDb25maWcSGgoNY29uZmlnX2J1Y2tl",
            "dBgBIAEoCUID4EEBEhgKC3RlbXBfYnVja2V0GAIgASgJQgPgQQESSwoSZ2Nl",
            "X2NsdXN0ZXJfY29uZmlnGAggASgLMiouZ29vZ2xlLmNsb3VkLmRhdGFwcm9j",
            "LnYxLkdjZUNsdXN0ZXJDb25maWdCA+BBARJJCg1tYXN0ZXJfY29uZmlnGAkg",
            "ASgLMi0uZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLkluc3RhbmNlR3JvdXBD",
            "b25maWdCA+BBARJJCg13b3JrZXJfY29uZmlnGAogASgLMi0uZ29vZ2xlLmNs",
            "b3VkLmRhdGFwcm9jLnYxLkluc3RhbmNlR3JvdXBDb25maWdCA+BBARJTChdz",
            "ZWNvbmRhcnlfd29ya2VyX2NvbmZpZxgMIAEoCzItLmdvb2dsZS5jbG91ZC5k",
            "YXRhcHJvYy52MS5JbnN0YW5jZUdyb3VwQ29uZmlnQgPgQQESRgoPc29mdHdh",
            "cmVfY29uZmlnGA0gASgLMiguZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLlNv",
            "ZnR3YXJlQ29uZmlnQgPgQQESVwoWaW5pdGlhbGl6YXRpb25fYWN0aW9ucxgL",
            "IAMoCzIyLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5Ob2RlSW5pdGlhbGl6",
            "YXRpb25BY3Rpb25CA+BBARJKChFlbmNyeXB0aW9uX2NvbmZpZxgPIAEoCzIq",
            "Lmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5FbmNyeXB0aW9uQ29uZmlnQgPg",
            "QQESTAoSYXV0b3NjYWxpbmdfY29uZmlnGBIgASgLMisuZ29vZ2xlLmNsb3Vk",
            "LmRhdGFwcm9jLnYxLkF1dG9zY2FsaW5nQ29uZmlnQgPgQQESRgoPc2VjdXJp",
            "dHlfY29uZmlnGBAgASgLMiguZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLlNl",
            "Y3VyaXR5Q29uZmlnQgPgQQESSAoQbGlmZWN5Y2xlX2NvbmZpZxgRIAEoCzIp",
            "Lmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5MaWZlY3ljbGVDb25maWdCA+BB",
            "ARJGCg9lbmRwb2ludF9jb25maWcYEyABKAsyKC5nb29nbGUuY2xvdWQuZGF0",
            "YXByb2MudjEuRW5kcG9pbnRDb25maWdCA+BBARJIChBtZXRhc3RvcmVfY29u",
            "ZmlnGBQgASgLMikuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLk1ldGFzdG9y",
            "ZUNvbmZpZ0ID4EEBEksKEmdrZV9jbHVzdGVyX2NvbmZpZxgVIAEoCzIqLmdv",
            "b2dsZS5jbG91ZC5kYXRhcHJvYy52MS5Ha2VDbHVzdGVyQ29uZmlnQgPgQQEi",
            "kwIKEEdrZUNsdXN0ZXJDb25maWcSdwogbmFtZXNwYWNlZF9na2VfZGVwbG95",
            "bWVudF90YXJnZXQYASABKAsySC5nb29nbGUuY2xvdWQuZGF0YXByb2MudjEu",
            "R2tlQ2x1c3RlckNvbmZpZy5OYW1lc3BhY2VkR2tlRGVwbG95bWVudFRhcmdl",
            "dEID4EEBGoUBCh1OYW1lc3BhY2VkR2tlRGVwbG95bWVudFRhcmdldBJEChJ0",
            "YXJnZXRfZ2tlX2NsdXN0ZXIYASABKAlCKOBBAfpBIgogY29udGFpbmVyLmdv",
            "b2dsZWFwaXMuY29tL0NsdXN0ZXISHgoRY2x1c3Rlcl9uYW1lc3BhY2UYAiAB",
            "KAlCA+BBASK6AQoORW5kcG9pbnRDb25maWcSUAoKaHR0cF9wb3J0cxgBIAMo",
            "CzI3Lmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5FbmRwb2ludENvbmZpZy5I",
            "dHRwUG9ydHNFbnRyeUID4EEDEiQKF2VuYWJsZV9odHRwX3BvcnRfYWNjZXNz",
            "GAIgASgIQgPgQQEaMAoOSHR0cFBvcnRzRW50cnkSCwoDa2V5GAEgASgJEg0K",
            "BXZhbHVlGAIgASgJOgI4ASIsChFBdXRvc2NhbGluZ0NvbmZpZxIXCgpwb2xp",
            "Y3lfdXJpGAEgASgJQgPgQQEiNAoQRW5jcnlwdGlvbkNvbmZpZxIgChNnY2Vf",
            "cGRfa21zX2tleV9uYW1lGAEgASgJQgPgQQEiugYKEEdjZUNsdXN0ZXJDb25m",
            "aWcSFQoIem9uZV91cmkYASABKAlCA+BBARIYCgtuZXR3b3JrX3VyaRgCIAEo",
            "CUID4EEBEhsKDnN1Ym5ldHdvcmtfdXJpGAYgASgJQgPgQQESHQoQaW50ZXJu",
            "YWxfaXBfb25seRgHIAEoCEID4EEBEmsKGnByaXZhdGVfaXB2Nl9nb29nbGVf",
            "YWNjZXNzGAwgASgOMkIuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLkdjZUNs",
            "dXN0ZXJDb25maWcuUHJpdmF0ZUlwdjZHb29nbGVBY2Nlc3NCA+BBARIcCg9z",
            "ZXJ2aWNlX2FjY291bnQYCCABKAlCA+BBARIjChZzZXJ2aWNlX2FjY291bnRf",
            "c2NvcGVzGAMgAygJQgPgQQESDAoEdGFncxgEIAMoCRJKCghtZXRhZGF0YRgF",
            "IAMoCzI4Lmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5HY2VDbHVzdGVyQ29u",
            "ZmlnLk1ldGFkYXRhRW50cnkSUAoUcmVzZXJ2YXRpb25fYWZmaW5pdHkYCyAB",
            "KAsyLS5nb29nbGUuY2xvdWQuZGF0YXByb2MudjEuUmVzZXJ2YXRpb25BZmZp",
            "bml0eUID4EEBEk0KE25vZGVfZ3JvdXBfYWZmaW5pdHkYDSABKAsyKy5nb29n",
            "bGUuY2xvdWQuZGF0YXByb2MudjEuTm9kZUdyb3VwQWZmaW5pdHlCA+BBARJX",
            "ChhzaGllbGRlZF9pbnN0YW5jZV9jb25maWcYDiABKAsyMC5nb29nbGUuY2xv",
            "dWQuZGF0YXByb2MudjEuU2hpZWxkZWRJbnN0YW5jZUNvbmZpZ0ID4EEBGi8K",
            "DU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4",
            "ASKDAQoXUHJpdmF0ZUlwdjZHb29nbGVBY2Nlc3MSKgomUFJJVkFURV9JUFY2",
            "X0dPT0dMRV9BQ0NFU1NfVU5TUEVDSUZJRUQQABIbChdJTkhFUklUX0ZST01f",
            "U1VCTkVUV09SSxABEgwKCE9VVEJPVU5EEAISEQoNQklESVJFQ1RJT05BTBAD",
            "IjAKEU5vZGVHcm91cEFmZmluaXR5EhsKDm5vZGVfZ3JvdXBfdXJpGAEgASgJ",
            "QgPgQQIifQoWU2hpZWxkZWRJbnN0YW5jZUNvbmZpZxIfChJlbmFibGVfc2Vj",
            "dXJlX2Jvb3QYASABKAhCA+BBARIYCgtlbmFibGVfdnRwbRgCIAEoCEID4EEB",
            "EigKG2VuYWJsZV9pbnRlZ3JpdHlfbW9uaXRvcmluZxgDIAEoCEID4EEBIs0E",
            "ChNJbnN0YW5jZUdyb3VwQ29uZmlnEhoKDW51bV9pbnN0YW5jZXMYASABKAVC",
            "A+BBARIbCg5pbnN0YW5jZV9uYW1lcxgCIAMoCUID4EEDEhYKCWltYWdlX3Vy",
            "aRgDIAEoCUID4EEBEh0KEG1hY2hpbmVfdHlwZV91cmkYBCABKAlCA+BBARI+",
            "CgtkaXNrX2NvbmZpZxgFIAEoCzIkLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52",
            "MS5EaXNrQ29uZmlnQgPgQQESGwoOaXNfcHJlZW1wdGlibGUYBiABKAhCA+BB",
            "AxJZCg5wcmVlbXB0aWJpbGl0eRgKIAEoDjI8Lmdvb2dsZS5jbG91ZC5kYXRh",
            "cHJvYy52MS5JbnN0YW5jZUdyb3VwQ29uZmlnLlByZWVtcHRpYmlsaXR5QgPg",
            "QQESTwoUbWFuYWdlZF9ncm91cF9jb25maWcYByABKAsyLC5nb29nbGUuY2xv",
            "dWQuZGF0YXByb2MudjEuTWFuYWdlZEdyb3VwQ29uZmlnQgPgQQMSRgoMYWNj",
            "ZWxlcmF0b3JzGAggAygLMisuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLkFj",
            "Y2VsZXJhdG9yQ29uZmlnQgPgQQESHQoQbWluX2NwdV9wbGF0Zm9ybRgJIAEo",
            "CUID4EEBIlYKDlByZWVtcHRpYmlsaXR5Eh4KGlBSRUVNUFRJQklMSVRZX1VO",
            "U1BFQ0lGSUVEEAASEwoPTk9OX1BSRUVNUFRJQkxFEAESDwoLUFJFRU1QVElC",
            "TEUQAiJjChJNYW5hZ2VkR3JvdXBDb25maWcSIwoWaW5zdGFuY2VfdGVtcGxh",
            "dGVfbmFtZRgBIAEoCUID4EEDEigKG2luc3RhbmNlX2dyb3VwX21hbmFnZXJf",
            "bmFtZRgCIAEoCUID4EEDIkwKEUFjY2VsZXJhdG9yQ29uZmlnEhwKFGFjY2Vs",
            "ZXJhdG9yX3R5cGVfdXJpGAEgASgJEhkKEWFjY2VsZXJhdG9yX2NvdW50GAIg",
            "ASgFImYKCkRpc2tDb25maWcSGwoOYm9vdF9kaXNrX3R5cGUYAyABKAlCA+BB",
            "ARIeChFib290X2Rpc2tfc2l6ZV9nYhgBIAEoBUID4EEBEhsKDm51bV9sb2Nh",
            "bF9zc2RzGAIgASgFQgPgQQEicwoYTm9kZUluaXRpYWxpemF0aW9uQWN0aW9u",
            "EhwKD2V4ZWN1dGFibGVfZmlsZRgBIAEoCUID4EECEjkKEWV4ZWN1dGlvbl90",
            "aW1lb3V0GAIgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uQgPgQQEi",
            "rQMKDUNsdXN0ZXJTdGF0dXMSQQoFc3RhdGUYASABKA4yLS5nb29nbGUuY2xv",
            "dWQuZGF0YXByb2MudjEuQ2x1c3RlclN0YXR1cy5TdGF0ZUID4EEDEhYKBmRl",
            "dGFpbBgCIAEoCUIG4EED4EEBEjkKEHN0YXRlX3N0YXJ0X3RpbWUYAyABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSRwoIc3Vic3RhdGUY",
            "BCABKA4yMC5nb29nbGUuY2xvdWQuZGF0YXByb2MudjEuQ2x1c3RlclN0YXR1",
            "cy5TdWJzdGF0ZUID4EEDIn8KBVN0YXRlEgsKB1VOS05PV04QABIMCghDUkVB",
            "VElORxABEgsKB1JVTk5JTkcQAhIJCgVFUlJPUhADEgwKCERFTEVUSU5HEAQS",
            "DAoIVVBEQVRJTkcQBRIMCghTVE9QUElORxAGEgsKB1NUT1BQRUQQBxIMCghT",
            "VEFSVElORxAIIjwKCFN1YnN0YXRlEg8KC1VOU1BFQ0lGSUVEEAASDQoJVU5I",
            "RUFMVEhZEAESEAoMU1RBTEVfU1RBVFVTEAIioAEKDlNlY3VyaXR5Q29uZmln",
            "EkYKD2tlcmJlcm9zX2NvbmZpZxgBIAEoCzIoLmdvb2dsZS5jbG91ZC5kYXRh",
            "cHJvYy52MS5LZXJiZXJvc0NvbmZpZ0ID4EEBEkYKD2lkZW50aXR5X2NvbmZp",
            "ZxgCIAEoCzIoLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5JZGVudGl0eUNv",
            "bmZpZ0ID4EEBIpAECg5LZXJiZXJvc0NvbmZpZxIcCg9lbmFibGVfa2VyYmVy",
            "b3MYASABKAhCA+BBARIoChtyb290X3ByaW5jaXBhbF9wYXNzd29yZF91cmkY",
            "AiABKAlCA+BBARIYCgtrbXNfa2V5X3VyaRgDIAEoCUID4EEBEhkKDGtleXN0",
            "b3JlX3VyaRgEIAEoCUID4EEBEhsKDnRydXN0c3RvcmVfdXJpGAUgASgJQgPg",
            "QQESIgoVa2V5c3RvcmVfcGFzc3dvcmRfdXJpGAYgASgJQgPgQQESHQoQa2V5",
            "X3Bhc3N3b3JkX3VyaRgHIAEoCUID4EEBEiQKF3RydXN0c3RvcmVfcGFzc3dv",
            "cmRfdXJpGAggASgJQgPgQQESJAoXY3Jvc3NfcmVhbG1fdHJ1c3RfcmVhbG0Y",
            "CSABKAlCA+BBARIiChVjcm9zc19yZWFsbV90cnVzdF9rZGMYCiABKAlCA+BB",
            "ARIrCh5jcm9zc19yZWFsbV90cnVzdF9hZG1pbl9zZXJ2ZXIYCyABKAlCA+BB",
            "ARIyCiVjcm9zc19yZWFsbV90cnVzdF9zaGFyZWRfcGFzc3dvcmRfdXJpGAwg",
            "ASgJQgPgQQESGwoOa2RjX2RiX2tleV91cmkYDSABKAlCA+BBARIfChJ0Z3Rf",
            "bGlmZXRpbWVfaG91cnMYDiABKAVCA+BBARISCgVyZWFsbRgPIAEoCUID4EEB",
            "IsYBCg5JZGVudGl0eUNvbmZpZxJyChx1c2VyX3NlcnZpY2VfYWNjb3VudF9t",
            "YXBwaW5nGAEgAygLMkcuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLklkZW50",
            "aXR5Q29uZmlnLlVzZXJTZXJ2aWNlQWNjb3VudE1hcHBpbmdFbnRyeUID4EEC",
            "GkAKHlVzZXJTZXJ2aWNlQWNjb3VudE1hcHBpbmdFbnRyeRILCgNrZXkYASAB",
            "KAkSDQoFdmFsdWUYAiABKAk6AjgBIvkBCg5Tb2Z0d2FyZUNvbmZpZxIaCg1p",
            "bWFnZV92ZXJzaW9uGAEgASgJQgPgQQESUQoKcHJvcGVydGllcxgCIAMoCzI4",
            "Lmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5Tb2Z0d2FyZUNvbmZpZy5Qcm9w",
            "ZXJ0aWVzRW50cnlCA+BBARJFChNvcHRpb25hbF9jb21wb25lbnRzGAMgAygO",
            "MiMuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLkNvbXBvbmVudEID4EEBGjEK",
            "D1Byb3BlcnRpZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6",
            "AjgBIoMCCg9MaWZlY3ljbGVDb25maWcSNwoPaWRsZV9kZWxldGVfdHRsGAEg",
            "ASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uQgPgQQESOwoQYXV0b19k",
            "ZWxldGVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBC",
            "A+BBAUgAEjkKD2F1dG9fZGVsZXRlX3R0bBgDIAEoCzIZLmdvb2dsZS5wcm90",
            "b2J1Zi5EdXJhdGlvbkID4EEBSAASOAoPaWRsZV9zdGFydF90aW1lGAQgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDQgUKA3R0bCJfCg9N",
            "ZXRhc3RvcmVDb25maWcSTAoaZGF0YXByb2NfbWV0YXN0b3JlX3NlcnZpY2UY",
            "ASABKAlCKOBBAvpBIgogbWV0YXN0b3JlLmdvb2dsZWFwaXMuY29tL1NlcnZp",
            "Y2UimgIKDkNsdXN0ZXJNZXRyaWNzEk8KDGhkZnNfbWV0cmljcxgBIAMoCzI5",
            "Lmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5DbHVzdGVyTWV0cmljcy5IZGZz",
            "TWV0cmljc0VudHJ5Ek8KDHlhcm5fbWV0cmljcxgCIAMoCzI5Lmdvb2dsZS5j",
            "bG91ZC5kYXRhcHJvYy52MS5DbHVzdGVyTWV0cmljcy5ZYXJuTWV0cmljc0Vu",
            "dHJ5GjIKEEhkZnNNZXRyaWNzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVl",
            "GAIgASgDOgI4ARoyChBZYXJuTWV0cmljc0VudHJ5EgsKA2tleRgBIAEoCRIN",
            "CgV2YWx1ZRgCIAEoAzoCOAEilgEKFENyZWF0ZUNsdXN0ZXJSZXF1ZXN0EhcK",
            "CnByb2plY3RfaWQYASABKAlCA+BBAhITCgZyZWdpb24YAyABKAlCA+BBAhI3",
            "CgdjbHVzdGVyGAIgASgLMiEuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLkNs",
            "dXN0ZXJCA+BBAhIXCgpyZXF1ZXN0X2lkGAQgASgJQgPgQQEirgIKFFVwZGF0",
            "ZUNsdXN0ZXJSZXF1ZXN0EhcKCnByb2plY3RfaWQYASABKAlCA+BBAhITCgZy",
            "ZWdpb24YBSABKAlCA+BBAhIZCgxjbHVzdGVyX25hbWUYAiABKAlCA+BBAhI3",
            "CgdjbHVzdGVyGAMgASgLMiEuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLkNs",
            "dXN0ZXJCA+BBAhJFCh1ncmFjZWZ1bF9kZWNvbW1pc3Npb25fdGltZW91dBgG",
            "IAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkID4EEBEjQKC3VwZGF0",
            "ZV9tYXNrGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFza0ID4EEC",
            "EhcKCnJlcXVlc3RfaWQYByABKAlCA+BBASKRAQoSU3RvcENsdXN0ZXJSZXF1",
            "ZXN0EhcKCnByb2plY3RfaWQYASABKAlCA+BBAhITCgZyZWdpb24YAiABKAlC",
            "A+BBAhIZCgxjbHVzdGVyX25hbWUYAyABKAlCA+BBAhIZCgxjbHVzdGVyX3V1",
            "aWQYBCABKAlCA+BBARIXCgpyZXF1ZXN0X2lkGAUgASgJQgPgQQEikgEKE1N0",
            "YXJ0Q2x1c3RlclJlcXVlc3QSFwoKcHJvamVjdF9pZBgBIAEoCUID4EECEhMK",
            "BnJlZ2lvbhgCIAEoCUID4EECEhkKDGNsdXN0ZXJfbmFtZRgDIAEoCUID4EEC",
            "EhkKDGNsdXN0ZXJfdXVpZBgEIAEoCUID4EEBEhcKCnJlcXVlc3RfaWQYBSAB",
            "KAlCA+BBASKTAQoURGVsZXRlQ2x1c3RlclJlcXVlc3QSFwoKcHJvamVjdF9p",
            "ZBgBIAEoCUID4EECEhMKBnJlZ2lvbhgDIAEoCUID4EECEhkKDGNsdXN0ZXJf",
            "bmFtZRgCIAEoCUID4EECEhkKDGNsdXN0ZXJfdXVpZBgEIAEoCUID4EEBEhcK",
            "CnJlcXVlc3RfaWQYBSABKAlCA+BBASJcChFHZXRDbHVzdGVyUmVxdWVzdBIX",
            "Cgpwcm9qZWN0X2lkGAEgASgJQgPgQQISEwoGcmVnaW9uGAMgASgJQgPgQQIS",
            "GQoMY2x1c3Rlcl9uYW1lGAIgASgJQgPgQQIiiQEKE0xpc3RDbHVzdGVyc1Jl",
            "cXVlc3QSFwoKcHJvamVjdF9pZBgBIAEoCUID4EECEhMKBnJlZ2lvbhgEIAEo",
            "CUID4EECEhMKBmZpbHRlchgFIAEoCUID4EEBEhYKCXBhZ2Vfc2l6ZRgCIAEo",
            "BUID4EEBEhcKCnBhZ2VfdG9rZW4YAyABKAlCA+BBASJuChRMaXN0Q2x1c3Rl",
            "cnNSZXNwb25zZRI4CghjbHVzdGVycxgBIAMoCzIhLmdvb2dsZS5jbG91ZC5k",
            "YXRhcHJvYy52MS5DbHVzdGVyQgPgQQMSHAoPbmV4dF9wYWdlX3Rva2VuGAIg",
            "ASgJQgPgQQMiYQoWRGlhZ25vc2VDbHVzdGVyUmVxdWVzdBIXCgpwcm9qZWN0",
            "X2lkGAEgASgJQgPgQQISEwoGcmVnaW9uGAMgASgJQgPgQQISGQoMY2x1c3Rl",
            "cl9uYW1lGAIgASgJQgPgQQIiMQoWRGlhZ25vc2VDbHVzdGVyUmVzdWx0cxIX",
            "CgpvdXRwdXRfdXJpGAEgASgJQgPgQQMi+AEKE1Jlc2VydmF0aW9uQWZmaW5p",
            "dHkSWQoYY29uc3VtZV9yZXNlcnZhdGlvbl90eXBlGAEgASgOMjIuZ29vZ2xl",
            "LmNsb3VkLmRhdGFwcm9jLnYxLlJlc2VydmF0aW9uQWZmaW5pdHkuVHlwZUID",
            "4EEBEhAKA2tleRgCIAEoCUID4EEBEhMKBnZhbHVlcxgDIAMoCUID4EEBIl8K",
            "BFR5cGUSFAoQVFlQRV9VTlNQRUNJRklFRBAAEhIKDk5PX1JFU0VSVkFUSU9O",
            "EAESEwoPQU5ZX1JFU0VSVkFUSU9OEAISGAoUU1BFQ0lGSUNfUkVTRVJWQVRJ",
            "T04QAzLkEAoRQ2x1c3RlckNvbnRyb2xsZXISgAIKDUNyZWF0ZUNsdXN0ZXIS",
            "Li5nb29nbGUuY2xvdWQuZGF0YXByb2MudjEuQ3JlYXRlQ2x1c3RlclJlcXVl",
            "c3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIp8BgtPkkwI+IjMv",
            "djEvcHJvamVjdHMve3Byb2plY3RfaWR9L3JlZ2lvbnMve3JlZ2lvbn0vY2x1",
            "c3RlcnM6B2NsdXN0ZXLaQRlwcm9qZWN0X2lkLHJlZ2lvbixjbHVzdGVyykE8",
            "CgdDbHVzdGVyEjFnb29nbGUuY2xvdWQuZGF0YXByb2MudjEuQ2x1c3Rlck9w",
            "ZXJhdGlvbk1ldGFkYXRhEqgCCg1VcGRhdGVDbHVzdGVyEi4uZ29vZ2xlLmNs",
            "b3VkLmRhdGFwcm9jLnYxLlVwZGF0ZUNsdXN0ZXJSZXF1ZXN0Gh0uZ29vZ2xl",
            "LmxvbmdydW5uaW5nLk9wZXJhdGlvbiLHAYLT5JMCTTJCL3YxL3Byb2plY3Rz",
            "L3twcm9qZWN0X2lkfS9yZWdpb25zL3tyZWdpb259L2NsdXN0ZXJzL3tjbHVz",
            "dGVyX25hbWV9OgdjbHVzdGVy2kEycHJvamVjdF9pZCxyZWdpb24sY2x1c3Rl",
            "cl9uYW1lLGNsdXN0ZXIsdXBkYXRlX21hc2vKQTwKB0NsdXN0ZXISMWdvb2ds",
            "ZS5jbG91ZC5kYXRhcHJvYy52MS5DbHVzdGVyT3BlcmF0aW9uTWV0YWRhdGES",
            "7gEKC1N0b3BDbHVzdGVyEiwuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLlN0",
            "b3BDbHVzdGVyUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRp",
            "b24ikQGC0+STAkwiRy92MS9wcm9qZWN0cy97cHJvamVjdF9pZH0vcmVnaW9u",
            "cy97cmVnaW9ufS9jbHVzdGVycy97Y2x1c3Rlcl9uYW1lfTpzdG9wOgEqykE8",
            "CgdDbHVzdGVyEjFnb29nbGUuY2xvdWQuZGF0YXByb2MudjEuQ2x1c3Rlck9w",
            "ZXJhdGlvbk1ldGFkYXRhEvEBCgxTdGFydENsdXN0ZXISLS5nb29nbGUuY2xv",
            "dWQuZGF0YXByb2MudjEuU3RhcnRDbHVzdGVyUmVxdWVzdBodLmdvb2dsZS5s",
            "b25ncnVubmluZy5PcGVyYXRpb24ikgGC0+STAk0iSC92MS9wcm9qZWN0cy97",
            "cHJvamVjdF9pZH0vcmVnaW9ucy97cmVnaW9ufS9jbHVzdGVycy97Y2x1c3Rl",
            "cl9uYW1lfTpzdGFydDoBKspBPAoHQ2x1c3RlchIxZ29vZ2xlLmNsb3VkLmRh",
            "dGFwcm9jLnYxLkNsdXN0ZXJPcGVyYXRpb25NZXRhZGF0YRKZAgoNRGVsZXRl",
            "Q2x1c3RlchIuLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5EZWxldGVDbHVz",
            "dGVyUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iuAGC",
            "0+STAkQqQi92MS9wcm9qZWN0cy97cHJvamVjdF9pZH0vcmVnaW9ucy97cmVn",
            "aW9ufS9jbHVzdGVycy97Y2x1c3Rlcl9uYW1lfdpBHnByb2plY3RfaWQscmVn",
            "aW9uLGNsdXN0ZXJfbmFtZcpBSgoVZ29vZ2xlLnByb3RvYnVmLkVtcHR5EjFn",
            "b29nbGUuY2xvdWQuZGF0YXByb2MudjEuQ2x1c3Rlck9wZXJhdGlvbk1ldGFk",
            "YXRhEskBCgpHZXRDbHVzdGVyEisuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYx",
            "LkdldENsdXN0ZXJSZXF1ZXN0GiEuZ29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYx",
            "LkNsdXN0ZXIia4LT5JMCRBJCL3YxL3Byb2plY3RzL3twcm9qZWN0X2lkfS9y",
            "ZWdpb25zL3tyZWdpb259L2NsdXN0ZXJzL3tjbHVzdGVyX25hbWV92kEecHJv",
            "amVjdF9pZCxyZWdpb24sY2x1c3Rlcl9uYW1lEtkBCgxMaXN0Q2x1c3RlcnMS",
            "LS5nb29nbGUuY2xvdWQuZGF0YXByb2MudjEuTGlzdENsdXN0ZXJzUmVxdWVz",
            "dBouLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5MaXN0Q2x1c3RlcnNSZXNw",
            "b25zZSJqgtPkkwI1EjMvdjEvcHJvamVjdHMve3Byb2plY3RfaWR9L3JlZ2lv",
            "bnMve3JlZ2lvbn0vY2x1c3RlcnPaQRFwcm9qZWN0X2lkLHJlZ2lvbtpBGHBy",
            "b2plY3RfaWQscmVnaW9uLGZpbHRlchKqAgoPRGlhZ25vc2VDbHVzdGVyEjAu",
            "Z29vZ2xlLmNsb3VkLmRhdGFwcm9jLnYxLkRpYWdub3NlQ2x1c3RlclJlcXVl",
            "c3QaHS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIsUBgtPkkwJQIksv",
            "djEvcHJvamVjdHMve3Byb2plY3RfaWR9L3JlZ2lvbnMve3JlZ2lvbn0vY2x1",
            "c3RlcnMve2NsdXN0ZXJfbmFtZX06ZGlhZ25vc2U6ASraQR5wcm9qZWN0X2lk",
            "LHJlZ2lvbixjbHVzdGVyX25hbWXKQUsKFkRpYWdub3NlQ2x1c3RlclJlc3Vs",
            "dHMSMWdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MS5DbHVzdGVyT3BlcmF0aW9u",
            "TWV0YWRhdGEaS8pBF2RhdGFwcm9jLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6",
            "Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybUKzAgoc",
            "Y29tLmdvb2dsZS5jbG91ZC5kYXRhcHJvYy52MUINQ2x1c3RlcnNQcm90b1AB",
            "WkBnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Nsb3Vk",
            "L2RhdGFwcm9jL3YxO2RhdGFwcm9j6kFeCiBjb250YWluZXIuZ29vZ2xlYXBp",
            "cy5jb20vQ2x1c3RlchI6cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97",
            "bG9jYXRpb259L2NsdXN0ZXJzL3tjbHVzdGVyfepBXgogbWV0YXN0b3JlLmdv",
            "b2dsZWFwaXMuY29tL1NlcnZpY2USOnByb2plY3RzL3twcm9qZWN0fS9sb2Nh",
            "dGlvbnMve2xvY2F0aW9ufS9zZXJ2aWNlcy97c2VydmljZX1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Dataproc.V1.SharedReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.Cluster), global::Google.Cloud.Dataproc.V1.Cluster.Parser, new[]{ "ProjectId", "ClusterName", "Config", "Labels", "Status", "StatusHistory", "ClusterUuid", "Metrics" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.ClusterConfig), global::Google.Cloud.Dataproc.V1.ClusterConfig.Parser, new[]{ "ConfigBucket", "TempBucket", "GceClusterConfig", "MasterConfig", "WorkerConfig", "SecondaryWorkerConfig", "SoftwareConfig", "InitializationActions", "EncryptionConfig", "AutoscalingConfig", "SecurityConfig", "LifecycleConfig", "EndpointConfig", "MetastoreConfig", "GkeClusterConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.GkeClusterConfig), global::Google.Cloud.Dataproc.V1.GkeClusterConfig.Parser, new[]{ "NamespacedGkeDeploymentTarget" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.GkeClusterConfig.Types.NamespacedGkeDeploymentTarget), global::Google.Cloud.Dataproc.V1.GkeClusterConfig.Types.NamespacedGkeDeploymentTarget.Parser, new[]{ "TargetGkeCluster", "ClusterNamespace" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.EndpointConfig), global::Google.Cloud.Dataproc.V1.EndpointConfig.Parser, new[]{ "HttpPorts", "EnableHttpPortAccess" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.AutoscalingConfig), global::Google.Cloud.Dataproc.V1.AutoscalingConfig.Parser, new[]{ "PolicyUri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.EncryptionConfig), global::Google.Cloud.Dataproc.V1.EncryptionConfig.Parser, new[]{ "GcePdKmsKeyName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.GceClusterConfig), global::Google.Cloud.Dataproc.V1.GceClusterConfig.Parser, new[]{ "ZoneUri", "NetworkUri", "SubnetworkUri", "InternalIpOnly", "PrivateIpv6GoogleAccess", "ServiceAccount", "ServiceAccountScopes", "Tags", "Metadata", "ReservationAffinity", "NodeGroupAffinity", "ShieldedInstanceConfig" }, null, new[]{ typeof(global::Google.Cloud.Dataproc.V1.GceClusterConfig.Types.PrivateIpv6GoogleAccess) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.NodeGroupAffinity), global::Google.Cloud.Dataproc.V1.NodeGroupAffinity.Parser, new[]{ "NodeGroupUri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.ShieldedInstanceConfig), global::Google.Cloud.Dataproc.V1.ShieldedInstanceConfig.Parser, new[]{ "EnableSecureBoot", "EnableVtpm", "EnableIntegrityMonitoring" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.InstanceGroupConfig), global::Google.Cloud.Dataproc.V1.InstanceGroupConfig.Parser, new[]{ "NumInstances", "InstanceNames", "ImageUri", "MachineTypeUri", "DiskConfig", "IsPreemptible", "Preemptibility", "ManagedGroupConfig", "Accelerators", "MinCpuPlatform" }, null, new[]{ typeof(global::Google.Cloud.Dataproc.V1.InstanceGroupConfig.Types.Preemptibility) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.ManagedGroupConfig), global::Google.Cloud.Dataproc.V1.ManagedGroupConfig.Parser, new[]{ "InstanceTemplateName", "InstanceGroupManagerName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.AcceleratorConfig), global::Google.Cloud.Dataproc.V1.AcceleratorConfig.Parser, new[]{ "AcceleratorTypeUri", "AcceleratorCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.DiskConfig), global::Google.Cloud.Dataproc.V1.DiskConfig.Parser, new[]{ "BootDiskType", "BootDiskSizeGb", "NumLocalSsds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.NodeInitializationAction), global::Google.Cloud.Dataproc.V1.NodeInitializationAction.Parser, new[]{ "ExecutableFile", "ExecutionTimeout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.ClusterStatus), global::Google.Cloud.Dataproc.V1.ClusterStatus.Parser, new[]{ "State", "Detail", "StateStartTime", "Substate" }, null, new[]{ typeof(global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.State), typeof(global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.Substate) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.SecurityConfig), global::Google.Cloud.Dataproc.V1.SecurityConfig.Parser, new[]{ "KerberosConfig", "IdentityConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.KerberosConfig), global::Google.Cloud.Dataproc.V1.KerberosConfig.Parser, new[]{ "EnableKerberos", "RootPrincipalPasswordUri", "KmsKeyUri", "KeystoreUri", "TruststoreUri", "KeystorePasswordUri", "KeyPasswordUri", "TruststorePasswordUri", "CrossRealmTrustRealm", "CrossRealmTrustKdc", "CrossRealmTrustAdminServer", "CrossRealmTrustSharedPasswordUri", "KdcDbKeyUri", "TgtLifetimeHours", "Realm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.IdentityConfig), global::Google.Cloud.Dataproc.V1.IdentityConfig.Parser, new[]{ "UserServiceAccountMapping" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.SoftwareConfig), global::Google.Cloud.Dataproc.V1.SoftwareConfig.Parser, new[]{ "ImageVersion", "Properties", "OptionalComponents" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.LifecycleConfig), global::Google.Cloud.Dataproc.V1.LifecycleConfig.Parser, new[]{ "IdleDeleteTtl", "AutoDeleteTime", "AutoDeleteTtl", "IdleStartTime" }, new[]{ "Ttl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.MetastoreConfig), global::Google.Cloud.Dataproc.V1.MetastoreConfig.Parser, new[]{ "DataprocMetastoreService" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.ClusterMetrics), global::Google.Cloud.Dataproc.V1.ClusterMetrics.Parser, new[]{ "HdfsMetrics", "YarnMetrics" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.CreateClusterRequest), global::Google.Cloud.Dataproc.V1.CreateClusterRequest.Parser, new[]{ "ProjectId", "Region", "Cluster", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.UpdateClusterRequest), global::Google.Cloud.Dataproc.V1.UpdateClusterRequest.Parser, new[]{ "ProjectId", "Region", "ClusterName", "Cluster", "GracefulDecommissionTimeout", "UpdateMask", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.StopClusterRequest), global::Google.Cloud.Dataproc.V1.StopClusterRequest.Parser, new[]{ "ProjectId", "Region", "ClusterName", "ClusterUuid", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.StartClusterRequest), global::Google.Cloud.Dataproc.V1.StartClusterRequest.Parser, new[]{ "ProjectId", "Region", "ClusterName", "ClusterUuid", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.DeleteClusterRequest), global::Google.Cloud.Dataproc.V1.DeleteClusterRequest.Parser, new[]{ "ProjectId", "Region", "ClusterName", "ClusterUuid", "RequestId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.GetClusterRequest), global::Google.Cloud.Dataproc.V1.GetClusterRequest.Parser, new[]{ "ProjectId", "Region", "ClusterName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.ListClustersRequest), global::Google.Cloud.Dataproc.V1.ListClustersRequest.Parser, new[]{ "ProjectId", "Region", "Filter", "PageSize", "PageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.ListClustersResponse), global::Google.Cloud.Dataproc.V1.ListClustersResponse.Parser, new[]{ "Clusters", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.DiagnoseClusterRequest), global::Google.Cloud.Dataproc.V1.DiagnoseClusterRequest.Parser, new[]{ "ProjectId", "Region", "ClusterName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.DiagnoseClusterResults), global::Google.Cloud.Dataproc.V1.DiagnoseClusterResults.Parser, new[]{ "OutputUri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataproc.V1.ReservationAffinity), global::Google.Cloud.Dataproc.V1.ReservationAffinity.Parser, new[]{ "ConsumeReservationType", "Key", "Values" }, null, new[]{ typeof(global::Google.Cloud.Dataproc.V1.ReservationAffinity.Types.Type) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Describes the identifying information, config, and status of
  /// a cluster of Compute Engine instances.
  /// </summary>
  public sealed partial class Cluster : pb::IMessage<Cluster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cluster> _parser = new pb::MessageParser<Cluster>(() => new Cluster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cluster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster(Cluster other) : this() {
      projectId_ = other.projectId_;
      clusterName_ = other.clusterName_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      labels_ = other.labels_.Clone();
      status_ = other.status_ != null ? other.status_.Clone() : null;
      statusHistory_ = other.statusHistory_.Clone();
      clusterUuid_ = other.clusterUuid_;
      metrics_ = other.metrics_ != null ? other.metrics_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster Clone() {
      return new Cluster(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. The Google Cloud Platform project ID that the cluster belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_name" field.</summary>
    public const int ClusterNameFieldNumber = 2;
    private string clusterName_ = "";
    /// <summary>
    /// Required. The cluster name. Cluster names within a project must be
    /// unique. Names of deleted clusters can be reused.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterName {
      get { return clusterName_; }
      set {
        clusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 3;
    private global::Google.Cloud.Dataproc.V1.ClusterConfig config_;
    /// <summary>
    /// Required. The cluster config. Note that Dataproc may set
    /// default values, and values may change when clusters are updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.ClusterConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 66);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. The labels to associate with this cluster.
    /// Label **keys** must contain 1 to 63 characters, and must conform to
    /// [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
    /// Label **values** may be empty, but, if present, must contain 1 to 63
    /// characters, and must conform to [RFC
    /// 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be
    /// associated with a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Google.Cloud.Dataproc.V1.ClusterStatus status_;
    /// <summary>
    /// Output only. Cluster status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.ClusterStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "status_history" field.</summary>
    public const int StatusHistoryFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dataproc.V1.ClusterStatus> _repeated_statusHistory_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Cloud.Dataproc.V1.ClusterStatus.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.ClusterStatus> statusHistory_ = new pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.ClusterStatus>();
    /// <summary>
    /// Output only. The previous cluster status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.ClusterStatus> StatusHistory {
      get { return statusHistory_; }
    }

    /// <summary>Field number for the "cluster_uuid" field.</summary>
    public const int ClusterUuidFieldNumber = 6;
    private string clusterUuid_ = "";
    /// <summary>
    /// Output only. A cluster UUID (Unique Universal Identifier). Dataproc
    /// generates this value when it creates the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterUuid {
      get { return clusterUuid_; }
      set {
        clusterUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 9;
    private global::Google.Cloud.Dataproc.V1.ClusterMetrics metrics_;
    /// <summary>
    /// Output only. Contains cluster daemon metrics such as HDFS and YARN stats.
    ///
    /// **Beta Feature**: This report is available for testing purposes only. It
    /// may be changed before final release.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.ClusterMetrics Metrics {
      get { return metrics_; }
      set {
        metrics_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cluster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (ClusterName != other.ClusterName) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if(!statusHistory_.Equals(other.statusHistory_)) return false;
      if (ClusterUuid != other.ClusterUuid) return false;
      if (!object.Equals(Metrics, other.Metrics)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (ClusterName.Length != 0) hash ^= ClusterName.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= statusHistory_.GetHashCode();
      if (ClusterUuid.Length != 0) hash ^= ClusterUuid.GetHashCode();
      if (metrics_ != null) hash ^= Metrics.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterName);
      }
      if (config_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Config);
      }
      if (status_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Status);
      }
      if (ClusterUuid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ClusterUuid);
      }
      statusHistory_.WriteTo(output, _repeated_statusHistory_codec);
      labels_.WriteTo(output, _map_labels_codec);
      if (metrics_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Metrics);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterName);
      }
      if (config_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Config);
      }
      if (status_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Status);
      }
      if (ClusterUuid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ClusterUuid);
      }
      statusHistory_.WriteTo(ref output, _repeated_statusHistory_codec);
      labels_.WriteTo(ref output, _map_labels_codec);
      if (metrics_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Metrics);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (ClusterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += statusHistory_.CalculateSize(_repeated_statusHistory_codec);
      if (ClusterUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterUuid);
      }
      if (metrics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metrics);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cluster other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.ClusterName.Length != 0) {
        ClusterName = other.ClusterName;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Google.Cloud.Dataproc.V1.ClusterConfig();
        }
        Config.MergeFrom(other.Config);
      }
      labels_.Add(other.labels_);
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Google.Cloud.Dataproc.V1.ClusterStatus();
        }
        Status.MergeFrom(other.Status);
      }
      statusHistory_.Add(other.statusHistory_);
      if (other.ClusterUuid.Length != 0) {
        ClusterUuid = other.ClusterUuid;
      }
      if (other.metrics_ != null) {
        if (metrics_ == null) {
          Metrics = new global::Google.Cloud.Dataproc.V1.ClusterMetrics();
        }
        Metrics.MergeFrom(other.Metrics);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            ClusterName = input.ReadString();
            break;
          }
          case 26: {
            if (config_ == null) {
              Config = new global::Google.Cloud.Dataproc.V1.ClusterConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 34: {
            if (status_ == null) {
              Status = new global::Google.Cloud.Dataproc.V1.ClusterStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 50: {
            ClusterUuid = input.ReadString();
            break;
          }
          case 58: {
            statusHistory_.AddEntriesFrom(input, _repeated_statusHistory_codec);
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 74: {
            if (metrics_ == null) {
              Metrics = new global::Google.Cloud.Dataproc.V1.ClusterMetrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            ClusterName = input.ReadString();
            break;
          }
          case 26: {
            if (config_ == null) {
              Config = new global::Google.Cloud.Dataproc.V1.ClusterConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 34: {
            if (status_ == null) {
              Status = new global::Google.Cloud.Dataproc.V1.ClusterStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 50: {
            ClusterUuid = input.ReadString();
            break;
          }
          case 58: {
            statusHistory_.AddEntriesFrom(ref input, _repeated_statusHistory_codec);
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 74: {
            if (metrics_ == null) {
              Metrics = new global::Google.Cloud.Dataproc.V1.ClusterMetrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The cluster config.
  /// </summary>
  public sealed partial class ClusterConfig : pb::IMessage<ClusterConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClusterConfig> _parser = new pb::MessageParser<ClusterConfig>(() => new ClusterConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClusterConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterConfig(ClusterConfig other) : this() {
      configBucket_ = other.configBucket_;
      tempBucket_ = other.tempBucket_;
      gceClusterConfig_ = other.gceClusterConfig_ != null ? other.gceClusterConfig_.Clone() : null;
      masterConfig_ = other.masterConfig_ != null ? other.masterConfig_.Clone() : null;
      workerConfig_ = other.workerConfig_ != null ? other.workerConfig_.Clone() : null;
      secondaryWorkerConfig_ = other.secondaryWorkerConfig_ != null ? other.secondaryWorkerConfig_.Clone() : null;
      softwareConfig_ = other.softwareConfig_ != null ? other.softwareConfig_.Clone() : null;
      initializationActions_ = other.initializationActions_.Clone();
      encryptionConfig_ = other.encryptionConfig_ != null ? other.encryptionConfig_.Clone() : null;
      autoscalingConfig_ = other.autoscalingConfig_ != null ? other.autoscalingConfig_.Clone() : null;
      securityConfig_ = other.securityConfig_ != null ? other.securityConfig_.Clone() : null;
      lifecycleConfig_ = other.lifecycleConfig_ != null ? other.lifecycleConfig_.Clone() : null;
      endpointConfig_ = other.endpointConfig_ != null ? other.endpointConfig_.Clone() : null;
      metastoreConfig_ = other.metastoreConfig_ != null ? other.metastoreConfig_.Clone() : null;
      gkeClusterConfig_ = other.gkeClusterConfig_ != null ? other.gkeClusterConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterConfig Clone() {
      return new ClusterConfig(this);
    }

    /// <summary>Field number for the "config_bucket" field.</summary>
    public const int ConfigBucketFieldNumber = 1;
    private string configBucket_ = "";
    /// <summary>
    /// Optional. A Cloud Storage bucket used to stage job
    /// dependencies, config files, and job driver console output.
    /// If you do not specify a staging bucket, Cloud
    /// Dataproc will determine a Cloud Storage location (US,
    /// ASIA, or EU) for your cluster's staging bucket according to the
    /// Compute Engine zone where your cluster is deployed, and then create
    /// and manage this project-level, per-location bucket (see
    /// [Dataproc staging
    /// bucket](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)).
    /// **This field requires a Cloud Storage bucket name, not a URI to a Cloud
    /// Storage bucket.**
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfigBucket {
      get { return configBucket_; }
      set {
        configBucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "temp_bucket" field.</summary>
    public const int TempBucketFieldNumber = 2;
    private string tempBucket_ = "";
    /// <summary>
    /// Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data,
    /// such as Spark and MapReduce history files.
    /// If you do not specify a temp bucket,
    /// Dataproc will determine a Cloud Storage location (US,
    /// ASIA, or EU) for your cluster's temp bucket according to the
    /// Compute Engine zone where your cluster is deployed, and then create
    /// and manage this project-level, per-location bucket. The default bucket has
    /// a TTL of 90 days, but you can use any TTL (or none) if you specify a
    /// bucket.
    /// **This field requires a Cloud Storage bucket name, not a URI to a Cloud
    /// Storage bucket.**
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TempBucket {
      get { return tempBucket_; }
      set {
        tempBucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gce_cluster_config" field.</summary>
    public const int GceClusterConfigFieldNumber = 8;
    private global::Google.Cloud.Dataproc.V1.GceClusterConfig gceClusterConfig_;
    /// <summary>
    /// Optional. The shared Compute Engine config settings for
    /// all instances in a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.GceClusterConfig GceClusterConfig {
      get { return gceClusterConfig_; }
      set {
        gceClusterConfig_ = value;
      }
    }

    /// <summary>Field number for the "master_config" field.</summary>
    public const int MasterConfigFieldNumber = 9;
    private global::Google.Cloud.Dataproc.V1.InstanceGroupConfig masterConfig_;
    /// <summary>
    /// Optional. The Compute Engine config settings for
    /// the master instance in a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.InstanceGroupConfig MasterConfig {
      get { return masterConfig_; }
      set {
        masterConfig_ = value;
      }
    }

    /// <summary>Field number for the "worker_config" field.</summary>
    public const int WorkerConfigFieldNumber = 10;
    private global::Google.Cloud.Dataproc.V1.InstanceGroupConfig workerConfig_;
    /// <summary>
    /// Optional. The Compute Engine config settings for
    /// worker instances in a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.InstanceGroupConfig WorkerConfig {
      get { return workerConfig_; }
      set {
        workerConfig_ = value;
      }
    }

    /// <summary>Field number for the "secondary_worker_config" field.</summary>
    public const int SecondaryWorkerConfigFieldNumber = 12;
    private global::Google.Cloud.Dataproc.V1.InstanceGroupConfig secondaryWorkerConfig_;
    /// <summary>
    /// Optional. The Compute Engine config settings for
    /// additional worker instances in a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.InstanceGroupConfig SecondaryWorkerConfig {
      get { return secondaryWorkerConfig_; }
      set {
        secondaryWorkerConfig_ = value;
      }
    }

    /// <summary>Field number for the "software_config" field.</summary>
    public const int SoftwareConfigFieldNumber = 13;
    private global::Google.Cloud.Dataproc.V1.SoftwareConfig softwareConfig_;
    /// <summary>
    /// Optional. The config settings for software inside the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.SoftwareConfig SoftwareConfig {
      get { return softwareConfig_; }
      set {
        softwareConfig_ = value;
      }
    }

    /// <summary>Field number for the "initialization_actions" field.</summary>
    public const int InitializationActionsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dataproc.V1.NodeInitializationAction> _repeated_initializationActions_codec
        = pb::FieldCodec.ForMessage(90, global::Google.Cloud.Dataproc.V1.NodeInitializationAction.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.NodeInitializationAction> initializationActions_ = new pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.NodeInitializationAction>();
    /// <summary>
    /// Optional. Commands to execute on each node after config is
    /// completed. By default, executables are run on master and all worker nodes.
    /// You can test a node's `role` metadata to run an executable on
    /// a master or worker node, as shown below using `curl` (you can also use
    /// `wget`):
    ///
    ///     ROLE=$(curl -H Metadata-Flavor:Google
    ///     http://metadata/computeMetadata/v1/instance/attributes/dataproc-role)
    ///     if [[ "${ROLE}" == 'Master' ]]; then
    ///       ... master specific actions ...
    ///     else
    ///       ... worker specific actions ...
    ///     fi
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.NodeInitializationAction> InitializationActions {
      get { return initializationActions_; }
    }

    /// <summary>Field number for the "encryption_config" field.</summary>
    public const int EncryptionConfigFieldNumber = 15;
    private global::Google.Cloud.Dataproc.V1.EncryptionConfig encryptionConfig_;
    /// <summary>
    /// Optional. Encryption settings for the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.EncryptionConfig EncryptionConfig {
      get { return encryptionConfig_; }
      set {
        encryptionConfig_ = value;
      }
    }

    /// <summary>Field number for the "autoscaling_config" field.</summary>
    public const int AutoscalingConfigFieldNumber = 18;
    private global::Google.Cloud.Dataproc.V1.AutoscalingConfig autoscalingConfig_;
    /// <summary>
    /// Optional. Autoscaling config for the policy associated with the cluster.
    /// Cluster does not autoscale if this field is unset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.AutoscalingConfig AutoscalingConfig {
      get { return autoscalingConfig_; }
      set {
        autoscalingConfig_ = value;
      }
    }

    /// <summary>Field number for the "security_config" field.</summary>
    public const int SecurityConfigFieldNumber = 16;
    private global::Google.Cloud.Dataproc.V1.SecurityConfig securityConfig_;
    /// <summary>
    /// Optional. Security settings for the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.SecurityConfig SecurityConfig {
      get { return securityConfig_; }
      set {
        securityConfig_ = value;
      }
    }

    /// <summary>Field number for the "lifecycle_config" field.</summary>
    public const int LifecycleConfigFieldNumber = 17;
    private global::Google.Cloud.Dataproc.V1.LifecycleConfig lifecycleConfig_;
    /// <summary>
    /// Optional. Lifecycle setting for the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.LifecycleConfig LifecycleConfig {
      get { return lifecycleConfig_; }
      set {
        lifecycleConfig_ = value;
      }
    }

    /// <summary>Field number for the "endpoint_config" field.</summary>
    public const int EndpointConfigFieldNumber = 19;
    private global::Google.Cloud.Dataproc.V1.EndpointConfig endpointConfig_;
    /// <summary>
    /// Optional. Port/endpoint configuration for this cluster
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.EndpointConfig EndpointConfig {
      get { return endpointConfig_; }
      set {
        endpointConfig_ = value;
      }
    }

    /// <summary>Field number for the "metastore_config" field.</summary>
    public const int MetastoreConfigFieldNumber = 20;
    private global::Google.Cloud.Dataproc.V1.MetastoreConfig metastoreConfig_;
    /// <summary>
    /// Optional. Metastore configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.MetastoreConfig MetastoreConfig {
      get { return metastoreConfig_; }
      set {
        metastoreConfig_ = value;
      }
    }

    /// <summary>Field number for the "gke_cluster_config" field.</summary>
    public const int GkeClusterConfigFieldNumber = 21;
    private global::Google.Cloud.Dataproc.V1.GkeClusterConfig gkeClusterConfig_;
    /// <summary>
    /// Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to
    /// Kubernetes. Setting this is considered mutually exclusive with Compute
    /// Engine-based options such as `gce_cluster_config`, `master_config`,
    /// `worker_config`, `secondary_worker_config`, and `autoscaling_config`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.GkeClusterConfig GkeClusterConfig {
      get { return gkeClusterConfig_; }
      set {
        gkeClusterConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClusterConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClusterConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigBucket != other.ConfigBucket) return false;
      if (TempBucket != other.TempBucket) return false;
      if (!object.Equals(GceClusterConfig, other.GceClusterConfig)) return false;
      if (!object.Equals(MasterConfig, other.MasterConfig)) return false;
      if (!object.Equals(WorkerConfig, other.WorkerConfig)) return false;
      if (!object.Equals(SecondaryWorkerConfig, other.SecondaryWorkerConfig)) return false;
      if (!object.Equals(SoftwareConfig, other.SoftwareConfig)) return false;
      if(!initializationActions_.Equals(other.initializationActions_)) return false;
      if (!object.Equals(EncryptionConfig, other.EncryptionConfig)) return false;
      if (!object.Equals(AutoscalingConfig, other.AutoscalingConfig)) return false;
      if (!object.Equals(SecurityConfig, other.SecurityConfig)) return false;
      if (!object.Equals(LifecycleConfig, other.LifecycleConfig)) return false;
      if (!object.Equals(EndpointConfig, other.EndpointConfig)) return false;
      if (!object.Equals(MetastoreConfig, other.MetastoreConfig)) return false;
      if (!object.Equals(GkeClusterConfig, other.GkeClusterConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigBucket.Length != 0) hash ^= ConfigBucket.GetHashCode();
      if (TempBucket.Length != 0) hash ^= TempBucket.GetHashCode();
      if (gceClusterConfig_ != null) hash ^= GceClusterConfig.GetHashCode();
      if (masterConfig_ != null) hash ^= MasterConfig.GetHashCode();
      if (workerConfig_ != null) hash ^= WorkerConfig.GetHashCode();
      if (secondaryWorkerConfig_ != null) hash ^= SecondaryWorkerConfig.GetHashCode();
      if (softwareConfig_ != null) hash ^= SoftwareConfig.GetHashCode();
      hash ^= initializationActions_.GetHashCode();
      if (encryptionConfig_ != null) hash ^= EncryptionConfig.GetHashCode();
      if (autoscalingConfig_ != null) hash ^= AutoscalingConfig.GetHashCode();
      if (securityConfig_ != null) hash ^= SecurityConfig.GetHashCode();
      if (lifecycleConfig_ != null) hash ^= LifecycleConfig.GetHashCode();
      if (endpointConfig_ != null) hash ^= EndpointConfig.GetHashCode();
      if (metastoreConfig_ != null) hash ^= MetastoreConfig.GetHashCode();
      if (gkeClusterConfig_ != null) hash ^= GkeClusterConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ConfigBucket.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConfigBucket);
      }
      if (TempBucket.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TempBucket);
      }
      if (gceClusterConfig_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(GceClusterConfig);
      }
      if (masterConfig_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MasterConfig);
      }
      if (workerConfig_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(WorkerConfig);
      }
      initializationActions_.WriteTo(output, _repeated_initializationActions_codec);
      if (secondaryWorkerConfig_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(SecondaryWorkerConfig);
      }
      if (softwareConfig_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(SoftwareConfig);
      }
      if (encryptionConfig_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(EncryptionConfig);
      }
      if (securityConfig_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(SecurityConfig);
      }
      if (lifecycleConfig_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LifecycleConfig);
      }
      if (autoscalingConfig_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(AutoscalingConfig);
      }
      if (endpointConfig_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(EndpointConfig);
      }
      if (metastoreConfig_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(MetastoreConfig);
      }
      if (gkeClusterConfig_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(GkeClusterConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ConfigBucket.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConfigBucket);
      }
      if (TempBucket.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TempBucket);
      }
      if (gceClusterConfig_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(GceClusterConfig);
      }
      if (masterConfig_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MasterConfig);
      }
      if (workerConfig_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(WorkerConfig);
      }
      initializationActions_.WriteTo(ref output, _repeated_initializationActions_codec);
      if (secondaryWorkerConfig_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(SecondaryWorkerConfig);
      }
      if (softwareConfig_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(SoftwareConfig);
      }
      if (encryptionConfig_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(EncryptionConfig);
      }
      if (securityConfig_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(SecurityConfig);
      }
      if (lifecycleConfig_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LifecycleConfig);
      }
      if (autoscalingConfig_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(AutoscalingConfig);
      }
      if (endpointConfig_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(EndpointConfig);
      }
      if (metastoreConfig_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(MetastoreConfig);
      }
      if (gkeClusterConfig_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(GkeClusterConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigBucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigBucket);
      }
      if (TempBucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TempBucket);
      }
      if (gceClusterConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GceClusterConfig);
      }
      if (masterConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MasterConfig);
      }
      if (workerConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorkerConfig);
      }
      if (secondaryWorkerConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SecondaryWorkerConfig);
      }
      if (softwareConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SoftwareConfig);
      }
      size += initializationActions_.CalculateSize(_repeated_initializationActions_codec);
      if (encryptionConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptionConfig);
      }
      if (autoscalingConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AutoscalingConfig);
      }
      if (securityConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecurityConfig);
      }
      if (lifecycleConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LifecycleConfig);
      }
      if (endpointConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EndpointConfig);
      }
      if (metastoreConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MetastoreConfig);
      }
      if (gkeClusterConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GkeClusterConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClusterConfig other) {
      if (other == null) {
        return;
      }
      if (other.ConfigBucket.Length != 0) {
        ConfigBucket = other.ConfigBucket;
      }
      if (other.TempBucket.Length != 0) {
        TempBucket = other.TempBucket;
      }
      if (other.gceClusterConfig_ != null) {
        if (gceClusterConfig_ == null) {
          GceClusterConfig = new global::Google.Cloud.Dataproc.V1.GceClusterConfig();
        }
        GceClusterConfig.MergeFrom(other.GceClusterConfig);
      }
      if (other.masterConfig_ != null) {
        if (masterConfig_ == null) {
          MasterConfig = new global::Google.Cloud.Dataproc.V1.InstanceGroupConfig();
        }
        MasterConfig.MergeFrom(other.MasterConfig);
      }
      if (other.workerConfig_ != null) {
        if (workerConfig_ == null) {
          WorkerConfig = new global::Google.Cloud.Dataproc.V1.InstanceGroupConfig();
        }
        WorkerConfig.MergeFrom(other.WorkerConfig);
      }
      if (other.secondaryWorkerConfig_ != null) {
        if (secondaryWorkerConfig_ == null) {
          SecondaryWorkerConfig = new global::Google.Cloud.Dataproc.V1.InstanceGroupConfig();
        }
        SecondaryWorkerConfig.MergeFrom(other.SecondaryWorkerConfig);
      }
      if (other.softwareConfig_ != null) {
        if (softwareConfig_ == null) {
          SoftwareConfig = new global::Google.Cloud.Dataproc.V1.SoftwareConfig();
        }
        SoftwareConfig.MergeFrom(other.SoftwareConfig);
      }
      initializationActions_.Add(other.initializationActions_);
      if (other.encryptionConfig_ != null) {
        if (encryptionConfig_ == null) {
          EncryptionConfig = new global::Google.Cloud.Dataproc.V1.EncryptionConfig();
        }
        EncryptionConfig.MergeFrom(other.EncryptionConfig);
      }
      if (other.autoscalingConfig_ != null) {
        if (autoscalingConfig_ == null) {
          AutoscalingConfig = new global::Google.Cloud.Dataproc.V1.AutoscalingConfig();
        }
        AutoscalingConfig.MergeFrom(other.AutoscalingConfig);
      }
      if (other.securityConfig_ != null) {
        if (securityConfig_ == null) {
          SecurityConfig = new global::Google.Cloud.Dataproc.V1.SecurityConfig();
        }
        SecurityConfig.MergeFrom(other.SecurityConfig);
      }
      if (other.lifecycleConfig_ != null) {
        if (lifecycleConfig_ == null) {
          LifecycleConfig = new global::Google.Cloud.Dataproc.V1.LifecycleConfig();
        }
        LifecycleConfig.MergeFrom(other.LifecycleConfig);
      }
      if (other.endpointConfig_ != null) {
        if (endpointConfig_ == null) {
          EndpointConfig = new global::Google.Cloud.Dataproc.V1.EndpointConfig();
        }
        EndpointConfig.MergeFrom(other.EndpointConfig);
      }
      if (other.metastoreConfig_ != null) {
        if (metastoreConfig_ == null) {
          MetastoreConfig = new global::Google.Cloud.Dataproc.V1.MetastoreConfig();
        }
        MetastoreConfig.MergeFrom(other.MetastoreConfig);
      }
      if (other.gkeClusterConfig_ != null) {
        if (gkeClusterConfig_ == null) {
          GkeClusterConfig = new global::Google.Cloud.Dataproc.V1.GkeClusterConfig();
        }
        GkeClusterConfig.MergeFrom(other.GkeClusterConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConfigBucket = input.ReadString();
            break;
          }
          case 18: {
            TempBucket = input.ReadString();
            break;
          }
          case 66: {
            if (gceClusterConfig_ == null) {
              GceClusterConfig = new global::Google.Cloud.Dataproc.V1.GceClusterConfig();
            }
            input.ReadMessage(GceClusterConfig);
            break;
          }
          case 74: {
            if (masterConfig_ == null) {
              MasterConfig = new global::Google.Cloud.Dataproc.V1.InstanceGroupConfig();
            }
            input.ReadMessage(MasterConfig);
            break;
          }
          case 82: {
            if (workerConfig_ == null) {
              WorkerConfig = new global::Google.Cloud.Dataproc.V1.InstanceGroupConfig();
            }
            input.ReadMessage(WorkerConfig);
            break;
          }
          case 90: {
            initializationActions_.AddEntriesFrom(input, _repeated_initializationActions_codec);
            break;
          }
          case 98: {
            if (secondaryWorkerConfig_ == null) {
              SecondaryWorkerConfig = new global::Google.Cloud.Dataproc.V1.InstanceGroupConfig();
            }
            input.ReadMessage(SecondaryWorkerConfig);
            break;
          }
          case 106: {
            if (softwareConfig_ == null) {
              SoftwareConfig = new global::Google.Cloud.Dataproc.V1.SoftwareConfig();
            }
            input.ReadMessage(SoftwareConfig);
            break;
          }
          case 122: {
            if (encryptionConfig_ == null) {
              EncryptionConfig = new global::Google.Cloud.Dataproc.V1.EncryptionConfig();
            }
            input.ReadMessage(EncryptionConfig);
            break;
          }
          case 130: {
            if (securityConfig_ == null) {
              SecurityConfig = new global::Google.Cloud.Dataproc.V1.SecurityConfig();
            }
            input.ReadMessage(SecurityConfig);
            break;
          }
          case 138: {
            if (lifecycleConfig_ == null) {
              LifecycleConfig = new global::Google.Cloud.Dataproc.V1.LifecycleConfig();
            }
            input.ReadMessage(LifecycleConfig);
            break;
          }
          case 146: {
            if (autoscalingConfig_ == null) {
              AutoscalingConfig = new global::Google.Cloud.Dataproc.V1.AutoscalingConfig();
            }
            input.ReadMessage(AutoscalingConfig);
            break;
          }
          case 154: {
            if (endpointConfig_ == null) {
              EndpointConfig = new global::Google.Cloud.Dataproc.V1.EndpointConfig();
            }
            input.ReadMessage(EndpointConfig);
            break;
          }
          case 162: {
            if (metastoreConfig_ == null) {
              MetastoreConfig = new global::Google.Cloud.Dataproc.V1.MetastoreConfig();
            }
            input.ReadMessage(MetastoreConfig);
            break;
          }
          case 170: {
            if (gkeClusterConfig_ == null) {
              GkeClusterConfig = new global::Google.Cloud.Dataproc.V1.GkeClusterConfig();
            }
            input.ReadMessage(GkeClusterConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ConfigBucket = input.ReadString();
            break;
          }
          case 18: {
            TempBucket = input.ReadString();
            break;
          }
          case 66: {
            if (gceClusterConfig_ == null) {
              GceClusterConfig = new global::Google.Cloud.Dataproc.V1.GceClusterConfig();
            }
            input.ReadMessage(GceClusterConfig);
            break;
          }
          case 74: {
            if (masterConfig_ == null) {
              MasterConfig = new global::Google.Cloud.Dataproc.V1.InstanceGroupConfig();
            }
            input.ReadMessage(MasterConfig);
            break;
          }
          case 82: {
            if (workerConfig_ == null) {
              WorkerConfig = new global::Google.Cloud.Dataproc.V1.InstanceGroupConfig();
            }
            input.ReadMessage(WorkerConfig);
            break;
          }
          case 90: {
            initializationActions_.AddEntriesFrom(ref input, _repeated_initializationActions_codec);
            break;
          }
          case 98: {
            if (secondaryWorkerConfig_ == null) {
              SecondaryWorkerConfig = new global::Google.Cloud.Dataproc.V1.InstanceGroupConfig();
            }
            input.ReadMessage(SecondaryWorkerConfig);
            break;
          }
          case 106: {
            if (softwareConfig_ == null) {
              SoftwareConfig = new global::Google.Cloud.Dataproc.V1.SoftwareConfig();
            }
            input.ReadMessage(SoftwareConfig);
            break;
          }
          case 122: {
            if (encryptionConfig_ == null) {
              EncryptionConfig = new global::Google.Cloud.Dataproc.V1.EncryptionConfig();
            }
            input.ReadMessage(EncryptionConfig);
            break;
          }
          case 130: {
            if (securityConfig_ == null) {
              SecurityConfig = new global::Google.Cloud.Dataproc.V1.SecurityConfig();
            }
            input.ReadMessage(SecurityConfig);
            break;
          }
          case 138: {
            if (lifecycleConfig_ == null) {
              LifecycleConfig = new global::Google.Cloud.Dataproc.V1.LifecycleConfig();
            }
            input.ReadMessage(LifecycleConfig);
            break;
          }
          case 146: {
            if (autoscalingConfig_ == null) {
              AutoscalingConfig = new global::Google.Cloud.Dataproc.V1.AutoscalingConfig();
            }
            input.ReadMessage(AutoscalingConfig);
            break;
          }
          case 154: {
            if (endpointConfig_ == null) {
              EndpointConfig = new global::Google.Cloud.Dataproc.V1.EndpointConfig();
            }
            input.ReadMessage(EndpointConfig);
            break;
          }
          case 162: {
            if (metastoreConfig_ == null) {
              MetastoreConfig = new global::Google.Cloud.Dataproc.V1.MetastoreConfig();
            }
            input.ReadMessage(MetastoreConfig);
            break;
          }
          case 170: {
            if (gkeClusterConfig_ == null) {
              GkeClusterConfig = new global::Google.Cloud.Dataproc.V1.GkeClusterConfig();
            }
            input.ReadMessage(GkeClusterConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The GKE config for this cluster.
  /// </summary>
  public sealed partial class GkeClusterConfig : pb::IMessage<GkeClusterConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GkeClusterConfig> _parser = new pb::MessageParser<GkeClusterConfig>(() => new GkeClusterConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GkeClusterConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GkeClusterConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GkeClusterConfig(GkeClusterConfig other) : this() {
      namespacedGkeDeploymentTarget_ = other.namespacedGkeDeploymentTarget_ != null ? other.namespacedGkeDeploymentTarget_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GkeClusterConfig Clone() {
      return new GkeClusterConfig(this);
    }

    /// <summary>Field number for the "namespaced_gke_deployment_target" field.</summary>
    public const int NamespacedGkeDeploymentTargetFieldNumber = 1;
    private global::Google.Cloud.Dataproc.V1.GkeClusterConfig.Types.NamespacedGkeDeploymentTarget namespacedGkeDeploymentTarget_;
    /// <summary>
    /// Optional. A target for the deployment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.GkeClusterConfig.Types.NamespacedGkeDeploymentTarget NamespacedGkeDeploymentTarget {
      get { return namespacedGkeDeploymentTarget_; }
      set {
        namespacedGkeDeploymentTarget_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GkeClusterConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GkeClusterConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NamespacedGkeDeploymentTarget, other.NamespacedGkeDeploymentTarget)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (namespacedGkeDeploymentTarget_ != null) hash ^= NamespacedGkeDeploymentTarget.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (namespacedGkeDeploymentTarget_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NamespacedGkeDeploymentTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (namespacedGkeDeploymentTarget_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NamespacedGkeDeploymentTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (namespacedGkeDeploymentTarget_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NamespacedGkeDeploymentTarget);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GkeClusterConfig other) {
      if (other == null) {
        return;
      }
      if (other.namespacedGkeDeploymentTarget_ != null) {
        if (namespacedGkeDeploymentTarget_ == null) {
          NamespacedGkeDeploymentTarget = new global::Google.Cloud.Dataproc.V1.GkeClusterConfig.Types.NamespacedGkeDeploymentTarget();
        }
        NamespacedGkeDeploymentTarget.MergeFrom(other.NamespacedGkeDeploymentTarget);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (namespacedGkeDeploymentTarget_ == null) {
              NamespacedGkeDeploymentTarget = new global::Google.Cloud.Dataproc.V1.GkeClusterConfig.Types.NamespacedGkeDeploymentTarget();
            }
            input.ReadMessage(NamespacedGkeDeploymentTarget);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (namespacedGkeDeploymentTarget_ == null) {
              NamespacedGkeDeploymentTarget = new global::Google.Cloud.Dataproc.V1.GkeClusterConfig.Types.NamespacedGkeDeploymentTarget();
            }
            input.ReadMessage(NamespacedGkeDeploymentTarget);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GkeClusterConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A full, namespace-isolated deployment target for an existing GKE cluster.
      /// </summary>
      public sealed partial class NamespacedGkeDeploymentTarget : pb::IMessage<NamespacedGkeDeploymentTarget>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NamespacedGkeDeploymentTarget> _parser = new pb::MessageParser<NamespacedGkeDeploymentTarget>(() => new NamespacedGkeDeploymentTarget());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NamespacedGkeDeploymentTarget> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dataproc.V1.GkeClusterConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NamespacedGkeDeploymentTarget() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NamespacedGkeDeploymentTarget(NamespacedGkeDeploymentTarget other) : this() {
          targetGkeCluster_ = other.targetGkeCluster_;
          clusterNamespace_ = other.clusterNamespace_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NamespacedGkeDeploymentTarget Clone() {
          return new NamespacedGkeDeploymentTarget(this);
        }

        /// <summary>Field number for the "target_gke_cluster" field.</summary>
        public const int TargetGkeClusterFieldNumber = 1;
        private string targetGkeCluster_ = "";
        /// <summary>
        /// Optional. The target GKE cluster to deploy to.
        /// Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TargetGkeCluster {
          get { return targetGkeCluster_; }
          set {
            targetGkeCluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "cluster_namespace" field.</summary>
        public const int ClusterNamespaceFieldNumber = 2;
        private string clusterNamespace_ = "";
        /// <summary>
        /// Optional. A namespace within the GKE cluster to deploy into.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClusterNamespace {
          get { return clusterNamespace_; }
          set {
            clusterNamespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NamespacedGkeDeploymentTarget);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NamespacedGkeDeploymentTarget other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetGkeCluster != other.TargetGkeCluster) return false;
          if (ClusterNamespace != other.ClusterNamespace) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetGkeCluster.Length != 0) hash ^= TargetGkeCluster.GetHashCode();
          if (ClusterNamespace.Length != 0) hash ^= ClusterNamespace.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TargetGkeCluster.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TargetGkeCluster);
          }
          if (ClusterNamespace.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ClusterNamespace);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TargetGkeCluster.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TargetGkeCluster);
          }
          if (ClusterNamespace.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ClusterNamespace);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TargetGkeCluster.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetGkeCluster);
          }
          if (ClusterNamespace.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterNamespace);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NamespacedGkeDeploymentTarget other) {
          if (other == null) {
            return;
          }
          if (other.TargetGkeCluster.Length != 0) {
            TargetGkeCluster = other.TargetGkeCluster;
          }
          if (other.ClusterNamespace.Length != 0) {
            ClusterNamespace = other.ClusterNamespace;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TargetGkeCluster = input.ReadString();
                break;
              }
              case 18: {
                ClusterNamespace = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TargetGkeCluster = input.ReadString();
                break;
              }
              case 18: {
                ClusterNamespace = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Endpoint config for this cluster
  /// </summary>
  public sealed partial class EndpointConfig : pb::IMessage<EndpointConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndpointConfig> _parser = new pb::MessageParser<EndpointConfig>(() => new EndpointConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndpointConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndpointConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndpointConfig(EndpointConfig other) : this() {
      httpPorts_ = other.httpPorts_.Clone();
      enableHttpPortAccess_ = other.enableHttpPortAccess_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndpointConfig Clone() {
      return new EndpointConfig(this);
    }

    /// <summary>Field number for the "http_ports" field.</summary>
    public const int HttpPortsFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_httpPorts_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> httpPorts_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Output only. The map of port descriptions to URLs. Will only be populated
    /// if enable_http_port_access is true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> HttpPorts {
      get { return httpPorts_; }
    }

    /// <summary>Field number for the "enable_http_port_access" field.</summary>
    public const int EnableHttpPortAccessFieldNumber = 2;
    private bool enableHttpPortAccess_;
    /// <summary>
    /// Optional. If true, enable http access to specific ports on the cluster
    /// from external sources. Defaults to false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableHttpPortAccess {
      get { return enableHttpPortAccess_; }
      set {
        enableHttpPortAccess_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndpointConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndpointConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!HttpPorts.Equals(other.HttpPorts)) return false;
      if (EnableHttpPortAccess != other.EnableHttpPortAccess) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= HttpPorts.GetHashCode();
      if (EnableHttpPortAccess != false) hash ^= EnableHttpPortAccess.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      httpPorts_.WriteTo(output, _map_httpPorts_codec);
      if (EnableHttpPortAccess != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnableHttpPortAccess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      httpPorts_.WriteTo(ref output, _map_httpPorts_codec);
      if (EnableHttpPortAccess != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnableHttpPortAccess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += httpPorts_.CalculateSize(_map_httpPorts_codec);
      if (EnableHttpPortAccess != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndpointConfig other) {
      if (other == null) {
        return;
      }
      httpPorts_.Add(other.httpPorts_);
      if (other.EnableHttpPortAccess != false) {
        EnableHttpPortAccess = other.EnableHttpPortAccess;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            httpPorts_.AddEntriesFrom(input, _map_httpPorts_codec);
            break;
          }
          case 16: {
            EnableHttpPortAccess = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            httpPorts_.AddEntriesFrom(ref input, _map_httpPorts_codec);
            break;
          }
          case 16: {
            EnableHttpPortAccess = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Autoscaling Policy config associated with the cluster.
  /// </summary>
  public sealed partial class AutoscalingConfig : pb::IMessage<AutoscalingConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AutoscalingConfig> _parser = new pb::MessageParser<AutoscalingConfig>(() => new AutoscalingConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AutoscalingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoscalingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoscalingConfig(AutoscalingConfig other) : this() {
      policyUri_ = other.policyUri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoscalingConfig Clone() {
      return new AutoscalingConfig(this);
    }

    /// <summary>Field number for the "policy_uri" field.</summary>
    public const int PolicyUriFieldNumber = 1;
    private string policyUri_ = "";
    /// <summary>
    /// Optional. The autoscaling policy used by the cluster.
    ///
    /// Only resource names including projectid and location (region) are valid.
    /// Examples:
    ///
    /// * `https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]`
    /// * `projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]`
    ///
    /// Note that the policy must be in the same project and Dataproc region.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PolicyUri {
      get { return policyUri_; }
      set {
        policyUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AutoscalingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AutoscalingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PolicyUri != other.PolicyUri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PolicyUri.Length != 0) hash ^= PolicyUri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PolicyUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PolicyUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PolicyUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PolicyUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PolicyUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PolicyUri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AutoscalingConfig other) {
      if (other == null) {
        return;
      }
      if (other.PolicyUri.Length != 0) {
        PolicyUri = other.PolicyUri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PolicyUri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PolicyUri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Encryption settings for the cluster.
  /// </summary>
  public sealed partial class EncryptionConfig : pb::IMessage<EncryptionConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EncryptionConfig> _parser = new pb::MessageParser<EncryptionConfig>(() => new EncryptionConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncryptionConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionConfig(EncryptionConfig other) : this() {
      gcePdKmsKeyName_ = other.gcePdKmsKeyName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionConfig Clone() {
      return new EncryptionConfig(this);
    }

    /// <summary>Field number for the "gce_pd_kms_key_name" field.</summary>
    public const int GcePdKmsKeyNameFieldNumber = 1;
    private string gcePdKmsKeyName_ = "";
    /// <summary>
    /// Optional. The Cloud KMS key name to use for PD disk encryption for all
    /// instances in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GcePdKmsKeyName {
      get { return gcePdKmsKeyName_; }
      set {
        gcePdKmsKeyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncryptionConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncryptionConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GcePdKmsKeyName != other.GcePdKmsKeyName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GcePdKmsKeyName.Length != 0) hash ^= GcePdKmsKeyName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GcePdKmsKeyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GcePdKmsKeyName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GcePdKmsKeyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GcePdKmsKeyName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GcePdKmsKeyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GcePdKmsKeyName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncryptionConfig other) {
      if (other == null) {
        return;
      }
      if (other.GcePdKmsKeyName.Length != 0) {
        GcePdKmsKeyName = other.GcePdKmsKeyName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GcePdKmsKeyName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GcePdKmsKeyName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Common config settings for resources of Compute Engine cluster
  /// instances, applicable to all instances in the cluster.
  /// </summary>
  public sealed partial class GceClusterConfig : pb::IMessage<GceClusterConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GceClusterConfig> _parser = new pb::MessageParser<GceClusterConfig>(() => new GceClusterConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GceClusterConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GceClusterConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GceClusterConfig(GceClusterConfig other) : this() {
      zoneUri_ = other.zoneUri_;
      networkUri_ = other.networkUri_;
      subnetworkUri_ = other.subnetworkUri_;
      internalIpOnly_ = other.internalIpOnly_;
      privateIpv6GoogleAccess_ = other.privateIpv6GoogleAccess_;
      serviceAccount_ = other.serviceAccount_;
      serviceAccountScopes_ = other.serviceAccountScopes_.Clone();
      tags_ = other.tags_.Clone();
      metadata_ = other.metadata_.Clone();
      reservationAffinity_ = other.reservationAffinity_ != null ? other.reservationAffinity_.Clone() : null;
      nodeGroupAffinity_ = other.nodeGroupAffinity_ != null ? other.nodeGroupAffinity_.Clone() : null;
      shieldedInstanceConfig_ = other.shieldedInstanceConfig_ != null ? other.shieldedInstanceConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GceClusterConfig Clone() {
      return new GceClusterConfig(this);
    }

    /// <summary>Field number for the "zone_uri" field.</summary>
    public const int ZoneUriFieldNumber = 1;
    private string zoneUri_ = "";
    /// <summary>
    /// Optional. The zone where the Compute Engine cluster will be located.
    /// On a create request, it is required in the "global" region. If omitted
    /// in a non-global Dataproc region, the service will pick a zone in the
    /// corresponding Compute Engine region. On a get request, zone will
    /// always be present.
    ///
    /// A full URL, partial URI, or short name are valid. Examples:
    ///
    /// * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]`
    /// * `projects/[project_id]/zones/[zone]`
    /// * `us-central1-f`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZoneUri {
      get { return zoneUri_; }
      set {
        zoneUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network_uri" field.</summary>
    public const int NetworkUriFieldNumber = 2;
    private string networkUri_ = "";
    /// <summary>
    /// Optional. The Compute Engine network to be used for machine
    /// communications. Cannot be specified with subnetwork_uri. If neither
    /// `network_uri` nor `subnetwork_uri` is specified, the "default" network of
    /// the project is used, if it exists. Cannot be a "Custom Subnet Network" (see
    /// [Using Subnetworks](https://cloud.google.com/compute/docs/subnetworks) for
    /// more information).
    ///
    /// A full URL, partial URI, or short name are valid. Examples:
    ///
    /// * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default`
    /// * `projects/[project_id]/regions/global/default`
    /// * `default`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkUri {
      get { return networkUri_; }
      set {
        networkUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subnetwork_uri" field.</summary>
    public const int SubnetworkUriFieldNumber = 6;
    private string subnetworkUri_ = "";
    /// <summary>
    /// Optional. The Compute Engine subnetwork to be used for machine
    /// communications. Cannot be specified with network_uri.
    ///
    /// A full URL, partial URI, or short name are valid. Examples:
    ///
    /// * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0`
    /// * `projects/[project_id]/regions/us-east1/subnetworks/sub0`
    /// * `sub0`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubnetworkUri {
      get { return subnetworkUri_; }
      set {
        subnetworkUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "internal_ip_only" field.</summary>
    public const int InternalIpOnlyFieldNumber = 7;
    private bool internalIpOnly_;
    /// <summary>
    /// Optional. If true, all instances in the cluster will only have internal IP
    /// addresses. By default, clusters are not restricted to internal IP
    /// addresses, and will have ephemeral external IP addresses assigned to each
    /// instance. This `internal_ip_only` restriction can only be enabled for
    /// subnetwork enabled networks, and all off-cluster dependencies must be
    /// configured to be accessible without external IP addresses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InternalIpOnly {
      get { return internalIpOnly_; }
      set {
        internalIpOnly_ = value;
      }
    }

    /// <summary>Field number for the "private_ipv6_google_access" field.</summary>
    public const int PrivateIpv6GoogleAccessFieldNumber = 12;
    private global::Google.Cloud.Dataproc.V1.GceClusterConfig.Types.PrivateIpv6GoogleAccess privateIpv6GoogleAccess_ = global::Google.Cloud.Dataproc.V1.GceClusterConfig.Types.PrivateIpv6GoogleAccess.Unspecified;
    /// <summary>
    /// Optional. The type of IPv6 access for a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.GceClusterConfig.Types.PrivateIpv6GoogleAccess PrivateIpv6GoogleAccess {
      get { return privateIpv6GoogleAccess_; }
      set {
        privateIpv6GoogleAccess_ = value;
      }
    }

    /// <summary>Field number for the "service_account" field.</summary>
    public const int ServiceAccountFieldNumber = 8;
    private string serviceAccount_ = "";
    /// <summary>
    /// Optional. The [Dataproc service
    /// account](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc)
    /// (also see [VM Data Plane
    /// identity](https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity))
    /// used by Dataproc cluster VM instances to access Google Cloud Platform
    /// services.
    ///
    /// If not specified, the
    /// [Compute Engine default service
    /// account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account)
    /// is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceAccount {
      get { return serviceAccount_; }
      set {
        serviceAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_account_scopes" field.</summary>
    public const int ServiceAccountScopesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_serviceAccountScopes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> serviceAccountScopes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. The URIs of service account scopes to be included in
    /// Compute Engine instances. The following base set of scopes is always
    /// included:
    ///
    /// * https://www.googleapis.com/auth/cloud.useraccounts.readonly
    /// * https://www.googleapis.com/auth/devstorage.read_write
    /// * https://www.googleapis.com/auth/logging.write
    ///
    /// If no scopes are specified, the following defaults are also provided:
    ///
    /// * https://www.googleapis.com/auth/bigquery
    /// * https://www.googleapis.com/auth/bigtable.admin.table
    /// * https://www.googleapis.com/auth/bigtable.data
    /// * https://www.googleapis.com/auth/devstorage.full_control
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ServiceAccountScopes {
      get { return serviceAccountScopes_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The Compute Engine tags to add to all instances (see [Tagging
    /// instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The Compute Engine metadata entries to add to all instances (see
    /// [Project and instance
    /// metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "reservation_affinity" field.</summary>
    public const int ReservationAffinityFieldNumber = 11;
    private global::Google.Cloud.Dataproc.V1.ReservationAffinity reservationAffinity_;
    /// <summary>
    /// Optional. Reservation Affinity for consuming Zonal reservation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.ReservationAffinity ReservationAffinity {
      get { return reservationAffinity_; }
      set {
        reservationAffinity_ = value;
      }
    }

    /// <summary>Field number for the "node_group_affinity" field.</summary>
    public const int NodeGroupAffinityFieldNumber = 13;
    private global::Google.Cloud.Dataproc.V1.NodeGroupAffinity nodeGroupAffinity_;
    /// <summary>
    /// Optional. Node Group Affinity for sole-tenant clusters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.NodeGroupAffinity NodeGroupAffinity {
      get { return nodeGroupAffinity_; }
      set {
        nodeGroupAffinity_ = value;
      }
    }

    /// <summary>Field number for the "shielded_instance_config" field.</summary>
    public const int ShieldedInstanceConfigFieldNumber = 14;
    private global::Google.Cloud.Dataproc.V1.ShieldedInstanceConfig shieldedInstanceConfig_;
    /// <summary>
    /// Optional. Shielded Instance Config for clusters using [Compute Engine Shielded
    /// VMs](https://cloud.google.com/security/shielded-cloud/shielded-vm).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.ShieldedInstanceConfig ShieldedInstanceConfig {
      get { return shieldedInstanceConfig_; }
      set {
        shieldedInstanceConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GceClusterConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GceClusterConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ZoneUri != other.ZoneUri) return false;
      if (NetworkUri != other.NetworkUri) return false;
      if (SubnetworkUri != other.SubnetworkUri) return false;
      if (InternalIpOnly != other.InternalIpOnly) return false;
      if (PrivateIpv6GoogleAccess != other.PrivateIpv6GoogleAccess) return false;
      if (ServiceAccount != other.ServiceAccount) return false;
      if(!serviceAccountScopes_.Equals(other.serviceAccountScopes_)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      if (!object.Equals(ReservationAffinity, other.ReservationAffinity)) return false;
      if (!object.Equals(NodeGroupAffinity, other.NodeGroupAffinity)) return false;
      if (!object.Equals(ShieldedInstanceConfig, other.ShieldedInstanceConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ZoneUri.Length != 0) hash ^= ZoneUri.GetHashCode();
      if (NetworkUri.Length != 0) hash ^= NetworkUri.GetHashCode();
      if (SubnetworkUri.Length != 0) hash ^= SubnetworkUri.GetHashCode();
      if (InternalIpOnly != false) hash ^= InternalIpOnly.GetHashCode();
      if (PrivateIpv6GoogleAccess != global::Google.Cloud.Dataproc.V1.GceClusterConfig.Types.PrivateIpv6GoogleAccess.Unspecified) hash ^= PrivateIpv6GoogleAccess.GetHashCode();
      if (ServiceAccount.Length != 0) hash ^= ServiceAccount.GetHashCode();
      hash ^= serviceAccountScopes_.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= Metadata.GetHashCode();
      if (reservationAffinity_ != null) hash ^= ReservationAffinity.GetHashCode();
      if (nodeGroupAffinity_ != null) hash ^= NodeGroupAffinity.GetHashCode();
      if (shieldedInstanceConfig_ != null) hash ^= ShieldedInstanceConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ZoneUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ZoneUri);
      }
      if (NetworkUri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NetworkUri);
      }
      serviceAccountScopes_.WriteTo(output, _repeated_serviceAccountScopes_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      metadata_.WriteTo(output, _map_metadata_codec);
      if (SubnetworkUri.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SubnetworkUri);
      }
      if (InternalIpOnly != false) {
        output.WriteRawTag(56);
        output.WriteBool(InternalIpOnly);
      }
      if (ServiceAccount.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ServiceAccount);
      }
      if (reservationAffinity_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ReservationAffinity);
      }
      if (PrivateIpv6GoogleAccess != global::Google.Cloud.Dataproc.V1.GceClusterConfig.Types.PrivateIpv6GoogleAccess.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) PrivateIpv6GoogleAccess);
      }
      if (nodeGroupAffinity_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(NodeGroupAffinity);
      }
      if (shieldedInstanceConfig_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ShieldedInstanceConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ZoneUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ZoneUri);
      }
      if (NetworkUri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NetworkUri);
      }
      serviceAccountScopes_.WriteTo(ref output, _repeated_serviceAccountScopes_codec);
      tags_.WriteTo(ref output, _repeated_tags_codec);
      metadata_.WriteTo(ref output, _map_metadata_codec);
      if (SubnetworkUri.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SubnetworkUri);
      }
      if (InternalIpOnly != false) {
        output.WriteRawTag(56);
        output.WriteBool(InternalIpOnly);
      }
      if (ServiceAccount.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ServiceAccount);
      }
      if (reservationAffinity_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ReservationAffinity);
      }
      if (PrivateIpv6GoogleAccess != global::Google.Cloud.Dataproc.V1.GceClusterConfig.Types.PrivateIpv6GoogleAccess.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) PrivateIpv6GoogleAccess);
      }
      if (nodeGroupAffinity_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(NodeGroupAffinity);
      }
      if (shieldedInstanceConfig_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ShieldedInstanceConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ZoneUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZoneUri);
      }
      if (NetworkUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkUri);
      }
      if (SubnetworkUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnetworkUri);
      }
      if (InternalIpOnly != false) {
        size += 1 + 1;
      }
      if (PrivateIpv6GoogleAccess != global::Google.Cloud.Dataproc.V1.GceClusterConfig.Types.PrivateIpv6GoogleAccess.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PrivateIpv6GoogleAccess);
      }
      if (ServiceAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceAccount);
      }
      size += serviceAccountScopes_.CalculateSize(_repeated_serviceAccountScopes_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (reservationAffinity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservationAffinity);
      }
      if (nodeGroupAffinity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeGroupAffinity);
      }
      if (shieldedInstanceConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShieldedInstanceConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GceClusterConfig other) {
      if (other == null) {
        return;
      }
      if (other.ZoneUri.Length != 0) {
        ZoneUri = other.ZoneUri;
      }
      if (other.NetworkUri.Length != 0) {
        NetworkUri = other.NetworkUri;
      }
      if (other.SubnetworkUri.Length != 0) {
        SubnetworkUri = other.SubnetworkUri;
      }
      if (other.InternalIpOnly != false) {
        InternalIpOnly = other.InternalIpOnly;
      }
      if (other.PrivateIpv6GoogleAccess != global::Google.Cloud.Dataproc.V1.GceClusterConfig.Types.PrivateIpv6GoogleAccess.Unspecified) {
        PrivateIpv6GoogleAccess = other.PrivateIpv6GoogleAccess;
      }
      if (other.ServiceAccount.Length != 0) {
        ServiceAccount = other.ServiceAccount;
      }
      serviceAccountScopes_.Add(other.serviceAccountScopes_);
      tags_.Add(other.tags_);
      metadata_.Add(other.metadata_);
      if (other.reservationAffinity_ != null) {
        if (reservationAffinity_ == null) {
          ReservationAffinity = new global::Google.Cloud.Dataproc.V1.ReservationAffinity();
        }
        ReservationAffinity.MergeFrom(other.ReservationAffinity);
      }
      if (other.nodeGroupAffinity_ != null) {
        if (nodeGroupAffinity_ == null) {
          NodeGroupAffinity = new global::Google.Cloud.Dataproc.V1.NodeGroupAffinity();
        }
        NodeGroupAffinity.MergeFrom(other.NodeGroupAffinity);
      }
      if (other.shieldedInstanceConfig_ != null) {
        if (shieldedInstanceConfig_ == null) {
          ShieldedInstanceConfig = new global::Google.Cloud.Dataproc.V1.ShieldedInstanceConfig();
        }
        ShieldedInstanceConfig.MergeFrom(other.ShieldedInstanceConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ZoneUri = input.ReadString();
            break;
          }
          case 18: {
            NetworkUri = input.ReadString();
            break;
          }
          case 26: {
            serviceAccountScopes_.AddEntriesFrom(input, _repeated_serviceAccountScopes_codec);
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 42: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
          case 50: {
            SubnetworkUri = input.ReadString();
            break;
          }
          case 56: {
            InternalIpOnly = input.ReadBool();
            break;
          }
          case 66: {
            ServiceAccount = input.ReadString();
            break;
          }
          case 90: {
            if (reservationAffinity_ == null) {
              ReservationAffinity = new global::Google.Cloud.Dataproc.V1.ReservationAffinity();
            }
            input.ReadMessage(ReservationAffinity);
            break;
          }
          case 96: {
            PrivateIpv6GoogleAccess = (global::Google.Cloud.Dataproc.V1.GceClusterConfig.Types.PrivateIpv6GoogleAccess) input.ReadEnum();
            break;
          }
          case 106: {
            if (nodeGroupAffinity_ == null) {
              NodeGroupAffinity = new global::Google.Cloud.Dataproc.V1.NodeGroupAffinity();
            }
            input.ReadMessage(NodeGroupAffinity);
            break;
          }
          case 114: {
            if (shieldedInstanceConfig_ == null) {
              ShieldedInstanceConfig = new global::Google.Cloud.Dataproc.V1.ShieldedInstanceConfig();
            }
            input.ReadMessage(ShieldedInstanceConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ZoneUri = input.ReadString();
            break;
          }
          case 18: {
            NetworkUri = input.ReadString();
            break;
          }
          case 26: {
            serviceAccountScopes_.AddEntriesFrom(ref input, _repeated_serviceAccountScopes_codec);
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
            break;
          }
          case 42: {
            metadata_.AddEntriesFrom(ref input, _map_metadata_codec);
            break;
          }
          case 50: {
            SubnetworkUri = input.ReadString();
            break;
          }
          case 56: {
            InternalIpOnly = input.ReadBool();
            break;
          }
          case 66: {
            ServiceAccount = input.ReadString();
            break;
          }
          case 90: {
            if (reservationAffinity_ == null) {
              ReservationAffinity = new global::Google.Cloud.Dataproc.V1.ReservationAffinity();
            }
            input.ReadMessage(ReservationAffinity);
            break;
          }
          case 96: {
            PrivateIpv6GoogleAccess = (global::Google.Cloud.Dataproc.V1.GceClusterConfig.Types.PrivateIpv6GoogleAccess) input.ReadEnum();
            break;
          }
          case 106: {
            if (nodeGroupAffinity_ == null) {
              NodeGroupAffinity = new global::Google.Cloud.Dataproc.V1.NodeGroupAffinity();
            }
            input.ReadMessage(NodeGroupAffinity);
            break;
          }
          case 114: {
            if (shieldedInstanceConfig_ == null) {
              ShieldedInstanceConfig = new global::Google.Cloud.Dataproc.V1.ShieldedInstanceConfig();
            }
            input.ReadMessage(ShieldedInstanceConfig);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GceClusterConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// `PrivateIpv6GoogleAccess` controls whether and how Dataproc cluster nodes
      /// can communicate with Google Services through gRPC over IPv6.
      /// These values are directly mapped to corresponding values in the
      /// [Compute Engine Instance
      /// fields](https://cloud.google.com/compute/docs/reference/rest/v1/instances).
      /// </summary>
      public enum PrivateIpv6GoogleAccess {
        /// <summary>
        /// If unspecified, Compute Engine default behavior will apply, which
        /// is the same as [INHERIT_FROM_SUBNETWORK][google.cloud.dataproc.v1.GceClusterConfig.PrivateIpv6GoogleAccess.INHERIT_FROM_SUBNETWORK].
        /// </summary>
        [pbr::OriginalName("PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Private access to and from Google Services configuration
        /// inherited from the subnetwork configuration. This is the
        /// default Compute Engine behavior.
        /// </summary>
        [pbr::OriginalName("INHERIT_FROM_SUBNETWORK")] InheritFromSubnetwork = 1,
        /// <summary>
        /// Enables outbound private IPv6 access to Google Services from the Dataproc
        /// cluster.
        /// </summary>
        [pbr::OriginalName("OUTBOUND")] Outbound = 2,
        /// <summary>
        /// Enables bidirectional private IPv6 access between Google Services and the
        /// Dataproc cluster.
        /// </summary>
        [pbr::OriginalName("BIDIRECTIONAL")] Bidirectional = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// Node Group Affinity for clusters using sole-tenant node groups.
  /// </summary>
  public sealed partial class NodeGroupAffinity : pb::IMessage<NodeGroupAffinity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeGroupAffinity> _parser = new pb::MessageParser<NodeGroupAffinity>(() => new NodeGroupAffinity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeGroupAffinity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeGroupAffinity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeGroupAffinity(NodeGroupAffinity other) : this() {
      nodeGroupUri_ = other.nodeGroupUri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeGroupAffinity Clone() {
      return new NodeGroupAffinity(this);
    }

    /// <summary>Field number for the "node_group_uri" field.</summary>
    public const int NodeGroupUriFieldNumber = 1;
    private string nodeGroupUri_ = "";
    /// <summary>
    /// Required. The URI of a
    /// sole-tenant [node group
    /// resource](https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups)
    /// that the cluster will be created on.
    ///
    /// A full URL, partial URI, or node group name are valid. Examples:
    ///
    /// * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1`
    /// * `projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1`
    /// * `node-group-1`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeGroupUri {
      get { return nodeGroupUri_; }
      set {
        nodeGroupUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeGroupAffinity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeGroupAffinity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeGroupUri != other.NodeGroupUri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeGroupUri.Length != 0) hash ^= NodeGroupUri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NodeGroupUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeGroupUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NodeGroupUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeGroupUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeGroupUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeGroupUri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeGroupAffinity other) {
      if (other == null) {
        return;
      }
      if (other.NodeGroupUri.Length != 0) {
        NodeGroupUri = other.NodeGroupUri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeGroupUri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NodeGroupUri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Shielded Instance Config for clusters using [Compute Engine Shielded
  /// VMs](https://cloud.google.com/security/shielded-cloud/shielded-vm).
  /// </summary>
  public sealed partial class ShieldedInstanceConfig : pb::IMessage<ShieldedInstanceConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShieldedInstanceConfig> _parser = new pb::MessageParser<ShieldedInstanceConfig>(() => new ShieldedInstanceConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShieldedInstanceConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedInstanceConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedInstanceConfig(ShieldedInstanceConfig other) : this() {
      enableSecureBoot_ = other.enableSecureBoot_;
      enableVtpm_ = other.enableVtpm_;
      enableIntegrityMonitoring_ = other.enableIntegrityMonitoring_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedInstanceConfig Clone() {
      return new ShieldedInstanceConfig(this);
    }

    /// <summary>Field number for the "enable_secure_boot" field.</summary>
    public const int EnableSecureBootFieldNumber = 1;
    private bool enableSecureBoot_;
    /// <summary>
    /// Optional. Defines whether instances have Secure Boot enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableSecureBoot {
      get { return enableSecureBoot_; }
      set {
        enableSecureBoot_ = value;
      }
    }

    /// <summary>Field number for the "enable_vtpm" field.</summary>
    public const int EnableVtpmFieldNumber = 2;
    private bool enableVtpm_;
    /// <summary>
    /// Optional. Defines whether instances have the vTPM enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableVtpm {
      get { return enableVtpm_; }
      set {
        enableVtpm_ = value;
      }
    }

    /// <summary>Field number for the "enable_integrity_monitoring" field.</summary>
    public const int EnableIntegrityMonitoringFieldNumber = 3;
    private bool enableIntegrityMonitoring_;
    /// <summary>
    /// Optional. Defines whether instances have integrity monitoring enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableIntegrityMonitoring {
      get { return enableIntegrityMonitoring_; }
      set {
        enableIntegrityMonitoring_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShieldedInstanceConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShieldedInstanceConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableSecureBoot != other.EnableSecureBoot) return false;
      if (EnableVtpm != other.EnableVtpm) return false;
      if (EnableIntegrityMonitoring != other.EnableIntegrityMonitoring) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnableSecureBoot != false) hash ^= EnableSecureBoot.GetHashCode();
      if (EnableVtpm != false) hash ^= EnableVtpm.GetHashCode();
      if (EnableIntegrityMonitoring != false) hash ^= EnableIntegrityMonitoring.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EnableSecureBoot != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableSecureBoot);
      }
      if (EnableVtpm != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnableVtpm);
      }
      if (EnableIntegrityMonitoring != false) {
        output.WriteRawTag(24);
        output.WriteBool(EnableIntegrityMonitoring);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EnableSecureBoot != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableSecureBoot);
      }
      if (EnableVtpm != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnableVtpm);
      }
      if (EnableIntegrityMonitoring != false) {
        output.WriteRawTag(24);
        output.WriteBool(EnableIntegrityMonitoring);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnableSecureBoot != false) {
        size += 1 + 1;
      }
      if (EnableVtpm != false) {
        size += 1 + 1;
      }
      if (EnableIntegrityMonitoring != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShieldedInstanceConfig other) {
      if (other == null) {
        return;
      }
      if (other.EnableSecureBoot != false) {
        EnableSecureBoot = other.EnableSecureBoot;
      }
      if (other.EnableVtpm != false) {
        EnableVtpm = other.EnableVtpm;
      }
      if (other.EnableIntegrityMonitoring != false) {
        EnableIntegrityMonitoring = other.EnableIntegrityMonitoring;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableSecureBoot = input.ReadBool();
            break;
          }
          case 16: {
            EnableVtpm = input.ReadBool();
            break;
          }
          case 24: {
            EnableIntegrityMonitoring = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EnableSecureBoot = input.ReadBool();
            break;
          }
          case 16: {
            EnableVtpm = input.ReadBool();
            break;
          }
          case 24: {
            EnableIntegrityMonitoring = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The config settings for Compute Engine resources in
  /// an instance group, such as a master or worker group.
  /// </summary>
  public sealed partial class InstanceGroupConfig : pb::IMessage<InstanceGroupConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstanceGroupConfig> _parser = new pb::MessageParser<InstanceGroupConfig>(() => new InstanceGroupConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstanceGroupConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstanceGroupConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstanceGroupConfig(InstanceGroupConfig other) : this() {
      numInstances_ = other.numInstances_;
      instanceNames_ = other.instanceNames_.Clone();
      imageUri_ = other.imageUri_;
      machineTypeUri_ = other.machineTypeUri_;
      diskConfig_ = other.diskConfig_ != null ? other.diskConfig_.Clone() : null;
      isPreemptible_ = other.isPreemptible_;
      preemptibility_ = other.preemptibility_;
      managedGroupConfig_ = other.managedGroupConfig_ != null ? other.managedGroupConfig_.Clone() : null;
      accelerators_ = other.accelerators_.Clone();
      minCpuPlatform_ = other.minCpuPlatform_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstanceGroupConfig Clone() {
      return new InstanceGroupConfig(this);
    }

    /// <summary>Field number for the "num_instances" field.</summary>
    public const int NumInstancesFieldNumber = 1;
    private int numInstances_;
    /// <summary>
    /// Optional. The number of VM instances in the instance group.
    /// For [HA
    /// cluster](/dataproc/docs/concepts/configuring-clusters/high-availability)
    /// [master_config](#FIELDS.master_config) groups, **must be set to 3**.
    /// For standard cluster [master_config](#FIELDS.master_config) groups,
    /// **must be set to 1**.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumInstances {
      get { return numInstances_; }
      set {
        numInstances_ = value;
      }
    }

    /// <summary>Field number for the "instance_names" field.</summary>
    public const int InstanceNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_instanceNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> instanceNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Output only. The list of instance names. Dataproc derives the names
    /// from `cluster_name`, `num_instances`, and the instance group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InstanceNames {
      get { return instanceNames_; }
    }

    /// <summary>Field number for the "image_uri" field.</summary>
    public const int ImageUriFieldNumber = 3;
    private string imageUri_ = "";
    /// <summary>
    /// Optional. The Compute Engine image resource used for cluster instances.
    ///
    /// The URI can represent an image or image family.
    ///
    /// Image examples:
    ///
    /// * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id]`
    /// * `projects/[project_id]/global/images/[image-id]`
    /// * `image-id`
    ///
    /// Image family examples. Dataproc will use the most recent
    /// image from the family:
    ///
    /// * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name]`
    /// * `projects/[project_id]/global/images/family/[custom-image-family-name]`
    ///
    /// If the URI is unspecified, it will be inferred from
    /// `SoftwareConfig.image_version` or the system default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUri {
      get { return imageUri_; }
      set {
        imageUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "machine_type_uri" field.</summary>
    public const int MachineTypeUriFieldNumber = 4;
    private string machineTypeUri_ = "";
    /// <summary>
    /// Optional. The Compute Engine machine type used for cluster instances.
    ///
    /// A full URL, partial URI, or short name are valid. Examples:
    ///
    /// * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2`
    /// * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2`
    /// * `n1-standard-2`
    ///
    /// **Auto Zone Exception**: If you are using the Dataproc
    /// [Auto Zone
    /// Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement)
    /// feature, you must use the short name of the machine type
    /// resource, for example, `n1-standard-2`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MachineTypeUri {
      get { return machineTypeUri_; }
      set {
        machineTypeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disk_config" field.</summary>
    public const int DiskConfigFieldNumber = 5;
    private global::Google.Cloud.Dataproc.V1.DiskConfig diskConfig_;
    /// <summary>
    /// Optional. Disk option config settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.DiskConfig DiskConfig {
      get { return diskConfig_; }
      set {
        diskConfig_ = value;
      }
    }

    /// <summary>Field number for the "is_preemptible" field.</summary>
    public const int IsPreemptibleFieldNumber = 6;
    private bool isPreemptible_;
    /// <summary>
    /// Output only. Specifies that this instance group contains preemptible
    /// instances.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPreemptible {
      get { return isPreemptible_; }
      set {
        isPreemptible_ = value;
      }
    }

    /// <summary>Field number for the "preemptibility" field.</summary>
    public const int PreemptibilityFieldNumber = 10;
    private global::Google.Cloud.Dataproc.V1.InstanceGroupConfig.Types.Preemptibility preemptibility_ = global::Google.Cloud.Dataproc.V1.InstanceGroupConfig.Types.Preemptibility.Unspecified;
    /// <summary>
    /// Optional. Specifies the preemptibility of the instance group.
    ///
    /// The default value for master and worker groups is
    /// `NON_PREEMPTIBLE`. This default cannot be changed.
    ///
    /// The default value for secondary instances is
    /// `PREEMPTIBLE`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.InstanceGroupConfig.Types.Preemptibility Preemptibility {
      get { return preemptibility_; }
      set {
        preemptibility_ = value;
      }
    }

    /// <summary>Field number for the "managed_group_config" field.</summary>
    public const int ManagedGroupConfigFieldNumber = 7;
    private global::Google.Cloud.Dataproc.V1.ManagedGroupConfig managedGroupConfig_;
    /// <summary>
    /// Output only. The config for Compute Engine Instance Group
    /// Manager that manages this group.
    /// This is only used for preemptible instance groups.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.ManagedGroupConfig ManagedGroupConfig {
      get { return managedGroupConfig_; }
      set {
        managedGroupConfig_ = value;
      }
    }

    /// <summary>Field number for the "accelerators" field.</summary>
    public const int AcceleratorsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dataproc.V1.AcceleratorConfig> _repeated_accelerators_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Cloud.Dataproc.V1.AcceleratorConfig.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.AcceleratorConfig> accelerators_ = new pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.AcceleratorConfig>();
    /// <summary>
    /// Optional. The Compute Engine accelerator configuration for these
    /// instances.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.AcceleratorConfig> Accelerators {
      get { return accelerators_; }
    }

    /// <summary>Field number for the "min_cpu_platform" field.</summary>
    public const int MinCpuPlatformFieldNumber = 9;
    private string minCpuPlatform_ = "";
    /// <summary>
    /// Optional. Specifies the minimum cpu platform for the Instance Group.
    /// See [Dataproc -> Minimum CPU
    /// Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MinCpuPlatform {
      get { return minCpuPlatform_; }
      set {
        minCpuPlatform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstanceGroupConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstanceGroupConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NumInstances != other.NumInstances) return false;
      if(!instanceNames_.Equals(other.instanceNames_)) return false;
      if (ImageUri != other.ImageUri) return false;
      if (MachineTypeUri != other.MachineTypeUri) return false;
      if (!object.Equals(DiskConfig, other.DiskConfig)) return false;
      if (IsPreemptible != other.IsPreemptible) return false;
      if (Preemptibility != other.Preemptibility) return false;
      if (!object.Equals(ManagedGroupConfig, other.ManagedGroupConfig)) return false;
      if(!accelerators_.Equals(other.accelerators_)) return false;
      if (MinCpuPlatform != other.MinCpuPlatform) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NumInstances != 0) hash ^= NumInstances.GetHashCode();
      hash ^= instanceNames_.GetHashCode();
      if (ImageUri.Length != 0) hash ^= ImageUri.GetHashCode();
      if (MachineTypeUri.Length != 0) hash ^= MachineTypeUri.GetHashCode();
      if (diskConfig_ != null) hash ^= DiskConfig.GetHashCode();
      if (IsPreemptible != false) hash ^= IsPreemptible.GetHashCode();
      if (Preemptibility != global::Google.Cloud.Dataproc.V1.InstanceGroupConfig.Types.Preemptibility.Unspecified) hash ^= Preemptibility.GetHashCode();
      if (managedGroupConfig_ != null) hash ^= ManagedGroupConfig.GetHashCode();
      hash ^= accelerators_.GetHashCode();
      if (MinCpuPlatform.Length != 0) hash ^= MinCpuPlatform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NumInstances != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NumInstances);
      }
      instanceNames_.WriteTo(output, _repeated_instanceNames_codec);
      if (ImageUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ImageUri);
      }
      if (MachineTypeUri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MachineTypeUri);
      }
      if (diskConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DiskConfig);
      }
      if (IsPreemptible != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsPreemptible);
      }
      if (managedGroupConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ManagedGroupConfig);
      }
      accelerators_.WriteTo(output, _repeated_accelerators_codec);
      if (MinCpuPlatform.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MinCpuPlatform);
      }
      if (Preemptibility != global::Google.Cloud.Dataproc.V1.InstanceGroupConfig.Types.Preemptibility.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Preemptibility);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NumInstances != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NumInstances);
      }
      instanceNames_.WriteTo(ref output, _repeated_instanceNames_codec);
      if (ImageUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ImageUri);
      }
      if (MachineTypeUri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MachineTypeUri);
      }
      if (diskConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DiskConfig);
      }
      if (IsPreemptible != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsPreemptible);
      }
      if (managedGroupConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ManagedGroupConfig);
      }
      accelerators_.WriteTo(ref output, _repeated_accelerators_codec);
      if (MinCpuPlatform.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MinCpuPlatform);
      }
      if (Preemptibility != global::Google.Cloud.Dataproc.V1.InstanceGroupConfig.Types.Preemptibility.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Preemptibility);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NumInstances != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumInstances);
      }
      size += instanceNames_.CalculateSize(_repeated_instanceNames_codec);
      if (ImageUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUri);
      }
      if (MachineTypeUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineTypeUri);
      }
      if (diskConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DiskConfig);
      }
      if (IsPreemptible != false) {
        size += 1 + 1;
      }
      if (Preemptibility != global::Google.Cloud.Dataproc.V1.InstanceGroupConfig.Types.Preemptibility.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Preemptibility);
      }
      if (managedGroupConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ManagedGroupConfig);
      }
      size += accelerators_.CalculateSize(_repeated_accelerators_codec);
      if (MinCpuPlatform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinCpuPlatform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstanceGroupConfig other) {
      if (other == null) {
        return;
      }
      if (other.NumInstances != 0) {
        NumInstances = other.NumInstances;
      }
      instanceNames_.Add(other.instanceNames_);
      if (other.ImageUri.Length != 0) {
        ImageUri = other.ImageUri;
      }
      if (other.MachineTypeUri.Length != 0) {
        MachineTypeUri = other.MachineTypeUri;
      }
      if (other.diskConfig_ != null) {
        if (diskConfig_ == null) {
          DiskConfig = new global::Google.Cloud.Dataproc.V1.DiskConfig();
        }
        DiskConfig.MergeFrom(other.DiskConfig);
      }
      if (other.IsPreemptible != false) {
        IsPreemptible = other.IsPreemptible;
      }
      if (other.Preemptibility != global::Google.Cloud.Dataproc.V1.InstanceGroupConfig.Types.Preemptibility.Unspecified) {
        Preemptibility = other.Preemptibility;
      }
      if (other.managedGroupConfig_ != null) {
        if (managedGroupConfig_ == null) {
          ManagedGroupConfig = new global::Google.Cloud.Dataproc.V1.ManagedGroupConfig();
        }
        ManagedGroupConfig.MergeFrom(other.ManagedGroupConfig);
      }
      accelerators_.Add(other.accelerators_);
      if (other.MinCpuPlatform.Length != 0) {
        MinCpuPlatform = other.MinCpuPlatform;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NumInstances = input.ReadInt32();
            break;
          }
          case 18: {
            instanceNames_.AddEntriesFrom(input, _repeated_instanceNames_codec);
            break;
          }
          case 26: {
            ImageUri = input.ReadString();
            break;
          }
          case 34: {
            MachineTypeUri = input.ReadString();
            break;
          }
          case 42: {
            if (diskConfig_ == null) {
              DiskConfig = new global::Google.Cloud.Dataproc.V1.DiskConfig();
            }
            input.ReadMessage(DiskConfig);
            break;
          }
          case 48: {
            IsPreemptible = input.ReadBool();
            break;
          }
          case 58: {
            if (managedGroupConfig_ == null) {
              ManagedGroupConfig = new global::Google.Cloud.Dataproc.V1.ManagedGroupConfig();
            }
            input.ReadMessage(ManagedGroupConfig);
            break;
          }
          case 66: {
            accelerators_.AddEntriesFrom(input, _repeated_accelerators_codec);
            break;
          }
          case 74: {
            MinCpuPlatform = input.ReadString();
            break;
          }
          case 80: {
            Preemptibility = (global::Google.Cloud.Dataproc.V1.InstanceGroupConfig.Types.Preemptibility) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NumInstances = input.ReadInt32();
            break;
          }
          case 18: {
            instanceNames_.AddEntriesFrom(ref input, _repeated_instanceNames_codec);
            break;
          }
          case 26: {
            ImageUri = input.ReadString();
            break;
          }
          case 34: {
            MachineTypeUri = input.ReadString();
            break;
          }
          case 42: {
            if (diskConfig_ == null) {
              DiskConfig = new global::Google.Cloud.Dataproc.V1.DiskConfig();
            }
            input.ReadMessage(DiskConfig);
            break;
          }
          case 48: {
            IsPreemptible = input.ReadBool();
            break;
          }
          case 58: {
            if (managedGroupConfig_ == null) {
              ManagedGroupConfig = new global::Google.Cloud.Dataproc.V1.ManagedGroupConfig();
            }
            input.ReadMessage(ManagedGroupConfig);
            break;
          }
          case 66: {
            accelerators_.AddEntriesFrom(ref input, _repeated_accelerators_codec);
            break;
          }
          case 74: {
            MinCpuPlatform = input.ReadString();
            break;
          }
          case 80: {
            Preemptibility = (global::Google.Cloud.Dataproc.V1.InstanceGroupConfig.Types.Preemptibility) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the InstanceGroupConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Controls the use of
      /// [preemptible instances]
      /// (https://cloud.google.com/compute/docs/instances/preemptible)
      /// within the group.
      /// </summary>
      public enum Preemptibility {
        /// <summary>
        /// Preemptibility is unspecified, the system will choose the
        /// appropriate setting for each instance group.
        /// </summary>
        [pbr::OriginalName("PREEMPTIBILITY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Instances are non-preemptible.
        ///
        /// This option is allowed for all instance groups and is the only valid
        /// value for Master and Worker instance groups.
        /// </summary>
        [pbr::OriginalName("NON_PREEMPTIBLE")] NonPreemptible = 1,
        /// <summary>
        /// Instances are preemptible.
        ///
        /// This option is allowed only for secondary worker groups.
        /// </summary>
        [pbr::OriginalName("PREEMPTIBLE")] Preemptible = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Specifies the resources used to actively manage an instance group.
  /// </summary>
  public sealed partial class ManagedGroupConfig : pb::IMessage<ManagedGroupConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ManagedGroupConfig> _parser = new pb::MessageParser<ManagedGroupConfig>(() => new ManagedGroupConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManagedGroupConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagedGroupConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagedGroupConfig(ManagedGroupConfig other) : this() {
      instanceTemplateName_ = other.instanceTemplateName_;
      instanceGroupManagerName_ = other.instanceGroupManagerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagedGroupConfig Clone() {
      return new ManagedGroupConfig(this);
    }

    /// <summary>Field number for the "instance_template_name" field.</summary>
    public const int InstanceTemplateNameFieldNumber = 1;
    private string instanceTemplateName_ = "";
    /// <summary>
    /// Output only. The name of the Instance Template used for the Managed
    /// Instance Group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceTemplateName {
      get { return instanceTemplateName_; }
      set {
        instanceTemplateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_group_manager_name" field.</summary>
    public const int InstanceGroupManagerNameFieldNumber = 2;
    private string instanceGroupManagerName_ = "";
    /// <summary>
    /// Output only. The name of the Instance Group Manager for this group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceGroupManagerName {
      get { return instanceGroupManagerName_; }
      set {
        instanceGroupManagerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManagedGroupConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManagedGroupConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstanceTemplateName != other.InstanceTemplateName) return false;
      if (InstanceGroupManagerName != other.InstanceGroupManagerName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InstanceTemplateName.Length != 0) hash ^= InstanceTemplateName.GetHashCode();
      if (InstanceGroupManagerName.Length != 0) hash ^= InstanceGroupManagerName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InstanceTemplateName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstanceTemplateName);
      }
      if (InstanceGroupManagerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstanceGroupManagerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InstanceTemplateName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstanceTemplateName);
      }
      if (InstanceGroupManagerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstanceGroupManagerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InstanceTemplateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceTemplateName);
      }
      if (InstanceGroupManagerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceGroupManagerName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManagedGroupConfig other) {
      if (other == null) {
        return;
      }
      if (other.InstanceTemplateName.Length != 0) {
        InstanceTemplateName = other.InstanceTemplateName;
      }
      if (other.InstanceGroupManagerName.Length != 0) {
        InstanceGroupManagerName = other.InstanceGroupManagerName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InstanceTemplateName = input.ReadString();
            break;
          }
          case 18: {
            InstanceGroupManagerName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InstanceTemplateName = input.ReadString();
            break;
          }
          case 18: {
            InstanceGroupManagerName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specifies the type and number of accelerator cards attached to the instances
  /// of an instance. See [GPUs on Compute
  /// Engine](https://cloud.google.com/compute/docs/gpus/).
  /// </summary>
  public sealed partial class AcceleratorConfig : pb::IMessage<AcceleratorConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AcceleratorConfig> _parser = new pb::MessageParser<AcceleratorConfig>(() => new AcceleratorConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceleratorConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceleratorConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceleratorConfig(AcceleratorConfig other) : this() {
      acceleratorTypeUri_ = other.acceleratorTypeUri_;
      acceleratorCount_ = other.acceleratorCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceleratorConfig Clone() {
      return new AcceleratorConfig(this);
    }

    /// <summary>Field number for the "accelerator_type_uri" field.</summary>
    public const int AcceleratorTypeUriFieldNumber = 1;
    private string acceleratorTypeUri_ = "";
    /// <summary>
    /// Full URL, partial URI, or short name of the accelerator type resource to
    /// expose to this instance. See
    /// [Compute Engine
    /// AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes).
    ///
    /// Examples:
    ///
    /// * `https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80`
    /// * `projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80`
    /// * `nvidia-tesla-k80`
    ///
    /// **Auto Zone Exception**: If you are using the Dataproc
    /// [Auto Zone
    /// Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement)
    /// feature, you must use the short name of the accelerator type
    /// resource, for example, `nvidia-tesla-k80`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcceleratorTypeUri {
      get { return acceleratorTypeUri_; }
      set {
        acceleratorTypeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accelerator_count" field.</summary>
    public const int AcceleratorCountFieldNumber = 2;
    private int acceleratorCount_;
    /// <summary>
    /// The number of the accelerator cards of this type exposed to this instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AcceleratorCount {
      get { return acceleratorCount_; }
      set {
        acceleratorCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceleratorConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceleratorConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AcceleratorTypeUri != other.AcceleratorTypeUri) return false;
      if (AcceleratorCount != other.AcceleratorCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AcceleratorTypeUri.Length != 0) hash ^= AcceleratorTypeUri.GetHashCode();
      if (AcceleratorCount != 0) hash ^= AcceleratorCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AcceleratorTypeUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AcceleratorTypeUri);
      }
      if (AcceleratorCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AcceleratorCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AcceleratorTypeUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AcceleratorTypeUri);
      }
      if (AcceleratorCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AcceleratorCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AcceleratorTypeUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcceleratorTypeUri);
      }
      if (AcceleratorCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AcceleratorCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceleratorConfig other) {
      if (other == null) {
        return;
      }
      if (other.AcceleratorTypeUri.Length != 0) {
        AcceleratorTypeUri = other.AcceleratorTypeUri;
      }
      if (other.AcceleratorCount != 0) {
        AcceleratorCount = other.AcceleratorCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AcceleratorTypeUri = input.ReadString();
            break;
          }
          case 16: {
            AcceleratorCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AcceleratorTypeUri = input.ReadString();
            break;
          }
          case 16: {
            AcceleratorCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specifies the config of disk options for a group of VM instances.
  /// </summary>
  public sealed partial class DiskConfig : pb::IMessage<DiskConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiskConfig> _parser = new pb::MessageParser<DiskConfig>(() => new DiskConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DiskConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiskConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiskConfig(DiskConfig other) : this() {
      bootDiskType_ = other.bootDiskType_;
      bootDiskSizeGb_ = other.bootDiskSizeGb_;
      numLocalSsds_ = other.numLocalSsds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiskConfig Clone() {
      return new DiskConfig(this);
    }

    /// <summary>Field number for the "boot_disk_type" field.</summary>
    public const int BootDiskTypeFieldNumber = 3;
    private string bootDiskType_ = "";
    /// <summary>
    /// Optional. Type of the boot disk (default is "pd-standard").
    /// Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive),
    /// "pd-ssd" (Persistent Disk Solid State Drive),
    /// or "pd-standard" (Persistent Disk Hard Disk Drive).
    /// See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BootDiskType {
      get { return bootDiskType_; }
      set {
        bootDiskType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boot_disk_size_gb" field.</summary>
    public const int BootDiskSizeGbFieldNumber = 1;
    private int bootDiskSizeGb_;
    /// <summary>
    /// Optional. Size in GB of the boot disk (default is 500GB).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BootDiskSizeGb {
      get { return bootDiskSizeGb_; }
      set {
        bootDiskSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "num_local_ssds" field.</summary>
    public const int NumLocalSsdsFieldNumber = 2;
    private int numLocalSsds_;
    /// <summary>
    /// Optional. Number of attached SSDs, from 0 to 4 (default is 0).
    /// If SSDs are not attached, the boot disk is used to store runtime logs and
    /// [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data.
    /// If one or more SSDs are attached, this runtime bulk
    /// data is spread across them, and the boot disk contains only basic
    /// config and installed binaries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumLocalSsds {
      get { return numLocalSsds_; }
      set {
        numLocalSsds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DiskConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DiskConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BootDiskType != other.BootDiskType) return false;
      if (BootDiskSizeGb != other.BootDiskSizeGb) return false;
      if (NumLocalSsds != other.NumLocalSsds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BootDiskType.Length != 0) hash ^= BootDiskType.GetHashCode();
      if (BootDiskSizeGb != 0) hash ^= BootDiskSizeGb.GetHashCode();
      if (NumLocalSsds != 0) hash ^= NumLocalSsds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BootDiskSizeGb != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BootDiskSizeGb);
      }
      if (NumLocalSsds != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumLocalSsds);
      }
      if (BootDiskType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BootDiskType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BootDiskSizeGb != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BootDiskSizeGb);
      }
      if (NumLocalSsds != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumLocalSsds);
      }
      if (BootDiskType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BootDiskType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BootDiskType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BootDiskType);
      }
      if (BootDiskSizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BootDiskSizeGb);
      }
      if (NumLocalSsds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumLocalSsds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DiskConfig other) {
      if (other == null) {
        return;
      }
      if (other.BootDiskType.Length != 0) {
        BootDiskType = other.BootDiskType;
      }
      if (other.BootDiskSizeGb != 0) {
        BootDiskSizeGb = other.BootDiskSizeGb;
      }
      if (other.NumLocalSsds != 0) {
        NumLocalSsds = other.NumLocalSsds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BootDiskSizeGb = input.ReadInt32();
            break;
          }
          case 16: {
            NumLocalSsds = input.ReadInt32();
            break;
          }
          case 26: {
            BootDiskType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BootDiskSizeGb = input.ReadInt32();
            break;
          }
          case 16: {
            NumLocalSsds = input.ReadInt32();
            break;
          }
          case 26: {
            BootDiskType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specifies an executable to run on a fully configured node and a
  /// timeout period for executable completion.
  /// </summary>
  public sealed partial class NodeInitializationAction : pb::IMessage<NodeInitializationAction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeInitializationAction> _parser = new pb::MessageParser<NodeInitializationAction>(() => new NodeInitializationAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeInitializationAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeInitializationAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeInitializationAction(NodeInitializationAction other) : this() {
      executableFile_ = other.executableFile_;
      executionTimeout_ = other.executionTimeout_ != null ? other.executionTimeout_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeInitializationAction Clone() {
      return new NodeInitializationAction(this);
    }

    /// <summary>Field number for the "executable_file" field.</summary>
    public const int ExecutableFileFieldNumber = 1;
    private string executableFile_ = "";
    /// <summary>
    /// Required. Cloud Storage URI of executable file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExecutableFile {
      get { return executableFile_; }
      set {
        executableFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "execution_timeout" field.</summary>
    public const int ExecutionTimeoutFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration executionTimeout_;
    /// <summary>
    /// Optional. Amount of time executable has to complete. Default is
    /// 10 minutes (see JSON representation of
    /// [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    ///
    /// Cluster creation fails with an explanatory error message (the
    /// name of the executable that caused the error and the exceeded timeout
    /// period) if the executable is not completed at end of the timeout period.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration ExecutionTimeout {
      get { return executionTimeout_; }
      set {
        executionTimeout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeInitializationAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeInitializationAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExecutableFile != other.ExecutableFile) return false;
      if (!object.Equals(ExecutionTimeout, other.ExecutionTimeout)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExecutableFile.Length != 0) hash ^= ExecutableFile.GetHashCode();
      if (executionTimeout_ != null) hash ^= ExecutionTimeout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ExecutableFile.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExecutableFile);
      }
      if (executionTimeout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExecutionTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ExecutableFile.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExecutableFile);
      }
      if (executionTimeout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExecutionTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExecutableFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExecutableFile);
      }
      if (executionTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecutionTimeout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeInitializationAction other) {
      if (other == null) {
        return;
      }
      if (other.ExecutableFile.Length != 0) {
        ExecutableFile = other.ExecutableFile;
      }
      if (other.executionTimeout_ != null) {
        if (executionTimeout_ == null) {
          ExecutionTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        ExecutionTimeout.MergeFrom(other.ExecutionTimeout);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExecutableFile = input.ReadString();
            break;
          }
          case 18: {
            if (executionTimeout_ == null) {
              ExecutionTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ExecutionTimeout);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ExecutableFile = input.ReadString();
            break;
          }
          case 18: {
            if (executionTimeout_ == null) {
              ExecutionTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ExecutionTimeout);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The status of a cluster and its instances.
  /// </summary>
  public sealed partial class ClusterStatus : pb::IMessage<ClusterStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClusterStatus> _parser = new pb::MessageParser<ClusterStatus>(() => new ClusterStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClusterStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterStatus(ClusterStatus other) : this() {
      state_ = other.state_;
      detail_ = other.detail_;
      stateStartTime_ = other.stateStartTime_ != null ? other.stateStartTime_.Clone() : null;
      substate_ = other.substate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterStatus Clone() {
      return new ClusterStatus(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.State state_ = global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.State.Unknown;
    /// <summary>
    /// Output only. The cluster's state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 2;
    private string detail_ = "";
    /// <summary>
    /// Optional. Output only. Details of cluster's state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Detail {
      get { return detail_; }
      set {
        detail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state_start_time" field.</summary>
    public const int StateStartTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp stateStartTime_;
    /// <summary>
    /// Output only. Time when this state was entered (see JSON representation of
    /// [Timestamp](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StateStartTime {
      get { return stateStartTime_; }
      set {
        stateStartTime_ = value;
      }
    }

    /// <summary>Field number for the "substate" field.</summary>
    public const int SubstateFieldNumber = 4;
    private global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.Substate substate_ = global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.Substate.Unspecified;
    /// <summary>
    /// Output only. Additional state information that includes
    /// status reported by the agent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.Substate Substate {
      get { return substate_; }
      set {
        substate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClusterStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClusterStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (Detail != other.Detail) return false;
      if (!object.Equals(StateStartTime, other.StateStartTime)) return false;
      if (Substate != other.Substate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.State.Unknown) hash ^= State.GetHashCode();
      if (Detail.Length != 0) hash ^= Detail.GetHashCode();
      if (stateStartTime_ != null) hash ^= StateStartTime.GetHashCode();
      if (Substate != global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.Substate.Unspecified) hash ^= Substate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.State.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (Detail.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Detail);
      }
      if (stateStartTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StateStartTime);
      }
      if (Substate != global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.Substate.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Substate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.State.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (Detail.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Detail);
      }
      if (stateStartTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StateStartTime);
      }
      if (Substate != global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.Substate.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Substate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.State.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Detail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Detail);
      }
      if (stateStartTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StateStartTime);
      }
      if (Substate != global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.Substate.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Substate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClusterStatus other) {
      if (other == null) {
        return;
      }
      if (other.State != global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.State.Unknown) {
        State = other.State;
      }
      if (other.Detail.Length != 0) {
        Detail = other.Detail;
      }
      if (other.stateStartTime_ != null) {
        if (stateStartTime_ == null) {
          StateStartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StateStartTime.MergeFrom(other.StateStartTime);
      }
      if (other.Substate != global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.Substate.Unspecified) {
        Substate = other.Substate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.State) input.ReadEnum();
            break;
          }
          case 18: {
            Detail = input.ReadString();
            break;
          }
          case 26: {
            if (stateStartTime_ == null) {
              StateStartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StateStartTime);
            break;
          }
          case 32: {
            Substate = (global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.Substate) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = (global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.State) input.ReadEnum();
            break;
          }
          case 18: {
            Detail = input.ReadString();
            break;
          }
          case 26: {
            if (stateStartTime_ == null) {
              StateStartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StateStartTime);
            break;
          }
          case 32: {
            Substate = (global::Google.Cloud.Dataproc.V1.ClusterStatus.Types.Substate) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ClusterStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The cluster state.
      /// </summary>
      public enum State {
        /// <summary>
        /// The cluster state is unknown.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// The cluster is being created and set up. It is not ready for use.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// The cluster is currently running and healthy. It is ready for use.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// The cluster encountered an error. It is not ready for use.
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 3,
        /// <summary>
        /// The cluster is being deleted. It cannot be used.
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 4,
        /// <summary>
        /// The cluster is being updated. It continues to accept and process jobs.
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 5,
        /// <summary>
        /// The cluster is being stopped. It cannot be used.
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 6,
        /// <summary>
        /// The cluster is currently stopped. It is not ready for use.
        /// </summary>
        [pbr::OriginalName("STOPPED")] Stopped = 7,
        /// <summary>
        /// The cluster is being started. It is not ready for use.
        /// </summary>
        [pbr::OriginalName("STARTING")] Starting = 8,
      }

      /// <summary>
      /// The cluster substate.
      /// </summary>
      public enum Substate {
        /// <summary>
        /// The cluster substate is unknown.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The cluster is known to be in an unhealthy state
        /// (for example, critical daemons are not running or HDFS capacity is
        /// exhausted).
        ///
        /// Applies to RUNNING state.
        /// </summary>
        [pbr::OriginalName("UNHEALTHY")] Unhealthy = 1,
        /// <summary>
        /// The agent-reported status is out of date (may occur if
        /// Dataproc loses communication with Agent).
        ///
        /// Applies to RUNNING state.
        /// </summary>
        [pbr::OriginalName("STALE_STATUS")] StaleStatus = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Security related configuration, including encryption, Kerberos, etc.
  /// </summary>
  public sealed partial class SecurityConfig : pb::IMessage<SecurityConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SecurityConfig> _parser = new pb::MessageParser<SecurityConfig>(() => new SecurityConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SecurityConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecurityConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecurityConfig(SecurityConfig other) : this() {
      kerberosConfig_ = other.kerberosConfig_ != null ? other.kerberosConfig_.Clone() : null;
      identityConfig_ = other.identityConfig_ != null ? other.identityConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecurityConfig Clone() {
      return new SecurityConfig(this);
    }

    /// <summary>Field number for the "kerberos_config" field.</summary>
    public const int KerberosConfigFieldNumber = 1;
    private global::Google.Cloud.Dataproc.V1.KerberosConfig kerberosConfig_;
    /// <summary>
    /// Optional. Kerberos related configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.KerberosConfig KerberosConfig {
      get { return kerberosConfig_; }
      set {
        kerberosConfig_ = value;
      }
    }

    /// <summary>Field number for the "identity_config" field.</summary>
    public const int IdentityConfigFieldNumber = 2;
    private global::Google.Cloud.Dataproc.V1.IdentityConfig identityConfig_;
    /// <summary>
    /// Optional. Identity related configuration, including service account based
    /// secure multi-tenancy user mappings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.IdentityConfig IdentityConfig {
      get { return identityConfig_; }
      set {
        identityConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SecurityConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SecurityConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(KerberosConfig, other.KerberosConfig)) return false;
      if (!object.Equals(IdentityConfig, other.IdentityConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (kerberosConfig_ != null) hash ^= KerberosConfig.GetHashCode();
      if (identityConfig_ != null) hash ^= IdentityConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (kerberosConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(KerberosConfig);
      }
      if (identityConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IdentityConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (kerberosConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(KerberosConfig);
      }
      if (identityConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IdentityConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (kerberosConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KerberosConfig);
      }
      if (identityConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdentityConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SecurityConfig other) {
      if (other == null) {
        return;
      }
      if (other.kerberosConfig_ != null) {
        if (kerberosConfig_ == null) {
          KerberosConfig = new global::Google.Cloud.Dataproc.V1.KerberosConfig();
        }
        KerberosConfig.MergeFrom(other.KerberosConfig);
      }
      if (other.identityConfig_ != null) {
        if (identityConfig_ == null) {
          IdentityConfig = new global::Google.Cloud.Dataproc.V1.IdentityConfig();
        }
        IdentityConfig.MergeFrom(other.IdentityConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (kerberosConfig_ == null) {
              KerberosConfig = new global::Google.Cloud.Dataproc.V1.KerberosConfig();
            }
            input.ReadMessage(KerberosConfig);
            break;
          }
          case 18: {
            if (identityConfig_ == null) {
              IdentityConfig = new global::Google.Cloud.Dataproc.V1.IdentityConfig();
            }
            input.ReadMessage(IdentityConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (kerberosConfig_ == null) {
              KerberosConfig = new global::Google.Cloud.Dataproc.V1.KerberosConfig();
            }
            input.ReadMessage(KerberosConfig);
            break;
          }
          case 18: {
            if (identityConfig_ == null) {
              IdentityConfig = new global::Google.Cloud.Dataproc.V1.IdentityConfig();
            }
            input.ReadMessage(IdentityConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specifies Kerberos related configuration.
  /// </summary>
  public sealed partial class KerberosConfig : pb::IMessage<KerberosConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KerberosConfig> _parser = new pb::MessageParser<KerberosConfig>(() => new KerberosConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KerberosConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KerberosConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KerberosConfig(KerberosConfig other) : this() {
      enableKerberos_ = other.enableKerberos_;
      rootPrincipalPasswordUri_ = other.rootPrincipalPasswordUri_;
      kmsKeyUri_ = other.kmsKeyUri_;
      keystoreUri_ = other.keystoreUri_;
      truststoreUri_ = other.truststoreUri_;
      keystorePasswordUri_ = other.keystorePasswordUri_;
      keyPasswordUri_ = other.keyPasswordUri_;
      truststorePasswordUri_ = other.truststorePasswordUri_;
      crossRealmTrustRealm_ = other.crossRealmTrustRealm_;
      crossRealmTrustKdc_ = other.crossRealmTrustKdc_;
      crossRealmTrustAdminServer_ = other.crossRealmTrustAdminServer_;
      crossRealmTrustSharedPasswordUri_ = other.crossRealmTrustSharedPasswordUri_;
      kdcDbKeyUri_ = other.kdcDbKeyUri_;
      tgtLifetimeHours_ = other.tgtLifetimeHours_;
      realm_ = other.realm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KerberosConfig Clone() {
      return new KerberosConfig(this);
    }

    /// <summary>Field number for the "enable_kerberos" field.</summary>
    public const int EnableKerberosFieldNumber = 1;
    private bool enableKerberos_;
    /// <summary>
    /// Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set
    /// this field to true to enable Kerberos on a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableKerberos {
      get { return enableKerberos_; }
      set {
        enableKerberos_ = value;
      }
    }

    /// <summary>Field number for the "root_principal_password_uri" field.</summary>
    public const int RootPrincipalPasswordUriFieldNumber = 2;
    private string rootPrincipalPasswordUri_ = "";
    /// <summary>
    /// Optional. The Cloud Storage URI of a KMS encrypted file containing the root
    /// principal password.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RootPrincipalPasswordUri {
      get { return rootPrincipalPasswordUri_; }
      set {
        rootPrincipalPasswordUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kms_key_uri" field.</summary>
    public const int KmsKeyUriFieldNumber = 3;
    private string kmsKeyUri_ = "";
    /// <summary>
    /// Optional. The uri of the KMS key used to encrypt various sensitive
    /// files.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KmsKeyUri {
      get { return kmsKeyUri_; }
      set {
        kmsKeyUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "keystore_uri" field.</summary>
    public const int KeystoreUriFieldNumber = 4;
    private string keystoreUri_ = "";
    /// <summary>
    /// Optional. The Cloud Storage URI of the keystore file used for SSL
    /// encryption. If not provided, Dataproc will provide a self-signed
    /// certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeystoreUri {
      get { return keystoreUri_; }
      set {
        keystoreUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "truststore_uri" field.</summary>
    public const int TruststoreUriFieldNumber = 5;
    private string truststoreUri_ = "";
    /// <summary>
    /// Optional. The Cloud Storage URI of the truststore file used for SSL
    /// encryption. If not provided, Dataproc will provide a self-signed
    /// certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TruststoreUri {
      get { return truststoreUri_; }
      set {
        truststoreUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "keystore_password_uri" field.</summary>
    public const int KeystorePasswordUriFieldNumber = 6;
    private string keystorePasswordUri_ = "";
    /// <summary>
    /// Optional. The Cloud Storage URI of a KMS encrypted file containing the
    /// password to the user provided keystore. For the self-signed certificate,
    /// this password is generated by Dataproc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeystorePasswordUri {
      get { return keystorePasswordUri_; }
      set {
        keystorePasswordUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key_password_uri" field.</summary>
    public const int KeyPasswordUriFieldNumber = 7;
    private string keyPasswordUri_ = "";
    /// <summary>
    /// Optional. The Cloud Storage URI of a KMS encrypted file containing the
    /// password to the user provided key. For the self-signed certificate, this
    /// password is generated by Dataproc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyPasswordUri {
      get { return keyPasswordUri_; }
      set {
        keyPasswordUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "truststore_password_uri" field.</summary>
    public const int TruststorePasswordUriFieldNumber = 8;
    private string truststorePasswordUri_ = "";
    /// <summary>
    /// Optional. The Cloud Storage URI of a KMS encrypted file containing the
    /// password to the user provided truststore. For the self-signed certificate,
    /// this password is generated by Dataproc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TruststorePasswordUri {
      get { return truststorePasswordUri_; }
      set {
        truststorePasswordUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cross_realm_trust_realm" field.</summary>
    public const int CrossRealmTrustRealmFieldNumber = 9;
    private string crossRealmTrustRealm_ = "";
    /// <summary>
    /// Optional. The remote realm the Dataproc on-cluster KDC will trust, should
    /// the user enable cross realm trust.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CrossRealmTrustRealm {
      get { return crossRealmTrustRealm_; }
      set {
        crossRealmTrustRealm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cross_realm_trust_kdc" field.</summary>
    public const int CrossRealmTrustKdcFieldNumber = 10;
    private string crossRealmTrustKdc_ = "";
    /// <summary>
    /// Optional. The KDC (IP or hostname) for the remote trusted realm in a cross
    /// realm trust relationship.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CrossRealmTrustKdc {
      get { return crossRealmTrustKdc_; }
      set {
        crossRealmTrustKdc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cross_realm_trust_admin_server" field.</summary>
    public const int CrossRealmTrustAdminServerFieldNumber = 11;
    private string crossRealmTrustAdminServer_ = "";
    /// <summary>
    /// Optional. The admin server (IP or hostname) for the remote trusted realm in
    /// a cross realm trust relationship.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CrossRealmTrustAdminServer {
      get { return crossRealmTrustAdminServer_; }
      set {
        crossRealmTrustAdminServer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cross_realm_trust_shared_password_uri" field.</summary>
    public const int CrossRealmTrustSharedPasswordUriFieldNumber = 12;
    private string crossRealmTrustSharedPasswordUri_ = "";
    /// <summary>
    /// Optional. The Cloud Storage URI of a KMS encrypted file containing the
    /// shared password between the on-cluster Kerberos realm and the remote
    /// trusted realm, in a cross realm trust relationship.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CrossRealmTrustSharedPasswordUri {
      get { return crossRealmTrustSharedPasswordUri_; }
      set {
        crossRealmTrustSharedPasswordUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kdc_db_key_uri" field.</summary>
    public const int KdcDbKeyUriFieldNumber = 13;
    private string kdcDbKeyUri_ = "";
    /// <summary>
    /// Optional. The Cloud Storage URI of a KMS encrypted file containing the
    /// master key of the KDC database.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KdcDbKeyUri {
      get { return kdcDbKeyUri_; }
      set {
        kdcDbKeyUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tgt_lifetime_hours" field.</summary>
    public const int TgtLifetimeHoursFieldNumber = 14;
    private int tgtLifetimeHours_;
    /// <summary>
    /// Optional. The lifetime of the ticket granting ticket, in hours.
    /// If not specified, or user specifies 0, then default value 10
    /// will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TgtLifetimeHours {
      get { return tgtLifetimeHours_; }
      set {
        tgtLifetimeHours_ = value;
      }
    }

    /// <summary>Field number for the "realm" field.</summary>
    public const int RealmFieldNumber = 15;
    private string realm_ = "";
    /// <summary>
    /// Optional. The name of the on-cluster Kerberos realm.
    /// If not specified, the uppercased domain of hostnames will be the realm.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Realm {
      get { return realm_; }
      set {
        realm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KerberosConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KerberosConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableKerberos != other.EnableKerberos) return false;
      if (RootPrincipalPasswordUri != other.RootPrincipalPasswordUri) return false;
      if (KmsKeyUri != other.KmsKeyUri) return false;
      if (KeystoreUri != other.KeystoreUri) return false;
      if (TruststoreUri != other.TruststoreUri) return false;
      if (KeystorePasswordUri != other.KeystorePasswordUri) return false;
      if (KeyPasswordUri != other.KeyPasswordUri) return false;
      if (TruststorePasswordUri != other.TruststorePasswordUri) return false;
      if (CrossRealmTrustRealm != other.CrossRealmTrustRealm) return false;
      if (CrossRealmTrustKdc != other.CrossRealmTrustKdc) return false;
      if (CrossRealmTrustAdminServer != other.CrossRealmTrustAdminServer) return false;
      if (CrossRealmTrustSharedPasswordUri != other.CrossRealmTrustSharedPasswordUri) return false;
      if (KdcDbKeyUri != other.KdcDbKeyUri) return false;
      if (TgtLifetimeHours != other.TgtLifetimeHours) return false;
      if (Realm != other.Realm) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnableKerberos != false) hash ^= EnableKerberos.GetHashCode();
      if (RootPrincipalPasswordUri.Length != 0) hash ^= RootPrincipalPasswordUri.GetHashCode();
      if (KmsKeyUri.Length != 0) hash ^= KmsKeyUri.GetHashCode();
      if (KeystoreUri.Length != 0) hash ^= KeystoreUri.GetHashCode();
      if (TruststoreUri.Length != 0) hash ^= TruststoreUri.GetHashCode();
      if (KeystorePasswordUri.Length != 0) hash ^= KeystorePasswordUri.GetHashCode();
      if (KeyPasswordUri.Length != 0) hash ^= KeyPasswordUri.GetHashCode();
      if (TruststorePasswordUri.Length != 0) hash ^= TruststorePasswordUri.GetHashCode();
      if (CrossRealmTrustRealm.Length != 0) hash ^= CrossRealmTrustRealm.GetHashCode();
      if (CrossRealmTrustKdc.Length != 0) hash ^= CrossRealmTrustKdc.GetHashCode();
      if (CrossRealmTrustAdminServer.Length != 0) hash ^= CrossRealmTrustAdminServer.GetHashCode();
      if (CrossRealmTrustSharedPasswordUri.Length != 0) hash ^= CrossRealmTrustSharedPasswordUri.GetHashCode();
      if (KdcDbKeyUri.Length != 0) hash ^= KdcDbKeyUri.GetHashCode();
      if (TgtLifetimeHours != 0) hash ^= TgtLifetimeHours.GetHashCode();
      if (Realm.Length != 0) hash ^= Realm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EnableKerberos != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableKerberos);
      }
      if (RootPrincipalPasswordUri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RootPrincipalPasswordUri);
      }
      if (KmsKeyUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(KmsKeyUri);
      }
      if (KeystoreUri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(KeystoreUri);
      }
      if (TruststoreUri.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TruststoreUri);
      }
      if (KeystorePasswordUri.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(KeystorePasswordUri);
      }
      if (KeyPasswordUri.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(KeyPasswordUri);
      }
      if (TruststorePasswordUri.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TruststorePasswordUri);
      }
      if (CrossRealmTrustRealm.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CrossRealmTrustRealm);
      }
      if (CrossRealmTrustKdc.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CrossRealmTrustKdc);
      }
      if (CrossRealmTrustAdminServer.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CrossRealmTrustAdminServer);
      }
      if (CrossRealmTrustSharedPasswordUri.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CrossRealmTrustSharedPasswordUri);
      }
      if (KdcDbKeyUri.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(KdcDbKeyUri);
      }
      if (TgtLifetimeHours != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(TgtLifetimeHours);
      }
      if (Realm.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Realm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EnableKerberos != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableKerberos);
      }
      if (RootPrincipalPasswordUri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RootPrincipalPasswordUri);
      }
      if (KmsKeyUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(KmsKeyUri);
      }
      if (KeystoreUri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(KeystoreUri);
      }
      if (TruststoreUri.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TruststoreUri);
      }
      if (KeystorePasswordUri.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(KeystorePasswordUri);
      }
      if (KeyPasswordUri.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(KeyPasswordUri);
      }
      if (TruststorePasswordUri.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TruststorePasswordUri);
      }
      if (CrossRealmTrustRealm.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CrossRealmTrustRealm);
      }
      if (CrossRealmTrustKdc.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CrossRealmTrustKdc);
      }
      if (CrossRealmTrustAdminServer.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CrossRealmTrustAdminServer);
      }
      if (CrossRealmTrustSharedPasswordUri.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CrossRealmTrustSharedPasswordUri);
      }
      if (KdcDbKeyUri.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(KdcDbKeyUri);
      }
      if (TgtLifetimeHours != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(TgtLifetimeHours);
      }
      if (Realm.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Realm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnableKerberos != false) {
        size += 1 + 1;
      }
      if (RootPrincipalPasswordUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RootPrincipalPasswordUri);
      }
      if (KmsKeyUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KmsKeyUri);
      }
      if (KeystoreUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeystoreUri);
      }
      if (TruststoreUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TruststoreUri);
      }
      if (KeystorePasswordUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeystorePasswordUri);
      }
      if (KeyPasswordUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyPasswordUri);
      }
      if (TruststorePasswordUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TruststorePasswordUri);
      }
      if (CrossRealmTrustRealm.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CrossRealmTrustRealm);
      }
      if (CrossRealmTrustKdc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CrossRealmTrustKdc);
      }
      if (CrossRealmTrustAdminServer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CrossRealmTrustAdminServer);
      }
      if (CrossRealmTrustSharedPasswordUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CrossRealmTrustSharedPasswordUri);
      }
      if (KdcDbKeyUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KdcDbKeyUri);
      }
      if (TgtLifetimeHours != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TgtLifetimeHours);
      }
      if (Realm.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Realm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KerberosConfig other) {
      if (other == null) {
        return;
      }
      if (other.EnableKerberos != false) {
        EnableKerberos = other.EnableKerberos;
      }
      if (other.RootPrincipalPasswordUri.Length != 0) {
        RootPrincipalPasswordUri = other.RootPrincipalPasswordUri;
      }
      if (other.KmsKeyUri.Length != 0) {
        KmsKeyUri = other.KmsKeyUri;
      }
      if (other.KeystoreUri.Length != 0) {
        KeystoreUri = other.KeystoreUri;
      }
      if (other.TruststoreUri.Length != 0) {
        TruststoreUri = other.TruststoreUri;
      }
      if (other.KeystorePasswordUri.Length != 0) {
        KeystorePasswordUri = other.KeystorePasswordUri;
      }
      if (other.KeyPasswordUri.Length != 0) {
        KeyPasswordUri = other.KeyPasswordUri;
      }
      if (other.TruststorePasswordUri.Length != 0) {
        TruststorePasswordUri = other.TruststorePasswordUri;
      }
      if (other.CrossRealmTrustRealm.Length != 0) {
        CrossRealmTrustRealm = other.CrossRealmTrustRealm;
      }
      if (other.CrossRealmTrustKdc.Length != 0) {
        CrossRealmTrustKdc = other.CrossRealmTrustKdc;
      }
      if (other.CrossRealmTrustAdminServer.Length != 0) {
        CrossRealmTrustAdminServer = other.CrossRealmTrustAdminServer;
      }
      if (other.CrossRealmTrustSharedPasswordUri.Length != 0) {
        CrossRealmTrustSharedPasswordUri = other.CrossRealmTrustSharedPasswordUri;
      }
      if (other.KdcDbKeyUri.Length != 0) {
        KdcDbKeyUri = other.KdcDbKeyUri;
      }
      if (other.TgtLifetimeHours != 0) {
        TgtLifetimeHours = other.TgtLifetimeHours;
      }
      if (other.Realm.Length != 0) {
        Realm = other.Realm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableKerberos = input.ReadBool();
            break;
          }
          case 18: {
            RootPrincipalPasswordUri = input.ReadString();
            break;
          }
          case 26: {
            KmsKeyUri = input.ReadString();
            break;
          }
          case 34: {
            KeystoreUri = input.ReadString();
            break;
          }
          case 42: {
            TruststoreUri = input.ReadString();
            break;
          }
          case 50: {
            KeystorePasswordUri = input.ReadString();
            break;
          }
          case 58: {
            KeyPasswordUri = input.ReadString();
            break;
          }
          case 66: {
            TruststorePasswordUri = input.ReadString();
            break;
          }
          case 74: {
            CrossRealmTrustRealm = input.ReadString();
            break;
          }
          case 82: {
            CrossRealmTrustKdc = input.ReadString();
            break;
          }
          case 90: {
            CrossRealmTrustAdminServer = input.ReadString();
            break;
          }
          case 98: {
            CrossRealmTrustSharedPasswordUri = input.ReadString();
            break;
          }
          case 106: {
            KdcDbKeyUri = input.ReadString();
            break;
          }
          case 112: {
            TgtLifetimeHours = input.ReadInt32();
            break;
          }
          case 122: {
            Realm = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EnableKerberos = input.ReadBool();
            break;
          }
          case 18: {
            RootPrincipalPasswordUri = input.ReadString();
            break;
          }
          case 26: {
            KmsKeyUri = input.ReadString();
            break;
          }
          case 34: {
            KeystoreUri = input.ReadString();
            break;
          }
          case 42: {
            TruststoreUri = input.ReadString();
            break;
          }
          case 50: {
            KeystorePasswordUri = input.ReadString();
            break;
          }
          case 58: {
            KeyPasswordUri = input.ReadString();
            break;
          }
          case 66: {
            TruststorePasswordUri = input.ReadString();
            break;
          }
          case 74: {
            CrossRealmTrustRealm = input.ReadString();
            break;
          }
          case 82: {
            CrossRealmTrustKdc = input.ReadString();
            break;
          }
          case 90: {
            CrossRealmTrustAdminServer = input.ReadString();
            break;
          }
          case 98: {
            CrossRealmTrustSharedPasswordUri = input.ReadString();
            break;
          }
          case 106: {
            KdcDbKeyUri = input.ReadString();
            break;
          }
          case 112: {
            TgtLifetimeHours = input.ReadInt32();
            break;
          }
          case 122: {
            Realm = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Identity related configuration, including service account based
  /// secure multi-tenancy user mappings.
  /// </summary>
  public sealed partial class IdentityConfig : pb::IMessage<IdentityConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IdentityConfig> _parser = new pb::MessageParser<IdentityConfig>(() => new IdentityConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdentityConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentityConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentityConfig(IdentityConfig other) : this() {
      userServiceAccountMapping_ = other.userServiceAccountMapping_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentityConfig Clone() {
      return new IdentityConfig(this);
    }

    /// <summary>Field number for the "user_service_account_mapping" field.</summary>
    public const int UserServiceAccountMappingFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_userServiceAccountMapping_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> userServiceAccountMapping_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Required. Map of user to service account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> UserServiceAccountMapping {
      get { return userServiceAccountMapping_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdentityConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdentityConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!UserServiceAccountMapping.Equals(other.UserServiceAccountMapping)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= UserServiceAccountMapping.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userServiceAccountMapping_.WriteTo(output, _map_userServiceAccountMapping_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userServiceAccountMapping_.WriteTo(ref output, _map_userServiceAccountMapping_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userServiceAccountMapping_.CalculateSize(_map_userServiceAccountMapping_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdentityConfig other) {
      if (other == null) {
        return;
      }
      userServiceAccountMapping_.Add(other.userServiceAccountMapping_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userServiceAccountMapping_.AddEntriesFrom(input, _map_userServiceAccountMapping_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userServiceAccountMapping_.AddEntriesFrom(ref input, _map_userServiceAccountMapping_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specifies the selection and config of software inside the cluster.
  /// </summary>
  public sealed partial class SoftwareConfig : pb::IMessage<SoftwareConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SoftwareConfig> _parser = new pb::MessageParser<SoftwareConfig>(() => new SoftwareConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SoftwareConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoftwareConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoftwareConfig(SoftwareConfig other) : this() {
      imageVersion_ = other.imageVersion_;
      properties_ = other.properties_.Clone();
      optionalComponents_ = other.optionalComponents_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoftwareConfig Clone() {
      return new SoftwareConfig(this);
    }

    /// <summary>Field number for the "image_version" field.</summary>
    public const int ImageVersionFieldNumber = 1;
    private string imageVersion_ = "";
    /// <summary>
    /// Optional. The version of software inside the cluster. It must be one of the
    /// supported [Dataproc
    /// Versions](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions),
    /// such as "1.2" (including a subminor version, such as "1.2.29"), or the
    /// ["preview"
    /// version](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions).
    /// If unspecified, it defaults to the latest Debian version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageVersion {
      get { return imageVersion_; }
      set {
        imageVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_properties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<string, string> properties_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. The properties to set on daemon config files.
    ///
    /// Property keys are specified in `prefix:property` format, for example
    /// `core:hadoop.tmp.dir`. The following are supported prefixes
    /// and their mappings:
    ///
    /// * capacity-scheduler: `capacity-scheduler.xml`
    /// * core:   `core-site.xml`
    /// * distcp: `distcp-default.xml`
    /// * hdfs:   `hdfs-site.xml`
    /// * hive:   `hive-site.xml`
    /// * mapred: `mapred-site.xml`
    /// * pig:    `pig.properties`
    /// * spark:  `spark-defaults.conf`
    /// * yarn:   `yarn-site.xml`
    ///
    /// For more information, see [Cluster
    /// properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Properties {
      get { return properties_; }
    }

    /// <summary>Field number for the "optional_components" field.</summary>
    public const int OptionalComponentsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dataproc.V1.Component> _repeated_optionalComponents_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Google.Cloud.Dataproc.V1.Component) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.Component> optionalComponents_ = new pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.Component>();
    /// <summary>
    /// Optional. The set of components to activate on the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.Component> OptionalComponents {
      get { return optionalComponents_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SoftwareConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SoftwareConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ImageVersion != other.ImageVersion) return false;
      if (!Properties.Equals(other.Properties)) return false;
      if(!optionalComponents_.Equals(other.optionalComponents_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ImageVersion.Length != 0) hash ^= ImageVersion.GetHashCode();
      hash ^= Properties.GetHashCode();
      hash ^= optionalComponents_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ImageVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ImageVersion);
      }
      properties_.WriteTo(output, _map_properties_codec);
      optionalComponents_.WriteTo(output, _repeated_optionalComponents_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ImageVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ImageVersion);
      }
      properties_.WriteTo(ref output, _map_properties_codec);
      optionalComponents_.WriteTo(ref output, _repeated_optionalComponents_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ImageVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageVersion);
      }
      size += properties_.CalculateSize(_map_properties_codec);
      size += optionalComponents_.CalculateSize(_repeated_optionalComponents_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SoftwareConfig other) {
      if (other == null) {
        return;
      }
      if (other.ImageVersion.Length != 0) {
        ImageVersion = other.ImageVersion;
      }
      properties_.Add(other.properties_);
      optionalComponents_.Add(other.optionalComponents_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ImageVersion = input.ReadString();
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
          case 26:
          case 24: {
            optionalComponents_.AddEntriesFrom(input, _repeated_optionalComponents_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ImageVersion = input.ReadString();
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(ref input, _map_properties_codec);
            break;
          }
          case 26:
          case 24: {
            optionalComponents_.AddEntriesFrom(ref input, _repeated_optionalComponents_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specifies the cluster auto-delete schedule configuration.
  /// </summary>
  public sealed partial class LifecycleConfig : pb::IMessage<LifecycleConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LifecycleConfig> _parser = new pb::MessageParser<LifecycleConfig>(() => new LifecycleConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LifecycleConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LifecycleConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LifecycleConfig(LifecycleConfig other) : this() {
      idleDeleteTtl_ = other.idleDeleteTtl_ != null ? other.idleDeleteTtl_.Clone() : null;
      idleStartTime_ = other.idleStartTime_ != null ? other.idleStartTime_.Clone() : null;
      switch (other.TtlCase) {
        case TtlOneofCase.AutoDeleteTime:
          AutoDeleteTime = other.AutoDeleteTime.Clone();
          break;
        case TtlOneofCase.AutoDeleteTtl:
          AutoDeleteTtl = other.AutoDeleteTtl.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LifecycleConfig Clone() {
      return new LifecycleConfig(this);
    }

    /// <summary>Field number for the "idle_delete_ttl" field.</summary>
    public const int IdleDeleteTtlFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Duration idleDeleteTtl_;
    /// <summary>
    /// Optional. The duration to keep the cluster alive while idling (when no jobs
    /// are running). Passing this threshold will cause the cluster to be
    /// deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON
    /// representation of
    /// [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration IdleDeleteTtl {
      get { return idleDeleteTtl_; }
      set {
        idleDeleteTtl_ = value;
      }
    }

    /// <summary>Field number for the "auto_delete_time" field.</summary>
    public const int AutoDeleteTimeFieldNumber = 2;
    /// <summary>
    /// Optional. The time when cluster will be auto-deleted (see JSON representation of
    /// [Timestamp](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AutoDeleteTime {
      get { return ttlCase_ == TtlOneofCase.AutoDeleteTime ? (global::Google.Protobuf.WellKnownTypes.Timestamp) ttl_ : null; }
      set {
        ttl_ = value;
        ttlCase_ = value == null ? TtlOneofCase.None : TtlOneofCase.AutoDeleteTime;
      }
    }

    /// <summary>Field number for the "auto_delete_ttl" field.</summary>
    public const int AutoDeleteTtlFieldNumber = 3;
    /// <summary>
    /// Optional. The lifetime duration of cluster. The cluster will be
    /// auto-deleted at the end of this period. Minimum value is 10 minutes;
    /// maximum value is 14 days (see JSON representation of
    /// [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration AutoDeleteTtl {
      get { return ttlCase_ == TtlOneofCase.AutoDeleteTtl ? (global::Google.Protobuf.WellKnownTypes.Duration) ttl_ : null; }
      set {
        ttl_ = value;
        ttlCase_ = value == null ? TtlOneofCase.None : TtlOneofCase.AutoDeleteTtl;
      }
    }

    /// <summary>Field number for the "idle_start_time" field.</summary>
    public const int IdleStartTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp idleStartTime_;
    /// <summary>
    /// Output only. The time when cluster became idle (most recent job finished)
    /// and became eligible for deletion due to idleness (see JSON representation
    /// of
    /// [Timestamp](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp IdleStartTime {
      get { return idleStartTime_; }
      set {
        idleStartTime_ = value;
      }
    }

    private object ttl_;
    /// <summary>Enum of possible cases for the "ttl" oneof.</summary>
    public enum TtlOneofCase {
      None = 0,
      AutoDeleteTime = 2,
      AutoDeleteTtl = 3,
    }
    private TtlOneofCase ttlCase_ = TtlOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TtlOneofCase TtlCase {
      get { return ttlCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTtl() {
      ttlCase_ = TtlOneofCase.None;
      ttl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LifecycleConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LifecycleConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(IdleDeleteTtl, other.IdleDeleteTtl)) return false;
      if (!object.Equals(AutoDeleteTime, other.AutoDeleteTime)) return false;
      if (!object.Equals(AutoDeleteTtl, other.AutoDeleteTtl)) return false;
      if (!object.Equals(IdleStartTime, other.IdleStartTime)) return false;
      if (TtlCase != other.TtlCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (idleDeleteTtl_ != null) hash ^= IdleDeleteTtl.GetHashCode();
      if (ttlCase_ == TtlOneofCase.AutoDeleteTime) hash ^= AutoDeleteTime.GetHashCode();
      if (ttlCase_ == TtlOneofCase.AutoDeleteTtl) hash ^= AutoDeleteTtl.GetHashCode();
      if (idleStartTime_ != null) hash ^= IdleStartTime.GetHashCode();
      hash ^= (int) ttlCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (idleDeleteTtl_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(IdleDeleteTtl);
      }
      if (ttlCase_ == TtlOneofCase.AutoDeleteTime) {
        output.WriteRawTag(18);
        output.WriteMessage(AutoDeleteTime);
      }
      if (ttlCase_ == TtlOneofCase.AutoDeleteTtl) {
        output.WriteRawTag(26);
        output.WriteMessage(AutoDeleteTtl);
      }
      if (idleStartTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(IdleStartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (idleDeleteTtl_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(IdleDeleteTtl);
      }
      if (ttlCase_ == TtlOneofCase.AutoDeleteTime) {
        output.WriteRawTag(18);
        output.WriteMessage(AutoDeleteTime);
      }
      if (ttlCase_ == TtlOneofCase.AutoDeleteTtl) {
        output.WriteRawTag(26);
        output.WriteMessage(AutoDeleteTtl);
      }
      if (idleStartTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(IdleStartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (idleDeleteTtl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdleDeleteTtl);
      }
      if (ttlCase_ == TtlOneofCase.AutoDeleteTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AutoDeleteTime);
      }
      if (ttlCase_ == TtlOneofCase.AutoDeleteTtl) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AutoDeleteTtl);
      }
      if (idleStartTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdleStartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LifecycleConfig other) {
      if (other == null) {
        return;
      }
      if (other.idleDeleteTtl_ != null) {
        if (idleDeleteTtl_ == null) {
          IdleDeleteTtl = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        IdleDeleteTtl.MergeFrom(other.IdleDeleteTtl);
      }
      if (other.idleStartTime_ != null) {
        if (idleStartTime_ == null) {
          IdleStartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        IdleStartTime.MergeFrom(other.IdleStartTime);
      }
      switch (other.TtlCase) {
        case TtlOneofCase.AutoDeleteTime:
          if (AutoDeleteTime == null) {
            AutoDeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          AutoDeleteTime.MergeFrom(other.AutoDeleteTime);
          break;
        case TtlOneofCase.AutoDeleteTtl:
          if (AutoDeleteTtl == null) {
            AutoDeleteTtl = new global::Google.Protobuf.WellKnownTypes.Duration();
          }
          AutoDeleteTtl.MergeFrom(other.AutoDeleteTtl);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (idleDeleteTtl_ == null) {
              IdleDeleteTtl = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(IdleDeleteTtl);
            break;
          }
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (ttlCase_ == TtlOneofCase.AutoDeleteTime) {
              subBuilder.MergeFrom(AutoDeleteTime);
            }
            input.ReadMessage(subBuilder);
            AutoDeleteTime = subBuilder;
            break;
          }
          case 26: {
            global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
            if (ttlCase_ == TtlOneofCase.AutoDeleteTtl) {
              subBuilder.MergeFrom(AutoDeleteTtl);
            }
            input.ReadMessage(subBuilder);
            AutoDeleteTtl = subBuilder;
            break;
          }
          case 34: {
            if (idleStartTime_ == null) {
              IdleStartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(IdleStartTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (idleDeleteTtl_ == null) {
              IdleDeleteTtl = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(IdleDeleteTtl);
            break;
          }
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (ttlCase_ == TtlOneofCase.AutoDeleteTime) {
              subBuilder.MergeFrom(AutoDeleteTime);
            }
            input.ReadMessage(subBuilder);
            AutoDeleteTime = subBuilder;
            break;
          }
          case 26: {
            global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
            if (ttlCase_ == TtlOneofCase.AutoDeleteTtl) {
              subBuilder.MergeFrom(AutoDeleteTtl);
            }
            input.ReadMessage(subBuilder);
            AutoDeleteTtl = subBuilder;
            break;
          }
          case 34: {
            if (idleStartTime_ == null) {
              IdleStartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(IdleStartTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specifies a Metastore configuration.
  /// </summary>
  public sealed partial class MetastoreConfig : pb::IMessage<MetastoreConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetastoreConfig> _parser = new pb::MessageParser<MetastoreConfig>(() => new MetastoreConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetastoreConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetastoreConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetastoreConfig(MetastoreConfig other) : this() {
      dataprocMetastoreService_ = other.dataprocMetastoreService_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetastoreConfig Clone() {
      return new MetastoreConfig(this);
    }

    /// <summary>Field number for the "dataproc_metastore_service" field.</summary>
    public const int DataprocMetastoreServiceFieldNumber = 1;
    private string dataprocMetastoreService_ = "";
    /// <summary>
    /// Required. Resource name of an existing Dataproc Metastore service.
    ///
    /// Example:
    ///
    /// * `projects/[project_id]/locations/[dataproc_region]/services/[service-name]`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataprocMetastoreService {
      get { return dataprocMetastoreService_; }
      set {
        dataprocMetastoreService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetastoreConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetastoreConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataprocMetastoreService != other.DataprocMetastoreService) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataprocMetastoreService.Length != 0) hash ^= DataprocMetastoreService.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DataprocMetastoreService.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DataprocMetastoreService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DataprocMetastoreService.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DataprocMetastoreService);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataprocMetastoreService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataprocMetastoreService);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetastoreConfig other) {
      if (other == null) {
        return;
      }
      if (other.DataprocMetastoreService.Length != 0) {
        DataprocMetastoreService = other.DataprocMetastoreService;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DataprocMetastoreService = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DataprocMetastoreService = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains cluster daemon metrics, such as HDFS and YARN stats.
  ///
  /// **Beta Feature**: This report is available for testing purposes only. It may
  /// be changed before final release.
  /// </summary>
  public sealed partial class ClusterMetrics : pb::IMessage<ClusterMetrics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClusterMetrics> _parser = new pb::MessageParser<ClusterMetrics>(() => new ClusterMetrics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClusterMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterMetrics(ClusterMetrics other) : this() {
      hdfsMetrics_ = other.hdfsMetrics_.Clone();
      yarnMetrics_ = other.yarnMetrics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterMetrics Clone() {
      return new ClusterMetrics(this);
    }

    /// <summary>Field number for the "hdfs_metrics" field.</summary>
    public const int HdfsMetricsFieldNumber = 1;
    private static readonly pbc::MapField<string, long>.Codec _map_hdfsMetrics_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 10);
    private readonly pbc::MapField<string, long> hdfsMetrics_ = new pbc::MapField<string, long>();
    /// <summary>
    /// The HDFS metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> HdfsMetrics {
      get { return hdfsMetrics_; }
    }

    /// <summary>Field number for the "yarn_metrics" field.</summary>
    public const int YarnMetricsFieldNumber = 2;
    private static readonly pbc::MapField<string, long>.Codec _map_yarnMetrics_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 18);
    private readonly pbc::MapField<string, long> yarnMetrics_ = new pbc::MapField<string, long>();
    /// <summary>
    /// The YARN metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> YarnMetrics {
      get { return yarnMetrics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClusterMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClusterMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!HdfsMetrics.Equals(other.HdfsMetrics)) return false;
      if (!YarnMetrics.Equals(other.YarnMetrics)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= HdfsMetrics.GetHashCode();
      hash ^= YarnMetrics.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      hdfsMetrics_.WriteTo(output, _map_hdfsMetrics_codec);
      yarnMetrics_.WriteTo(output, _map_yarnMetrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      hdfsMetrics_.WriteTo(ref output, _map_hdfsMetrics_codec);
      yarnMetrics_.WriteTo(ref output, _map_yarnMetrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += hdfsMetrics_.CalculateSize(_map_hdfsMetrics_codec);
      size += yarnMetrics_.CalculateSize(_map_yarnMetrics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClusterMetrics other) {
      if (other == null) {
        return;
      }
      hdfsMetrics_.Add(other.hdfsMetrics_);
      yarnMetrics_.Add(other.yarnMetrics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            hdfsMetrics_.AddEntriesFrom(input, _map_hdfsMetrics_codec);
            break;
          }
          case 18: {
            yarnMetrics_.AddEntriesFrom(input, _map_yarnMetrics_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            hdfsMetrics_.AddEntriesFrom(ref input, _map_hdfsMetrics_codec);
            break;
          }
          case 18: {
            yarnMetrics_.AddEntriesFrom(ref input, _map_yarnMetrics_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request to create a cluster.
  /// </summary>
  public sealed partial class CreateClusterRequest : pb::IMessage<CreateClusterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateClusterRequest> _parser = new pb::MessageParser<CreateClusterRequest>(() => new CreateClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterRequest(CreateClusterRequest other) : this() {
      projectId_ = other.projectId_;
      region_ = other.region_;
      cluster_ = other.cluster_ != null ? other.cluster_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterRequest Clone() {
      return new CreateClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. The ID of the Google Cloud Platform project that the cluster
    /// belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 3;
    private string region_ = "";
    /// <summary>
    /// Required. The Dataproc region in which to handle the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster" field.</summary>
    public const int ClusterFieldNumber = 2;
    private global::Google.Cloud.Dataproc.V1.Cluster cluster_;
    /// <summary>
    /// Required. The cluster to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.Cluster Cluster {
      get { return cluster_; }
      set {
        cluster_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 4;
    private string requestId_ = "";
    /// <summary>
    /// Optional. A unique id used to identify the request. If the server receives two
    /// [CreateClusterRequest](https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateClusterRequest)s
    /// with the same id, then the second request will be ignored and the
    /// first [google.longrunning.Operation][google.longrunning.Operation] created and stored in the backend
    /// is returned.
    ///
    /// It is recommended to always set this value to a
    /// [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier).
    ///
    /// The id must contain only letters (a-z, A-Z), numbers (0-9),
    /// underscores (_), and hyphens (-). The maximum length is 40 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Region != other.Region) return false;
      if (!object.Equals(Cluster, other.Cluster)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (cluster_ != null) hash ^= Cluster.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (cluster_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Cluster);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (cluster_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Cluster);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (cluster_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cluster);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.cluster_ != null) {
        if (cluster_ == null) {
          Cluster = new global::Google.Cloud.Dataproc.V1.Cluster();
        }
        Cluster.MergeFrom(other.Cluster);
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            if (cluster_ == null) {
              Cluster = new global::Google.Cloud.Dataproc.V1.Cluster();
            }
            input.ReadMessage(Cluster);
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
          case 34: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            if (cluster_ == null) {
              Cluster = new global::Google.Cloud.Dataproc.V1.Cluster();
            }
            input.ReadMessage(Cluster);
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
          case 34: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request to update a cluster.
  /// </summary>
  public sealed partial class UpdateClusterRequest : pb::IMessage<UpdateClusterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateClusterRequest> _parser = new pb::MessageParser<UpdateClusterRequest>(() => new UpdateClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterRequest(UpdateClusterRequest other) : this() {
      projectId_ = other.projectId_;
      region_ = other.region_;
      clusterName_ = other.clusterName_;
      cluster_ = other.cluster_ != null ? other.cluster_.Clone() : null;
      gracefulDecommissionTimeout_ = other.gracefulDecommissionTimeout_ != null ? other.gracefulDecommissionTimeout_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterRequest Clone() {
      return new UpdateClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. The ID of the Google Cloud Platform project the
    /// cluster belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 5;
    private string region_ = "";
    /// <summary>
    /// Required. The Dataproc region in which to handle the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_name" field.</summary>
    public const int ClusterNameFieldNumber = 2;
    private string clusterName_ = "";
    /// <summary>
    /// Required. The cluster name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterName {
      get { return clusterName_; }
      set {
        clusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster" field.</summary>
    public const int ClusterFieldNumber = 3;
    private global::Google.Cloud.Dataproc.V1.Cluster cluster_;
    /// <summary>
    /// Required. The changes to the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.Cluster Cluster {
      get { return cluster_; }
      set {
        cluster_ = value;
      }
    }

    /// <summary>Field number for the "graceful_decommission_timeout" field.</summary>
    public const int GracefulDecommissionTimeoutFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Duration gracefulDecommissionTimeout_;
    /// <summary>
    /// Optional. Timeout for graceful YARN decomissioning. Graceful
    /// decommissioning allows removing nodes from the cluster without
    /// interrupting jobs in progress. Timeout specifies how long to wait for jobs
    /// in progress to finish before forcefully removing nodes (and potentially
    /// interrupting jobs). Default timeout is 0 (for forceful decommission), and
    /// the maximum allowed timeout is 1 day. (see JSON representation of
    /// [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    ///
    /// Only supported on Dataproc image versions 1.2 and higher.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration GracefulDecommissionTimeout {
      get { return gracefulDecommissionTimeout_; }
      set {
        gracefulDecommissionTimeout_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. Specifies the path, relative to `Cluster`, of
    /// the field to update. For example, to change the number of workers
    /// in a cluster to 5, the `update_mask` parameter would be
    /// specified as `config.worker_config.num_instances`,
    /// and the `PATCH` request body would specify the new value, as follows:
    ///
    ///     {
    ///       "config":{
    ///         "workerConfig":{
    ///           "numInstances":"5"
    ///         }
    ///       }
    ///     }
    /// Similarly, to change the number of preemptible workers in a cluster to 5,
    /// the `update_mask` parameter would be
    /// `config.secondary_worker_config.num_instances`, and the `PATCH` request
    /// body would be set as follows:
    ///
    ///     {
    ///       "config":{
    ///         "secondaryWorkerConfig":{
    ///           "numInstances":"5"
    ///         }
    ///       }
    ///     }
    /// &lt;strong>Note:&lt;/strong> Currently, only the following fields can be updated:
    ///
    ///  &lt;table>
    ///  &lt;tbody>
    ///  &lt;tr>
    ///  &lt;td>&lt;strong>Mask&lt;/strong>&lt;/td>
    ///  &lt;td>&lt;strong>Purpose&lt;/strong>&lt;/td>
    ///  &lt;/tr>
    ///  &lt;tr>
    ///  &lt;td>&lt;strong>&lt;em>labels&lt;/em>&lt;/strong>&lt;/td>
    ///  &lt;td>Update labels&lt;/td>
    ///  &lt;/tr>
    ///  &lt;tr>
    ///  &lt;td>&lt;strong>&lt;em>config.worker_config.num_instances&lt;/em>&lt;/strong>&lt;/td>
    ///  &lt;td>Resize primary worker group&lt;/td>
    ///  &lt;/tr>
    ///  &lt;tr>
    ///  &lt;td>&lt;strong>&lt;em>config.secondary_worker_config.num_instances&lt;/em>&lt;/strong>&lt;/td>
    ///  &lt;td>Resize secondary worker group&lt;/td>
    ///  &lt;/tr>
    ///  &lt;tr>
    ///  &lt;td>config.autoscaling_config.policy_uri&lt;/td>&lt;td>Use, stop using, or
    ///  change autoscaling policies&lt;/td>
    ///  &lt;/tr>
    ///  &lt;/tbody>
    ///  &lt;/table>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 7;
    private string requestId_ = "";
    /// <summary>
    /// Optional. A unique id used to identify the request. If the server
    /// receives two
    /// [UpdateClusterRequest](https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.UpdateClusterRequest)s
    /// with the same id, then the second request will be ignored and the
    /// first [google.longrunning.Operation][google.longrunning.Operation] created and stored in the
    /// backend is returned.
    ///
    /// It is recommended to always set this value to a
    /// [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier).
    ///
    /// The id must contain only letters (a-z, A-Z), numbers (0-9),
    /// underscores (_), and hyphens (-). The maximum length is 40 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Region != other.Region) return false;
      if (ClusterName != other.ClusterName) return false;
      if (!object.Equals(Cluster, other.Cluster)) return false;
      if (!object.Equals(GracefulDecommissionTimeout, other.GracefulDecommissionTimeout)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (ClusterName.Length != 0) hash ^= ClusterName.GetHashCode();
      if (cluster_ != null) hash ^= Cluster.GetHashCode();
      if (gracefulDecommissionTimeout_ != null) hash ^= GracefulDecommissionTimeout.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterName);
      }
      if (cluster_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cluster);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateMask);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Region);
      }
      if (gracefulDecommissionTimeout_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(GracefulDecommissionTimeout);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterName);
      }
      if (cluster_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cluster);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateMask);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Region);
      }
      if (gracefulDecommissionTimeout_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(GracefulDecommissionTimeout);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (ClusterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
      }
      if (cluster_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cluster);
      }
      if (gracefulDecommissionTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GracefulDecommissionTimeout);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.ClusterName.Length != 0) {
        ClusterName = other.ClusterName;
      }
      if (other.cluster_ != null) {
        if (cluster_ == null) {
          Cluster = new global::Google.Cloud.Dataproc.V1.Cluster();
        }
        Cluster.MergeFrom(other.Cluster);
      }
      if (other.gracefulDecommissionTimeout_ != null) {
        if (gracefulDecommissionTimeout_ == null) {
          GracefulDecommissionTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        GracefulDecommissionTimeout.MergeFrom(other.GracefulDecommissionTimeout);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            ClusterName = input.ReadString();
            break;
          }
          case 26: {
            if (cluster_ == null) {
              Cluster = new global::Google.Cloud.Dataproc.V1.Cluster();
            }
            input.ReadMessage(Cluster);
            break;
          }
          case 34: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 42: {
            Region = input.ReadString();
            break;
          }
          case 50: {
            if (gracefulDecommissionTimeout_ == null) {
              GracefulDecommissionTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(GracefulDecommissionTimeout);
            break;
          }
          case 58: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            ClusterName = input.ReadString();
            break;
          }
          case 26: {
            if (cluster_ == null) {
              Cluster = new global::Google.Cloud.Dataproc.V1.Cluster();
            }
            input.ReadMessage(Cluster);
            break;
          }
          case 34: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 42: {
            Region = input.ReadString();
            break;
          }
          case 50: {
            if (gracefulDecommissionTimeout_ == null) {
              GracefulDecommissionTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(GracefulDecommissionTimeout);
            break;
          }
          case 58: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request to stop a cluster.
  /// </summary>
  public sealed partial class StopClusterRequest : pb::IMessage<StopClusterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StopClusterRequest> _parser = new pb::MessageParser<StopClusterRequest>(() => new StopClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopClusterRequest(StopClusterRequest other) : this() {
      projectId_ = other.projectId_;
      region_ = other.region_;
      clusterName_ = other.clusterName_;
      clusterUuid_ = other.clusterUuid_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopClusterRequest Clone() {
      return new StopClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. The ID of the Google Cloud Platform project the
    /// cluster belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 2;
    private string region_ = "";
    /// <summary>
    /// Required. The Dataproc region in which to handle the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_name" field.</summary>
    public const int ClusterNameFieldNumber = 3;
    private string clusterName_ = "";
    /// <summary>
    /// Required. The cluster name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterName {
      get { return clusterName_; }
      set {
        clusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_uuid" field.</summary>
    public const int ClusterUuidFieldNumber = 4;
    private string clusterUuid_ = "";
    /// <summary>
    /// Optional. Specifying the `cluster_uuid` means the RPC will fail
    /// (with error NOT_FOUND) if a cluster with the specified UUID does not exist.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterUuid {
      get { return clusterUuid_; }
      set {
        clusterUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 5;
    private string requestId_ = "";
    /// <summary>
    /// Optional. A unique id used to identify the request. If the server
    /// receives two
    /// [StopClusterRequest](https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StopClusterRequest)s
    /// with the same id, then the second request will be ignored and the
    /// first [google.longrunning.Operation][google.longrunning.Operation] created and stored in the
    /// backend is returned.
    ///
    /// Recommendation: Set this value to a
    /// [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier).
    ///
    /// The id must contain only letters (a-z, A-Z), numbers (0-9),
    /// underscores (_), and hyphens (-). The maximum length is 40 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Region != other.Region) return false;
      if (ClusterName != other.ClusterName) return false;
      if (ClusterUuid != other.ClusterUuid) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (ClusterName.Length != 0) hash ^= ClusterName.GetHashCode();
      if (ClusterUuid.Length != 0) hash ^= ClusterUuid.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Region);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterName);
      }
      if (ClusterUuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClusterUuid);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Region);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterName);
      }
      if (ClusterUuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClusterUuid);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (ClusterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
      }
      if (ClusterUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterUuid);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.ClusterName.Length != 0) {
        ClusterName = other.ClusterName;
      }
      if (other.ClusterUuid.Length != 0) {
        ClusterUuid = other.ClusterUuid;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Region = input.ReadString();
            break;
          }
          case 26: {
            ClusterName = input.ReadString();
            break;
          }
          case 34: {
            ClusterUuid = input.ReadString();
            break;
          }
          case 42: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Region = input.ReadString();
            break;
          }
          case 26: {
            ClusterName = input.ReadString();
            break;
          }
          case 34: {
            ClusterUuid = input.ReadString();
            break;
          }
          case 42: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request to start a cluster.
  /// </summary>
  public sealed partial class StartClusterRequest : pb::IMessage<StartClusterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartClusterRequest> _parser = new pb::MessageParser<StartClusterRequest>(() => new StartClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterRequest(StartClusterRequest other) : this() {
      projectId_ = other.projectId_;
      region_ = other.region_;
      clusterName_ = other.clusterName_;
      clusterUuid_ = other.clusterUuid_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterRequest Clone() {
      return new StartClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. The ID of the Google Cloud Platform project the
    /// cluster belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 2;
    private string region_ = "";
    /// <summary>
    /// Required. The Dataproc region in which to handle the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_name" field.</summary>
    public const int ClusterNameFieldNumber = 3;
    private string clusterName_ = "";
    /// <summary>
    /// Required. The cluster name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterName {
      get { return clusterName_; }
      set {
        clusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_uuid" field.</summary>
    public const int ClusterUuidFieldNumber = 4;
    private string clusterUuid_ = "";
    /// <summary>
    /// Optional. Specifying the `cluster_uuid` means the RPC will fail
    /// (with error NOT_FOUND) if a cluster with the specified UUID does not exist.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterUuid {
      get { return clusterUuid_; }
      set {
        clusterUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 5;
    private string requestId_ = "";
    /// <summary>
    /// Optional. A unique id used to identify the request. If the server
    /// receives two
    /// [StartClusterRequest](https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StartClusterRequest)s
    /// with the same id, then the second request will be ignored and the
    /// first [google.longrunning.Operation][google.longrunning.Operation] created and stored in the
    /// backend is returned.
    ///
    /// Recommendation: Set this value to a
    /// [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier).
    ///
    /// The id must contain only letters (a-z, A-Z), numbers (0-9),
    /// underscores (_), and hyphens (-). The maximum length is 40 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Region != other.Region) return false;
      if (ClusterName != other.ClusterName) return false;
      if (ClusterUuid != other.ClusterUuid) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (ClusterName.Length != 0) hash ^= ClusterName.GetHashCode();
      if (ClusterUuid.Length != 0) hash ^= ClusterUuid.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Region);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterName);
      }
      if (ClusterUuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClusterUuid);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Region);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterName);
      }
      if (ClusterUuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClusterUuid);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (ClusterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
      }
      if (ClusterUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterUuid);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.ClusterName.Length != 0) {
        ClusterName = other.ClusterName;
      }
      if (other.ClusterUuid.Length != 0) {
        ClusterUuid = other.ClusterUuid;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Region = input.ReadString();
            break;
          }
          case 26: {
            ClusterName = input.ReadString();
            break;
          }
          case 34: {
            ClusterUuid = input.ReadString();
            break;
          }
          case 42: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Region = input.ReadString();
            break;
          }
          case 26: {
            ClusterName = input.ReadString();
            break;
          }
          case 34: {
            ClusterUuid = input.ReadString();
            break;
          }
          case 42: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request to delete a cluster.
  /// </summary>
  public sealed partial class DeleteClusterRequest : pb::IMessage<DeleteClusterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteClusterRequest> _parser = new pb::MessageParser<DeleteClusterRequest>(() => new DeleteClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterRequest(DeleteClusterRequest other) : this() {
      projectId_ = other.projectId_;
      region_ = other.region_;
      clusterName_ = other.clusterName_;
      clusterUuid_ = other.clusterUuid_;
      requestId_ = other.requestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterRequest Clone() {
      return new DeleteClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. The ID of the Google Cloud Platform project that the cluster
    /// belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 3;
    private string region_ = "";
    /// <summary>
    /// Required. The Dataproc region in which to handle the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_name" field.</summary>
    public const int ClusterNameFieldNumber = 2;
    private string clusterName_ = "";
    /// <summary>
    /// Required. The cluster name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterName {
      get { return clusterName_; }
      set {
        clusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_uuid" field.</summary>
    public const int ClusterUuidFieldNumber = 4;
    private string clusterUuid_ = "";
    /// <summary>
    /// Optional. Specifying the `cluster_uuid` means the RPC should fail
    /// (with error NOT_FOUND) if cluster with specified UUID does not exist.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterUuid {
      get { return clusterUuid_; }
      set {
        clusterUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 5;
    private string requestId_ = "";
    /// <summary>
    /// Optional. A unique id used to identify the request. If the server
    /// receives two
    /// [DeleteClusterRequest](https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.DeleteClusterRequest)s
    /// with the same id, then the second request will be ignored and the
    /// first [google.longrunning.Operation][google.longrunning.Operation] created and stored in the
    /// backend is returned.
    ///
    /// It is recommended to always set this value to a
    /// [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier).
    ///
    /// The id must contain only letters (a-z, A-Z), numbers (0-9),
    /// underscores (_), and hyphens (-). The maximum length is 40 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Region != other.Region) return false;
      if (ClusterName != other.ClusterName) return false;
      if (ClusterUuid != other.ClusterUuid) return false;
      if (RequestId != other.RequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (ClusterName.Length != 0) hash ^= ClusterName.GetHashCode();
      if (ClusterUuid.Length != 0) hash ^= ClusterUuid.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterName);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (ClusterUuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClusterUuid);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterName);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (ClusterUuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClusterUuid);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (ClusterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
      }
      if (ClusterUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterUuid);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.ClusterName.Length != 0) {
        ClusterName = other.ClusterName;
      }
      if (other.ClusterUuid.Length != 0) {
        ClusterUuid = other.ClusterUuid;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            ClusterName = input.ReadString();
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
          case 34: {
            ClusterUuid = input.ReadString();
            break;
          }
          case 42: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            ClusterName = input.ReadString();
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
          case 34: {
            ClusterUuid = input.ReadString();
            break;
          }
          case 42: {
            RequestId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to get the resource representation for a cluster in a project.
  /// </summary>
  public sealed partial class GetClusterRequest : pb::IMessage<GetClusterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetClusterRequest> _parser = new pb::MessageParser<GetClusterRequest>(() => new GetClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClusterRequest(GetClusterRequest other) : this() {
      projectId_ = other.projectId_;
      region_ = other.region_;
      clusterName_ = other.clusterName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClusterRequest Clone() {
      return new GetClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. The ID of the Google Cloud Platform project that the cluster
    /// belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 3;
    private string region_ = "";
    /// <summary>
    /// Required. The Dataproc region in which to handle the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_name" field.</summary>
    public const int ClusterNameFieldNumber = 2;
    private string clusterName_ = "";
    /// <summary>
    /// Required. The cluster name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterName {
      get { return clusterName_; }
      set {
        clusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Region != other.Region) return false;
      if (ClusterName != other.ClusterName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (ClusterName.Length != 0) hash ^= ClusterName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterName);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterName);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (ClusterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.ClusterName.Length != 0) {
        ClusterName = other.ClusterName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            ClusterName = input.ReadString();
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            ClusterName = input.ReadString();
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request to list the clusters in a project.
  /// </summary>
  public sealed partial class ListClustersRequest : pb::IMessage<ListClustersRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListClustersRequest> _parser = new pb::MessageParser<ListClustersRequest>(() => new ListClustersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClustersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersRequest(ListClustersRequest other) : this() {
      projectId_ = other.projectId_;
      region_ = other.region_;
      filter_ = other.filter_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersRequest Clone() {
      return new ListClustersRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. The ID of the Google Cloud Platform project that the cluster
    /// belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 4;
    private string region_ = "";
    /// <summary>
    /// Required. The Dataproc region in which to handle the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 5;
    private string filter_ = "";
    /// <summary>
    /// Optional. A filter constraining the clusters to list. Filters are
    /// case-sensitive and have the following syntax:
    ///
    /// field = value [AND [field = value]] ...
    ///
    /// where **field** is one of `status.state`, `clusterName`, or `labels.[KEY]`,
    /// and `[KEY]` is a label key. **value** can be `*` to match all values.
    /// `status.state` can be one of the following: `ACTIVE`, `INACTIVE`,
    /// `CREATING`, `RUNNING`, `ERROR`, `DELETING`, or `UPDATING`. `ACTIVE`
    /// contains the `CREATING`, `UPDATING`, and `RUNNING` states. `INACTIVE`
    /// contains the `DELETING` and `ERROR` states.
    /// `clusterName` is the name of the cluster provided at creation time.
    /// Only the logical `AND` operator is supported; space-separated items are
    /// treated as having an implicit `AND` operator.
    ///
    /// Example filter:
    ///
    /// status.state = ACTIVE AND clusterName = mycluster
    /// AND labels.env = staging AND labels.starred = *
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// Optional. The standard List page size.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Optional. The standard List page token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClustersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClustersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Region != other.Region) return false;
      if (Filter != other.Filter) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Region);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Region);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClustersRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Region = input.ReadString();
            break;
          }
          case 42: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Region = input.ReadString();
            break;
          }
          case 42: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The list of all clusters in a project.
  /// </summary>
  public sealed partial class ListClustersResponse : pb::IMessage<ListClustersResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListClustersResponse> _parser = new pb::MessageParser<ListClustersResponse>(() => new ListClustersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClustersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersResponse(ListClustersResponse other) : this() {
      clusters_ = other.clusters_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersResponse Clone() {
      return new ListClustersResponse(this);
    }

    /// <summary>Field number for the "clusters" field.</summary>
    public const int ClustersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dataproc.V1.Cluster> _repeated_clusters_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dataproc.V1.Cluster.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.Cluster> clusters_ = new pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.Cluster>();
    /// <summary>
    /// Output only. The clusters in the project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dataproc.V1.Cluster> Clusters {
      get { return clusters_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// Output only. This token is included in the response if there are more
    /// results to fetch. To fetch additional results, provide this value as the
    /// `page_token` in a subsequent `ListClustersRequest`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClustersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClustersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clusters_.Equals(other.clusters_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clusters_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      clusters_.WriteTo(output, _repeated_clusters_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      clusters_.WriteTo(ref output, _repeated_clusters_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += clusters_.CalculateSize(_repeated_clusters_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClustersResponse other) {
      if (other == null) {
        return;
      }
      clusters_.Add(other.clusters_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            clusters_.AddEntriesFrom(input, _repeated_clusters_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            clusters_.AddEntriesFrom(ref input, _repeated_clusters_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request to collect cluster diagnostic information.
  /// </summary>
  public sealed partial class DiagnoseClusterRequest : pb::IMessage<DiagnoseClusterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiagnoseClusterRequest> _parser = new pb::MessageParser<DiagnoseClusterRequest>(() => new DiagnoseClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DiagnoseClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiagnoseClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiagnoseClusterRequest(DiagnoseClusterRequest other) : this() {
      projectId_ = other.projectId_;
      region_ = other.region_;
      clusterName_ = other.clusterName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiagnoseClusterRequest Clone() {
      return new DiagnoseClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. The ID of the Google Cloud Platform project that the cluster
    /// belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 3;
    private string region_ = "";
    /// <summary>
    /// Required. The Dataproc region in which to handle the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_name" field.</summary>
    public const int ClusterNameFieldNumber = 2;
    private string clusterName_ = "";
    /// <summary>
    /// Required. The cluster name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterName {
      get { return clusterName_; }
      set {
        clusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DiagnoseClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DiagnoseClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Region != other.Region) return false;
      if (ClusterName != other.ClusterName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      if (ClusterName.Length != 0) hash ^= ClusterName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterName);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (ClusterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterName);
      }
      if (Region.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (ClusterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DiagnoseClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
      if (other.ClusterName.Length != 0) {
        ClusterName = other.ClusterName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            ClusterName = input.ReadString();
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            ClusterName = input.ReadString();
            break;
          }
          case 26: {
            Region = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The location of diagnostic output.
  /// </summary>
  public sealed partial class DiagnoseClusterResults : pb::IMessage<DiagnoseClusterResults>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiagnoseClusterResults> _parser = new pb::MessageParser<DiagnoseClusterResults>(() => new DiagnoseClusterResults());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DiagnoseClusterResults> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiagnoseClusterResults() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiagnoseClusterResults(DiagnoseClusterResults other) : this() {
      outputUri_ = other.outputUri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiagnoseClusterResults Clone() {
      return new DiagnoseClusterResults(this);
    }

    /// <summary>Field number for the "output_uri" field.</summary>
    public const int OutputUriFieldNumber = 1;
    private string outputUri_ = "";
    /// <summary>
    /// Output only. The Cloud Storage URI of the diagnostic output.
    /// The output report is a plain text file with a summary of collected
    /// diagnostics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputUri {
      get { return outputUri_; }
      set {
        outputUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DiagnoseClusterResults);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DiagnoseClusterResults other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OutputUri != other.OutputUri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OutputUri.Length != 0) hash ^= OutputUri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OutputUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OutputUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OutputUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OutputUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OutputUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputUri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DiagnoseClusterResults other) {
      if (other == null) {
        return;
      }
      if (other.OutputUri.Length != 0) {
        OutputUri = other.OutputUri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OutputUri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OutputUri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Reservation Affinity for consuming Zonal reservation.
  /// </summary>
  public sealed partial class ReservationAffinity : pb::IMessage<ReservationAffinity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReservationAffinity> _parser = new pb::MessageParser<ReservationAffinity>(() => new ReservationAffinity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationAffinity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataproc.V1.ClustersReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationAffinity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationAffinity(ReservationAffinity other) : this() {
      consumeReservationType_ = other.consumeReservationType_;
      key_ = other.key_;
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationAffinity Clone() {
      return new ReservationAffinity(this);
    }

    /// <summary>Field number for the "consume_reservation_type" field.</summary>
    public const int ConsumeReservationTypeFieldNumber = 1;
    private global::Google.Cloud.Dataproc.V1.ReservationAffinity.Types.Type consumeReservationType_ = global::Google.Cloud.Dataproc.V1.ReservationAffinity.Types.Type.Unspecified;
    /// <summary>
    /// Optional. Type of reservation to consume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dataproc.V1.ReservationAffinity.Types.Type ConsumeReservationType {
      get { return consumeReservationType_; }
      set {
        consumeReservationType_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private string key_ = "";
    /// <summary>
    /// Optional. Corresponds to the label key of reservation resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_values_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> values_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. Corresponds to the label values of reservation resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationAffinity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationAffinity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumeReservationType != other.ConsumeReservationType) return false;
      if (Key != other.Key) return false;
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumeReservationType != global::Google.Cloud.Dataproc.V1.ReservationAffinity.Types.Type.Unspecified) hash ^= ConsumeReservationType.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ConsumeReservationType != global::Google.Cloud.Dataproc.V1.ReservationAffinity.Types.Type.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ConsumeReservationType);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ConsumeReservationType != global::Google.Cloud.Dataproc.V1.ReservationAffinity.Types.Type.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ConsumeReservationType);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsumeReservationType != global::Google.Cloud.Dataproc.V1.ReservationAffinity.Types.Type.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ConsumeReservationType);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationAffinity other) {
      if (other == null) {
        return;
      }
      if (other.ConsumeReservationType != global::Google.Cloud.Dataproc.V1.ReservationAffinity.Types.Type.Unspecified) {
        ConsumeReservationType = other.ConsumeReservationType;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumeReservationType = (global::Google.Cloud.Dataproc.V1.ReservationAffinity.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ConsumeReservationType = (global::Google.Cloud.Dataproc.V1.ReservationAffinity.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReservationAffinity message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Indicates whether to consume capacity from an reservation or not.
      /// </summary>
      public enum Type {
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Do not consume from any allocated capacity.
        /// </summary>
        [pbr::OriginalName("NO_RESERVATION")] NoReservation = 1,
        /// <summary>
        /// Consume any reservation available.
        /// </summary>
        [pbr::OriginalName("ANY_RESERVATION")] AnyReservation = 2,
        /// <summary>
        /// Must consume from a specific reservation. Must specify key value fields
        /// for specifying the reservations.
        /// </summary>
        [pbr::OriginalName("SPECIFIC_RESERVATION")] SpecificReservation = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
