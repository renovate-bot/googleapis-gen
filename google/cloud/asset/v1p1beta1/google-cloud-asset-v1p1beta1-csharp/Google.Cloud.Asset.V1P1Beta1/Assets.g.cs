// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/asset/v1p1beta1/assets.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Asset.V1P1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/asset/v1p1beta1/assets.proto</summary>
  public static partial class AssetsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/asset/v1p1beta1/assets.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AssetsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvY2xvdWQvYXNzZXQvdjFwMWJldGExL2Fzc2V0cy5wcm90bxIc",
            "Z29vZ2xlLmNsb3VkLmFzc2V0LnYxcDFiZXRhMRoaZ29vZ2xlL2lhbS92MS9w",
            "b2xpY3kucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8iwgIK",
            "GFN0YW5kYXJkUmVzb3VyY2VNZXRhZGF0YRIMCgRuYW1lGAEgASgJEhIKCmFz",
            "c2V0X3R5cGUYAiABKAkSDwoHcHJvamVjdBgDIAEoCRIUCgxkaXNwbGF5X25h",
            "bWUYBCABKAkSEwoLZGVzY3JpcHRpb24YBSABKAkSHQoVYWRkaXRpb25hbF9h",
            "dHRyaWJ1dGVzGAogAygJEhAKCGxvY2F0aW9uGAsgASgJElIKBmxhYmVscxgM",
            "IAMoCzJCLmdvb2dsZS5jbG91ZC5hc3NldC52MXAxYmV0YTEuU3RhbmRhcmRS",
            "ZXNvdXJjZU1ldGFkYXRhLkxhYmVsc0VudHJ5EhQKDG5ldHdvcmtfdGFncxgN",
            "IAMoCRotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KAk6AjgBIqMDChVJYW1Qb2xpY3lTZWFyY2hSZXN1bHQSEAoIcmVzb3VyY2UY",
            "ASABKAkSDwoHcHJvamVjdBgDIAEoCRIlCgZwb2xpY3kYBCABKAsyFS5nb29n",
            "bGUuaWFtLnYxLlBvbGljeRJUCgtleHBsYW5hdGlvbhgFIAEoCzI/Lmdvb2ds",
            "ZS5jbG91ZC5hc3NldC52MXAxYmV0YTEuSWFtUG9saWN5U2VhcmNoUmVzdWx0",
            "LkV4cGxhbmF0aW9uGukBCgtFeHBsYW5hdGlvbhJ0ChNtYXRjaGVkX3Blcm1p",
            "c3Npb25zGAEgAygLMlcuZ29vZ2xlLmNsb3VkLmFzc2V0LnYxcDFiZXRhMS5J",
            "YW1Qb2xpY3lTZWFyY2hSZXN1bHQuRXhwbGFuYXRpb24uTWF0Y2hlZFBlcm1p",
            "c3Npb25zRW50cnkaZAoXTWF0Y2hlZFBlcm1pc3Npb25zRW50cnkSCwoDa2V5",
            "GAEgASgJEjgKBXZhbHVlGAIgASgLMikuZ29vZ2xlLmNsb3VkLmFzc2V0LnYx",
            "cDFiZXRhMS5QZXJtaXNzaW9uczoCOAEiIgoLUGVybWlzc2lvbnMSEwoLcGVy",
            "bWlzc2lvbnMYASADKAlCtAEKIGNvbS5nb29nbGUuY2xvdWQuYXNzZXQudjFw",
            "MWJldGExQgpBc3NldFByb3RvUAFaQWdvb2dsZS5nb2xhbmcub3JnL2dlbnBy",
            "b3RvL2dvb2dsZWFwaXMvY2xvdWQvYXNzZXQvdjFwMWJldGExO2Fzc2V0+AEB",
            "qgIcR29vZ2xlLkNsb3VkLkFzc2V0LlYxUDFCZXRhMcoCHEdvb2dsZVxDbG91",
            "ZFxBc3NldFxWMXAxYmV0YTFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Cloud.Iam.V1.PolicyReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1P1Beta1.StandardResourceMetadata), global::Google.Cloud.Asset.V1P1Beta1.StandardResourceMetadata.Parser, new[]{ "Name", "AssetType", "Project", "DisplayName", "Description", "AdditionalAttributes", "Location", "Labels", "NetworkTags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1P1Beta1.IamPolicySearchResult), global::Google.Cloud.Asset.V1P1Beta1.IamPolicySearchResult.Parser, new[]{ "Resource", "Project", "Policy", "Explanation" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1P1Beta1.IamPolicySearchResult.Types.Explanation), global::Google.Cloud.Asset.V1P1Beta1.IamPolicySearchResult.Types.Explanation.Parser, new[]{ "MatchedPermissions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Asset.V1P1Beta1.Permissions), global::Google.Cloud.Asset.V1P1Beta1.Permissions.Parser, new[]{ "Permissions_" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The standard metadata of a cloud resource.
  /// </summary>
  public sealed partial class StandardResourceMetadata : pb::IMessage<StandardResourceMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StandardResourceMetadata> _parser = new pb::MessageParser<StandardResourceMetadata>(() => new StandardResourceMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StandardResourceMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1P1Beta1.AssetsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardResourceMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardResourceMetadata(StandardResourceMetadata other) : this() {
      name_ = other.name_;
      assetType_ = other.assetType_;
      project_ = other.project_;
      displayName_ = other.displayName_;
      description_ = other.description_;
      additionalAttributes_ = other.additionalAttributes_.Clone();
      location_ = other.location_;
      labels_ = other.labels_.Clone();
      networkTags_ = other.networkTags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardResourceMetadata Clone() {
      return new StandardResourceMetadata(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The full resource name. For example:
    /// `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.
    /// See [Resource
    /// Names](https://cloud.google.com/apis/design/resource_names#full_resource_name)
    /// for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "asset_type" field.</summary>
    public const int AssetTypeFieldNumber = 2;
    private string assetType_ = "";
    /// <summary>
    /// The type of this resource.
    /// For example: "compute.googleapis.com/Disk".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetType {
      get { return assetType_; }
      set {
        assetType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 3;
    private string project_ = "";
    /// <summary>
    /// The project that this resource belongs to, in the form of
    /// `projects/{project_number}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    /// <summary>
    /// The display name of this resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// One or more paragraphs of text description of this resource. Maximum length
    /// could be up to 1M bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "additional_attributes" field.</summary>
    public const int AdditionalAttributesFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_additionalAttributes_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> additionalAttributes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Additional searchable attributes of this resource.
    /// Informational only. The exact set of attributes is subject to change.
    /// For example: project id, DNS name etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AdditionalAttributes {
      get { return additionalAttributes_; }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 11;
    private string location_ = "";
    /// <summary>
    /// Location can be "global", regional like "us-east1", or zonal like
    /// "us-west1-b".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 12;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 98);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Labels associated with this resource. See [Labelling and grouping GCP
    /// resources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources)
    /// for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "network_tags" field.</summary>
    public const int NetworkTagsFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_networkTags_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> networkTags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Network tags associated with this resource. Like labels, network tags are a
    /// type of annotations used to group GCP resources. See [Labelling GCP
    /// resources](lhttps://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources)
    /// for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> NetworkTags {
      get { return networkTags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StandardResourceMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StandardResourceMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (AssetType != other.AssetType) return false;
      if (Project != other.Project) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Description != other.Description) return false;
      if(!additionalAttributes_.Equals(other.additionalAttributes_)) return false;
      if (Location != other.Location) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if(!networkTags_.Equals(other.networkTags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (AssetType.Length != 0) hash ^= AssetType.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= additionalAttributes_.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      hash ^= Labels.GetHashCode();
      hash ^= networkTags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (AssetType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AssetType);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Project);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      additionalAttributes_.WriteTo(output, _repeated_additionalAttributes_codec);
      if (Location.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Location);
      }
      labels_.WriteTo(output, _map_labels_codec);
      networkTags_.WriteTo(output, _repeated_networkTags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (AssetType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AssetType);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Project);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      additionalAttributes_.WriteTo(ref output, _repeated_additionalAttributes_codec);
      if (Location.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Location);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      networkTags_.WriteTo(ref output, _repeated_networkTags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (AssetType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetType);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += additionalAttributes_.CalculateSize(_repeated_additionalAttributes_codec);
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      size += networkTags_.CalculateSize(_repeated_networkTags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StandardResourceMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.AssetType.Length != 0) {
        AssetType = other.AssetType;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      additionalAttributes_.Add(other.additionalAttributes_);
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      labels_.Add(other.labels_);
      networkTags_.Add(other.networkTags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            AssetType = input.ReadString();
            break;
          }
          case 26: {
            Project = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 82: {
            additionalAttributes_.AddEntriesFrom(input, _repeated_additionalAttributes_codec);
            break;
          }
          case 90: {
            Location = input.ReadString();
            break;
          }
          case 98: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 106: {
            networkTags_.AddEntriesFrom(input, _repeated_networkTags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            AssetType = input.ReadString();
            break;
          }
          case 26: {
            Project = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 82: {
            additionalAttributes_.AddEntriesFrom(ref input, _repeated_additionalAttributes_codec);
            break;
          }
          case 90: {
            Location = input.ReadString();
            break;
          }
          case 98: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 106: {
            networkTags_.AddEntriesFrom(ref input, _repeated_networkTags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The result for a IAM Policy search.
  /// </summary>
  public sealed partial class IamPolicySearchResult : pb::IMessage<IamPolicySearchResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IamPolicySearchResult> _parser = new pb::MessageParser<IamPolicySearchResult>(() => new IamPolicySearchResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IamPolicySearchResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1P1Beta1.AssetsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IamPolicySearchResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IamPolicySearchResult(IamPolicySearchResult other) : this() {
      resource_ = other.resource_;
      project_ = other.project_;
      policy_ = other.policy_ != null ? other.policy_.Clone() : null;
      explanation_ = other.explanation_ != null ? other.explanation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IamPolicySearchResult Clone() {
      return new IamPolicySearchResult(this);
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 1;
    private string resource_ = "";
    /// <summary>
    /// The [full resource
    /// name](https://cloud.google.com/apis/design/resource_names#full_resource_name)
    /// of the resource associated with this IAM policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Resource {
      get { return resource_; }
      set {
        resource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 3;
    private string project_ = "";
    /// <summary>
    /// The project that the associated GCP resource belongs to, in the form of
    /// `projects/{project_number}`. If an IAM policy is set on a resource (like VM
    /// instance, Cloud Storage bucket), the project field will indicate the
    /// project that contains the resource. If an IAM policy is set on a folder or
    /// orgnization, the project field will be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "policy" field.</summary>
    public const int PolicyFieldNumber = 4;
    private global::Google.Cloud.Iam.V1.Policy policy_;
    /// <summary>
    /// The IAM policy directly set on the given resource. Note that the original
    /// IAM policy can contain multiple bindings. This only contains the bindings
    /// that match the given query. For queries that don't contain a constrain on
    /// policies (e.g. an empty query), this contains all the bindings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iam.V1.Policy Policy {
      get { return policy_; }
      set {
        policy_ = value;
      }
    }

    /// <summary>Field number for the "explanation" field.</summary>
    public const int ExplanationFieldNumber = 5;
    private global::Google.Cloud.Asset.V1P1Beta1.IamPolicySearchResult.Types.Explanation explanation_;
    /// <summary>
    /// Explanation about the IAM policy search result. It contains additional
    /// information to explain why the search result matches the query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Asset.V1P1Beta1.IamPolicySearchResult.Types.Explanation Explanation {
      get { return explanation_; }
      set {
        explanation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IamPolicySearchResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IamPolicySearchResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Resource != other.Resource) return false;
      if (Project != other.Project) return false;
      if (!object.Equals(Policy, other.Policy)) return false;
      if (!object.Equals(Explanation, other.Explanation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Resource.Length != 0) hash ^= Resource.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      if (policy_ != null) hash ^= Policy.GetHashCode();
      if (explanation_ != null) hash ^= Explanation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Resource.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Resource);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Project);
      }
      if (policy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Policy);
      }
      if (explanation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Explanation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Resource.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Resource);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Project);
      }
      if (policy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Policy);
      }
      if (explanation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Explanation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Resource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Resource);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      if (policy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Policy);
      }
      if (explanation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Explanation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IamPolicySearchResult other) {
      if (other == null) {
        return;
      }
      if (other.Resource.Length != 0) {
        Resource = other.Resource;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      if (other.policy_ != null) {
        if (policy_ == null) {
          Policy = new global::Google.Cloud.Iam.V1.Policy();
        }
        Policy.MergeFrom(other.Policy);
      }
      if (other.explanation_ != null) {
        if (explanation_ == null) {
          Explanation = new global::Google.Cloud.Asset.V1P1Beta1.IamPolicySearchResult.Types.Explanation();
        }
        Explanation.MergeFrom(other.Explanation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Resource = input.ReadString();
            break;
          }
          case 26: {
            Project = input.ReadString();
            break;
          }
          case 34: {
            if (policy_ == null) {
              Policy = new global::Google.Cloud.Iam.V1.Policy();
            }
            input.ReadMessage(Policy);
            break;
          }
          case 42: {
            if (explanation_ == null) {
              Explanation = new global::Google.Cloud.Asset.V1P1Beta1.IamPolicySearchResult.Types.Explanation();
            }
            input.ReadMessage(Explanation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Resource = input.ReadString();
            break;
          }
          case 26: {
            Project = input.ReadString();
            break;
          }
          case 34: {
            if (policy_ == null) {
              Policy = new global::Google.Cloud.Iam.V1.Policy();
            }
            input.ReadMessage(Policy);
            break;
          }
          case 42: {
            if (explanation_ == null) {
              Explanation = new global::Google.Cloud.Asset.V1P1Beta1.IamPolicySearchResult.Types.Explanation();
            }
            input.ReadMessage(Explanation);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the IamPolicySearchResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Explanation about the IAM policy search result.
      /// </summary>
      public sealed partial class Explanation : pb::IMessage<Explanation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Explanation> _parser = new pb::MessageParser<Explanation>(() => new Explanation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Explanation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Asset.V1P1Beta1.IamPolicySearchResult.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Explanation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Explanation(Explanation other) : this() {
          matchedPermissions_ = other.matchedPermissions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Explanation Clone() {
          return new Explanation(this);
        }

        /// <summary>Field number for the "matched_permissions" field.</summary>
        public const int MatchedPermissionsFieldNumber = 1;
        private static readonly pbc::MapField<string, global::Google.Cloud.Asset.V1P1Beta1.Permissions>.Codec _map_matchedPermissions_codec
            = new pbc::MapField<string, global::Google.Cloud.Asset.V1P1Beta1.Permissions>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Asset.V1P1Beta1.Permissions.Parser), 10);
        private readonly pbc::MapField<string, global::Google.Cloud.Asset.V1P1Beta1.Permissions> matchedPermissions_ = new pbc::MapField<string, global::Google.Cloud.Asset.V1P1Beta1.Permissions>();
        /// <summary>
        /// The map from roles to their included permission matching the permission
        /// query (e.g. containing `policy.role.permissions:`). A sample role string:
        /// "roles/compute.instanceAdmin". The roles can also be found in the
        /// returned `policy` bindings. Note that the map is populated only if
        /// requesting with a permission query.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Google.Cloud.Asset.V1P1Beta1.Permissions> MatchedPermissions {
          get { return matchedPermissions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Explanation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Explanation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!MatchedPermissions.Equals(other.MatchedPermissions)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= MatchedPermissions.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          matchedPermissions_.WriteTo(output, _map_matchedPermissions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          matchedPermissions_.WriteTo(ref output, _map_matchedPermissions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += matchedPermissions_.CalculateSize(_map_matchedPermissions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Explanation other) {
          if (other == null) {
            return;
          }
          matchedPermissions_.Add(other.matchedPermissions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                matchedPermissions_.AddEntriesFrom(input, _map_matchedPermissions_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                matchedPermissions_.AddEntriesFrom(ref input, _map_matchedPermissions_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// IAM permissions
  /// </summary>
  public sealed partial class Permissions : pb::IMessage<Permissions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Permissions> _parser = new pb::MessageParser<Permissions>(() => new Permissions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Permissions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Asset.V1P1Beta1.AssetsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Permissions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Permissions(Permissions other) : this() {
      permissions_ = other.permissions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Permissions Clone() {
      return new Permissions(this);
    }

    /// <summary>Field number for the "permissions" field.</summary>
    public const int Permissions_FieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_permissions_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> permissions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of permissions. A sample permission string: "compute.disk.get".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permissions_ {
      get { return permissions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Permissions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Permissions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!permissions_.Equals(other.permissions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= permissions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      permissions_.WriteTo(output, _repeated_permissions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      permissions_.WriteTo(ref output, _repeated_permissions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Permissions other) {
      if (other == null) {
        return;
      }
      permissions_.Add(other.permissions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            permissions_.AddEntriesFrom(ref input, _repeated_permissions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
