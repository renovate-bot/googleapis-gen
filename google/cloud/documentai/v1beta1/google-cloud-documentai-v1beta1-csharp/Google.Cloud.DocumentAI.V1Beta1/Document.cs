// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/documentai/v1beta1/document.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.DocumentAI.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/documentai/v1beta1/document.proto</summary>
  public static partial class DocumentReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/documentai/v1beta1/document.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DocumentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5nb29nbGUvY2xvdWQvZG9jdW1lbnRhaS92MWJldGExL2RvY3VtZW50LnBy",
            "b3RvEh9nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExGhxnb29nbGUv",
            "YXBpL2Fubm90YXRpb25zLnByb3RvGi5nb29nbGUvY2xvdWQvZG9jdW1lbnRh",
            "aS92MWJldGExL2dlb21ldHJ5LnByb3RvGhdnb29nbGUvcnBjL3N0YXR1cy5w",
            "cm90bxoXZ29vZ2xlL3R5cGUvY29sb3IucHJvdG8i+iQKCERvY3VtZW50Eg0K",
            "A3VyaRgBIAEoCUgAEhEKB2NvbnRlbnQYAiABKAxIABIRCgltaW1lX3R5cGUY",
            "AyABKAkSDAoEdGV4dBgEIAEoCRJECgt0ZXh0X3N0eWxlcxgFIAMoCzIvLmdv",
            "b2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuU3R5bGUS",
            "PQoFcGFnZXMYBiADKAsyLi5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJl",
            "dGExLkRvY3VtZW50LlBhZ2USQgoIZW50aXRpZXMYByADKAsyMC5nb29nbGUu",
            "Y2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LkVudGl0eRJSChBl",
            "bnRpdHlfcmVsYXRpb25zGAggAygLMjguZ29vZ2xlLmNsb3VkLmRvY3VtZW50",
            "YWkudjFiZXRhMS5Eb2N1bWVudC5FbnRpdHlSZWxhdGlvbhJHCgpzaGFyZF9p",
            "bmZvGAkgASgLMjMuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5E",
            "b2N1bWVudC5TaGFyZEluZm8SIQoFZXJyb3IYCiABKAsyEi5nb29nbGUucnBj",
            "LlN0YXR1cxpKCglTaGFyZEluZm8SEwoLc2hhcmRfaW5kZXgYASABKAMSEwoL",
            "c2hhcmRfY291bnQYAiABKAMSEwoLdGV4dF9vZmZzZXQYAyABKAMa2gIKBVN0",
            "eWxlEkkKC3RleHRfYW5jaG9yGAEgASgLMjQuZ29vZ2xlLmNsb3VkLmRvY3Vt",
            "ZW50YWkudjFiZXRhMS5Eb2N1bWVudC5UZXh0QW5jaG9yEiEKBWNvbG9yGAIg",
            "ASgLMhIuZ29vZ2xlLnR5cGUuQ29sb3ISLAoQYmFja2dyb3VuZF9jb2xvchgD",
            "IAEoCzISLmdvb2dsZS50eXBlLkNvbG9yEhMKC2ZvbnRfd2VpZ2h0GAQgASgJ",
            "EhIKCnRleHRfc3R5bGUYBSABKAkSFwoPdGV4dF9kZWNvcmF0aW9uGAYgASgJ",
            "EksKCWZvbnRfc2l6ZRgHIAEoCzI4Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFp",
            "LnYxYmV0YTEuRG9jdW1lbnQuU3R5bGUuRm9udFNpemUaJgoIRm9udFNpemUS",
            "DAoEc2l6ZRgBIAEoAhIMCgR1bml0GAIgASgJGvYaCgRQYWdlEhMKC3BhZ2Vf",
            "bnVtYmVyGAEgASgFEksKCWRpbWVuc2lvbhgCIAEoCzI4Lmdvb2dsZS5jbG91",
            "ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5EaW1lbnNpb24S",
            "RQoGbGF5b3V0GAMgASgLMjUuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFi",
            "ZXRhMS5Eb2N1bWVudC5QYWdlLkxheW91dBJbChJkZXRlY3RlZF9sYW5ndWFn",
            "ZXMYBCADKAsyPy5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRv",
            "Y3VtZW50LlBhZ2UuRGV0ZWN0ZWRMYW5ndWFnZRJECgZibG9ja3MYBSADKAsy",
            "NC5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBh",
            "Z2UuQmxvY2sSTAoKcGFyYWdyYXBocxgGIAMoCzI4Lmdvb2dsZS5jbG91ZC5k",
            "b2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5QYXJhZ3JhcGgSQgoF",
            "bGluZXMYByADKAsyMy5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEx",
            "LkRvY3VtZW50LlBhZ2UuTGluZRJECgZ0b2tlbnMYCCADKAsyNC5nb29nbGUu",
            "Y2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuVG9rZW4S",
            "VQoPdmlzdWFsX2VsZW1lbnRzGAkgAygLMjwuZ29vZ2xlLmNsb3VkLmRvY3Vt",
            "ZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLlZpc3VhbEVsZW1lbnQSRAoG",
            "dGFibGVzGAogAygLMjQuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRh",
            "MS5Eb2N1bWVudC5QYWdlLlRhYmxlEk0KC2Zvcm1fZmllbGRzGAsgAygLMjgu",
            "Z29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdl",
            "LkZvcm1GaWVsZBo4CglEaW1lbnNpb24SDQoFd2lkdGgYASABKAISDgoGaGVp",
            "Z2h0GAIgASgCEgwKBHVuaXQYAyABKAka7AIKBkxheW91dBJJCgt0ZXh0X2Fu",
            "Y2hvchgBIAEoCzI0Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEu",
            "RG9jdW1lbnQuVGV4dEFuY2hvchISCgpjb25maWRlbmNlGAIgASgCEkQKDWJv",
            "dW5kaW5nX3BvbHkYAyABKAsyLS5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52",
            "MWJldGExLkJvdW5kaW5nUG9seRJWCgtvcmllbnRhdGlvbhgEIAEoDjJBLmdv",
            "b2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5M",
            "YXlvdXQuT3JpZW50YXRpb24iZQoLT3JpZW50YXRpb24SGwoXT1JJRU5UQVRJ",
            "T05fVU5TUEVDSUZJRUQQABILCgdQQUdFX1VQEAESDgoKUEFHRV9SSUdIVBAC",
            "Eg0KCVBBR0VfRE9XThADEg0KCVBBR0VfTEVGVBAEGqsBCgVCbG9jaxJFCgZs",
            "YXlvdXQYASABKAsyNS5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEx",
            "LkRvY3VtZW50LlBhZ2UuTGF5b3V0ElsKEmRldGVjdGVkX2xhbmd1YWdlcxgC",
            "IAMoCzI/Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1l",
            "bnQuUGFnZS5EZXRlY3RlZExhbmd1YWdlGq8BCglQYXJhZ3JhcGgSRQoGbGF5",
            "b3V0GAEgASgLMjUuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5E",
            "b2N1bWVudC5QYWdlLkxheW91dBJbChJkZXRlY3RlZF9sYW5ndWFnZXMYAiAD",
            "KAsyPy5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50",
            "LlBhZ2UuRGV0ZWN0ZWRMYW5ndWFnZRqqAQoETGluZRJFCgZsYXlvdXQYASAB",
            "KAsyNS5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50",
            "LlBhZ2UuTGF5b3V0ElsKEmRldGVjdGVkX2xhbmd1YWdlcxgCIAMoCzI/Lmdv",
            "b2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5E",
            "ZXRlY3RlZExhbmd1YWdlGrUDCgVUb2tlbhJFCgZsYXlvdXQYASABKAsyNS5n",
            "b29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2Uu",
            "TGF5b3V0EloKDmRldGVjdGVkX2JyZWFrGAIgASgLMkIuZ29vZ2xlLmNsb3Vk",
            "LmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLlRva2VuLkRldGVj",
            "dGVkQnJlYWsSWwoSZGV0ZWN0ZWRfbGFuZ3VhZ2VzGAMgAygLMj8uZ29vZ2xl",
            "LmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkRldGVj",
            "dGVkTGFuZ3VhZ2UaqwEKDURldGVjdGVkQnJlYWsSVQoEdHlwZRgBIAEoDjJH",
            "Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFn",
            "ZS5Ub2tlbi5EZXRlY3RlZEJyZWFrLlR5cGUiQwoEVHlwZRIUChBUWVBFX1VO",
            "U1BFQ0lGSUVEEAASCQoFU1BBQ0UQARIOCgpXSURFX1NQQUNFEAISCgoGSFlQ",
            "SEVOEAMawQEKDVZpc3VhbEVsZW1lbnQSRQoGbGF5b3V0GAEgASgLMjUuZ29v",
            "Z2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLkxh",
            "eW91dBIMCgR0eXBlGAIgASgJElsKEmRldGVjdGVkX2xhbmd1YWdlcxgDIAMo",
            "CzI/Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQu",
            "UGFnZS5EZXRlY3RlZExhbmd1YWdlGoIFCgVUYWJsZRJFCgZsYXlvdXQYASAB",
            "KAsyNS5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50",
            "LlBhZ2UuTGF5b3V0ElIKC2hlYWRlcl9yb3dzGAIgAygLMj0uZ29vZ2xlLmNs",
            "b3VkLmRvY3VtZW50YWkudjFiZXRhMS5Eb2N1bWVudC5QYWdlLlRhYmxlLlRh",
            "YmxlUm93ElAKCWJvZHlfcm93cxgDIAMoCzI9Lmdvb2dsZS5jbG91ZC5kb2N1",
            "bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5UYWJsZS5UYWJsZVJvdxJb",
            "ChJkZXRlY3RlZF9sYW5ndWFnZXMYBCADKAsyPy5nb29nbGUuY2xvdWQuZG9j",
            "dW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuRGV0ZWN0ZWRMYW5ndWFn",
            "ZRpZCghUYWJsZVJvdxJNCgVjZWxscxgBIAMoCzI+Lmdvb2dsZS5jbG91ZC5k",
            "b2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5UYWJsZS5UYWJsZUNl",
            "bGwa0wEKCVRhYmxlQ2VsbBJFCgZsYXlvdXQYASABKAsyNS5nb29nbGUuY2xv",
            "dWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlBhZ2UuTGF5b3V0EhAK",
            "CHJvd19zcGFuGAIgASgFEhAKCGNvbF9zcGFuGAMgASgFElsKEmRldGVjdGVk",
            "X2xhbmd1YWdlcxgEIAMoCzI/Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYx",
            "YmV0YTEuRG9jdW1lbnQuUGFnZS5EZXRlY3RlZExhbmd1YWdlGucCCglGb3Jt",
            "RmllbGQSSQoKZmllbGRfbmFtZRgBIAEoCzI1Lmdvb2dsZS5jbG91ZC5kb2N1",
            "bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuUGFnZS5MYXlvdXQSSgoLZmllbGRf",
            "dmFsdWUYAiABKAsyNS5nb29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGEx",
            "LkRvY3VtZW50LlBhZ2UuTGF5b3V0EmAKF25hbWVfZGV0ZWN0ZWRfbGFuZ3Vh",
            "Z2VzGAMgAygLMj8uZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFiZXRhMS5E",
            "b2N1bWVudC5QYWdlLkRldGVjdGVkTGFuZ3VhZ2USYQoYdmFsdWVfZGV0ZWN0",
            "ZWRfbGFuZ3VhZ2VzGAQgAygLMj8uZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWku",
            "djFiZXRhMS5Eb2N1bWVudC5QYWdlLkRldGVjdGVkTGFuZ3VhZ2UaPQoQRGV0",
            "ZWN0ZWRMYW5ndWFnZRIVCg1sYW5ndWFnZV9jb2RlGAEgASgJEhIKCmNvbmZp",
            "ZGVuY2UYAiABKAIaiwEKBkVudGl0eRJJCgt0ZXh0X2FuY2hvchgBIAEoCzI0",
            "Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTEuRG9jdW1lbnQuVGV4",
            "dEFuY2hvchIMCgR0eXBlGAIgASgJEhQKDG1lbnRpb25fdGV4dBgDIAEoCRIS",
            "CgptZW50aW9uX2lkGAQgASgJGkkKDkVudGl0eVJlbGF0aW9uEhIKCnN1Ympl",
            "Y3RfaWQYASABKAkSEQoJb2JqZWN0X2lkGAIgASgJEhAKCHJlbGF0aW9uGAMg",
            "ASgJGpwBCgpUZXh0QW5jaG9yElcKDXRleHRfc2VnbWVudHMYASADKAsyQC5n",
            "b29nbGUuY2xvdWQuZG9jdW1lbnRhaS52MWJldGExLkRvY3VtZW50LlRleHRB",
            "bmNob3IuVGV4dFNlZ21lbnQaNQoLVGV4dFNlZ21lbnQSEwoLc3RhcnRfaW5k",
            "ZXgYASABKAMSEQoJZW5kX2luZGV4GAIgASgDQggKBnNvdXJjZULqAQojY29t",
            "Lmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxYmV0YTFCDURvY3VtZW50UHJv",
            "dG9QAVpJZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9j",
            "bG91ZC9kb2N1bWVudGFpL3YxYmV0YTE7ZG9jdW1lbnRhaaoCH0dvb2dsZS5D",
            "bG91ZC5Eb2N1bWVudEFJLlYxQmV0YTHKAh9Hb29nbGVcQ2xvdWRcRG9jdW1l",
            "bnRBSVxWMWJldGEx6gIiR29vZ2xlOjpDbG91ZDo6RG9jdW1lbnRBSTo6VjFi",
            "ZXRhMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Cloud.DocumentAI.V1Beta1.GeometryReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, global::Google.Type.ColorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document), global::Google.Cloud.DocumentAI.V1Beta1.Document.Parser, new[]{ "Uri", "Content", "MimeType", "Text", "TextStyles", "Pages", "Entities", "EntityRelations", "ShardInfo", "Error" }, new[]{ "Source" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.ShardInfo), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.ShardInfo.Parser, new[]{ "ShardIndex", "ShardCount", "TextOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style.Parser, new[]{ "TextAnchor", "Color", "BackgroundColor", "FontWeight", "TextStyle", "TextDecoration", "FontSize" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style.Types.FontSize), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style.Types.FontSize.Parser, new[]{ "Size", "Unit" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Parser, new[]{ "PageNumber", "Dimension", "Layout", "DetectedLanguages", "Blocks", "Paragraphs", "Lines", "Tokens", "VisualElements", "Tables", "FormFields" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Dimension), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Dimension.Parser, new[]{ "Width", "Height", "Unit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout.Parser, new[]{ "TextAnchor", "Confidence", "BoundingPoly", "Orientation" }, null, new[]{ typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout.Types.Orientation) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Block), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Block.Parser, new[]{ "Layout", "DetectedLanguages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Paragraph), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Paragraph.Parser, new[]{ "Layout", "DetectedLanguages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Line), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Line.Parser, new[]{ "Layout", "DetectedLanguages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Parser, new[]{ "Layout", "DetectedBreak", "DetectedLanguages" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak.Parser, new[]{ "Type" }, null, new[]{ typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak.Types.Type) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.VisualElement), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.VisualElement.Parser, new[]{ "Layout", "Type", "DetectedLanguages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Parser, new[]{ "Layout", "HeaderRows", "BodyRows", "DetectedLanguages" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableRow), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableRow.Parser, new[]{ "Cells" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableCell), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableCell.Parser, new[]{ "Layout", "RowSpan", "ColSpan", "DetectedLanguages" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.FormField), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.FormField.Parser, new[]{ "FieldName", "FieldValue", "NameDetectedLanguages", "ValueDetectedLanguages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage.Parser, new[]{ "LanguageCode", "Confidence" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Entity), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Entity.Parser, new[]{ "TextAnchor", "Type", "MentionText", "MentionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.EntityRelation), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.EntityRelation.Parser, new[]{ "SubjectId", "ObjectId", "Relation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor.Parser, new[]{ "TextSegments" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor.Types.TextSegment), global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor.Types.TextSegment.Parser, new[]{ "StartIndex", "EndIndex" }, null, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Document represents the canonical document resource in Document Understanding
  /// AI.
  /// It is an interchange format that provides insights into documents and allows
  /// for collaboration between users and Document Understanding AI to iterate and
  /// optimize for quality.
  /// </summary>
  public sealed partial class Document : pb::IMessage<Document>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Document> _parser = new pb::MessageParser<Document>(() => new Document());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Document> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DocumentAI.V1Beta1.DocumentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document(Document other) : this() {
      mimeType_ = other.mimeType_;
      text_ = other.text_;
      textStyles_ = other.textStyles_.Clone();
      pages_ = other.pages_.Clone();
      entities_ = other.entities_.Clone();
      entityRelations_ = other.entityRelations_.Clone();
      shardInfo_ = other.shardInfo_ != null ? other.shardInfo_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      switch (other.SourceCase) {
        case SourceOneofCase.Uri:
          Uri = other.Uri;
          break;
        case SourceOneofCase.Content:
          Content = other.Content;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document Clone() {
      return new Document(this);
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 1;
    /// <summary>
    /// Currently supports Google Cloud Storage URI of the form
    ///    `gs://bucket_name/object_name`. Object versioning is not supported.
    ///    See [Google Cloud Storage Request
    ///    URIs](https://cloud.google.com/storage/docs/reference-uris) for more
    ///    info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return sourceCase_ == SourceOneofCase.Uri ? (string) source_ : ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.Uri;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    /// <summary>
    /// Inline document content, represented as a stream of bytes.
    /// Note: As with all `bytes` fields, protobuffers use a pure binary
    /// representation, whereas JSON representations use base64.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return sourceCase_ == SourceOneofCase.Content ? (pb::ByteString) source_ : pb::ByteString.Empty; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.Content;
      }
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 3;
    private string mimeType_ = "";
    /// <summary>
    /// An IANA published MIME type (also referred to as media type). For more
    /// information, see
    /// https://www.iana.org/assignments/media-types/media-types.xhtml.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 4;
    private string text_ = "";
    /// <summary>
    /// UTF-8 encoded text in reading order from the document.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text_styles" field.</summary>
    public const int TextStylesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style> _repeated_textStyles_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style> textStyles_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style>();
    /// <summary>
    /// Styles for the
    /// [Document.text][google.cloud.documentai.v1beta1.Document.text].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style> TextStyles {
      get { return textStyles_; }
    }

    /// <summary>Field number for the "pages" field.</summary>
    public const int PagesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page> _repeated_pages_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page> pages_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page>();
    /// <summary>
    /// Visual page layout for the
    /// [Document][google.cloud.documentai.v1beta1.Document].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page> Pages {
      get { return pages_; }
    }

    /// <summary>Field number for the "entities" field.</summary>
    public const int EntitiesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Entity> _repeated_entities_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Entity.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Entity> entities_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Entity>();
    /// <summary>
    /// A list of entities detected on
    /// [Document.text][google.cloud.documentai.v1beta1.Document.text]. For
    /// document shards, entities in this list may cross shard boundaries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Entity> Entities {
      get { return entities_; }
    }

    /// <summary>Field number for the "entity_relations" field.</summary>
    public const int EntityRelationsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.EntityRelation> _repeated_entityRelations_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.EntityRelation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.EntityRelation> entityRelations_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.EntityRelation>();
    /// <summary>
    /// Relationship among
    /// [Document.entities][google.cloud.documentai.v1beta1.Document.entities].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.EntityRelation> EntityRelations {
      get { return entityRelations_; }
    }

    /// <summary>Field number for the "shard_info" field.</summary>
    public const int ShardInfoFieldNumber = 9;
    private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.ShardInfo shardInfo_;
    /// <summary>
    /// Information about the sharding if this document is sharded part of a larger
    /// document. If the document is not sharded, this message is not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.ShardInfo ShardInfo {
      get { return shardInfo_; }
      set {
        shardInfo_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 10;
    private global::Google.Rpc.Status error_;
    /// <summary>
    /// Any error that occurred while processing this document.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      Uri = 1,
      Content = 2,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Document);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Document other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uri != other.Uri) return false;
      if (Content != other.Content) return false;
      if (MimeType != other.MimeType) return false;
      if (Text != other.Text) return false;
      if(!textStyles_.Equals(other.textStyles_)) return false;
      if(!pages_.Equals(other.pages_)) return false;
      if(!entities_.Equals(other.entities_)) return false;
      if(!entityRelations_.Equals(other.entityRelations_)) return false;
      if (!object.Equals(ShardInfo, other.ShardInfo)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.Uri) hash ^= Uri.GetHashCode();
      if (sourceCase_ == SourceOneofCase.Content) hash ^= Content.GetHashCode();
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      hash ^= textStyles_.GetHashCode();
      hash ^= pages_.GetHashCode();
      hash ^= entities_.GetHashCode();
      hash ^= entityRelations_.GetHashCode();
      if (shardInfo_ != null) hash ^= ShardInfo.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sourceCase_ == SourceOneofCase.Uri) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (sourceCase_ == SourceOneofCase.Content) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MimeType);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Text);
      }
      textStyles_.WriteTo(output, _repeated_textStyles_codec);
      pages_.WriteTo(output, _repeated_pages_codec);
      entities_.WriteTo(output, _repeated_entities_codec);
      entityRelations_.WriteTo(output, _repeated_entityRelations_codec);
      if (shardInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ShardInfo);
      }
      if (error_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sourceCase_ == SourceOneofCase.Uri) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (sourceCase_ == SourceOneofCase.Content) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MimeType);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Text);
      }
      textStyles_.WriteTo(ref output, _repeated_textStyles_codec);
      pages_.WriteTo(ref output, _repeated_pages_codec);
      entities_.WriteTo(ref output, _repeated_entities_codec);
      entityRelations_.WriteTo(ref output, _repeated_entityRelations_codec);
      if (shardInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ShardInfo);
      }
      if (error_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.Uri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (sourceCase_ == SourceOneofCase.Content) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      size += textStyles_.CalculateSize(_repeated_textStyles_codec);
      size += pages_.CalculateSize(_repeated_pages_codec);
      size += entities_.CalculateSize(_repeated_entities_codec);
      size += entityRelations_.CalculateSize(_repeated_entityRelations_codec);
      if (shardInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShardInfo);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Document other) {
      if (other == null) {
        return;
      }
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      textStyles_.Add(other.textStyles_);
      pages_.Add(other.pages_);
      entities_.Add(other.entities_);
      entityRelations_.Add(other.entityRelations_);
      if (other.shardInfo_ != null) {
        if (shardInfo_ == null) {
          ShardInfo = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.ShardInfo();
        }
        ShardInfo.MergeFrom(other.ShardInfo);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Google.Rpc.Status();
        }
        Error.MergeFrom(other.Error);
      }
      switch (other.SourceCase) {
        case SourceOneofCase.Uri:
          Uri = other.Uri;
          break;
        case SourceOneofCase.Content:
          Content = other.Content;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
          case 26: {
            MimeType = input.ReadString();
            break;
          }
          case 34: {
            Text = input.ReadString();
            break;
          }
          case 42: {
            textStyles_.AddEntriesFrom(input, _repeated_textStyles_codec);
            break;
          }
          case 50: {
            pages_.AddEntriesFrom(input, _repeated_pages_codec);
            break;
          }
          case 58: {
            entities_.AddEntriesFrom(input, _repeated_entities_codec);
            break;
          }
          case 66: {
            entityRelations_.AddEntriesFrom(input, _repeated_entityRelations_codec);
            break;
          }
          case 74: {
            if (shardInfo_ == null) {
              ShardInfo = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.ShardInfo();
            }
            input.ReadMessage(ShardInfo);
            break;
          }
          case 82: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
          case 26: {
            MimeType = input.ReadString();
            break;
          }
          case 34: {
            Text = input.ReadString();
            break;
          }
          case 42: {
            textStyles_.AddEntriesFrom(ref input, _repeated_textStyles_codec);
            break;
          }
          case 50: {
            pages_.AddEntriesFrom(ref input, _repeated_pages_codec);
            break;
          }
          case 58: {
            entities_.AddEntriesFrom(ref input, _repeated_entities_codec);
            break;
          }
          case 66: {
            entityRelations_.AddEntriesFrom(ref input, _repeated_entityRelations_codec);
            break;
          }
          case 74: {
            if (shardInfo_ == null) {
              ShardInfo = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.ShardInfo();
            }
            input.ReadMessage(ShardInfo);
            break;
          }
          case 82: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Document message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// For a large document, sharding may be performed to produce several
      /// document shards. Each document shard contains this field to detail which
      /// shard it is.
      /// </summary>
      public sealed partial class ShardInfo : pb::IMessage<ShardInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ShardInfo> _parser = new pb::MessageParser<ShardInfo>(() => new ShardInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ShardInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ShardInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ShardInfo(ShardInfo other) : this() {
          shardIndex_ = other.shardIndex_;
          shardCount_ = other.shardCount_;
          textOffset_ = other.textOffset_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ShardInfo Clone() {
          return new ShardInfo(this);
        }

        /// <summary>Field number for the "shard_index" field.</summary>
        public const int ShardIndexFieldNumber = 1;
        private long shardIndex_;
        /// <summary>
        /// The 0-based index of this shard.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ShardIndex {
          get { return shardIndex_; }
          set {
            shardIndex_ = value;
          }
        }

        /// <summary>Field number for the "shard_count" field.</summary>
        public const int ShardCountFieldNumber = 2;
        private long shardCount_;
        /// <summary>
        /// Total number of shards.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ShardCount {
          get { return shardCount_; }
          set {
            shardCount_ = value;
          }
        }

        /// <summary>Field number for the "text_offset" field.</summary>
        public const int TextOffsetFieldNumber = 3;
        private long textOffset_;
        /// <summary>
        /// The index of the first character in
        /// [Document.text][google.cloud.documentai.v1beta1.Document.text] in the
        /// overall document global text.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TextOffset {
          get { return textOffset_; }
          set {
            textOffset_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ShardInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ShardInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ShardIndex != other.ShardIndex) return false;
          if (ShardCount != other.ShardCount) return false;
          if (TextOffset != other.TextOffset) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ShardIndex != 0L) hash ^= ShardIndex.GetHashCode();
          if (ShardCount != 0L) hash ^= ShardCount.GetHashCode();
          if (TextOffset != 0L) hash ^= TextOffset.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ShardIndex != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ShardIndex);
          }
          if (ShardCount != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ShardCount);
          }
          if (TextOffset != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(TextOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ShardIndex != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ShardIndex);
          }
          if (ShardCount != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ShardCount);
          }
          if (TextOffset != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(TextOffset);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ShardIndex != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShardIndex);
          }
          if (ShardCount != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShardCount);
          }
          if (TextOffset != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TextOffset);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ShardInfo other) {
          if (other == null) {
            return;
          }
          if (other.ShardIndex != 0L) {
            ShardIndex = other.ShardIndex;
          }
          if (other.ShardCount != 0L) {
            ShardCount = other.ShardCount;
          }
          if (other.TextOffset != 0L) {
            TextOffset = other.TextOffset;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ShardIndex = input.ReadInt64();
                break;
              }
              case 16: {
                ShardCount = input.ReadInt64();
                break;
              }
              case 24: {
                TextOffset = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ShardIndex = input.ReadInt64();
                break;
              }
              case 16: {
                ShardCount = input.ReadInt64();
                break;
              }
              case 24: {
                TextOffset = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Annotation for common text style attributes. This adheres to CSS
      /// conventions as much as possible.
      /// </summary>
      public sealed partial class Style : pb::IMessage<Style>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Style> _parser = new pb::MessageParser<Style>(() => new Style());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Style> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Style() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Style(Style other) : this() {
          textAnchor_ = other.textAnchor_ != null ? other.textAnchor_.Clone() : null;
          color_ = other.color_ != null ? other.color_.Clone() : null;
          backgroundColor_ = other.backgroundColor_ != null ? other.backgroundColor_.Clone() : null;
          fontWeight_ = other.fontWeight_;
          textStyle_ = other.textStyle_;
          textDecoration_ = other.textDecoration_;
          fontSize_ = other.fontSize_ != null ? other.fontSize_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Style Clone() {
          return new Style(this);
        }

        /// <summary>Field number for the "text_anchor" field.</summary>
        public const int TextAnchorFieldNumber = 1;
        private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor textAnchor_;
        /// <summary>
        /// Text anchor indexing into the
        /// [Document.text][google.cloud.documentai.v1beta1.Document.text].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor TextAnchor {
          get { return textAnchor_; }
          set {
            textAnchor_ = value;
          }
        }

        /// <summary>Field number for the "color" field.</summary>
        public const int ColorFieldNumber = 2;
        private global::Google.Type.Color color_;
        /// <summary>
        /// Text color.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Type.Color Color {
          get { return color_; }
          set {
            color_ = value;
          }
        }

        /// <summary>Field number for the "background_color" field.</summary>
        public const int BackgroundColorFieldNumber = 3;
        private global::Google.Type.Color backgroundColor_;
        /// <summary>
        /// Text background color.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Type.Color BackgroundColor {
          get { return backgroundColor_; }
          set {
            backgroundColor_ = value;
          }
        }

        /// <summary>Field number for the "font_weight" field.</summary>
        public const int FontWeightFieldNumber = 4;
        private string fontWeight_ = "";
        /// <summary>
        /// Font weight. Possible values are normal, bold, bolder, and lighter.
        /// https://www.w3schools.com/cssref/pr_font_weight.asp
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FontWeight {
          get { return fontWeight_; }
          set {
            fontWeight_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "text_style" field.</summary>
        public const int TextStyleFieldNumber = 5;
        private string textStyle_ = "";
        /// <summary>
        /// Text style. Possible values are normal, italic, and oblique.
        /// https://www.w3schools.com/cssref/pr_font_font-style.asp
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TextStyle {
          get { return textStyle_; }
          set {
            textStyle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "text_decoration" field.</summary>
        public const int TextDecorationFieldNumber = 6;
        private string textDecoration_ = "";
        /// <summary>
        /// Text decoration. Follows CSS standard.
        /// &lt;text-decoration-line> &lt;text-decoration-color> &lt;text-decoration-style>
        /// https://www.w3schools.com/cssref/pr_text_text-decoration.asp
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TextDecoration {
          get { return textDecoration_; }
          set {
            textDecoration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "font_size" field.</summary>
        public const int FontSizeFieldNumber = 7;
        private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style.Types.FontSize fontSize_;
        /// <summary>
        /// Font size.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style.Types.FontSize FontSize {
          get { return fontSize_; }
          set {
            fontSize_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Style);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Style other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(TextAnchor, other.TextAnchor)) return false;
          if (!object.Equals(Color, other.Color)) return false;
          if (!object.Equals(BackgroundColor, other.BackgroundColor)) return false;
          if (FontWeight != other.FontWeight) return false;
          if (TextStyle != other.TextStyle) return false;
          if (TextDecoration != other.TextDecoration) return false;
          if (!object.Equals(FontSize, other.FontSize)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (textAnchor_ != null) hash ^= TextAnchor.GetHashCode();
          if (color_ != null) hash ^= Color.GetHashCode();
          if (backgroundColor_ != null) hash ^= BackgroundColor.GetHashCode();
          if (FontWeight.Length != 0) hash ^= FontWeight.GetHashCode();
          if (TextStyle.Length != 0) hash ^= TextStyle.GetHashCode();
          if (TextDecoration.Length != 0) hash ^= TextDecoration.GetHashCode();
          if (fontSize_ != null) hash ^= FontSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (textAnchor_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(TextAnchor);
          }
          if (color_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Color);
          }
          if (backgroundColor_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(BackgroundColor);
          }
          if (FontWeight.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(FontWeight);
          }
          if (TextStyle.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(TextStyle);
          }
          if (TextDecoration.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(TextDecoration);
          }
          if (fontSize_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(FontSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (textAnchor_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(TextAnchor);
          }
          if (color_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Color);
          }
          if (backgroundColor_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(BackgroundColor);
          }
          if (FontWeight.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(FontWeight);
          }
          if (TextStyle.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(TextStyle);
          }
          if (TextDecoration.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(TextDecoration);
          }
          if (fontSize_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(FontSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (textAnchor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextAnchor);
          }
          if (color_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
          }
          if (backgroundColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackgroundColor);
          }
          if (FontWeight.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FontWeight);
          }
          if (TextStyle.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TextStyle);
          }
          if (TextDecoration.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TextDecoration);
          }
          if (fontSize_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FontSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Style other) {
          if (other == null) {
            return;
          }
          if (other.textAnchor_ != null) {
            if (textAnchor_ == null) {
              TextAnchor = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor();
            }
            TextAnchor.MergeFrom(other.TextAnchor);
          }
          if (other.color_ != null) {
            if (color_ == null) {
              Color = new global::Google.Type.Color();
            }
            Color.MergeFrom(other.Color);
          }
          if (other.backgroundColor_ != null) {
            if (backgroundColor_ == null) {
              BackgroundColor = new global::Google.Type.Color();
            }
            BackgroundColor.MergeFrom(other.BackgroundColor);
          }
          if (other.FontWeight.Length != 0) {
            FontWeight = other.FontWeight;
          }
          if (other.TextStyle.Length != 0) {
            TextStyle = other.TextStyle;
          }
          if (other.TextDecoration.Length != 0) {
            TextDecoration = other.TextDecoration;
          }
          if (other.fontSize_ != null) {
            if (fontSize_ == null) {
              FontSize = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style.Types.FontSize();
            }
            FontSize.MergeFrom(other.FontSize);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (textAnchor_ == null) {
                  TextAnchor = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor();
                }
                input.ReadMessage(TextAnchor);
                break;
              }
              case 18: {
                if (color_ == null) {
                  Color = new global::Google.Type.Color();
                }
                input.ReadMessage(Color);
                break;
              }
              case 26: {
                if (backgroundColor_ == null) {
                  BackgroundColor = new global::Google.Type.Color();
                }
                input.ReadMessage(BackgroundColor);
                break;
              }
              case 34: {
                FontWeight = input.ReadString();
                break;
              }
              case 42: {
                TextStyle = input.ReadString();
                break;
              }
              case 50: {
                TextDecoration = input.ReadString();
                break;
              }
              case 58: {
                if (fontSize_ == null) {
                  FontSize = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style.Types.FontSize();
                }
                input.ReadMessage(FontSize);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (textAnchor_ == null) {
                  TextAnchor = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor();
                }
                input.ReadMessage(TextAnchor);
                break;
              }
              case 18: {
                if (color_ == null) {
                  Color = new global::Google.Type.Color();
                }
                input.ReadMessage(Color);
                break;
              }
              case 26: {
                if (backgroundColor_ == null) {
                  BackgroundColor = new global::Google.Type.Color();
                }
                input.ReadMessage(BackgroundColor);
                break;
              }
              case 34: {
                FontWeight = input.ReadString();
                break;
              }
              case 42: {
                TextStyle = input.ReadString();
                break;
              }
              case 50: {
                TextDecoration = input.ReadString();
                break;
              }
              case 58: {
                if (fontSize_ == null) {
                  FontSize = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style.Types.FontSize();
                }
                input.ReadMessage(FontSize);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Style message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Font size with unit.
          /// </summary>
          public sealed partial class FontSize : pb::IMessage<FontSize>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FontSize> _parser = new pb::MessageParser<FontSize>(() => new FontSize());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<FontSize> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Style.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FontSize() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FontSize(FontSize other) : this() {
              size_ = other.size_;
              unit_ = other.unit_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FontSize Clone() {
              return new FontSize(this);
            }

            /// <summary>Field number for the "size" field.</summary>
            public const int SizeFieldNumber = 1;
            private float size_;
            /// <summary>
            /// Font size for the text.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float Size {
              get { return size_; }
              set {
                size_ = value;
              }
            }

            /// <summary>Field number for the "unit" field.</summary>
            public const int UnitFieldNumber = 2;
            private string unit_ = "";
            /// <summary>
            /// Unit for the font size. Follows CSS naming (in, px, pt, etc.).
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Unit {
              get { return unit_; }
              set {
                unit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as FontSize);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(FontSize other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Size, other.Size)) return false;
              if (Unit != other.Unit) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Size != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Size);
              if (Unit.Length != 0) hash ^= Unit.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Size != 0F) {
                output.WriteRawTag(13);
                output.WriteFloat(Size);
              }
              if (Unit.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Unit);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Size != 0F) {
                output.WriteRawTag(13);
                output.WriteFloat(Size);
              }
              if (Unit.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Unit);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Size != 0F) {
                size += 1 + 4;
              }
              if (Unit.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Unit);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(FontSize other) {
              if (other == null) {
                return;
              }
              if (other.Size != 0F) {
                Size = other.Size;
              }
              if (other.Unit.Length != 0) {
                Unit = other.Unit;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 13: {
                    Size = input.ReadFloat();
                    break;
                  }
                  case 18: {
                    Unit = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 13: {
                    Size = input.ReadFloat();
                    break;
                  }
                  case 18: {
                    Unit = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// A page in a [Document][google.cloud.documentai.v1beta1.Document].
      /// </summary>
      public sealed partial class Page : pb::IMessage<Page>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Page> _parser = new pb::MessageParser<Page>(() => new Page());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Page> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Page() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Page(Page other) : this() {
          pageNumber_ = other.pageNumber_;
          dimension_ = other.dimension_ != null ? other.dimension_.Clone() : null;
          layout_ = other.layout_ != null ? other.layout_.Clone() : null;
          detectedLanguages_ = other.detectedLanguages_.Clone();
          blocks_ = other.blocks_.Clone();
          paragraphs_ = other.paragraphs_.Clone();
          lines_ = other.lines_.Clone();
          tokens_ = other.tokens_.Clone();
          visualElements_ = other.visualElements_.Clone();
          tables_ = other.tables_.Clone();
          formFields_ = other.formFields_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Page Clone() {
          return new Page(this);
        }

        /// <summary>Field number for the "page_number" field.</summary>
        public const int PageNumberFieldNumber = 1;
        private int pageNumber_;
        /// <summary>
        /// 1-based index for current
        /// [Page][google.cloud.documentai.v1beta1.Document.Page] in a parent
        /// [Document][google.cloud.documentai.v1beta1.Document]. Useful when a page
        /// is taken out of a [Document][google.cloud.documentai.v1beta1.Document]
        /// for individual processing.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PageNumber {
          get { return pageNumber_; }
          set {
            pageNumber_ = value;
          }
        }

        /// <summary>Field number for the "dimension" field.</summary>
        public const int DimensionFieldNumber = 2;
        private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Dimension dimension_;
        /// <summary>
        /// Physical dimension of the page.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Dimension Dimension {
          get { return dimension_; }
          set {
            dimension_ = value;
          }
        }

        /// <summary>Field number for the "layout" field.</summary>
        public const int LayoutFieldNumber = 3;
        private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout layout_;
        /// <summary>
        /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for the
        /// page.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout Layout {
          get { return layout_; }
          set {
            layout_ = value;
          }
        }

        /// <summary>Field number for the "detected_languages" field.</summary>
        public const int DetectedLanguagesFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> _repeated_detectedLanguages_codec
            = pb::FieldCodec.ForMessage(34, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> detectedLanguages_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage>();
        /// <summary>
        /// A list of detected languages together with confidence.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> DetectedLanguages {
          get { return detectedLanguages_; }
        }

        /// <summary>Field number for the "blocks" field.</summary>
        public const int BlocksFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Block> _repeated_blocks_codec
            = pb::FieldCodec.ForMessage(42, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Block.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Block> blocks_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Block>();
        /// <summary>
        /// A list of visually detected text blocks on the page.
        /// A block has a set of lines (collected into paragraphs) that have a common
        /// line-spacing and orientation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Block> Blocks {
          get { return blocks_; }
        }

        /// <summary>Field number for the "paragraphs" field.</summary>
        public const int ParagraphsFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Paragraph> _repeated_paragraphs_codec
            = pb::FieldCodec.ForMessage(50, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Paragraph.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Paragraph> paragraphs_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Paragraph>();
        /// <summary>
        /// A list of visually detected text paragraphs on the page.
        /// A collection of lines that a human would perceive as a paragraph.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Paragraph> Paragraphs {
          get { return paragraphs_; }
        }

        /// <summary>Field number for the "lines" field.</summary>
        public const int LinesFieldNumber = 7;
        private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Line> _repeated_lines_codec
            = pb::FieldCodec.ForMessage(58, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Line.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Line> lines_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Line>();
        /// <summary>
        /// A list of visually detected text lines on the page.
        /// A collection of tokens that a human would perceive as a line.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Line> Lines {
          get { return lines_; }
        }

        /// <summary>Field number for the "tokens" field.</summary>
        public const int TokensFieldNumber = 8;
        private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token> _repeated_tokens_codec
            = pb::FieldCodec.ForMessage(66, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token> tokens_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token>();
        /// <summary>
        /// A list of visually detected tokens on the page.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token> Tokens {
          get { return tokens_; }
        }

        /// <summary>Field number for the "visual_elements" field.</summary>
        public const int VisualElementsFieldNumber = 9;
        private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.VisualElement> _repeated_visualElements_codec
            = pb::FieldCodec.ForMessage(74, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.VisualElement.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.VisualElement> visualElements_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.VisualElement>();
        /// <summary>
        /// A list of detected non-text visual elements e.g. checkbox,
        /// signature etc. on the page.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.VisualElement> VisualElements {
          get { return visualElements_; }
        }

        /// <summary>Field number for the "tables" field.</summary>
        public const int TablesFieldNumber = 10;
        private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table> _repeated_tables_codec
            = pb::FieldCodec.ForMessage(82, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table> tables_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table>();
        /// <summary>
        /// A list of visually detected tables on the page.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table> Tables {
          get { return tables_; }
        }

        /// <summary>Field number for the "form_fields" field.</summary>
        public const int FormFieldsFieldNumber = 11;
        private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.FormField> _repeated_formFields_codec
            = pb::FieldCodec.ForMessage(90, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.FormField.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.FormField> formFields_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.FormField>();
        /// <summary>
        /// A list of visually detected form fields on the page.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.FormField> FormFields {
          get { return formFields_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Page);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Page other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PageNumber != other.PageNumber) return false;
          if (!object.Equals(Dimension, other.Dimension)) return false;
          if (!object.Equals(Layout, other.Layout)) return false;
          if(!detectedLanguages_.Equals(other.detectedLanguages_)) return false;
          if(!blocks_.Equals(other.blocks_)) return false;
          if(!paragraphs_.Equals(other.paragraphs_)) return false;
          if(!lines_.Equals(other.lines_)) return false;
          if(!tokens_.Equals(other.tokens_)) return false;
          if(!visualElements_.Equals(other.visualElements_)) return false;
          if(!tables_.Equals(other.tables_)) return false;
          if(!formFields_.Equals(other.formFields_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PageNumber != 0) hash ^= PageNumber.GetHashCode();
          if (dimension_ != null) hash ^= Dimension.GetHashCode();
          if (layout_ != null) hash ^= Layout.GetHashCode();
          hash ^= detectedLanguages_.GetHashCode();
          hash ^= blocks_.GetHashCode();
          hash ^= paragraphs_.GetHashCode();
          hash ^= lines_.GetHashCode();
          hash ^= tokens_.GetHashCode();
          hash ^= visualElements_.GetHashCode();
          hash ^= tables_.GetHashCode();
          hash ^= formFields_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (PageNumber != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(PageNumber);
          }
          if (dimension_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Dimension);
          }
          if (layout_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Layout);
          }
          detectedLanguages_.WriteTo(output, _repeated_detectedLanguages_codec);
          blocks_.WriteTo(output, _repeated_blocks_codec);
          paragraphs_.WriteTo(output, _repeated_paragraphs_codec);
          lines_.WriteTo(output, _repeated_lines_codec);
          tokens_.WriteTo(output, _repeated_tokens_codec);
          visualElements_.WriteTo(output, _repeated_visualElements_codec);
          tables_.WriteTo(output, _repeated_tables_codec);
          formFields_.WriteTo(output, _repeated_formFields_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (PageNumber != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(PageNumber);
          }
          if (dimension_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Dimension);
          }
          if (layout_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Layout);
          }
          detectedLanguages_.WriteTo(ref output, _repeated_detectedLanguages_codec);
          blocks_.WriteTo(ref output, _repeated_blocks_codec);
          paragraphs_.WriteTo(ref output, _repeated_paragraphs_codec);
          lines_.WriteTo(ref output, _repeated_lines_codec);
          tokens_.WriteTo(ref output, _repeated_tokens_codec);
          visualElements_.WriteTo(ref output, _repeated_visualElements_codec);
          tables_.WriteTo(ref output, _repeated_tables_codec);
          formFields_.WriteTo(ref output, _repeated_formFields_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PageNumber != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNumber);
          }
          if (dimension_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dimension);
          }
          if (layout_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Layout);
          }
          size += detectedLanguages_.CalculateSize(_repeated_detectedLanguages_codec);
          size += blocks_.CalculateSize(_repeated_blocks_codec);
          size += paragraphs_.CalculateSize(_repeated_paragraphs_codec);
          size += lines_.CalculateSize(_repeated_lines_codec);
          size += tokens_.CalculateSize(_repeated_tokens_codec);
          size += visualElements_.CalculateSize(_repeated_visualElements_codec);
          size += tables_.CalculateSize(_repeated_tables_codec);
          size += formFields_.CalculateSize(_repeated_formFields_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Page other) {
          if (other == null) {
            return;
          }
          if (other.PageNumber != 0) {
            PageNumber = other.PageNumber;
          }
          if (other.dimension_ != null) {
            if (dimension_ == null) {
              Dimension = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Dimension();
            }
            Dimension.MergeFrom(other.Dimension);
          }
          if (other.layout_ != null) {
            if (layout_ == null) {
              Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
            }
            Layout.MergeFrom(other.Layout);
          }
          detectedLanguages_.Add(other.detectedLanguages_);
          blocks_.Add(other.blocks_);
          paragraphs_.Add(other.paragraphs_);
          lines_.Add(other.lines_);
          tokens_.Add(other.tokens_);
          visualElements_.Add(other.visualElements_);
          tables_.Add(other.tables_);
          formFields_.Add(other.formFields_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PageNumber = input.ReadInt32();
                break;
              }
              case 18: {
                if (dimension_ == null) {
                  Dimension = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Dimension();
                }
                input.ReadMessage(Dimension);
                break;
              }
              case 26: {
                if (layout_ == null) {
                  Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                }
                input.ReadMessage(Layout);
                break;
              }
              case 34: {
                detectedLanguages_.AddEntriesFrom(input, _repeated_detectedLanguages_codec);
                break;
              }
              case 42: {
                blocks_.AddEntriesFrom(input, _repeated_blocks_codec);
                break;
              }
              case 50: {
                paragraphs_.AddEntriesFrom(input, _repeated_paragraphs_codec);
                break;
              }
              case 58: {
                lines_.AddEntriesFrom(input, _repeated_lines_codec);
                break;
              }
              case 66: {
                tokens_.AddEntriesFrom(input, _repeated_tokens_codec);
                break;
              }
              case 74: {
                visualElements_.AddEntriesFrom(input, _repeated_visualElements_codec);
                break;
              }
              case 82: {
                tables_.AddEntriesFrom(input, _repeated_tables_codec);
                break;
              }
              case 90: {
                formFields_.AddEntriesFrom(input, _repeated_formFields_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PageNumber = input.ReadInt32();
                break;
              }
              case 18: {
                if (dimension_ == null) {
                  Dimension = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Dimension();
                }
                input.ReadMessage(Dimension);
                break;
              }
              case 26: {
                if (layout_ == null) {
                  Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                }
                input.ReadMessage(Layout);
                break;
              }
              case 34: {
                detectedLanguages_.AddEntriesFrom(ref input, _repeated_detectedLanguages_codec);
                break;
              }
              case 42: {
                blocks_.AddEntriesFrom(ref input, _repeated_blocks_codec);
                break;
              }
              case 50: {
                paragraphs_.AddEntriesFrom(ref input, _repeated_paragraphs_codec);
                break;
              }
              case 58: {
                lines_.AddEntriesFrom(ref input, _repeated_lines_codec);
                break;
              }
              case 66: {
                tokens_.AddEntriesFrom(ref input, _repeated_tokens_codec);
                break;
              }
              case 74: {
                visualElements_.AddEntriesFrom(ref input, _repeated_visualElements_codec);
                break;
              }
              case 82: {
                tables_.AddEntriesFrom(ref input, _repeated_tables_codec);
                break;
              }
              case 90: {
                formFields_.AddEntriesFrom(ref input, _repeated_formFields_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Page message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Dimension for the page.
          /// </summary>
          public sealed partial class Dimension : pb::IMessage<Dimension>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Dimension> _parser = new pb::MessageParser<Dimension>(() => new Dimension());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Dimension> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Dimension() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Dimension(Dimension other) : this() {
              width_ = other.width_;
              height_ = other.height_;
              unit_ = other.unit_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Dimension Clone() {
              return new Dimension(this);
            }

            /// <summary>Field number for the "width" field.</summary>
            public const int WidthFieldNumber = 1;
            private float width_;
            /// <summary>
            /// Page width.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float Width {
              get { return width_; }
              set {
                width_ = value;
              }
            }

            /// <summary>Field number for the "height" field.</summary>
            public const int HeightFieldNumber = 2;
            private float height_;
            /// <summary>
            /// Page height.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float Height {
              get { return height_; }
              set {
                height_ = value;
              }
            }

            /// <summary>Field number for the "unit" field.</summary>
            public const int UnitFieldNumber = 3;
            private string unit_ = "";
            /// <summary>
            /// Dimension unit.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Unit {
              get { return unit_; }
              set {
                unit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Dimension);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Dimension other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Width, other.Width)) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
              if (Unit != other.Unit) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Width != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Width);
              if (Height != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
              if (Unit.Length != 0) hash ^= Unit.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Width != 0F) {
                output.WriteRawTag(13);
                output.WriteFloat(Width);
              }
              if (Height != 0F) {
                output.WriteRawTag(21);
                output.WriteFloat(Height);
              }
              if (Unit.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Unit);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Width != 0F) {
                output.WriteRawTag(13);
                output.WriteFloat(Width);
              }
              if (Height != 0F) {
                output.WriteRawTag(21);
                output.WriteFloat(Height);
              }
              if (Unit.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Unit);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Width != 0F) {
                size += 1 + 4;
              }
              if (Height != 0F) {
                size += 1 + 4;
              }
              if (Unit.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Unit);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Dimension other) {
              if (other == null) {
                return;
              }
              if (other.Width != 0F) {
                Width = other.Width;
              }
              if (other.Height != 0F) {
                Height = other.Height;
              }
              if (other.Unit.Length != 0) {
                Unit = other.Unit;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 13: {
                    Width = input.ReadFloat();
                    break;
                  }
                  case 21: {
                    Height = input.ReadFloat();
                    break;
                  }
                  case 26: {
                    Unit = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 13: {
                    Width = input.ReadFloat();
                    break;
                  }
                  case 21: {
                    Height = input.ReadFloat();
                    break;
                  }
                  case 26: {
                    Unit = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Visual element describing a layout unit on a page.
          /// </summary>
          public sealed partial class Layout : pb::IMessage<Layout>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Layout> _parser = new pb::MessageParser<Layout>(() => new Layout());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Layout> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Layout() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Layout(Layout other) : this() {
              textAnchor_ = other.textAnchor_ != null ? other.textAnchor_.Clone() : null;
              confidence_ = other.confidence_;
              boundingPoly_ = other.boundingPoly_ != null ? other.boundingPoly_.Clone() : null;
              orientation_ = other.orientation_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Layout Clone() {
              return new Layout(this);
            }

            /// <summary>Field number for the "text_anchor" field.</summary>
            public const int TextAnchorFieldNumber = 1;
            private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor textAnchor_;
            /// <summary>
            /// Text anchor indexing into the
            /// [Document.text][google.cloud.documentai.v1beta1.Document.text].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor TextAnchor {
              get { return textAnchor_; }
              set {
                textAnchor_ = value;
              }
            }

            /// <summary>Field number for the "confidence" field.</summary>
            public const int ConfidenceFieldNumber = 2;
            private float confidence_;
            /// <summary>
            /// Confidence of the current
            /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] within
            /// context of the object this layout is for. e.g. confidence can be for a
            /// single token, a table, a visual element, etc. depending on context.
            /// Range [0, 1].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float Confidence {
              get { return confidence_; }
              set {
                confidence_ = value;
              }
            }

            /// <summary>Field number for the "bounding_poly" field.</summary>
            public const int BoundingPolyFieldNumber = 3;
            private global::Google.Cloud.DocumentAI.V1Beta1.BoundingPoly boundingPoly_;
            /// <summary>
            /// The bounding polygon for the
            /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.DocumentAI.V1Beta1.BoundingPoly BoundingPoly {
              get { return boundingPoly_; }
              set {
                boundingPoly_ = value;
              }
            }

            /// <summary>Field number for the "orientation" field.</summary>
            public const int OrientationFieldNumber = 4;
            private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout.Types.Orientation orientation_ = global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout.Types.Orientation.Unspecified;
            /// <summary>
            /// Detected orientation for the
            /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout.Types.Orientation Orientation {
              get { return orientation_; }
              set {
                orientation_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Layout);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Layout other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(TextAnchor, other.TextAnchor)) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
              if (!object.Equals(BoundingPoly, other.BoundingPoly)) return false;
              if (Orientation != other.Orientation) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (textAnchor_ != null) hash ^= TextAnchor.GetHashCode();
              if (Confidence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Confidence);
              if (boundingPoly_ != null) hash ^= BoundingPoly.GetHashCode();
              if (Orientation != global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout.Types.Orientation.Unspecified) hash ^= Orientation.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (textAnchor_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(TextAnchor);
              }
              if (Confidence != 0F) {
                output.WriteRawTag(21);
                output.WriteFloat(Confidence);
              }
              if (boundingPoly_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(BoundingPoly);
              }
              if (Orientation != global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout.Types.Orientation.Unspecified) {
                output.WriteRawTag(32);
                output.WriteEnum((int) Orientation);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (textAnchor_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(TextAnchor);
              }
              if (Confidence != 0F) {
                output.WriteRawTag(21);
                output.WriteFloat(Confidence);
              }
              if (boundingPoly_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(BoundingPoly);
              }
              if (Orientation != global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout.Types.Orientation.Unspecified) {
                output.WriteRawTag(32);
                output.WriteEnum((int) Orientation);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (textAnchor_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextAnchor);
              }
              if (Confidence != 0F) {
                size += 1 + 4;
              }
              if (boundingPoly_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoundingPoly);
              }
              if (Orientation != global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout.Types.Orientation.Unspecified) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Orientation);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Layout other) {
              if (other == null) {
                return;
              }
              if (other.textAnchor_ != null) {
                if (textAnchor_ == null) {
                  TextAnchor = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor();
                }
                TextAnchor.MergeFrom(other.TextAnchor);
              }
              if (other.Confidence != 0F) {
                Confidence = other.Confidence;
              }
              if (other.boundingPoly_ != null) {
                if (boundingPoly_ == null) {
                  BoundingPoly = new global::Google.Cloud.DocumentAI.V1Beta1.BoundingPoly();
                }
                BoundingPoly.MergeFrom(other.BoundingPoly);
              }
              if (other.Orientation != global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout.Types.Orientation.Unspecified) {
                Orientation = other.Orientation;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (textAnchor_ == null) {
                      TextAnchor = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor();
                    }
                    input.ReadMessage(TextAnchor);
                    break;
                  }
                  case 21: {
                    Confidence = input.ReadFloat();
                    break;
                  }
                  case 26: {
                    if (boundingPoly_ == null) {
                      BoundingPoly = new global::Google.Cloud.DocumentAI.V1Beta1.BoundingPoly();
                    }
                    input.ReadMessage(BoundingPoly);
                    break;
                  }
                  case 32: {
                    Orientation = (global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout.Types.Orientation) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (textAnchor_ == null) {
                      TextAnchor = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor();
                    }
                    input.ReadMessage(TextAnchor);
                    break;
                  }
                  case 21: {
                    Confidence = input.ReadFloat();
                    break;
                  }
                  case 26: {
                    if (boundingPoly_ == null) {
                      BoundingPoly = new global::Google.Cloud.DocumentAI.V1Beta1.BoundingPoly();
                    }
                    input.ReadMessage(BoundingPoly);
                    break;
                  }
                  case 32: {
                    Orientation = (global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout.Types.Orientation) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Layout message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              /// <summary>
              /// Detected human reading orientation.
              /// </summary>
              public enum Orientation {
                /// <summary>
                /// Unspecified orientation.
                /// </summary>
                [pbr::OriginalName("ORIENTATION_UNSPECIFIED")] Unspecified = 0,
                /// <summary>
                /// Orientation is aligned with page up.
                /// </summary>
                [pbr::OriginalName("PAGE_UP")] PageUp = 1,
                /// <summary>
                /// Orientation is aligned with page right.
                /// Turn the head 90 degrees clockwise from upright to read.
                /// </summary>
                [pbr::OriginalName("PAGE_RIGHT")] PageRight = 2,
                /// <summary>
                /// Orientation is aligned with page down.
                /// Turn the head 180 degrees from upright to read.
                /// </summary>
                [pbr::OriginalName("PAGE_DOWN")] PageDown = 3,
                /// <summary>
                /// Orientation is aligned with page left.
                /// Turn the head 90 degrees counterclockwise from upright to read.
                /// </summary>
                [pbr::OriginalName("PAGE_LEFT")] PageLeft = 4,
              }

            }
            #endregion

          }

          /// <summary>
          /// A block has a set of lines (collected into paragraphs) that have a
          /// common line-spacing and orientation.
          /// </summary>
          public sealed partial class Block : pb::IMessage<Block>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Block> _parser = new pb::MessageParser<Block>(() => new Block());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Block> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Block() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Block(Block other) : this() {
              layout_ = other.layout_ != null ? other.layout_.Clone() : null;
              detectedLanguages_ = other.detectedLanguages_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Block Clone() {
              return new Block(this);
            }

            /// <summary>Field number for the "layout" field.</summary>
            public const int LayoutFieldNumber = 1;
            private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout layout_;
            /// <summary>
            /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
            /// [Block][google.cloud.documentai.v1beta1.Document.Page.Block].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout Layout {
              get { return layout_; }
              set {
                layout_ = value;
              }
            }

            /// <summary>Field number for the "detected_languages" field.</summary>
            public const int DetectedLanguagesFieldNumber = 2;
            private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> _repeated_detectedLanguages_codec
                = pb::FieldCodec.ForMessage(18, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> detectedLanguages_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage>();
            /// <summary>
            /// A list of detected languages together with confidence.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> DetectedLanguages {
              get { return detectedLanguages_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Block);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Block other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Layout, other.Layout)) return false;
              if(!detectedLanguages_.Equals(other.detectedLanguages_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (layout_ != null) hash ^= Layout.GetHashCode();
              hash ^= detectedLanguages_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (layout_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Layout);
              }
              detectedLanguages_.WriteTo(output, _repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (layout_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Layout);
              }
              detectedLanguages_.WriteTo(ref output, _repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (layout_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Layout);
              }
              size += detectedLanguages_.CalculateSize(_repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Block other) {
              if (other == null) {
                return;
              }
              if (other.layout_ != null) {
                if (layout_ == null) {
                  Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                }
                Layout.MergeFrom(other.Layout);
              }
              detectedLanguages_.Add(other.detectedLanguages_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(Layout);
                    break;
                  }
                  case 18: {
                    detectedLanguages_.AddEntriesFrom(input, _repeated_detectedLanguages_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(Layout);
                    break;
                  }
                  case 18: {
                    detectedLanguages_.AddEntriesFrom(ref input, _repeated_detectedLanguages_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A collection of lines that a human would perceive as a paragraph.
          /// </summary>
          public sealed partial class Paragraph : pb::IMessage<Paragraph>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Paragraph> _parser = new pb::MessageParser<Paragraph>(() => new Paragraph());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Paragraph> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Paragraph() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Paragraph(Paragraph other) : this() {
              layout_ = other.layout_ != null ? other.layout_.Clone() : null;
              detectedLanguages_ = other.detectedLanguages_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Paragraph Clone() {
              return new Paragraph(this);
            }

            /// <summary>Field number for the "layout" field.</summary>
            public const int LayoutFieldNumber = 1;
            private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout layout_;
            /// <summary>
            /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
            /// [Paragraph][google.cloud.documentai.v1beta1.Document.Page.Paragraph].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout Layout {
              get { return layout_; }
              set {
                layout_ = value;
              }
            }

            /// <summary>Field number for the "detected_languages" field.</summary>
            public const int DetectedLanguagesFieldNumber = 2;
            private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> _repeated_detectedLanguages_codec
                = pb::FieldCodec.ForMessage(18, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> detectedLanguages_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage>();
            /// <summary>
            /// A list of detected languages together with confidence.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> DetectedLanguages {
              get { return detectedLanguages_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Paragraph);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Paragraph other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Layout, other.Layout)) return false;
              if(!detectedLanguages_.Equals(other.detectedLanguages_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (layout_ != null) hash ^= Layout.GetHashCode();
              hash ^= detectedLanguages_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (layout_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Layout);
              }
              detectedLanguages_.WriteTo(output, _repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (layout_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Layout);
              }
              detectedLanguages_.WriteTo(ref output, _repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (layout_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Layout);
              }
              size += detectedLanguages_.CalculateSize(_repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Paragraph other) {
              if (other == null) {
                return;
              }
              if (other.layout_ != null) {
                if (layout_ == null) {
                  Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                }
                Layout.MergeFrom(other.Layout);
              }
              detectedLanguages_.Add(other.detectedLanguages_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(Layout);
                    break;
                  }
                  case 18: {
                    detectedLanguages_.AddEntriesFrom(input, _repeated_detectedLanguages_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(Layout);
                    break;
                  }
                  case 18: {
                    detectedLanguages_.AddEntriesFrom(ref input, _repeated_detectedLanguages_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A collection of tokens that a human would perceive as a line.
          /// Does not cross column boundaries, can be horizontal, vertical, etc.
          /// </summary>
          public sealed partial class Line : pb::IMessage<Line>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Line> _parser = new pb::MessageParser<Line>(() => new Line());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Line> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Descriptor.NestedTypes[4]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Line() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Line(Line other) : this() {
              layout_ = other.layout_ != null ? other.layout_.Clone() : null;
              detectedLanguages_ = other.detectedLanguages_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Line Clone() {
              return new Line(this);
            }

            /// <summary>Field number for the "layout" field.</summary>
            public const int LayoutFieldNumber = 1;
            private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout layout_;
            /// <summary>
            /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
            /// [Line][google.cloud.documentai.v1beta1.Document.Page.Line].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout Layout {
              get { return layout_; }
              set {
                layout_ = value;
              }
            }

            /// <summary>Field number for the "detected_languages" field.</summary>
            public const int DetectedLanguagesFieldNumber = 2;
            private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> _repeated_detectedLanguages_codec
                = pb::FieldCodec.ForMessage(18, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> detectedLanguages_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage>();
            /// <summary>
            /// A list of detected languages together with confidence.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> DetectedLanguages {
              get { return detectedLanguages_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Line);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Line other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Layout, other.Layout)) return false;
              if(!detectedLanguages_.Equals(other.detectedLanguages_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (layout_ != null) hash ^= Layout.GetHashCode();
              hash ^= detectedLanguages_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (layout_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Layout);
              }
              detectedLanguages_.WriteTo(output, _repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (layout_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Layout);
              }
              detectedLanguages_.WriteTo(ref output, _repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (layout_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Layout);
              }
              size += detectedLanguages_.CalculateSize(_repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Line other) {
              if (other == null) {
                return;
              }
              if (other.layout_ != null) {
                if (layout_ == null) {
                  Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                }
                Layout.MergeFrom(other.Layout);
              }
              detectedLanguages_.Add(other.detectedLanguages_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(Layout);
                    break;
                  }
                  case 18: {
                    detectedLanguages_.AddEntriesFrom(input, _repeated_detectedLanguages_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(Layout);
                    break;
                  }
                  case 18: {
                    detectedLanguages_.AddEntriesFrom(ref input, _repeated_detectedLanguages_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A detected token.
          /// </summary>
          public sealed partial class Token : pb::IMessage<Token>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Token> _parser = new pb::MessageParser<Token>(() => new Token());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Token> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Descriptor.NestedTypes[5]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Token() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Token(Token other) : this() {
              layout_ = other.layout_ != null ? other.layout_.Clone() : null;
              detectedBreak_ = other.detectedBreak_ != null ? other.detectedBreak_.Clone() : null;
              detectedLanguages_ = other.detectedLanguages_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Token Clone() {
              return new Token(this);
            }

            /// <summary>Field number for the "layout" field.</summary>
            public const int LayoutFieldNumber = 1;
            private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout layout_;
            /// <summary>
            /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
            /// [Token][google.cloud.documentai.v1beta1.Document.Page.Token].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout Layout {
              get { return layout_; }
              set {
                layout_ = value;
              }
            }

            /// <summary>Field number for the "detected_break" field.</summary>
            public const int DetectedBreakFieldNumber = 2;
            private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak detectedBreak_;
            /// <summary>
            /// Detected break at the end of a
            /// [Token][google.cloud.documentai.v1beta1.Document.Page.Token].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak DetectedBreak {
              get { return detectedBreak_; }
              set {
                detectedBreak_ = value;
              }
            }

            /// <summary>Field number for the "detected_languages" field.</summary>
            public const int DetectedLanguagesFieldNumber = 3;
            private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> _repeated_detectedLanguages_codec
                = pb::FieldCodec.ForMessage(26, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> detectedLanguages_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage>();
            /// <summary>
            /// A list of detected languages together with confidence.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> DetectedLanguages {
              get { return detectedLanguages_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Token);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Token other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Layout, other.Layout)) return false;
              if (!object.Equals(DetectedBreak, other.DetectedBreak)) return false;
              if(!detectedLanguages_.Equals(other.detectedLanguages_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (layout_ != null) hash ^= Layout.GetHashCode();
              if (detectedBreak_ != null) hash ^= DetectedBreak.GetHashCode();
              hash ^= detectedLanguages_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (layout_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Layout);
              }
              if (detectedBreak_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(DetectedBreak);
              }
              detectedLanguages_.WriteTo(output, _repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (layout_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Layout);
              }
              if (detectedBreak_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(DetectedBreak);
              }
              detectedLanguages_.WriteTo(ref output, _repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (layout_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Layout);
              }
              if (detectedBreak_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(DetectedBreak);
              }
              size += detectedLanguages_.CalculateSize(_repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Token other) {
              if (other == null) {
                return;
              }
              if (other.layout_ != null) {
                if (layout_ == null) {
                  Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                }
                Layout.MergeFrom(other.Layout);
              }
              if (other.detectedBreak_ != null) {
                if (detectedBreak_ == null) {
                  DetectedBreak = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak();
                }
                DetectedBreak.MergeFrom(other.DetectedBreak);
              }
              detectedLanguages_.Add(other.detectedLanguages_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(Layout);
                    break;
                  }
                  case 18: {
                    if (detectedBreak_ == null) {
                      DetectedBreak = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak();
                    }
                    input.ReadMessage(DetectedBreak);
                    break;
                  }
                  case 26: {
                    detectedLanguages_.AddEntriesFrom(input, _repeated_detectedLanguages_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(Layout);
                    break;
                  }
                  case 18: {
                    if (detectedBreak_ == null) {
                      DetectedBreak = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak();
                    }
                    input.ReadMessage(DetectedBreak);
                    break;
                  }
                  case 26: {
                    detectedLanguages_.AddEntriesFrom(ref input, _repeated_detectedLanguages_codec);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Token message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              /// <summary>
              /// Detected break at the end of a
              /// [Token][google.cloud.documentai.v1beta1.Document.Page.Token].
              /// </summary>
              public sealed partial class DetectedBreak : pb::IMessage<DetectedBreak>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<DetectedBreak> _parser = new pb::MessageParser<DetectedBreak>(() => new DetectedBreak());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<DetectedBreak> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public DetectedBreak() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public DetectedBreak(DetectedBreak other) : this() {
                  type_ = other.type_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public DetectedBreak Clone() {
                  return new DetectedBreak(this);
                }

                /// <summary>Field number for the "type" field.</summary>
                public const int TypeFieldNumber = 1;
                private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak.Types.Type type_ = global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak.Types.Type.Unspecified;
                /// <summary>
                /// Detected break type.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak.Types.Type Type {
                  get { return type_; }
                  set {
                    type_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as DetectedBreak);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(DetectedBreak other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Type != other.Type) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Type != global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak.Types.Type.Unspecified) hash ^= Type.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (Type != global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak.Types.Type.Unspecified) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) Type);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (Type != global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak.Types.Type.Unspecified) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) Type);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Type != global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak.Types.Type.Unspecified) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(DetectedBreak other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Type != global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak.Types.Type.Unspecified) {
                    Type = other.Type;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        Type = (global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak.Types.Type) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        Type = (global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Token.Types.DetectedBreak.Types.Type) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the DetectedBreak message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static partial class Types {
                  /// <summary>
                  /// Enum to denote the type of break found.
                  /// </summary>
                  public enum Type {
                    /// <summary>
                    /// Unspecified break type.
                    /// </summary>
                    [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
                    /// <summary>
                    /// A single whitespace.
                    /// </summary>
                    [pbr::OriginalName("SPACE")] Space = 1,
                    /// <summary>
                    /// A wider whitespace.
                    /// </summary>
                    [pbr::OriginalName("WIDE_SPACE")] WideSpace = 2,
                    /// <summary>
                    /// A hyphen that indicates that a token has been split across lines.
                    /// </summary>
                    [pbr::OriginalName("HYPHEN")] Hyphen = 3,
                  }

                }
                #endregion

              }

            }
            #endregion

          }

          /// <summary>
          /// Detected non-text visual elements e.g. checkbox, signature etc. on the
          /// page.
          /// </summary>
          public sealed partial class VisualElement : pb::IMessage<VisualElement>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<VisualElement> _parser = new pb::MessageParser<VisualElement>(() => new VisualElement());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<VisualElement> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Descriptor.NestedTypes[6]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public VisualElement() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public VisualElement(VisualElement other) : this() {
              layout_ = other.layout_ != null ? other.layout_.Clone() : null;
              type_ = other.type_;
              detectedLanguages_ = other.detectedLanguages_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public VisualElement Clone() {
              return new VisualElement(this);
            }

            /// <summary>Field number for the "layout" field.</summary>
            public const int LayoutFieldNumber = 1;
            private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout layout_;
            /// <summary>
            /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
            /// [Token][google.cloud.documentai.v1beta1.Document.Page.Token].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout Layout {
              get { return layout_; }
              set {
                layout_ = value;
              }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 2;
            private string type_ = "";
            /// <summary>
            /// Type of the
            /// [VisualElement][google.cloud.documentai.v1beta1.Document.Page.VisualElement].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Type {
              get { return type_; }
              set {
                type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "detected_languages" field.</summary>
            public const int DetectedLanguagesFieldNumber = 3;
            private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> _repeated_detectedLanguages_codec
                = pb::FieldCodec.ForMessage(26, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> detectedLanguages_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage>();
            /// <summary>
            /// A list of detected languages together with confidence.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> DetectedLanguages {
              get { return detectedLanguages_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as VisualElement);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(VisualElement other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Layout, other.Layout)) return false;
              if (Type != other.Type) return false;
              if(!detectedLanguages_.Equals(other.detectedLanguages_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (layout_ != null) hash ^= Layout.GetHashCode();
              if (Type.Length != 0) hash ^= Type.GetHashCode();
              hash ^= detectedLanguages_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (layout_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Layout);
              }
              if (Type.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Type);
              }
              detectedLanguages_.WriteTo(output, _repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (layout_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Layout);
              }
              if (Type.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Type);
              }
              detectedLanguages_.WriteTo(ref output, _repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (layout_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Layout);
              }
              if (Type.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
              }
              size += detectedLanguages_.CalculateSize(_repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(VisualElement other) {
              if (other == null) {
                return;
              }
              if (other.layout_ != null) {
                if (layout_ == null) {
                  Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                }
                Layout.MergeFrom(other.Layout);
              }
              if (other.Type.Length != 0) {
                Type = other.Type;
              }
              detectedLanguages_.Add(other.detectedLanguages_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(Layout);
                    break;
                  }
                  case 18: {
                    Type = input.ReadString();
                    break;
                  }
                  case 26: {
                    detectedLanguages_.AddEntriesFrom(input, _repeated_detectedLanguages_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(Layout);
                    break;
                  }
                  case 18: {
                    Type = input.ReadString();
                    break;
                  }
                  case 26: {
                    detectedLanguages_.AddEntriesFrom(ref input, _repeated_detectedLanguages_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A table representation similar to HTML table structure.
          /// </summary>
          public sealed partial class Table : pb::IMessage<Table>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Table> _parser = new pb::MessageParser<Table>(() => new Table());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Table> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Descriptor.NestedTypes[7]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Table() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Table(Table other) : this() {
              layout_ = other.layout_ != null ? other.layout_.Clone() : null;
              headerRows_ = other.headerRows_.Clone();
              bodyRows_ = other.bodyRows_.Clone();
              detectedLanguages_ = other.detectedLanguages_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Table Clone() {
              return new Table(this);
            }

            /// <summary>Field number for the "layout" field.</summary>
            public const int LayoutFieldNumber = 1;
            private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout layout_;
            /// <summary>
            /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
            /// [Table][google.cloud.documentai.v1beta1.Document.Page.Table].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout Layout {
              get { return layout_; }
              set {
                layout_ = value;
              }
            }

            /// <summary>Field number for the "header_rows" field.</summary>
            public const int HeaderRowsFieldNumber = 2;
            private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableRow> _repeated_headerRows_codec
                = pb::FieldCodec.ForMessage(18, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableRow.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableRow> headerRows_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableRow>();
            /// <summary>
            /// Header rows of the table.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableRow> HeaderRows {
              get { return headerRows_; }
            }

            /// <summary>Field number for the "body_rows" field.</summary>
            public const int BodyRowsFieldNumber = 3;
            private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableRow> _repeated_bodyRows_codec
                = pb::FieldCodec.ForMessage(26, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableRow.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableRow> bodyRows_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableRow>();
            /// <summary>
            /// Body rows of the table.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableRow> BodyRows {
              get { return bodyRows_; }
            }

            /// <summary>Field number for the "detected_languages" field.</summary>
            public const int DetectedLanguagesFieldNumber = 4;
            private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> _repeated_detectedLanguages_codec
                = pb::FieldCodec.ForMessage(34, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> detectedLanguages_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage>();
            /// <summary>
            /// A list of detected languages together with confidence.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> DetectedLanguages {
              get { return detectedLanguages_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Table);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Table other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Layout, other.Layout)) return false;
              if(!headerRows_.Equals(other.headerRows_)) return false;
              if(!bodyRows_.Equals(other.bodyRows_)) return false;
              if(!detectedLanguages_.Equals(other.detectedLanguages_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (layout_ != null) hash ^= Layout.GetHashCode();
              hash ^= headerRows_.GetHashCode();
              hash ^= bodyRows_.GetHashCode();
              hash ^= detectedLanguages_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (layout_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Layout);
              }
              headerRows_.WriteTo(output, _repeated_headerRows_codec);
              bodyRows_.WriteTo(output, _repeated_bodyRows_codec);
              detectedLanguages_.WriteTo(output, _repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (layout_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Layout);
              }
              headerRows_.WriteTo(ref output, _repeated_headerRows_codec);
              bodyRows_.WriteTo(ref output, _repeated_bodyRows_codec);
              detectedLanguages_.WriteTo(ref output, _repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (layout_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Layout);
              }
              size += headerRows_.CalculateSize(_repeated_headerRows_codec);
              size += bodyRows_.CalculateSize(_repeated_bodyRows_codec);
              size += detectedLanguages_.CalculateSize(_repeated_detectedLanguages_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Table other) {
              if (other == null) {
                return;
              }
              if (other.layout_ != null) {
                if (layout_ == null) {
                  Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                }
                Layout.MergeFrom(other.Layout);
              }
              headerRows_.Add(other.headerRows_);
              bodyRows_.Add(other.bodyRows_);
              detectedLanguages_.Add(other.detectedLanguages_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(Layout);
                    break;
                  }
                  case 18: {
                    headerRows_.AddEntriesFrom(input, _repeated_headerRows_codec);
                    break;
                  }
                  case 26: {
                    bodyRows_.AddEntriesFrom(input, _repeated_bodyRows_codec);
                    break;
                  }
                  case 34: {
                    detectedLanguages_.AddEntriesFrom(input, _repeated_detectedLanguages_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(Layout);
                    break;
                  }
                  case 18: {
                    headerRows_.AddEntriesFrom(ref input, _repeated_headerRows_codec);
                    break;
                  }
                  case 26: {
                    bodyRows_.AddEntriesFrom(ref input, _repeated_bodyRows_codec);
                    break;
                  }
                  case 34: {
                    detectedLanguages_.AddEntriesFrom(ref input, _repeated_detectedLanguages_codec);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Table message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              /// <summary>
              /// A row of table cells.
              /// </summary>
              public sealed partial class TableRow : pb::IMessage<TableRow>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<TableRow> _parser = new pb::MessageParser<TableRow>(() => new TableRow());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<TableRow> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TableRow() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TableRow(TableRow other) : this() {
                  cells_ = other.cells_.Clone();
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TableRow Clone() {
                  return new TableRow(this);
                }

                /// <summary>Field number for the "cells" field.</summary>
                public const int CellsFieldNumber = 1;
                private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableCell> _repeated_cells_codec
                    = pb::FieldCodec.ForMessage(10, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableCell.Parser);
                private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableCell> cells_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableCell>();
                /// <summary>
                /// Cells that make up this row.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Types.TableCell> Cells {
                  get { return cells_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as TableRow);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(TableRow other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if(!cells_.Equals(other.cells_)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  hash ^= cells_.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  cells_.WriteTo(output, _repeated_cells_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  cells_.WriteTo(ref output, _repeated_cells_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  size += cells_.CalculateSize(_repeated_cells_codec);
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(TableRow other) {
                  if (other == null) {
                    return;
                  }
                  cells_.Add(other.cells_);
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        cells_.AddEntriesFrom(input, _repeated_cells_codec);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        cells_.AddEntriesFrom(ref input, _repeated_cells_codec);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              /// <summary>
              /// A cell representation inside the table.
              /// </summary>
              public sealed partial class TableCell : pb::IMessage<TableCell>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<TableCell> _parser = new pb::MessageParser<TableCell>(() => new TableCell());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<TableCell> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Table.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TableCell() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TableCell(TableCell other) : this() {
                  layout_ = other.layout_ != null ? other.layout_.Clone() : null;
                  rowSpan_ = other.rowSpan_;
                  colSpan_ = other.colSpan_;
                  detectedLanguages_ = other.detectedLanguages_.Clone();
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TableCell Clone() {
                  return new TableCell(this);
                }

                /// <summary>Field number for the "layout" field.</summary>
                public const int LayoutFieldNumber = 1;
                private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout layout_;
                /// <summary>
                /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for
                /// [TableCell][google.cloud.documentai.v1beta1.Document.Page.Table.TableCell].
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout Layout {
                  get { return layout_; }
                  set {
                    layout_ = value;
                  }
                }

                /// <summary>Field number for the "row_span" field.</summary>
                public const int RowSpanFieldNumber = 2;
                private int rowSpan_;
                /// <summary>
                /// How many rows this cell spans.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int RowSpan {
                  get { return rowSpan_; }
                  set {
                    rowSpan_ = value;
                  }
                }

                /// <summary>Field number for the "col_span" field.</summary>
                public const int ColSpanFieldNumber = 3;
                private int colSpan_;
                /// <summary>
                /// How many columns this cell spans.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int ColSpan {
                  get { return colSpan_; }
                  set {
                    colSpan_ = value;
                  }
                }

                /// <summary>Field number for the "detected_languages" field.</summary>
                public const int DetectedLanguagesFieldNumber = 4;
                private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> _repeated_detectedLanguages_codec
                    = pb::FieldCodec.ForMessage(34, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage.Parser);
                private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> detectedLanguages_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage>();
                /// <summary>
                /// A list of detected languages together with confidence.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> DetectedLanguages {
                  get { return detectedLanguages_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as TableCell);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(TableCell other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(Layout, other.Layout)) return false;
                  if (RowSpan != other.RowSpan) return false;
                  if (ColSpan != other.ColSpan) return false;
                  if(!detectedLanguages_.Equals(other.detectedLanguages_)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (layout_ != null) hash ^= Layout.GetHashCode();
                  if (RowSpan != 0) hash ^= RowSpan.GetHashCode();
                  if (ColSpan != 0) hash ^= ColSpan.GetHashCode();
                  hash ^= detectedLanguages_.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (layout_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(Layout);
                  }
                  if (RowSpan != 0) {
                    output.WriteRawTag(16);
                    output.WriteInt32(RowSpan);
                  }
                  if (ColSpan != 0) {
                    output.WriteRawTag(24);
                    output.WriteInt32(ColSpan);
                  }
                  detectedLanguages_.WriteTo(output, _repeated_detectedLanguages_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (layout_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(Layout);
                  }
                  if (RowSpan != 0) {
                    output.WriteRawTag(16);
                    output.WriteInt32(RowSpan);
                  }
                  if (ColSpan != 0) {
                    output.WriteRawTag(24);
                    output.WriteInt32(ColSpan);
                  }
                  detectedLanguages_.WriteTo(ref output, _repeated_detectedLanguages_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (layout_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(Layout);
                  }
                  if (RowSpan != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowSpan);
                  }
                  if (ColSpan != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColSpan);
                  }
                  size += detectedLanguages_.CalculateSize(_repeated_detectedLanguages_codec);
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(TableCell other) {
                  if (other == null) {
                    return;
                  }
                  if (other.layout_ != null) {
                    if (layout_ == null) {
                      Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    Layout.MergeFrom(other.Layout);
                  }
                  if (other.RowSpan != 0) {
                    RowSpan = other.RowSpan;
                  }
                  if (other.ColSpan != 0) {
                    ColSpan = other.ColSpan;
                  }
                  detectedLanguages_.Add(other.detectedLanguages_);
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (layout_ == null) {
                          Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                        }
                        input.ReadMessage(Layout);
                        break;
                      }
                      case 16: {
                        RowSpan = input.ReadInt32();
                        break;
                      }
                      case 24: {
                        ColSpan = input.ReadInt32();
                        break;
                      }
                      case 34: {
                        detectedLanguages_.AddEntriesFrom(input, _repeated_detectedLanguages_codec);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (layout_ == null) {
                          Layout = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                        }
                        input.ReadMessage(Layout);
                        break;
                      }
                      case 16: {
                        RowSpan = input.ReadInt32();
                        break;
                      }
                      case 24: {
                        ColSpan = input.ReadInt32();
                        break;
                      }
                      case 34: {
                        detectedLanguages_.AddEntriesFrom(ref input, _repeated_detectedLanguages_codec);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

          /// <summary>
          /// A form field detected on the page.
          /// </summary>
          public sealed partial class FormField : pb::IMessage<FormField>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FormField> _parser = new pb::MessageParser<FormField>(() => new FormField());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<FormField> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Descriptor.NestedTypes[8]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FormField() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FormField(FormField other) : this() {
              fieldName_ = other.fieldName_ != null ? other.fieldName_.Clone() : null;
              fieldValue_ = other.fieldValue_ != null ? other.fieldValue_.Clone() : null;
              nameDetectedLanguages_ = other.nameDetectedLanguages_.Clone();
              valueDetectedLanguages_ = other.valueDetectedLanguages_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FormField Clone() {
              return new FormField(this);
            }

            /// <summary>Field number for the "field_name" field.</summary>
            public const int FieldNameFieldNumber = 1;
            private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout fieldName_;
            /// <summary>
            /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for the
            /// [FormField][google.cloud.documentai.v1beta1.Document.Page.FormField]
            /// name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout FieldName {
              get { return fieldName_; }
              set {
                fieldName_ = value;
              }
            }

            /// <summary>Field number for the "field_value" field.</summary>
            public const int FieldValueFieldNumber = 2;
            private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout fieldValue_;
            /// <summary>
            /// [Layout][google.cloud.documentai.v1beta1.Document.Page.Layout] for the
            /// [FormField][google.cloud.documentai.v1beta1.Document.Page.FormField]
            /// value.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout FieldValue {
              get { return fieldValue_; }
              set {
                fieldValue_ = value;
              }
            }

            /// <summary>Field number for the "name_detected_languages" field.</summary>
            public const int NameDetectedLanguagesFieldNumber = 3;
            private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> _repeated_nameDetectedLanguages_codec
                = pb::FieldCodec.ForMessage(26, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> nameDetectedLanguages_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage>();
            /// <summary>
            /// A list of detected languages for name together with confidence.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> NameDetectedLanguages {
              get { return nameDetectedLanguages_; }
            }

            /// <summary>Field number for the "value_detected_languages" field.</summary>
            public const int ValueDetectedLanguagesFieldNumber = 4;
            private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> _repeated_valueDetectedLanguages_codec
                = pb::FieldCodec.ForMessage(34, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> valueDetectedLanguages_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage>();
            /// <summary>
            /// A list of detected languages for value together with confidence.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.DetectedLanguage> ValueDetectedLanguages {
              get { return valueDetectedLanguages_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as FormField);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(FormField other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(FieldName, other.FieldName)) return false;
              if (!object.Equals(FieldValue, other.FieldValue)) return false;
              if(!nameDetectedLanguages_.Equals(other.nameDetectedLanguages_)) return false;
              if(!valueDetectedLanguages_.Equals(other.valueDetectedLanguages_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (fieldName_ != null) hash ^= FieldName.GetHashCode();
              if (fieldValue_ != null) hash ^= FieldValue.GetHashCode();
              hash ^= nameDetectedLanguages_.GetHashCode();
              hash ^= valueDetectedLanguages_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (fieldName_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(FieldName);
              }
              if (fieldValue_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(FieldValue);
              }
              nameDetectedLanguages_.WriteTo(output, _repeated_nameDetectedLanguages_codec);
              valueDetectedLanguages_.WriteTo(output, _repeated_valueDetectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (fieldName_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(FieldName);
              }
              if (fieldValue_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(FieldValue);
              }
              nameDetectedLanguages_.WriteTo(ref output, _repeated_nameDetectedLanguages_codec);
              valueDetectedLanguages_.WriteTo(ref output, _repeated_valueDetectedLanguages_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (fieldName_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(FieldName);
              }
              if (fieldValue_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(FieldValue);
              }
              size += nameDetectedLanguages_.CalculateSize(_repeated_nameDetectedLanguages_codec);
              size += valueDetectedLanguages_.CalculateSize(_repeated_valueDetectedLanguages_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(FormField other) {
              if (other == null) {
                return;
              }
              if (other.fieldName_ != null) {
                if (fieldName_ == null) {
                  FieldName = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                }
                FieldName.MergeFrom(other.FieldName);
              }
              if (other.fieldValue_ != null) {
                if (fieldValue_ == null) {
                  FieldValue = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                }
                FieldValue.MergeFrom(other.FieldValue);
              }
              nameDetectedLanguages_.Add(other.nameDetectedLanguages_);
              valueDetectedLanguages_.Add(other.valueDetectedLanguages_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (fieldName_ == null) {
                      FieldName = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(FieldName);
                    break;
                  }
                  case 18: {
                    if (fieldValue_ == null) {
                      FieldValue = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(FieldValue);
                    break;
                  }
                  case 26: {
                    nameDetectedLanguages_.AddEntriesFrom(input, _repeated_nameDetectedLanguages_codec);
                    break;
                  }
                  case 34: {
                    valueDetectedLanguages_.AddEntriesFrom(input, _repeated_valueDetectedLanguages_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (fieldName_ == null) {
                      FieldName = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(FieldName);
                    break;
                  }
                  case 18: {
                    if (fieldValue_ == null) {
                      FieldValue = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Types.Layout();
                    }
                    input.ReadMessage(FieldValue);
                    break;
                  }
                  case 26: {
                    nameDetectedLanguages_.AddEntriesFrom(ref input, _repeated_nameDetectedLanguages_codec);
                    break;
                  }
                  case 34: {
                    valueDetectedLanguages_.AddEntriesFrom(ref input, _repeated_valueDetectedLanguages_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Detected language for a structural component.
          /// </summary>
          public sealed partial class DetectedLanguage : pb::IMessage<DetectedLanguage>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<DetectedLanguage> _parser = new pb::MessageParser<DetectedLanguage>(() => new DetectedLanguage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<DetectedLanguage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.Page.Descriptor.NestedTypes[9]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DetectedLanguage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DetectedLanguage(DetectedLanguage other) : this() {
              languageCode_ = other.languageCode_;
              confidence_ = other.confidence_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DetectedLanguage Clone() {
              return new DetectedLanguage(this);
            }

            /// <summary>Field number for the "language_code" field.</summary>
            public const int LanguageCodeFieldNumber = 1;
            private string languageCode_ = "";
            /// <summary>
            /// The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            /// information, see
            /// http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string LanguageCode {
              get { return languageCode_; }
              set {
                languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "confidence" field.</summary>
            public const int ConfidenceFieldNumber = 2;
            private float confidence_;
            /// <summary>
            /// Confidence of detected language. Range [0, 1].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float Confidence {
              get { return confidence_; }
              set {
                confidence_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as DetectedLanguage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(DetectedLanguage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (LanguageCode != other.LanguageCode) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
              if (Confidence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Confidence);
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (LanguageCode.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(LanguageCode);
              }
              if (Confidence != 0F) {
                output.WriteRawTag(21);
                output.WriteFloat(Confidence);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (LanguageCode.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(LanguageCode);
              }
              if (Confidence != 0F) {
                output.WriteRawTag(21);
                output.WriteFloat(Confidence);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (LanguageCode.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
              }
              if (Confidence != 0F) {
                size += 1 + 4;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(DetectedLanguage other) {
              if (other == null) {
                return;
              }
              if (other.LanguageCode.Length != 0) {
                LanguageCode = other.LanguageCode;
              }
              if (other.Confidence != 0F) {
                Confidence = other.Confidence;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    LanguageCode = input.ReadString();
                    break;
                  }
                  case 21: {
                    Confidence = input.ReadFloat();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    LanguageCode = input.ReadString();
                    break;
                  }
                  case 21: {
                    Confidence = input.ReadFloat();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// A phrase in the text that is a known entity type, such as a person, an
      /// organization, or location.
      /// </summary>
      public sealed partial class Entity : pb::IMessage<Entity>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Entity> _parser = new pb::MessageParser<Entity>(() => new Entity());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Entity> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entity() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entity(Entity other) : this() {
          textAnchor_ = other.textAnchor_ != null ? other.textAnchor_.Clone() : null;
          type_ = other.type_;
          mentionText_ = other.mentionText_;
          mentionId_ = other.mentionId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entity Clone() {
          return new Entity(this);
        }

        /// <summary>Field number for the "text_anchor" field.</summary>
        public const int TextAnchorFieldNumber = 1;
        private global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor textAnchor_;
        /// <summary>
        /// Provenance of the entity.
        /// Text anchor indexing into the
        /// [Document.text][google.cloud.documentai.v1beta1.Document.text].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor TextAnchor {
          get { return textAnchor_; }
          set {
            textAnchor_ = value;
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 2;
        private string type_ = "";
        /// <summary>
        /// Entity type from a schema e.g. `Address`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "mention_text" field.</summary>
        public const int MentionTextFieldNumber = 3;
        private string mentionText_ = "";
        /// <summary>
        /// Text value in the document e.g. `1600 Amphitheatre Pkwy`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MentionText {
          get { return mentionText_; }
          set {
            mentionText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "mention_id" field.</summary>
        public const int MentionIdFieldNumber = 4;
        private string mentionId_ = "";
        /// <summary>
        /// Canonical mention name. This will be a unique value in the entity list
        /// for this document.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MentionId {
          get { return mentionId_; }
          set {
            mentionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Entity);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Entity other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(TextAnchor, other.TextAnchor)) return false;
          if (Type != other.Type) return false;
          if (MentionText != other.MentionText) return false;
          if (MentionId != other.MentionId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (textAnchor_ != null) hash ^= TextAnchor.GetHashCode();
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (MentionText.Length != 0) hash ^= MentionText.GetHashCode();
          if (MentionId.Length != 0) hash ^= MentionId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (textAnchor_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(TextAnchor);
          }
          if (Type.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Type);
          }
          if (MentionText.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(MentionText);
          }
          if (MentionId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(MentionId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (textAnchor_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(TextAnchor);
          }
          if (Type.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Type);
          }
          if (MentionText.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(MentionText);
          }
          if (MentionId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(MentionId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (textAnchor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextAnchor);
          }
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          if (MentionText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MentionText);
          }
          if (MentionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MentionId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Entity other) {
          if (other == null) {
            return;
          }
          if (other.textAnchor_ != null) {
            if (textAnchor_ == null) {
              TextAnchor = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor();
            }
            TextAnchor.MergeFrom(other.TextAnchor);
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          if (other.MentionText.Length != 0) {
            MentionText = other.MentionText;
          }
          if (other.MentionId.Length != 0) {
            MentionId = other.MentionId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (textAnchor_ == null) {
                  TextAnchor = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor();
                }
                input.ReadMessage(TextAnchor);
                break;
              }
              case 18: {
                Type = input.ReadString();
                break;
              }
              case 26: {
                MentionText = input.ReadString();
                break;
              }
              case 34: {
                MentionId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (textAnchor_ == null) {
                  TextAnchor = new global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor();
                }
                input.ReadMessage(TextAnchor);
                break;
              }
              case 18: {
                Type = input.ReadString();
                break;
              }
              case 26: {
                MentionText = input.ReadString();
                break;
              }
              case 34: {
                MentionId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Relationship between
      /// [Entities][google.cloud.documentai.v1beta1.Document.Entity].
      /// </summary>
      public sealed partial class EntityRelation : pb::IMessage<EntityRelation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EntityRelation> _parser = new pb::MessageParser<EntityRelation>(() => new EntityRelation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EntityRelation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EntityRelation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EntityRelation(EntityRelation other) : this() {
          subjectId_ = other.subjectId_;
          objectId_ = other.objectId_;
          relation_ = other.relation_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EntityRelation Clone() {
          return new EntityRelation(this);
        }

        /// <summary>Field number for the "subject_id" field.</summary>
        public const int SubjectIdFieldNumber = 1;
        private string subjectId_ = "";
        /// <summary>
        /// Subject entity mention_id.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SubjectId {
          get { return subjectId_; }
          set {
            subjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "object_id" field.</summary>
        public const int ObjectIdFieldNumber = 2;
        private string objectId_ = "";
        /// <summary>
        /// Object entity mention_id.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ObjectId {
          get { return objectId_; }
          set {
            objectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "relation" field.</summary>
        public const int RelationFieldNumber = 3;
        private string relation_ = "";
        /// <summary>
        /// Relationship description.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Relation {
          get { return relation_; }
          set {
            relation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EntityRelation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EntityRelation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SubjectId != other.SubjectId) return false;
          if (ObjectId != other.ObjectId) return false;
          if (Relation != other.Relation) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (SubjectId.Length != 0) hash ^= SubjectId.GetHashCode();
          if (ObjectId.Length != 0) hash ^= ObjectId.GetHashCode();
          if (Relation.Length != 0) hash ^= Relation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SubjectId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SubjectId);
          }
          if (ObjectId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ObjectId);
          }
          if (Relation.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Relation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SubjectId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SubjectId);
          }
          if (ObjectId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ObjectId);
          }
          if (Relation.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Relation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (SubjectId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectId);
          }
          if (ObjectId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectId);
          }
          if (Relation.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Relation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EntityRelation other) {
          if (other == null) {
            return;
          }
          if (other.SubjectId.Length != 0) {
            SubjectId = other.SubjectId;
          }
          if (other.ObjectId.Length != 0) {
            ObjectId = other.ObjectId;
          }
          if (other.Relation.Length != 0) {
            Relation = other.Relation;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                SubjectId = input.ReadString();
                break;
              }
              case 18: {
                ObjectId = input.ReadString();
                break;
              }
              case 26: {
                Relation = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                SubjectId = input.ReadString();
                break;
              }
              case 18: {
                ObjectId = input.ReadString();
                break;
              }
              case 26: {
                Relation = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Text reference indexing into the
      /// [Document.text][google.cloud.documentai.v1beta1.Document.text].
      /// </summary>
      public sealed partial class TextAnchor : pb::IMessage<TextAnchor>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TextAnchor> _parser = new pb::MessageParser<TextAnchor>(() => new TextAnchor());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TextAnchor> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TextAnchor() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TextAnchor(TextAnchor other) : this() {
          textSegments_ = other.textSegments_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TextAnchor Clone() {
          return new TextAnchor(this);
        }

        /// <summary>Field number for the "text_segments" field.</summary>
        public const int TextSegmentsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor.Types.TextSegment> _repeated_textSegments_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor.Types.TextSegment.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor.Types.TextSegment> textSegments_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor.Types.TextSegment>();
        /// <summary>
        /// The text segments from the
        /// [Document.text][google.cloud.documentai.v1beta1.Document.text].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor.Types.TextSegment> TextSegments {
          get { return textSegments_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TextAnchor);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TextAnchor other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!textSegments_.Equals(other.textSegments_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= textSegments_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          textSegments_.WriteTo(output, _repeated_textSegments_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          textSegments_.WriteTo(ref output, _repeated_textSegments_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += textSegments_.CalculateSize(_repeated_textSegments_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TextAnchor other) {
          if (other == null) {
            return;
          }
          textSegments_.Add(other.textSegments_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                textSegments_.AddEntriesFrom(input, _repeated_textSegments_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                textSegments_.AddEntriesFrom(ref input, _repeated_textSegments_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the TextAnchor message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// A text segment in the
          /// [Document.text][google.cloud.documentai.v1beta1.Document.text]. The
          /// indices may be out of bounds which indicate that the text extends into
          /// another document shard for large sharded documents. See
          /// [ShardInfo.text_offset][google.cloud.documentai.v1beta1.Document.ShardInfo.text_offset]
          /// </summary>
          public sealed partial class TextSegment : pb::IMessage<TextSegment>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<TextSegment> _parser = new pb::MessageParser<TextSegment>(() => new TextSegment());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<TextSegment> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1Beta1.Document.Types.TextAnchor.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TextSegment() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TextSegment(TextSegment other) : this() {
              startIndex_ = other.startIndex_;
              endIndex_ = other.endIndex_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TextSegment Clone() {
              return new TextSegment(this);
            }

            /// <summary>Field number for the "start_index" field.</summary>
            public const int StartIndexFieldNumber = 1;
            private long startIndex_;
            /// <summary>
            /// [TextSegment][google.cloud.documentai.v1beta1.Document.TextAnchor.TextSegment]
            /// start UTF-8 char index in the
            /// [Document.text][google.cloud.documentai.v1beta1.Document.text].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long StartIndex {
              get { return startIndex_; }
              set {
                startIndex_ = value;
              }
            }

            /// <summary>Field number for the "end_index" field.</summary>
            public const int EndIndexFieldNumber = 2;
            private long endIndex_;
            /// <summary>
            /// [TextSegment][google.cloud.documentai.v1beta1.Document.TextAnchor.TextSegment]
            /// half open end UTF-8 char index in the
            /// [Document.text][google.cloud.documentai.v1beta1.Document.text].
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long EndIndex {
              get { return endIndex_; }
              set {
                endIndex_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as TextSegment);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(TextSegment other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (StartIndex != other.StartIndex) return false;
              if (EndIndex != other.EndIndex) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (StartIndex != 0L) hash ^= StartIndex.GetHashCode();
              if (EndIndex != 0L) hash ^= EndIndex.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (StartIndex != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(StartIndex);
              }
              if (EndIndex != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(EndIndex);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (StartIndex != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(StartIndex);
              }
              if (EndIndex != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(EndIndex);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (StartIndex != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartIndex);
              }
              if (EndIndex != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndIndex);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(TextSegment other) {
              if (other == null) {
                return;
              }
              if (other.StartIndex != 0L) {
                StartIndex = other.StartIndex;
              }
              if (other.EndIndex != 0L) {
                EndIndex = other.EndIndex;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    StartIndex = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    EndIndex = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    StartIndex = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    EndIndex = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
