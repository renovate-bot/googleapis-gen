// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/iot/v1/device_manager.proto
// </auto-generated>
// Original file comments:
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Iot.V1 {
  /// <summary>
  /// Internet of Things (IoT) service. Securely connect and manage IoT devices.
  /// </summary>
  public static partial class DeviceManager
  {
    static readonly string __ServiceName = "google.cloud.iot.v1.DeviceManager";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.CreateDeviceRegistryRequest> __Marshaller_google_cloud_iot_v1_CreateDeviceRegistryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.CreateDeviceRegistryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.DeviceRegistry> __Marshaller_google_cloud_iot_v1_DeviceRegistry = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.DeviceRegistry.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.GetDeviceRegistryRequest> __Marshaller_google_cloud_iot_v1_GetDeviceRegistryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.GetDeviceRegistryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.UpdateDeviceRegistryRequest> __Marshaller_google_cloud_iot_v1_UpdateDeviceRegistryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.UpdateDeviceRegistryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.DeleteDeviceRegistryRequest> __Marshaller_google_cloud_iot_v1_DeleteDeviceRegistryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.DeleteDeviceRegistryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.ListDeviceRegistriesRequest> __Marshaller_google_cloud_iot_v1_ListDeviceRegistriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.ListDeviceRegistriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.ListDeviceRegistriesResponse> __Marshaller_google_cloud_iot_v1_ListDeviceRegistriesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.ListDeviceRegistriesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.CreateDeviceRequest> __Marshaller_google_cloud_iot_v1_CreateDeviceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.CreateDeviceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.Device> __Marshaller_google_cloud_iot_v1_Device = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.Device.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.GetDeviceRequest> __Marshaller_google_cloud_iot_v1_GetDeviceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.GetDeviceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.UpdateDeviceRequest> __Marshaller_google_cloud_iot_v1_UpdateDeviceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.UpdateDeviceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.DeleteDeviceRequest> __Marshaller_google_cloud_iot_v1_DeleteDeviceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.DeleteDeviceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.ListDevicesRequest> __Marshaller_google_cloud_iot_v1_ListDevicesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.ListDevicesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.ListDevicesResponse> __Marshaller_google_cloud_iot_v1_ListDevicesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.ListDevicesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.ModifyCloudToDeviceConfigRequest> __Marshaller_google_cloud_iot_v1_ModifyCloudToDeviceConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.ModifyCloudToDeviceConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.DeviceConfig> __Marshaller_google_cloud_iot_v1_DeviceConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.DeviceConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsRequest> __Marshaller_google_cloud_iot_v1_ListDeviceConfigVersionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsResponse> __Marshaller_google_cloud_iot_v1_ListDeviceConfigVersionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.ListDeviceStatesRequest> __Marshaller_google_cloud_iot_v1_ListDeviceStatesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.ListDeviceStatesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.ListDeviceStatesResponse> __Marshaller_google_cloud_iot_v1_ListDeviceStatesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.ListDeviceStatesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.SetIamPolicyRequest> __Marshaller_google_iam_v1_SetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.SetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.Policy> __Marshaller_google_iam_v1_Policy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.Policy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.GetIamPolicyRequest> __Marshaller_google_iam_v1_GetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.GetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest> __Marshaller_google_iam_v1_TestIamPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Marshaller_google_iam_v1_TestIamPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.SendCommandToDeviceRequest> __Marshaller_google_cloud_iot_v1_SendCommandToDeviceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.SendCommandToDeviceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.SendCommandToDeviceResponse> __Marshaller_google_cloud_iot_v1_SendCommandToDeviceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.SendCommandToDeviceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.BindDeviceToGatewayRequest> __Marshaller_google_cloud_iot_v1_BindDeviceToGatewayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.BindDeviceToGatewayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.BindDeviceToGatewayResponse> __Marshaller_google_cloud_iot_v1_BindDeviceToGatewayResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.BindDeviceToGatewayResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayRequest> __Marshaller_google_cloud_iot_v1_UnbindDeviceFromGatewayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayResponse> __Marshaller_google_cloud_iot_v1_UnbindDeviceFromGatewayResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.CreateDeviceRegistryRequest, global::Google.Cloud.Iot.V1.DeviceRegistry> __Method_CreateDeviceRegistry = new grpc::Method<global::Google.Cloud.Iot.V1.CreateDeviceRegistryRequest, global::Google.Cloud.Iot.V1.DeviceRegistry>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDeviceRegistry",
        __Marshaller_google_cloud_iot_v1_CreateDeviceRegistryRequest,
        __Marshaller_google_cloud_iot_v1_DeviceRegistry);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.GetDeviceRegistryRequest, global::Google.Cloud.Iot.V1.DeviceRegistry> __Method_GetDeviceRegistry = new grpc::Method<global::Google.Cloud.Iot.V1.GetDeviceRegistryRequest, global::Google.Cloud.Iot.V1.DeviceRegistry>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDeviceRegistry",
        __Marshaller_google_cloud_iot_v1_GetDeviceRegistryRequest,
        __Marshaller_google_cloud_iot_v1_DeviceRegistry);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.UpdateDeviceRegistryRequest, global::Google.Cloud.Iot.V1.DeviceRegistry> __Method_UpdateDeviceRegistry = new grpc::Method<global::Google.Cloud.Iot.V1.UpdateDeviceRegistryRequest, global::Google.Cloud.Iot.V1.DeviceRegistry>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDeviceRegistry",
        __Marshaller_google_cloud_iot_v1_UpdateDeviceRegistryRequest,
        __Marshaller_google_cloud_iot_v1_DeviceRegistry);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.DeleteDeviceRegistryRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteDeviceRegistry = new grpc::Method<global::Google.Cloud.Iot.V1.DeleteDeviceRegistryRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDeviceRegistry",
        __Marshaller_google_cloud_iot_v1_DeleteDeviceRegistryRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.ListDeviceRegistriesRequest, global::Google.Cloud.Iot.V1.ListDeviceRegistriesResponse> __Method_ListDeviceRegistries = new grpc::Method<global::Google.Cloud.Iot.V1.ListDeviceRegistriesRequest, global::Google.Cloud.Iot.V1.ListDeviceRegistriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDeviceRegistries",
        __Marshaller_google_cloud_iot_v1_ListDeviceRegistriesRequest,
        __Marshaller_google_cloud_iot_v1_ListDeviceRegistriesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.CreateDeviceRequest, global::Google.Cloud.Iot.V1.Device> __Method_CreateDevice = new grpc::Method<global::Google.Cloud.Iot.V1.CreateDeviceRequest, global::Google.Cloud.Iot.V1.Device>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDevice",
        __Marshaller_google_cloud_iot_v1_CreateDeviceRequest,
        __Marshaller_google_cloud_iot_v1_Device);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.GetDeviceRequest, global::Google.Cloud.Iot.V1.Device> __Method_GetDevice = new grpc::Method<global::Google.Cloud.Iot.V1.GetDeviceRequest, global::Google.Cloud.Iot.V1.Device>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDevice",
        __Marshaller_google_cloud_iot_v1_GetDeviceRequest,
        __Marshaller_google_cloud_iot_v1_Device);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.UpdateDeviceRequest, global::Google.Cloud.Iot.V1.Device> __Method_UpdateDevice = new grpc::Method<global::Google.Cloud.Iot.V1.UpdateDeviceRequest, global::Google.Cloud.Iot.V1.Device>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDevice",
        __Marshaller_google_cloud_iot_v1_UpdateDeviceRequest,
        __Marshaller_google_cloud_iot_v1_Device);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.DeleteDeviceRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteDevice = new grpc::Method<global::Google.Cloud.Iot.V1.DeleteDeviceRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDevice",
        __Marshaller_google_cloud_iot_v1_DeleteDeviceRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.ListDevicesRequest, global::Google.Cloud.Iot.V1.ListDevicesResponse> __Method_ListDevices = new grpc::Method<global::Google.Cloud.Iot.V1.ListDevicesRequest, global::Google.Cloud.Iot.V1.ListDevicesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDevices",
        __Marshaller_google_cloud_iot_v1_ListDevicesRequest,
        __Marshaller_google_cloud_iot_v1_ListDevicesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.ModifyCloudToDeviceConfigRequest, global::Google.Cloud.Iot.V1.DeviceConfig> __Method_ModifyCloudToDeviceConfig = new grpc::Method<global::Google.Cloud.Iot.V1.ModifyCloudToDeviceConfigRequest, global::Google.Cloud.Iot.V1.DeviceConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ModifyCloudToDeviceConfig",
        __Marshaller_google_cloud_iot_v1_ModifyCloudToDeviceConfigRequest,
        __Marshaller_google_cloud_iot_v1_DeviceConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsRequest, global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsResponse> __Method_ListDeviceConfigVersions = new grpc::Method<global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsRequest, global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDeviceConfigVersions",
        __Marshaller_google_cloud_iot_v1_ListDeviceConfigVersionsRequest,
        __Marshaller_google_cloud_iot_v1_ListDeviceConfigVersionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.ListDeviceStatesRequest, global::Google.Cloud.Iot.V1.ListDeviceStatesResponse> __Method_ListDeviceStates = new grpc::Method<global::Google.Cloud.Iot.V1.ListDeviceStatesRequest, global::Google.Cloud.Iot.V1.ListDeviceStatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDeviceStates",
        __Marshaller_google_cloud_iot_v1_ListDeviceStatesRequest,
        __Marshaller_google_cloud_iot_v1_ListDeviceStatesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_SetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetIamPolicy",
        __Marshaller_google_iam_v1_SetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_GetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIamPolicy",
        __Marshaller_google_iam_v1_GetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Method_TestIamPermissions = new grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TestIamPermissions",
        __Marshaller_google_iam_v1_TestIamPermissionsRequest,
        __Marshaller_google_iam_v1_TestIamPermissionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.SendCommandToDeviceRequest, global::Google.Cloud.Iot.V1.SendCommandToDeviceResponse> __Method_SendCommandToDevice = new grpc::Method<global::Google.Cloud.Iot.V1.SendCommandToDeviceRequest, global::Google.Cloud.Iot.V1.SendCommandToDeviceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendCommandToDevice",
        __Marshaller_google_cloud_iot_v1_SendCommandToDeviceRequest,
        __Marshaller_google_cloud_iot_v1_SendCommandToDeviceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.BindDeviceToGatewayRequest, global::Google.Cloud.Iot.V1.BindDeviceToGatewayResponse> __Method_BindDeviceToGateway = new grpc::Method<global::Google.Cloud.Iot.V1.BindDeviceToGatewayRequest, global::Google.Cloud.Iot.V1.BindDeviceToGatewayResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BindDeviceToGateway",
        __Marshaller_google_cloud_iot_v1_BindDeviceToGatewayRequest,
        __Marshaller_google_cloud_iot_v1_BindDeviceToGatewayResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayRequest, global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayResponse> __Method_UnbindDeviceFromGateway = new grpc::Method<global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayRequest, global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnbindDeviceFromGateway",
        __Marshaller_google_cloud_iot_v1_UnbindDeviceFromGatewayRequest,
        __Marshaller_google_cloud_iot_v1_UnbindDeviceFromGatewayResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DeviceManager</summary>
    [grpc::BindServiceMethod(typeof(DeviceManager), "BindService")]
    public abstract partial class DeviceManagerBase
    {
      /// <summary>
      /// Creates a device registry that contains devices.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.DeviceRegistry> CreateDeviceRegistry(global::Google.Cloud.Iot.V1.CreateDeviceRegistryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a device registry configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.DeviceRegistry> GetDeviceRegistry(global::Google.Cloud.Iot.V1.GetDeviceRegistryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a device registry configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.DeviceRegistry> UpdateDeviceRegistry(global::Google.Cloud.Iot.V1.UpdateDeviceRegistryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a device registry configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeviceRegistry(global::Google.Cloud.Iot.V1.DeleteDeviceRegistryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists device registries.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.ListDeviceRegistriesResponse> ListDeviceRegistries(global::Google.Cloud.Iot.V1.ListDeviceRegistriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a device in a device registry.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.Device> CreateDevice(global::Google.Cloud.Iot.V1.CreateDeviceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details about a device.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.Device> GetDevice(global::Google.Cloud.Iot.V1.GetDeviceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a device.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.Device> UpdateDevice(global::Google.Cloud.Iot.V1.UpdateDeviceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a device.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDevice(global::Google.Cloud.Iot.V1.DeleteDeviceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List devices in a device registry.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.ListDevicesResponse> ListDevices(global::Google.Cloud.Iot.V1.ListDevicesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Modifies the configuration for the device, which is eventually sent from
      /// the Cloud IoT Core servers. Returns the modified configuration version and
      /// its metadata.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.DeviceConfig> ModifyCloudToDeviceConfig(global::Google.Cloud.Iot.V1.ModifyCloudToDeviceConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the last few versions of the device configuration in descending
      /// order (i.e.: newest first).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsResponse> ListDeviceConfigVersions(global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the last few versions of the device state in descending order (i.e.:
      /// newest first).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.ListDeviceStatesResponse> ListDeviceStates(global::Google.Cloud.Iot.V1.ListDeviceStatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sets the access control policy on the specified resource. Replaces any
      /// existing policy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the access control policy for a resource.
      /// Returns an empty policy if the resource exists and does not have a policy
      /// set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns permissions that a caller has on the specified resource.
      /// If the resource does not exist, this will return an empty set of
      /// permissions, not a NOT_FOUND error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sends a command to the specified device. In order for a device to be able
      /// to receive commands, it must:
      /// 1) be connected to Cloud IoT Core using the MQTT protocol, and
      /// 2) be subscribed to the group of MQTT topics specified by
      ///    /devices/{device-id}/commands/#. This subscription will receive commands
      ///    at the top-level topic /devices/{device-id}/commands as well as commands
      ///    for subfolders, like /devices/{device-id}/commands/subfolder.
      ///    Note that subscribing to specific subfolders is not supported.
      /// If the command could not be delivered to the device, this method will
      /// return an error; in particular, if the device is not subscribed, this
      /// method will return FAILED_PRECONDITION. Otherwise, this method will
      /// return OK. If the subscription is QoS 1, at least once delivery will be
      /// guaranteed; for QoS 0, no acknowledgment will be expected from the device.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.SendCommandToDeviceResponse> SendCommandToDevice(global::Google.Cloud.Iot.V1.SendCommandToDeviceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Associates the device with the gateway.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.BindDeviceToGatewayResponse> BindDeviceToGateway(global::Google.Cloud.Iot.V1.BindDeviceToGatewayRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the association between the device and the gateway.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayResponse> UnbindDeviceFromGateway(global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DeviceManager</summary>
    public partial class DeviceManagerClient : grpc::ClientBase<DeviceManagerClient>
    {
      /// <summary>Creates a new client for DeviceManager</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DeviceManagerClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DeviceManager that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DeviceManagerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DeviceManagerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DeviceManagerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a device registry that contains devices.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.DeviceRegistry CreateDeviceRegistry(global::Google.Cloud.Iot.V1.CreateDeviceRegistryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDeviceRegistry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a device registry that contains devices.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.DeviceRegistry CreateDeviceRegistry(global::Google.Cloud.Iot.V1.CreateDeviceRegistryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDeviceRegistry, null, options, request);
      }
      /// <summary>
      /// Creates a device registry that contains devices.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.DeviceRegistry> CreateDeviceRegistryAsync(global::Google.Cloud.Iot.V1.CreateDeviceRegistryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDeviceRegistryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a device registry that contains devices.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.DeviceRegistry> CreateDeviceRegistryAsync(global::Google.Cloud.Iot.V1.CreateDeviceRegistryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDeviceRegistry, null, options, request);
      }
      /// <summary>
      /// Gets a device registry configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.DeviceRegistry GetDeviceRegistry(global::Google.Cloud.Iot.V1.GetDeviceRegistryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeviceRegistry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a device registry configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.DeviceRegistry GetDeviceRegistry(global::Google.Cloud.Iot.V1.GetDeviceRegistryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDeviceRegistry, null, options, request);
      }
      /// <summary>
      /// Gets a device registry configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.DeviceRegistry> GetDeviceRegistryAsync(global::Google.Cloud.Iot.V1.GetDeviceRegistryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeviceRegistryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a device registry configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.DeviceRegistry> GetDeviceRegistryAsync(global::Google.Cloud.Iot.V1.GetDeviceRegistryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDeviceRegistry, null, options, request);
      }
      /// <summary>
      /// Updates a device registry configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.DeviceRegistry UpdateDeviceRegistry(global::Google.Cloud.Iot.V1.UpdateDeviceRegistryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDeviceRegistry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a device registry configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.DeviceRegistry UpdateDeviceRegistry(global::Google.Cloud.Iot.V1.UpdateDeviceRegistryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDeviceRegistry, null, options, request);
      }
      /// <summary>
      /// Updates a device registry configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.DeviceRegistry> UpdateDeviceRegistryAsync(global::Google.Cloud.Iot.V1.UpdateDeviceRegistryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDeviceRegistryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a device registry configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.DeviceRegistry> UpdateDeviceRegistryAsync(global::Google.Cloud.Iot.V1.UpdateDeviceRegistryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDeviceRegistry, null, options, request);
      }
      /// <summary>
      /// Deletes a device registry configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDeviceRegistry(global::Google.Cloud.Iot.V1.DeleteDeviceRegistryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDeviceRegistry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a device registry configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDeviceRegistry(global::Google.Cloud.Iot.V1.DeleteDeviceRegistryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDeviceRegistry, null, options, request);
      }
      /// <summary>
      /// Deletes a device registry configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeviceRegistryAsync(global::Google.Cloud.Iot.V1.DeleteDeviceRegistryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDeviceRegistryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a device registry configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeviceRegistryAsync(global::Google.Cloud.Iot.V1.DeleteDeviceRegistryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDeviceRegistry, null, options, request);
      }
      /// <summary>
      /// Lists device registries.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.ListDeviceRegistriesResponse ListDeviceRegistries(global::Google.Cloud.Iot.V1.ListDeviceRegistriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeviceRegistries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists device registries.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.ListDeviceRegistriesResponse ListDeviceRegistries(global::Google.Cloud.Iot.V1.ListDeviceRegistriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDeviceRegistries, null, options, request);
      }
      /// <summary>
      /// Lists device registries.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.ListDeviceRegistriesResponse> ListDeviceRegistriesAsync(global::Google.Cloud.Iot.V1.ListDeviceRegistriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeviceRegistriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists device registries.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.ListDeviceRegistriesResponse> ListDeviceRegistriesAsync(global::Google.Cloud.Iot.V1.ListDeviceRegistriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDeviceRegistries, null, options, request);
      }
      /// <summary>
      /// Creates a device in a device registry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.Device CreateDevice(global::Google.Cloud.Iot.V1.CreateDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDevice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a device in a device registry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.Device CreateDevice(global::Google.Cloud.Iot.V1.CreateDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDevice, null, options, request);
      }
      /// <summary>
      /// Creates a device in a device registry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.Device> CreateDeviceAsync(global::Google.Cloud.Iot.V1.CreateDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDeviceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a device in a device registry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.Device> CreateDeviceAsync(global::Google.Cloud.Iot.V1.CreateDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDevice, null, options, request);
      }
      /// <summary>
      /// Gets details about a device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.Device GetDevice(global::Google.Cloud.Iot.V1.GetDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDevice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details about a device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.Device GetDevice(global::Google.Cloud.Iot.V1.GetDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDevice, null, options, request);
      }
      /// <summary>
      /// Gets details about a device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.Device> GetDeviceAsync(global::Google.Cloud.Iot.V1.GetDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeviceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details about a device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.Device> GetDeviceAsync(global::Google.Cloud.Iot.V1.GetDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDevice, null, options, request);
      }
      /// <summary>
      /// Updates a device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.Device UpdateDevice(global::Google.Cloud.Iot.V1.UpdateDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDevice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.Device UpdateDevice(global::Google.Cloud.Iot.V1.UpdateDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDevice, null, options, request);
      }
      /// <summary>
      /// Updates a device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.Device> UpdateDeviceAsync(global::Google.Cloud.Iot.V1.UpdateDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDeviceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.Device> UpdateDeviceAsync(global::Google.Cloud.Iot.V1.UpdateDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDevice, null, options, request);
      }
      /// <summary>
      /// Deletes a device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDevice(global::Google.Cloud.Iot.V1.DeleteDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDevice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDevice(global::Google.Cloud.Iot.V1.DeleteDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDevice, null, options, request);
      }
      /// <summary>
      /// Deletes a device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeviceAsync(global::Google.Cloud.Iot.V1.DeleteDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDeviceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeviceAsync(global::Google.Cloud.Iot.V1.DeleteDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDevice, null, options, request);
      }
      /// <summary>
      /// List devices in a device registry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.ListDevicesResponse ListDevices(global::Google.Cloud.Iot.V1.ListDevicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDevices(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List devices in a device registry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.ListDevicesResponse ListDevices(global::Google.Cloud.Iot.V1.ListDevicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDevices, null, options, request);
      }
      /// <summary>
      /// List devices in a device registry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.ListDevicesResponse> ListDevicesAsync(global::Google.Cloud.Iot.V1.ListDevicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDevicesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List devices in a device registry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.ListDevicesResponse> ListDevicesAsync(global::Google.Cloud.Iot.V1.ListDevicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDevices, null, options, request);
      }
      /// <summary>
      /// Modifies the configuration for the device, which is eventually sent from
      /// the Cloud IoT Core servers. Returns the modified configuration version and
      /// its metadata.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.DeviceConfig ModifyCloudToDeviceConfig(global::Google.Cloud.Iot.V1.ModifyCloudToDeviceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyCloudToDeviceConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Modifies the configuration for the device, which is eventually sent from
      /// the Cloud IoT Core servers. Returns the modified configuration version and
      /// its metadata.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.DeviceConfig ModifyCloudToDeviceConfig(global::Google.Cloud.Iot.V1.ModifyCloudToDeviceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ModifyCloudToDeviceConfig, null, options, request);
      }
      /// <summary>
      /// Modifies the configuration for the device, which is eventually sent from
      /// the Cloud IoT Core servers. Returns the modified configuration version and
      /// its metadata.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.DeviceConfig> ModifyCloudToDeviceConfigAsync(global::Google.Cloud.Iot.V1.ModifyCloudToDeviceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyCloudToDeviceConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Modifies the configuration for the device, which is eventually sent from
      /// the Cloud IoT Core servers. Returns the modified configuration version and
      /// its metadata.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.DeviceConfig> ModifyCloudToDeviceConfigAsync(global::Google.Cloud.Iot.V1.ModifyCloudToDeviceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ModifyCloudToDeviceConfig, null, options, request);
      }
      /// <summary>
      /// Lists the last few versions of the device configuration in descending
      /// order (i.e.: newest first).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsResponse ListDeviceConfigVersions(global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeviceConfigVersions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the last few versions of the device configuration in descending
      /// order (i.e.: newest first).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsResponse ListDeviceConfigVersions(global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDeviceConfigVersions, null, options, request);
      }
      /// <summary>
      /// Lists the last few versions of the device configuration in descending
      /// order (i.e.: newest first).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsResponse> ListDeviceConfigVersionsAsync(global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeviceConfigVersionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the last few versions of the device configuration in descending
      /// order (i.e.: newest first).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsResponse> ListDeviceConfigVersionsAsync(global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDeviceConfigVersions, null, options, request);
      }
      /// <summary>
      /// Lists the last few versions of the device state in descending order (i.e.:
      /// newest first).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.ListDeviceStatesResponse ListDeviceStates(global::Google.Cloud.Iot.V1.ListDeviceStatesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeviceStates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the last few versions of the device state in descending order (i.e.:
      /// newest first).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.ListDeviceStatesResponse ListDeviceStates(global::Google.Cloud.Iot.V1.ListDeviceStatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDeviceStates, null, options, request);
      }
      /// <summary>
      /// Lists the last few versions of the device state in descending order (i.e.:
      /// newest first).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.ListDeviceStatesResponse> ListDeviceStatesAsync(global::Google.Cloud.Iot.V1.ListDeviceStatesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeviceStatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the last few versions of the device state in descending order (i.e.:
      /// newest first).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.ListDeviceStatesResponse> ListDeviceStatesAsync(global::Google.Cloud.Iot.V1.ListDeviceStatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDeviceStates, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy on the specified resource. Replaces any
      /// existing policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy on the specified resource. Replaces any
      /// existing policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy on the specified resource. Replaces any
      /// existing policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy on the specified resource. Replaces any
      /// existing policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy for a resource.
      /// Returns an empty policy if the resource exists and does not have a policy
      /// set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy for a resource.
      /// Returns an empty policy if the resource exists and does not have a policy
      /// set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy for a resource.
      /// Returns an empty policy if the resource exists and does not have a policy
      /// set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy for a resource.
      /// Returns an empty policy if the resource exists and does not have a policy
      /// set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Returns permissions that a caller has on the specified resource.
      /// If the resource does not exist, this will return an empty set of
      /// permissions, not a NOT_FOUND error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns permissions that a caller has on the specified resource.
      /// If the resource does not exist, this will return an empty set of
      /// permissions, not a NOT_FOUND error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Returns permissions that a caller has on the specified resource.
      /// If the resource does not exist, this will return an empty set of
      /// permissions, not a NOT_FOUND error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns permissions that a caller has on the specified resource.
      /// If the resource does not exist, this will return an empty set of
      /// permissions, not a NOT_FOUND error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Sends a command to the specified device. In order for a device to be able
      /// to receive commands, it must:
      /// 1) be connected to Cloud IoT Core using the MQTT protocol, and
      /// 2) be subscribed to the group of MQTT topics specified by
      ///    /devices/{device-id}/commands/#. This subscription will receive commands
      ///    at the top-level topic /devices/{device-id}/commands as well as commands
      ///    for subfolders, like /devices/{device-id}/commands/subfolder.
      ///    Note that subscribing to specific subfolders is not supported.
      /// If the command could not be delivered to the device, this method will
      /// return an error; in particular, if the device is not subscribed, this
      /// method will return FAILED_PRECONDITION. Otherwise, this method will
      /// return OK. If the subscription is QoS 1, at least once delivery will be
      /// guaranteed; for QoS 0, no acknowledgment will be expected from the device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.SendCommandToDeviceResponse SendCommandToDevice(global::Google.Cloud.Iot.V1.SendCommandToDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendCommandToDevice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a command to the specified device. In order for a device to be able
      /// to receive commands, it must:
      /// 1) be connected to Cloud IoT Core using the MQTT protocol, and
      /// 2) be subscribed to the group of MQTT topics specified by
      ///    /devices/{device-id}/commands/#. This subscription will receive commands
      ///    at the top-level topic /devices/{device-id}/commands as well as commands
      ///    for subfolders, like /devices/{device-id}/commands/subfolder.
      ///    Note that subscribing to specific subfolders is not supported.
      /// If the command could not be delivered to the device, this method will
      /// return an error; in particular, if the device is not subscribed, this
      /// method will return FAILED_PRECONDITION. Otherwise, this method will
      /// return OK. If the subscription is QoS 1, at least once delivery will be
      /// guaranteed; for QoS 0, no acknowledgment will be expected from the device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.SendCommandToDeviceResponse SendCommandToDevice(global::Google.Cloud.Iot.V1.SendCommandToDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendCommandToDevice, null, options, request);
      }
      /// <summary>
      /// Sends a command to the specified device. In order for a device to be able
      /// to receive commands, it must:
      /// 1) be connected to Cloud IoT Core using the MQTT protocol, and
      /// 2) be subscribed to the group of MQTT topics specified by
      ///    /devices/{device-id}/commands/#. This subscription will receive commands
      ///    at the top-level topic /devices/{device-id}/commands as well as commands
      ///    for subfolders, like /devices/{device-id}/commands/subfolder.
      ///    Note that subscribing to specific subfolders is not supported.
      /// If the command could not be delivered to the device, this method will
      /// return an error; in particular, if the device is not subscribed, this
      /// method will return FAILED_PRECONDITION. Otherwise, this method will
      /// return OK. If the subscription is QoS 1, at least once delivery will be
      /// guaranteed; for QoS 0, no acknowledgment will be expected from the device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.SendCommandToDeviceResponse> SendCommandToDeviceAsync(global::Google.Cloud.Iot.V1.SendCommandToDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendCommandToDeviceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a command to the specified device. In order for a device to be able
      /// to receive commands, it must:
      /// 1) be connected to Cloud IoT Core using the MQTT protocol, and
      /// 2) be subscribed to the group of MQTT topics specified by
      ///    /devices/{device-id}/commands/#. This subscription will receive commands
      ///    at the top-level topic /devices/{device-id}/commands as well as commands
      ///    for subfolders, like /devices/{device-id}/commands/subfolder.
      ///    Note that subscribing to specific subfolders is not supported.
      /// If the command could not be delivered to the device, this method will
      /// return an error; in particular, if the device is not subscribed, this
      /// method will return FAILED_PRECONDITION. Otherwise, this method will
      /// return OK. If the subscription is QoS 1, at least once delivery will be
      /// guaranteed; for QoS 0, no acknowledgment will be expected from the device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.SendCommandToDeviceResponse> SendCommandToDeviceAsync(global::Google.Cloud.Iot.V1.SendCommandToDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendCommandToDevice, null, options, request);
      }
      /// <summary>
      /// Associates the device with the gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.BindDeviceToGatewayResponse BindDeviceToGateway(global::Google.Cloud.Iot.V1.BindDeviceToGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BindDeviceToGateway(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Associates the device with the gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.BindDeviceToGatewayResponse BindDeviceToGateway(global::Google.Cloud.Iot.V1.BindDeviceToGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BindDeviceToGateway, null, options, request);
      }
      /// <summary>
      /// Associates the device with the gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.BindDeviceToGatewayResponse> BindDeviceToGatewayAsync(global::Google.Cloud.Iot.V1.BindDeviceToGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BindDeviceToGatewayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Associates the device with the gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.BindDeviceToGatewayResponse> BindDeviceToGatewayAsync(global::Google.Cloud.Iot.V1.BindDeviceToGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BindDeviceToGateway, null, options, request);
      }
      /// <summary>
      /// Deletes the association between the device and the gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayResponse UnbindDeviceFromGateway(global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnbindDeviceFromGateway(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the association between the device and the gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayResponse UnbindDeviceFromGateway(global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnbindDeviceFromGateway, null, options, request);
      }
      /// <summary>
      /// Deletes the association between the device and the gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayResponse> UnbindDeviceFromGatewayAsync(global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnbindDeviceFromGatewayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the association between the device and the gateway.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayResponse> UnbindDeviceFromGatewayAsync(global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnbindDeviceFromGateway, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DeviceManagerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DeviceManagerClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DeviceManagerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateDeviceRegistry, serviceImpl.CreateDeviceRegistry)
          .AddMethod(__Method_GetDeviceRegistry, serviceImpl.GetDeviceRegistry)
          .AddMethod(__Method_UpdateDeviceRegistry, serviceImpl.UpdateDeviceRegistry)
          .AddMethod(__Method_DeleteDeviceRegistry, serviceImpl.DeleteDeviceRegistry)
          .AddMethod(__Method_ListDeviceRegistries, serviceImpl.ListDeviceRegistries)
          .AddMethod(__Method_CreateDevice, serviceImpl.CreateDevice)
          .AddMethod(__Method_GetDevice, serviceImpl.GetDevice)
          .AddMethod(__Method_UpdateDevice, serviceImpl.UpdateDevice)
          .AddMethod(__Method_DeleteDevice, serviceImpl.DeleteDevice)
          .AddMethod(__Method_ListDevices, serviceImpl.ListDevices)
          .AddMethod(__Method_ModifyCloudToDeviceConfig, serviceImpl.ModifyCloudToDeviceConfig)
          .AddMethod(__Method_ListDeviceConfigVersions, serviceImpl.ListDeviceConfigVersions)
          .AddMethod(__Method_ListDeviceStates, serviceImpl.ListDeviceStates)
          .AddMethod(__Method_SetIamPolicy, serviceImpl.SetIamPolicy)
          .AddMethod(__Method_GetIamPolicy, serviceImpl.GetIamPolicy)
          .AddMethod(__Method_TestIamPermissions, serviceImpl.TestIamPermissions)
          .AddMethod(__Method_SendCommandToDevice, serviceImpl.SendCommandToDevice)
          .AddMethod(__Method_BindDeviceToGateway, serviceImpl.BindDeviceToGateway)
          .AddMethod(__Method_UnbindDeviceFromGateway, serviceImpl.UnbindDeviceFromGateway).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DeviceManagerBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateDeviceRegistry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.CreateDeviceRegistryRequest, global::Google.Cloud.Iot.V1.DeviceRegistry>(serviceImpl.CreateDeviceRegistry));
      serviceBinder.AddMethod(__Method_GetDeviceRegistry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.GetDeviceRegistryRequest, global::Google.Cloud.Iot.V1.DeviceRegistry>(serviceImpl.GetDeviceRegistry));
      serviceBinder.AddMethod(__Method_UpdateDeviceRegistry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.UpdateDeviceRegistryRequest, global::Google.Cloud.Iot.V1.DeviceRegistry>(serviceImpl.UpdateDeviceRegistry));
      serviceBinder.AddMethod(__Method_DeleteDeviceRegistry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.DeleteDeviceRegistryRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteDeviceRegistry));
      serviceBinder.AddMethod(__Method_ListDeviceRegistries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.ListDeviceRegistriesRequest, global::Google.Cloud.Iot.V1.ListDeviceRegistriesResponse>(serviceImpl.ListDeviceRegistries));
      serviceBinder.AddMethod(__Method_CreateDevice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.CreateDeviceRequest, global::Google.Cloud.Iot.V1.Device>(serviceImpl.CreateDevice));
      serviceBinder.AddMethod(__Method_GetDevice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.GetDeviceRequest, global::Google.Cloud.Iot.V1.Device>(serviceImpl.GetDevice));
      serviceBinder.AddMethod(__Method_UpdateDevice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.UpdateDeviceRequest, global::Google.Cloud.Iot.V1.Device>(serviceImpl.UpdateDevice));
      serviceBinder.AddMethod(__Method_DeleteDevice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.DeleteDeviceRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteDevice));
      serviceBinder.AddMethod(__Method_ListDevices, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.ListDevicesRequest, global::Google.Cloud.Iot.V1.ListDevicesResponse>(serviceImpl.ListDevices));
      serviceBinder.AddMethod(__Method_ModifyCloudToDeviceConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.ModifyCloudToDeviceConfigRequest, global::Google.Cloud.Iot.V1.DeviceConfig>(serviceImpl.ModifyCloudToDeviceConfig));
      serviceBinder.AddMethod(__Method_ListDeviceConfigVersions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsRequest, global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsResponse>(serviceImpl.ListDeviceConfigVersions));
      serviceBinder.AddMethod(__Method_ListDeviceStates, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.ListDeviceStatesRequest, global::Google.Cloud.Iot.V1.ListDeviceStatesResponse>(serviceImpl.ListDeviceStates));
      serviceBinder.AddMethod(__Method_SetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.SetIamPolicy));
      serviceBinder.AddMethod(__Method_GetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.GetIamPolicy));
      serviceBinder.AddMethod(__Method_TestIamPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(serviceImpl.TestIamPermissions));
      serviceBinder.AddMethod(__Method_SendCommandToDevice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.SendCommandToDeviceRequest, global::Google.Cloud.Iot.V1.SendCommandToDeviceResponse>(serviceImpl.SendCommandToDevice));
      serviceBinder.AddMethod(__Method_BindDeviceToGateway, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.BindDeviceToGatewayRequest, global::Google.Cloud.Iot.V1.BindDeviceToGatewayResponse>(serviceImpl.BindDeviceToGateway));
      serviceBinder.AddMethod(__Method_UnbindDeviceFromGateway, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayRequest, global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayResponse>(serviceImpl.UnbindDeviceFromGateway));
    }

  }
}
#endregion
