// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/iot/v1/resources.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Iot.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/iot/v1/resources.proto</summary>
  public static partial class ResourcesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/iot/v1/resources.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResourcesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNnb29nbGUvY2xvdWQvaW90L3YxL3Jlc291cmNlcy5wcm90bxITZ29vZ2xl",
            "LmNsb3VkLmlvdC52MRoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxofZ29v",
            "Z2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoXZ29vZ2xlL3JwYy9zdGF0",
            "dXMucHJvdG8isAcKBkRldmljZRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJ",
            "Eg4KBm51bV9pZBgDIAEoBBI6CgtjcmVkZW50aWFscxgMIAMoCzIlLmdvb2ds",
            "ZS5jbG91ZC5pb3QudjEuRGV2aWNlQ3JlZGVudGlhbBI3ChNsYXN0X2hlYXJ0",
            "YmVhdF90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIz",
            "Cg9sYXN0X2V2ZW50X3RpbWUYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wEjMKD2xhc3Rfc3RhdGVfdGltZRgUIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXASOAoUbGFzdF9jb25maWdfYWNrX3RpbWUYDiABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjkKFWxhc3RfY29uZmlnX3Nl",
            "bmRfdGltZRgSIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDwoH",
            "YmxvY2tlZBgTIAEoCBIzCg9sYXN0X2Vycm9yX3RpbWUYCiABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wEi0KEWxhc3RfZXJyb3Jfc3RhdHVzGAsg",
            "ASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMSMQoGY29uZmlnGA0gASgLMiEuZ29v",
            "Z2xlLmNsb3VkLmlvdC52MS5EZXZpY2VDb25maWcSLwoFc3RhdGUYECABKAsy",
            "IC5nb29nbGUuY2xvdWQuaW90LnYxLkRldmljZVN0YXRlEjAKCWxvZ19sZXZl",
            "bBgVIAEoDjIdLmdvb2dsZS5jbG91ZC5pb3QudjEuTG9nTGV2ZWwSOwoIbWV0",
            "YWRhdGEYESADKAsyKS5nb29nbGUuY2xvdWQuaW90LnYxLkRldmljZS5NZXRh",
            "ZGF0YUVudHJ5EjoKDmdhdGV3YXlfY29uZmlnGBggASgLMiIuZ29vZ2xlLmNs",
            "b3VkLmlvdC52MS5HYXRld2F5Q29uZmlnGi8KDU1ldGFkYXRhRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ATpz6kFwCh5jbG91ZGlvdC5n",
            "b29nbGVhcGlzLmNvbS9EZXZpY2USTnByb2plY3RzL3twcm9qZWN0fS9sb2Nh",
            "dGlvbnMve2xvY2F0aW9ufS9yZWdpc3RyaWVzL3tyZWdpc3RyeX0vZGV2aWNl",
            "cy97ZGV2aWNlfSLuAQoNR2F0ZXdheUNvbmZpZxI2CgxnYXRld2F5X3R5cGUY",
            "ASABKA4yIC5nb29nbGUuY2xvdWQuaW90LnYxLkdhdGV3YXlUeXBlEkMKE2dh",
            "dGV3YXlfYXV0aF9tZXRob2QYAiABKA4yJi5nb29nbGUuY2xvdWQuaW90LnYx",
            "LkdhdGV3YXlBdXRoTWV0aG9kEiAKGGxhc3RfYWNjZXNzZWRfZ2F0ZXdheV9p",
            "ZBgDIAEoCRI+ChpsYXN0X2FjY2Vzc2VkX2dhdGV3YXlfdGltZRgEIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAijwQKDkRldmljZVJlZ2lzdHJ5",
            "EgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSUAoaZXZlbnRfbm90aWZpY2F0",
            "aW9uX2NvbmZpZ3MYCiADKAsyLC5nb29nbGUuY2xvdWQuaW90LnYxLkV2ZW50",
            "Tm90aWZpY2F0aW9uQ29uZmlnEk8KGXN0YXRlX25vdGlmaWNhdGlvbl9jb25m",
            "aWcYByABKAsyLC5nb29nbGUuY2xvdWQuaW90LnYxLlN0YXRlTm90aWZpY2F0",
            "aW9uQ29uZmlnEjQKC21xdHRfY29uZmlnGAQgASgLMh8uZ29vZ2xlLmNsb3Vk",
            "LmlvdC52MS5NcXR0Q29uZmlnEjQKC2h0dHBfY29uZmlnGAkgASgLMh8uZ29v",
            "Z2xlLmNsb3VkLmlvdC52MS5IdHRwQ29uZmlnEjAKCWxvZ19sZXZlbBgLIAEo",
            "DjIdLmdvb2dsZS5jbG91ZC5pb3QudjEuTG9nTGV2ZWwSPAoLY3JlZGVudGlh",
            "bHMYCCADKAsyJy5nb29nbGUuY2xvdWQuaW90LnYxLlJlZ2lzdHJ5Q3JlZGVu",
            "dGlhbDpk6kFhCiBjbG91ZGlvdC5nb29nbGVhcGlzLmNvbS9SZWdpc3RyeRI9",
            "cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L3JlZ2lz",
            "dHJpZXMve3JlZ2lzdHJ5fSJICgpNcXR0Q29uZmlnEjoKEm1xdHRfZW5hYmxl",
            "ZF9zdGF0ZRgBIAEoDjIeLmdvb2dsZS5jbG91ZC5pb3QudjEuTXF0dFN0YXRl",
            "IkgKCkh0dHBDb25maWcSOgoSaHR0cF9lbmFibGVkX3N0YXRlGAEgASgOMh4u",
            "Z29vZ2xlLmNsb3VkLmlvdC52MS5IdHRwU3RhdGUiTwoXRXZlbnROb3RpZmlj",
            "YXRpb25Db25maWcSGQoRc3ViZm9sZGVyX21hdGNoZXMYAiABKAkSGQoRcHVi",
            "c3ViX3RvcGljX25hbWUYASABKAkiNAoXU3RhdGVOb3RpZmljYXRpb25Db25m",
            "aWcSGQoRcHVic3ViX3RvcGljX25hbWUYASABKAkibwoSUmVnaXN0cnlDcmVk",
            "ZW50aWFsEksKFnB1YmxpY19rZXlfY2VydGlmaWNhdGUYASABKAsyKS5nb29n",
            "bGUuY2xvdWQuaW90LnYxLlB1YmxpY0tleUNlcnRpZmljYXRlSABCDAoKY3Jl",
            "ZGVudGlhbCLQAQoWWDUwOUNlcnRpZmljYXRlRGV0YWlscxIOCgZpc3N1ZXIY",
            "ASABKAkSDwoHc3ViamVjdBgCIAEoCRIuCgpzdGFydF90aW1lGAMgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIvCgtleHBpcnlfdGltZRgEIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASGwoTc2lnbmF0dXJlX2Fs",
            "Z29yaXRobRgFIAEoCRIXCg9wdWJsaWNfa2V5X3R5cGUYBiABKAkirwEKFFB1",
            "YmxpY0tleUNlcnRpZmljYXRlEj8KBmZvcm1hdBgBIAEoDjIvLmdvb2dsZS5j",
            "bG91ZC5pb3QudjEuUHVibGljS2V5Q2VydGlmaWNhdGVGb3JtYXQSEwoLY2Vy",
            "dGlmaWNhdGUYAiABKAkSQQoMeDUwOV9kZXRhaWxzGAMgASgLMisuZ29vZ2xl",
            "LmNsb3VkLmlvdC52MS5YNTA5Q2VydGlmaWNhdGVEZXRhaWxzIpUBChBEZXZp",
            "Y2VDcmVkZW50aWFsEj4KCnB1YmxpY19rZXkYAiABKAsyKC5nb29nbGUuY2xv",
            "dWQuaW90LnYxLlB1YmxpY0tleUNyZWRlbnRpYWxIABIzCg9leHBpcmF0aW9u",
            "X3RpbWUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgwKCmNy",
            "ZWRlbnRpYWwiWAoTUHVibGljS2V5Q3JlZGVudGlhbBI0CgZmb3JtYXQYASAB",
            "KA4yJC5nb29nbGUuY2xvdWQuaW90LnYxLlB1YmxpY0tleUZvcm1hdBILCgNr",
            "ZXkYAiABKAkioAEKDERldmljZUNvbmZpZxIPCgd2ZXJzaW9uGAEgASgDEjUK",
            "EWNsb3VkX3VwZGF0ZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBIzCg9kZXZpY2VfYWNrX3RpbWUYAyABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEhMKC2JpbmFyeV9kYXRhGAQgASgMIlMKC0Rldmlj",
            "ZVN0YXRlEi8KC3VwZGF0ZV90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBITCgtiaW5hcnlfZGF0YRgCIAEoDCpMCglNcXR0U3RhdGUS",
            "GgoWTVFUVF9TVEFURV9VTlNQRUNJRklFRBAAEhAKDE1RVFRfRU5BQkxFRBAB",
            "EhEKDU1RVFRfRElTQUJMRUQQAipMCglIdHRwU3RhdGUSGgoWSFRUUF9TVEFU",
            "RV9VTlNQRUNJRklFRBAAEhAKDEhUVFBfRU5BQkxFRBABEhEKDUhUVFBfRElT",
            "QUJMRUQQAipPCghMb2dMZXZlbBIZChVMT0dfTEVWRUxfVU5TUEVDSUZJRUQQ",
            "ABIICgROT05FEAoSCQoFRVJST1IQFBIICgRJTkZPEB4SCQoFREVCVUcQKCpJ",
            "CgtHYXRld2F5VHlwZRIcChhHQVRFV0FZX1RZUEVfVU5TUEVDSUZJRUQQABIL",
            "CgdHQVRFV0FZEAESDwoLTk9OX0dBVEVXQVkQAiqRAQoRR2F0ZXdheUF1dGhN",
            "ZXRob2QSIwofR0FURVdBWV9BVVRIX01FVEhPRF9VTlNQRUNJRklFRBAAEhQK",
            "EEFTU09DSUFUSU9OX09OTFkQARIaChZERVZJQ0VfQVVUSF9UT0tFTl9PTkxZ",
            "EAISJQohQVNTT0NJQVRJT05fQU5EX0RFVklDRV9BVVRIX1RPS0VOEAMqZQoa",
            "UHVibGljS2V5Q2VydGlmaWNhdGVGb3JtYXQSLQopVU5TUEVDSUZJRURfUFVC",
            "TElDX0tFWV9DRVJUSUZJQ0FURV9GT1JNQVQQABIYChRYNTA5X0NFUlRJRklD",
            "QVRFX1BFTRABKnYKD1B1YmxpY0tleUZvcm1hdBIhCh1VTlNQRUNJRklFRF9Q",
            "VUJMSUNfS0VZX0ZPUk1BVBAAEgsKB1JTQV9QRU0QAxIQCgxSU0FfWDUwOV9Q",
            "RU0QARINCglFUzI1Nl9QRU0QAhISCg5FUzI1Nl9YNTA5X1BFTRAEQmYKF2Nv",
            "bS5nb29nbGUuY2xvdWQuaW90LnYxQg5SZXNvdXJjZXNQcm90b1ABWjZnb29n",
            "bGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Nsb3VkL2lvdC92",
            "MTtpb3T4AQFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Iot.V1.MqttState), typeof(global::Google.Cloud.Iot.V1.HttpState), typeof(global::Google.Cloud.Iot.V1.LogLevel), typeof(global::Google.Cloud.Iot.V1.GatewayType), typeof(global::Google.Cloud.Iot.V1.GatewayAuthMethod), typeof(global::Google.Cloud.Iot.V1.PublicKeyCertificateFormat), typeof(global::Google.Cloud.Iot.V1.PublicKeyFormat), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.Device), global::Google.Cloud.Iot.V1.Device.Parser, new[]{ "Id", "Name", "NumId", "Credentials", "LastHeartbeatTime", "LastEventTime", "LastStateTime", "LastConfigAckTime", "LastConfigSendTime", "Blocked", "LastErrorTime", "LastErrorStatus", "Config", "State", "LogLevel", "Metadata", "GatewayConfig" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.GatewayConfig), global::Google.Cloud.Iot.V1.GatewayConfig.Parser, new[]{ "GatewayType", "GatewayAuthMethod", "LastAccessedGatewayId", "LastAccessedGatewayTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.DeviceRegistry), global::Google.Cloud.Iot.V1.DeviceRegistry.Parser, new[]{ "Id", "Name", "EventNotificationConfigs", "StateNotificationConfig", "MqttConfig", "HttpConfig", "LogLevel", "Credentials" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.MqttConfig), global::Google.Cloud.Iot.V1.MqttConfig.Parser, new[]{ "MqttEnabledState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.HttpConfig), global::Google.Cloud.Iot.V1.HttpConfig.Parser, new[]{ "HttpEnabledState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.EventNotificationConfig), global::Google.Cloud.Iot.V1.EventNotificationConfig.Parser, new[]{ "SubfolderMatches", "PubsubTopicName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.StateNotificationConfig), global::Google.Cloud.Iot.V1.StateNotificationConfig.Parser, new[]{ "PubsubTopicName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.RegistryCredential), global::Google.Cloud.Iot.V1.RegistryCredential.Parser, new[]{ "PublicKeyCertificate" }, new[]{ "Credential" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.X509CertificateDetails), global::Google.Cloud.Iot.V1.X509CertificateDetails.Parser, new[]{ "Issuer", "Subject", "StartTime", "ExpiryTime", "SignatureAlgorithm", "PublicKeyType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.PublicKeyCertificate), global::Google.Cloud.Iot.V1.PublicKeyCertificate.Parser, new[]{ "Format", "Certificate", "X509Details" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.DeviceCredential), global::Google.Cloud.Iot.V1.DeviceCredential.Parser, new[]{ "PublicKey", "ExpirationTime" }, new[]{ "Credential" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.PublicKeyCredential), global::Google.Cloud.Iot.V1.PublicKeyCredential.Parser, new[]{ "Format", "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.DeviceConfig), global::Google.Cloud.Iot.V1.DeviceConfig.Parser, new[]{ "Version", "CloudUpdateTime", "DeviceAckTime", "BinaryData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.DeviceState), global::Google.Cloud.Iot.V1.DeviceState.Parser, new[]{ "UpdateTime", "BinaryData" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Indicates whether an MQTT connection is enabled or disabled. See the field
  /// description for details.
  /// </summary>
  public enum MqttState {
    /// <summary>
    /// No MQTT state specified. If not specified, MQTT will be enabled by default.
    /// </summary>
    [pbr::OriginalName("MQTT_STATE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Enables a MQTT connection.
    /// </summary>
    [pbr::OriginalName("MQTT_ENABLED")] MqttEnabled = 1,
    /// <summary>
    /// Disables a MQTT connection.
    /// </summary>
    [pbr::OriginalName("MQTT_DISABLED")] MqttDisabled = 2,
  }

  /// <summary>
  /// Indicates whether DeviceService (HTTP) is enabled or disabled for the
  /// registry. See the field description for details.
  /// </summary>
  public enum HttpState {
    /// <summary>
    /// No HTTP state specified. If not specified, DeviceService will be
    /// enabled by default.
    /// </summary>
    [pbr::OriginalName("HTTP_STATE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Enables DeviceService (HTTP) service for the registry.
    /// </summary>
    [pbr::OriginalName("HTTP_ENABLED")] HttpEnabled = 1,
    /// <summary>
    /// Disables DeviceService (HTTP) service for the registry.
    /// </summary>
    [pbr::OriginalName("HTTP_DISABLED")] HttpDisabled = 2,
  }

  /// <summary>
  /// **Beta Feature**
  ///
  /// The logging verbosity for device activity. Specifies which events should be
  /// written to logs. For example, if the LogLevel is ERROR, only events that
  /// terminate in errors will be logged. LogLevel is inclusive; enabling INFO
  /// logging will also enable ERROR logging.
  /// </summary>
  public enum LogLevel {
    /// <summary>
    /// No logging specified. If not specified, logging will be disabled.
    /// </summary>
    [pbr::OriginalName("LOG_LEVEL_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Disables logging.
    /// </summary>
    [pbr::OriginalName("NONE")] None = 10,
    /// <summary>
    /// Error events will be logged.
    /// </summary>
    [pbr::OriginalName("ERROR")] Error = 20,
    /// <summary>
    /// Informational events will be logged, such as connections and
    /// disconnections.
    /// </summary>
    [pbr::OriginalName("INFO")] Info = 30,
    /// <summary>
    /// All events will be logged.
    /// </summary>
    [pbr::OriginalName("DEBUG")] Debug = 40,
  }

  /// <summary>
  /// Gateway type.
  /// </summary>
  public enum GatewayType {
    /// <summary>
    /// If unspecified, the device is considered a non-gateway device.
    /// </summary>
    [pbr::OriginalName("GATEWAY_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The device is a gateway.
    /// </summary>
    [pbr::OriginalName("GATEWAY")] Gateway = 1,
    /// <summary>
    /// The device is not a gateway.
    /// </summary>
    [pbr::OriginalName("NON_GATEWAY")] NonGateway = 2,
  }

  /// <summary>
  /// The gateway authorization/authentication method. This setting determines how
  /// Cloud IoT Core authorizes/authenticate devices to access the gateway.
  /// </summary>
  public enum GatewayAuthMethod {
    /// <summary>
    /// No authentication/authorization method specified. No devices are allowed to
    /// access the gateway.
    /// </summary>
    [pbr::OriginalName("GATEWAY_AUTH_METHOD_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The device is authenticated through the gateway association only. Device
    /// credentials are ignored even if provided.
    /// </summary>
    [pbr::OriginalName("ASSOCIATION_ONLY")] AssociationOnly = 1,
    /// <summary>
    /// The device is authenticated through its own credentials. Gateway
    /// association is not checked.
    /// </summary>
    [pbr::OriginalName("DEVICE_AUTH_TOKEN_ONLY")] DeviceAuthTokenOnly = 2,
    /// <summary>
    /// The device is authenticated through both device credentials and gateway
    /// association. The device must be bound to the gateway and must provide its
    /// own credentials.
    /// </summary>
    [pbr::OriginalName("ASSOCIATION_AND_DEVICE_AUTH_TOKEN")] AssociationAndDeviceAuthToken = 3,
  }

  /// <summary>
  /// The supported formats for the public key.
  /// </summary>
  public enum PublicKeyCertificateFormat {
    /// <summary>
    /// The format has not been specified. This is an invalid default value and
    /// must not be used.
    /// </summary>
    [pbr::OriginalName("UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT")] UnspecifiedPublicKeyCertificateFormat = 0,
    /// <summary>
    /// An X.509v3 certificate ([RFC5280](https://www.ietf.org/rfc/rfc5280.txt)),
    /// encoded in base64, and wrapped by `-----BEGIN CERTIFICATE-----` and
    /// `-----END CERTIFICATE-----`.
    /// </summary>
    [pbr::OriginalName("X509_CERTIFICATE_PEM")] X509CertificatePem = 1,
  }

  /// <summary>
  /// The supported formats for the public key.
  /// </summary>
  public enum PublicKeyFormat {
    /// <summary>
    /// The format has not been specified. This is an invalid default value and
    /// must not be used.
    /// </summary>
    [pbr::OriginalName("UNSPECIFIED_PUBLIC_KEY_FORMAT")] UnspecifiedPublicKeyFormat = 0,
    /// <summary>
    /// An RSA public key encoded in base64, and wrapped by
    /// `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----`. This can be
    /// used to verify `RS256` signatures in JWT tokens ([RFC7518](
    /// https://www.ietf.org/rfc/rfc7518.txt)).
    /// </summary>
    [pbr::OriginalName("RSA_PEM")] RsaPem = 3,
    /// <summary>
    /// As RSA_PEM, but wrapped in an X.509v3 certificate ([RFC5280](
    /// https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped by
    /// `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`.
    /// </summary>
    [pbr::OriginalName("RSA_X509_PEM")] RsaX509Pem = 1,
    /// <summary>
    /// Public key for the ECDSA algorithm using P-256 and SHA-256, encoded in
    /// base64, and wrapped by `-----BEGIN PUBLIC KEY-----` and `-----END
    /// PUBLIC KEY-----`. This can be used to verify JWT tokens with the `ES256`
    /// algorithm ([RFC7518](https://www.ietf.org/rfc/rfc7518.txt)). This curve is
    /// defined in [OpenSSL](https://www.openssl.org/) as the `prime256v1` curve.
    /// </summary>
    [pbr::OriginalName("ES256_PEM")] Es256Pem = 2,
    /// <summary>
    /// As ES256_PEM, but wrapped in an X.509v3 certificate ([RFC5280](
    /// https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped by
    /// `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`.
    /// </summary>
    [pbr::OriginalName("ES256_X509_PEM")] Es256X509Pem = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The device resource.
  /// </summary>
  public sealed partial class Device : pb::IMessage<Device>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Device> _parser = new pb::MessageParser<Device>(() => new Device());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Device> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device(Device other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      numId_ = other.numId_;
      credentials_ = other.credentials_.Clone();
      lastHeartbeatTime_ = other.lastHeartbeatTime_ != null ? other.lastHeartbeatTime_.Clone() : null;
      lastEventTime_ = other.lastEventTime_ != null ? other.lastEventTime_.Clone() : null;
      lastStateTime_ = other.lastStateTime_ != null ? other.lastStateTime_.Clone() : null;
      lastConfigAckTime_ = other.lastConfigAckTime_ != null ? other.lastConfigAckTime_.Clone() : null;
      lastConfigSendTime_ = other.lastConfigSendTime_ != null ? other.lastConfigSendTime_.Clone() : null;
      blocked_ = other.blocked_;
      lastErrorTime_ = other.lastErrorTime_ != null ? other.lastErrorTime_.Clone() : null;
      lastErrorStatus_ = other.lastErrorStatus_ != null ? other.lastErrorStatus_.Clone() : null;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      logLevel_ = other.logLevel_;
      metadata_ = other.metadata_.Clone();
      gatewayConfig_ = other.gatewayConfig_ != null ? other.gatewayConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device Clone() {
      return new Device(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The user-defined device identifier. The device ID must be unique
    /// within a device registry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// The resource path name. For example,
    /// `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
    /// `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
    /// When `name` is populated as a response from the service, it always ends
    /// in the device numeric ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num_id" field.</summary>
    public const int NumIdFieldNumber = 3;
    private ulong numId_;
    /// <summary>
    /// [Output only] A server-defined unique numeric ID for the device. This is a
    /// more compact way to identify devices, and it is globally unique.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong NumId {
      get { return numId_; }
      set {
        numId_ = value;
      }
    }

    /// <summary>Field number for the "credentials" field.</summary>
    public const int CredentialsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Google.Cloud.Iot.V1.DeviceCredential> _repeated_credentials_codec
        = pb::FieldCodec.ForMessage(98, global::Google.Cloud.Iot.V1.DeviceCredential.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Iot.V1.DeviceCredential> credentials_ = new pbc::RepeatedField<global::Google.Cloud.Iot.V1.DeviceCredential>();
    /// <summary>
    /// The credentials used to authenticate this device. To allow credential
    /// rotation without interruption, multiple device credentials can be bound to
    /// this device. No more than 3 credentials can be bound to a single device at
    /// a time. When new credentials are added to a device, they are verified
    /// against the registry credentials. For details, see the description of the
    /// `DeviceRegistry.credentials` field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Iot.V1.DeviceCredential> Credentials {
      get { return credentials_; }
    }

    /// <summary>Field number for the "last_heartbeat_time" field.</summary>
    public const int LastHeartbeatTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastHeartbeatTime_;
    /// <summary>
    /// [Output only] The last time an MQTT `PINGREQ` was received. This field
    /// applies only to devices connecting through MQTT. MQTT clients usually only
    /// send `PINGREQ` messages if the connection is idle, and no other messages
    /// have been sent. Timestamps are periodically collected and written to
    /// storage; they may be stale by a few minutes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastHeartbeatTime {
      get { return lastHeartbeatTime_; }
      set {
        lastHeartbeatTime_ = value;
      }
    }

    /// <summary>Field number for the "last_event_time" field.</summary>
    public const int LastEventTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastEventTime_;
    /// <summary>
    /// [Output only] The last time a telemetry event was received. Timestamps are
    /// periodically collected and written to storage; they may be stale by a few
    /// minutes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastEventTime {
      get { return lastEventTime_; }
      set {
        lastEventTime_ = value;
      }
    }

    /// <summary>Field number for the "last_state_time" field.</summary>
    public const int LastStateTimeFieldNumber = 20;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastStateTime_;
    /// <summary>
    /// [Output only] The last time a state event was received. Timestamps are
    /// periodically collected and written to storage; they may be stale by a few
    /// minutes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastStateTime {
      get { return lastStateTime_; }
      set {
        lastStateTime_ = value;
      }
    }

    /// <summary>Field number for the "last_config_ack_time" field.</summary>
    public const int LastConfigAckTimeFieldNumber = 14;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastConfigAckTime_;
    /// <summary>
    /// [Output only] The last time a cloud-to-device config version acknowledgment
    /// was received from the device. This field is only for configurations
    /// sent through MQTT.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastConfigAckTime {
      get { return lastConfigAckTime_; }
      set {
        lastConfigAckTime_ = value;
      }
    }

    /// <summary>Field number for the "last_config_send_time" field.</summary>
    public const int LastConfigSendTimeFieldNumber = 18;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastConfigSendTime_;
    /// <summary>
    /// [Output only] The last time a cloud-to-device config version was sent to
    /// the device.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastConfigSendTime {
      get { return lastConfigSendTime_; }
      set {
        lastConfigSendTime_ = value;
      }
    }

    /// <summary>Field number for the "blocked" field.</summary>
    public const int BlockedFieldNumber = 19;
    private bool blocked_;
    /// <summary>
    /// If a device is blocked, connections or requests from this device will fail.
    /// Can be used to temporarily prevent the device from connecting if, for
    /// example, the sensor is generating bad data and needs maintenance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Blocked {
      get { return blocked_; }
      set {
        blocked_ = value;
      }
    }

    /// <summary>Field number for the "last_error_time" field.</summary>
    public const int LastErrorTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastErrorTime_;
    /// <summary>
    /// [Output only] The time the most recent error occurred, such as a failure to
    /// publish to Cloud Pub/Sub. This field is the timestamp of
    /// 'last_error_status'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastErrorTime {
      get { return lastErrorTime_; }
      set {
        lastErrorTime_ = value;
      }
    }

    /// <summary>Field number for the "last_error_status" field.</summary>
    public const int LastErrorStatusFieldNumber = 11;
    private global::Google.Rpc.Status lastErrorStatus_;
    /// <summary>
    /// [Output only] The error message of the most recent error, such as a failure
    /// to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
    /// field. If no errors have occurred, this field has an empty message
    /// and the status code 0 == OK. Otherwise, this field is expected to have a
    /// status code other than OK.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status LastErrorStatus {
      get { return lastErrorStatus_; }
      set {
        lastErrorStatus_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 13;
    private global::Google.Cloud.Iot.V1.DeviceConfig config_;
    /// <summary>
    /// The most recent device configuration, which is eventually sent from
    /// Cloud IoT Core to the device. If not present on creation, the
    /// configuration will be initialized with an empty payload and version value
    /// of `1`. To update this field after creation, use the
    /// `DeviceManager.ModifyCloudToDeviceConfig` method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.DeviceConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 16;
    private global::Google.Cloud.Iot.V1.DeviceState state_;
    /// <summary>
    /// [Output only] The state most recently received from the device. If no state
    /// has been reported, this field is not present.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.DeviceState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "log_level" field.</summary>
    public const int LogLevelFieldNumber = 21;
    private global::Google.Cloud.Iot.V1.LogLevel logLevel_ = global::Google.Cloud.Iot.V1.LogLevel.Unspecified;
    /// <summary>
    /// **Beta Feature**
    ///
    /// The logging verbosity for device activity. If unspecified,
    /// DeviceRegistry.log_level will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.LogLevel LogLevel {
      get { return logLevel_; }
      set {
        logLevel_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 17;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 138);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The metadata key-value pairs assigned to the device. This metadata is not
    /// interpreted or indexed by Cloud IoT Core. It can be used to add contextual
    /// information for the device.
    ///
    /// Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
    /// be less than 128 bytes in length.
    ///
    /// Values are free-form strings. Each value must be less than or equal to 32
    /// KB in size.
    ///
    /// The total size of all keys and values must be less than 256 KB, and the
    /// maximum number of key-value pairs is 500.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "gateway_config" field.</summary>
    public const int GatewayConfigFieldNumber = 24;
    private global::Google.Cloud.Iot.V1.GatewayConfig gatewayConfig_;
    /// <summary>
    /// Gateway-related configuration and state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.GatewayConfig GatewayConfig {
      get { return gatewayConfig_; }
      set {
        gatewayConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Device);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Device other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (NumId != other.NumId) return false;
      if(!credentials_.Equals(other.credentials_)) return false;
      if (!object.Equals(LastHeartbeatTime, other.LastHeartbeatTime)) return false;
      if (!object.Equals(LastEventTime, other.LastEventTime)) return false;
      if (!object.Equals(LastStateTime, other.LastStateTime)) return false;
      if (!object.Equals(LastConfigAckTime, other.LastConfigAckTime)) return false;
      if (!object.Equals(LastConfigSendTime, other.LastConfigSendTime)) return false;
      if (Blocked != other.Blocked) return false;
      if (!object.Equals(LastErrorTime, other.LastErrorTime)) return false;
      if (!object.Equals(LastErrorStatus, other.LastErrorStatus)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (LogLevel != other.LogLevel) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      if (!object.Equals(GatewayConfig, other.GatewayConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (NumId != 0UL) hash ^= NumId.GetHashCode();
      hash ^= credentials_.GetHashCode();
      if (lastHeartbeatTime_ != null) hash ^= LastHeartbeatTime.GetHashCode();
      if (lastEventTime_ != null) hash ^= LastEventTime.GetHashCode();
      if (lastStateTime_ != null) hash ^= LastStateTime.GetHashCode();
      if (lastConfigAckTime_ != null) hash ^= LastConfigAckTime.GetHashCode();
      if (lastConfigSendTime_ != null) hash ^= LastConfigSendTime.GetHashCode();
      if (Blocked != false) hash ^= Blocked.GetHashCode();
      if (lastErrorTime_ != null) hash ^= LastErrorTime.GetHashCode();
      if (lastErrorStatus_ != null) hash ^= LastErrorStatus.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (LogLevel != global::Google.Cloud.Iot.V1.LogLevel.Unspecified) hash ^= LogLevel.GetHashCode();
      hash ^= Metadata.GetHashCode();
      if (gatewayConfig_ != null) hash ^= GatewayConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (NumId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(NumId);
      }
      if (lastHeartbeatTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastHeartbeatTime);
      }
      if (lastEventTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LastEventTime);
      }
      if (lastErrorTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LastErrorTime);
      }
      if (lastErrorStatus_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LastErrorStatus);
      }
      credentials_.WriteTo(output, _repeated_credentials_codec);
      if (config_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Config);
      }
      if (lastConfigAckTime_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(LastConfigAckTime);
      }
      if (state_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(State);
      }
      metadata_.WriteTo(output, _map_metadata_codec);
      if (lastConfigSendTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(LastConfigSendTime);
      }
      if (Blocked != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Blocked);
      }
      if (lastStateTime_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(LastStateTime);
      }
      if (LogLevel != global::Google.Cloud.Iot.V1.LogLevel.Unspecified) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) LogLevel);
      }
      if (gatewayConfig_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(GatewayConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (NumId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(NumId);
      }
      if (lastHeartbeatTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastHeartbeatTime);
      }
      if (lastEventTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LastEventTime);
      }
      if (lastErrorTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LastErrorTime);
      }
      if (lastErrorStatus_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LastErrorStatus);
      }
      credentials_.WriteTo(ref output, _repeated_credentials_codec);
      if (config_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Config);
      }
      if (lastConfigAckTime_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(LastConfigAckTime);
      }
      if (state_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(State);
      }
      metadata_.WriteTo(ref output, _map_metadata_codec);
      if (lastConfigSendTime_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(LastConfigSendTime);
      }
      if (Blocked != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Blocked);
      }
      if (lastStateTime_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(LastStateTime);
      }
      if (LogLevel != global::Google.Cloud.Iot.V1.LogLevel.Unspecified) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) LogLevel);
      }
      if (gatewayConfig_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(GatewayConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (NumId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NumId);
      }
      size += credentials_.CalculateSize(_repeated_credentials_codec);
      if (lastHeartbeatTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastHeartbeatTime);
      }
      if (lastEventTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastEventTime);
      }
      if (lastStateTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LastStateTime);
      }
      if (lastConfigAckTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastConfigAckTime);
      }
      if (lastConfigSendTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LastConfigSendTime);
      }
      if (Blocked != false) {
        size += 2 + 1;
      }
      if (lastErrorTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastErrorTime);
      }
      if (lastErrorStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastErrorStatus);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (state_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (LogLevel != global::Google.Cloud.Iot.V1.LogLevel.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LogLevel);
      }
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (gatewayConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GatewayConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Device other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.NumId != 0UL) {
        NumId = other.NumId;
      }
      credentials_.Add(other.credentials_);
      if (other.lastHeartbeatTime_ != null) {
        if (lastHeartbeatTime_ == null) {
          LastHeartbeatTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastHeartbeatTime.MergeFrom(other.LastHeartbeatTime);
      }
      if (other.lastEventTime_ != null) {
        if (lastEventTime_ == null) {
          LastEventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastEventTime.MergeFrom(other.LastEventTime);
      }
      if (other.lastStateTime_ != null) {
        if (lastStateTime_ == null) {
          LastStateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastStateTime.MergeFrom(other.LastStateTime);
      }
      if (other.lastConfigAckTime_ != null) {
        if (lastConfigAckTime_ == null) {
          LastConfigAckTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastConfigAckTime.MergeFrom(other.LastConfigAckTime);
      }
      if (other.lastConfigSendTime_ != null) {
        if (lastConfigSendTime_ == null) {
          LastConfigSendTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastConfigSendTime.MergeFrom(other.LastConfigSendTime);
      }
      if (other.Blocked != false) {
        Blocked = other.Blocked;
      }
      if (other.lastErrorTime_ != null) {
        if (lastErrorTime_ == null) {
          LastErrorTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastErrorTime.MergeFrom(other.LastErrorTime);
      }
      if (other.lastErrorStatus_ != null) {
        if (lastErrorStatus_ == null) {
          LastErrorStatus = new global::Google.Rpc.Status();
        }
        LastErrorStatus.MergeFrom(other.LastErrorStatus);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Google.Cloud.Iot.V1.DeviceConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::Google.Cloud.Iot.V1.DeviceState();
        }
        State.MergeFrom(other.State);
      }
      if (other.LogLevel != global::Google.Cloud.Iot.V1.LogLevel.Unspecified) {
        LogLevel = other.LogLevel;
      }
      metadata_.Add(other.metadata_);
      if (other.gatewayConfig_ != null) {
        if (gatewayConfig_ == null) {
          GatewayConfig = new global::Google.Cloud.Iot.V1.GatewayConfig();
        }
        GatewayConfig.MergeFrom(other.GatewayConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            NumId = input.ReadUInt64();
            break;
          }
          case 58: {
            if (lastHeartbeatTime_ == null) {
              LastHeartbeatTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastHeartbeatTime);
            break;
          }
          case 66: {
            if (lastEventTime_ == null) {
              LastEventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastEventTime);
            break;
          }
          case 82: {
            if (lastErrorTime_ == null) {
              LastErrorTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastErrorTime);
            break;
          }
          case 90: {
            if (lastErrorStatus_ == null) {
              LastErrorStatus = new global::Google.Rpc.Status();
            }
            input.ReadMessage(LastErrorStatus);
            break;
          }
          case 98: {
            credentials_.AddEntriesFrom(input, _repeated_credentials_codec);
            break;
          }
          case 106: {
            if (config_ == null) {
              Config = new global::Google.Cloud.Iot.V1.DeviceConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 114: {
            if (lastConfigAckTime_ == null) {
              LastConfigAckTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastConfigAckTime);
            break;
          }
          case 130: {
            if (state_ == null) {
              State = new global::Google.Cloud.Iot.V1.DeviceState();
            }
            input.ReadMessage(State);
            break;
          }
          case 138: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
          case 146: {
            if (lastConfigSendTime_ == null) {
              LastConfigSendTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastConfigSendTime);
            break;
          }
          case 152: {
            Blocked = input.ReadBool();
            break;
          }
          case 162: {
            if (lastStateTime_ == null) {
              LastStateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastStateTime);
            break;
          }
          case 168: {
            LogLevel = (global::Google.Cloud.Iot.V1.LogLevel) input.ReadEnum();
            break;
          }
          case 194: {
            if (gatewayConfig_ == null) {
              GatewayConfig = new global::Google.Cloud.Iot.V1.GatewayConfig();
            }
            input.ReadMessage(GatewayConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            NumId = input.ReadUInt64();
            break;
          }
          case 58: {
            if (lastHeartbeatTime_ == null) {
              LastHeartbeatTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastHeartbeatTime);
            break;
          }
          case 66: {
            if (lastEventTime_ == null) {
              LastEventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastEventTime);
            break;
          }
          case 82: {
            if (lastErrorTime_ == null) {
              LastErrorTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastErrorTime);
            break;
          }
          case 90: {
            if (lastErrorStatus_ == null) {
              LastErrorStatus = new global::Google.Rpc.Status();
            }
            input.ReadMessage(LastErrorStatus);
            break;
          }
          case 98: {
            credentials_.AddEntriesFrom(ref input, _repeated_credentials_codec);
            break;
          }
          case 106: {
            if (config_ == null) {
              Config = new global::Google.Cloud.Iot.V1.DeviceConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 114: {
            if (lastConfigAckTime_ == null) {
              LastConfigAckTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastConfigAckTime);
            break;
          }
          case 130: {
            if (state_ == null) {
              State = new global::Google.Cloud.Iot.V1.DeviceState();
            }
            input.ReadMessage(State);
            break;
          }
          case 138: {
            metadata_.AddEntriesFrom(ref input, _map_metadata_codec);
            break;
          }
          case 146: {
            if (lastConfigSendTime_ == null) {
              LastConfigSendTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastConfigSendTime);
            break;
          }
          case 152: {
            Blocked = input.ReadBool();
            break;
          }
          case 162: {
            if (lastStateTime_ == null) {
              LastStateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastStateTime);
            break;
          }
          case 168: {
            LogLevel = (global::Google.Cloud.Iot.V1.LogLevel) input.ReadEnum();
            break;
          }
          case 194: {
            if (gatewayConfig_ == null) {
              GatewayConfig = new global::Google.Cloud.Iot.V1.GatewayConfig();
            }
            input.ReadMessage(GatewayConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Gateway-related configuration and state.
  /// </summary>
  public sealed partial class GatewayConfig : pb::IMessage<GatewayConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GatewayConfig> _parser = new pb::MessageParser<GatewayConfig>(() => new GatewayConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GatewayConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GatewayConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GatewayConfig(GatewayConfig other) : this() {
      gatewayType_ = other.gatewayType_;
      gatewayAuthMethod_ = other.gatewayAuthMethod_;
      lastAccessedGatewayId_ = other.lastAccessedGatewayId_;
      lastAccessedGatewayTime_ = other.lastAccessedGatewayTime_ != null ? other.lastAccessedGatewayTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GatewayConfig Clone() {
      return new GatewayConfig(this);
    }

    /// <summary>Field number for the "gateway_type" field.</summary>
    public const int GatewayTypeFieldNumber = 1;
    private global::Google.Cloud.Iot.V1.GatewayType gatewayType_ = global::Google.Cloud.Iot.V1.GatewayType.Unspecified;
    /// <summary>
    /// Indicates whether the device is a gateway.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.GatewayType GatewayType {
      get { return gatewayType_; }
      set {
        gatewayType_ = value;
      }
    }

    /// <summary>Field number for the "gateway_auth_method" field.</summary>
    public const int GatewayAuthMethodFieldNumber = 2;
    private global::Google.Cloud.Iot.V1.GatewayAuthMethod gatewayAuthMethod_ = global::Google.Cloud.Iot.V1.GatewayAuthMethod.Unspecified;
    /// <summary>
    /// Indicates how to authorize and/or authenticate devices to access the
    /// gateway.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.GatewayAuthMethod GatewayAuthMethod {
      get { return gatewayAuthMethod_; }
      set {
        gatewayAuthMethod_ = value;
      }
    }

    /// <summary>Field number for the "last_accessed_gateway_id" field.</summary>
    public const int LastAccessedGatewayIdFieldNumber = 3;
    private string lastAccessedGatewayId_ = "";
    /// <summary>
    /// [Output only] The ID of the gateway the device accessed most recently.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastAccessedGatewayId {
      get { return lastAccessedGatewayId_; }
      set {
        lastAccessedGatewayId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_accessed_gateway_time" field.</summary>
    public const int LastAccessedGatewayTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastAccessedGatewayTime_;
    /// <summary>
    /// [Output only] The most recent time at which the device accessed the gateway
    /// specified in `last_accessed_gateway`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastAccessedGatewayTime {
      get { return lastAccessedGatewayTime_; }
      set {
        lastAccessedGatewayTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GatewayConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GatewayConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GatewayType != other.GatewayType) return false;
      if (GatewayAuthMethod != other.GatewayAuthMethod) return false;
      if (LastAccessedGatewayId != other.LastAccessedGatewayId) return false;
      if (!object.Equals(LastAccessedGatewayTime, other.LastAccessedGatewayTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GatewayType != global::Google.Cloud.Iot.V1.GatewayType.Unspecified) hash ^= GatewayType.GetHashCode();
      if (GatewayAuthMethod != global::Google.Cloud.Iot.V1.GatewayAuthMethod.Unspecified) hash ^= GatewayAuthMethod.GetHashCode();
      if (LastAccessedGatewayId.Length != 0) hash ^= LastAccessedGatewayId.GetHashCode();
      if (lastAccessedGatewayTime_ != null) hash ^= LastAccessedGatewayTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GatewayType != global::Google.Cloud.Iot.V1.GatewayType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GatewayType);
      }
      if (GatewayAuthMethod != global::Google.Cloud.Iot.V1.GatewayAuthMethod.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GatewayAuthMethod);
      }
      if (LastAccessedGatewayId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastAccessedGatewayId);
      }
      if (lastAccessedGatewayTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastAccessedGatewayTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GatewayType != global::Google.Cloud.Iot.V1.GatewayType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GatewayType);
      }
      if (GatewayAuthMethod != global::Google.Cloud.Iot.V1.GatewayAuthMethod.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GatewayAuthMethod);
      }
      if (LastAccessedGatewayId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastAccessedGatewayId);
      }
      if (lastAccessedGatewayTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastAccessedGatewayTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GatewayType != global::Google.Cloud.Iot.V1.GatewayType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GatewayType);
      }
      if (GatewayAuthMethod != global::Google.Cloud.Iot.V1.GatewayAuthMethod.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GatewayAuthMethod);
      }
      if (LastAccessedGatewayId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastAccessedGatewayId);
      }
      if (lastAccessedGatewayTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastAccessedGatewayTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GatewayConfig other) {
      if (other == null) {
        return;
      }
      if (other.GatewayType != global::Google.Cloud.Iot.V1.GatewayType.Unspecified) {
        GatewayType = other.GatewayType;
      }
      if (other.GatewayAuthMethod != global::Google.Cloud.Iot.V1.GatewayAuthMethod.Unspecified) {
        GatewayAuthMethod = other.GatewayAuthMethod;
      }
      if (other.LastAccessedGatewayId.Length != 0) {
        LastAccessedGatewayId = other.LastAccessedGatewayId;
      }
      if (other.lastAccessedGatewayTime_ != null) {
        if (lastAccessedGatewayTime_ == null) {
          LastAccessedGatewayTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastAccessedGatewayTime.MergeFrom(other.LastAccessedGatewayTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GatewayType = (global::Google.Cloud.Iot.V1.GatewayType) input.ReadEnum();
            break;
          }
          case 16: {
            GatewayAuthMethod = (global::Google.Cloud.Iot.V1.GatewayAuthMethod) input.ReadEnum();
            break;
          }
          case 26: {
            LastAccessedGatewayId = input.ReadString();
            break;
          }
          case 34: {
            if (lastAccessedGatewayTime_ == null) {
              LastAccessedGatewayTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastAccessedGatewayTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GatewayType = (global::Google.Cloud.Iot.V1.GatewayType) input.ReadEnum();
            break;
          }
          case 16: {
            GatewayAuthMethod = (global::Google.Cloud.Iot.V1.GatewayAuthMethod) input.ReadEnum();
            break;
          }
          case 26: {
            LastAccessedGatewayId = input.ReadString();
            break;
          }
          case 34: {
            if (lastAccessedGatewayTime_ == null) {
              LastAccessedGatewayTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastAccessedGatewayTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A container for a group of devices.
  /// </summary>
  public sealed partial class DeviceRegistry : pb::IMessage<DeviceRegistry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceRegistry> _parser = new pb::MessageParser<DeviceRegistry>(() => new DeviceRegistry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceRegistry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceRegistry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceRegistry(DeviceRegistry other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      eventNotificationConfigs_ = other.eventNotificationConfigs_.Clone();
      stateNotificationConfig_ = other.stateNotificationConfig_ != null ? other.stateNotificationConfig_.Clone() : null;
      mqttConfig_ = other.mqttConfig_ != null ? other.mqttConfig_.Clone() : null;
      httpConfig_ = other.httpConfig_ != null ? other.httpConfig_.Clone() : null;
      logLevel_ = other.logLevel_;
      credentials_ = other.credentials_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceRegistry Clone() {
      return new DeviceRegistry(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The identifier of this device registry. For example, `myRegistry`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// The resource path name. For example,
    /// `projects/example-project/locations/us-central1/registries/my-registry`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_notification_configs" field.</summary>
    public const int EventNotificationConfigsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Google.Cloud.Iot.V1.EventNotificationConfig> _repeated_eventNotificationConfigs_codec
        = pb::FieldCodec.ForMessage(82, global::Google.Cloud.Iot.V1.EventNotificationConfig.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Iot.V1.EventNotificationConfig> eventNotificationConfigs_ = new pbc::RepeatedField<global::Google.Cloud.Iot.V1.EventNotificationConfig>();
    /// <summary>
    /// The configuration for notification of telemetry events received from the
    /// device. All telemetry events that were successfully published by the
    /// device and acknowledged by Cloud IoT Core are guaranteed to be
    /// delivered to Cloud Pub/Sub. If multiple configurations match a message,
    /// only the first matching configuration is used. If you try to publish a
    /// device telemetry event using MQTT without specifying a Cloud Pub/Sub topic
    /// for the device's registry, the connection closes automatically. If you try
    /// to do so using an HTTP connection, an error is returned. Up to 10
    /// configurations may be provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Iot.V1.EventNotificationConfig> EventNotificationConfigs {
      get { return eventNotificationConfigs_; }
    }

    /// <summary>Field number for the "state_notification_config" field.</summary>
    public const int StateNotificationConfigFieldNumber = 7;
    private global::Google.Cloud.Iot.V1.StateNotificationConfig stateNotificationConfig_;
    /// <summary>
    /// The configuration for notification of new states received from the device.
    /// State updates are guaranteed to be stored in the state history, but
    /// notifications to Cloud Pub/Sub are not guaranteed. For example, if
    /// permissions are misconfigured or the specified topic doesn't exist, no
    /// notification will be published but the state will still be stored in Cloud
    /// IoT Core.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.StateNotificationConfig StateNotificationConfig {
      get { return stateNotificationConfig_; }
      set {
        stateNotificationConfig_ = value;
      }
    }

    /// <summary>Field number for the "mqtt_config" field.</summary>
    public const int MqttConfigFieldNumber = 4;
    private global::Google.Cloud.Iot.V1.MqttConfig mqttConfig_;
    /// <summary>
    /// The MQTT configuration for this device registry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.MqttConfig MqttConfig {
      get { return mqttConfig_; }
      set {
        mqttConfig_ = value;
      }
    }

    /// <summary>Field number for the "http_config" field.</summary>
    public const int HttpConfigFieldNumber = 9;
    private global::Google.Cloud.Iot.V1.HttpConfig httpConfig_;
    /// <summary>
    /// The DeviceService (HTTP) configuration for this device registry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.HttpConfig HttpConfig {
      get { return httpConfig_; }
      set {
        httpConfig_ = value;
      }
    }

    /// <summary>Field number for the "log_level" field.</summary>
    public const int LogLevelFieldNumber = 11;
    private global::Google.Cloud.Iot.V1.LogLevel logLevel_ = global::Google.Cloud.Iot.V1.LogLevel.Unspecified;
    /// <summary>
    /// **Beta Feature**
    ///
    /// The default logging verbosity for activity from devices in this registry.
    /// The verbosity level can be overridden by Device.log_level.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.LogLevel LogLevel {
      get { return logLevel_; }
      set {
        logLevel_ = value;
      }
    }

    /// <summary>Field number for the "credentials" field.</summary>
    public const int CredentialsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Cloud.Iot.V1.RegistryCredential> _repeated_credentials_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Cloud.Iot.V1.RegistryCredential.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Iot.V1.RegistryCredential> credentials_ = new pbc::RepeatedField<global::Google.Cloud.Iot.V1.RegistryCredential>();
    /// <summary>
    /// The credentials used to verify the device credentials. No more than 10
    /// credentials can be bound to a single registry at a time. The verification
    /// process occurs at the time of device creation or update. If this field is
    /// empty, no verification is performed. Otherwise, the credentials of a newly
    /// created device or added credentials of an updated device should be signed
    /// with one of these registry credentials.
    ///
    /// Note, however, that existing devices will never be affected by
    /// modifications to this list of credentials: after a device has been
    /// successfully created in a registry, it should be able to connect even if
    /// its registry credentials are revoked, deleted, or modified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Iot.V1.RegistryCredential> Credentials {
      get { return credentials_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceRegistry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceRegistry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if(!eventNotificationConfigs_.Equals(other.eventNotificationConfigs_)) return false;
      if (!object.Equals(StateNotificationConfig, other.StateNotificationConfig)) return false;
      if (!object.Equals(MqttConfig, other.MqttConfig)) return false;
      if (!object.Equals(HttpConfig, other.HttpConfig)) return false;
      if (LogLevel != other.LogLevel) return false;
      if(!credentials_.Equals(other.credentials_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= eventNotificationConfigs_.GetHashCode();
      if (stateNotificationConfig_ != null) hash ^= StateNotificationConfig.GetHashCode();
      if (mqttConfig_ != null) hash ^= MqttConfig.GetHashCode();
      if (httpConfig_ != null) hash ^= HttpConfig.GetHashCode();
      if (LogLevel != global::Google.Cloud.Iot.V1.LogLevel.Unspecified) hash ^= LogLevel.GetHashCode();
      hash ^= credentials_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (mqttConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MqttConfig);
      }
      if (stateNotificationConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StateNotificationConfig);
      }
      credentials_.WriteTo(output, _repeated_credentials_codec);
      if (httpConfig_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(HttpConfig);
      }
      eventNotificationConfigs_.WriteTo(output, _repeated_eventNotificationConfigs_codec);
      if (LogLevel != global::Google.Cloud.Iot.V1.LogLevel.Unspecified) {
        output.WriteRawTag(88);
        output.WriteEnum((int) LogLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (mqttConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MqttConfig);
      }
      if (stateNotificationConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StateNotificationConfig);
      }
      credentials_.WriteTo(ref output, _repeated_credentials_codec);
      if (httpConfig_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(HttpConfig);
      }
      eventNotificationConfigs_.WriteTo(ref output, _repeated_eventNotificationConfigs_codec);
      if (LogLevel != global::Google.Cloud.Iot.V1.LogLevel.Unspecified) {
        output.WriteRawTag(88);
        output.WriteEnum((int) LogLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += eventNotificationConfigs_.CalculateSize(_repeated_eventNotificationConfigs_codec);
      if (stateNotificationConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StateNotificationConfig);
      }
      if (mqttConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MqttConfig);
      }
      if (httpConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpConfig);
      }
      if (LogLevel != global::Google.Cloud.Iot.V1.LogLevel.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LogLevel);
      }
      size += credentials_.CalculateSize(_repeated_credentials_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceRegistry other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      eventNotificationConfigs_.Add(other.eventNotificationConfigs_);
      if (other.stateNotificationConfig_ != null) {
        if (stateNotificationConfig_ == null) {
          StateNotificationConfig = new global::Google.Cloud.Iot.V1.StateNotificationConfig();
        }
        StateNotificationConfig.MergeFrom(other.StateNotificationConfig);
      }
      if (other.mqttConfig_ != null) {
        if (mqttConfig_ == null) {
          MqttConfig = new global::Google.Cloud.Iot.V1.MqttConfig();
        }
        MqttConfig.MergeFrom(other.MqttConfig);
      }
      if (other.httpConfig_ != null) {
        if (httpConfig_ == null) {
          HttpConfig = new global::Google.Cloud.Iot.V1.HttpConfig();
        }
        HttpConfig.MergeFrom(other.HttpConfig);
      }
      if (other.LogLevel != global::Google.Cloud.Iot.V1.LogLevel.Unspecified) {
        LogLevel = other.LogLevel;
      }
      credentials_.Add(other.credentials_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            if (mqttConfig_ == null) {
              MqttConfig = new global::Google.Cloud.Iot.V1.MqttConfig();
            }
            input.ReadMessage(MqttConfig);
            break;
          }
          case 58: {
            if (stateNotificationConfig_ == null) {
              StateNotificationConfig = new global::Google.Cloud.Iot.V1.StateNotificationConfig();
            }
            input.ReadMessage(StateNotificationConfig);
            break;
          }
          case 66: {
            credentials_.AddEntriesFrom(input, _repeated_credentials_codec);
            break;
          }
          case 74: {
            if (httpConfig_ == null) {
              HttpConfig = new global::Google.Cloud.Iot.V1.HttpConfig();
            }
            input.ReadMessage(HttpConfig);
            break;
          }
          case 82: {
            eventNotificationConfigs_.AddEntriesFrom(input, _repeated_eventNotificationConfigs_codec);
            break;
          }
          case 88: {
            LogLevel = (global::Google.Cloud.Iot.V1.LogLevel) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            if (mqttConfig_ == null) {
              MqttConfig = new global::Google.Cloud.Iot.V1.MqttConfig();
            }
            input.ReadMessage(MqttConfig);
            break;
          }
          case 58: {
            if (stateNotificationConfig_ == null) {
              StateNotificationConfig = new global::Google.Cloud.Iot.V1.StateNotificationConfig();
            }
            input.ReadMessage(StateNotificationConfig);
            break;
          }
          case 66: {
            credentials_.AddEntriesFrom(ref input, _repeated_credentials_codec);
            break;
          }
          case 74: {
            if (httpConfig_ == null) {
              HttpConfig = new global::Google.Cloud.Iot.V1.HttpConfig();
            }
            input.ReadMessage(HttpConfig);
            break;
          }
          case 82: {
            eventNotificationConfigs_.AddEntriesFrom(ref input, _repeated_eventNotificationConfigs_codec);
            break;
          }
          case 88: {
            LogLevel = (global::Google.Cloud.Iot.V1.LogLevel) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The configuration of MQTT for a device registry.
  /// </summary>
  public sealed partial class MqttConfig : pb::IMessage<MqttConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MqttConfig> _parser = new pb::MessageParser<MqttConfig>(() => new MqttConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MqttConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MqttConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MqttConfig(MqttConfig other) : this() {
      mqttEnabledState_ = other.mqttEnabledState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MqttConfig Clone() {
      return new MqttConfig(this);
    }

    /// <summary>Field number for the "mqtt_enabled_state" field.</summary>
    public const int MqttEnabledStateFieldNumber = 1;
    private global::Google.Cloud.Iot.V1.MqttState mqttEnabledState_ = global::Google.Cloud.Iot.V1.MqttState.Unspecified;
    /// <summary>
    /// If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
    /// connections to this registry will fail.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.MqttState MqttEnabledState {
      get { return mqttEnabledState_; }
      set {
        mqttEnabledState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MqttConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MqttConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MqttEnabledState != other.MqttEnabledState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MqttEnabledState != global::Google.Cloud.Iot.V1.MqttState.Unspecified) hash ^= MqttEnabledState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MqttEnabledState != global::Google.Cloud.Iot.V1.MqttState.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MqttEnabledState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MqttEnabledState != global::Google.Cloud.Iot.V1.MqttState.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MqttEnabledState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MqttEnabledState != global::Google.Cloud.Iot.V1.MqttState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MqttEnabledState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MqttConfig other) {
      if (other == null) {
        return;
      }
      if (other.MqttEnabledState != global::Google.Cloud.Iot.V1.MqttState.Unspecified) {
        MqttEnabledState = other.MqttEnabledState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MqttEnabledState = (global::Google.Cloud.Iot.V1.MqttState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MqttEnabledState = (global::Google.Cloud.Iot.V1.MqttState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The configuration of the HTTP bridge for a device registry.
  /// </summary>
  public sealed partial class HttpConfig : pb::IMessage<HttpConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HttpConfig> _parser = new pb::MessageParser<HttpConfig>(() => new HttpConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HttpConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpConfig(HttpConfig other) : this() {
      httpEnabledState_ = other.httpEnabledState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpConfig Clone() {
      return new HttpConfig(this);
    }

    /// <summary>Field number for the "http_enabled_state" field.</summary>
    public const int HttpEnabledStateFieldNumber = 1;
    private global::Google.Cloud.Iot.V1.HttpState httpEnabledState_ = global::Google.Cloud.Iot.V1.HttpState.Unspecified;
    /// <summary>
    /// If enabled, allows devices to use DeviceService via the HTTP protocol.
    /// Otherwise, any requests to DeviceService will fail for this registry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.HttpState HttpEnabledState {
      get { return httpEnabledState_; }
      set {
        httpEnabledState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HttpConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HttpConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HttpEnabledState != other.HttpEnabledState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HttpEnabledState != global::Google.Cloud.Iot.V1.HttpState.Unspecified) hash ^= HttpEnabledState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HttpEnabledState != global::Google.Cloud.Iot.V1.HttpState.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) HttpEnabledState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HttpEnabledState != global::Google.Cloud.Iot.V1.HttpState.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) HttpEnabledState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HttpEnabledState != global::Google.Cloud.Iot.V1.HttpState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HttpEnabledState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HttpConfig other) {
      if (other == null) {
        return;
      }
      if (other.HttpEnabledState != global::Google.Cloud.Iot.V1.HttpState.Unspecified) {
        HttpEnabledState = other.HttpEnabledState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HttpEnabledState = (global::Google.Cloud.Iot.V1.HttpState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            HttpEnabledState = (global::Google.Cloud.Iot.V1.HttpState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The configuration for forwarding telemetry events.
  /// </summary>
  public sealed partial class EventNotificationConfig : pb::IMessage<EventNotificationConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventNotificationConfig> _parser = new pb::MessageParser<EventNotificationConfig>(() => new EventNotificationConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventNotificationConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventNotificationConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventNotificationConfig(EventNotificationConfig other) : this() {
      subfolderMatches_ = other.subfolderMatches_;
      pubsubTopicName_ = other.pubsubTopicName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventNotificationConfig Clone() {
      return new EventNotificationConfig(this);
    }

    /// <summary>Field number for the "subfolder_matches" field.</summary>
    public const int SubfolderMatchesFieldNumber = 2;
    private string subfolderMatches_ = "";
    /// <summary>
    /// If the subfolder name matches this string exactly, this configuration will
    /// be used. The string must not include the leading '/' character. If empty,
    /// all strings are matched. This field is used only for telemetry events;
    /// subfolders are not supported for state changes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubfolderMatches {
      get { return subfolderMatches_; }
      set {
        subfolderMatches_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pubsub_topic_name" field.</summary>
    public const int PubsubTopicNameFieldNumber = 1;
    private string pubsubTopicName_ = "";
    /// <summary>
    /// A Cloud Pub/Sub topic name. For example,
    /// `projects/myProject/topics/deviceEvents`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PubsubTopicName {
      get { return pubsubTopicName_; }
      set {
        pubsubTopicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventNotificationConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventNotificationConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubfolderMatches != other.SubfolderMatches) return false;
      if (PubsubTopicName != other.PubsubTopicName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubfolderMatches.Length != 0) hash ^= SubfolderMatches.GetHashCode();
      if (PubsubTopicName.Length != 0) hash ^= PubsubTopicName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PubsubTopicName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PubsubTopicName);
      }
      if (SubfolderMatches.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubfolderMatches);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PubsubTopicName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PubsubTopicName);
      }
      if (SubfolderMatches.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubfolderMatches);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubfolderMatches.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubfolderMatches);
      }
      if (PubsubTopicName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PubsubTopicName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventNotificationConfig other) {
      if (other == null) {
        return;
      }
      if (other.SubfolderMatches.Length != 0) {
        SubfolderMatches = other.SubfolderMatches;
      }
      if (other.PubsubTopicName.Length != 0) {
        PubsubTopicName = other.PubsubTopicName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PubsubTopicName = input.ReadString();
            break;
          }
          case 18: {
            SubfolderMatches = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PubsubTopicName = input.ReadString();
            break;
          }
          case 18: {
            SubfolderMatches = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The configuration for notification of new states received from the device.
  /// </summary>
  public sealed partial class StateNotificationConfig : pb::IMessage<StateNotificationConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StateNotificationConfig> _parser = new pb::MessageParser<StateNotificationConfig>(() => new StateNotificationConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StateNotificationConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateNotificationConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateNotificationConfig(StateNotificationConfig other) : this() {
      pubsubTopicName_ = other.pubsubTopicName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateNotificationConfig Clone() {
      return new StateNotificationConfig(this);
    }

    /// <summary>Field number for the "pubsub_topic_name" field.</summary>
    public const int PubsubTopicNameFieldNumber = 1;
    private string pubsubTopicName_ = "";
    /// <summary>
    /// A Cloud Pub/Sub topic name. For example,
    /// `projects/myProject/topics/deviceEvents`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PubsubTopicName {
      get { return pubsubTopicName_; }
      set {
        pubsubTopicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StateNotificationConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StateNotificationConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PubsubTopicName != other.PubsubTopicName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PubsubTopicName.Length != 0) hash ^= PubsubTopicName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PubsubTopicName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PubsubTopicName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PubsubTopicName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PubsubTopicName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PubsubTopicName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PubsubTopicName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StateNotificationConfig other) {
      if (other == null) {
        return;
      }
      if (other.PubsubTopicName.Length != 0) {
        PubsubTopicName = other.PubsubTopicName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PubsubTopicName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PubsubTopicName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A server-stored registry credential used to validate device credentials.
  /// </summary>
  public sealed partial class RegistryCredential : pb::IMessage<RegistryCredential>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegistryCredential> _parser = new pb::MessageParser<RegistryCredential>(() => new RegistryCredential());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegistryCredential> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistryCredential() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistryCredential(RegistryCredential other) : this() {
      switch (other.CredentialCase) {
        case CredentialOneofCase.PublicKeyCertificate:
          PublicKeyCertificate = other.PublicKeyCertificate.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistryCredential Clone() {
      return new RegistryCredential(this);
    }

    /// <summary>Field number for the "public_key_certificate" field.</summary>
    public const int PublicKeyCertificateFieldNumber = 1;
    /// <summary>
    /// A public key certificate used to verify the device credentials.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.PublicKeyCertificate PublicKeyCertificate {
      get { return credentialCase_ == CredentialOneofCase.PublicKeyCertificate ? (global::Google.Cloud.Iot.V1.PublicKeyCertificate) credential_ : null; }
      set {
        credential_ = value;
        credentialCase_ = value == null ? CredentialOneofCase.None : CredentialOneofCase.PublicKeyCertificate;
      }
    }

    private object credential_;
    /// <summary>Enum of possible cases for the "credential" oneof.</summary>
    public enum CredentialOneofCase {
      None = 0,
      PublicKeyCertificate = 1,
    }
    private CredentialOneofCase credentialCase_ = CredentialOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CredentialOneofCase CredentialCase {
      get { return credentialCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCredential() {
      credentialCase_ = CredentialOneofCase.None;
      credential_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegistryCredential);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegistryCredential other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PublicKeyCertificate, other.PublicKeyCertificate)) return false;
      if (CredentialCase != other.CredentialCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (credentialCase_ == CredentialOneofCase.PublicKeyCertificate) hash ^= PublicKeyCertificate.GetHashCode();
      hash ^= (int) credentialCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (credentialCase_ == CredentialOneofCase.PublicKeyCertificate) {
        output.WriteRawTag(10);
        output.WriteMessage(PublicKeyCertificate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (credentialCase_ == CredentialOneofCase.PublicKeyCertificate) {
        output.WriteRawTag(10);
        output.WriteMessage(PublicKeyCertificate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (credentialCase_ == CredentialOneofCase.PublicKeyCertificate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicKeyCertificate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegistryCredential other) {
      if (other == null) {
        return;
      }
      switch (other.CredentialCase) {
        case CredentialOneofCase.PublicKeyCertificate:
          if (PublicKeyCertificate == null) {
            PublicKeyCertificate = new global::Google.Cloud.Iot.V1.PublicKeyCertificate();
          }
          PublicKeyCertificate.MergeFrom(other.PublicKeyCertificate);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Iot.V1.PublicKeyCertificate subBuilder = new global::Google.Cloud.Iot.V1.PublicKeyCertificate();
            if (credentialCase_ == CredentialOneofCase.PublicKeyCertificate) {
              subBuilder.MergeFrom(PublicKeyCertificate);
            }
            input.ReadMessage(subBuilder);
            PublicKeyCertificate = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Iot.V1.PublicKeyCertificate subBuilder = new global::Google.Cloud.Iot.V1.PublicKeyCertificate();
            if (credentialCase_ == CredentialOneofCase.PublicKeyCertificate) {
              subBuilder.MergeFrom(PublicKeyCertificate);
            }
            input.ReadMessage(subBuilder);
            PublicKeyCertificate = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Details of an X.509 certificate. For informational purposes only.
  /// </summary>
  public sealed partial class X509CertificateDetails : pb::IMessage<X509CertificateDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<X509CertificateDetails> _parser = new pb::MessageParser<X509CertificateDetails>(() => new X509CertificateDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<X509CertificateDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public X509CertificateDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public X509CertificateDetails(X509CertificateDetails other) : this() {
      issuer_ = other.issuer_;
      subject_ = other.subject_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      expiryTime_ = other.expiryTime_ != null ? other.expiryTime_.Clone() : null;
      signatureAlgorithm_ = other.signatureAlgorithm_;
      publicKeyType_ = other.publicKeyType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public X509CertificateDetails Clone() {
      return new X509CertificateDetails(this);
    }

    /// <summary>Field number for the "issuer" field.</summary>
    public const int IssuerFieldNumber = 1;
    private string issuer_ = "";
    /// <summary>
    /// The entity that signed the certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Issuer {
      get { return issuer_; }
      set {
        issuer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 2;
    private string subject_ = "";
    /// <summary>
    /// The entity the certificate and public key belong to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The time the certificate becomes valid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "expiry_time" field.</summary>
    public const int ExpiryTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiryTime_;
    /// <summary>
    /// The time the certificate becomes invalid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiryTime {
      get { return expiryTime_; }
      set {
        expiryTime_ = value;
      }
    }

    /// <summary>Field number for the "signature_algorithm" field.</summary>
    public const int SignatureAlgorithmFieldNumber = 5;
    private string signatureAlgorithm_ = "";
    /// <summary>
    /// The algorithm used to sign the certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignatureAlgorithm {
      get { return signatureAlgorithm_; }
      set {
        signatureAlgorithm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public_key_type" field.</summary>
    public const int PublicKeyTypeFieldNumber = 6;
    private string publicKeyType_ = "";
    /// <summary>
    /// The type of public key in the certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicKeyType {
      get { return publicKeyType_; }
      set {
        publicKeyType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as X509CertificateDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(X509CertificateDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Issuer != other.Issuer) return false;
      if (Subject != other.Subject) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(ExpiryTime, other.ExpiryTime)) return false;
      if (SignatureAlgorithm != other.SignatureAlgorithm) return false;
      if (PublicKeyType != other.PublicKeyType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Issuer.Length != 0) hash ^= Issuer.GetHashCode();
      if (Subject.Length != 0) hash ^= Subject.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (expiryTime_ != null) hash ^= ExpiryTime.GetHashCode();
      if (SignatureAlgorithm.Length != 0) hash ^= SignatureAlgorithm.GetHashCode();
      if (PublicKeyType.Length != 0) hash ^= PublicKeyType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Issuer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Issuer);
      }
      if (Subject.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Subject);
      }
      if (startTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartTime);
      }
      if (expiryTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpiryTime);
      }
      if (SignatureAlgorithm.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SignatureAlgorithm);
      }
      if (PublicKeyType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PublicKeyType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Issuer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Issuer);
      }
      if (Subject.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Subject);
      }
      if (startTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartTime);
      }
      if (expiryTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpiryTime);
      }
      if (SignatureAlgorithm.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SignatureAlgorithm);
      }
      if (PublicKeyType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PublicKeyType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Issuer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Issuer);
      }
      if (Subject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (expiryTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiryTime);
      }
      if (SignatureAlgorithm.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignatureAlgorithm);
      }
      if (PublicKeyType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKeyType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(X509CertificateDetails other) {
      if (other == null) {
        return;
      }
      if (other.Issuer.Length != 0) {
        Issuer = other.Issuer;
      }
      if (other.Subject.Length != 0) {
        Subject = other.Subject;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.expiryTime_ != null) {
        if (expiryTime_ == null) {
          ExpiryTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpiryTime.MergeFrom(other.ExpiryTime);
      }
      if (other.SignatureAlgorithm.Length != 0) {
        SignatureAlgorithm = other.SignatureAlgorithm;
      }
      if (other.PublicKeyType.Length != 0) {
        PublicKeyType = other.PublicKeyType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Issuer = input.ReadString();
            break;
          }
          case 18: {
            Subject = input.ReadString();
            break;
          }
          case 26: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 34: {
            if (expiryTime_ == null) {
              ExpiryTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiryTime);
            break;
          }
          case 42: {
            SignatureAlgorithm = input.ReadString();
            break;
          }
          case 50: {
            PublicKeyType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Issuer = input.ReadString();
            break;
          }
          case 18: {
            Subject = input.ReadString();
            break;
          }
          case 26: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 34: {
            if (expiryTime_ == null) {
              ExpiryTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiryTime);
            break;
          }
          case 42: {
            SignatureAlgorithm = input.ReadString();
            break;
          }
          case 50: {
            PublicKeyType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A public key certificate format and data.
  /// </summary>
  public sealed partial class PublicKeyCertificate : pb::IMessage<PublicKeyCertificate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublicKeyCertificate> _parser = new pb::MessageParser<PublicKeyCertificate>(() => new PublicKeyCertificate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublicKeyCertificate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicKeyCertificate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicKeyCertificate(PublicKeyCertificate other) : this() {
      format_ = other.format_;
      certificate_ = other.certificate_;
      x509Details_ = other.x509Details_ != null ? other.x509Details_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicKeyCertificate Clone() {
      return new PublicKeyCertificate(this);
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 1;
    private global::Google.Cloud.Iot.V1.PublicKeyCertificateFormat format_ = global::Google.Cloud.Iot.V1.PublicKeyCertificateFormat.UnspecifiedPublicKeyCertificateFormat;
    /// <summary>
    /// The certificate format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.PublicKeyCertificateFormat Format {
      get { return format_; }
      set {
        format_ = value;
      }
    }

    /// <summary>Field number for the "certificate" field.</summary>
    public const int CertificateFieldNumber = 2;
    private string certificate_ = "";
    /// <summary>
    /// The certificate data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Certificate {
      get { return certificate_; }
      set {
        certificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x509_details" field.</summary>
    public const int X509DetailsFieldNumber = 3;
    private global::Google.Cloud.Iot.V1.X509CertificateDetails x509Details_;
    /// <summary>
    /// [Output only] The certificate details. Used only for X.509 certificates.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.X509CertificateDetails X509Details {
      get { return x509Details_; }
      set {
        x509Details_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublicKeyCertificate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublicKeyCertificate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Format != other.Format) return false;
      if (Certificate != other.Certificate) return false;
      if (!object.Equals(X509Details, other.X509Details)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Format != global::Google.Cloud.Iot.V1.PublicKeyCertificateFormat.UnspecifiedPublicKeyCertificateFormat) hash ^= Format.GetHashCode();
      if (Certificate.Length != 0) hash ^= Certificate.GetHashCode();
      if (x509Details_ != null) hash ^= X509Details.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Format != global::Google.Cloud.Iot.V1.PublicKeyCertificateFormat.UnspecifiedPublicKeyCertificateFormat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Format);
      }
      if (Certificate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Certificate);
      }
      if (x509Details_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(X509Details);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Format != global::Google.Cloud.Iot.V1.PublicKeyCertificateFormat.UnspecifiedPublicKeyCertificateFormat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Format);
      }
      if (Certificate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Certificate);
      }
      if (x509Details_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(X509Details);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Format != global::Google.Cloud.Iot.V1.PublicKeyCertificateFormat.UnspecifiedPublicKeyCertificateFormat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Format);
      }
      if (Certificate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Certificate);
      }
      if (x509Details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(X509Details);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublicKeyCertificate other) {
      if (other == null) {
        return;
      }
      if (other.Format != global::Google.Cloud.Iot.V1.PublicKeyCertificateFormat.UnspecifiedPublicKeyCertificateFormat) {
        Format = other.Format;
      }
      if (other.Certificate.Length != 0) {
        Certificate = other.Certificate;
      }
      if (other.x509Details_ != null) {
        if (x509Details_ == null) {
          X509Details = new global::Google.Cloud.Iot.V1.X509CertificateDetails();
        }
        X509Details.MergeFrom(other.X509Details);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Format = (global::Google.Cloud.Iot.V1.PublicKeyCertificateFormat) input.ReadEnum();
            break;
          }
          case 18: {
            Certificate = input.ReadString();
            break;
          }
          case 26: {
            if (x509Details_ == null) {
              X509Details = new global::Google.Cloud.Iot.V1.X509CertificateDetails();
            }
            input.ReadMessage(X509Details);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Format = (global::Google.Cloud.Iot.V1.PublicKeyCertificateFormat) input.ReadEnum();
            break;
          }
          case 18: {
            Certificate = input.ReadString();
            break;
          }
          case 26: {
            if (x509Details_ == null) {
              X509Details = new global::Google.Cloud.Iot.V1.X509CertificateDetails();
            }
            input.ReadMessage(X509Details);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A server-stored device credential used for authentication.
  /// </summary>
  public sealed partial class DeviceCredential : pb::IMessage<DeviceCredential>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceCredential> _parser = new pb::MessageParser<DeviceCredential>(() => new DeviceCredential());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceCredential> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceCredential() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceCredential(DeviceCredential other) : this() {
      expirationTime_ = other.expirationTime_ != null ? other.expirationTime_.Clone() : null;
      switch (other.CredentialCase) {
        case CredentialOneofCase.PublicKey:
          PublicKey = other.PublicKey.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceCredential Clone() {
      return new DeviceCredential(this);
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 2;
    /// <summary>
    /// A public key used to verify the signature of JSON Web Tokens (JWTs).
    /// When adding a new device credential, either via device creation or via
    /// modifications, this public key credential may be required to be signed by
    /// one of the registry level certificates. More specifically, if the
    /// registry contains at least one certificate, any new device credential
    /// must be signed by one of the registry certificates. As a result,
    /// when the registry contains certificates, only X.509 certificates are
    /// accepted as device credentials. However, if the registry does
    /// not contain a certificate, self-signed certificates and public keys will
    /// be accepted. New device credentials must be different from every
    /// registry-level certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.PublicKeyCredential PublicKey {
      get { return credentialCase_ == CredentialOneofCase.PublicKey ? (global::Google.Cloud.Iot.V1.PublicKeyCredential) credential_ : null; }
      set {
        credential_ = value;
        credentialCase_ = value == null ? CredentialOneofCase.None : CredentialOneofCase.PublicKey;
      }
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expirationTime_;
    /// <summary>
    /// [Optional] The time at which this credential becomes invalid. This
    /// credential will be ignored for new client authentication requests after
    /// this timestamp; however, it will not be automatically deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    private object credential_;
    /// <summary>Enum of possible cases for the "credential" oneof.</summary>
    public enum CredentialOneofCase {
      None = 0,
      PublicKey = 2,
    }
    private CredentialOneofCase credentialCase_ = CredentialOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CredentialOneofCase CredentialCase {
      get { return credentialCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCredential() {
      credentialCase_ = CredentialOneofCase.None;
      credential_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceCredential);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceCredential other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PublicKey, other.PublicKey)) return false;
      if (!object.Equals(ExpirationTime, other.ExpirationTime)) return false;
      if (CredentialCase != other.CredentialCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (credentialCase_ == CredentialOneofCase.PublicKey) hash ^= PublicKey.GetHashCode();
      if (expirationTime_ != null) hash ^= ExpirationTime.GetHashCode();
      hash ^= (int) credentialCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (credentialCase_ == CredentialOneofCase.PublicKey) {
        output.WriteRawTag(18);
        output.WriteMessage(PublicKey);
      }
      if (expirationTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExpirationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (credentialCase_ == CredentialOneofCase.PublicKey) {
        output.WriteRawTag(18);
        output.WriteMessage(PublicKey);
      }
      if (expirationTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExpirationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (credentialCase_ == CredentialOneofCase.PublicKey) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicKey);
      }
      if (expirationTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpirationTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceCredential other) {
      if (other == null) {
        return;
      }
      if (other.expirationTime_ != null) {
        if (expirationTime_ == null) {
          ExpirationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpirationTime.MergeFrom(other.ExpirationTime);
      }
      switch (other.CredentialCase) {
        case CredentialOneofCase.PublicKey:
          if (PublicKey == null) {
            PublicKey = new global::Google.Cloud.Iot.V1.PublicKeyCredential();
          }
          PublicKey.MergeFrom(other.PublicKey);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::Google.Cloud.Iot.V1.PublicKeyCredential subBuilder = new global::Google.Cloud.Iot.V1.PublicKeyCredential();
            if (credentialCase_ == CredentialOneofCase.PublicKey) {
              subBuilder.MergeFrom(PublicKey);
            }
            input.ReadMessage(subBuilder);
            PublicKey = subBuilder;
            break;
          }
          case 50: {
            if (expirationTime_ == null) {
              ExpirationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpirationTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            global::Google.Cloud.Iot.V1.PublicKeyCredential subBuilder = new global::Google.Cloud.Iot.V1.PublicKeyCredential();
            if (credentialCase_ == CredentialOneofCase.PublicKey) {
              subBuilder.MergeFrom(PublicKey);
            }
            input.ReadMessage(subBuilder);
            PublicKey = subBuilder;
            break;
          }
          case 50: {
            if (expirationTime_ == null) {
              ExpirationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpirationTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A public key format and data.
  /// </summary>
  public sealed partial class PublicKeyCredential : pb::IMessage<PublicKeyCredential>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublicKeyCredential> _parser = new pb::MessageParser<PublicKeyCredential>(() => new PublicKeyCredential());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublicKeyCredential> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicKeyCredential() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicKeyCredential(PublicKeyCredential other) : this() {
      format_ = other.format_;
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicKeyCredential Clone() {
      return new PublicKeyCredential(this);
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 1;
    private global::Google.Cloud.Iot.V1.PublicKeyFormat format_ = global::Google.Cloud.Iot.V1.PublicKeyFormat.UnspecifiedPublicKeyFormat;
    /// <summary>
    /// The format of the key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.PublicKeyFormat Format {
      get { return format_; }
      set {
        format_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private string key_ = "";
    /// <summary>
    /// The key data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublicKeyCredential);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublicKeyCredential other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Format != other.Format) return false;
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Format != global::Google.Cloud.Iot.V1.PublicKeyFormat.UnspecifiedPublicKeyFormat) hash ^= Format.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Format != global::Google.Cloud.Iot.V1.PublicKeyFormat.UnspecifiedPublicKeyFormat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Format);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Format != global::Google.Cloud.Iot.V1.PublicKeyFormat.UnspecifiedPublicKeyFormat) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Format);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Format != global::Google.Cloud.Iot.V1.PublicKeyFormat.UnspecifiedPublicKeyFormat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Format);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublicKeyCredential other) {
      if (other == null) {
        return;
      }
      if (other.Format != global::Google.Cloud.Iot.V1.PublicKeyFormat.UnspecifiedPublicKeyFormat) {
        Format = other.Format;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Format = (global::Google.Cloud.Iot.V1.PublicKeyFormat) input.ReadEnum();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Format = (global::Google.Cloud.Iot.V1.PublicKeyFormat) input.ReadEnum();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The device configuration. Eventually delivered to devices.
  /// </summary>
  public sealed partial class DeviceConfig : pb::IMessage<DeviceConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceConfig> _parser = new pb::MessageParser<DeviceConfig>(() => new DeviceConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConfig(DeviceConfig other) : this() {
      version_ = other.version_;
      cloudUpdateTime_ = other.cloudUpdateTime_ != null ? other.cloudUpdateTime_.Clone() : null;
      deviceAckTime_ = other.deviceAckTime_ != null ? other.deviceAckTime_.Clone() : null;
      binaryData_ = other.binaryData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceConfig Clone() {
      return new DeviceConfig(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private long version_;
    /// <summary>
    /// [Output only] The version of this update. The version number is assigned by
    /// the server, and is always greater than 0 after device creation. The
    /// version must be 0 on the `CreateDevice` request if a `config` is
    /// specified; the response of `CreateDevice` will always have a value of 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "cloud_update_time" field.</summary>
    public const int CloudUpdateTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp cloudUpdateTime_;
    /// <summary>
    /// [Output only] The time at which this configuration version was updated in
    /// Cloud IoT Core. This timestamp is set by the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CloudUpdateTime {
      get { return cloudUpdateTime_; }
      set {
        cloudUpdateTime_ = value;
      }
    }

    /// <summary>Field number for the "device_ack_time" field.</summary>
    public const int DeviceAckTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp deviceAckTime_;
    /// <summary>
    /// [Output only] The time at which Cloud IoT Core received the
    /// acknowledgment from the device, indicating that the device has received
    /// this configuration version. If this field is not present, the device has
    /// not yet acknowledged that it received this version. Note that when
    /// the config was sent to the device, many config versions may have been
    /// available in Cloud IoT Core while the device was disconnected, and on
    /// connection, only the latest version is sent to the device. Some
    /// versions may never be sent to the device, and therefore are never
    /// acknowledged. This timestamp is set by Cloud IoT Core.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DeviceAckTime {
      get { return deviceAckTime_; }
      set {
        deviceAckTime_ = value;
      }
    }

    /// <summary>Field number for the "binary_data" field.</summary>
    public const int BinaryDataFieldNumber = 4;
    private pb::ByteString binaryData_ = pb::ByteString.Empty;
    /// <summary>
    /// The device configuration data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BinaryData {
      get { return binaryData_; }
      set {
        binaryData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (!object.Equals(CloudUpdateTime, other.CloudUpdateTime)) return false;
      if (!object.Equals(DeviceAckTime, other.DeviceAckTime)) return false;
      if (BinaryData != other.BinaryData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0L) hash ^= Version.GetHashCode();
      if (cloudUpdateTime_ != null) hash ^= CloudUpdateTime.GetHashCode();
      if (deviceAckTime_ != null) hash ^= DeviceAckTime.GetHashCode();
      if (BinaryData.Length != 0) hash ^= BinaryData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Version != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Version);
      }
      if (cloudUpdateTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CloudUpdateTime);
      }
      if (deviceAckTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DeviceAckTime);
      }
      if (BinaryData.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(BinaryData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Version != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Version);
      }
      if (cloudUpdateTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CloudUpdateTime);
      }
      if (deviceAckTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DeviceAckTime);
      }
      if (BinaryData.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(BinaryData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Version);
      }
      if (cloudUpdateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloudUpdateTime);
      }
      if (deviceAckTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceAckTime);
      }
      if (BinaryData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BinaryData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceConfig other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0L) {
        Version = other.Version;
      }
      if (other.cloudUpdateTime_ != null) {
        if (cloudUpdateTime_ == null) {
          CloudUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CloudUpdateTime.MergeFrom(other.CloudUpdateTime);
      }
      if (other.deviceAckTime_ != null) {
        if (deviceAckTime_ == null) {
          DeviceAckTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DeviceAckTime.MergeFrom(other.DeviceAckTime);
      }
      if (other.BinaryData.Length != 0) {
        BinaryData = other.BinaryData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt64();
            break;
          }
          case 18: {
            if (cloudUpdateTime_ == null) {
              CloudUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CloudUpdateTime);
            break;
          }
          case 26: {
            if (deviceAckTime_ == null) {
              DeviceAckTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeviceAckTime);
            break;
          }
          case 34: {
            BinaryData = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadInt64();
            break;
          }
          case 18: {
            if (cloudUpdateTime_ == null) {
              CloudUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CloudUpdateTime);
            break;
          }
          case 26: {
            if (deviceAckTime_ == null) {
              DeviceAckTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeviceAckTime);
            break;
          }
          case 34: {
            BinaryData = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The device state, as reported by the device.
  /// </summary>
  public sealed partial class DeviceState : pb::IMessage<DeviceState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceState> _parser = new pb::MessageParser<DeviceState>(() => new DeviceState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceState(DeviceState other) : this() {
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      binaryData_ = other.binaryData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceState Clone() {
      return new DeviceState(this);
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// [Output only] The time at which this state version was updated in Cloud
    /// IoT Core.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "binary_data" field.</summary>
    public const int BinaryDataFieldNumber = 2;
    private pb::ByteString binaryData_ = pb::ByteString.Empty;
    /// <summary>
    /// The device state data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BinaryData {
      get { return binaryData_; }
      set {
        binaryData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (BinaryData != other.BinaryData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (BinaryData.Length != 0) hash ^= BinaryData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (updateTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UpdateTime);
      }
      if (BinaryData.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BinaryData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (updateTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UpdateTime);
      }
      if (BinaryData.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BinaryData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (BinaryData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BinaryData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceState other) {
      if (other == null) {
        return;
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.BinaryData.Length != 0) {
        BinaryData = other.BinaryData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 18: {
            BinaryData = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 18: {
            BinaryData = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
