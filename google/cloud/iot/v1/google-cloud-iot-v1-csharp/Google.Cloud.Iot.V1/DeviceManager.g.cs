// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/iot/v1/device_manager.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Iot.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/iot/v1/device_manager.proto</summary>
  public static partial class DeviceManagerReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/iot/v1/device_manager.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeviceManagerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihnb29nbGUvY2xvdWQvaW90L3YxL2RldmljZV9tYW5hZ2VyLnByb3RvEhNn",
            "b29nbGUuY2xvdWQuaW90LnYxGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnBy",
            "b3RvGhdnb29nbGUvYXBpL2NsaWVudC5wcm90bxofZ29vZ2xlL2FwaS9maWVs",
            "ZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxoj",
            "Z29vZ2xlL2Nsb3VkL2lvdC92MS9yZXNvdXJjZXMucHJvdG8aHmdvb2dsZS9p",
            "YW0vdjEvaWFtX3BvbGljeS5wcm90bxoaZ29vZ2xlL2lhbS92MS9wb2xpY3ku",
            "cHJvdG8aG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90bxogZ29vZ2xlL3By",
            "b3RvYnVmL2ZpZWxkX21hc2sucHJvdG8aF2dvb2dsZS9ycGMvc3RhdHVzLnBy",
            "b3RvIpsBChtDcmVhdGVEZXZpY2VSZWdpc3RyeVJlcXVlc3QSOQoGcGFyZW50",
            "GAEgASgJQingQQL6QSMKIWxvY2F0aW9ucy5nb29nbGVhcGlzLmNvbS9Mb2Nh",
            "dGlvbhJBCg9kZXZpY2VfcmVnaXN0cnkYAiABKAsyIy5nb29nbGUuY2xvdWQu",
            "aW90LnYxLkRldmljZVJlZ2lzdHJ5QgPgQQIiUgoYR2V0RGV2aWNlUmVnaXN0",
            "cnlSZXF1ZXN0EjYKBG5hbWUYASABKAlCKOBBAvpBIgogY2xvdWRpb3QuZ29v",
            "Z2xlYXBpcy5jb20vUmVnaXN0cnkiVQobRGVsZXRlRGV2aWNlUmVnaXN0cnlS",
            "ZXF1ZXN0EjYKBG5hbWUYASABKAlCKOBBAvpBIgogY2xvdWRpb3QuZ29vZ2xl",
            "YXBpcy5jb20vUmVnaXN0cnkilgEKG1VwZGF0ZURldmljZVJlZ2lzdHJ5UmVx",
            "dWVzdBJBCg9kZXZpY2VfcmVnaXN0cnkYASABKAsyIy5nb29nbGUuY2xvdWQu",
            "aW90LnYxLkRldmljZVJlZ2lzdHJ5QgPgQQISNAoLdXBkYXRlX21hc2sYAiAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrQgPgQQIifwobTGlzdERl",
            "dmljZVJlZ2lzdHJpZXNSZXF1ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEj",
            "CiFsb2NhdGlvbnMuZ29vZ2xlYXBpcy5jb20vTG9jYXRpb24SEQoJcGFnZV9z",
            "aXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkidwocTGlzdERldmljZVJl",
            "Z2lzdHJpZXNSZXNwb25zZRI+ChFkZXZpY2VfcmVnaXN0cmllcxgBIAMoCzIj",
            "Lmdvb2dsZS5jbG91ZC5pb3QudjEuRGV2aWNlUmVnaXN0cnkSFwoPbmV4dF9w",
            "YWdlX3Rva2VuGAIgASgJIoEBChNDcmVhdGVEZXZpY2VSZXF1ZXN0EjgKBnBh",
            "cmVudBgBIAEoCUIo4EEC+kEiCiBjbG91ZGlvdC5nb29nbGVhcGlzLmNvbS9S",
            "ZWdpc3RyeRIwCgZkZXZpY2UYAiABKAsyGy5nb29nbGUuY2xvdWQuaW90LnYx",
            "LkRldmljZUID4EECIngKEEdldERldmljZVJlcXVlc3QSNAoEbmFtZRgBIAEo",
            "CUIm4EEC+kEgCh5jbG91ZGlvdC5nb29nbGVhcGlzLmNvbS9EZXZpY2USLgoK",
            "ZmllbGRfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2si",
            "fQoTVXBkYXRlRGV2aWNlUmVxdWVzdBIwCgZkZXZpY2UYAiABKAsyGy5nb29n",
            "bGUuY2xvdWQuaW90LnYxLkRldmljZUID4EECEjQKC3VwZGF0ZV9tYXNrGAMg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFza0ID4EECIksKE0RlbGV0",
            "ZURldmljZVJlcXVlc3QSNAoEbmFtZRgBIAEoCUIm4EEC+kEgCh5jbG91ZGlv",
            "dC5nb29nbGVhcGlzLmNvbS9EZXZpY2UimAIKEkxpc3REZXZpY2VzUmVxdWVz",
            "dBI4CgZwYXJlbnQYASABKAlCKOBBAvpBIgogY2xvdWRpb3QuZ29vZ2xlYXBp",
            "cy5jb20vUmVnaXN0cnkSFgoOZGV2aWNlX251bV9pZHMYAiADKAQSEgoKZGV2",
            "aWNlX2lkcxgDIAMoCRIuCgpmaWVsZF9tYXNrGAQgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLkZpZWxkTWFzaxJFChRnYXRld2F5X2xpc3Rfb3B0aW9ucxgGIAEo",
            "CzInLmdvb2dsZS5jbG91ZC5pb3QudjEuR2F0ZXdheUxpc3RPcHRpb25zEhEK",
            "CXBhZ2Vfc2l6ZRhkIAEoBRISCgpwYWdlX3Rva2VuGGUgASgJIp0BChJHYXRl",
            "d2F5TGlzdE9wdGlvbnMSOAoMZ2F0ZXdheV90eXBlGAEgASgOMiAuZ29vZ2xl",
            "LmNsb3VkLmlvdC52MS5HYXRld2F5VHlwZUgAEiEKF2Fzc29jaWF0aW9uc19n",
            "YXRld2F5X2lkGAIgASgJSAASIAoWYXNzb2NpYXRpb25zX2RldmljZV9pZBgD",
            "IAEoCUgAQggKBmZpbHRlciJcChNMaXN0RGV2aWNlc1Jlc3BvbnNlEiwKB2Rl",
            "dmljZXMYASADKAsyGy5nb29nbGUuY2xvdWQuaW90LnYxLkRldmljZRIXCg9u",
            "ZXh0X3BhZ2VfdG9rZW4YAiABKAkijQEKIE1vZGlmeUNsb3VkVG9EZXZpY2VD",
            "b25maWdSZXF1ZXN0EjQKBG5hbWUYASABKAlCJuBBAvpBIAoeY2xvdWRpb3Qu",
            "Z29vZ2xlYXBpcy5jb20vRGV2aWNlEhkKEXZlcnNpb25fdG9fdXBkYXRlGAIg",
            "ASgDEhgKC2JpbmFyeV9kYXRhGAMgASgMQgPgQQIibQofTGlzdERldmljZUNv",
            "bmZpZ1ZlcnNpb25zUmVxdWVzdBI0CgRuYW1lGAEgASgJQibgQQL6QSAKHmNs",
            "b3VkaW90Lmdvb2dsZWFwaXMuY29tL0RldmljZRIUCgxudW1fdmVyc2lvbnMY",
            "AiABKAUiXQogTGlzdERldmljZUNvbmZpZ1ZlcnNpb25zUmVzcG9uc2USOQoO",
            "ZGV2aWNlX2NvbmZpZ3MYASADKAsyIS5nb29nbGUuY2xvdWQuaW90LnYxLkRl",
            "dmljZUNvbmZpZyJjChdMaXN0RGV2aWNlU3RhdGVzUmVxdWVzdBI0CgRuYW1l",
            "GAEgASgJQibgQQL6QSAKHmNsb3VkaW90Lmdvb2dsZWFwaXMuY29tL0Rldmlj",
            "ZRISCgpudW1fc3RhdGVzGAIgASgFIlMKGExpc3REZXZpY2VTdGF0ZXNSZXNw",
            "b25zZRI3Cg1kZXZpY2Vfc3RhdGVzGAEgAygLMiAuZ29vZ2xlLmNsb3VkLmlv",
            "dC52MS5EZXZpY2VTdGF0ZSJ/ChpTZW5kQ29tbWFuZFRvRGV2aWNlUmVxdWVz",
            "dBI0CgRuYW1lGAEgASgJQibgQQL6QSAKHmNsb3VkaW90Lmdvb2dsZWFwaXMu",
            "Y29tL0RldmljZRIYCgtiaW5hcnlfZGF0YRgCIAEoDEID4EECEhEKCXN1YmZv",
            "bGRlchgDIAEoCSIdChtTZW5kQ29tbWFuZFRvRGV2aWNlUmVzcG9uc2UihwEK",
            "GkJpbmREZXZpY2VUb0dhdGV3YXlSZXF1ZXN0EjgKBnBhcmVudBgBIAEoCUIo",
            "4EEC+kEiCiBjbG91ZGlvdC5nb29nbGVhcGlzLmNvbS9SZWdpc3RyeRIXCgpn",
            "YXRld2F5X2lkGAIgASgJQgPgQQISFgoJZGV2aWNlX2lkGAMgASgJQgPgQQIi",
            "HQobQmluZERldmljZVRvR2F0ZXdheVJlc3BvbnNlIosBCh5VbmJpbmREZXZp",
            "Y2VGcm9tR2F0ZXdheVJlcXVlc3QSOAoGcGFyZW50GAEgASgJQijgQQL6QSIK",
            "IGNsb3VkaW90Lmdvb2dsZWFwaXMuY29tL1JlZ2lzdHJ5EhcKCmdhdGV3YXlf",
            "aWQYAiABKAlCA+BBAhIWCglkZXZpY2VfaWQYAyABKAlCA+BBAiIhCh9VbmJp",
            "bmREZXZpY2VGcm9tR2F0ZXdheVJlc3BvbnNlMqYmCg1EZXZpY2VNYW5hZ2Vy",
            "Es8BChRDcmVhdGVEZXZpY2VSZWdpc3RyeRIwLmdvb2dsZS5jbG91ZC5pb3Qu",
            "djEuQ3JlYXRlRGV2aWNlUmVnaXN0cnlSZXF1ZXN0GiMuZ29vZ2xlLmNsb3Vk",
            "LmlvdC52MS5EZXZpY2VSZWdpc3RyeSJggtPkkwJBIi4vdjEve3BhcmVudD1w",
            "cm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9yZWdpc3RyaWVzOg9kZXZpY2VfcmVn",
            "aXN0cnnaQRZwYXJlbnQsZGV2aWNlX3JlZ2lzdHJ5EqYBChFHZXREZXZpY2VS",
            "ZWdpc3RyeRItLmdvb2dsZS5jbG91ZC5pb3QudjEuR2V0RGV2aWNlUmVnaXN0",
            "cnlSZXF1ZXN0GiMuZ29vZ2xlLmNsb3VkLmlvdC52MS5EZXZpY2VSZWdpc3Ry",
            "eSI9gtPkkwIwEi4vdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9y",
            "ZWdpc3RyaWVzLyp92kEEbmFtZRLkAQoUVXBkYXRlRGV2aWNlUmVnaXN0cnkS",
            "MC5nb29nbGUuY2xvdWQuaW90LnYxLlVwZGF0ZURldmljZVJlZ2lzdHJ5UmVx",
            "dWVzdBojLmdvb2dsZS5jbG91ZC5pb3QudjEuRGV2aWNlUmVnaXN0cnkidYLT",
            "5JMCUTI+L3YxL3tkZXZpY2VfcmVnaXN0cnkubmFtZT1wcm9qZWN0cy8qL2xv",
            "Y2F0aW9ucy8qL3JlZ2lzdHJpZXMvKn06D2RldmljZV9yZWdpc3RyedpBG2Rl",
            "dmljZV9yZWdpc3RyeSx1cGRhdGVfbWFzaxKfAQoURGVsZXRlRGV2aWNlUmVn",
            "aXN0cnkSMC5nb29nbGUuY2xvdWQuaW90LnYxLkRlbGV0ZURldmljZVJlZ2lz",
            "dHJ5UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSI9gtPkkwIwKi4v",
            "djEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9yZWdpc3RyaWVzLyp9",
            "2kEEbmFtZRK8AQoUTGlzdERldmljZVJlZ2lzdHJpZXMSMC5nb29nbGUuY2xv",
            "dWQuaW90LnYxLkxpc3REZXZpY2VSZWdpc3RyaWVzUmVxdWVzdBoxLmdvb2ds",
            "ZS5jbG91ZC5pb3QudjEuTGlzdERldmljZVJlZ2lzdHJpZXNSZXNwb25zZSI/",
            "gtPkkwIwEi4vdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9y",
            "ZWdpc3RyaWVz2kEGcGFyZW50Eq8BCgxDcmVhdGVEZXZpY2USKC5nb29nbGUu",
            "Y2xvdWQuaW90LnYxLkNyZWF0ZURldmljZVJlcXVlc3QaGy5nb29nbGUuY2xv",
            "dWQuaW90LnYxLkRldmljZSJYgtPkkwJCIjgvdjEve3BhcmVudD1wcm9qZWN0",
            "cy8qL2xvY2F0aW9ucy8qL3JlZ2lzdHJpZXMvKn0vZGV2aWNlczoGZGV2aWNl",
            "2kENcGFyZW50LGRldmljZRLeAQoJR2V0RGV2aWNlEiUuZ29vZ2xlLmNsb3Vk",
            "LmlvdC52MS5HZXREZXZpY2VSZXF1ZXN0GhsuZ29vZ2xlLmNsb3VkLmlvdC52",
            "MS5EZXZpY2UijAGC0+STAn8SOC92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0",
            "aW9ucy8qL3JlZ2lzdHJpZXMvKi9kZXZpY2VzLyp9WkMSQS92MS97bmFtZT1w",
            "cm9qZWN0cy8qL2xvY2F0aW9ucy8qL3JlZ2lzdHJpZXMvKi9ncm91cHMvKi9k",
            "ZXZpY2VzLyp92kEEbmFtZRKRAgoMVXBkYXRlRGV2aWNlEiguZ29vZ2xlLmNs",
            "b3VkLmlvdC52MS5VcGRhdGVEZXZpY2VSZXF1ZXN0GhsuZ29vZ2xlLmNsb3Vk",
            "LmlvdC52MS5EZXZpY2UiuQGC0+STAp0BMj8vdjEve2RldmljZS5uYW1lPXBy",
            "b2plY3RzLyovbG9jYXRpb25zLyovcmVnaXN0cmllcy8qL2RldmljZXMvKn06",
            "BmRldmljZVpSMkgvdjEve2RldmljZS5uYW1lPXByb2plY3RzLyovbG9jYXRp",
            "b25zLyovcmVnaXN0cmllcy8qL2dyb3Vwcy8qL2RldmljZXMvKn06BmRldmlj",
            "ZdpBEmRldmljZSx1cGRhdGVfbWFzaxKZAQoMRGVsZXRlRGV2aWNlEiguZ29v",
            "Z2xlLmNsb3VkLmlvdC52MS5EZWxldGVEZXZpY2VSZXF1ZXN0GhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5IkeC0+STAjoqOC92MS97bmFtZT1wcm9qZWN0cy8q",
            "L2xvY2F0aW9ucy8qL3JlZ2lzdHJpZXMvKi9kZXZpY2VzLyp92kEEbmFtZRLx",
            "AQoLTGlzdERldmljZXMSJy5nb29nbGUuY2xvdWQuaW90LnYxLkxpc3REZXZp",
            "Y2VzUmVxdWVzdBooLmdvb2dsZS5jbG91ZC5pb3QudjEuTGlzdERldmljZXNS",
            "ZXNwb25zZSKOAYLT5JMCfxI4L3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2Nh",
            "dGlvbnMvKi9yZWdpc3RyaWVzLyp9L2RldmljZXNaQxJBL3YxL3twYXJlbnQ9",
            "cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9yZWdpc3RyaWVzLyovZ3JvdXBzLyp9",
            "L2RldmljZXPaQQZwYXJlbnQSywIKGU1vZGlmeUNsb3VkVG9EZXZpY2VDb25m",
            "aWcSNS5nb29nbGUuY2xvdWQuaW90LnYxLk1vZGlmeUNsb3VkVG9EZXZpY2VD",
            "b25maWdSZXF1ZXN0GiEuZ29vZ2xlLmNsb3VkLmlvdC52MS5EZXZpY2VDb25m",
            "aWci0wGC0+STArkBIlIvdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMv",
            "Ki9yZWdpc3RyaWVzLyovZGV2aWNlcy8qfTptb2RpZnlDbG91ZFRvRGV2aWNl",
            "Q29uZmlnOgEqWmAiWy92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8q",
            "L3JlZ2lzdHJpZXMvKi9ncm91cHMvKi9kZXZpY2VzLyp9Om1vZGlmeUNsb3Vk",
            "VG9EZXZpY2VDb25maWc6ASraQRBuYW1lLGJpbmFyeV9kYXRhErUCChhMaXN0",
            "RGV2aWNlQ29uZmlnVmVyc2lvbnMSNC5nb29nbGUuY2xvdWQuaW90LnYxLkxp",
            "c3REZXZpY2VDb25maWdWZXJzaW9uc1JlcXVlc3QaNS5nb29nbGUuY2xvdWQu",
            "aW90LnYxLkxpc3REZXZpY2VDb25maWdWZXJzaW9uc1Jlc3BvbnNlIqsBgtPk",
            "kwKdARJHL3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovcmVnaXN0",
            "cmllcy8qL2RldmljZXMvKn0vY29uZmlnVmVyc2lvbnNaUhJQL3YxL3tuYW1l",
            "PXByb2plY3RzLyovbG9jYXRpb25zLyovcmVnaXN0cmllcy8qL2dyb3Vwcy8q",
            "L2RldmljZXMvKn0vY29uZmlnVmVyc2lvbnPaQQRuYW1lEo0CChBMaXN0RGV2",
            "aWNlU3RhdGVzEiwuZ29vZ2xlLmNsb3VkLmlvdC52MS5MaXN0RGV2aWNlU3Rh",
            "dGVzUmVxdWVzdBotLmdvb2dsZS5jbG91ZC5pb3QudjEuTGlzdERldmljZVN0",
            "YXRlc1Jlc3BvbnNlIpsBgtPkkwKNARI/L3YxL3tuYW1lPXByb2plY3RzLyov",
            "bG9jYXRpb25zLyovcmVnaXN0cmllcy8qL2RldmljZXMvKn0vc3RhdGVzWkoS",
            "SC92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3JlZ2lzdHJpZXMv",
            "Ki9ncm91cHMvKi9kZXZpY2VzLyp9L3N0YXRlc9pBBG5hbWUS+AEKDFNldElh",
            "bVBvbGljeRIiLmdvb2dsZS5pYW0udjEuU2V0SWFtUG9saWN5UmVxdWVzdBoV",
            "Lmdvb2dsZS5pYW0udjEuUG9saWN5IqwBgtPkkwKTASI/L3YxL3tyZXNvdXJj",
            "ZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3JlZ2lzdHJpZXMvKn06c2V0SWFt",
            "UG9saWN5OgEqWk0iSC92MS97cmVzb3VyY2U9cHJvamVjdHMvKi9sb2NhdGlv",
            "bnMvKi9yZWdpc3RyaWVzLyovZ3JvdXBzLyp9OnNldElhbVBvbGljeToBKtpB",
            "D3Jlc291cmNlLHBvbGljeRLxAQoMR2V0SWFtUG9saWN5EiIuZ29vZ2xlLmlh",
            "bS52MS5HZXRJYW1Qb2xpY3lSZXF1ZXN0GhUuZ29vZ2xlLmlhbS52MS5Qb2xp",
            "Y3kipQGC0+STApMBIj8vdjEve3Jlc291cmNlPXByb2plY3RzLyovbG9jYXRp",
            "b25zLyovcmVnaXN0cmllcy8qfTpnZXRJYW1Qb2xpY3k6ASpaTSJIL3YxL3ty",
            "ZXNvdXJjZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3JlZ2lzdHJpZXMvKi9n",
            "cm91cHMvKn06Z2V0SWFtUG9saWN5OgEq2kEIcmVzb3VyY2USqQIKElRlc3RJ",
            "YW1QZXJtaXNzaW9ucxIoLmdvb2dsZS5pYW0udjEuVGVzdElhbVBlcm1pc3Np",
            "b25zUmVxdWVzdBopLmdvb2dsZS5pYW0udjEuVGVzdElhbVBlcm1pc3Npb25z",
            "UmVzcG9uc2UivQGC0+STAp8BIkUvdjEve3Jlc291cmNlPXByb2plY3RzLyov",
            "bG9jYXRpb25zLyovcmVnaXN0cmllcy8qfTp0ZXN0SWFtUGVybWlzc2lvbnM6",
            "ASpaUyJOL3YxL3tyZXNvdXJjZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3Jl",
            "Z2lzdHJpZXMvKi9ncm91cHMvKn06dGVzdElhbVBlcm1pc3Npb25zOgEq2kEU",
            "cmVzb3VyY2UscGVybWlzc2lvbnMS3wIKE1NlbmRDb21tYW5kVG9EZXZpY2US",
            "Ly5nb29nbGUuY2xvdWQuaW90LnYxLlNlbmRDb21tYW5kVG9EZXZpY2VSZXF1",
            "ZXN0GjAuZ29vZ2xlLmNsb3VkLmlvdC52MS5TZW5kQ29tbWFuZFRvRGV2aWNl",
            "UmVzcG9uc2Ui5AGC0+STAq0BIkwvdjEve25hbWU9cHJvamVjdHMvKi9sb2Nh",
            "dGlvbnMvKi9yZWdpc3RyaWVzLyovZGV2aWNlcy8qfTpzZW5kQ29tbWFuZFRv",
            "RGV2aWNlOgEqWloiVS92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8q",
            "L3JlZ2lzdHJpZXMvKi9ncm91cHMvKi9kZXZpY2VzLyp9OnNlbmRDb21tYW5k",
            "VG9EZXZpY2U6ASraQRBuYW1lLGJpbmFyeV9kYXRh2kEabmFtZSxiaW5hcnlf",
            "ZGF0YSxzdWJmb2xkZXISvQIKE0JpbmREZXZpY2VUb0dhdGV3YXkSLy5nb29n",
            "bGUuY2xvdWQuaW90LnYxLkJpbmREZXZpY2VUb0dhdGV3YXlSZXF1ZXN0GjAu",
            "Z29vZ2xlLmNsb3VkLmlvdC52MS5CaW5kRGV2aWNlVG9HYXRld2F5UmVzcG9u",
            "c2UiwgGC0+STAp0BIkQvdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9u",
            "cy8qL3JlZ2lzdHJpZXMvKn06YmluZERldmljZVRvR2F0ZXdheToBKlpSIk0v",
            "djEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3JlZ2lzdHJpZXMv",
            "Ki9ncm91cHMvKn06YmluZERldmljZVRvR2F0ZXdheToBKtpBG3BhcmVudCxn",
            "YXRld2F5X2lkLGRldmljZV9pZBLRAgoXVW5iaW5kRGV2aWNlRnJvbUdhdGV3",
            "YXkSMy5nb29nbGUuY2xvdWQuaW90LnYxLlVuYmluZERldmljZUZyb21HYXRl",
            "d2F5UmVxdWVzdBo0Lmdvb2dsZS5jbG91ZC5pb3QudjEuVW5iaW5kRGV2aWNl",
            "RnJvbUdhdGV3YXlSZXNwb25zZSLKAYLT5JMCpQEiSC92MS97cGFyZW50PXBy",
            "b2plY3RzLyovbG9jYXRpb25zLyovcmVnaXN0cmllcy8qfTp1bmJpbmREZXZp",
            "Y2VGcm9tR2F0ZXdheToBKlpWIlEvdjEve3BhcmVudD1wcm9qZWN0cy8qL2xv",
            "Y2F0aW9ucy8qL3JlZ2lzdHJpZXMvKi9ncm91cHMvKn06dW5iaW5kRGV2aWNl",
            "RnJvbUdhdGV3YXk6ASraQRtwYXJlbnQsZ2F0ZXdheV9pZCxkZXZpY2VfaWQa",
            "dMpBF2Nsb3VkaW90Lmdvb2dsZWFwaXMuY29t0kFXaHR0cHM6Ly93d3cuZ29v",
            "Z2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxodHRwczovL3d3dy5n",
            "b29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkaW90QmoKF2NvbS5nb29nbGUuY2xv",
            "dWQuaW90LnYxQhJEZXZpY2VNYW5hZ2VyUHJvdG9QAVo2Z29vZ2xlLmdvbGFu",
            "Zy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9jbG91ZC9pb3QvdjE7aW90+AEB",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Iot.V1.ResourcesReflection.Descriptor, global::Google.Cloud.Iam.V1.IamPolicyReflection.Descriptor, global::Google.Cloud.Iam.V1.PolicyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.CreateDeviceRegistryRequest), global::Google.Cloud.Iot.V1.CreateDeviceRegistryRequest.Parser, new[]{ "Parent", "DeviceRegistry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.GetDeviceRegistryRequest), global::Google.Cloud.Iot.V1.GetDeviceRegistryRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.DeleteDeviceRegistryRequest), global::Google.Cloud.Iot.V1.DeleteDeviceRegistryRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.UpdateDeviceRegistryRequest), global::Google.Cloud.Iot.V1.UpdateDeviceRegistryRequest.Parser, new[]{ "DeviceRegistry", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.ListDeviceRegistriesRequest), global::Google.Cloud.Iot.V1.ListDeviceRegistriesRequest.Parser, new[]{ "Parent", "PageSize", "PageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.ListDeviceRegistriesResponse), global::Google.Cloud.Iot.V1.ListDeviceRegistriesResponse.Parser, new[]{ "DeviceRegistries", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.CreateDeviceRequest), global::Google.Cloud.Iot.V1.CreateDeviceRequest.Parser, new[]{ "Parent", "Device" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.GetDeviceRequest), global::Google.Cloud.Iot.V1.GetDeviceRequest.Parser, new[]{ "Name", "FieldMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.UpdateDeviceRequest), global::Google.Cloud.Iot.V1.UpdateDeviceRequest.Parser, new[]{ "Device", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.DeleteDeviceRequest), global::Google.Cloud.Iot.V1.DeleteDeviceRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.ListDevicesRequest), global::Google.Cloud.Iot.V1.ListDevicesRequest.Parser, new[]{ "Parent", "DeviceNumIds", "DeviceIds", "FieldMask", "GatewayListOptions", "PageSize", "PageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.GatewayListOptions), global::Google.Cloud.Iot.V1.GatewayListOptions.Parser, new[]{ "GatewayType", "AssociationsGatewayId", "AssociationsDeviceId" }, new[]{ "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.ListDevicesResponse), global::Google.Cloud.Iot.V1.ListDevicesResponse.Parser, new[]{ "Devices", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.ModifyCloudToDeviceConfigRequest), global::Google.Cloud.Iot.V1.ModifyCloudToDeviceConfigRequest.Parser, new[]{ "Name", "VersionToUpdate", "BinaryData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsRequest), global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsRequest.Parser, new[]{ "Name", "NumVersions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsResponse), global::Google.Cloud.Iot.V1.ListDeviceConfigVersionsResponse.Parser, new[]{ "DeviceConfigs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.ListDeviceStatesRequest), global::Google.Cloud.Iot.V1.ListDeviceStatesRequest.Parser, new[]{ "Name", "NumStates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.ListDeviceStatesResponse), global::Google.Cloud.Iot.V1.ListDeviceStatesResponse.Parser, new[]{ "DeviceStates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.SendCommandToDeviceRequest), global::Google.Cloud.Iot.V1.SendCommandToDeviceRequest.Parser, new[]{ "Name", "BinaryData", "Subfolder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.SendCommandToDeviceResponse), global::Google.Cloud.Iot.V1.SendCommandToDeviceResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.BindDeviceToGatewayRequest), global::Google.Cloud.Iot.V1.BindDeviceToGatewayRequest.Parser, new[]{ "Parent", "GatewayId", "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.BindDeviceToGatewayResponse), global::Google.Cloud.Iot.V1.BindDeviceToGatewayResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayRequest), global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayRequest.Parser, new[]{ "Parent", "GatewayId", "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayResponse), global::Google.Cloud.Iot.V1.UnbindDeviceFromGatewayResponse.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request for `CreateDeviceRegistry`.
  /// </summary>
  public sealed partial class CreateDeviceRegistryRequest : pb::IMessage<CreateDeviceRegistryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDeviceRegistryRequest> _parser = new pb::MessageParser<CreateDeviceRegistryRequest>(() => new CreateDeviceRegistryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateDeviceRegistryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDeviceRegistryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDeviceRegistryRequest(CreateDeviceRegistryRequest other) : this() {
      parent_ = other.parent_;
      deviceRegistry_ = other.deviceRegistry_ != null ? other.deviceRegistry_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDeviceRegistryRequest Clone() {
      return new CreateDeviceRegistryRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The project and cloud region where this device registry must be created.
    /// For example, `projects/example-project/locations/us-central1`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_registry" field.</summary>
    public const int DeviceRegistryFieldNumber = 2;
    private global::Google.Cloud.Iot.V1.DeviceRegistry deviceRegistry_;
    /// <summary>
    /// Required. The device registry. The field `name` must be empty. The server will
    /// generate that field from the device registry `id` provided and the
    /// `parent` field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.DeviceRegistry DeviceRegistry {
      get { return deviceRegistry_; }
      set {
        deviceRegistry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateDeviceRegistryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateDeviceRegistryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(DeviceRegistry, other.DeviceRegistry)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (deviceRegistry_ != null) hash ^= DeviceRegistry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (deviceRegistry_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeviceRegistry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (deviceRegistry_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeviceRegistry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (deviceRegistry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceRegistry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateDeviceRegistryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.deviceRegistry_ != null) {
        if (deviceRegistry_ == null) {
          DeviceRegistry = new global::Google.Cloud.Iot.V1.DeviceRegistry();
        }
        DeviceRegistry.MergeFrom(other.DeviceRegistry);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (deviceRegistry_ == null) {
              DeviceRegistry = new global::Google.Cloud.Iot.V1.DeviceRegistry();
            }
            input.ReadMessage(DeviceRegistry);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (deviceRegistry_ == null) {
              DeviceRegistry = new global::Google.Cloud.Iot.V1.DeviceRegistry();
            }
            input.ReadMessage(DeviceRegistry);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `GetDeviceRegistry`.
  /// </summary>
  public sealed partial class GetDeviceRegistryRequest : pb::IMessage<GetDeviceRegistryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDeviceRegistryRequest> _parser = new pb::MessageParser<GetDeviceRegistryRequest>(() => new GetDeviceRegistryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDeviceRegistryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeviceRegistryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeviceRegistryRequest(GetDeviceRegistryRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeviceRegistryRequest Clone() {
      return new GetDeviceRegistryRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the device registry. For example,
    /// `projects/example-project/locations/us-central1/registries/my-registry`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDeviceRegistryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDeviceRegistryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDeviceRegistryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `DeleteDeviceRegistry`.
  /// </summary>
  public sealed partial class DeleteDeviceRegistryRequest : pb::IMessage<DeleteDeviceRegistryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDeviceRegistryRequest> _parser = new pb::MessageParser<DeleteDeviceRegistryRequest>(() => new DeleteDeviceRegistryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDeviceRegistryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDeviceRegistryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDeviceRegistryRequest(DeleteDeviceRegistryRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDeviceRegistryRequest Clone() {
      return new DeleteDeviceRegistryRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the device registry. For example,
    /// `projects/example-project/locations/us-central1/registries/my-registry`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDeviceRegistryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDeviceRegistryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDeviceRegistryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `UpdateDeviceRegistry`.
  /// </summary>
  public sealed partial class UpdateDeviceRegistryRequest : pb::IMessage<UpdateDeviceRegistryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDeviceRegistryRequest> _parser = new pb::MessageParser<UpdateDeviceRegistryRequest>(() => new UpdateDeviceRegistryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateDeviceRegistryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDeviceRegistryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDeviceRegistryRequest(UpdateDeviceRegistryRequest other) : this() {
      deviceRegistry_ = other.deviceRegistry_ != null ? other.deviceRegistry_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDeviceRegistryRequest Clone() {
      return new UpdateDeviceRegistryRequest(this);
    }

    /// <summary>Field number for the "device_registry" field.</summary>
    public const int DeviceRegistryFieldNumber = 1;
    private global::Google.Cloud.Iot.V1.DeviceRegistry deviceRegistry_;
    /// <summary>
    /// Required. The new values for the device registry. The `id` field must be empty, and
    /// the `name` field must indicate the path of the resource. For example,
    /// `projects/example-project/locations/us-central1/registries/my-registry`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.DeviceRegistry DeviceRegistry {
      get { return deviceRegistry_; }
      set {
        deviceRegistry_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. Only updates the `device_registry` fields indicated by this mask.
    /// The field mask must not be empty, and it must not contain fields that
    /// are immutable or only set by the server.
    /// Mutable top-level fields: `event_notification_config`, `http_config`,
    /// `mqtt_config`, and `state_notification_config`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateDeviceRegistryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateDeviceRegistryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DeviceRegistry, other.DeviceRegistry)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (deviceRegistry_ != null) hash ^= DeviceRegistry.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (deviceRegistry_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeviceRegistry);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (deviceRegistry_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeviceRegistry);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (deviceRegistry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceRegistry);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateDeviceRegistryRequest other) {
      if (other == null) {
        return;
      }
      if (other.deviceRegistry_ != null) {
        if (deviceRegistry_ == null) {
          DeviceRegistry = new global::Google.Cloud.Iot.V1.DeviceRegistry();
        }
        DeviceRegistry.MergeFrom(other.DeviceRegistry);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (deviceRegistry_ == null) {
              DeviceRegistry = new global::Google.Cloud.Iot.V1.DeviceRegistry();
            }
            input.ReadMessage(DeviceRegistry);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (deviceRegistry_ == null) {
              DeviceRegistry = new global::Google.Cloud.Iot.V1.DeviceRegistry();
            }
            input.ReadMessage(DeviceRegistry);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `ListDeviceRegistries`.
  /// </summary>
  public sealed partial class ListDeviceRegistriesRequest : pb::IMessage<ListDeviceRegistriesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDeviceRegistriesRequest> _parser = new pb::MessageParser<ListDeviceRegistriesRequest>(() => new ListDeviceRegistriesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDeviceRegistriesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceRegistriesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceRegistriesRequest(ListDeviceRegistriesRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceRegistriesRequest Clone() {
      return new ListDeviceRegistriesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The project and cloud region path. For example,
    /// `projects/example-project/locations/us-central1`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of registries to return in the response. If this value
    /// is zero, the service will select a default size. A call may return fewer
    /// objects than requested. A non-empty `next_page_token` in the response
    /// indicates that more data is available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// The value returned by the last `ListDeviceRegistriesResponse`; indicates
    /// that this is a continuation of a prior `ListDeviceRegistries` call and
    /// the system should return the next page of data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDeviceRegistriesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDeviceRegistriesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDeviceRegistriesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for `ListDeviceRegistries`.
  /// </summary>
  public sealed partial class ListDeviceRegistriesResponse : pb::IMessage<ListDeviceRegistriesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDeviceRegistriesResponse> _parser = new pb::MessageParser<ListDeviceRegistriesResponse>(() => new ListDeviceRegistriesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDeviceRegistriesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceRegistriesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceRegistriesResponse(ListDeviceRegistriesResponse other) : this() {
      deviceRegistries_ = other.deviceRegistries_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceRegistriesResponse Clone() {
      return new ListDeviceRegistriesResponse(this);
    }

    /// <summary>Field number for the "device_registries" field.</summary>
    public const int DeviceRegistriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Iot.V1.DeviceRegistry> _repeated_deviceRegistries_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Iot.V1.DeviceRegistry.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Iot.V1.DeviceRegistry> deviceRegistries_ = new pbc::RepeatedField<global::Google.Cloud.Iot.V1.DeviceRegistry>();
    /// <summary>
    /// The registries that matched the query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Iot.V1.DeviceRegistry> DeviceRegistries {
      get { return deviceRegistries_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// If not empty, indicates that there may be more registries that match the
    /// request; this value should be passed in a new
    /// `ListDeviceRegistriesRequest`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDeviceRegistriesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDeviceRegistriesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!deviceRegistries_.Equals(other.deviceRegistries_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= deviceRegistries_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      deviceRegistries_.WriteTo(output, _repeated_deviceRegistries_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      deviceRegistries_.WriteTo(ref output, _repeated_deviceRegistries_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += deviceRegistries_.CalculateSize(_repeated_deviceRegistries_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDeviceRegistriesResponse other) {
      if (other == null) {
        return;
      }
      deviceRegistries_.Add(other.deviceRegistries_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            deviceRegistries_.AddEntriesFrom(input, _repeated_deviceRegistries_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            deviceRegistries_.AddEntriesFrom(ref input, _repeated_deviceRegistries_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `CreateDevice`.
  /// </summary>
  public sealed partial class CreateDeviceRequest : pb::IMessage<CreateDeviceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDeviceRequest> _parser = new pb::MessageParser<CreateDeviceRequest>(() => new CreateDeviceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateDeviceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDeviceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDeviceRequest(CreateDeviceRequest other) : this() {
      parent_ = other.parent_;
      device_ = other.device_ != null ? other.device_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDeviceRequest Clone() {
      return new CreateDeviceRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The name of the device registry where this device should be created.
    /// For example,
    /// `projects/example-project/locations/us-central1/registries/my-registry`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 2;
    private global::Google.Cloud.Iot.V1.Device device_;
    /// <summary>
    /// Required. The device registration details. The field `name` must be empty. The server
    /// generates `name` from the device registry `id` and the
    /// `parent` field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.Device Device {
      get { return device_; }
      set {
        device_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateDeviceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateDeviceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(Device, other.Device)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (device_ != null) hash ^= Device.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (device_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Device);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (device_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Device);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (device_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Device);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateDeviceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.device_ != null) {
        if (device_ == null) {
          Device = new global::Google.Cloud.Iot.V1.Device();
        }
        Device.MergeFrom(other.Device);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (device_ == null) {
              Device = new global::Google.Cloud.Iot.V1.Device();
            }
            input.ReadMessage(Device);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (device_ == null) {
              Device = new global::Google.Cloud.Iot.V1.Device();
            }
            input.ReadMessage(Device);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `GetDevice`.
  /// </summary>
  public sealed partial class GetDeviceRequest : pb::IMessage<GetDeviceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDeviceRequest> _parser = new pb::MessageParser<GetDeviceRequest>(() => new GetDeviceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDeviceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeviceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeviceRequest(GetDeviceRequest other) : this() {
      name_ = other.name_;
      fieldMask_ = other.fieldMask_ != null ? other.fieldMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeviceRequest Clone() {
      return new GetDeviceRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the device. For example,
    /// `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
    /// `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "field_mask" field.</summary>
    public const int FieldMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask fieldMask_;
    /// <summary>
    /// The fields of the `Device` resource to be returned in the response. If the
    /// field mask is unset or empty, all fields are returned. Fields have to be
    /// provided in snake_case format, for example: `last_heartbeat_time`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask FieldMask {
      get { return fieldMask_; }
      set {
        fieldMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDeviceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDeviceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(FieldMask, other.FieldMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (fieldMask_ != null) hash ^= FieldMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (fieldMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FieldMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (fieldMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FieldMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (fieldMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FieldMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDeviceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.fieldMask_ != null) {
        if (fieldMask_ == null) {
          FieldMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        FieldMask.MergeFrom(other.FieldMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (fieldMask_ == null) {
              FieldMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(FieldMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (fieldMask_ == null) {
              FieldMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(FieldMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `UpdateDevice`.
  /// </summary>
  public sealed partial class UpdateDeviceRequest : pb::IMessage<UpdateDeviceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDeviceRequest> _parser = new pb::MessageParser<UpdateDeviceRequest>(() => new UpdateDeviceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateDeviceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDeviceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDeviceRequest(UpdateDeviceRequest other) : this() {
      device_ = other.device_ != null ? other.device_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDeviceRequest Clone() {
      return new UpdateDeviceRequest(this);
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 2;
    private global::Google.Cloud.Iot.V1.Device device_;
    /// <summary>
    /// Required. The new values for the device. The `id` and `num_id` fields must
    /// be empty, and the field `name` must specify the name path. For example,
    /// `projects/p0/locations/us-central1/registries/registry0/devices/device0`or
    /// `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.Device Device {
      get { return device_; }
      set {
        device_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. Only updates the `device` fields indicated by this mask.
    /// The field mask must not be empty, and it must not contain fields that
    /// are immutable or only set by the server.
    /// Mutable top-level fields: `credentials`, `blocked`, and `metadata`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateDeviceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateDeviceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Device, other.Device)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (device_ != null) hash ^= Device.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (device_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Device);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (device_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Device);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (device_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Device);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateDeviceRequest other) {
      if (other == null) {
        return;
      }
      if (other.device_ != null) {
        if (device_ == null) {
          Device = new global::Google.Cloud.Iot.V1.Device();
        }
        Device.MergeFrom(other.Device);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (device_ == null) {
              Device = new global::Google.Cloud.Iot.V1.Device();
            }
            input.ReadMessage(Device);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (device_ == null) {
              Device = new global::Google.Cloud.Iot.V1.Device();
            }
            input.ReadMessage(Device);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `DeleteDevice`.
  /// </summary>
  public sealed partial class DeleteDeviceRequest : pb::IMessage<DeleteDeviceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDeviceRequest> _parser = new pb::MessageParser<DeleteDeviceRequest>(() => new DeleteDeviceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDeviceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDeviceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDeviceRequest(DeleteDeviceRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDeviceRequest Clone() {
      return new DeleteDeviceRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the device. For example,
    /// `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
    /// `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDeviceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDeviceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDeviceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `ListDevices`.
  /// </summary>
  public sealed partial class ListDevicesRequest : pb::IMessage<ListDevicesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDevicesRequest> _parser = new pb::MessageParser<ListDevicesRequest>(() => new ListDevicesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDevicesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesRequest(ListDevicesRequest other) : this() {
      parent_ = other.parent_;
      deviceNumIds_ = other.deviceNumIds_.Clone();
      deviceIds_ = other.deviceIds_.Clone();
      fieldMask_ = other.fieldMask_ != null ? other.fieldMask_.Clone() : null;
      gatewayListOptions_ = other.gatewayListOptions_ != null ? other.gatewayListOptions_.Clone() : null;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesRequest Clone() {
      return new ListDevicesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The device registry path. Required. For example,
    /// `projects/my-project/locations/us-central1/registries/my-registry`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_num_ids" field.</summary>
    public const int DeviceNumIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_deviceNumIds_codec
        = pb::FieldCodec.ForUInt64(18);
    private readonly pbc::RepeatedField<ulong> deviceNumIds_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// A list of device numeric IDs. If empty, this field is ignored. Maximum
    /// IDs: 10,000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> DeviceNumIds {
      get { return deviceNumIds_; }
    }

    /// <summary>Field number for the "device_ids" field.</summary>
    public const int DeviceIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_deviceIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> deviceIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of device string IDs. For example, `['device0', 'device12']`.
    /// If empty, this field is ignored. Maximum IDs: 10,000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DeviceIds {
      get { return deviceIds_; }
    }

    /// <summary>Field number for the "field_mask" field.</summary>
    public const int FieldMaskFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.FieldMask fieldMask_;
    /// <summary>
    /// The fields of the `Device` resource to be returned in the response. The
    /// fields `id` and `num_id` are always returned, along with any
    /// other fields specified in snake_case format, for example:
    /// `last_heartbeat_time`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask FieldMask {
      get { return fieldMask_; }
      set {
        fieldMask_ = value;
      }
    }

    /// <summary>Field number for the "gateway_list_options" field.</summary>
    public const int GatewayListOptionsFieldNumber = 6;
    private global::Google.Cloud.Iot.V1.GatewayListOptions gatewayListOptions_;
    /// <summary>
    /// Options related to gateways.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.GatewayListOptions GatewayListOptions {
      get { return gatewayListOptions_; }
      set {
        gatewayListOptions_ = value;
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 100;
    private int pageSize_;
    /// <summary>
    /// The maximum number of devices to return in the response. If this value
    /// is zero, the service will select a default size. A call may return fewer
    /// objects than requested. A non-empty `next_page_token` in the response
    /// indicates that more data is available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 101;
    private string pageToken_ = "";
    /// <summary>
    /// The value returned by the last `ListDevicesResponse`; indicates
    /// that this is a continuation of a prior `ListDevices` call and
    /// the system should return the next page of data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDevicesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDevicesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if(!deviceNumIds_.Equals(other.deviceNumIds_)) return false;
      if(!deviceIds_.Equals(other.deviceIds_)) return false;
      if (!object.Equals(FieldMask, other.FieldMask)) return false;
      if (!object.Equals(GatewayListOptions, other.GatewayListOptions)) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      hash ^= deviceNumIds_.GetHashCode();
      hash ^= deviceIds_.GetHashCode();
      if (fieldMask_ != null) hash ^= FieldMask.GetHashCode();
      if (gatewayListOptions_ != null) hash ^= GatewayListOptions.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      deviceNumIds_.WriteTo(output, _repeated_deviceNumIds_codec);
      deviceIds_.WriteTo(output, _repeated_deviceIds_codec);
      if (fieldMask_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FieldMask);
      }
      if (gatewayListOptions_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(GatewayListOptions);
      }
      if (PageSize != 0) {
        output.WriteRawTag(160, 6);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      deviceNumIds_.WriteTo(ref output, _repeated_deviceNumIds_codec);
      deviceIds_.WriteTo(ref output, _repeated_deviceIds_codec);
      if (fieldMask_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FieldMask);
      }
      if (gatewayListOptions_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(GatewayListOptions);
      }
      if (PageSize != 0) {
        output.WriteRawTag(160, 6);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      size += deviceNumIds_.CalculateSize(_repeated_deviceNumIds_codec);
      size += deviceIds_.CalculateSize(_repeated_deviceIds_codec);
      if (fieldMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FieldMask);
      }
      if (gatewayListOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GatewayListOptions);
      }
      if (PageSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDevicesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      deviceNumIds_.Add(other.deviceNumIds_);
      deviceIds_.Add(other.deviceIds_);
      if (other.fieldMask_ != null) {
        if (fieldMask_ == null) {
          FieldMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        FieldMask.MergeFrom(other.FieldMask);
      }
      if (other.gatewayListOptions_ != null) {
        if (gatewayListOptions_ == null) {
          GatewayListOptions = new global::Google.Cloud.Iot.V1.GatewayListOptions();
        }
        GatewayListOptions.MergeFrom(other.GatewayListOptions);
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            deviceNumIds_.AddEntriesFrom(input, _repeated_deviceNumIds_codec);
            break;
          }
          case 26: {
            deviceIds_.AddEntriesFrom(input, _repeated_deviceIds_codec);
            break;
          }
          case 34: {
            if (fieldMask_ == null) {
              FieldMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(FieldMask);
            break;
          }
          case 50: {
            if (gatewayListOptions_ == null) {
              GatewayListOptions = new global::Google.Cloud.Iot.V1.GatewayListOptions();
            }
            input.ReadMessage(GatewayListOptions);
            break;
          }
          case 800: {
            PageSize = input.ReadInt32();
            break;
          }
          case 810: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            deviceNumIds_.AddEntriesFrom(ref input, _repeated_deviceNumIds_codec);
            break;
          }
          case 26: {
            deviceIds_.AddEntriesFrom(ref input, _repeated_deviceIds_codec);
            break;
          }
          case 34: {
            if (fieldMask_ == null) {
              FieldMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(FieldMask);
            break;
          }
          case 50: {
            if (gatewayListOptions_ == null) {
              GatewayListOptions = new global::Google.Cloud.Iot.V1.GatewayListOptions();
            }
            input.ReadMessage(GatewayListOptions);
            break;
          }
          case 800: {
            PageSize = input.ReadInt32();
            break;
          }
          case 810: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Options for limiting the list based on gateway type and associations.
  /// </summary>
  public sealed partial class GatewayListOptions : pb::IMessage<GatewayListOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GatewayListOptions> _parser = new pb::MessageParser<GatewayListOptions>(() => new GatewayListOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GatewayListOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GatewayListOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GatewayListOptions(GatewayListOptions other) : this() {
      switch (other.FilterCase) {
        case FilterOneofCase.GatewayType:
          GatewayType = other.GatewayType;
          break;
        case FilterOneofCase.AssociationsGatewayId:
          AssociationsGatewayId = other.AssociationsGatewayId;
          break;
        case FilterOneofCase.AssociationsDeviceId:
          AssociationsDeviceId = other.AssociationsDeviceId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GatewayListOptions Clone() {
      return new GatewayListOptions(this);
    }

    /// <summary>Field number for the "gateway_type" field.</summary>
    public const int GatewayTypeFieldNumber = 1;
    /// <summary>
    /// If `GATEWAY` is specified, only gateways are returned. If `NON_GATEWAY`
    /// is specified, only non-gateway devices are returned. If
    /// `GATEWAY_TYPE_UNSPECIFIED` is specified, all devices are returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iot.V1.GatewayType GatewayType {
      get { return filterCase_ == FilterOneofCase.GatewayType ? (global::Google.Cloud.Iot.V1.GatewayType) filter_ : global::Google.Cloud.Iot.V1.GatewayType.Unspecified; }
      set {
        filter_ = value;
        filterCase_ = FilterOneofCase.GatewayType;
      }
    }

    /// <summary>Field number for the "associations_gateway_id" field.</summary>
    public const int AssociationsGatewayIdFieldNumber = 2;
    /// <summary>
    /// If set, only devices associated with the specified gateway are returned.
    /// The gateway ID can be numeric (`num_id`) or the user-defined string
    /// (`id`). For example, if `123` is specified, only devices bound to the
    /// gateway with `num_id` 123 are returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssociationsGatewayId {
      get { return filterCase_ == FilterOneofCase.AssociationsGatewayId ? (string) filter_ : ""; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        filterCase_ = FilterOneofCase.AssociationsGatewayId;
      }
    }

    /// <summary>Field number for the "associations_device_id" field.</summary>
    public const int AssociationsDeviceIdFieldNumber = 3;
    /// <summary>
    /// If set, returns only the gateways with which the specified device is
    /// associated. The device ID can be numeric (`num_id`) or the user-defined
    /// string (`id`). For example, if `456` is specified, returns only the
    /// gateways to which the device with `num_id` 456 is bound.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssociationsDeviceId {
      get { return filterCase_ == FilterOneofCase.AssociationsDeviceId ? (string) filter_ : ""; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        filterCase_ = FilterOneofCase.AssociationsDeviceId;
      }
    }

    private object filter_;
    /// <summary>Enum of possible cases for the "filter" oneof.</summary>
    public enum FilterOneofCase {
      None = 0,
      GatewayType = 1,
      AssociationsGatewayId = 2,
      AssociationsDeviceId = 3,
    }
    private FilterOneofCase filterCase_ = FilterOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterOneofCase FilterCase {
      get { return filterCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFilter() {
      filterCase_ = FilterOneofCase.None;
      filter_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GatewayListOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GatewayListOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GatewayType != other.GatewayType) return false;
      if (AssociationsGatewayId != other.AssociationsGatewayId) return false;
      if (AssociationsDeviceId != other.AssociationsDeviceId) return false;
      if (FilterCase != other.FilterCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (filterCase_ == FilterOneofCase.GatewayType) hash ^= GatewayType.GetHashCode();
      if (filterCase_ == FilterOneofCase.AssociationsGatewayId) hash ^= AssociationsGatewayId.GetHashCode();
      if (filterCase_ == FilterOneofCase.AssociationsDeviceId) hash ^= AssociationsDeviceId.GetHashCode();
      hash ^= (int) filterCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (filterCase_ == FilterOneofCase.GatewayType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GatewayType);
      }
      if (filterCase_ == FilterOneofCase.AssociationsGatewayId) {
        output.WriteRawTag(18);
        output.WriteString(AssociationsGatewayId);
      }
      if (filterCase_ == FilterOneofCase.AssociationsDeviceId) {
        output.WriteRawTag(26);
        output.WriteString(AssociationsDeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (filterCase_ == FilterOneofCase.GatewayType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GatewayType);
      }
      if (filterCase_ == FilterOneofCase.AssociationsGatewayId) {
        output.WriteRawTag(18);
        output.WriteString(AssociationsGatewayId);
      }
      if (filterCase_ == FilterOneofCase.AssociationsDeviceId) {
        output.WriteRawTag(26);
        output.WriteString(AssociationsDeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (filterCase_ == FilterOneofCase.GatewayType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GatewayType);
      }
      if (filterCase_ == FilterOneofCase.AssociationsGatewayId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssociationsGatewayId);
      }
      if (filterCase_ == FilterOneofCase.AssociationsDeviceId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssociationsDeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GatewayListOptions other) {
      if (other == null) {
        return;
      }
      switch (other.FilterCase) {
        case FilterOneofCase.GatewayType:
          GatewayType = other.GatewayType;
          break;
        case FilterOneofCase.AssociationsGatewayId:
          AssociationsGatewayId = other.AssociationsGatewayId;
          break;
        case FilterOneofCase.AssociationsDeviceId:
          AssociationsDeviceId = other.AssociationsDeviceId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            filter_ = input.ReadEnum();
            filterCase_ = FilterOneofCase.GatewayType;
            break;
          }
          case 18: {
            AssociationsGatewayId = input.ReadString();
            break;
          }
          case 26: {
            AssociationsDeviceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            filter_ = input.ReadEnum();
            filterCase_ = FilterOneofCase.GatewayType;
            break;
          }
          case 18: {
            AssociationsGatewayId = input.ReadString();
            break;
          }
          case 26: {
            AssociationsDeviceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for `ListDevices`.
  /// </summary>
  public sealed partial class ListDevicesResponse : pb::IMessage<ListDevicesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDevicesResponse> _parser = new pb::MessageParser<ListDevicesResponse>(() => new ListDevicesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDevicesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesResponse(ListDevicesResponse other) : this() {
      devices_ = other.devices_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDevicesResponse Clone() {
      return new ListDevicesResponse(this);
    }

    /// <summary>Field number for the "devices" field.</summary>
    public const int DevicesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Iot.V1.Device> _repeated_devices_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Iot.V1.Device.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Iot.V1.Device> devices_ = new pbc::RepeatedField<global::Google.Cloud.Iot.V1.Device>();
    /// <summary>
    /// The devices that match the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Iot.V1.Device> Devices {
      get { return devices_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// If not empty, indicates that there may be more devices that match the
    /// request; this value should be passed in a new `ListDevicesRequest`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDevicesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDevicesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!devices_.Equals(other.devices_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= devices_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      devices_.WriteTo(output, _repeated_devices_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      devices_.WriteTo(ref output, _repeated_devices_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += devices_.CalculateSize(_repeated_devices_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDevicesResponse other) {
      if (other == null) {
        return;
      }
      devices_.Add(other.devices_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            devices_.AddEntriesFrom(input, _repeated_devices_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            devices_.AddEntriesFrom(ref input, _repeated_devices_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `ModifyCloudToDeviceConfig`.
  /// </summary>
  public sealed partial class ModifyCloudToDeviceConfigRequest : pb::IMessage<ModifyCloudToDeviceConfigRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModifyCloudToDeviceConfigRequest> _parser = new pb::MessageParser<ModifyCloudToDeviceConfigRequest>(() => new ModifyCloudToDeviceConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyCloudToDeviceConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyCloudToDeviceConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyCloudToDeviceConfigRequest(ModifyCloudToDeviceConfigRequest other) : this() {
      name_ = other.name_;
      versionToUpdate_ = other.versionToUpdate_;
      binaryData_ = other.binaryData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyCloudToDeviceConfigRequest Clone() {
      return new ModifyCloudToDeviceConfigRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the device. For example,
    /// `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
    /// `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_to_update" field.</summary>
    public const int VersionToUpdateFieldNumber = 2;
    private long versionToUpdate_;
    /// <summary>
    /// The version number to update. If this value is zero, it will not check the
    /// version number of the server and will always update the current version;
    /// otherwise, this update will fail if the version number found on the server
    /// does not match this version number. This is used to support multiple
    /// simultaneous updates without losing data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VersionToUpdate {
      get { return versionToUpdate_; }
      set {
        versionToUpdate_ = value;
      }
    }

    /// <summary>Field number for the "binary_data" field.</summary>
    public const int BinaryDataFieldNumber = 3;
    private pb::ByteString binaryData_ = pb::ByteString.Empty;
    /// <summary>
    /// Required. The configuration data for the device.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BinaryData {
      get { return binaryData_; }
      set {
        binaryData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyCloudToDeviceConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyCloudToDeviceConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (VersionToUpdate != other.VersionToUpdate) return false;
      if (BinaryData != other.BinaryData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (VersionToUpdate != 0L) hash ^= VersionToUpdate.GetHashCode();
      if (BinaryData.Length != 0) hash ^= BinaryData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (VersionToUpdate != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(VersionToUpdate);
      }
      if (BinaryData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(BinaryData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (VersionToUpdate != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(VersionToUpdate);
      }
      if (BinaryData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(BinaryData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (VersionToUpdate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VersionToUpdate);
      }
      if (BinaryData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BinaryData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyCloudToDeviceConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.VersionToUpdate != 0L) {
        VersionToUpdate = other.VersionToUpdate;
      }
      if (other.BinaryData.Length != 0) {
        BinaryData = other.BinaryData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            VersionToUpdate = input.ReadInt64();
            break;
          }
          case 26: {
            BinaryData = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            VersionToUpdate = input.ReadInt64();
            break;
          }
          case 26: {
            BinaryData = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `ListDeviceConfigVersions`.
  /// </summary>
  public sealed partial class ListDeviceConfigVersionsRequest : pb::IMessage<ListDeviceConfigVersionsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDeviceConfigVersionsRequest> _parser = new pb::MessageParser<ListDeviceConfigVersionsRequest>(() => new ListDeviceConfigVersionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDeviceConfigVersionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceConfigVersionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceConfigVersionsRequest(ListDeviceConfigVersionsRequest other) : this() {
      name_ = other.name_;
      numVersions_ = other.numVersions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceConfigVersionsRequest Clone() {
      return new ListDeviceConfigVersionsRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the device. For example,
    /// `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
    /// `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num_versions" field.</summary>
    public const int NumVersionsFieldNumber = 2;
    private int numVersions_;
    /// <summary>
    /// The number of versions to list. Versions are listed in decreasing order of
    /// the version number. The maximum number of versions retained is 10. If this
    /// value is zero, it will return all the versions available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumVersions {
      get { return numVersions_; }
      set {
        numVersions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDeviceConfigVersionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDeviceConfigVersionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (NumVersions != other.NumVersions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (NumVersions != 0) hash ^= NumVersions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (NumVersions != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumVersions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (NumVersions != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumVersions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (NumVersions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumVersions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDeviceConfigVersionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.NumVersions != 0) {
        NumVersions = other.NumVersions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            NumVersions = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            NumVersions = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for `ListDeviceConfigVersions`.
  /// </summary>
  public sealed partial class ListDeviceConfigVersionsResponse : pb::IMessage<ListDeviceConfigVersionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDeviceConfigVersionsResponse> _parser = new pb::MessageParser<ListDeviceConfigVersionsResponse>(() => new ListDeviceConfigVersionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDeviceConfigVersionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceConfigVersionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceConfigVersionsResponse(ListDeviceConfigVersionsResponse other) : this() {
      deviceConfigs_ = other.deviceConfigs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceConfigVersionsResponse Clone() {
      return new ListDeviceConfigVersionsResponse(this);
    }

    /// <summary>Field number for the "device_configs" field.</summary>
    public const int DeviceConfigsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Iot.V1.DeviceConfig> _repeated_deviceConfigs_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Iot.V1.DeviceConfig.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Iot.V1.DeviceConfig> deviceConfigs_ = new pbc::RepeatedField<global::Google.Cloud.Iot.V1.DeviceConfig>();
    /// <summary>
    /// The device configuration for the last few versions. Versions are listed
    /// in decreasing order, starting from the most recent one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Iot.V1.DeviceConfig> DeviceConfigs {
      get { return deviceConfigs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDeviceConfigVersionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDeviceConfigVersionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!deviceConfigs_.Equals(other.deviceConfigs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= deviceConfigs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      deviceConfigs_.WriteTo(output, _repeated_deviceConfigs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      deviceConfigs_.WriteTo(ref output, _repeated_deviceConfigs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += deviceConfigs_.CalculateSize(_repeated_deviceConfigs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDeviceConfigVersionsResponse other) {
      if (other == null) {
        return;
      }
      deviceConfigs_.Add(other.deviceConfigs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            deviceConfigs_.AddEntriesFrom(input, _repeated_deviceConfigs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            deviceConfigs_.AddEntriesFrom(ref input, _repeated_deviceConfigs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `ListDeviceStates`.
  /// </summary>
  public sealed partial class ListDeviceStatesRequest : pb::IMessage<ListDeviceStatesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDeviceStatesRequest> _parser = new pb::MessageParser<ListDeviceStatesRequest>(() => new ListDeviceStatesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDeviceStatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceStatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceStatesRequest(ListDeviceStatesRequest other) : this() {
      name_ = other.name_;
      numStates_ = other.numStates_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceStatesRequest Clone() {
      return new ListDeviceStatesRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the device. For example,
    /// `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
    /// `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num_states" field.</summary>
    public const int NumStatesFieldNumber = 2;
    private int numStates_;
    /// <summary>
    /// The number of states to list. States are listed in descending order of
    /// update time. The maximum number of states retained is 10. If this
    /// value is zero, it will return all the states available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumStates {
      get { return numStates_; }
      set {
        numStates_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDeviceStatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDeviceStatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (NumStates != other.NumStates) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (NumStates != 0) hash ^= NumStates.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (NumStates != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumStates);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (NumStates != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumStates);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (NumStates != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumStates);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDeviceStatesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.NumStates != 0) {
        NumStates = other.NumStates;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            NumStates = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            NumStates = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for `ListDeviceStates`.
  /// </summary>
  public sealed partial class ListDeviceStatesResponse : pb::IMessage<ListDeviceStatesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDeviceStatesResponse> _parser = new pb::MessageParser<ListDeviceStatesResponse>(() => new ListDeviceStatesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDeviceStatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceStatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceStatesResponse(ListDeviceStatesResponse other) : this() {
      deviceStates_ = other.deviceStates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeviceStatesResponse Clone() {
      return new ListDeviceStatesResponse(this);
    }

    /// <summary>Field number for the "device_states" field.</summary>
    public const int DeviceStatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Iot.V1.DeviceState> _repeated_deviceStates_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Iot.V1.DeviceState.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Iot.V1.DeviceState> deviceStates_ = new pbc::RepeatedField<global::Google.Cloud.Iot.V1.DeviceState>();
    /// <summary>
    /// The last few device states. States are listed in descending order of server
    /// update time, starting from the most recent one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Iot.V1.DeviceState> DeviceStates {
      get { return deviceStates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDeviceStatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDeviceStatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!deviceStates_.Equals(other.deviceStates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= deviceStates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      deviceStates_.WriteTo(output, _repeated_deviceStates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      deviceStates_.WriteTo(ref output, _repeated_deviceStates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += deviceStates_.CalculateSize(_repeated_deviceStates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDeviceStatesResponse other) {
      if (other == null) {
        return;
      }
      deviceStates_.Add(other.deviceStates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            deviceStates_.AddEntriesFrom(input, _repeated_deviceStates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            deviceStates_.AddEntriesFrom(ref input, _repeated_deviceStates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `SendCommandToDevice`.
  /// </summary>
  public sealed partial class SendCommandToDeviceRequest : pb::IMessage<SendCommandToDeviceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SendCommandToDeviceRequest> _parser = new pb::MessageParser<SendCommandToDeviceRequest>(() => new SendCommandToDeviceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendCommandToDeviceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendCommandToDeviceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendCommandToDeviceRequest(SendCommandToDeviceRequest other) : this() {
      name_ = other.name_;
      binaryData_ = other.binaryData_;
      subfolder_ = other.subfolder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendCommandToDeviceRequest Clone() {
      return new SendCommandToDeviceRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the device. For example,
    /// `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
    /// `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "binary_data" field.</summary>
    public const int BinaryDataFieldNumber = 2;
    private pb::ByteString binaryData_ = pb::ByteString.Empty;
    /// <summary>
    /// Required. The command data to send to the device.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BinaryData {
      get { return binaryData_; }
      set {
        binaryData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subfolder" field.</summary>
    public const int SubfolderFieldNumber = 3;
    private string subfolder_ = "";
    /// <summary>
    /// Optional subfolder for the command. If empty, the command will be delivered
    /// to the /devices/{device-id}/commands topic, otherwise it will be delivered
    /// to the /devices/{device-id}/commands/{subfolder} topic. Multi-level
    /// subfolders are allowed. This field must not have more than 256 characters,
    /// and must not contain any MQTT wildcards ("+" or "#") or null characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subfolder {
      get { return subfolder_; }
      set {
        subfolder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendCommandToDeviceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendCommandToDeviceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (BinaryData != other.BinaryData) return false;
      if (Subfolder != other.Subfolder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (BinaryData.Length != 0) hash ^= BinaryData.GetHashCode();
      if (Subfolder.Length != 0) hash ^= Subfolder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (BinaryData.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BinaryData);
      }
      if (Subfolder.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Subfolder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (BinaryData.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BinaryData);
      }
      if (Subfolder.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Subfolder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (BinaryData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BinaryData);
      }
      if (Subfolder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subfolder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendCommandToDeviceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.BinaryData.Length != 0) {
        BinaryData = other.BinaryData;
      }
      if (other.Subfolder.Length != 0) {
        Subfolder = other.Subfolder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            BinaryData = input.ReadBytes();
            break;
          }
          case 26: {
            Subfolder = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            BinaryData = input.ReadBytes();
            break;
          }
          case 26: {
            Subfolder = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for `SendCommandToDevice`.
  /// </summary>
  public sealed partial class SendCommandToDeviceResponse : pb::IMessage<SendCommandToDeviceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SendCommandToDeviceResponse> _parser = new pb::MessageParser<SendCommandToDeviceResponse>(() => new SendCommandToDeviceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendCommandToDeviceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendCommandToDeviceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendCommandToDeviceResponse(SendCommandToDeviceResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendCommandToDeviceResponse Clone() {
      return new SendCommandToDeviceResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendCommandToDeviceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendCommandToDeviceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendCommandToDeviceResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `BindDeviceToGateway`.
  /// </summary>
  public sealed partial class BindDeviceToGatewayRequest : pb::IMessage<BindDeviceToGatewayRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BindDeviceToGatewayRequest> _parser = new pb::MessageParser<BindDeviceToGatewayRequest>(() => new BindDeviceToGatewayRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BindDeviceToGatewayRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindDeviceToGatewayRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindDeviceToGatewayRequest(BindDeviceToGatewayRequest other) : this() {
      parent_ = other.parent_;
      gatewayId_ = other.gatewayId_;
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindDeviceToGatewayRequest Clone() {
      return new BindDeviceToGatewayRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The name of the registry. For example,
    /// `projects/example-project/locations/us-central1/registries/my-registry`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gateway_id" field.</summary>
    public const int GatewayIdFieldNumber = 2;
    private string gatewayId_ = "";
    /// <summary>
    /// Required. The value of `gateway_id` can be either the device numeric ID or the
    /// user-defined device identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GatewayId {
      get { return gatewayId_; }
      set {
        gatewayId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 3;
    private string deviceId_ = "";
    /// <summary>
    /// Required. The device to associate with the specified gateway. The value of
    /// `device_id` can be either the device numeric ID or the user-defined device
    /// identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BindDeviceToGatewayRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BindDeviceToGatewayRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (GatewayId != other.GatewayId) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (GatewayId.Length != 0) hash ^= GatewayId.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (GatewayId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GatewayId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (GatewayId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GatewayId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (GatewayId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GatewayId);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BindDeviceToGatewayRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.GatewayId.Length != 0) {
        GatewayId = other.GatewayId;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            GatewayId = input.ReadString();
            break;
          }
          case 26: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            GatewayId = input.ReadString();
            break;
          }
          case 26: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for `BindDeviceToGateway`.
  /// </summary>
  public sealed partial class BindDeviceToGatewayResponse : pb::IMessage<BindDeviceToGatewayResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BindDeviceToGatewayResponse> _parser = new pb::MessageParser<BindDeviceToGatewayResponse>(() => new BindDeviceToGatewayResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BindDeviceToGatewayResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindDeviceToGatewayResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindDeviceToGatewayResponse(BindDeviceToGatewayResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindDeviceToGatewayResponse Clone() {
      return new BindDeviceToGatewayResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BindDeviceToGatewayResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BindDeviceToGatewayResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BindDeviceToGatewayResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for `UnbindDeviceFromGateway`.
  /// </summary>
  public sealed partial class UnbindDeviceFromGatewayRequest : pb::IMessage<UnbindDeviceFromGatewayRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnbindDeviceFromGatewayRequest> _parser = new pb::MessageParser<UnbindDeviceFromGatewayRequest>(() => new UnbindDeviceFromGatewayRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnbindDeviceFromGatewayRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnbindDeviceFromGatewayRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnbindDeviceFromGatewayRequest(UnbindDeviceFromGatewayRequest other) : this() {
      parent_ = other.parent_;
      gatewayId_ = other.gatewayId_;
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnbindDeviceFromGatewayRequest Clone() {
      return new UnbindDeviceFromGatewayRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The name of the registry. For example,
    /// `projects/example-project/locations/us-central1/registries/my-registry`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gateway_id" field.</summary>
    public const int GatewayIdFieldNumber = 2;
    private string gatewayId_ = "";
    /// <summary>
    /// Required. The value of `gateway_id` can be either the device numeric ID or the
    /// user-defined device identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GatewayId {
      get { return gatewayId_; }
      set {
        gatewayId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 3;
    private string deviceId_ = "";
    /// <summary>
    /// Required. The device to disassociate from the specified gateway. The value of
    /// `device_id` can be either the device numeric ID or the user-defined device
    /// identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnbindDeviceFromGatewayRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnbindDeviceFromGatewayRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (GatewayId != other.GatewayId) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (GatewayId.Length != 0) hash ^= GatewayId.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (GatewayId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GatewayId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (GatewayId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GatewayId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (GatewayId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GatewayId);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnbindDeviceFromGatewayRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.GatewayId.Length != 0) {
        GatewayId = other.GatewayId;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            GatewayId = input.ReadString();
            break;
          }
          case 26: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            GatewayId = input.ReadString();
            break;
          }
          case 26: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for `UnbindDeviceFromGateway`.
  /// </summary>
  public sealed partial class UnbindDeviceFromGatewayResponse : pb::IMessage<UnbindDeviceFromGatewayResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnbindDeviceFromGatewayResponse> _parser = new pb::MessageParser<UnbindDeviceFromGatewayResponse>(() => new UnbindDeviceFromGatewayResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnbindDeviceFromGatewayResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iot.V1.DeviceManagerReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnbindDeviceFromGatewayResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnbindDeviceFromGatewayResponse(UnbindDeviceFromGatewayResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnbindDeviceFromGatewayResponse Clone() {
      return new UnbindDeviceFromGatewayResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnbindDeviceFromGatewayResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnbindDeviceFromGatewayResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnbindDeviceFromGatewayResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
