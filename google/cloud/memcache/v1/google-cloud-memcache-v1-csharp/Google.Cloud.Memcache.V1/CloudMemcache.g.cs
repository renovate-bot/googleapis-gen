// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/memcache/v1/cloud_memcache.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Memcache.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/memcache/v1/cloud_memcache.proto</summary>
  public static partial class CloudMemcacheReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/memcache/v1/cloud_memcache.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CloudMemcacheReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1nb29nbGUvY2xvdWQvbWVtY2FjaGUvdjEvY2xvdWRfbWVtY2FjaGUucHJv",
            "dG8SGGdvb2dsZS5jbG91ZC5tZW1jYWNoZS52MRocZ29vZ2xlL2FwaS9hbm5v",
            "dGF0aW9ucy5wcm90bxoXZ29vZ2xlL2FwaS9jbGllbnQucHJvdG8aH2dvb2ds",
            "ZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aGWdvb2dsZS9hcGkvcmVzb3Vy",
            "Y2UucHJvdG8aI2dvb2dsZS9sb25ncnVubmluZy9vcGVyYXRpb25zLnByb3Rv",
            "GiBnb29nbGUvcHJvdG9idWYvZmllbGRfbWFzay5wcm90bxofZ29vZ2xlL3By",
            "b3RvYnVmL3RpbWVzdGFtcC5wcm90byKjDAoISW5zdGFuY2USEQoEbmFtZRgB",
            "IAEoCUID4EECEhQKDGRpc3BsYXlfbmFtZRgCIAEoCRI+CgZsYWJlbHMYAyAD",
            "KAsyLi5nb29nbGUuY2xvdWQubWVtY2FjaGUudjEuSW5zdGFuY2UuTGFiZWxz",
            "RW50cnkSGgoSYXV0aG9yaXplZF9uZXR3b3JrGAQgASgJEg0KBXpvbmVzGAUg",
            "AygJEhcKCm5vZGVfY291bnQYBiABKAVCA+BBAhJHCgtub2RlX2NvbmZpZxgH",
            "IAEoCzItLmdvb2dsZS5jbG91ZC5tZW1jYWNoZS52MS5JbnN0YW5jZS5Ob2Rl",
            "Q29uZmlnQgPgQQISQwoQbWVtY2FjaGVfdmVyc2lvbhgJIAEoDjIpLmdvb2ds",
            "ZS5jbG91ZC5tZW1jYWNoZS52MS5NZW1jYWNoZVZlcnNpb24SQAoKcGFyYW1l",
            "dGVycxgLIAEoCzIsLmdvb2dsZS5jbG91ZC5tZW1jYWNoZS52MS5NZW1jYWNo",
            "ZVBhcmFtZXRlcnMSRAoObWVtY2FjaGVfbm9kZXMYDCADKAsyJy5nb29nbGUu",
            "Y2xvdWQubWVtY2FjaGUudjEuSW5zdGFuY2UuTm9kZUID4EEDEjQKC2NyZWF0",
            "ZV90aW1lGA0gASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EED",
            "EjQKC3VwZGF0ZV90aW1lGA4gASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcEID4EEDEjwKBXN0YXRlGA8gASgOMiguZ29vZ2xlLmNsb3VkLm1lbWNh",
            "Y2hlLnYxLkluc3RhbmNlLlN0YXRlQgPgQQMSIgoVbWVtY2FjaGVfZnVsbF92",
            "ZXJzaW9uGBIgASgJQgPgQQMSTQoRaW5zdGFuY2VfbWVzc2FnZXMYEyADKAsy",
            "Mi5nb29nbGUuY2xvdWQubWVtY2FjaGUudjEuSW5zdGFuY2UuSW5zdGFuY2VN",
            "ZXNzYWdlEh8KEmRpc2NvdmVyeV9lbmRwb2ludBgUIAEoCUID4EEDGkEKCk5v",
            "ZGVDb25maWcSFgoJY3B1X2NvdW50GAEgASgFQgPgQQISGwoObWVtb3J5X3Np",
            "emVfbWIYAiABKAVCA+BBAhqvAgoETm9kZRIUCgdub2RlX2lkGAEgASgJQgPg",
            "QQMSEQoEem9uZRgCIAEoCUID4EEDEkEKBXN0YXRlGAMgASgOMi0uZ29vZ2xl",
            "LmNsb3VkLm1lbWNhY2hlLnYxLkluc3RhbmNlLk5vZGUuU3RhdGVCA+BBAxIR",
            "CgRob3N0GAQgASgJQgPgQQMSEQoEcG9ydBgFIAEoBUID4EEDEkAKCnBhcmFt",
            "ZXRlcnMYBiABKAsyLC5nb29nbGUuY2xvdWQubWVtY2FjaGUudjEuTWVtY2Fj",
            "aGVQYXJhbWV0ZXJzIlMKBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAAS",
            "DAoIQ1JFQVRJTkcQARIJCgVSRUFEWRACEgwKCERFTEVUSU5HEAMSDAoIVVBE",
            "QVRJTkcQBBqpAQoPSW5zdGFuY2VNZXNzYWdlEkUKBGNvZGUYASABKA4yNy5n",
            "b29nbGUuY2xvdWQubWVtY2FjaGUudjEuSW5zdGFuY2UuSW5zdGFuY2VNZXNz",
            "YWdlLkNvZGUSDwoHbWVzc2FnZRgCIAEoCSI+CgRDb2RlEhQKEENPREVfVU5T",
            "UEVDSUZJRUQQABIgChxaT05FX0RJU1RSSUJVVElPTl9VTkJBTEFOQ0VEEAEa",
            "LQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4",
            "ASJhCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgwKCENSRUFUSU5H",
            "EAESCQoFUkVBRFkQAhIMCghERUxFVElORxAEEhoKFlBFUkZPUk1JTkdfTUFJ",
            "TlRFTkFOQ0UQBTpj6kFgCiBtZW1jYWNoZS5nb29nbGVhcGlzLmNvbS9JbnN0",
            "YW5jZRI8cHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259",
            "L2luc3RhbmNlcy97aW5zdGFuY2V9IpoBChRMaXN0SW5zdGFuY2VzUmVxdWVz",
            "dBI5CgZwYXJlbnQYASABKAlCKeBBAvpBIwohbG9jYXRpb25zLmdvb2dsZWFw",
            "aXMuY29tL0xvY2F0aW9uEhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rv",
            "a2VuGAMgASgJEg4KBmZpbHRlchgEIAEoCRIQCghvcmRlcl9ieRgFIAEoCSJ8",
            "ChVMaXN0SW5zdGFuY2VzUmVzcG9uc2USNQoJaW5zdGFuY2VzGAEgAygLMiIu",
            "Z29vZ2xlLmNsb3VkLm1lbWNhY2hlLnYxLkluc3RhbmNlEhcKD25leHRfcGFn",
            "ZV90b2tlbhgCIAEoCRITCgt1bnJlYWNoYWJsZRgDIAMoCSJMChJHZXRJbnN0",
            "YW5jZVJlcXVlc3QSNgoEbmFtZRgBIAEoCUIo4EEC+kEiCiBtZW1jYWNoZS5n",
            "b29nbGVhcGlzLmNvbS9JbnN0YW5jZSKnAQoVQ3JlYXRlSW5zdGFuY2VSZXF1",
            "ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjCiFsb2NhdGlvbnMuZ29vZ2xl",
            "YXBpcy5jb20vTG9jYXRpb24SGAoLaW5zdGFuY2VfaWQYAiABKAlCA+BBAhI5",
            "CghpbnN0YW5jZRgDIAEoCzIiLmdvb2dsZS5jbG91ZC5tZW1jYWNoZS52MS5J",
            "bnN0YW5jZUID4EECIogBChVVcGRhdGVJbnN0YW5jZVJlcXVlc3QSNAoLdXBk",
            "YXRlX21hc2sYASABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrQgPg",
            "QQISOQoIaW5zdGFuY2UYAiABKAsyIi5nb29nbGUuY2xvdWQubWVtY2FjaGUu",
            "djEuSW5zdGFuY2VCA+BBAiJPChVEZWxldGVJbnN0YW5jZVJlcXVlc3QSNgoE",
            "bmFtZRgBIAEoCUIo4EEC+kEiCiBtZW1jYWNoZS5nb29nbGVhcGlzLmNvbS9J",
            "bnN0YW5jZSJ1ChZBcHBseVBhcmFtZXRlcnNSZXF1ZXN0EjYKBG5hbWUYASAB",
            "KAlCKOBBAvpBIgogbWVtY2FjaGUuZ29vZ2xlYXBpcy5jb20vSW5zdGFuY2US",
            "EAoIbm9kZV9pZHMYAiADKAkSEQoJYXBwbHlfYWxsGAMgASgIIskBChdVcGRh",
            "dGVQYXJhbWV0ZXJzUmVxdWVzdBI2CgRuYW1lGAEgASgJQijgQQL6QSIKIG1l",
            "bWNhY2hlLmdvb2dsZWFwaXMuY29tL0luc3RhbmNlEjQKC3VwZGF0ZV9tYXNr",
            "GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFza0ID4EECEkAKCnBh",
            "cmFtZXRlcnMYAyABKAsyLC5nb29nbGUuY2xvdWQubWVtY2FjaGUudjEuTWVt",
            "Y2FjaGVQYXJhbWV0ZXJzIp4BChJNZW1jYWNoZVBhcmFtZXRlcnMSDwoCaWQY",
            "ASABKAlCA+BBAxJICgZwYXJhbXMYAyADKAsyOC5nb29nbGUuY2xvdWQubWVt",
            "Y2FjaGUudjEuTWVtY2FjaGVQYXJhbWV0ZXJzLlBhcmFtc0VudHJ5Gi0KC1Bh",
            "cmFtc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi+QEK",
            "EU9wZXJhdGlvbk1ldGFkYXRhEjQKC2NyZWF0ZV90aW1lGAEgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjEKCGVuZF90aW1lGAIgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEhMKBnRhcmdldBgD",
            "IAEoCUID4EEDEhEKBHZlcmIYBCABKAlCA+BBAxIaCg1zdGF0dXNfZGV0YWls",
            "GAUgASgJQgPgQQMSHQoQY2FuY2VsX3JlcXVlc3RlZBgGIAEoCEID4EEDEhgK",
            "C2FwaV92ZXJzaW9uGAcgASgJQgPgQQMqRQoPTWVtY2FjaGVWZXJzaW9uEiAK",
            "HE1FTUNBQ0hFX1ZFUlNJT05fVU5TUEVDSUZJRUQQABIQCgxNRU1DQUNIRV8x",
            "XzUQATKCDgoNQ2xvdWRNZW1jYWNoZRKwAQoNTGlzdEluc3RhbmNlcxIuLmdv",
            "b2dsZS5jbG91ZC5tZW1jYWNoZS52MS5MaXN0SW5zdGFuY2VzUmVxdWVzdBov",
            "Lmdvb2dsZS5jbG91ZC5tZW1jYWNoZS52MS5MaXN0SW5zdGFuY2VzUmVzcG9u",
            "c2UiPoLT5JMCLxItL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMv",
            "Kn0vaW5zdGFuY2Vz2kEGcGFyZW50Ep0BCgtHZXRJbnN0YW5jZRIsLmdvb2ds",
            "ZS5jbG91ZC5tZW1jYWNoZS52MS5HZXRJbnN0YW5jZVJlcXVlc3QaIi5nb29n",
            "bGUuY2xvdWQubWVtY2FjaGUudjEuSW5zdGFuY2UiPILT5JMCLxItL3YxL3tu",
            "YW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovaW5zdGFuY2VzLyp92kEEbmFt",
            "ZRKSAgoOQ3JlYXRlSW5zdGFuY2USLy5nb29nbGUuY2xvdWQubWVtY2FjaGUu",
            "djEuQ3JlYXRlSW5zdGFuY2VSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5n",
            "Lk9wZXJhdGlvbiKvAYLT5JMCOSItL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9s",
            "b2NhdGlvbnMvKn0vaW5zdGFuY2VzOghpbnN0YW5jZdpBG3BhcmVudCxpbnN0",
            "YW5jZSxpbnN0YW5jZV9pZMpBTwohZ29vZ2xlLmNsb3VkLm1lbWNhY2hlLnYx",
            "Lkluc3RhbmNlEipnb29nbGUuY2xvdWQubWVtY2FjaGUudjEuT3BlcmF0aW9u",
            "TWV0YWRhdGESlAIKDlVwZGF0ZUluc3RhbmNlEi8uZ29vZ2xlLmNsb3VkLm1l",
            "bWNhY2hlLnYxLlVwZGF0ZUluc3RhbmNlUmVxdWVzdBodLmdvb2dsZS5sb25n",
            "cnVubmluZy5PcGVyYXRpb24isQGC0+STAkIyNi92MS97aW5zdGFuY2UubmFt",
            "ZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2luc3RhbmNlcy8qfToIaW5zdGFu",
            "Y2XaQRRpbnN0YW5jZSx1cGRhdGVfbWFza8pBTwohZ29vZ2xlLmNsb3VkLm1l",
            "bWNhY2hlLnYxLkluc3RhbmNlEipnb29nbGUuY2xvdWQubWVtY2FjaGUudjEu",
            "T3BlcmF0aW9uTWV0YWRhdGESoAIKEFVwZGF0ZVBhcmFtZXRlcnMSMS5nb29n",
            "bGUuY2xvdWQubWVtY2FjaGUudjEuVXBkYXRlUGFyYW1ldGVyc1JlcXVlc3Qa",
            "HS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uIrkBgtPkkwJDMj4vdjEv",
            "e25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9pbnN0YW5jZXMvKn06dXBk",
            "YXRlUGFyYW1ldGVyczoBKtpBG25hbWUsdXBkYXRlX21hc2sscGFyYW1ldGVy",
            "c8pBTwohZ29vZ2xlLmNsb3VkLm1lbWNhY2hlLnYxLkluc3RhbmNlEipnb29n",
            "bGUuY2xvdWQubWVtY2FjaGUudjEuT3BlcmF0aW9uTWV0YWRhdGES5QEKDkRl",
            "bGV0ZUluc3RhbmNlEi8uZ29vZ2xlLmNsb3VkLm1lbWNhY2hlLnYxLkRlbGV0",
            "ZUluc3RhbmNlUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRp",
            "b24iggGC0+STAi8qLS92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8q",
            "L2luc3RhbmNlcy8qfdpBBG5hbWXKQUMKFWdvb2dsZS5wcm90b2J1Zi5FbXB0",
            "eRIqZ29vZ2xlLmNsb3VkLm1lbWNhY2hlLnYxLk9wZXJhdGlvbk1ldGFkYXRh",
            "EpkCCg9BcHBseVBhcmFtZXRlcnMSMC5nb29nbGUuY2xvdWQubWVtY2FjaGUu",
            "djEuQXBwbHlQYXJhbWV0ZXJzUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmlu",
            "Zy5PcGVyYXRpb24itAGC0+STAkIiPS92MS97bmFtZT1wcm9qZWN0cy8qL2xv",
            "Y2F0aW9ucy8qL2luc3RhbmNlcy8qfTphcHBseVBhcmFtZXRlcnM6ASraQRdu",
            "YW1lLG5vZGVfaWRzLGFwcGx5X2FsbMpBTwohZ29vZ2xlLmNsb3VkLm1lbWNh",
            "Y2hlLnYxLkluc3RhbmNlEipnb29nbGUuY2xvdWQubWVtY2FjaGUudjEuT3Bl",
            "cmF0aW9uTWV0YWRhdGEaS8pBF21lbWNhY2hlLmdvb2dsZWFwaXMuY29t0kEu",
            "aHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9y",
            "bUJ2Chxjb20uZ29vZ2xlLmNsb3VkLm1lbWNhY2hlLnYxQhJDbG91ZE1lbWNh",
            "Y2hlUHJvdG9QAVpAZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xl",
            "YXBpcy9jbG91ZC9tZW1jYWNoZS92MTttZW1jYWNoZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Memcache.V1.MemcacheVersion), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.Instance), global::Google.Cloud.Memcache.V1.Instance.Parser, new[]{ "Name", "DisplayName", "Labels", "AuthorizedNetwork", "Zones", "NodeCount", "NodeConfig", "MemcacheVersion", "Parameters", "MemcacheNodes", "CreateTime", "UpdateTime", "State", "MemcacheFullVersion", "InstanceMessages", "DiscoveryEndpoint" }, null, new[]{ typeof(global::Google.Cloud.Memcache.V1.Instance.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.Instance.Types.NodeConfig), global::Google.Cloud.Memcache.V1.Instance.Types.NodeConfig.Parser, new[]{ "CpuCount", "MemorySizeMb" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.Instance.Types.Node), global::Google.Cloud.Memcache.V1.Instance.Types.Node.Parser, new[]{ "NodeId", "Zone", "State", "Host", "Port", "Parameters" }, null, new[]{ typeof(global::Google.Cloud.Memcache.V1.Instance.Types.Node.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage), global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Parser, new[]{ "Code", "Message" }, null, new[]{ typeof(global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Types.Code) }, null, null),
            null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.ListInstancesRequest), global::Google.Cloud.Memcache.V1.ListInstancesRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter", "OrderBy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.ListInstancesResponse), global::Google.Cloud.Memcache.V1.ListInstancesResponse.Parser, new[]{ "Instances", "NextPageToken", "Unreachable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.GetInstanceRequest), global::Google.Cloud.Memcache.V1.GetInstanceRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.CreateInstanceRequest), global::Google.Cloud.Memcache.V1.CreateInstanceRequest.Parser, new[]{ "Parent", "InstanceId", "Instance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.UpdateInstanceRequest), global::Google.Cloud.Memcache.V1.UpdateInstanceRequest.Parser, new[]{ "UpdateMask", "Instance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.DeleteInstanceRequest), global::Google.Cloud.Memcache.V1.DeleteInstanceRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.ApplyParametersRequest), global::Google.Cloud.Memcache.V1.ApplyParametersRequest.Parser, new[]{ "Name", "NodeIds", "ApplyAll" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.UpdateParametersRequest), global::Google.Cloud.Memcache.V1.UpdateParametersRequest.Parser, new[]{ "Name", "UpdateMask", "Parameters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.MemcacheParameters), global::Google.Cloud.Memcache.V1.MemcacheParameters.Parser, new[]{ "Id", "Params" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Memcache.V1.OperationMetadata), global::Google.Cloud.Memcache.V1.OperationMetadata.Parser, new[]{ "CreateTime", "EndTime", "Target", "Verb", "StatusDetail", "CancelRequested", "ApiVersion" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Memcached versions supported by our service.
  /// </summary>
  public enum MemcacheVersion {
    [pbr::OriginalName("MEMCACHE_VERSION_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Memcached 1.5 version.
    /// </summary>
    [pbr::OriginalName("MEMCACHE_1_5")] Memcache15 = 1,
  }

  #endregion

  #region Messages
  public sealed partial class Instance : pb::IMessage<Instance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Instance> _parser = new pb::MessageParser<Instance>(() => new Instance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Instance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Memcache.V1.CloudMemcacheReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instance(Instance other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      labels_ = other.labels_.Clone();
      authorizedNetwork_ = other.authorizedNetwork_;
      zones_ = other.zones_.Clone();
      nodeCount_ = other.nodeCount_;
      nodeConfig_ = other.nodeConfig_ != null ? other.nodeConfig_.Clone() : null;
      memcacheVersion_ = other.memcacheVersion_;
      parameters_ = other.parameters_ != null ? other.parameters_.Clone() : null;
      memcacheNodes_ = other.memcacheNodes_.Clone();
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      state_ = other.state_;
      memcacheFullVersion_ = other.memcacheFullVersion_;
      instanceMessages_ = other.instanceMessages_.Clone();
      discoveryEndpoint_ = other.discoveryEndpoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instance Clone() {
      return new Instance(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Unique name of the resource in this scope including project and
    /// location using the form:
    ///     `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
    ///
    /// Note: Memcached instances are managed and addressed at regional level so
    /// location_id here refers to a GCP region; however, users may choose which
    /// zones Memcached nodes within an instances should be provisioned in.
    /// Refer to [zones] field for more details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// User provided name for the instance only used for display
    /// purposes. Cannot be more than 80 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 26);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Resource labels to represent user-provided metadata.
    /// Refer to cloud documentation on labels for more details.
    /// https://cloud.google.com/compute/docs/labeling-resources
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "authorized_network" field.</summary>
    public const int AuthorizedNetworkFieldNumber = 4;
    private string authorizedNetwork_ = "";
    /// <summary>
    /// The full name of the Google Compute Engine
    /// [network](/compute/docs/networks-and-firewalls#networks) to which the
    /// instance is connected. If left unspecified, the `default` network
    /// will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorizedNetwork {
      get { return authorizedNetwork_; }
      set {
        authorizedNetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zones" field.</summary>
    public const int ZonesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_zones_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> zones_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Zones where Memcached nodes should be provisioned in.
    /// Memcached nodes will be equally distributed across these zones. If not
    /// provided, the service will by default create nodes in all zones in the
    /// region for the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Zones {
      get { return zones_; }
    }

    /// <summary>Field number for the "node_count" field.</summary>
    public const int NodeCountFieldNumber = 6;
    private int nodeCount_;
    /// <summary>
    /// Required. Number of nodes in the Memcached instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeCount {
      get { return nodeCount_; }
      set {
        nodeCount_ = value;
      }
    }

    /// <summary>Field number for the "node_config" field.</summary>
    public const int NodeConfigFieldNumber = 7;
    private global::Google.Cloud.Memcache.V1.Instance.Types.NodeConfig nodeConfig_;
    /// <summary>
    /// Required. Configuration for Memcached nodes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Memcache.V1.Instance.Types.NodeConfig NodeConfig {
      get { return nodeConfig_; }
      set {
        nodeConfig_ = value;
      }
    }

    /// <summary>Field number for the "memcache_version" field.</summary>
    public const int MemcacheVersionFieldNumber = 9;
    private global::Google.Cloud.Memcache.V1.MemcacheVersion memcacheVersion_ = global::Google.Cloud.Memcache.V1.MemcacheVersion.Unspecified;
    /// <summary>
    /// The major version of Memcached software.
    /// If not provided, latest supported version will be used. Currently the
    /// latest supported major version is MEMCACHE_1_5.
    /// The minor version will be automatically determined by our system based on
    /// the latest supported minor version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Memcache.V1.MemcacheVersion MemcacheVersion {
      get { return memcacheVersion_; }
      set {
        memcacheVersion_ = value;
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 11;
    private global::Google.Cloud.Memcache.V1.MemcacheParameters parameters_;
    /// <summary>
    /// Optional: User defined parameters to apply to the memcached process
    /// on each node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Memcache.V1.MemcacheParameters Parameters {
      get { return parameters_; }
      set {
        parameters_ = value;
      }
    }

    /// <summary>Field number for the "memcache_nodes" field.</summary>
    public const int MemcacheNodesFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Google.Cloud.Memcache.V1.Instance.Types.Node> _repeated_memcacheNodes_codec
        = pb::FieldCodec.ForMessage(98, global::Google.Cloud.Memcache.V1.Instance.Types.Node.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Memcache.V1.Instance.Types.Node> memcacheNodes_ = new pbc::RepeatedField<global::Google.Cloud.Memcache.V1.Instance.Types.Node>();
    /// <summary>
    /// Output only. List of Memcached nodes.
    /// Refer to [Node] message for more details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Memcache.V1.Instance.Types.Node> MemcacheNodes {
      get { return memcacheNodes_; }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 13;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time the instance was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 14;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The time the instance was updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 15;
    private global::Google.Cloud.Memcache.V1.Instance.Types.State state_ = global::Google.Cloud.Memcache.V1.Instance.Types.State.Unspecified;
    /// <summary>
    /// Output only. The state of this Memcached instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Memcache.V1.Instance.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "memcache_full_version" field.</summary>
    public const int MemcacheFullVersionFieldNumber = 18;
    private string memcacheFullVersion_ = "";
    /// <summary>
    /// Output only. The full version of memcached server running on this instance.
    /// System automatically determines the full memcached version for an instance
    /// based on the input MemcacheVersion.
    /// The full version format will be "memcached-1.5.16".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemcacheFullVersion {
      get { return memcacheFullVersion_; }
      set {
        memcacheFullVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_messages" field.</summary>
    public const int InstanceMessagesFieldNumber = 19;
    private static readonly pb::FieldCodec<global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage> _repeated_instanceMessages_codec
        = pb::FieldCodec.ForMessage(154, global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage> instanceMessages_ = new pbc::RepeatedField<global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage>();
    /// <summary>
    /// List of messages that describe current statuses of memcached instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage> InstanceMessages {
      get { return instanceMessages_; }
    }

    /// <summary>Field number for the "discovery_endpoint" field.</summary>
    public const int DiscoveryEndpointFieldNumber = 20;
    private string discoveryEndpoint_ = "";
    /// <summary>
    /// Output only. Endpoint for Discovery API
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiscoveryEndpoint {
      get { return discoveryEndpoint_; }
      set {
        discoveryEndpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Instance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Instance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (AuthorizedNetwork != other.AuthorizedNetwork) return false;
      if(!zones_.Equals(other.zones_)) return false;
      if (NodeCount != other.NodeCount) return false;
      if (!object.Equals(NodeConfig, other.NodeConfig)) return false;
      if (MemcacheVersion != other.MemcacheVersion) return false;
      if (!object.Equals(Parameters, other.Parameters)) return false;
      if(!memcacheNodes_.Equals(other.memcacheNodes_)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (State != other.State) return false;
      if (MemcacheFullVersion != other.MemcacheFullVersion) return false;
      if(!instanceMessages_.Equals(other.instanceMessages_)) return false;
      if (DiscoveryEndpoint != other.DiscoveryEndpoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (AuthorizedNetwork.Length != 0) hash ^= AuthorizedNetwork.GetHashCode();
      hash ^= zones_.GetHashCode();
      if (NodeCount != 0) hash ^= NodeCount.GetHashCode();
      if (nodeConfig_ != null) hash ^= NodeConfig.GetHashCode();
      if (MemcacheVersion != global::Google.Cloud.Memcache.V1.MemcacheVersion.Unspecified) hash ^= MemcacheVersion.GetHashCode();
      if (parameters_ != null) hash ^= Parameters.GetHashCode();
      hash ^= memcacheNodes_.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (State != global::Google.Cloud.Memcache.V1.Instance.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (MemcacheFullVersion.Length != 0) hash ^= MemcacheFullVersion.GetHashCode();
      hash ^= instanceMessages_.GetHashCode();
      if (DiscoveryEndpoint.Length != 0) hash ^= DiscoveryEndpoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (AuthorizedNetwork.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AuthorizedNetwork);
      }
      zones_.WriteTo(output, _repeated_zones_codec);
      if (NodeCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(NodeCount);
      }
      if (nodeConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(NodeConfig);
      }
      if (MemcacheVersion != global::Google.Cloud.Memcache.V1.MemcacheVersion.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) MemcacheVersion);
      }
      if (parameters_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Parameters);
      }
      memcacheNodes_.WriteTo(output, _repeated_memcacheNodes_codec);
      if (createTime_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(UpdateTime);
      }
      if (State != global::Google.Cloud.Memcache.V1.Instance.Types.State.Unspecified) {
        output.WriteRawTag(120);
        output.WriteEnum((int) State);
      }
      if (MemcacheFullVersion.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(MemcacheFullVersion);
      }
      instanceMessages_.WriteTo(output, _repeated_instanceMessages_codec);
      if (DiscoveryEndpoint.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(DiscoveryEndpoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (AuthorizedNetwork.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AuthorizedNetwork);
      }
      zones_.WriteTo(ref output, _repeated_zones_codec);
      if (NodeCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(NodeCount);
      }
      if (nodeConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(NodeConfig);
      }
      if (MemcacheVersion != global::Google.Cloud.Memcache.V1.MemcacheVersion.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) MemcacheVersion);
      }
      if (parameters_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Parameters);
      }
      memcacheNodes_.WriteTo(ref output, _repeated_memcacheNodes_codec);
      if (createTime_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(UpdateTime);
      }
      if (State != global::Google.Cloud.Memcache.V1.Instance.Types.State.Unspecified) {
        output.WriteRawTag(120);
        output.WriteEnum((int) State);
      }
      if (MemcacheFullVersion.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(MemcacheFullVersion);
      }
      instanceMessages_.WriteTo(ref output, _repeated_instanceMessages_codec);
      if (DiscoveryEndpoint.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(DiscoveryEndpoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (AuthorizedNetwork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorizedNetwork);
      }
      size += zones_.CalculateSize(_repeated_zones_codec);
      if (NodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeCount);
      }
      if (nodeConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeConfig);
      }
      if (MemcacheVersion != global::Google.Cloud.Memcache.V1.MemcacheVersion.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MemcacheVersion);
      }
      if (parameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parameters);
      }
      size += memcacheNodes_.CalculateSize(_repeated_memcacheNodes_codec);
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (State != global::Google.Cloud.Memcache.V1.Instance.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (MemcacheFullVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemcacheFullVersion);
      }
      size += instanceMessages_.CalculateSize(_repeated_instanceMessages_codec);
      if (DiscoveryEndpoint.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DiscoveryEndpoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Instance other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      labels_.Add(other.labels_);
      if (other.AuthorizedNetwork.Length != 0) {
        AuthorizedNetwork = other.AuthorizedNetwork;
      }
      zones_.Add(other.zones_);
      if (other.NodeCount != 0) {
        NodeCount = other.NodeCount;
      }
      if (other.nodeConfig_ != null) {
        if (nodeConfig_ == null) {
          NodeConfig = new global::Google.Cloud.Memcache.V1.Instance.Types.NodeConfig();
        }
        NodeConfig.MergeFrom(other.NodeConfig);
      }
      if (other.MemcacheVersion != global::Google.Cloud.Memcache.V1.MemcacheVersion.Unspecified) {
        MemcacheVersion = other.MemcacheVersion;
      }
      if (other.parameters_ != null) {
        if (parameters_ == null) {
          Parameters = new global::Google.Cloud.Memcache.V1.MemcacheParameters();
        }
        Parameters.MergeFrom(other.Parameters);
      }
      memcacheNodes_.Add(other.memcacheNodes_);
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.State != global::Google.Cloud.Memcache.V1.Instance.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.MemcacheFullVersion.Length != 0) {
        MemcacheFullVersion = other.MemcacheFullVersion;
      }
      instanceMessages_.Add(other.instanceMessages_);
      if (other.DiscoveryEndpoint.Length != 0) {
        DiscoveryEndpoint = other.DiscoveryEndpoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 34: {
            AuthorizedNetwork = input.ReadString();
            break;
          }
          case 42: {
            zones_.AddEntriesFrom(input, _repeated_zones_codec);
            break;
          }
          case 48: {
            NodeCount = input.ReadInt32();
            break;
          }
          case 58: {
            if (nodeConfig_ == null) {
              NodeConfig = new global::Google.Cloud.Memcache.V1.Instance.Types.NodeConfig();
            }
            input.ReadMessage(NodeConfig);
            break;
          }
          case 72: {
            MemcacheVersion = (global::Google.Cloud.Memcache.V1.MemcacheVersion) input.ReadEnum();
            break;
          }
          case 90: {
            if (parameters_ == null) {
              Parameters = new global::Google.Cloud.Memcache.V1.MemcacheParameters();
            }
            input.ReadMessage(Parameters);
            break;
          }
          case 98: {
            memcacheNodes_.AddEntriesFrom(input, _repeated_memcacheNodes_codec);
            break;
          }
          case 106: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 114: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 120: {
            State = (global::Google.Cloud.Memcache.V1.Instance.Types.State) input.ReadEnum();
            break;
          }
          case 146: {
            MemcacheFullVersion = input.ReadString();
            break;
          }
          case 154: {
            instanceMessages_.AddEntriesFrom(input, _repeated_instanceMessages_codec);
            break;
          }
          case 162: {
            DiscoveryEndpoint = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 34: {
            AuthorizedNetwork = input.ReadString();
            break;
          }
          case 42: {
            zones_.AddEntriesFrom(ref input, _repeated_zones_codec);
            break;
          }
          case 48: {
            NodeCount = input.ReadInt32();
            break;
          }
          case 58: {
            if (nodeConfig_ == null) {
              NodeConfig = new global::Google.Cloud.Memcache.V1.Instance.Types.NodeConfig();
            }
            input.ReadMessage(NodeConfig);
            break;
          }
          case 72: {
            MemcacheVersion = (global::Google.Cloud.Memcache.V1.MemcacheVersion) input.ReadEnum();
            break;
          }
          case 90: {
            if (parameters_ == null) {
              Parameters = new global::Google.Cloud.Memcache.V1.MemcacheParameters();
            }
            input.ReadMessage(Parameters);
            break;
          }
          case 98: {
            memcacheNodes_.AddEntriesFrom(ref input, _repeated_memcacheNodes_codec);
            break;
          }
          case 106: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 114: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 120: {
            State = (global::Google.Cloud.Memcache.V1.Instance.Types.State) input.ReadEnum();
            break;
          }
          case 146: {
            MemcacheFullVersion = input.ReadString();
            break;
          }
          case 154: {
            instanceMessages_.AddEntriesFrom(ref input, _repeated_instanceMessages_codec);
            break;
          }
          case 162: {
            DiscoveryEndpoint = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Instance message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Different states of a Memcached instance.
      /// </summary>
      public enum State {
        /// <summary>
        /// State not set.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Memcached instance is being created.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// Memcached instance has been created and ready to be used.
        /// </summary>
        [pbr::OriginalName("READY")] Ready = 2,
        /// <summary>
        /// Memcached instance is being deleted.
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 4,
        /// <summary>
        /// Memcached instance is going through maintenance, e.g. data plane rollout.
        /// </summary>
        [pbr::OriginalName("PERFORMING_MAINTENANCE")] PerformingMaintenance = 5,
      }

      /// <summary>
      /// Configuration for a Memcached Node.
      /// </summary>
      public sealed partial class NodeConfig : pb::IMessage<NodeConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NodeConfig> _parser = new pb::MessageParser<NodeConfig>(() => new NodeConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NodeConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Memcache.V1.Instance.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NodeConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NodeConfig(NodeConfig other) : this() {
          cpuCount_ = other.cpuCount_;
          memorySizeMb_ = other.memorySizeMb_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NodeConfig Clone() {
          return new NodeConfig(this);
        }

        /// <summary>Field number for the "cpu_count" field.</summary>
        public const int CpuCountFieldNumber = 1;
        private int cpuCount_;
        /// <summary>
        /// Required. Number of cpus per Memcached node.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CpuCount {
          get { return cpuCount_; }
          set {
            cpuCount_ = value;
          }
        }

        /// <summary>Field number for the "memory_size_mb" field.</summary>
        public const int MemorySizeMbFieldNumber = 2;
        private int memorySizeMb_;
        /// <summary>
        /// Required. Memory size in MiB for each Memcached node.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MemorySizeMb {
          get { return memorySizeMb_; }
          set {
            memorySizeMb_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NodeConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NodeConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CpuCount != other.CpuCount) return false;
          if (MemorySizeMb != other.MemorySizeMb) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CpuCount != 0) hash ^= CpuCount.GetHashCode();
          if (MemorySizeMb != 0) hash ^= MemorySizeMb.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (CpuCount != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(CpuCount);
          }
          if (MemorySizeMb != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(MemorySizeMb);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (CpuCount != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(CpuCount);
          }
          if (MemorySizeMb != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(MemorySizeMb);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CpuCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(CpuCount);
          }
          if (MemorySizeMb != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemorySizeMb);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NodeConfig other) {
          if (other == null) {
            return;
          }
          if (other.CpuCount != 0) {
            CpuCount = other.CpuCount;
          }
          if (other.MemorySizeMb != 0) {
            MemorySizeMb = other.MemorySizeMb;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                CpuCount = input.ReadInt32();
                break;
              }
              case 16: {
                MemorySizeMb = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                CpuCount = input.ReadInt32();
                break;
              }
              case 16: {
                MemorySizeMb = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Node : pb::IMessage<Node>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Node> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Memcache.V1.Instance.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Node() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Node(Node other) : this() {
          nodeId_ = other.nodeId_;
          zone_ = other.zone_;
          state_ = other.state_;
          host_ = other.host_;
          port_ = other.port_;
          parameters_ = other.parameters_ != null ? other.parameters_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Node Clone() {
          return new Node(this);
        }

        /// <summary>Field number for the "node_id" field.</summary>
        public const int NodeIdFieldNumber = 1;
        private string nodeId_ = "";
        /// <summary>
        /// Output only. Identifier of the Memcached node. The node id does not
        /// include project or location like the Memcached instance name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string NodeId {
          get { return nodeId_; }
          set {
            nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "zone" field.</summary>
        public const int ZoneFieldNumber = 2;
        private string zone_ = "";
        /// <summary>
        /// Output only. Location (GCP Zone) for the Memcached node.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Zone {
          get { return zone_; }
          set {
            zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 3;
        private global::Google.Cloud.Memcache.V1.Instance.Types.Node.Types.State state_ = global::Google.Cloud.Memcache.V1.Instance.Types.Node.Types.State.Unspecified;
        /// <summary>
        /// Output only. Current state of the Memcached node.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Memcache.V1.Instance.Types.Node.Types.State State {
          get { return state_; }
          set {
            state_ = value;
          }
        }

        /// <summary>Field number for the "host" field.</summary>
        public const int HostFieldNumber = 4;
        private string host_ = "";
        /// <summary>
        /// Output only. Hostname or IP address of the Memcached node used by the
        /// clients to connect to the Memcached server on this node.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Host {
          get { return host_; }
          set {
            host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "port" field.</summary>
        public const int PortFieldNumber = 5;
        private int port_;
        /// <summary>
        /// Output only. The port number of the Memcached server on this node.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Port {
          get { return port_; }
          set {
            port_ = value;
          }
        }

        /// <summary>Field number for the "parameters" field.</summary>
        public const int ParametersFieldNumber = 6;
        private global::Google.Cloud.Memcache.V1.MemcacheParameters parameters_;
        /// <summary>
        /// User defined parameters currently applied to the node.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Memcache.V1.MemcacheParameters Parameters {
          get { return parameters_; }
          set {
            parameters_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Node);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Node other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NodeId != other.NodeId) return false;
          if (Zone != other.Zone) return false;
          if (State != other.State) return false;
          if (Host != other.Host) return false;
          if (Port != other.Port) return false;
          if (!object.Equals(Parameters, other.Parameters)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
          if (Zone.Length != 0) hash ^= Zone.GetHashCode();
          if (State != global::Google.Cloud.Memcache.V1.Instance.Types.Node.Types.State.Unspecified) hash ^= State.GetHashCode();
          if (Host.Length != 0) hash ^= Host.GetHashCode();
          if (Port != 0) hash ^= Port.GetHashCode();
          if (parameters_ != null) hash ^= Parameters.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (NodeId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(NodeId);
          }
          if (Zone.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Zone);
          }
          if (State != global::Google.Cloud.Memcache.V1.Instance.Types.Node.Types.State.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) State);
          }
          if (Host.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Host);
          }
          if (Port != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Port);
          }
          if (parameters_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Parameters);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (NodeId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(NodeId);
          }
          if (Zone.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Zone);
          }
          if (State != global::Google.Cloud.Memcache.V1.Instance.Types.Node.Types.State.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) State);
          }
          if (Host.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Host);
          }
          if (Port != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Port);
          }
          if (parameters_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Parameters);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (NodeId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeId);
          }
          if (Zone.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
          }
          if (State != global::Google.Cloud.Memcache.V1.Instance.Types.Node.Types.State.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
          }
          if (Host.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
          }
          if (Port != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
          }
          if (parameters_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parameters);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Node other) {
          if (other == null) {
            return;
          }
          if (other.NodeId.Length != 0) {
            NodeId = other.NodeId;
          }
          if (other.Zone.Length != 0) {
            Zone = other.Zone;
          }
          if (other.State != global::Google.Cloud.Memcache.V1.Instance.Types.Node.Types.State.Unspecified) {
            State = other.State;
          }
          if (other.Host.Length != 0) {
            Host = other.Host;
          }
          if (other.Port != 0) {
            Port = other.Port;
          }
          if (other.parameters_ != null) {
            if (parameters_ == null) {
              Parameters = new global::Google.Cloud.Memcache.V1.MemcacheParameters();
            }
            Parameters.MergeFrom(other.Parameters);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                NodeId = input.ReadString();
                break;
              }
              case 18: {
                Zone = input.ReadString();
                break;
              }
              case 24: {
                State = (global::Google.Cloud.Memcache.V1.Instance.Types.Node.Types.State) input.ReadEnum();
                break;
              }
              case 34: {
                Host = input.ReadString();
                break;
              }
              case 40: {
                Port = input.ReadInt32();
                break;
              }
              case 50: {
                if (parameters_ == null) {
                  Parameters = new global::Google.Cloud.Memcache.V1.MemcacheParameters();
                }
                input.ReadMessage(Parameters);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                NodeId = input.ReadString();
                break;
              }
              case 18: {
                Zone = input.ReadString();
                break;
              }
              case 24: {
                State = (global::Google.Cloud.Memcache.V1.Instance.Types.Node.Types.State) input.ReadEnum();
                break;
              }
              case 34: {
                Host = input.ReadString();
                break;
              }
              case 40: {
                Port = input.ReadInt32();
                break;
              }
              case 50: {
                if (parameters_ == null) {
                  Parameters = new global::Google.Cloud.Memcache.V1.MemcacheParameters();
                }
                input.ReadMessage(Parameters);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Node message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Different states of a Memcached node.
          /// </summary>
          public enum State {
            /// <summary>
            /// Node state is not set.
            /// </summary>
            [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// Node is being created.
            /// </summary>
            [pbr::OriginalName("CREATING")] Creating = 1,
            /// <summary>
            /// Node has been created and ready to be used.
            /// </summary>
            [pbr::OriginalName("READY")] Ready = 2,
            /// <summary>
            /// Node is being deleted.
            /// </summary>
            [pbr::OriginalName("DELETING")] Deleting = 3,
            /// <summary>
            /// Node is being updated.
            /// </summary>
            [pbr::OriginalName("UPDATING")] Updating = 4,
          }

        }
        #endregion

      }

      public sealed partial class InstanceMessage : pb::IMessage<InstanceMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InstanceMessage> _parser = new pb::MessageParser<InstanceMessage>(() => new InstanceMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InstanceMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Memcache.V1.Instance.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InstanceMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InstanceMessage(InstanceMessage other) : this() {
          code_ = other.code_;
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InstanceMessage Clone() {
          return new InstanceMessage(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Types.Code code_ = global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Types.Code.Unspecified;
        /// <summary>
        /// A code that correspond to one type of user-facing message.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Types.Code Code {
          get { return code_; }
          set {
            code_ = value;
          }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 2;
        private string message_ = "";
        /// <summary>
        /// Message on memcached instance which will be exposed to users.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InstanceMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InstanceMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Code != other.Code) return false;
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Code != global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Types.Code.Unspecified) hash ^= Code.GetHashCode();
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Code != global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Types.Code.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Code);
          }
          if (Message.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Code != global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Types.Code.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Code);
          }
          if (Message.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Code != global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Types.Code.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
          }
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InstanceMessage other) {
          if (other == null) {
            return;
          }
          if (other.Code != global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Types.Code.Unspecified) {
            Code = other.Code;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Code = (global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Types.Code) input.ReadEnum();
                break;
              }
              case 18: {
                Message = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Code = (global::Google.Cloud.Memcache.V1.Instance.Types.InstanceMessage.Types.Code) input.ReadEnum();
                break;
              }
              case 18: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the InstanceMessage message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum Code {
            /// <summary>
            /// Message Code not set.
            /// </summary>
            [pbr::OriginalName("CODE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// Memcached nodes are distributed unevenly.
            /// </summary>
            [pbr::OriginalName("ZONE_DISTRIBUTION_UNBALANCED")] ZoneDistributionUnbalanced = 1,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Request for [ListInstances][google.cloud.memcache.v1.CloudMemcache.ListInstances].
  /// </summary>
  public sealed partial class ListInstancesRequest : pb::IMessage<ListInstancesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListInstancesRequest> _parser = new pb::MessageParser<ListInstancesRequest>(() => new ListInstancesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListInstancesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Memcache.V1.CloudMemcacheReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInstancesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInstancesRequest(ListInstancesRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInstancesRequest Clone() {
      return new ListInstancesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The resource name of the instance location using the form:
    ///     `projects/{project_id}/locations/{location_id}`
    /// where `location_id` refers to a GCP region
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of items to return.
    ///
    /// If not specified, a default value of 1000 will be used by the service.
    /// Regardless of the page_size value, the response may include a partial list
    /// and a caller should only rely on response's
    /// [next_page_token][CloudMemcache.ListInstancesResponse.next_page_token]
    /// to determine if there are more instances left to be queried.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// The next_page_token value returned from a previous List request,
    /// if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// List filter. For example, exclude all Memcached instances with name as
    /// my-instance by specifying "name != my-instance".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 5;
    private string orderBy_ = "";
    /// <summary>
    /// Sort results. Supported values are "name", "name desc" or "" (unsorted).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListInstancesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListInstancesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListInstancesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for [ListInstances][google.cloud.memcache.v1.CloudMemcache.ListInstances].
  /// </summary>
  public sealed partial class ListInstancesResponse : pb::IMessage<ListInstancesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListInstancesResponse> _parser = new pb::MessageParser<ListInstancesResponse>(() => new ListInstancesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListInstancesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Memcache.V1.CloudMemcacheReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInstancesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInstancesResponse(ListInstancesResponse other) : this() {
      instances_ = other.instances_.Clone();
      nextPageToken_ = other.nextPageToken_;
      unreachable_ = other.unreachable_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInstancesResponse Clone() {
      return new ListInstancesResponse(this);
    }

    /// <summary>Field number for the "instances" field.</summary>
    public const int InstancesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Memcache.V1.Instance> _repeated_instances_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Memcache.V1.Instance.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Memcache.V1.Instance> instances_ = new pbc::RepeatedField<global::Google.Cloud.Memcache.V1.Instance>();
    /// <summary>
    /// A list of Memcached instances in the project in the specified location,
    /// or across all locations.
    ///
    /// If the `location_id` in the parent field of the request is "-", all regions
    /// available to the project are queried, and the results aggregated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Memcache.V1.Instance> Instances {
      get { return instances_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// Token to retrieve the next page of results, or empty if there are no more
    /// results in the list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unreachable" field.</summary>
    public const int UnreachableFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_unreachable_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> unreachable_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Locations that could not be reached.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Unreachable {
      get { return unreachable_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListInstancesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListInstancesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!instances_.Equals(other.instances_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if(!unreachable_.Equals(other.unreachable_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= instances_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      hash ^= unreachable_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      instances_.WriteTo(output, _repeated_instances_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      unreachable_.WriteTo(output, _repeated_unreachable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      instances_.WriteTo(ref output, _repeated_instances_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      unreachable_.WriteTo(ref output, _repeated_unreachable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += instances_.CalculateSize(_repeated_instances_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      size += unreachable_.CalculateSize(_repeated_unreachable_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListInstancesResponse other) {
      if (other == null) {
        return;
      }
      instances_.Add(other.instances_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      unreachable_.Add(other.unreachable_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            instances_.AddEntriesFrom(input, _repeated_instances_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            unreachable_.AddEntriesFrom(input, _repeated_unreachable_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            instances_.AddEntriesFrom(ref input, _repeated_instances_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            unreachable_.AddEntriesFrom(ref input, _repeated_unreachable_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for [GetInstance][google.cloud.memcache.v1.CloudMemcache.GetInstance].
  /// </summary>
  public sealed partial class GetInstanceRequest : pb::IMessage<GetInstanceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetInstanceRequest> _parser = new pb::MessageParser<GetInstanceRequest>(() => new GetInstanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInstanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Memcache.V1.CloudMemcacheReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInstanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInstanceRequest(GetInstanceRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInstanceRequest Clone() {
      return new GetInstanceRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Memcached instance resource name in the format:
    ///     `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
    /// where `location_id` refers to a GCP region
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInstanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInstanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInstanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for [CreateInstance][google.cloud.memcache.v1.CloudMemcache.CreateInstance].
  /// </summary>
  public sealed partial class CreateInstanceRequest : pb::IMessage<CreateInstanceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateInstanceRequest> _parser = new pb::MessageParser<CreateInstanceRequest>(() => new CreateInstanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateInstanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Memcache.V1.CloudMemcacheReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInstanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInstanceRequest(CreateInstanceRequest other) : this() {
      parent_ = other.parent_;
      instanceId_ = other.instanceId_;
      instance_ = other.instance_ != null ? other.instance_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInstanceRequest Clone() {
      return new CreateInstanceRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The resource name of the instance location using the form:
    ///     `projects/{project_id}/locations/{location_id}`
    /// where `location_id` refers to a GCP region
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 2;
    private string instanceId_ = "";
    /// <summary>
    /// Required. The logical name of the Memcached instance in the user
    /// project with the following restrictions:
    ///
    /// * Must contain only lowercase letters, numbers, and hyphens.
    /// * Must start with a letter.
    /// * Must be between 1-40 characters.
    /// * Must end with a number or a letter.
    /// * Must be unique within the user project / location
    ///
    /// If any of the above are not met, will raise an invalid argument error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 3;
    private global::Google.Cloud.Memcache.V1.Instance instance_;
    /// <summary>
    /// Required. A Memcached Instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Memcache.V1.Instance Instance {
      get { return instance_; }
      set {
        instance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateInstanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateInstanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (InstanceId != other.InstanceId) return false;
      if (!object.Equals(Instance, other.Instance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      if (instance_ != null) hash ^= Instance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (InstanceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstanceId);
      }
      if (instance_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Instance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (InstanceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstanceId);
      }
      if (instance_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Instance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      if (instance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateInstanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
      if (other.instance_ != null) {
        if (instance_ == null) {
          Instance = new global::Google.Cloud.Memcache.V1.Instance();
        }
        Instance.MergeFrom(other.Instance);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            InstanceId = input.ReadString();
            break;
          }
          case 26: {
            if (instance_ == null) {
              Instance = new global::Google.Cloud.Memcache.V1.Instance();
            }
            input.ReadMessage(Instance);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            InstanceId = input.ReadString();
            break;
          }
          case 26: {
            if (instance_ == null) {
              Instance = new global::Google.Cloud.Memcache.V1.Instance();
            }
            input.ReadMessage(Instance);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for [UpdateInstance][google.cloud.memcache.v1.CloudMemcache.UpdateInstance].
  /// </summary>
  public sealed partial class UpdateInstanceRequest : pb::IMessage<UpdateInstanceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateInstanceRequest> _parser = new pb::MessageParser<UpdateInstanceRequest>(() => new UpdateInstanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateInstanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Memcache.V1.CloudMemcacheReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstanceRequest(UpdateInstanceRequest other) : this() {
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      instance_ = other.instance_ != null ? other.instance_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstanceRequest Clone() {
      return new UpdateInstanceRequest(this);
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. Mask of fields to update.
    ///  *   `displayName`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 2;
    private global::Google.Cloud.Memcache.V1.Instance instance_;
    /// <summary>
    /// Required. A Memcached Instance.
    /// Only fields specified in update_mask are updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Memcache.V1.Instance Instance {
      get { return instance_; }
      set {
        instance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateInstanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateInstanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (!object.Equals(Instance, other.Instance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (instance_ != null) hash ^= Instance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (updateMask_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UpdateMask);
      }
      if (instance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Instance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (updateMask_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UpdateMask);
      }
      if (instance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Instance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (instance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateInstanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.instance_ != null) {
        if (instance_ == null) {
          Instance = new global::Google.Cloud.Memcache.V1.Instance();
        }
        Instance.MergeFrom(other.Instance);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 18: {
            if (instance_ == null) {
              Instance = new global::Google.Cloud.Memcache.V1.Instance();
            }
            input.ReadMessage(Instance);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 18: {
            if (instance_ == null) {
              Instance = new global::Google.Cloud.Memcache.V1.Instance();
            }
            input.ReadMessage(Instance);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for [DeleteInstance][google.cloud.memcache.v1.CloudMemcache.DeleteInstance].
  /// </summary>
  public sealed partial class DeleteInstanceRequest : pb::IMessage<DeleteInstanceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteInstanceRequest> _parser = new pb::MessageParser<DeleteInstanceRequest>(() => new DeleteInstanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteInstanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Memcache.V1.CloudMemcacheReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInstanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInstanceRequest(DeleteInstanceRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInstanceRequest Clone() {
      return new DeleteInstanceRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Memcached instance resource name in the format:
    ///     `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
    /// where `location_id` refers to a GCP region
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteInstanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteInstanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteInstanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for [ApplyParameters][google.cloud.memcache.v1.CloudMemcache.ApplyParameters].
  /// </summary>
  public sealed partial class ApplyParametersRequest : pb::IMessage<ApplyParametersRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ApplyParametersRequest> _parser = new pb::MessageParser<ApplyParametersRequest>(() => new ApplyParametersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyParametersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Memcache.V1.CloudMemcacheReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyParametersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyParametersRequest(ApplyParametersRequest other) : this() {
      name_ = other.name_;
      nodeIds_ = other.nodeIds_.Clone();
      applyAll_ = other.applyAll_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyParametersRequest Clone() {
      return new ApplyParametersRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the Memcached instance for which parameter group updates
    /// should be applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_ids" field.</summary>
    public const int NodeIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_nodeIds_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> nodeIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Nodes to which we should apply the instance-level parameter group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> NodeIds {
      get { return nodeIds_; }
    }

    /// <summary>Field number for the "apply_all" field.</summary>
    public const int ApplyAllFieldNumber = 3;
    private bool applyAll_;
    /// <summary>
    /// Whether to apply instance-level parameter group to all nodes. If set to
    /// true, will explicitly restrict users from specifying any nodes, and apply
    /// parameter group updates to all nodes within the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ApplyAll {
      get { return applyAll_; }
      set {
        applyAll_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyParametersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyParametersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!nodeIds_.Equals(other.nodeIds_)) return false;
      if (ApplyAll != other.ApplyAll) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= nodeIds_.GetHashCode();
      if (ApplyAll != false) hash ^= ApplyAll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      nodeIds_.WriteTo(output, _repeated_nodeIds_codec);
      if (ApplyAll != false) {
        output.WriteRawTag(24);
        output.WriteBool(ApplyAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      nodeIds_.WriteTo(ref output, _repeated_nodeIds_codec);
      if (ApplyAll != false) {
        output.WriteRawTag(24);
        output.WriteBool(ApplyAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += nodeIds_.CalculateSize(_repeated_nodeIds_codec);
      if (ApplyAll != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyParametersRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      nodeIds_.Add(other.nodeIds_);
      if (other.ApplyAll != false) {
        ApplyAll = other.ApplyAll;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            nodeIds_.AddEntriesFrom(input, _repeated_nodeIds_codec);
            break;
          }
          case 24: {
            ApplyAll = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            nodeIds_.AddEntriesFrom(ref input, _repeated_nodeIds_codec);
            break;
          }
          case 24: {
            ApplyAll = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for [UpdateParameters][google.cloud.memcache.v1.CloudMemcache.UpdateParameters].
  /// </summary>
  public sealed partial class UpdateParametersRequest : pb::IMessage<UpdateParametersRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateParametersRequest> _parser = new pb::MessageParser<UpdateParametersRequest>(() => new UpdateParametersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateParametersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Memcache.V1.CloudMemcacheReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateParametersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateParametersRequest(UpdateParametersRequest other) : this() {
      name_ = other.name_;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      parameters_ = other.parameters_ != null ? other.parameters_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateParametersRequest Clone() {
      return new UpdateParametersRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the Memcached instance for which the parameters should be
    /// updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. Mask of fields to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 3;
    private global::Google.Cloud.Memcache.V1.MemcacheParameters parameters_;
    /// <summary>
    /// The parameters to apply to the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Memcache.V1.MemcacheParameters Parameters {
      get { return parameters_; }
      set {
        parameters_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateParametersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateParametersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (!object.Equals(Parameters, other.Parameters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (parameters_ != null) hash ^= Parameters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (parameters_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Parameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (parameters_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Parameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (parameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parameters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateParametersRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.parameters_ != null) {
        if (parameters_ == null) {
          Parameters = new global::Google.Cloud.Memcache.V1.MemcacheParameters();
        }
        Parameters.MergeFrom(other.Parameters);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 26: {
            if (parameters_ == null) {
              Parameters = new global::Google.Cloud.Memcache.V1.MemcacheParameters();
            }
            input.ReadMessage(Parameters);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 26: {
            if (parameters_ == null) {
              Parameters = new global::Google.Cloud.Memcache.V1.MemcacheParameters();
            }
            input.ReadMessage(Parameters);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MemcacheParameters : pb::IMessage<MemcacheParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MemcacheParameters> _parser = new pb::MessageParser<MemcacheParameters>(() => new MemcacheParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemcacheParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Memcache.V1.CloudMemcacheReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemcacheParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemcacheParameters(MemcacheParameters other) : this() {
      id_ = other.id_;
      params_ = other.params_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemcacheParameters Clone() {
      return new MemcacheParameters(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Output only. The unique ID associated with this set of parameters. Users
    /// can use this id to determine if the parameters associated with the instance
    /// differ from the parameters associated with the nodes and any action needs
    /// to be taken to apply parameters on nodes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_params_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 26);
    private readonly pbc::MapField<string, string> params_ = new pbc::MapField<string, string>();
    /// <summary>
    /// User defined set of parameters to use in the memcached process.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Params {
      get { return params_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemcacheParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemcacheParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!Params.Equals(other.Params)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= Params.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      params_.WriteTo(output, _map_params_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      params_.WriteTo(ref output, _map_params_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += params_.CalculateSize(_map_params_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemcacheParameters other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      params_.Add(other.params_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            params_.AddEntriesFrom(input, _map_params_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            params_.AddEntriesFrom(ref input, _map_params_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents the metadata of a long-running operation.
  /// </summary>
  public sealed partial class OperationMetadata : pb::IMessage<OperationMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OperationMetadata> _parser = new pb::MessageParser<OperationMetadata>(() => new OperationMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Memcache.V1.CloudMemcacheReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata(OperationMetadata other) : this() {
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      target_ = other.target_;
      verb_ = other.verb_;
      statusDetail_ = other.statusDetail_;
      cancelRequested_ = other.cancelRequested_;
      apiVersion_ = other.apiVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata Clone() {
      return new OperationMetadata(this);
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Time when the operation was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Output only. Time when the operation finished running.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 3;
    private string target_ = "";
    /// <summary>
    /// Output only. Server-defined resource path for the target of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "verb" field.</summary>
    public const int VerbFieldNumber = 4;
    private string verb_ = "";
    /// <summary>
    /// Output only. Name of the verb executed by the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Verb {
      get { return verb_; }
      set {
        verb_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status_detail" field.</summary>
    public const int StatusDetailFieldNumber = 5;
    private string statusDetail_ = "";
    /// <summary>
    /// Output only. Human-readable status of the operation, if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusDetail {
      get { return statusDetail_; }
      set {
        statusDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cancel_requested" field.</summary>
    public const int CancelRequestedFieldNumber = 6;
    private bool cancelRequested_;
    /// <summary>
    /// Output only. Identifies whether the user has requested cancellation
    /// of the operation. Operations that have successfully been cancelled
    /// have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
    /// corresponding to `Code.CANCELLED`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CancelRequested {
      get { return cancelRequested_; }
      set {
        cancelRequested_ = value;
      }
    }

    /// <summary>Field number for the "api_version" field.</summary>
    public const int ApiVersionFieldNumber = 7;
    private string apiVersion_ = "";
    /// <summary>
    /// Output only. API version used to start the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApiVersion {
      get { return apiVersion_; }
      set {
        apiVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Target != other.Target) return false;
      if (Verb != other.Verb) return false;
      if (StatusDetail != other.StatusDetail) return false;
      if (CancelRequested != other.CancelRequested) return false;
      if (ApiVersion != other.ApiVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (Verb.Length != 0) hash ^= Verb.GetHashCode();
      if (StatusDetail.Length != 0) hash ^= StatusDetail.GetHashCode();
      if (CancelRequested != false) hash ^= CancelRequested.GetHashCode();
      if (ApiVersion.Length != 0) hash ^= ApiVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (Verb.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Verb);
      }
      if (StatusDetail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusDetail);
      }
      if (CancelRequested != false) {
        output.WriteRawTag(48);
        output.WriteBool(CancelRequested);
      }
      if (ApiVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ApiVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Target);
      }
      if (Verb.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Verb);
      }
      if (StatusDetail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusDetail);
      }
      if (CancelRequested != false) {
        output.WriteRawTag(48);
        output.WriteBool(CancelRequested);
      }
      if (ApiVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ApiVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (Verb.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Verb);
      }
      if (StatusDetail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusDetail);
      }
      if (CancelRequested != false) {
        size += 1 + 1;
      }
      if (ApiVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.Verb.Length != 0) {
        Verb = other.Verb;
      }
      if (other.StatusDetail.Length != 0) {
        StatusDetail = other.StatusDetail;
      }
      if (other.CancelRequested != false) {
        CancelRequested = other.CancelRequested;
      }
      if (other.ApiVersion.Length != 0) {
        ApiVersion = other.ApiVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            Verb = input.ReadString();
            break;
          }
          case 42: {
            StatusDetail = input.ReadString();
            break;
          }
          case 48: {
            CancelRequested = input.ReadBool();
            break;
          }
          case 58: {
            ApiVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Target = input.ReadString();
            break;
          }
          case 34: {
            Verb = input.ReadString();
            break;
          }
          case 42: {
            StatusDetail = input.ReadString();
            break;
          }
          case 48: {
            CancelRequested = input.ReadBool();
            break;
          }
          case 58: {
            ApiVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
