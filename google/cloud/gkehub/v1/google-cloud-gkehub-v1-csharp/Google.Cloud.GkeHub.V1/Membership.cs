// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/gkehub/v1/membership.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.GkeHub.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/gkehub/v1/membership.proto</summary>
  public static partial class MembershipReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/gkehub/v1/membership.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MembershipReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidnb29nbGUvY2xvdWQvZ2tlaHViL3YxL21lbWJlcnNoaXAucHJvdG8SFmdv",
            "b2dsZS5jbG91ZC5na2VodWIudjEaH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZp",
            "b3IucHJvdG8aGWdvb2dsZS9hcGkvcmVzb3VyY2UucHJvdG8aH2dvb2dsZS9w",
            "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlv",
            "bnMucHJvdG8i7gUKCk1lbWJlcnNoaXASQwoIZW5kcG9pbnQYBCABKAsyKi5n",
            "b29nbGUuY2xvdWQuZ2tlaHViLnYxLk1lbWJlcnNoaXBFbmRwb2ludEID4EEB",
            "SAASEQoEbmFtZRgBIAEoCUID4EEDEkMKBmxhYmVscxgCIAMoCzIuLmdvb2ds",
            "ZS5jbG91ZC5na2VodWIudjEuTWVtYmVyc2hpcC5MYWJlbHNFbnRyeUID4EEB",
            "EhgKC2Rlc2NyaXB0aW9uGAMgASgJQgPgQQMSOwoFc3RhdGUYBSABKAsyJy5n",
            "b29nbGUuY2xvdWQuZ2tlaHViLnYxLk1lbWJlcnNoaXBTdGF0ZUID4EEDEjQK",
            "C2NyZWF0ZV90aW1lGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cEID4EEDEjQKC3VwZGF0ZV90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcEID4EEDEjQKC2RlbGV0ZV90aW1lGAggASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEhgKC2V4dGVybmFsX2lkGAkgASgJ",
            "QgPgQQESPQoUbGFzdF9jb25uZWN0aW9uX3RpbWUYCiABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wQgPgQQMSFgoJdW5pcXVlX2lkGAsgASgJQgPg",
            "QQMSOQoJYXV0aG9yaXR5GAwgASgLMiEuZ29vZ2xlLmNsb3VkLmdrZWh1Yi52",
            "MS5BdXRob3JpdHlCA+BBARotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAk6AjgBOmfqQWQKIGdrZWh1Yi5nb29nbGVhcGlzLmNv",
            "bS9NZW1iZXJzaGlwEkBwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3ts",
            "b2NhdGlvbn0vbWVtYmVyc2hpcHMve21lbWJlcnNoaXB9QgYKBHR5cGUioAEK",
            "Ek1lbWJlcnNoaXBFbmRwb2ludBI8Cgtna2VfY2x1c3RlchgBIAEoCzIiLmdv",
            "b2dsZS5jbG91ZC5na2VodWIudjEuR2tlQ2x1c3RlckID4EEBEkwKE2t1YmVy",
            "bmV0ZXNfbWV0YWRhdGEYAiABKAsyKi5nb29nbGUuY2xvdWQuZ2tlaHViLnYx",
            "Lkt1YmVybmV0ZXNNZXRhZGF0YUID4EEDIigKCkdrZUNsdXN0ZXISGgoNcmVz",
            "b3VyY2VfbGluaxgBIAEoCUID4EEFIt8BChJLdWJlcm5ldGVzTWV0YWRhdGES",
            "Kgoda3ViZXJuZXRlc19hcGlfc2VydmVyX3ZlcnNpb24YASABKAlCA+BBAxId",
            "ChBub2RlX3Byb3ZpZGVyX2lkGAIgASgJQgPgQQMSFwoKbm9kZV9jb3VudBgD",
            "IAEoBUID4EEDEhcKCnZjcHVfY291bnQYBCABKAVCA+BBAxIWCgltZW1vcnlf",
            "bWIYBSABKAVCA+BBAxI0Cgt1cGRhdGVfdGltZRhkIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXBCA+BBAyK7AQoPTWVtYmVyc2hpcFN0YXRlEj8K",
            "BGNvZGUYASABKA4yLC5nb29nbGUuY2xvdWQuZ2tlaHViLnYxLk1lbWJlcnNo",
            "aXBTdGF0ZS5Db2RlQgPgQQMiZwoEQ29kZRIUChBDT0RFX1VOU1BFQ0lGSUVE",
            "EAASDAoIQ1JFQVRJTkcQARIJCgVSRUFEWRACEgwKCERFTEVUSU5HEAMSDAoI",
            "VVBEQVRJTkcQBBIUChBTRVJWSUNFX1VQREFUSU5HEAUifQoJQXV0aG9yaXR5",
            "EhMKBmlzc3VlchgBIAEoCUID4EEBEiMKFndvcmtsb2FkX2lkZW50aXR5X3Bv",
            "b2wYAiABKAlCA+BBAxIeChFpZGVudGl0eV9wcm92aWRlchgDIAEoCUID4EED",
            "EhYKCW9pZGNfandrcxgEIAEoDEID4EEBQrsBChpjb20uZ29vZ2xlLmNsb3Vk",
            "LmdrZWh1Yi52MUIPTWVtYmVyc2hpcFByb3RvUAFaPGdvb2dsZS5nb2xhbmcu",
            "b3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvY2xvdWQvZ2tlaHViL3YxO2drZWh1",
            "YqoCFkdvb2dsZS5DbG91ZC5Ha2VIdWIuVjHKAhZHb29nbGVcQ2xvdWRcR2tl",
            "SHViXFYx6gIZR29vZ2xlOjpDbG91ZDo6R2tlSHViOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1.Membership), global::Google.Cloud.GkeHub.V1.Membership.Parser, new[]{ "Endpoint", "Name", "Labels", "Description", "State", "CreateTime", "UpdateTime", "DeleteTime", "ExternalId", "LastConnectionTime", "UniqueId", "Authority" }, new[]{ "Type" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1.MembershipEndpoint), global::Google.Cloud.GkeHub.V1.MembershipEndpoint.Parser, new[]{ "GkeCluster", "KubernetesMetadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1.GkeCluster), global::Google.Cloud.GkeHub.V1.GkeCluster.Parser, new[]{ "ResourceLink" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1.KubernetesMetadata), global::Google.Cloud.GkeHub.V1.KubernetesMetadata.Parser, new[]{ "KubernetesApiServerVersion", "NodeProviderId", "NodeCount", "VcpuCount", "MemoryMb", "UpdateTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1.MembershipState), global::Google.Cloud.GkeHub.V1.MembershipState.Parser, new[]{ "Code" }, null, new[]{ typeof(global::Google.Cloud.GkeHub.V1.MembershipState.Types.Code) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1.Authority), global::Google.Cloud.GkeHub.V1.Authority.Parser, new[]{ "Issuer", "WorkloadIdentityPool", "IdentityProvider", "OidcJwks" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Membership contains information about a member cluster.
  /// </summary>
  public sealed partial class Membership : pb::IMessage<Membership>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Membership> _parser = new pb::MessageParser<Membership>(() => new Membership());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Membership> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1.MembershipReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Membership() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Membership(Membership other) : this() {
      name_ = other.name_;
      labels_ = other.labels_.Clone();
      description_ = other.description_;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      deleteTime_ = other.deleteTime_ != null ? other.deleteTime_.Clone() : null;
      externalId_ = other.externalId_;
      lastConnectionTime_ = other.lastConnectionTime_ != null ? other.lastConnectionTime_.Clone() : null;
      uniqueId_ = other.uniqueId_;
      authority_ = other.authority_ != null ? other.authority_.Clone() : null;
      switch (other.TypeCase) {
        case TypeOneofCase.Endpoint:
          Endpoint = other.Endpoint.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Membership Clone() {
      return new Membership(this);
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 4;
    /// <summary>
    /// Optional. Endpoint information to reach this member.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1.MembershipEndpoint Endpoint {
      get { return typeCase_ == TypeOneofCase.Endpoint ? (global::Google.Cloud.GkeHub.V1.MembershipEndpoint) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Endpoint;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The full, unique name of this Membership resource in the format
    /// `projects/*/locations/*/memberships/{membership_id}`, set during creation.
    ///
    /// `membership_id` must be a valid RFC 1123 compliant DNS label:
    ///
    ///   1. At most 63 characters in length
    ///   2. It must consist of lower case alphanumeric characters or `-`
    ///   3. It must start and end with an alphanumeric character
    ///
    /// Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`,
    /// with a maximum length of 63 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. GCP labels for this membership.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Output only. Description of this membership, limited to 63 characters.
    /// Must match the regex: `[a-zA-Z0-9][a-zA-Z0-9_\-\.\ ]*`
    ///
    /// This field is present for legacy purposes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private global::Google.Cloud.GkeHub.V1.MembershipState state_;
    /// <summary>
    /// Output only. State of the Membership resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1.MembershipState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. When the Membership was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. When the Membership was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "delete_time" field.</summary>
    public const int DeleteTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp deleteTime_;
    /// <summary>
    /// Output only. When the Membership was deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DeleteTime {
      get { return deleteTime_; }
      set {
        deleteTime_ = value;
      }
    }

    /// <summary>Field number for the "external_id" field.</summary>
    public const int ExternalIdFieldNumber = 9;
    private string externalId_ = "";
    /// <summary>
    /// Optional. An externally-generated and managed ID for this Membership. This ID may
    /// be modified after creation, but this is not recommended.
    ///
    /// The ID must match the regex: `[a-zA-Z0-9][a-zA-Z0-9_\-\.]*`
    ///
    /// If this Membership represents a Kubernetes cluster, this value should be
    /// set to the UID of the `kube-system` namespace object.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_connection_time" field.</summary>
    public const int LastConnectionTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastConnectionTime_;
    /// <summary>
    /// Output only. For clusters using Connect, the timestamp of the most recent connection
    /// established with Google Cloud. This time is updated every several minutes,
    /// not continuously. For clusters that do not use GKE Connect, or that have
    /// never connected successfully, this field will be unset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastConnectionTime {
      get { return lastConnectionTime_; }
      set {
        lastConnectionTime_ = value;
      }
    }

    /// <summary>Field number for the "unique_id" field.</summary>
    public const int UniqueIdFieldNumber = 11;
    private string uniqueId_ = "";
    /// <summary>
    /// Output only. Google-generated UUID for this resource. This is unique across all
    /// Membership resources. If a Membership resource is deleted and another
    /// resource with the same name is created, it gets a different unique_id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "authority" field.</summary>
    public const int AuthorityFieldNumber = 12;
    private global::Google.Cloud.GkeHub.V1.Authority authority_;
    /// <summary>
    /// Optional. How to identify workloads from this Membership.
    /// See the documentation on Workload Identity for more details:
    /// https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1.Authority Authority {
      get { return authority_; }
      set {
        authority_ = value;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Endpoint = 4,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Membership);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Membership other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Endpoint, other.Endpoint)) return false;
      if (Name != other.Name) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(DeleteTime, other.DeleteTime)) return false;
      if (ExternalId != other.ExternalId) return false;
      if (!object.Equals(LastConnectionTime, other.LastConnectionTime)) return false;
      if (UniqueId != other.UniqueId) return false;
      if (!object.Equals(Authority, other.Authority)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Endpoint) hash ^= Endpoint.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (deleteTime_ != null) hash ^= DeleteTime.GetHashCode();
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (lastConnectionTime_ != null) hash ^= LastConnectionTime.GetHashCode();
      if (UniqueId.Length != 0) hash ^= UniqueId.GetHashCode();
      if (authority_ != null) hash ^= Authority.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (typeCase_ == TypeOneofCase.Endpoint) {
        output.WriteRawTag(34);
        output.WriteMessage(Endpoint);
      }
      if (state_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(UpdateTime);
      }
      if (deleteTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DeleteTime);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ExternalId);
      }
      if (lastConnectionTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LastConnectionTime);
      }
      if (UniqueId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(UniqueId);
      }
      if (authority_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Authority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (typeCase_ == TypeOneofCase.Endpoint) {
        output.WriteRawTag(34);
        output.WriteMessage(Endpoint);
      }
      if (state_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(UpdateTime);
      }
      if (deleteTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DeleteTime);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ExternalId);
      }
      if (lastConnectionTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LastConnectionTime);
      }
      if (UniqueId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(UniqueId);
      }
      if (authority_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Authority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Endpoint) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Endpoint);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (deleteTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteTime);
      }
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (lastConnectionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastConnectionTime);
      }
      if (UniqueId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueId);
      }
      if (authority_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authority);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Membership other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      labels_.Add(other.labels_);
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::Google.Cloud.GkeHub.V1.MembershipState();
        }
        State.MergeFrom(other.State);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.deleteTime_ != null) {
        if (deleteTime_ == null) {
          DeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DeleteTime.MergeFrom(other.DeleteTime);
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      if (other.lastConnectionTime_ != null) {
        if (lastConnectionTime_ == null) {
          LastConnectionTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastConnectionTime.MergeFrom(other.LastConnectionTime);
      }
      if (other.UniqueId.Length != 0) {
        UniqueId = other.UniqueId;
      }
      if (other.authority_ != null) {
        if (authority_ == null) {
          Authority = new global::Google.Cloud.GkeHub.V1.Authority();
        }
        Authority.MergeFrom(other.Authority);
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Endpoint:
          if (Endpoint == null) {
            Endpoint = new global::Google.Cloud.GkeHub.V1.MembershipEndpoint();
          }
          Endpoint.MergeFrom(other.Endpoint);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Cloud.GkeHub.V1.MembershipEndpoint subBuilder = new global::Google.Cloud.GkeHub.V1.MembershipEndpoint();
            if (typeCase_ == TypeOneofCase.Endpoint) {
              subBuilder.MergeFrom(Endpoint);
            }
            input.ReadMessage(subBuilder);
            Endpoint = subBuilder;
            break;
          }
          case 42: {
            if (state_ == null) {
              State = new global::Google.Cloud.GkeHub.V1.MembershipState();
            }
            input.ReadMessage(State);
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 66: {
            if (deleteTime_ == null) {
              DeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeleteTime);
            break;
          }
          case 74: {
            ExternalId = input.ReadString();
            break;
          }
          case 82: {
            if (lastConnectionTime_ == null) {
              LastConnectionTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastConnectionTime);
            break;
          }
          case 90: {
            UniqueId = input.ReadString();
            break;
          }
          case 98: {
            if (authority_ == null) {
              Authority = new global::Google.Cloud.GkeHub.V1.Authority();
            }
            input.ReadMessage(Authority);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Cloud.GkeHub.V1.MembershipEndpoint subBuilder = new global::Google.Cloud.GkeHub.V1.MembershipEndpoint();
            if (typeCase_ == TypeOneofCase.Endpoint) {
              subBuilder.MergeFrom(Endpoint);
            }
            input.ReadMessage(subBuilder);
            Endpoint = subBuilder;
            break;
          }
          case 42: {
            if (state_ == null) {
              State = new global::Google.Cloud.GkeHub.V1.MembershipState();
            }
            input.ReadMessage(State);
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 66: {
            if (deleteTime_ == null) {
              DeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeleteTime);
            break;
          }
          case 74: {
            ExternalId = input.ReadString();
            break;
          }
          case 82: {
            if (lastConnectionTime_ == null) {
              LastConnectionTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastConnectionTime);
            break;
          }
          case 90: {
            UniqueId = input.ReadString();
            break;
          }
          case 98: {
            if (authority_ == null) {
              Authority = new global::Google.Cloud.GkeHub.V1.Authority();
            }
            input.ReadMessage(Authority);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MembershipEndpoint contains information needed to contact a Kubernetes API,
  /// endpoint and any additional Kubernetes metadata.
  /// </summary>
  public sealed partial class MembershipEndpoint : pb::IMessage<MembershipEndpoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MembershipEndpoint> _parser = new pb::MessageParser<MembershipEndpoint>(() => new MembershipEndpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MembershipEndpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1.MembershipReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MembershipEndpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MembershipEndpoint(MembershipEndpoint other) : this() {
      gkeCluster_ = other.gkeCluster_ != null ? other.gkeCluster_.Clone() : null;
      kubernetesMetadata_ = other.kubernetesMetadata_ != null ? other.kubernetesMetadata_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MembershipEndpoint Clone() {
      return new MembershipEndpoint(this);
    }

    /// <summary>Field number for the "gke_cluster" field.</summary>
    public const int GkeClusterFieldNumber = 1;
    private global::Google.Cloud.GkeHub.V1.GkeCluster gkeCluster_;
    /// <summary>
    /// Optional. GKE-specific information. Only present if this Membership is a GKE cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1.GkeCluster GkeCluster {
      get { return gkeCluster_; }
      set {
        gkeCluster_ = value;
      }
    }

    /// <summary>Field number for the "kubernetes_metadata" field.</summary>
    public const int KubernetesMetadataFieldNumber = 2;
    private global::Google.Cloud.GkeHub.V1.KubernetesMetadata kubernetesMetadata_;
    /// <summary>
    /// Output only. Useful Kubernetes-specific metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1.KubernetesMetadata KubernetesMetadata {
      get { return kubernetesMetadata_; }
      set {
        kubernetesMetadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MembershipEndpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MembershipEndpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GkeCluster, other.GkeCluster)) return false;
      if (!object.Equals(KubernetesMetadata, other.KubernetesMetadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (gkeCluster_ != null) hash ^= GkeCluster.GetHashCode();
      if (kubernetesMetadata_ != null) hash ^= KubernetesMetadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gkeCluster_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GkeCluster);
      }
      if (kubernetesMetadata_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(KubernetesMetadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gkeCluster_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GkeCluster);
      }
      if (kubernetesMetadata_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(KubernetesMetadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (gkeCluster_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GkeCluster);
      }
      if (kubernetesMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KubernetesMetadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MembershipEndpoint other) {
      if (other == null) {
        return;
      }
      if (other.gkeCluster_ != null) {
        if (gkeCluster_ == null) {
          GkeCluster = new global::Google.Cloud.GkeHub.V1.GkeCluster();
        }
        GkeCluster.MergeFrom(other.GkeCluster);
      }
      if (other.kubernetesMetadata_ != null) {
        if (kubernetesMetadata_ == null) {
          KubernetesMetadata = new global::Google.Cloud.GkeHub.V1.KubernetesMetadata();
        }
        KubernetesMetadata.MergeFrom(other.KubernetesMetadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gkeCluster_ == null) {
              GkeCluster = new global::Google.Cloud.GkeHub.V1.GkeCluster();
            }
            input.ReadMessage(GkeCluster);
            break;
          }
          case 18: {
            if (kubernetesMetadata_ == null) {
              KubernetesMetadata = new global::Google.Cloud.GkeHub.V1.KubernetesMetadata();
            }
            input.ReadMessage(KubernetesMetadata);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gkeCluster_ == null) {
              GkeCluster = new global::Google.Cloud.GkeHub.V1.GkeCluster();
            }
            input.ReadMessage(GkeCluster);
            break;
          }
          case 18: {
            if (kubernetesMetadata_ == null) {
              KubernetesMetadata = new global::Google.Cloud.GkeHub.V1.KubernetesMetadata();
            }
            input.ReadMessage(KubernetesMetadata);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// GkeCluster contains information specific to GKE clusters.
  /// </summary>
  public sealed partial class GkeCluster : pb::IMessage<GkeCluster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GkeCluster> _parser = new pb::MessageParser<GkeCluster>(() => new GkeCluster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GkeCluster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1.MembershipReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GkeCluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GkeCluster(GkeCluster other) : this() {
      resourceLink_ = other.resourceLink_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GkeCluster Clone() {
      return new GkeCluster(this);
    }

    /// <summary>Field number for the "resource_link" field.</summary>
    public const int ResourceLinkFieldNumber = 1;
    private string resourceLink_ = "";
    /// <summary>
    /// Immutable. Self-link of the GCP resource for the GKE cluster. For example:
    ///
    ///     //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
    ///
    /// Zonal clusters are also supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceLink {
      get { return resourceLink_; }
      set {
        resourceLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GkeCluster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GkeCluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceLink != other.ResourceLink) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceLink.Length != 0) hash ^= ResourceLink.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResourceLink.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceLink);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResourceLink.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceLink);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceLink.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceLink);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GkeCluster other) {
      if (other == null) {
        return;
      }
      if (other.ResourceLink.Length != 0) {
        ResourceLink = other.ResourceLink;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceLink = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ResourceLink = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// KubernetesMetadata provides informational metadata for Memberships
  /// representing Kubernetes clusters.
  /// </summary>
  public sealed partial class KubernetesMetadata : pb::IMessage<KubernetesMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KubernetesMetadata> _parser = new pb::MessageParser<KubernetesMetadata>(() => new KubernetesMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KubernetesMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1.MembershipReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KubernetesMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KubernetesMetadata(KubernetesMetadata other) : this() {
      kubernetesApiServerVersion_ = other.kubernetesApiServerVersion_;
      nodeProviderId_ = other.nodeProviderId_;
      nodeCount_ = other.nodeCount_;
      vcpuCount_ = other.vcpuCount_;
      memoryMb_ = other.memoryMb_;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KubernetesMetadata Clone() {
      return new KubernetesMetadata(this);
    }

    /// <summary>Field number for the "kubernetes_api_server_version" field.</summary>
    public const int KubernetesApiServerVersionFieldNumber = 1;
    private string kubernetesApiServerVersion_ = "";
    /// <summary>
    /// Output only. Kubernetes API server version string as reported by `/version`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KubernetesApiServerVersion {
      get { return kubernetesApiServerVersion_; }
      set {
        kubernetesApiServerVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_provider_id" field.</summary>
    public const int NodeProviderIdFieldNumber = 2;
    private string nodeProviderId_ = "";
    /// <summary>
    /// Output only. Node providerID as reported by the first node in the list of nodes on
    /// the Kubernetes endpoint. On Kubernetes platforms that support zero-node
    /// clusters (like GKE-on-GCP), the node_count will be zero and the
    /// node_provider_id will be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeProviderId {
      get { return nodeProviderId_; }
      set {
        nodeProviderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_count" field.</summary>
    public const int NodeCountFieldNumber = 3;
    private int nodeCount_;
    /// <summary>
    /// Output only. Node count as reported by Kubernetes nodes resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeCount {
      get { return nodeCount_; }
      set {
        nodeCount_ = value;
      }
    }

    /// <summary>Field number for the "vcpu_count" field.</summary>
    public const int VcpuCountFieldNumber = 4;
    private int vcpuCount_;
    /// <summary>
    /// Output only. vCPU count as reported by Kubernetes nodes resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VcpuCount {
      get { return vcpuCount_; }
      set {
        vcpuCount_ = value;
      }
    }

    /// <summary>Field number for the "memory_mb" field.</summary>
    public const int MemoryMbFieldNumber = 5;
    private int memoryMb_;
    /// <summary>
    /// Output only. The total memory capacity as reported by the sum of all Kubernetes nodes
    /// resources, defined in MB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MemoryMb {
      get { return memoryMb_; }
      set {
        memoryMb_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 100;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The time at which these details were last updated. This update_time is
    /// different from the Membership-level update_time since EndpointDetails are
    /// updated internally for API consumers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KubernetesMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KubernetesMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KubernetesApiServerVersion != other.KubernetesApiServerVersion) return false;
      if (NodeProviderId != other.NodeProviderId) return false;
      if (NodeCount != other.NodeCount) return false;
      if (VcpuCount != other.VcpuCount) return false;
      if (MemoryMb != other.MemoryMb) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (KubernetesApiServerVersion.Length != 0) hash ^= KubernetesApiServerVersion.GetHashCode();
      if (NodeProviderId.Length != 0) hash ^= NodeProviderId.GetHashCode();
      if (NodeCount != 0) hash ^= NodeCount.GetHashCode();
      if (VcpuCount != 0) hash ^= VcpuCount.GetHashCode();
      if (MemoryMb != 0) hash ^= MemoryMb.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (KubernetesApiServerVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(KubernetesApiServerVersion);
      }
      if (NodeProviderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NodeProviderId);
      }
      if (NodeCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NodeCount);
      }
      if (VcpuCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(VcpuCount);
      }
      if (MemoryMb != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MemoryMb);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(UpdateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (KubernetesApiServerVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(KubernetesApiServerVersion);
      }
      if (NodeProviderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NodeProviderId);
      }
      if (NodeCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NodeCount);
      }
      if (VcpuCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(VcpuCount);
      }
      if (MemoryMb != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MemoryMb);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(UpdateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (KubernetesApiServerVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KubernetesApiServerVersion);
      }
      if (NodeProviderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeProviderId);
      }
      if (NodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeCount);
      }
      if (VcpuCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VcpuCount);
      }
      if (MemoryMb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemoryMb);
      }
      if (updateTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KubernetesMetadata other) {
      if (other == null) {
        return;
      }
      if (other.KubernetesApiServerVersion.Length != 0) {
        KubernetesApiServerVersion = other.KubernetesApiServerVersion;
      }
      if (other.NodeProviderId.Length != 0) {
        NodeProviderId = other.NodeProviderId;
      }
      if (other.NodeCount != 0) {
        NodeCount = other.NodeCount;
      }
      if (other.VcpuCount != 0) {
        VcpuCount = other.VcpuCount;
      }
      if (other.MemoryMb != 0) {
        MemoryMb = other.MemoryMb;
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            KubernetesApiServerVersion = input.ReadString();
            break;
          }
          case 18: {
            NodeProviderId = input.ReadString();
            break;
          }
          case 24: {
            NodeCount = input.ReadInt32();
            break;
          }
          case 32: {
            VcpuCount = input.ReadInt32();
            break;
          }
          case 40: {
            MemoryMb = input.ReadInt32();
            break;
          }
          case 802: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            KubernetesApiServerVersion = input.ReadString();
            break;
          }
          case 18: {
            NodeProviderId = input.ReadString();
            break;
          }
          case 24: {
            NodeCount = input.ReadInt32();
            break;
          }
          case 32: {
            VcpuCount = input.ReadInt32();
            break;
          }
          case 40: {
            MemoryMb = input.ReadInt32();
            break;
          }
          case 802: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MembershipState describes the state of a Membership resource.
  /// </summary>
  public sealed partial class MembershipState : pb::IMessage<MembershipState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MembershipState> _parser = new pb::MessageParser<MembershipState>(() => new MembershipState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MembershipState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1.MembershipReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MembershipState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MembershipState(MembershipState other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MembershipState Clone() {
      return new MembershipState(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Cloud.GkeHub.V1.MembershipState.Types.Code code_ = global::Google.Cloud.GkeHub.V1.MembershipState.Types.Code.Unspecified;
    /// <summary>
    /// Output only. The current state of the Membership resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1.MembershipState.Types.Code Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MembershipState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MembershipState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Google.Cloud.GkeHub.V1.MembershipState.Types.Code.Unspecified) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Google.Cloud.GkeHub.V1.MembershipState.Types.Code.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Google.Cloud.GkeHub.V1.MembershipState.Types.Code.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Google.Cloud.GkeHub.V1.MembershipState.Types.Code.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MembershipState other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Google.Cloud.GkeHub.V1.MembershipState.Types.Code.Unspecified) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Google.Cloud.GkeHub.V1.MembershipState.Types.Code) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Google.Cloud.GkeHub.V1.MembershipState.Types.Code) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MembershipState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Code describes the state of a Membership resource.
      /// </summary>
      public enum Code {
        /// <summary>
        /// The code is not set.
        /// </summary>
        [pbr::OriginalName("CODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The cluster is being registered.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// The cluster is registered.
        /// </summary>
        [pbr::OriginalName("READY")] Ready = 2,
        /// <summary>
        /// The cluster is being unregistered.
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 3,
        /// <summary>
        /// The Membership is being updated.
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 4,
        /// <summary>
        /// The Membership is being updated by the Hub Service.
        /// </summary>
        [pbr::OriginalName("SERVICE_UPDATING")] ServiceUpdating = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Authority encodes how Google will recognize identities from this Membership.
  /// See the workload identity documentation for more details:
  /// https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
  /// </summary>
  public sealed partial class Authority : pb::IMessage<Authority>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Authority> _parser = new pb::MessageParser<Authority>(() => new Authority());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Authority> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1.MembershipReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authority() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authority(Authority other) : this() {
      issuer_ = other.issuer_;
      workloadIdentityPool_ = other.workloadIdentityPool_;
      identityProvider_ = other.identityProvider_;
      oidcJwks_ = other.oidcJwks_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authority Clone() {
      return new Authority(this);
    }

    /// <summary>Field number for the "issuer" field.</summary>
    public const int IssuerFieldNumber = 1;
    private string issuer_ = "";
    /// <summary>
    /// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and
    /// be a valid URL with length &lt;2000 characters.
    ///
    /// If set, then Google will allow valid OIDC tokens from this issuer to
    /// authenticate within the workload_identity_pool. OIDC discovery will be
    /// performed on this URI to validate tokens from the issuer.
    ///
    /// Clearing `issuer` disables Workload Identity. `issuer` cannot be directly
    /// modified; it must be cleared (and Workload Identity disabled) before using
    /// a new issuer (and re-enabling Workload Identity).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Issuer {
      get { return issuer_; }
      set {
        issuer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "workload_identity_pool" field.</summary>
    public const int WorkloadIdentityPoolFieldNumber = 2;
    private string workloadIdentityPool_ = "";
    /// <summary>
    /// Output only. The name of the workload identity pool in which `issuer` will be
    /// recognized.
    ///
    /// There is a single Workload Identity Pool per Hub that is shared
    /// between all Memberships that belong to that Hub. For a Hub hosted in
    /// {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`,
    /// although this is subject to change in newer versions of this API.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkloadIdentityPool {
      get { return workloadIdentityPool_; }
      set {
        workloadIdentityPool_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity_provider" field.</summary>
    public const int IdentityProviderFieldNumber = 3;
    private string identityProvider_ = "";
    /// <summary>
    /// Output only. An identity provider that reflects the `issuer` in the workload identity
    /// pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdentityProvider {
      get { return identityProvider_; }
      set {
        identityProvider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oidc_jwks" field.</summary>
    public const int OidcJwksFieldNumber = 4;
    private pb::ByteString oidcJwks_ = pb::ByteString.Empty;
    /// <summary>
    /// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517).
    ///
    /// When this field is set, OIDC discovery will NOT be performed on `issuer`,
    /// and instead OIDC tokens will be validated using this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OidcJwks {
      get { return oidcJwks_; }
      set {
        oidcJwks_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Authority);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Authority other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Issuer != other.Issuer) return false;
      if (WorkloadIdentityPool != other.WorkloadIdentityPool) return false;
      if (IdentityProvider != other.IdentityProvider) return false;
      if (OidcJwks != other.OidcJwks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Issuer.Length != 0) hash ^= Issuer.GetHashCode();
      if (WorkloadIdentityPool.Length != 0) hash ^= WorkloadIdentityPool.GetHashCode();
      if (IdentityProvider.Length != 0) hash ^= IdentityProvider.GetHashCode();
      if (OidcJwks.Length != 0) hash ^= OidcJwks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Issuer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Issuer);
      }
      if (WorkloadIdentityPool.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WorkloadIdentityPool);
      }
      if (IdentityProvider.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdentityProvider);
      }
      if (OidcJwks.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(OidcJwks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Issuer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Issuer);
      }
      if (WorkloadIdentityPool.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WorkloadIdentityPool);
      }
      if (IdentityProvider.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdentityProvider);
      }
      if (OidcJwks.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(OidcJwks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Issuer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Issuer);
      }
      if (WorkloadIdentityPool.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkloadIdentityPool);
      }
      if (IdentityProvider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdentityProvider);
      }
      if (OidcJwks.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OidcJwks);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Authority other) {
      if (other == null) {
        return;
      }
      if (other.Issuer.Length != 0) {
        Issuer = other.Issuer;
      }
      if (other.WorkloadIdentityPool.Length != 0) {
        WorkloadIdentityPool = other.WorkloadIdentityPool;
      }
      if (other.IdentityProvider.Length != 0) {
        IdentityProvider = other.IdentityProvider;
      }
      if (other.OidcJwks.Length != 0) {
        OidcJwks = other.OidcJwks;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Issuer = input.ReadString();
            break;
          }
          case 18: {
            WorkloadIdentityPool = input.ReadString();
            break;
          }
          case 26: {
            IdentityProvider = input.ReadString();
            break;
          }
          case 34: {
            OidcJwks = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Issuer = input.ReadString();
            break;
          }
          case 18: {
            WorkloadIdentityPool = input.ReadString();
            break;
          }
          case 26: {
            IdentityProvider = input.ReadString();
            break;
          }
          case 34: {
            OidcJwks = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
