// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/gkehub/v1alpha/feature.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.GkeHub.V1Alpha {

  /// <summary>Holder for reflection information generated from google/cloud/gkehub/v1alpha/feature.proto</summary>
  public static partial class FeatureReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/gkehub/v1alpha/feature.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FeatureReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvY2xvdWQvZ2tlaHViL3YxYWxwaGEvZmVhdHVyZS5wcm90bxIb",
            "Z29vZ2xlLmNsb3VkLmdrZWh1Yi52MWFscGhhGh9nb29nbGUvYXBpL2ZpZWxk",
            "X2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGkVn",
            "b29nbGUvY2xvdWQvZ2tlaHViL3YxYWxwaGEvY2xvdWRhdWRpdGxvZ2dpbmcv",
            "Y2xvdWRhdWRpdGxvZ2dpbmcucHJvdG8aQ2dvb2dsZS9jbG91ZC9na2VodWIv",
            "djFhbHBoYS9jb25maWdtYW5hZ2VtZW50L2NvbmZpZ21hbmFnZW1lbnQucHJv",
            "dG8aM2dvb2dsZS9jbG91ZC9na2VodWIvdjFhbHBoYS9tZXRlcmluZy9tZXRl",
            "cmluZy5wcm90bxpJZ29vZ2xlL2Nsb3VkL2drZWh1Yi92MWFscGhhL211bHRp",
            "Y2x1c3RlcmluZ3Jlc3MvbXVsdGljbHVzdGVyaW5ncmVzcy5wcm90bxo5Z29v",
            "Z2xlL2Nsb3VkL2drZWh1Yi92MWFscGhhL3NlcnZpY2VtZXNoL3NlcnZpY2Vt",
            "ZXNoLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhxn",
            "b29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvIvcHCgdGZWF0dXJlEhEKBG5h",
            "bWUYASABKAlCA+BBAxJACgZsYWJlbHMYAiADKAsyMC5nb29nbGUuY2xvdWQu",
            "Z2tlaHViLnYxYWxwaGEuRmVhdHVyZS5MYWJlbHNFbnRyeRJOCg5yZXNvdXJj",
            "ZV9zdGF0ZRgDIAEoCzIxLmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBoYS5G",
            "ZWF0dXJlUmVzb3VyY2VTdGF0ZUID4EEDEkEKBHNwZWMYBCABKAsyLi5nb29n",
            "bGUuY2xvdWQuZ2tlaHViLnYxYWxwaGEuQ29tbW9uRmVhdHVyZVNwZWNCA+BB",
            "ARJYChBtZW1iZXJzaGlwX3NwZWNzGAUgAygLMjkuZ29vZ2xlLmNsb3VkLmdr",
            "ZWh1Yi52MWFscGhhLkZlYXR1cmUuTWVtYmVyc2hpcFNwZWNzRW50cnlCA+BB",
            "ARJDCgVzdGF0ZRgGIAEoCzIvLmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBo",
            "YS5Db21tb25GZWF0dXJlU3RhdGVCA+BBAxJaChFtZW1iZXJzaGlwX3N0YXRl",
            "cxgHIAMoCzI6Lmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBoYS5GZWF0dXJl",
            "Lk1lbWJlcnNoaXBTdGF0ZXNFbnRyeUID4EEDEjQKC2NyZWF0ZV90aW1lGAgg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0",
            "ZV90aW1lGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EED",
            "EjQKC2RlbGV0ZV90aW1lGAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcEID4EEDGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1",
            "ZRgCIAEoCToCOAEaagoUTWVtYmVyc2hpcFNwZWNzRW50cnkSCwoDa2V5GAEg",
            "ASgJEkEKBXZhbHVlGAIgASgLMjIuZ29vZ2xlLmNsb3VkLmdrZWh1Yi52MWFs",
            "cGhhLk1lbWJlcnNoaXBGZWF0dXJlU3BlYzoCOAEabAoVTWVtYmVyc2hpcFN0",
            "YXRlc0VudHJ5EgsKA2tleRgBIAEoCRJCCgV2YWx1ZRgCIAEoCzIzLmdvb2ds",
            "ZS5jbG91ZC5na2VodWIudjFhbHBoYS5NZW1iZXJzaGlwRmVhdHVyZVN0YXRl",
            "OgI4ATpe6kFbCh1na2VodWIuZ29vZ2xlYXBpcy5jb20vRmVhdHVyZRI6cHJv",
            "amVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2ZlYXR1cmVz",
            "L3tmZWF0dXJlfSLLAQoURmVhdHVyZVJlc291cmNlU3RhdGUSRgoFc3RhdGUY",
            "ASABKA4yNy5nb29nbGUuY2xvdWQuZ2tlaHViLnYxYWxwaGEuRmVhdHVyZVJl",
            "c291cmNlU3RhdGUuU3RhdGUiawoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJ",
            "RUQQABIMCghFTkFCTElORxABEgoKBkFDVElWRRACEg0KCURJU0FCTElORxAD",
            "EgwKCFVQREFUSU5HEAQSFAoQU0VSVklDRV9VUERBVElORxAFItABCgxGZWF0",
            "dXJlU3RhdGUSPAoEY29kZRgBIAEoDjIuLmdvb2dsZS5jbG91ZC5na2VodWIu",
            "djFhbHBoYS5GZWF0dXJlU3RhdGUuQ29kZRITCgtkZXNjcmlwdGlvbhgCIAEo",
            "CRIvCgt1cGRhdGVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXAiPAoEQ29kZRIUChBDT0RFX1VOU1BFQ0lGSUVEEAASBgoCT0sQARIL",
            "CgdXQVJOSU5HEAISCQoFRVJST1IQAyLZAQoRQ29tbW9uRmVhdHVyZVNwZWMS",
            "WwoTbXVsdGljbHVzdGVyaW5ncmVzcxhmIAEoCzI8Lmdvb2dsZS5jbG91ZC5n",
            "a2VodWIubXVsdGljbHVzdGVyaW5ncmVzcy52MWFscGhhLkZlYXR1cmVTcGVj",
            "SAASVwoRY2xvdWRhdWRpdGxvZ2dpbmcYbCABKAsyOi5nb29nbGUuY2xvdWQu",
            "Z2tlaHViLmNsb3VkYXVkaXRsb2dnaW5nLnYxYWxwaGEuRmVhdHVyZVNwZWNI",
            "AEIOCgxmZWF0dXJlX3NwZWMisgEKEkNvbW1vbkZlYXR1cmVTdGF0ZRJMCgtz",
            "ZXJ2aWNlbWVzaBhkIAEoCzI1Lmdvb2dsZS5jbG91ZC5na2VodWIuc2Vydmlj",
            "ZW1lc2gudjFhbHBoYS5GZWF0dXJlU3RhdGVIABI9CgVzdGF0ZRgBIAEoCzIp",
            "Lmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBoYS5GZWF0dXJlU3RhdGVCA+BB",
            "A0IPCg1mZWF0dXJlX3N0YXRlIoEBChVNZW1iZXJzaGlwRmVhdHVyZVNwZWMS",
            "WAoQY29uZmlnbWFuYWdlbWVudBhqIAEoCzI8Lmdvb2dsZS5jbG91ZC5na2Vo",
            "dWIuY29uZmlnbWFuYWdlbWVudC52MWFscGhhLk1lbWJlcnNoaXBTcGVjSABC",
            "DgoMZmVhdHVyZV9zcGVjItoCChZNZW1iZXJzaGlwRmVhdHVyZVN0YXRlEk8K",
            "C3NlcnZpY2VtZXNoGGQgASgLMjguZ29vZ2xlLmNsb3VkLmdrZWh1Yi5zZXJ2",
            "aWNlbWVzaC52MWFscGhhLk1lbWJlcnNoaXBTdGF0ZUgAEkkKCG1ldGVyaW5n",
            "GGggASgLMjUuZ29vZ2xlLmNsb3VkLmdrZWh1Yi5tZXRlcmluZy52MWFscGhh",
            "Lk1lbWJlcnNoaXBTdGF0ZUgAElkKEGNvbmZpZ21hbmFnZW1lbnQYaiABKAsy",
            "PS5nb29nbGUuY2xvdWQuZ2tlaHViLmNvbmZpZ21hbmFnZW1lbnQudjFhbHBo",
            "YS5NZW1iZXJzaGlwU3RhdGVIABI4CgVzdGF0ZRgBIAEoCzIpLmdvb2dsZS5j",
            "bG91ZC5na2VodWIudjFhbHBoYS5GZWF0dXJlU3RhdGVCDwoNZmVhdHVyZV9z",
            "dGF0ZULRAQofY29tLmdvb2dsZS5jbG91ZC5na2VodWIudjFhbHBoYUIMRmVh",
            "dHVyZVByb3RvUAFaQWdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2ds",
            "ZWFwaXMvY2xvdWQvZ2tlaHViL3YxYWxwaGE7Z2tlaHViqgIbR29vZ2xlLkNs",
            "b3VkLkdrZUh1Yi5WMUFscGhhygIbR29vZ2xlXENsb3VkXEdrZUh1YlxWMWFs",
            "cGhh6gIeR29vZ2xlOjpDbG91ZDo6R2tlSHViOjpWMWFscGhhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.GkeHub.CloudAuditLogging.V1Alpha.CloudauditloggingReflection.Descriptor, global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.ConfigmanagementReflection.Descriptor, global::Google.Cloud.GkeHub.Metering.V1Alpha.MeteringReflection.Descriptor, global::Google.Cloud.GkeHub.MultiClusterIngress.V1Alpha.MulticlusteringressReflection.Descriptor, global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.ServicemeshReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1Alpha.Feature), global::Google.Cloud.GkeHub.V1Alpha.Feature.Parser, new[]{ "Name", "Labels", "ResourceState", "Spec", "MembershipSpecs", "State", "MembershipStates", "CreateTime", "UpdateTime", "DeleteTime" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState), global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState.Parser, new[]{ "State" }, null, new[]{ typeof(global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1Alpha.FeatureState), global::Google.Cloud.GkeHub.V1Alpha.FeatureState.Parser, new[]{ "Code", "Description", "UpdateTime" }, null, new[]{ typeof(global::Google.Cloud.GkeHub.V1Alpha.FeatureState.Types.Code) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureSpec), global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureSpec.Parser, new[]{ "Multiclusteringress", "Cloudauditlogging" }, new[]{ "FeatureSpec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureState), global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureState.Parser, new[]{ "Servicemesh", "State" }, new[]{ "FeatureState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureSpec), global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureSpec.Parser, new[]{ "Configmanagement" }, new[]{ "FeatureSpec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureState), global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureState.Parser, new[]{ "Servicemesh", "Metering", "Configmanagement", "State" }, new[]{ "FeatureState" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Feature represents the settings and status of any Hub Feature.
  /// </summary>
  public sealed partial class Feature : pb::IMessage<Feature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Feature> _parser = new pb::MessageParser<Feature>(() => new Feature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Feature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1Alpha.FeatureReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feature(Feature other) : this() {
      name_ = other.name_;
      labels_ = other.labels_.Clone();
      resourceState_ = other.resourceState_ != null ? other.resourceState_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      membershipSpecs_ = other.membershipSpecs_.Clone();
      state_ = other.state_ != null ? other.state_.Clone() : null;
      membershipStates_ = other.membershipStates_.Clone();
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      deleteTime_ = other.deleteTime_ != null ? other.deleteTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feature Clone() {
      return new Feature(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The full, unique name of this Feature resource in the format
    /// `projects/*/locations/*/features/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// GCP labels for this Feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "resource_state" field.</summary>
    public const int ResourceStateFieldNumber = 3;
    private global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState resourceState_;
    /// <summary>
    /// Output only. State of the Feature resource itself.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState ResourceState {
      get { return resourceState_; }
      set {
        resourceState_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 4;
    private global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureSpec spec_;
    /// <summary>
    /// Optional. Hub-wide Feature configuration. If this Feature does not support any
    /// Hub-wide configuration, this field may be unused.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "membership_specs" field.</summary>
    public const int MembershipSpecsFieldNumber = 5;
    private static readonly pbc::MapField<string, global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureSpec>.Codec _map_membershipSpecs_codec
        = new pbc::MapField<string, global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureSpec>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureSpec.Parser), 42);
    private readonly pbc::MapField<string, global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureSpec> membershipSpecs_ = new pbc::MapField<string, global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureSpec>();
    /// <summary>
    /// Optional. Membership-specific configuration for this Feature. If this Feature does
    /// not support any per-Membership configuration, this field may be unused.
    ///
    /// The keys indicate which Membership the configuration is for, in the form:
    ///
    ///     projects/{p}/locations/{l}/memberships/{m}
    ///
    /// Where {p} is the project, {l} is a valid location and {m} is a valid
    /// Membership in this project at that location. {p} WILL match the Feature's
    /// project.
    ///
    /// {p} will always be returned as the project number, but the project ID is
    /// also accepted during input. If the same Membership is specified in the map
    /// twice (using the project ID form, and the project number form), exactly
    /// ONE of the entries will be saved, with no guarantees as to which. For this
    /// reason, it is recommended the same format be used for all entries when
    /// mutating a Feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureSpec> MembershipSpecs {
      get { return membershipSpecs_; }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureState state_;
    /// <summary>
    /// Output only. The Hub-wide Feature state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "membership_states" field.</summary>
    public const int MembershipStatesFieldNumber = 7;
    private static readonly pbc::MapField<string, global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureState>.Codec _map_membershipStates_codec
        = new pbc::MapField<string, global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureState>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureState.Parser), 58);
    private readonly pbc::MapField<string, global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureState> membershipStates_ = new pbc::MapField<string, global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureState>();
    /// <summary>
    /// Output only. Membership-specific Feature status. If this Feature does
    /// report any per-Membership status, this field may be unused.
    ///
    /// The keys indicate which Membership the state is for, in the form:
    ///
    ///     projects/{p}/locations/{l}/memberships/{m}
    ///
    /// Where {p} is the project number, {l} is a valid location and {m} is a valid
    /// Membership in this project at that location. {p} MUST match the Feature's
    /// project number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.GkeHub.V1Alpha.MembershipFeatureState> MembershipStates {
      get { return membershipStates_; }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. When the Feature resource was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. When the Feature resource was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "delete_time" field.</summary>
    public const int DeleteTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp deleteTime_;
    /// <summary>
    /// Output only. When the Feature resource was deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DeleteTime {
      get { return deleteTime_; }
      set {
        deleteTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Feature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Feature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(ResourceState, other.ResourceState)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!MembershipSpecs.Equals(other.MembershipSpecs)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (!MembershipStates.Equals(other.MembershipStates)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(DeleteTime, other.DeleteTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (resourceState_ != null) hash ^= ResourceState.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      hash ^= MembershipSpecs.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      hash ^= MembershipStates.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (deleteTime_ != null) hash ^= DeleteTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (resourceState_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResourceState);
      }
      if (spec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Spec);
      }
      membershipSpecs_.WriteTo(output, _map_membershipSpecs_codec);
      if (state_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(State);
      }
      membershipStates_.WriteTo(output, _map_membershipStates_codec);
      if (createTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(UpdateTime);
      }
      if (deleteTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(DeleteTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (resourceState_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResourceState);
      }
      if (spec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Spec);
      }
      membershipSpecs_.WriteTo(ref output, _map_membershipSpecs_codec);
      if (state_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(State);
      }
      membershipStates_.WriteTo(ref output, _map_membershipStates_codec);
      if (createTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(UpdateTime);
      }
      if (deleteTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(DeleteTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (resourceState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResourceState);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      size += membershipSpecs_.CalculateSize(_map_membershipSpecs_codec);
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      size += membershipStates_.CalculateSize(_map_membershipStates_codec);
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (deleteTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Feature other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      labels_.Add(other.labels_);
      if (other.resourceState_ != null) {
        if (resourceState_ == null) {
          ResourceState = new global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState();
        }
        ResourceState.MergeFrom(other.ResourceState);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      membershipSpecs_.Add(other.membershipSpecs_);
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureState();
        }
        State.MergeFrom(other.State);
      }
      membershipStates_.Add(other.membershipStates_);
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.deleteTime_ != null) {
        if (deleteTime_ == null) {
          DeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DeleteTime.MergeFrom(other.DeleteTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 26: {
            if (resourceState_ == null) {
              ResourceState = new global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState();
            }
            input.ReadMessage(ResourceState);
            break;
          }
          case 34: {
            if (spec_ == null) {
              Spec = new global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 42: {
            membershipSpecs_.AddEntriesFrom(input, _map_membershipSpecs_codec);
            break;
          }
          case 50: {
            if (state_ == null) {
              State = new global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureState();
            }
            input.ReadMessage(State);
            break;
          }
          case 58: {
            membershipStates_.AddEntriesFrom(input, _map_membershipStates_codec);
            break;
          }
          case 66: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 74: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 82: {
            if (deleteTime_ == null) {
              DeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeleteTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 26: {
            if (resourceState_ == null) {
              ResourceState = new global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState();
            }
            input.ReadMessage(ResourceState);
            break;
          }
          case 34: {
            if (spec_ == null) {
              Spec = new global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 42: {
            membershipSpecs_.AddEntriesFrom(ref input, _map_membershipSpecs_codec);
            break;
          }
          case 50: {
            if (state_ == null) {
              State = new global::Google.Cloud.GkeHub.V1Alpha.CommonFeatureState();
            }
            input.ReadMessage(State);
            break;
          }
          case 58: {
            membershipStates_.AddEntriesFrom(ref input, _map_membershipStates_codec);
            break;
          }
          case 66: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 74: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 82: {
            if (deleteTime_ == null) {
              DeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeleteTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeatureResourceState describes the state of a Feature *resource* in the
  /// GkeHub API. See `FeatureState` for the "running state" of the Feature in the
  /// Hub and across Memberships.
  /// </summary>
  public sealed partial class FeatureResourceState : pb::IMessage<FeatureResourceState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureResourceState> _parser = new pb::MessageParser<FeatureResourceState>(() => new FeatureResourceState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureResourceState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1Alpha.FeatureReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureResourceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureResourceState(FeatureResourceState other) : this() {
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureResourceState Clone() {
      return new FeatureResourceState(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState.Types.State state_ = global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState.Types.State.Unspecified;
    /// <summary>
    /// The current state of the Feature resource in the Hub API.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureResourceState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureResourceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState.Types.State.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState.Types.State.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureResourceState other) {
      if (other == null) {
        return;
      }
      if (other.State != global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState.Types.State.Unspecified) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState.Types.State) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = (global::Google.Cloud.GkeHub.V1Alpha.FeatureResourceState.Types.State) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FeatureResourceState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// State describes the lifecycle status of a Feature.
      /// </summary>
      public enum State {
        /// <summary>
        /// State is unknown or not set.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The Feature is being enabled, and the Feature resource is being created.
        /// Once complete, the corresponding Feature will be enabled in this Hub.
        /// </summary>
        [pbr::OriginalName("ENABLING")] Enabling = 1,
        /// <summary>
        /// The Feature is enabled in this Hub, and the Feature resource is fully
        /// available.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 2,
        /// <summary>
        /// The Feature is being disabled in this Hub, and the Feature resource
        /// is being deleted.
        /// </summary>
        [pbr::OriginalName("DISABLING")] Disabling = 3,
        /// <summary>
        /// The Feature resource is being updated.
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 4,
        /// <summary>
        /// The Feature resource is being updated by the Hub Service.
        /// </summary>
        [pbr::OriginalName("SERVICE_UPDATING")] ServiceUpdating = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// FeatureState describes the high-level state of a Feature. It may be used to
  /// describe a Feature's state at the environ-level, or per-membershop, depending
  /// on the context.
  /// </summary>
  public sealed partial class FeatureState : pb::IMessage<FeatureState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureState> _parser = new pb::MessageParser<FeatureState>(() => new FeatureState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1Alpha.FeatureReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureState(FeatureState other) : this() {
      code_ = other.code_;
      description_ = other.description_;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureState Clone() {
      return new FeatureState(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Cloud.GkeHub.V1Alpha.FeatureState.Types.Code code_ = global::Google.Cloud.GkeHub.V1Alpha.FeatureState.Types.Code.Unspecified;
    /// <summary>
    /// The high-level, machine-readable status of this Feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1Alpha.FeatureState.Types.Code Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// A human-readable description of the current status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// The time this status and any related Feature-specific details were updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Google.Cloud.GkeHub.V1Alpha.FeatureState.Types.Code.Unspecified) hash ^= Code.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Google.Cloud.GkeHub.V1Alpha.FeatureState.Types.Code.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Google.Cloud.GkeHub.V1Alpha.FeatureState.Types.Code.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Google.Cloud.GkeHub.V1Alpha.FeatureState.Types.Code.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureState other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Google.Cloud.GkeHub.V1Alpha.FeatureState.Types.Code.Unspecified) {
        Code = other.Code;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Google.Cloud.GkeHub.V1Alpha.FeatureState.Types.Code) input.ReadEnum();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Google.Cloud.GkeHub.V1Alpha.FeatureState.Types.Code) input.ReadEnum();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FeatureState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Code represents a machine-readable, high-level status of the Feature.
      /// </summary>
      public enum Code {
        /// <summary>
        /// Unknown or not set.
        /// </summary>
        [pbr::OriginalName("CODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The Feature is operating normally.
        /// </summary>
        [pbr::OriginalName("OK")] Ok = 1,
        /// <summary>
        /// The Feature has encountered an issue, and is operating in a degraded
        /// state. The Feature may need intervention to return to normal operation.
        /// See the description and any associated Feature-specific details for more
        /// information.
        /// </summary>
        [pbr::OriginalName("WARNING")] Warning = 2,
        /// <summary>
        /// The Feature is not operating or is in a severely degraded state.
        /// The Feature may need intervention to return to normal operation.
        /// See the description and any associated Feature-specific details for more
        /// information.
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// CommonFeatureSpec contains Hub-wide configuration information
  /// </summary>
  public sealed partial class CommonFeatureSpec : pb::IMessage<CommonFeatureSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommonFeatureSpec> _parser = new pb::MessageParser<CommonFeatureSpec>(() => new CommonFeatureSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonFeatureSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1Alpha.FeatureReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonFeatureSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonFeatureSpec(CommonFeatureSpec other) : this() {
      switch (other.FeatureSpecCase) {
        case FeatureSpecOneofCase.Multiclusteringress:
          Multiclusteringress = other.Multiclusteringress.Clone();
          break;
        case FeatureSpecOneofCase.Cloudauditlogging:
          Cloudauditlogging = other.Cloudauditlogging.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonFeatureSpec Clone() {
      return new CommonFeatureSpec(this);
    }

    /// <summary>Field number for the "multiclusteringress" field.</summary>
    public const int MulticlusteringressFieldNumber = 102;
    /// <summary>
    /// Multicluster Ingress-specific spec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.MultiClusterIngress.V1Alpha.FeatureSpec Multiclusteringress {
      get { return featureSpecCase_ == FeatureSpecOneofCase.Multiclusteringress ? (global::Google.Cloud.GkeHub.MultiClusterIngress.V1Alpha.FeatureSpec) featureSpec_ : null; }
      set {
        featureSpec_ = value;
        featureSpecCase_ = value == null ? FeatureSpecOneofCase.None : FeatureSpecOneofCase.Multiclusteringress;
      }
    }

    /// <summary>Field number for the "cloudauditlogging" field.</summary>
    public const int CloudauditloggingFieldNumber = 108;
    /// <summary>
    /// Cloud Audit Logging-specific spec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.CloudAuditLogging.V1Alpha.FeatureSpec Cloudauditlogging {
      get { return featureSpecCase_ == FeatureSpecOneofCase.Cloudauditlogging ? (global::Google.Cloud.GkeHub.CloudAuditLogging.V1Alpha.FeatureSpec) featureSpec_ : null; }
      set {
        featureSpec_ = value;
        featureSpecCase_ = value == null ? FeatureSpecOneofCase.None : FeatureSpecOneofCase.Cloudauditlogging;
      }
    }

    private object featureSpec_;
    /// <summary>Enum of possible cases for the "feature_spec" oneof.</summary>
    public enum FeatureSpecOneofCase {
      None = 0,
      Multiclusteringress = 102,
      Cloudauditlogging = 108,
    }
    private FeatureSpecOneofCase featureSpecCase_ = FeatureSpecOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureSpecOneofCase FeatureSpecCase {
      get { return featureSpecCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFeatureSpec() {
      featureSpecCase_ = FeatureSpecOneofCase.None;
      featureSpec_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonFeatureSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonFeatureSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Multiclusteringress, other.Multiclusteringress)) return false;
      if (!object.Equals(Cloudauditlogging, other.Cloudauditlogging)) return false;
      if (FeatureSpecCase != other.FeatureSpecCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (featureSpecCase_ == FeatureSpecOneofCase.Multiclusteringress) hash ^= Multiclusteringress.GetHashCode();
      if (featureSpecCase_ == FeatureSpecOneofCase.Cloudauditlogging) hash ^= Cloudauditlogging.GetHashCode();
      hash ^= (int) featureSpecCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (featureSpecCase_ == FeatureSpecOneofCase.Multiclusteringress) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(Multiclusteringress);
      }
      if (featureSpecCase_ == FeatureSpecOneofCase.Cloudauditlogging) {
        output.WriteRawTag(226, 6);
        output.WriteMessage(Cloudauditlogging);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (featureSpecCase_ == FeatureSpecOneofCase.Multiclusteringress) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(Multiclusteringress);
      }
      if (featureSpecCase_ == FeatureSpecOneofCase.Cloudauditlogging) {
        output.WriteRawTag(226, 6);
        output.WriteMessage(Cloudauditlogging);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (featureSpecCase_ == FeatureSpecOneofCase.Multiclusteringress) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Multiclusteringress);
      }
      if (featureSpecCase_ == FeatureSpecOneofCase.Cloudauditlogging) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Cloudauditlogging);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonFeatureSpec other) {
      if (other == null) {
        return;
      }
      switch (other.FeatureSpecCase) {
        case FeatureSpecOneofCase.Multiclusteringress:
          if (Multiclusteringress == null) {
            Multiclusteringress = new global::Google.Cloud.GkeHub.MultiClusterIngress.V1Alpha.FeatureSpec();
          }
          Multiclusteringress.MergeFrom(other.Multiclusteringress);
          break;
        case FeatureSpecOneofCase.Cloudauditlogging:
          if (Cloudauditlogging == null) {
            Cloudauditlogging = new global::Google.Cloud.GkeHub.CloudAuditLogging.V1Alpha.FeatureSpec();
          }
          Cloudauditlogging.MergeFrom(other.Cloudauditlogging);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 818: {
            global::Google.Cloud.GkeHub.MultiClusterIngress.V1Alpha.FeatureSpec subBuilder = new global::Google.Cloud.GkeHub.MultiClusterIngress.V1Alpha.FeatureSpec();
            if (featureSpecCase_ == FeatureSpecOneofCase.Multiclusteringress) {
              subBuilder.MergeFrom(Multiclusteringress);
            }
            input.ReadMessage(subBuilder);
            Multiclusteringress = subBuilder;
            break;
          }
          case 866: {
            global::Google.Cloud.GkeHub.CloudAuditLogging.V1Alpha.FeatureSpec subBuilder = new global::Google.Cloud.GkeHub.CloudAuditLogging.V1Alpha.FeatureSpec();
            if (featureSpecCase_ == FeatureSpecOneofCase.Cloudauditlogging) {
              subBuilder.MergeFrom(Cloudauditlogging);
            }
            input.ReadMessage(subBuilder);
            Cloudauditlogging = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 818: {
            global::Google.Cloud.GkeHub.MultiClusterIngress.V1Alpha.FeatureSpec subBuilder = new global::Google.Cloud.GkeHub.MultiClusterIngress.V1Alpha.FeatureSpec();
            if (featureSpecCase_ == FeatureSpecOneofCase.Multiclusteringress) {
              subBuilder.MergeFrom(Multiclusteringress);
            }
            input.ReadMessage(subBuilder);
            Multiclusteringress = subBuilder;
            break;
          }
          case 866: {
            global::Google.Cloud.GkeHub.CloudAuditLogging.V1Alpha.FeatureSpec subBuilder = new global::Google.Cloud.GkeHub.CloudAuditLogging.V1Alpha.FeatureSpec();
            if (featureSpecCase_ == FeatureSpecOneofCase.Cloudauditlogging) {
              subBuilder.MergeFrom(Cloudauditlogging);
            }
            input.ReadMessage(subBuilder);
            Cloudauditlogging = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CommonFeatureState contains Hub-wide Feature status information.
  /// </summary>
  public sealed partial class CommonFeatureState : pb::IMessage<CommonFeatureState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommonFeatureState> _parser = new pb::MessageParser<CommonFeatureState>(() => new CommonFeatureState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonFeatureState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1Alpha.FeatureReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonFeatureState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonFeatureState(CommonFeatureState other) : this() {
      state_ = other.state_ != null ? other.state_.Clone() : null;
      switch (other.FeatureStateCase) {
        case FeatureStateOneofCase.Servicemesh:
          Servicemesh = other.Servicemesh.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonFeatureState Clone() {
      return new CommonFeatureState(this);
    }

    /// <summary>Field number for the "servicemesh" field.</summary>
    public const int ServicemeshFieldNumber = 100;
    /// <summary>
    /// Service Mesh-specific state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.FeatureState Servicemesh {
      get { return featureStateCase_ == FeatureStateOneofCase.Servicemesh ? (global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.FeatureState) featureState_ : null; }
      set {
        featureState_ = value;
        featureStateCase_ = value == null ? FeatureStateOneofCase.None : FeatureStateOneofCase.Servicemesh;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Google.Cloud.GkeHub.V1Alpha.FeatureState state_;
    /// <summary>
    /// Output only. The "running state" of the Feature in this Hub.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1Alpha.FeatureState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    private object featureState_;
    /// <summary>Enum of possible cases for the "feature_state" oneof.</summary>
    public enum FeatureStateOneofCase {
      None = 0,
      Servicemesh = 100,
    }
    private FeatureStateOneofCase featureStateCase_ = FeatureStateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureStateOneofCase FeatureStateCase {
      get { return featureStateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFeatureState() {
      featureStateCase_ = FeatureStateOneofCase.None;
      featureState_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonFeatureState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonFeatureState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Servicemesh, other.Servicemesh)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (FeatureStateCase != other.FeatureStateCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (featureStateCase_ == FeatureStateOneofCase.Servicemesh) hash ^= Servicemesh.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      hash ^= (int) featureStateCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (state_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(State);
      }
      if (featureStateCase_ == FeatureStateOneofCase.Servicemesh) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Servicemesh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (state_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(State);
      }
      if (featureStateCase_ == FeatureStateOneofCase.Servicemesh) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Servicemesh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (featureStateCase_ == FeatureStateOneofCase.Servicemesh) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Servicemesh);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonFeatureState other) {
      if (other == null) {
        return;
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::Google.Cloud.GkeHub.V1Alpha.FeatureState();
        }
        State.MergeFrom(other.State);
      }
      switch (other.FeatureStateCase) {
        case FeatureStateOneofCase.Servicemesh:
          if (Servicemesh == null) {
            Servicemesh = new global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.FeatureState();
          }
          Servicemesh.MergeFrom(other.Servicemesh);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (state_ == null) {
              State = new global::Google.Cloud.GkeHub.V1Alpha.FeatureState();
            }
            input.ReadMessage(State);
            break;
          }
          case 802: {
            global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.FeatureState subBuilder = new global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.FeatureState();
            if (featureStateCase_ == FeatureStateOneofCase.Servicemesh) {
              subBuilder.MergeFrom(Servicemesh);
            }
            input.ReadMessage(subBuilder);
            Servicemesh = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (state_ == null) {
              State = new global::Google.Cloud.GkeHub.V1Alpha.FeatureState();
            }
            input.ReadMessage(State);
            break;
          }
          case 802: {
            global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.FeatureState subBuilder = new global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.FeatureState();
            if (featureStateCase_ == FeatureStateOneofCase.Servicemesh) {
              subBuilder.MergeFrom(Servicemesh);
            }
            input.ReadMessage(subBuilder);
            Servicemesh = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MembershipFeatureSpec contains configuration information for a single
  /// Membership.
  /// </summary>
  public sealed partial class MembershipFeatureSpec : pb::IMessage<MembershipFeatureSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MembershipFeatureSpec> _parser = new pb::MessageParser<MembershipFeatureSpec>(() => new MembershipFeatureSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MembershipFeatureSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1Alpha.FeatureReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MembershipFeatureSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MembershipFeatureSpec(MembershipFeatureSpec other) : this() {
      switch (other.FeatureSpecCase) {
        case FeatureSpecOneofCase.Configmanagement:
          Configmanagement = other.Configmanagement.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MembershipFeatureSpec Clone() {
      return new MembershipFeatureSpec(this);
    }

    /// <summary>Field number for the "configmanagement" field.</summary>
    public const int ConfigmanagementFieldNumber = 106;
    /// <summary>
    /// Config Management-specific spec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipSpec Configmanagement {
      get { return featureSpecCase_ == FeatureSpecOneofCase.Configmanagement ? (global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipSpec) featureSpec_ : null; }
      set {
        featureSpec_ = value;
        featureSpecCase_ = value == null ? FeatureSpecOneofCase.None : FeatureSpecOneofCase.Configmanagement;
      }
    }

    private object featureSpec_;
    /// <summary>Enum of possible cases for the "feature_spec" oneof.</summary>
    public enum FeatureSpecOneofCase {
      None = 0,
      Configmanagement = 106,
    }
    private FeatureSpecOneofCase featureSpecCase_ = FeatureSpecOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureSpecOneofCase FeatureSpecCase {
      get { return featureSpecCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFeatureSpec() {
      featureSpecCase_ = FeatureSpecOneofCase.None;
      featureSpec_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MembershipFeatureSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MembershipFeatureSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Configmanagement, other.Configmanagement)) return false;
      if (FeatureSpecCase != other.FeatureSpecCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (featureSpecCase_ == FeatureSpecOneofCase.Configmanagement) hash ^= Configmanagement.GetHashCode();
      hash ^= (int) featureSpecCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (featureSpecCase_ == FeatureSpecOneofCase.Configmanagement) {
        output.WriteRawTag(210, 6);
        output.WriteMessage(Configmanagement);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (featureSpecCase_ == FeatureSpecOneofCase.Configmanagement) {
        output.WriteRawTag(210, 6);
        output.WriteMessage(Configmanagement);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (featureSpecCase_ == FeatureSpecOneofCase.Configmanagement) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Configmanagement);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MembershipFeatureSpec other) {
      if (other == null) {
        return;
      }
      switch (other.FeatureSpecCase) {
        case FeatureSpecOneofCase.Configmanagement:
          if (Configmanagement == null) {
            Configmanagement = new global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipSpec();
          }
          Configmanagement.MergeFrom(other.Configmanagement);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 850: {
            global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipSpec subBuilder = new global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipSpec();
            if (featureSpecCase_ == FeatureSpecOneofCase.Configmanagement) {
              subBuilder.MergeFrom(Configmanagement);
            }
            input.ReadMessage(subBuilder);
            Configmanagement = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 850: {
            global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipSpec subBuilder = new global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipSpec();
            if (featureSpecCase_ == FeatureSpecOneofCase.Configmanagement) {
              subBuilder.MergeFrom(Configmanagement);
            }
            input.ReadMessage(subBuilder);
            Configmanagement = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MembershipFeatureState contains Feature status information for a single
  /// Membership.
  /// </summary>
  public sealed partial class MembershipFeatureState : pb::IMessage<MembershipFeatureState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MembershipFeatureState> _parser = new pb::MessageParser<MembershipFeatureState>(() => new MembershipFeatureState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MembershipFeatureState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeHub.V1Alpha.FeatureReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MembershipFeatureState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MembershipFeatureState(MembershipFeatureState other) : this() {
      state_ = other.state_ != null ? other.state_.Clone() : null;
      switch (other.FeatureStateCase) {
        case FeatureStateOneofCase.Servicemesh:
          Servicemesh = other.Servicemesh.Clone();
          break;
        case FeatureStateOneofCase.Metering:
          Metering = other.Metering.Clone();
          break;
        case FeatureStateOneofCase.Configmanagement:
          Configmanagement = other.Configmanagement.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MembershipFeatureState Clone() {
      return new MembershipFeatureState(this);
    }

    /// <summary>Field number for the "servicemesh" field.</summary>
    public const int ServicemeshFieldNumber = 100;
    /// <summary>
    /// Service Mesh-specific state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.MembershipState Servicemesh {
      get { return featureStateCase_ == FeatureStateOneofCase.Servicemesh ? (global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.MembershipState) featureState_ : null; }
      set {
        featureState_ = value;
        featureStateCase_ = value == null ? FeatureStateOneofCase.None : FeatureStateOneofCase.Servicemesh;
      }
    }

    /// <summary>Field number for the "metering" field.</summary>
    public const int MeteringFieldNumber = 104;
    /// <summary>
    /// Metering-specific spec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.Metering.V1Alpha.MembershipState Metering {
      get { return featureStateCase_ == FeatureStateOneofCase.Metering ? (global::Google.Cloud.GkeHub.Metering.V1Alpha.MembershipState) featureState_ : null; }
      set {
        featureState_ = value;
        featureStateCase_ = value == null ? FeatureStateOneofCase.None : FeatureStateOneofCase.Metering;
      }
    }

    /// <summary>Field number for the "configmanagement" field.</summary>
    public const int ConfigmanagementFieldNumber = 106;
    /// <summary>
    /// Config Management-specific state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipState Configmanagement {
      get { return featureStateCase_ == FeatureStateOneofCase.Configmanagement ? (global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipState) featureState_ : null; }
      set {
        featureState_ = value;
        featureStateCase_ = value == null ? FeatureStateOneofCase.None : FeatureStateOneofCase.Configmanagement;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Google.Cloud.GkeHub.V1Alpha.FeatureState state_;
    /// <summary>
    /// The high-level state of this Feature for a single membership.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.GkeHub.V1Alpha.FeatureState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    private object featureState_;
    /// <summary>Enum of possible cases for the "feature_state" oneof.</summary>
    public enum FeatureStateOneofCase {
      None = 0,
      Servicemesh = 100,
      Metering = 104,
      Configmanagement = 106,
    }
    private FeatureStateOneofCase featureStateCase_ = FeatureStateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureStateOneofCase FeatureStateCase {
      get { return featureStateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFeatureState() {
      featureStateCase_ = FeatureStateOneofCase.None;
      featureState_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MembershipFeatureState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MembershipFeatureState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Servicemesh, other.Servicemesh)) return false;
      if (!object.Equals(Metering, other.Metering)) return false;
      if (!object.Equals(Configmanagement, other.Configmanagement)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (FeatureStateCase != other.FeatureStateCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (featureStateCase_ == FeatureStateOneofCase.Servicemesh) hash ^= Servicemesh.GetHashCode();
      if (featureStateCase_ == FeatureStateOneofCase.Metering) hash ^= Metering.GetHashCode();
      if (featureStateCase_ == FeatureStateOneofCase.Configmanagement) hash ^= Configmanagement.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      hash ^= (int) featureStateCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (state_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(State);
      }
      if (featureStateCase_ == FeatureStateOneofCase.Servicemesh) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Servicemesh);
      }
      if (featureStateCase_ == FeatureStateOneofCase.Metering) {
        output.WriteRawTag(194, 6);
        output.WriteMessage(Metering);
      }
      if (featureStateCase_ == FeatureStateOneofCase.Configmanagement) {
        output.WriteRawTag(210, 6);
        output.WriteMessage(Configmanagement);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (state_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(State);
      }
      if (featureStateCase_ == FeatureStateOneofCase.Servicemesh) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Servicemesh);
      }
      if (featureStateCase_ == FeatureStateOneofCase.Metering) {
        output.WriteRawTag(194, 6);
        output.WriteMessage(Metering);
      }
      if (featureStateCase_ == FeatureStateOneofCase.Configmanagement) {
        output.WriteRawTag(210, 6);
        output.WriteMessage(Configmanagement);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (featureStateCase_ == FeatureStateOneofCase.Servicemesh) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Servicemesh);
      }
      if (featureStateCase_ == FeatureStateOneofCase.Metering) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Metering);
      }
      if (featureStateCase_ == FeatureStateOneofCase.Configmanagement) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Configmanagement);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MembershipFeatureState other) {
      if (other == null) {
        return;
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::Google.Cloud.GkeHub.V1Alpha.FeatureState();
        }
        State.MergeFrom(other.State);
      }
      switch (other.FeatureStateCase) {
        case FeatureStateOneofCase.Servicemesh:
          if (Servicemesh == null) {
            Servicemesh = new global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.MembershipState();
          }
          Servicemesh.MergeFrom(other.Servicemesh);
          break;
        case FeatureStateOneofCase.Metering:
          if (Metering == null) {
            Metering = new global::Google.Cloud.GkeHub.Metering.V1Alpha.MembershipState();
          }
          Metering.MergeFrom(other.Metering);
          break;
        case FeatureStateOneofCase.Configmanagement:
          if (Configmanagement == null) {
            Configmanagement = new global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipState();
          }
          Configmanagement.MergeFrom(other.Configmanagement);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (state_ == null) {
              State = new global::Google.Cloud.GkeHub.V1Alpha.FeatureState();
            }
            input.ReadMessage(State);
            break;
          }
          case 802: {
            global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.MembershipState subBuilder = new global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.MembershipState();
            if (featureStateCase_ == FeatureStateOneofCase.Servicemesh) {
              subBuilder.MergeFrom(Servicemesh);
            }
            input.ReadMessage(subBuilder);
            Servicemesh = subBuilder;
            break;
          }
          case 834: {
            global::Google.Cloud.GkeHub.Metering.V1Alpha.MembershipState subBuilder = new global::Google.Cloud.GkeHub.Metering.V1Alpha.MembershipState();
            if (featureStateCase_ == FeatureStateOneofCase.Metering) {
              subBuilder.MergeFrom(Metering);
            }
            input.ReadMessage(subBuilder);
            Metering = subBuilder;
            break;
          }
          case 850: {
            global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipState subBuilder = new global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipState();
            if (featureStateCase_ == FeatureStateOneofCase.Configmanagement) {
              subBuilder.MergeFrom(Configmanagement);
            }
            input.ReadMessage(subBuilder);
            Configmanagement = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (state_ == null) {
              State = new global::Google.Cloud.GkeHub.V1Alpha.FeatureState();
            }
            input.ReadMessage(State);
            break;
          }
          case 802: {
            global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.MembershipState subBuilder = new global::Google.Cloud.GkeHub.ServiceMesh.V1Alpha.MembershipState();
            if (featureStateCase_ == FeatureStateOneofCase.Servicemesh) {
              subBuilder.MergeFrom(Servicemesh);
            }
            input.ReadMessage(subBuilder);
            Servicemesh = subBuilder;
            break;
          }
          case 834: {
            global::Google.Cloud.GkeHub.Metering.V1Alpha.MembershipState subBuilder = new global::Google.Cloud.GkeHub.Metering.V1Alpha.MembershipState();
            if (featureStateCase_ == FeatureStateOneofCase.Metering) {
              subBuilder.MergeFrom(Metering);
            }
            input.ReadMessage(subBuilder);
            Metering = subBuilder;
            break;
          }
          case 850: {
            global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipState subBuilder = new global::Google.Cloud.GkeHub.ConfigManagement.V1Alpha.MembershipState();
            if (featureStateCase_ == FeatureStateOneofCase.Configmanagement) {
              subBuilder.MergeFrom(Configmanagement);
            }
            input.ReadMessage(subBuilder);
            Configmanagement = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
