// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/dialogflow/cx/v3beta1/environment.proto
// </auto-generated>
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Dialogflow.Cx.V3Beta1 {
  /// <summary>
  /// Service for managing [Environments][google.cloud.dialogflow.cx.v3beta1.Environment].
  /// </summary>
  public static partial class Environments
  {
    static readonly string __ServiceName = "google.cloud.dialogflow.cx.v3beta1.Environments";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListEnvironmentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsResponse> __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListEnvironmentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetEnvironmentRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_GetEnvironmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetEnvironmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.Environment> __Marshaller_google_cloud_dialogflow_cx_v3beta1_Environment = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.Environment.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateEnvironmentRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_CreateEnvironmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateEnvironmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateEnvironmentRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_UpdateEnvironmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateEnvironmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeleteEnvironmentRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_DeleteEnvironmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeleteEnvironmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_LookupEnvironmentHistoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryResponse> __Marshaller_google_cloud_dialogflow_cx_v3beta1_LookupEnvironmentHistoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunContinuousTestRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_RunContinuousTestRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunContinuousTestRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListContinuousTestResultsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsResponse> __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListContinuousTestResultsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeployFlowRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_DeployFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeployFlowRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsResponse> __Method_ListEnvironments = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEnvironments",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListEnvironmentsRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListEnvironmentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetEnvironmentRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.Environment> __Method_GetEnvironment = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetEnvironmentRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.Environment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEnvironment",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_GetEnvironmentRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_Environment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateEnvironmentRequest, global::Google.LongRunning.Operation> __Method_CreateEnvironment = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateEnvironmentRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEnvironment",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_CreateEnvironmentRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateEnvironmentRequest, global::Google.LongRunning.Operation> __Method_UpdateEnvironment = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateEnvironmentRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEnvironment",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_UpdateEnvironmentRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeleteEnvironmentRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteEnvironment = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeleteEnvironmentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEnvironment",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_DeleteEnvironmentRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryResponse> __Method_LookupEnvironmentHistory = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LookupEnvironmentHistory",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_LookupEnvironmentHistoryRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_LookupEnvironmentHistoryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunContinuousTestRequest, global::Google.LongRunning.Operation> __Method_RunContinuousTest = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunContinuousTestRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RunContinuousTest",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_RunContinuousTestRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsResponse> __Method_ListContinuousTestResults = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListContinuousTestResults",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListContinuousTestResultsRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListContinuousTestResultsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeployFlowRequest, global::Google.LongRunning.Operation> __Method_DeployFlow = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeployFlowRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeployFlow",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_DeployFlowRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Dialogflow.Cx.V3Beta1.EnvironmentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Environments</summary>
    [grpc::BindServiceMethod(typeof(Environments), "BindService")]
    public abstract partial class EnvironmentsBase
    {
      /// <summary>
      /// Returns the list of all environments in the specified [Agent][google.cloud.dialogflow.cx.v3beta1.Agent].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsResponse> ListEnvironments(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3Beta1.Environment> GetEnvironment(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetEnvironmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an [Environment][google.cloud.dialogflow.cx.v3beta1.Environment] in the specified [Agent][google.cloud.dialogflow.cx.v3beta1.Agent].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: [Environment][google.cloud.dialogflow.cx.v3beta1.Environment]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateEnvironment(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateEnvironmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: [Environment][google.cloud.dialogflow.cx.v3beta1.Environment]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateEnvironment(global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateEnvironmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEnvironment(global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeleteEnvironmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Looks up the history of the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryResponse> LookupEnvironmentHistory(global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Kicks off a continuous test under the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [RunContinuousTestMetadata][google.cloud.dialogflow.cx.v3beta1.RunContinuousTestMetadata]
      /// - `response`: [RunContinuousTestResponse][google.cloud.dialogflow.cx.v3beta1.RunContinuousTestResponse]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RunContinuousTest(global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunContinuousTestRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Fetches a list of continuous test results for a given environment.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsResponse> ListContinuousTestResults(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deploys a flow to the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [DeployFlowMetadata][google.cloud.dialogflow.cx.v3beta1.DeployFlowMetadata]
      /// - `response`: [DeployFlowResponse][google.cloud.dialogflow.cx.v3beta1.DeployFlowResponse]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeployFlow(global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeployFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Environments</summary>
    public partial class EnvironmentsClient : grpc::ClientBase<EnvironmentsClient>
    {
      /// <summary>Creates a new client for Environments</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EnvironmentsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Environments that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EnvironmentsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EnvironmentsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EnvironmentsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns the list of all environments in the specified [Agent][google.cloud.dialogflow.cx.v3beta1.Agent].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsResponse ListEnvironments(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEnvironments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of all environments in the specified [Agent][google.cloud.dialogflow.cx.v3beta1.Agent].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsResponse ListEnvironments(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEnvironments, null, options, request);
      }
      /// <summary>
      /// Returns the list of all environments in the specified [Agent][google.cloud.dialogflow.cx.v3beta1.Agent].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsResponse> ListEnvironmentsAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEnvironmentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of all environments in the specified [Agent][google.cloud.dialogflow.cx.v3beta1.Agent].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsResponse> ListEnvironmentsAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEnvironments, null, options, request);
      }
      /// <summary>
      /// Retrieves the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.Environment GetEnvironment(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetEnvironmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEnvironment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.Environment GetEnvironment(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetEnvironmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEnvironment, null, options, request);
      }
      /// <summary>
      /// Retrieves the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.Environment> GetEnvironmentAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetEnvironmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEnvironmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.Environment> GetEnvironmentAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetEnvironmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEnvironment, null, options, request);
      }
      /// <summary>
      /// Creates an [Environment][google.cloud.dialogflow.cx.v3beta1.Environment] in the specified [Agent][google.cloud.dialogflow.cx.v3beta1.Agent].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: [Environment][google.cloud.dialogflow.cx.v3beta1.Environment]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateEnvironment(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateEnvironmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEnvironment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an [Environment][google.cloud.dialogflow.cx.v3beta1.Environment] in the specified [Agent][google.cloud.dialogflow.cx.v3beta1.Agent].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: [Environment][google.cloud.dialogflow.cx.v3beta1.Environment]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateEnvironment(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateEnvironmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEnvironment, null, options, request);
      }
      /// <summary>
      /// Creates an [Environment][google.cloud.dialogflow.cx.v3beta1.Environment] in the specified [Agent][google.cloud.dialogflow.cx.v3beta1.Agent].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: [Environment][google.cloud.dialogflow.cx.v3beta1.Environment]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateEnvironmentAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateEnvironmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEnvironmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an [Environment][google.cloud.dialogflow.cx.v3beta1.Environment] in the specified [Agent][google.cloud.dialogflow.cx.v3beta1.Agent].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: [Environment][google.cloud.dialogflow.cx.v3beta1.Environment]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateEnvironmentAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateEnvironmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEnvironment, null, options, request);
      }
      /// <summary>
      /// Updates the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: [Environment][google.cloud.dialogflow.cx.v3beta1.Environment]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateEnvironment(global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateEnvironmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEnvironment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: [Environment][google.cloud.dialogflow.cx.v3beta1.Environment]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateEnvironment(global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateEnvironmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEnvironment, null, options, request);
      }
      /// <summary>
      /// Updates the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: [Environment][google.cloud.dialogflow.cx.v3beta1.Environment]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateEnvironmentAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateEnvironmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEnvironmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: [Environment][google.cloud.dialogflow.cx.v3beta1.Environment]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateEnvironmentAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateEnvironmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEnvironment, null, options, request);
      }
      /// <summary>
      /// Deletes the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEnvironment(global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeleteEnvironmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEnvironment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEnvironment(global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeleteEnvironmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEnvironment, null, options, request);
      }
      /// <summary>
      /// Deletes the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEnvironmentAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeleteEnvironmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEnvironmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEnvironmentAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeleteEnvironmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEnvironment, null, options, request);
      }
      /// <summary>
      /// Looks up the history of the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryResponse LookupEnvironmentHistory(global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupEnvironmentHistory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Looks up the history of the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryResponse LookupEnvironmentHistory(global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LookupEnvironmentHistory, null, options, request);
      }
      /// <summary>
      /// Looks up the history of the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryResponse> LookupEnvironmentHistoryAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupEnvironmentHistoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Looks up the history of the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryResponse> LookupEnvironmentHistoryAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LookupEnvironmentHistory, null, options, request);
      }
      /// <summary>
      /// Kicks off a continuous test under the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [RunContinuousTestMetadata][google.cloud.dialogflow.cx.v3beta1.RunContinuousTestMetadata]
      /// - `response`: [RunContinuousTestResponse][google.cloud.dialogflow.cx.v3beta1.RunContinuousTestResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RunContinuousTest(global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunContinuousTestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunContinuousTest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Kicks off a continuous test under the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [RunContinuousTestMetadata][google.cloud.dialogflow.cx.v3beta1.RunContinuousTestMetadata]
      /// - `response`: [RunContinuousTestResponse][google.cloud.dialogflow.cx.v3beta1.RunContinuousTestResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RunContinuousTest(global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunContinuousTestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RunContinuousTest, null, options, request);
      }
      /// <summary>
      /// Kicks off a continuous test under the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [RunContinuousTestMetadata][google.cloud.dialogflow.cx.v3beta1.RunContinuousTestMetadata]
      /// - `response`: [RunContinuousTestResponse][google.cloud.dialogflow.cx.v3beta1.RunContinuousTestResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RunContinuousTestAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunContinuousTestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunContinuousTestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Kicks off a continuous test under the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [RunContinuousTestMetadata][google.cloud.dialogflow.cx.v3beta1.RunContinuousTestMetadata]
      /// - `response`: [RunContinuousTestResponse][google.cloud.dialogflow.cx.v3beta1.RunContinuousTestResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RunContinuousTestAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunContinuousTestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RunContinuousTest, null, options, request);
      }
      /// <summary>
      /// Fetches a list of continuous test results for a given environment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsResponse ListContinuousTestResults(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListContinuousTestResults(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetches a list of continuous test results for a given environment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsResponse ListContinuousTestResults(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListContinuousTestResults, null, options, request);
      }
      /// <summary>
      /// Fetches a list of continuous test results for a given environment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsResponse> ListContinuousTestResultsAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListContinuousTestResultsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetches a list of continuous test results for a given environment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsResponse> ListContinuousTestResultsAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListContinuousTestResults, null, options, request);
      }
      /// <summary>
      /// Deploys a flow to the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [DeployFlowMetadata][google.cloud.dialogflow.cx.v3beta1.DeployFlowMetadata]
      /// - `response`: [DeployFlowResponse][google.cloud.dialogflow.cx.v3beta1.DeployFlowResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeployFlow(global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeployFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeployFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deploys a flow to the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [DeployFlowMetadata][google.cloud.dialogflow.cx.v3beta1.DeployFlowMetadata]
      /// - `response`: [DeployFlowResponse][google.cloud.dialogflow.cx.v3beta1.DeployFlowResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeployFlow(global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeployFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeployFlow, null, options, request);
      }
      /// <summary>
      /// Deploys a flow to the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [DeployFlowMetadata][google.cloud.dialogflow.cx.v3beta1.DeployFlowMetadata]
      /// - `response`: [DeployFlowResponse][google.cloud.dialogflow.cx.v3beta1.DeployFlowResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeployFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeployFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeployFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deploys a flow to the specified [Environment][google.cloud.dialogflow.cx.v3beta1.Environment].
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [DeployFlowMetadata][google.cloud.dialogflow.cx.v3beta1.DeployFlowMetadata]
      /// - `response`: [DeployFlowResponse][google.cloud.dialogflow.cx.v3beta1.DeployFlowResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeployFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeployFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeployFlow, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override EnvironmentsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EnvironmentsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(EnvironmentsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListEnvironments, serviceImpl.ListEnvironments)
          .AddMethod(__Method_GetEnvironment, serviceImpl.GetEnvironment)
          .AddMethod(__Method_CreateEnvironment, serviceImpl.CreateEnvironment)
          .AddMethod(__Method_UpdateEnvironment, serviceImpl.UpdateEnvironment)
          .AddMethod(__Method_DeleteEnvironment, serviceImpl.DeleteEnvironment)
          .AddMethod(__Method_LookupEnvironmentHistory, serviceImpl.LookupEnvironmentHistory)
          .AddMethod(__Method_RunContinuousTest, serviceImpl.RunContinuousTest)
          .AddMethod(__Method_ListContinuousTestResults, serviceImpl.ListContinuousTestResults)
          .AddMethod(__Method_DeployFlow, serviceImpl.DeployFlow).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EnvironmentsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListEnvironments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListEnvironmentsResponse>(serviceImpl.ListEnvironments));
      serviceBinder.AddMethod(__Method_GetEnvironment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetEnvironmentRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.Environment>(serviceImpl.GetEnvironment));
      serviceBinder.AddMethod(__Method_CreateEnvironment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateEnvironmentRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateEnvironment));
      serviceBinder.AddMethod(__Method_UpdateEnvironment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateEnvironmentRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateEnvironment));
      serviceBinder.AddMethod(__Method_DeleteEnvironment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeleteEnvironmentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteEnvironment));
      serviceBinder.AddMethod(__Method_LookupEnvironmentHistory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.LookupEnvironmentHistoryResponse>(serviceImpl.LookupEnvironmentHistory));
      serviceBinder.AddMethod(__Method_RunContinuousTest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunContinuousTestRequest, global::Google.LongRunning.Operation>(serviceImpl.RunContinuousTest));
      serviceBinder.AddMethod(__Method_ListContinuousTestResults, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListContinuousTestResultsResponse>(serviceImpl.ListContinuousTestResults));
      serviceBinder.AddMethod(__Method_DeployFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.DeployFlowRequest, global::Google.LongRunning.Operation>(serviceImpl.DeployFlow));
    }

  }
}
#endregion
