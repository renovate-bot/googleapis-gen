// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/dialogflow/cx/v3beta1/test_case.proto
// </auto-generated>
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Dialogflow.Cx.V3Beta1 {
  /// <summary>
  /// Service for managing [Test Cases][google.cloud.dialogflow.cx.v3beta1.TestCase] and
  /// [Test Case Results][google.cloud.dialogflow.cx.v3beta1.TestCaseResult].
  /// </summary>
  public static partial class TestCases
  {
    static readonly string __ServiceName = "google.cloud.dialogflow.cx.v3beta1.TestCases";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListTestCasesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesResponse> __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListTestCasesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchDeleteTestCasesRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_BatchDeleteTestCasesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchDeleteTestCasesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_GetTestCaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> __Marshaller_google_cloud_dialogflow_cx_v3beta1_TestCase = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateTestCaseRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_CreateTestCaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateTestCaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateTestCaseRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_UpdateTestCaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateTestCaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunTestCaseRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_RunTestCaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunTestCaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchRunTestCasesRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_BatchRunTestCasesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchRunTestCasesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_CalculateCoverageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageResponse> __Marshaller_google_cloud_dialogflow_cx_v3beta1_CalculateCoverageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ImportTestCasesRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_ImportTestCasesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ImportTestCasesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ExportTestCasesRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_ExportTestCasesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ExportTestCasesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListTestCaseResultsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsResponse> __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListTestCaseResultsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseResultRequest> __Marshaller_google_cloud_dialogflow_cx_v3beta1_GetTestCaseResultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseResultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCaseResult> __Marshaller_google_cloud_dialogflow_cx_v3beta1_TestCaseResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCaseResult.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesResponse> __Method_ListTestCases = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTestCases",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListTestCasesRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListTestCasesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchDeleteTestCasesRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_BatchDeleteTestCases = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchDeleteTestCasesRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchDeleteTestCases",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_BatchDeleteTestCasesRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> __Method_GetTestCase = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTestCase",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_GetTestCaseRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_TestCase);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateTestCaseRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> __Method_CreateTestCase = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateTestCaseRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTestCase",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_CreateTestCaseRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_TestCase);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateTestCaseRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> __Method_UpdateTestCase = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateTestCaseRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTestCase",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_UpdateTestCaseRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_TestCase);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunTestCaseRequest, global::Google.LongRunning.Operation> __Method_RunTestCase = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunTestCaseRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RunTestCase",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_RunTestCaseRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchRunTestCasesRequest, global::Google.LongRunning.Operation> __Method_BatchRunTestCases = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchRunTestCasesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchRunTestCases",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_BatchRunTestCasesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageResponse> __Method_CalculateCoverage = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CalculateCoverage",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_CalculateCoverageRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_CalculateCoverageResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ImportTestCasesRequest, global::Google.LongRunning.Operation> __Method_ImportTestCases = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ImportTestCasesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportTestCases",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_ImportTestCasesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ExportTestCasesRequest, global::Google.LongRunning.Operation> __Method_ExportTestCases = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ExportTestCasesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportTestCases",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_ExportTestCasesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsResponse> __Method_ListTestCaseResults = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTestCaseResults",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListTestCaseResultsRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_ListTestCaseResultsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseResultRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCaseResult> __Method_GetTestCaseResult = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseResultRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCaseResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTestCaseResult",
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_GetTestCaseResultRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3beta1_TestCaseResult);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCaseReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TestCases</summary>
    [grpc::BindServiceMethod(typeof(TestCases), "BindService")]
    public abstract partial class TestCasesBase
    {
      /// <summary>
      /// Fetches a list of test cases for a given agent.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesResponse> ListTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Batch deletes test cases.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> BatchDeleteTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchDeleteTestCasesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a test case.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> GetTestCase(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a test case for the given agent.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> CreateTestCase(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateTestCaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the specified test case.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> UpdateTestCase(global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateTestCaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Kicks off a test case run.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [RunTestCaseMetadata][google.cloud.dialogflow.cx.v3beta1.RunTestCaseMetadata]
      /// - `response`: [RunTestCaseResponse][google.cloud.dialogflow.cx.v3beta1.RunTestCaseResponse]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RunTestCase(global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunTestCaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Kicks off a batch run of test cases.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [BatchRunTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.BatchRunTestCasesMetadata]
      /// - `response`: [BatchRunTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.BatchRunTestCasesResponse]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> BatchRunTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchRunTestCasesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Calculates the test coverage for an agent.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageResponse> CalculateCoverage(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Imports the test cases from a Cloud Storage bucket or a local file. It
      /// always creates new test cases and won't overwite any existing ones. The
      /// provided ID in the imported test case is neglected.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [ImportTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.ImportTestCasesMetadata]
      /// - `response`: [ImportTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.ImportTestCasesResponse]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ImportTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ImportTestCasesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Exports the test cases under the agent to a Cloud Storage bucket or a local
      /// file. Filter can be applied to export a subset of test cases.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [ExportTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.ExportTestCasesMetadata]
      /// - `response`: [ExportTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.ExportTestCasesResponse]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ExportTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ExportTestCasesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Fetches a list of results for a given test case.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsResponse> ListTestCaseResults(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a test case result.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCaseResult> GetTestCaseResult(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseResultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for TestCases</summary>
    public partial class TestCasesClient : grpc::ClientBase<TestCasesClient>
    {
      /// <summary>Creates a new client for TestCases</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TestCasesClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TestCases that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TestCasesClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TestCasesClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TestCasesClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Fetches a list of test cases for a given agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesResponse ListTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTestCases(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetches a list of test cases for a given agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesResponse ListTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTestCases, null, options, request);
      }
      /// <summary>
      /// Fetches a list of test cases for a given agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesResponse> ListTestCasesAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTestCasesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetches a list of test cases for a given agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesResponse> ListTestCasesAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTestCases, null, options, request);
      }
      /// <summary>
      /// Batch deletes test cases.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty BatchDeleteTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchDeleteTestCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchDeleteTestCases(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Batch deletes test cases.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty BatchDeleteTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchDeleteTestCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchDeleteTestCases, null, options, request);
      }
      /// <summary>
      /// Batch deletes test cases.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> BatchDeleteTestCasesAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchDeleteTestCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchDeleteTestCasesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Batch deletes test cases.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> BatchDeleteTestCasesAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchDeleteTestCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchDeleteTestCases, null, options, request);
      }
      /// <summary>
      /// Gets a test case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase GetTestCase(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTestCase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a test case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase GetTestCase(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTestCase, null, options, request);
      }
      /// <summary>
      /// Gets a test case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> GetTestCaseAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTestCaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a test case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> GetTestCaseAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTestCase, null, options, request);
      }
      /// <summary>
      /// Creates a test case for the given agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase CreateTestCase(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateTestCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTestCase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a test case for the given agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase CreateTestCase(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateTestCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTestCase, null, options, request);
      }
      /// <summary>
      /// Creates a test case for the given agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> CreateTestCaseAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateTestCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTestCaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a test case for the given agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> CreateTestCaseAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateTestCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTestCase, null, options, request);
      }
      /// <summary>
      /// Updates the specified test case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase UpdateTestCase(global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateTestCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTestCase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified test case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase UpdateTestCase(global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateTestCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTestCase, null, options, request);
      }
      /// <summary>
      /// Updates the specified test case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> UpdateTestCaseAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateTestCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTestCaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified test case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase> UpdateTestCaseAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateTestCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTestCase, null, options, request);
      }
      /// <summary>
      /// Kicks off a test case run.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [RunTestCaseMetadata][google.cloud.dialogflow.cx.v3beta1.RunTestCaseMetadata]
      /// - `response`: [RunTestCaseResponse][google.cloud.dialogflow.cx.v3beta1.RunTestCaseResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RunTestCase(global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunTestCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunTestCase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Kicks off a test case run.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [RunTestCaseMetadata][google.cloud.dialogflow.cx.v3beta1.RunTestCaseMetadata]
      /// - `response`: [RunTestCaseResponse][google.cloud.dialogflow.cx.v3beta1.RunTestCaseResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RunTestCase(global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunTestCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RunTestCase, null, options, request);
      }
      /// <summary>
      /// Kicks off a test case run.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [RunTestCaseMetadata][google.cloud.dialogflow.cx.v3beta1.RunTestCaseMetadata]
      /// - `response`: [RunTestCaseResponse][google.cloud.dialogflow.cx.v3beta1.RunTestCaseResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RunTestCaseAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunTestCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunTestCaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Kicks off a test case run.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [RunTestCaseMetadata][google.cloud.dialogflow.cx.v3beta1.RunTestCaseMetadata]
      /// - `response`: [RunTestCaseResponse][google.cloud.dialogflow.cx.v3beta1.RunTestCaseResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RunTestCaseAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunTestCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RunTestCase, null, options, request);
      }
      /// <summary>
      /// Kicks off a batch run of test cases.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [BatchRunTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.BatchRunTestCasesMetadata]
      /// - `response`: [BatchRunTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.BatchRunTestCasesResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchRunTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchRunTestCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchRunTestCases(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Kicks off a batch run of test cases.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [BatchRunTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.BatchRunTestCasesMetadata]
      /// - `response`: [BatchRunTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.BatchRunTestCasesResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchRunTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchRunTestCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchRunTestCases, null, options, request);
      }
      /// <summary>
      /// Kicks off a batch run of test cases.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [BatchRunTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.BatchRunTestCasesMetadata]
      /// - `response`: [BatchRunTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.BatchRunTestCasesResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchRunTestCasesAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchRunTestCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchRunTestCasesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Kicks off a batch run of test cases.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [BatchRunTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.BatchRunTestCasesMetadata]
      /// - `response`: [BatchRunTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.BatchRunTestCasesResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchRunTestCasesAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchRunTestCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchRunTestCases, null, options, request);
      }
      /// <summary>
      /// Calculates the test coverage for an agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageResponse CalculateCoverage(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CalculateCoverage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Calculates the test coverage for an agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageResponse CalculateCoverage(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CalculateCoverage, null, options, request);
      }
      /// <summary>
      /// Calculates the test coverage for an agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageResponse> CalculateCoverageAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CalculateCoverageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Calculates the test coverage for an agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageResponse> CalculateCoverageAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CalculateCoverage, null, options, request);
      }
      /// <summary>
      /// Imports the test cases from a Cloud Storage bucket or a local file. It
      /// always creates new test cases and won't overwite any existing ones. The
      /// provided ID in the imported test case is neglected.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [ImportTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.ImportTestCasesMetadata]
      /// - `response`: [ImportTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.ImportTestCasesResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ImportTestCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportTestCases(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports the test cases from a Cloud Storage bucket or a local file. It
      /// always creates new test cases and won't overwite any existing ones. The
      /// provided ID in the imported test case is neglected.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [ImportTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.ImportTestCasesMetadata]
      /// - `response`: [ImportTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.ImportTestCasesResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ImportTestCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportTestCases, null, options, request);
      }
      /// <summary>
      /// Imports the test cases from a Cloud Storage bucket or a local file. It
      /// always creates new test cases and won't overwite any existing ones. The
      /// provided ID in the imported test case is neglected.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [ImportTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.ImportTestCasesMetadata]
      /// - `response`: [ImportTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.ImportTestCasesResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportTestCasesAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ImportTestCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportTestCasesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports the test cases from a Cloud Storage bucket or a local file. It
      /// always creates new test cases and won't overwite any existing ones. The
      /// provided ID in the imported test case is neglected.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [ImportTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.ImportTestCasesMetadata]
      /// - `response`: [ImportTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.ImportTestCasesResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportTestCasesAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ImportTestCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportTestCases, null, options, request);
      }
      /// <summary>
      /// Exports the test cases under the agent to a Cloud Storage bucket or a local
      /// file. Filter can be applied to export a subset of test cases.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [ExportTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.ExportTestCasesMetadata]
      /// - `response`: [ExportTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.ExportTestCasesResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ExportTestCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportTestCases(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports the test cases under the agent to a Cloud Storage bucket or a local
      /// file. Filter can be applied to export a subset of test cases.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [ExportTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.ExportTestCasesMetadata]
      /// - `response`: [ExportTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.ExportTestCasesResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportTestCases(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ExportTestCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportTestCases, null, options, request);
      }
      /// <summary>
      /// Exports the test cases under the agent to a Cloud Storage bucket or a local
      /// file. Filter can be applied to export a subset of test cases.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [ExportTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.ExportTestCasesMetadata]
      /// - `response`: [ExportTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.ExportTestCasesResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportTestCasesAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ExportTestCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportTestCasesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports the test cases under the agent to a Cloud Storage bucket or a local
      /// file. Filter can be applied to export a subset of test cases.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: [ExportTestCasesMetadata][google.cloud.dialogflow.cx.v3beta1.ExportTestCasesMetadata]
      /// - `response`: [ExportTestCasesResponse][google.cloud.dialogflow.cx.v3beta1.ExportTestCasesResponse]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportTestCasesAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ExportTestCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportTestCases, null, options, request);
      }
      /// <summary>
      /// Fetches a list of results for a given test case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsResponse ListTestCaseResults(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTestCaseResults(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetches a list of results for a given test case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsResponse ListTestCaseResults(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTestCaseResults, null, options, request);
      }
      /// <summary>
      /// Fetches a list of results for a given test case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsResponse> ListTestCaseResultsAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTestCaseResultsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetches a list of results for a given test case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsResponse> ListTestCaseResultsAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTestCaseResults, null, options, request);
      }
      /// <summary>
      /// Gets a test case result.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCaseResult GetTestCaseResult(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTestCaseResult(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a test case result.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCaseResult GetTestCaseResult(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTestCaseResult, null, options, request);
      }
      /// <summary>
      /// Gets a test case result.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCaseResult> GetTestCaseResultAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTestCaseResultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a test case result.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCaseResult> GetTestCaseResultAsync(global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTestCaseResult, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TestCasesClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TestCasesClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(TestCasesBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListTestCases, serviceImpl.ListTestCases)
          .AddMethod(__Method_BatchDeleteTestCases, serviceImpl.BatchDeleteTestCases)
          .AddMethod(__Method_GetTestCase, serviceImpl.GetTestCase)
          .AddMethod(__Method_CreateTestCase, serviceImpl.CreateTestCase)
          .AddMethod(__Method_UpdateTestCase, serviceImpl.UpdateTestCase)
          .AddMethod(__Method_RunTestCase, serviceImpl.RunTestCase)
          .AddMethod(__Method_BatchRunTestCases, serviceImpl.BatchRunTestCases)
          .AddMethod(__Method_CalculateCoverage, serviceImpl.CalculateCoverage)
          .AddMethod(__Method_ImportTestCases, serviceImpl.ImportTestCases)
          .AddMethod(__Method_ExportTestCases, serviceImpl.ExportTestCases)
          .AddMethod(__Method_ListTestCaseResults, serviceImpl.ListTestCaseResults)
          .AddMethod(__Method_GetTestCaseResult, serviceImpl.GetTestCaseResult).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TestCasesBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListTestCases, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCasesResponse>(serviceImpl.ListTestCases));
      serviceBinder.AddMethod(__Method_BatchDeleteTestCases, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchDeleteTestCasesRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.BatchDeleteTestCases));
      serviceBinder.AddMethod(__Method_GetTestCase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase>(serviceImpl.GetTestCase));
      serviceBinder.AddMethod(__Method_CreateTestCase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CreateTestCaseRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase>(serviceImpl.CreateTestCase));
      serviceBinder.AddMethod(__Method_UpdateTestCase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.UpdateTestCaseRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCase>(serviceImpl.UpdateTestCase));
      serviceBinder.AddMethod(__Method_RunTestCase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.RunTestCaseRequest, global::Google.LongRunning.Operation>(serviceImpl.RunTestCase));
      serviceBinder.AddMethod(__Method_BatchRunTestCases, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.BatchRunTestCasesRequest, global::Google.LongRunning.Operation>(serviceImpl.BatchRunTestCases));
      serviceBinder.AddMethod(__Method_CalculateCoverage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.CalculateCoverageResponse>(serviceImpl.CalculateCoverage));
      serviceBinder.AddMethod(__Method_ImportTestCases, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ImportTestCasesRequest, global::Google.LongRunning.Operation>(serviceImpl.ImportTestCases));
      serviceBinder.AddMethod(__Method_ExportTestCases, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ExportTestCasesRequest, global::Google.LongRunning.Operation>(serviceImpl.ExportTestCases));
      serviceBinder.AddMethod(__Method_ListTestCaseResults, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.ListTestCaseResultsResponse>(serviceImpl.ListTestCaseResults));
      serviceBinder.AddMethod(__Method_GetTestCaseResult, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3Beta1.GetTestCaseResultRequest, global::Google.Cloud.Dialogflow.Cx.V3Beta1.TestCaseResult>(serviceImpl.GetTestCaseResult));
    }

  }
}
#endregion
