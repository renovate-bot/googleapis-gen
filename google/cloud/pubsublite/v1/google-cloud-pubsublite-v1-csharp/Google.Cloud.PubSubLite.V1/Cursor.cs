// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/pubsublite/v1/cursor.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.PubSubLite.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/pubsublite/v1/cursor.proto</summary>
  public static partial class CursorReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/pubsublite/v1/cursor.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CursorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidnb29nbGUvY2xvdWQvcHVic3VibGl0ZS92MS9jdXJzb3IucHJvdG8SGmdv",
            "b2dsZS5jbG91ZC5wdWJzdWJsaXRlLnYxGhxnb29nbGUvYXBpL2Fubm90YXRp",
            "b25zLnByb3RvGhdnb29nbGUvYXBpL2NsaWVudC5wcm90bxofZ29vZ2xlL2Fw",
            "aS9maWVsZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5w",
            "cm90bxonZ29vZ2xlL2Nsb3VkL3B1YnN1YmxpdGUvdjEvY29tbW9uLnByb3Rv",
            "IkUKGkluaXRpYWxDb21taXRDdXJzb3JSZXF1ZXN0EhQKDHN1YnNjcmlwdGlv",
            "bhgBIAEoCRIRCglwYXJ0aXRpb24YAiABKAMiHQobSW5pdGlhbENvbW1pdEN1",
            "cnNvclJlc3BvbnNlIlIKHFNlcXVlbmNlZENvbW1pdEN1cnNvclJlcXVlc3QS",
            "MgoGY3Vyc29yGAEgASgLMiIuZ29vZ2xlLmNsb3VkLnB1YnN1YmxpdGUudjEu",
            "Q3Vyc29yIj0KHVNlcXVlbmNlZENvbW1pdEN1cnNvclJlc3BvbnNlEhwKFGFj",
            "a25vd2xlZGdlZF9jb21taXRzGAEgASgDIsABChxTdHJlYW1pbmdDb21taXRD",
            "dXJzb3JSZXF1ZXN0EkkKB2luaXRpYWwYASABKAsyNi5nb29nbGUuY2xvdWQu",
            "cHVic3VibGl0ZS52MS5Jbml0aWFsQ29tbWl0Q3Vyc29yUmVxdWVzdEgAEkoK",
            "BmNvbW1pdBgCIAEoCzI4Lmdvb2dsZS5jbG91ZC5wdWJzdWJsaXRlLnYxLlNl",
            "cXVlbmNlZENvbW1pdEN1cnNvclJlcXVlc3RIAEIJCgdyZXF1ZXN0IsMBCh1T",
            "dHJlYW1pbmdDb21taXRDdXJzb3JSZXNwb25zZRJKCgdpbml0aWFsGAEgASgL",
            "MjcuZ29vZ2xlLmNsb3VkLnB1YnN1YmxpdGUudjEuSW5pdGlhbENvbW1pdEN1",
            "cnNvclJlc3BvbnNlSAASSwoGY29tbWl0GAIgASgLMjkuZ29vZ2xlLmNsb3Vk",
            "LnB1YnN1YmxpdGUudjEuU2VxdWVuY2VkQ29tbWl0Q3Vyc29yUmVzcG9uc2VI",
            "AEIJCgdyZXF1ZXN0InIKE0NvbW1pdEN1cnNvclJlcXVlc3QSFAoMc3Vic2Ny",
            "aXB0aW9uGAEgASgJEhEKCXBhcnRpdGlvbhgCIAEoAxIyCgZjdXJzb3IYAyAB",
            "KAsyIi5nb29nbGUuY2xvdWQucHVic3VibGl0ZS52MS5DdXJzb3IiFgoUQ29t",
            "bWl0Q3Vyc29yUmVzcG9uc2UihAEKG0xpc3RQYXJ0aXRpb25DdXJzb3JzUmVx",
            "dWVzdBI+CgZwYXJlbnQYASABKAlCLuBBAvpBKAomcHVic3VibGl0ZS5nb29n",
            "bGVhcGlzLmNvbS9TdWJzY3JpcHRpb24SEQoJcGFnZV9zaXplGAIgASgFEhIK",
            "CnBhZ2VfdG9rZW4YAyABKAkiWAoPUGFydGl0aW9uQ3Vyc29yEhEKCXBhcnRp",
            "dGlvbhgBIAEoAxIyCgZjdXJzb3IYAiABKAsyIi5nb29nbGUuY2xvdWQucHVi",
            "c3VibGl0ZS52MS5DdXJzb3IifwocTGlzdFBhcnRpdGlvbkN1cnNvcnNSZXNw",
            "b25zZRJGChFwYXJ0aXRpb25fY3Vyc29ycxgBIAMoCzIrLmdvb2dsZS5jbG91",
            "ZC5wdWJzdWJsaXRlLnYxLlBhcnRpdGlvbkN1cnNvchIXCg9uZXh0X3BhZ2Vf",
            "dG9rZW4YAiABKAkyogUKDUN1cnNvclNlcnZpY2USkgEKFVN0cmVhbWluZ0Nv",
            "bW1pdEN1cnNvchI4Lmdvb2dsZS5jbG91ZC5wdWJzdWJsaXRlLnYxLlN0cmVh",
            "bWluZ0NvbW1pdEN1cnNvclJlcXVlc3QaOS5nb29nbGUuY2xvdWQucHVic3Vi",
            "bGl0ZS52MS5TdHJlYW1pbmdDb21taXRDdXJzb3JSZXNwb25zZSIAKAEwARLL",
            "AQoMQ29tbWl0Q3Vyc29yEi8uZ29vZ2xlLmNsb3VkLnB1YnN1YmxpdGUudjEu",
            "Q29tbWl0Q3Vyc29yUmVxdWVzdBowLmdvb2dsZS5jbG91ZC5wdWJzdWJsaXRl",
            "LnYxLkNvbW1pdEN1cnNvclJlc3BvbnNlIliC0+STAlIiTS92MS9jdXJzb3Iv",
            "e3N1YnNjcmlwdGlvbj1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3N1YnNjcmlw",
            "dGlvbnMvKn06Y29tbWl0Q3Vyc29yOgEqEt4BChRMaXN0UGFydGl0aW9uQ3Vy",
            "c29ycxI3Lmdvb2dsZS5jbG91ZC5wdWJzdWJsaXRlLnYxLkxpc3RQYXJ0aXRp",
            "b25DdXJzb3JzUmVxdWVzdBo4Lmdvb2dsZS5jbG91ZC5wdWJzdWJsaXRlLnYx",
            "Lkxpc3RQYXJ0aXRpb25DdXJzb3JzUmVzcG9uc2UiU4LT5JMCRBJCL3YxL2N1",
            "cnNvci97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovc3Vic2NyaXB0",
            "aW9ucy8qfS9jdXJzb3Jz2kEGcGFyZW50Gk3KQRlwdWJzdWJsaXRlLmdvb2ds",
            "ZWFwaXMuY29t0kEuaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9j",
            "bG91ZC1wbGF0Zm9ybULVAQohY29tLmdvb2dsZS5jbG91ZC5wdWJzdWJsaXRl",
            "LnByb3RvQgtDdXJzb3JQcm90b1ABWkRnb29nbGUuZ29sYW5nLm9yZy9nZW5w",
            "cm90by9nb29nbGVhcGlzL2Nsb3VkL3B1YnN1YmxpdGUvdjE7cHVic3VibGl0",
            "ZfgBAaoCGkdvb2dsZS5DbG91ZC5QdWJTdWJMaXRlLlYxygIaR29vZ2xlXENs",
            "b3VkXFB1YlN1YkxpdGVcVjHqAh1Hb29nbGU6OkNsb3VkOjpQdWJTdWJMaXRl",
            "OjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.PubSubLite.V1.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.InitialCommitCursorRequest), global::Google.Cloud.PubSubLite.V1.InitialCommitCursorRequest.Parser, new[]{ "Subscription", "Partition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.InitialCommitCursorResponse), global::Google.Cloud.PubSubLite.V1.InitialCommitCursorResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorRequest), global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorRequest.Parser, new[]{ "Cursor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorResponse), global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorResponse.Parser, new[]{ "AcknowledgedCommits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.StreamingCommitCursorRequest), global::Google.Cloud.PubSubLite.V1.StreamingCommitCursorRequest.Parser, new[]{ "Initial", "Commit" }, new[]{ "Request" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.StreamingCommitCursorResponse), global::Google.Cloud.PubSubLite.V1.StreamingCommitCursorResponse.Parser, new[]{ "Initial", "Commit" }, new[]{ "Request" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.CommitCursorRequest), global::Google.Cloud.PubSubLite.V1.CommitCursorRequest.Parser, new[]{ "Subscription", "Partition", "Cursor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.CommitCursorResponse), global::Google.Cloud.PubSubLite.V1.CommitCursorResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.ListPartitionCursorsRequest), global::Google.Cloud.PubSubLite.V1.ListPartitionCursorsRequest.Parser, new[]{ "Parent", "PageSize", "PageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.PartitionCursor), global::Google.Cloud.PubSubLite.V1.PartitionCursor.Parser, new[]{ "Partition", "Cursor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.ListPartitionCursorsResponse), global::Google.Cloud.PubSubLite.V1.ListPartitionCursorsResponse.Parser, new[]{ "PartitionCursors", "NextPageToken" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The first streaming request that must be sent on a newly-opened stream. The
  /// client must wait for the response before sending subsequent requests on the
  /// stream.
  /// </summary>
  public sealed partial class InitialCommitCursorRequest : pb::IMessage<InitialCommitCursorRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitialCommitCursorRequest> _parser = new pb::MessageParser<InitialCommitCursorRequest>(() => new InitialCommitCursorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitialCommitCursorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.CursorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialCommitCursorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialCommitCursorRequest(InitialCommitCursorRequest other) : this() {
      subscription_ = other.subscription_;
      partition_ = other.partition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialCommitCursorRequest Clone() {
      return new InitialCommitCursorRequest(this);
    }

    /// <summary>Field number for the "subscription" field.</summary>
    public const int SubscriptionFieldNumber = 1;
    private string subscription_ = "";
    /// <summary>
    /// The subscription for which to manage committed cursors.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subscription {
      get { return subscription_; }
      set {
        subscription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partition" field.</summary>
    public const int PartitionFieldNumber = 2;
    private long partition_;
    /// <summary>
    /// The partition for which to manage committed cursors. Partitions are zero
    /// indexed, so `partition` must be in the range [0, topic.num_partitions).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Partition {
      get { return partition_; }
      set {
        partition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitialCommitCursorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitialCommitCursorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subscription != other.Subscription) return false;
      if (Partition != other.Partition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Subscription.Length != 0) hash ^= Subscription.GetHashCode();
      if (Partition != 0L) hash ^= Partition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Subscription.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Subscription);
      }
      if (Partition != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Partition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Subscription.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Subscription);
      }
      if (Partition != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Partition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Subscription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subscription);
      }
      if (Partition != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Partition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitialCommitCursorRequest other) {
      if (other == null) {
        return;
      }
      if (other.Subscription.Length != 0) {
        Subscription = other.Subscription;
      }
      if (other.Partition != 0L) {
        Partition = other.Partition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Subscription = input.ReadString();
            break;
          }
          case 16: {
            Partition = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Subscription = input.ReadString();
            break;
          }
          case 16: {
            Partition = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to an InitialCommitCursorRequest.
  /// </summary>
  public sealed partial class InitialCommitCursorResponse : pb::IMessage<InitialCommitCursorResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitialCommitCursorResponse> _parser = new pb::MessageParser<InitialCommitCursorResponse>(() => new InitialCommitCursorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitialCommitCursorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.CursorReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialCommitCursorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialCommitCursorResponse(InitialCommitCursorResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitialCommitCursorResponse Clone() {
      return new InitialCommitCursorResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitialCommitCursorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitialCommitCursorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitialCommitCursorResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Streaming request to update the committed cursor. Subsequent
  /// SequencedCommitCursorRequests override outstanding ones.
  /// </summary>
  public sealed partial class SequencedCommitCursorRequest : pb::IMessage<SequencedCommitCursorRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SequencedCommitCursorRequest> _parser = new pb::MessageParser<SequencedCommitCursorRequest>(() => new SequencedCommitCursorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SequencedCommitCursorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.CursorReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SequencedCommitCursorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SequencedCommitCursorRequest(SequencedCommitCursorRequest other) : this() {
      cursor_ = other.cursor_ != null ? other.cursor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SequencedCommitCursorRequest Clone() {
      return new SequencedCommitCursorRequest(this);
    }

    /// <summary>Field number for the "cursor" field.</summary>
    public const int CursorFieldNumber = 1;
    private global::Google.Cloud.PubSubLite.V1.Cursor cursor_;
    /// <summary>
    /// The new value for the committed cursor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.PubSubLite.V1.Cursor Cursor {
      get { return cursor_; }
      set {
        cursor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SequencedCommitCursorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SequencedCommitCursorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Cursor, other.Cursor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cursor_ != null) hash ^= Cursor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cursor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cursor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cursor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cursor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SequencedCommitCursorRequest other) {
      if (other == null) {
        return;
      }
      if (other.cursor_ != null) {
        if (cursor_ == null) {
          Cursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
        }
        Cursor.MergeFrom(other.Cursor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cursor_ == null) {
              Cursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(Cursor);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cursor_ == null) {
              Cursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(Cursor);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to a SequencedCommitCursorRequest.
  /// </summary>
  public sealed partial class SequencedCommitCursorResponse : pb::IMessage<SequencedCommitCursorResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SequencedCommitCursorResponse> _parser = new pb::MessageParser<SequencedCommitCursorResponse>(() => new SequencedCommitCursorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SequencedCommitCursorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.CursorReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SequencedCommitCursorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SequencedCommitCursorResponse(SequencedCommitCursorResponse other) : this() {
      acknowledgedCommits_ = other.acknowledgedCommits_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SequencedCommitCursorResponse Clone() {
      return new SequencedCommitCursorResponse(this);
    }

    /// <summary>Field number for the "acknowledged_commits" field.</summary>
    public const int AcknowledgedCommitsFieldNumber = 1;
    private long acknowledgedCommits_;
    /// <summary>
    /// The number of outstanding SequencedCommitCursorRequests acknowledged by
    /// this response. Note that SequencedCommitCursorRequests are acknowledged in
    /// the order that they are received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AcknowledgedCommits {
      get { return acknowledgedCommits_; }
      set {
        acknowledgedCommits_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SequencedCommitCursorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SequencedCommitCursorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AcknowledgedCommits != other.AcknowledgedCommits) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AcknowledgedCommits != 0L) hash ^= AcknowledgedCommits.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AcknowledgedCommits != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AcknowledgedCommits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AcknowledgedCommits != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AcknowledgedCommits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AcknowledgedCommits != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AcknowledgedCommits);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SequencedCommitCursorResponse other) {
      if (other == null) {
        return;
      }
      if (other.AcknowledgedCommits != 0L) {
        AcknowledgedCommits = other.AcknowledgedCommits;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AcknowledgedCommits = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AcknowledgedCommits = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request sent from the client to the server on a stream.
  /// </summary>
  public sealed partial class StreamingCommitCursorRequest : pb::IMessage<StreamingCommitCursorRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingCommitCursorRequest> _parser = new pb::MessageParser<StreamingCommitCursorRequest>(() => new StreamingCommitCursorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingCommitCursorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.CursorReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingCommitCursorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingCommitCursorRequest(StreamingCommitCursorRequest other) : this() {
      switch (other.RequestCase) {
        case RequestOneofCase.Initial:
          Initial = other.Initial.Clone();
          break;
        case RequestOneofCase.Commit:
          Commit = other.Commit.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingCommitCursorRequest Clone() {
      return new StreamingCommitCursorRequest(this);
    }

    /// <summary>Field number for the "initial" field.</summary>
    public const int InitialFieldNumber = 1;
    /// <summary>
    /// Initial request on the stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.PubSubLite.V1.InitialCommitCursorRequest Initial {
      get { return requestCase_ == RequestOneofCase.Initial ? (global::Google.Cloud.PubSubLite.V1.InitialCommitCursorRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Initial;
      }
    }

    /// <summary>Field number for the "commit" field.</summary>
    public const int CommitFieldNumber = 2;
    /// <summary>
    /// Request to commit a new cursor value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorRequest Commit {
      get { return requestCase_ == RequestOneofCase.Commit ? (global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Commit;
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      Initial = 1,
      Commit = 2,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingCommitCursorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingCommitCursorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Initial, other.Initial)) return false;
      if (!object.Equals(Commit, other.Commit)) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestCase_ == RequestOneofCase.Initial) hash ^= Initial.GetHashCode();
      if (requestCase_ == RequestOneofCase.Commit) hash ^= Commit.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (requestCase_ == RequestOneofCase.Initial) {
        output.WriteRawTag(10);
        output.WriteMessage(Initial);
      }
      if (requestCase_ == RequestOneofCase.Commit) {
        output.WriteRawTag(18);
        output.WriteMessage(Commit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (requestCase_ == RequestOneofCase.Initial) {
        output.WriteRawTag(10);
        output.WriteMessage(Initial);
      }
      if (requestCase_ == RequestOneofCase.Commit) {
        output.WriteRawTag(18);
        output.WriteMessage(Commit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestCase_ == RequestOneofCase.Initial) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Initial);
      }
      if (requestCase_ == RequestOneofCase.Commit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Commit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingCommitCursorRequest other) {
      if (other == null) {
        return;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.Initial:
          if (Initial == null) {
            Initial = new global::Google.Cloud.PubSubLite.V1.InitialCommitCursorRequest();
          }
          Initial.MergeFrom(other.Initial);
          break;
        case RequestOneofCase.Commit:
          if (Commit == null) {
            Commit = new global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorRequest();
          }
          Commit.MergeFrom(other.Commit);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.PubSubLite.V1.InitialCommitCursorRequest subBuilder = new global::Google.Cloud.PubSubLite.V1.InitialCommitCursorRequest();
            if (requestCase_ == RequestOneofCase.Initial) {
              subBuilder.MergeFrom(Initial);
            }
            input.ReadMessage(subBuilder);
            Initial = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorRequest subBuilder = new global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorRequest();
            if (requestCase_ == RequestOneofCase.Commit) {
              subBuilder.MergeFrom(Commit);
            }
            input.ReadMessage(subBuilder);
            Commit = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.PubSubLite.V1.InitialCommitCursorRequest subBuilder = new global::Google.Cloud.PubSubLite.V1.InitialCommitCursorRequest();
            if (requestCase_ == RequestOneofCase.Initial) {
              subBuilder.MergeFrom(Initial);
            }
            input.ReadMessage(subBuilder);
            Initial = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorRequest subBuilder = new global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorRequest();
            if (requestCase_ == RequestOneofCase.Commit) {
              subBuilder.MergeFrom(Commit);
            }
            input.ReadMessage(subBuilder);
            Commit = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to a StreamingCommitCursorRequest.
  /// </summary>
  public sealed partial class StreamingCommitCursorResponse : pb::IMessage<StreamingCommitCursorResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamingCommitCursorResponse> _parser = new pb::MessageParser<StreamingCommitCursorResponse>(() => new StreamingCommitCursorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamingCommitCursorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.CursorReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingCommitCursorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingCommitCursorResponse(StreamingCommitCursorResponse other) : this() {
      switch (other.RequestCase) {
        case RequestOneofCase.Initial:
          Initial = other.Initial.Clone();
          break;
        case RequestOneofCase.Commit:
          Commit = other.Commit.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamingCommitCursorResponse Clone() {
      return new StreamingCommitCursorResponse(this);
    }

    /// <summary>Field number for the "initial" field.</summary>
    public const int InitialFieldNumber = 1;
    /// <summary>
    /// Initial response on the stream.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.PubSubLite.V1.InitialCommitCursorResponse Initial {
      get { return requestCase_ == RequestOneofCase.Initial ? (global::Google.Cloud.PubSubLite.V1.InitialCommitCursorResponse) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Initial;
      }
    }

    /// <summary>Field number for the "commit" field.</summary>
    public const int CommitFieldNumber = 2;
    /// <summary>
    /// Response to committing a new cursor value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorResponse Commit {
      get { return requestCase_ == RequestOneofCase.Commit ? (global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorResponse) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Commit;
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      Initial = 1,
      Commit = 2,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamingCommitCursorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamingCommitCursorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Initial, other.Initial)) return false;
      if (!object.Equals(Commit, other.Commit)) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestCase_ == RequestOneofCase.Initial) hash ^= Initial.GetHashCode();
      if (requestCase_ == RequestOneofCase.Commit) hash ^= Commit.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (requestCase_ == RequestOneofCase.Initial) {
        output.WriteRawTag(10);
        output.WriteMessage(Initial);
      }
      if (requestCase_ == RequestOneofCase.Commit) {
        output.WriteRawTag(18);
        output.WriteMessage(Commit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (requestCase_ == RequestOneofCase.Initial) {
        output.WriteRawTag(10);
        output.WriteMessage(Initial);
      }
      if (requestCase_ == RequestOneofCase.Commit) {
        output.WriteRawTag(18);
        output.WriteMessage(Commit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestCase_ == RequestOneofCase.Initial) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Initial);
      }
      if (requestCase_ == RequestOneofCase.Commit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Commit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamingCommitCursorResponse other) {
      if (other == null) {
        return;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.Initial:
          if (Initial == null) {
            Initial = new global::Google.Cloud.PubSubLite.V1.InitialCommitCursorResponse();
          }
          Initial.MergeFrom(other.Initial);
          break;
        case RequestOneofCase.Commit:
          if (Commit == null) {
            Commit = new global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorResponse();
          }
          Commit.MergeFrom(other.Commit);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.PubSubLite.V1.InitialCommitCursorResponse subBuilder = new global::Google.Cloud.PubSubLite.V1.InitialCommitCursorResponse();
            if (requestCase_ == RequestOneofCase.Initial) {
              subBuilder.MergeFrom(Initial);
            }
            input.ReadMessage(subBuilder);
            Initial = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorResponse subBuilder = new global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorResponse();
            if (requestCase_ == RequestOneofCase.Commit) {
              subBuilder.MergeFrom(Commit);
            }
            input.ReadMessage(subBuilder);
            Commit = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.PubSubLite.V1.InitialCommitCursorResponse subBuilder = new global::Google.Cloud.PubSubLite.V1.InitialCommitCursorResponse();
            if (requestCase_ == RequestOneofCase.Initial) {
              subBuilder.MergeFrom(Initial);
            }
            input.ReadMessage(subBuilder);
            Initial = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorResponse subBuilder = new global::Google.Cloud.PubSubLite.V1.SequencedCommitCursorResponse();
            if (requestCase_ == RequestOneofCase.Commit) {
              subBuilder.MergeFrom(Commit);
            }
            input.ReadMessage(subBuilder);
            Commit = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for CommitCursor.
  /// </summary>
  public sealed partial class CommitCursorRequest : pb::IMessage<CommitCursorRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommitCursorRequest> _parser = new pb::MessageParser<CommitCursorRequest>(() => new CommitCursorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitCursorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.CursorReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitCursorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitCursorRequest(CommitCursorRequest other) : this() {
      subscription_ = other.subscription_;
      partition_ = other.partition_;
      cursor_ = other.cursor_ != null ? other.cursor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitCursorRequest Clone() {
      return new CommitCursorRequest(this);
    }

    /// <summary>Field number for the "subscription" field.</summary>
    public const int SubscriptionFieldNumber = 1;
    private string subscription_ = "";
    /// <summary>
    /// The subscription for which to update the cursor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subscription {
      get { return subscription_; }
      set {
        subscription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partition" field.</summary>
    public const int PartitionFieldNumber = 2;
    private long partition_;
    /// <summary>
    /// The partition for which to update the cursor. Partitions are zero indexed,
    /// so `partition` must be in the range [0, topic.num_partitions).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Partition {
      get { return partition_; }
      set {
        partition_ = value;
      }
    }

    /// <summary>Field number for the "cursor" field.</summary>
    public const int CursorFieldNumber = 3;
    private global::Google.Cloud.PubSubLite.V1.Cursor cursor_;
    /// <summary>
    /// The new value for the committed cursor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.PubSubLite.V1.Cursor Cursor {
      get { return cursor_; }
      set {
        cursor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitCursorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitCursorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subscription != other.Subscription) return false;
      if (Partition != other.Partition) return false;
      if (!object.Equals(Cursor, other.Cursor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Subscription.Length != 0) hash ^= Subscription.GetHashCode();
      if (Partition != 0L) hash ^= Partition.GetHashCode();
      if (cursor_ != null) hash ^= Cursor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Subscription.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Subscription);
      }
      if (Partition != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Partition);
      }
      if (cursor_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Subscription.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Subscription);
      }
      if (Partition != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Partition);
      }
      if (cursor_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Subscription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subscription);
      }
      if (Partition != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Partition);
      }
      if (cursor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cursor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitCursorRequest other) {
      if (other == null) {
        return;
      }
      if (other.Subscription.Length != 0) {
        Subscription = other.Subscription;
      }
      if (other.Partition != 0L) {
        Partition = other.Partition;
      }
      if (other.cursor_ != null) {
        if (cursor_ == null) {
          Cursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
        }
        Cursor.MergeFrom(other.Cursor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Subscription = input.ReadString();
            break;
          }
          case 16: {
            Partition = input.ReadInt64();
            break;
          }
          case 26: {
            if (cursor_ == null) {
              Cursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(Cursor);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Subscription = input.ReadString();
            break;
          }
          case 16: {
            Partition = input.ReadInt64();
            break;
          }
          case 26: {
            if (cursor_ == null) {
              Cursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(Cursor);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for CommitCursor.
  /// </summary>
  public sealed partial class CommitCursorResponse : pb::IMessage<CommitCursorResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommitCursorResponse> _parser = new pb::MessageParser<CommitCursorResponse>(() => new CommitCursorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitCursorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.CursorReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitCursorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitCursorResponse(CommitCursorResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitCursorResponse Clone() {
      return new CommitCursorResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitCursorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitCursorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitCursorResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for ListPartitionCursors.
  /// </summary>
  public sealed partial class ListPartitionCursorsRequest : pb::IMessage<ListPartitionCursorsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListPartitionCursorsRequest> _parser = new pb::MessageParser<ListPartitionCursorsRequest>(() => new ListPartitionCursorsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPartitionCursorsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.CursorReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPartitionCursorsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPartitionCursorsRequest(ListPartitionCursorsRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPartitionCursorsRequest Clone() {
      return new ListPartitionCursorsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The subscription for which to retrieve cursors.
    /// Structured like
    /// `projects/{project_number}/locations/{location}/subscriptions/{subscription_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of cursors to return. The service may return fewer than
    /// this value.
    /// If unset or zero, all cursors for the parent will be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// A page token, received from a previous `ListPartitionCursors` call.
    /// Provide this to retrieve the subsequent page.
    ///
    /// When paginating, all other parameters provided to `ListPartitionCursors`
    /// must match the call that provided the page token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPartitionCursorsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPartitionCursorsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPartitionCursorsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A pair of a Cursor and the partition it is for.
  /// </summary>
  public sealed partial class PartitionCursor : pb::IMessage<PartitionCursor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PartitionCursor> _parser = new pb::MessageParser<PartitionCursor>(() => new PartitionCursor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PartitionCursor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.CursorReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionCursor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionCursor(PartitionCursor other) : this() {
      partition_ = other.partition_;
      cursor_ = other.cursor_ != null ? other.cursor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionCursor Clone() {
      return new PartitionCursor(this);
    }

    /// <summary>Field number for the "partition" field.</summary>
    public const int PartitionFieldNumber = 1;
    private long partition_;
    /// <summary>
    /// The partition this is for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Partition {
      get { return partition_; }
      set {
        partition_ = value;
      }
    }

    /// <summary>Field number for the "cursor" field.</summary>
    public const int CursorFieldNumber = 2;
    private global::Google.Cloud.PubSubLite.V1.Cursor cursor_;
    /// <summary>
    /// The value of the cursor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.PubSubLite.V1.Cursor Cursor {
      get { return cursor_; }
      set {
        cursor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PartitionCursor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PartitionCursor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Partition != other.Partition) return false;
      if (!object.Equals(Cursor, other.Cursor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Partition != 0L) hash ^= Partition.GetHashCode();
      if (cursor_ != null) hash ^= Cursor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Partition != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Partition);
      }
      if (cursor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Cursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Partition != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Partition);
      }
      if (cursor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Cursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Partition != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Partition);
      }
      if (cursor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cursor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PartitionCursor other) {
      if (other == null) {
        return;
      }
      if (other.Partition != 0L) {
        Partition = other.Partition;
      }
      if (other.cursor_ != null) {
        if (cursor_ == null) {
          Cursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
        }
        Cursor.MergeFrom(other.Cursor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Partition = input.ReadInt64();
            break;
          }
          case 18: {
            if (cursor_ == null) {
              Cursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(Cursor);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Partition = input.ReadInt64();
            break;
          }
          case 18: {
            if (cursor_ == null) {
              Cursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(Cursor);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response for ListPartitionCursors
  /// </summary>
  public sealed partial class ListPartitionCursorsResponse : pb::IMessage<ListPartitionCursorsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListPartitionCursorsResponse> _parser = new pb::MessageParser<ListPartitionCursorsResponse>(() => new ListPartitionCursorsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPartitionCursorsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.CursorReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPartitionCursorsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPartitionCursorsResponse(ListPartitionCursorsResponse other) : this() {
      partitionCursors_ = other.partitionCursors_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPartitionCursorsResponse Clone() {
      return new ListPartitionCursorsResponse(this);
    }

    /// <summary>Field number for the "partition_cursors" field.</summary>
    public const int PartitionCursorsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.PubSubLite.V1.PartitionCursor> _repeated_partitionCursors_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.PubSubLite.V1.PartitionCursor.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.PubSubLite.V1.PartitionCursor> partitionCursors_ = new pbc::RepeatedField<global::Google.Cloud.PubSubLite.V1.PartitionCursor>();
    /// <summary>
    /// The partition cursors from this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.PubSubLite.V1.PartitionCursor> PartitionCursors {
      get { return partitionCursors_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token, which can be sent as `page_token` to retrieve the next page.
    /// If this field is omitted, there are no subsequent pages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPartitionCursorsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPartitionCursorsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!partitionCursors_.Equals(other.partitionCursors_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= partitionCursors_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      partitionCursors_.WriteTo(output, _repeated_partitionCursors_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      partitionCursors_.WriteTo(ref output, _repeated_partitionCursors_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += partitionCursors_.CalculateSize(_repeated_partitionCursors_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPartitionCursorsResponse other) {
      if (other == null) {
        return;
      }
      partitionCursors_.Add(other.partitionCursors_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            partitionCursors_.AddEntriesFrom(input, _repeated_partitionCursors_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            partitionCursors_.AddEntriesFrom(ref input, _repeated_partitionCursors_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
