// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/pubsublite/v1/topic_stats.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.PubSubLite.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/pubsublite/v1/topic_stats.proto</summary>
  public static partial class TopicStatsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/pubsublite/v1/topic_stats.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TopicStatsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixnb29nbGUvY2xvdWQvcHVic3VibGl0ZS92MS90b3BpY19zdGF0cy5wcm90",
            "bxIaZ29vZ2xlLmNsb3VkLnB1YnN1YmxpdGUudjEaHGdvb2dsZS9hcGkvYW5u",
            "b3RhdGlvbnMucHJvdG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJv",
            "dG8aGWdvb2dsZS9hcGkvcmVzb3VyY2UucHJvdG8aJ2dvb2dsZS9jbG91ZC9w",
            "dWJzdWJsaXRlL3YxL2NvbW1vbi5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3Rp",
            "bWVzdGFtcC5wcm90bxoXZ29vZ2xlL2FwaS9jbGllbnQucHJvdG8i3gEKGkNv",
            "bXB1dGVNZXNzYWdlU3RhdHNSZXF1ZXN0EjYKBXRvcGljGAEgASgJQifgQQL6",
            "QSEKH3B1YnN1YmxpdGUuZ29vZ2xlYXBpcy5jb20vVG9waWMSFgoJcGFydGl0",
            "aW9uGAIgASgDQgPgQQISOAoMc3RhcnRfY3Vyc29yGAMgASgLMiIuZ29vZ2xl",
            "LmNsb3VkLnB1YnN1YmxpdGUudjEuQ3Vyc29yEjYKCmVuZF9jdXJzb3IYBCAB",
            "KAsyIi5nb29nbGUuY2xvdWQucHVic3VibGl0ZS52MS5DdXJzb3IivQEKG0Nv",
            "bXB1dGVNZXNzYWdlU3RhdHNSZXNwb25zZRIVCg1tZXNzYWdlX2NvdW50GAEg",
            "ASgDEhUKDW1lc3NhZ2VfYnl0ZXMYAiABKAMSOAoUbWluaW11bV9wdWJsaXNo",
            "X3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjYKEm1p",
            "bmltdW1fZXZlbnRfdGltZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXAiagoYQ29tcHV0ZUhlYWRDdXJzb3JSZXF1ZXN0EjYKBXRvcGljGAEg",
            "ASgJQifgQQL6QSEKH3B1YnN1YmxpdGUuZ29vZ2xlYXBpcy5jb20vVG9waWMS",
            "FgoJcGFydGl0aW9uGAIgASgDQgPgQQIiVAoZQ29tcHV0ZUhlYWRDdXJzb3JS",
            "ZXNwb25zZRI3CgtoZWFkX2N1cnNvchgBIAEoCzIiLmdvb2dsZS5jbG91ZC5w",
            "dWJzdWJsaXRlLnYxLkN1cnNvciKnAQoYQ29tcHV0ZVRpbWVDdXJzb3JSZXF1",
            "ZXN0EjYKBXRvcGljGAEgASgJQifgQQL6QSEKH3B1YnN1YmxpdGUuZ29vZ2xl",
            "YXBpcy5jb20vVG9waWMSFgoJcGFydGl0aW9uGAIgASgDQgPgQQISOwoGdGFy",
            "Z2V0GAMgASgLMiYuZ29vZ2xlLmNsb3VkLnB1YnN1YmxpdGUudjEuVGltZVRh",
            "cmdldEID4EECIk8KGUNvbXB1dGVUaW1lQ3Vyc29yUmVzcG9uc2USMgoGY3Vy",
            "c29yGAEgASgLMiIuZ29vZ2xlLmNsb3VkLnB1YnN1YmxpdGUudjEuQ3Vyc29y",
            "MvIFChFUb3BpY1N0YXRzU2VydmljZRLdAQoTQ29tcHV0ZU1lc3NhZ2VTdGF0",
            "cxI2Lmdvb2dsZS5jbG91ZC5wdWJzdWJsaXRlLnYxLkNvbXB1dGVNZXNzYWdl",
            "U3RhdHNSZXF1ZXN0GjcuZ29vZ2xlLmNsb3VkLnB1YnN1YmxpdGUudjEuQ29t",
            "cHV0ZU1lc3NhZ2VTdGF0c1Jlc3BvbnNlIlWC0+STAk8iSi92MS90b3BpY1N0",
            "YXRzL3t0b3BpYz1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3RvcGljcy8qfTpj",
            "b21wdXRlTWVzc2FnZVN0YXRzOgEqEtUBChFDb21wdXRlSGVhZEN1cnNvchI0",
            "Lmdvb2dsZS5jbG91ZC5wdWJzdWJsaXRlLnYxLkNvbXB1dGVIZWFkQ3Vyc29y",
            "UmVxdWVzdBo1Lmdvb2dsZS5jbG91ZC5wdWJzdWJsaXRlLnYxLkNvbXB1dGVI",
            "ZWFkQ3Vyc29yUmVzcG9uc2UiU4LT5JMCTSJIL3YxL3RvcGljU3RhdHMve3Rv",
            "cGljPXByb2plY3RzLyovbG9jYXRpb25zLyovdG9waWNzLyp9OmNvbXB1dGVI",
            "ZWFkQ3Vyc29yOgEqEtUBChFDb21wdXRlVGltZUN1cnNvchI0Lmdvb2dsZS5j",
            "bG91ZC5wdWJzdWJsaXRlLnYxLkNvbXB1dGVUaW1lQ3Vyc29yUmVxdWVzdBo1",
            "Lmdvb2dsZS5jbG91ZC5wdWJzdWJsaXRlLnYxLkNvbXB1dGVUaW1lQ3Vyc29y",
            "UmVzcG9uc2UiU4LT5JMCTSJIL3YxL3RvcGljU3RhdHMve3RvcGljPXByb2pl",
            "Y3RzLyovbG9jYXRpb25zLyovdG9waWNzLyp9OmNvbXB1dGVUaW1lQ3Vyc29y",
            "OgEqGk3KQRlwdWJzdWJsaXRlLmdvb2dsZWFwaXMuY29t0kEuaHR0cHM6Ly93",
            "d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybULWAQohY29t",
            "Lmdvb2dsZS5jbG91ZC5wdWJzdWJsaXRlLnByb3RvQg9Ub3BpY1N0YXRzUHJv",
            "dG9QAVpEZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9j",
            "bG91ZC9wdWJzdWJsaXRlL3YxO3B1YnN1YmxpdGWqAhpHb29nbGUuQ2xvdWQu",
            "UHViU3ViTGl0ZS5WMcoCGkdvb2dsZVxDbG91ZFxQdWJTdWJMaXRlXFYx6gId",
            "R29vZ2xlOjpDbG91ZDo6UHViU3ViTGl0ZTo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.PubSubLite.V1.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.ComputeMessageStatsRequest), global::Google.Cloud.PubSubLite.V1.ComputeMessageStatsRequest.Parser, new[]{ "Topic", "Partition", "StartCursor", "EndCursor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.ComputeMessageStatsResponse), global::Google.Cloud.PubSubLite.V1.ComputeMessageStatsResponse.Parser, new[]{ "MessageCount", "MessageBytes", "MinimumPublishTime", "MinimumEventTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.ComputeHeadCursorRequest), global::Google.Cloud.PubSubLite.V1.ComputeHeadCursorRequest.Parser, new[]{ "Topic", "Partition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.ComputeHeadCursorResponse), global::Google.Cloud.PubSubLite.V1.ComputeHeadCursorResponse.Parser, new[]{ "HeadCursor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.ComputeTimeCursorRequest), global::Google.Cloud.PubSubLite.V1.ComputeTimeCursorRequest.Parser, new[]{ "Topic", "Partition", "Target" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.PubSubLite.V1.ComputeTimeCursorResponse), global::Google.Cloud.PubSubLite.V1.ComputeTimeCursorResponse.Parser, new[]{ "Cursor" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Compute statistics about a range of messages in a given topic and partition.
  /// </summary>
  public sealed partial class ComputeMessageStatsRequest : pb::IMessage<ComputeMessageStatsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeMessageStatsRequest> _parser = new pb::MessageParser<ComputeMessageStatsRequest>(() => new ComputeMessageStatsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeMessageStatsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.TopicStatsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeMessageStatsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeMessageStatsRequest(ComputeMessageStatsRequest other) : this() {
      topic_ = other.topic_;
      partition_ = other.partition_;
      startCursor_ = other.startCursor_ != null ? other.startCursor_.Clone() : null;
      endCursor_ = other.endCursor_ != null ? other.endCursor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeMessageStatsRequest Clone() {
      return new ComputeMessageStatsRequest(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    /// <summary>
    /// Required. The topic for which we should compute message stats.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partition" field.</summary>
    public const int PartitionFieldNumber = 2;
    private long partition_;
    /// <summary>
    /// Required. The partition for which we should compute message stats.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Partition {
      get { return partition_; }
      set {
        partition_ = value;
      }
    }

    /// <summary>Field number for the "start_cursor" field.</summary>
    public const int StartCursorFieldNumber = 3;
    private global::Google.Cloud.PubSubLite.V1.Cursor startCursor_;
    /// <summary>
    /// The inclusive start of the range.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.PubSubLite.V1.Cursor StartCursor {
      get { return startCursor_; }
      set {
        startCursor_ = value;
      }
    }

    /// <summary>Field number for the "end_cursor" field.</summary>
    public const int EndCursorFieldNumber = 4;
    private global::Google.Cloud.PubSubLite.V1.Cursor endCursor_;
    /// <summary>
    /// The exclusive end of the range. The range is empty if end_cursor &lt;=
    /// start_cursor. Specifying a start_cursor before the first message and an
    /// end_cursor after the last message will retrieve all messages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.PubSubLite.V1.Cursor EndCursor {
      get { return endCursor_; }
      set {
        endCursor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeMessageStatsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeMessageStatsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      if (Partition != other.Partition) return false;
      if (!object.Equals(StartCursor, other.StartCursor)) return false;
      if (!object.Equals(EndCursor, other.EndCursor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (Partition != 0L) hash ^= Partition.GetHashCode();
      if (startCursor_ != null) hash ^= StartCursor.GetHashCode();
      if (endCursor_ != null) hash ^= EndCursor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (Partition != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Partition);
      }
      if (startCursor_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartCursor);
      }
      if (endCursor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EndCursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (Partition != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Partition);
      }
      if (startCursor_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartCursor);
      }
      if (endCursor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EndCursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (Partition != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Partition);
      }
      if (startCursor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartCursor);
      }
      if (endCursor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndCursor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeMessageStatsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.Partition != 0L) {
        Partition = other.Partition;
      }
      if (other.startCursor_ != null) {
        if (startCursor_ == null) {
          StartCursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
        }
        StartCursor.MergeFrom(other.StartCursor);
      }
      if (other.endCursor_ != null) {
        if (endCursor_ == null) {
          EndCursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
        }
        EndCursor.MergeFrom(other.EndCursor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 16: {
            Partition = input.ReadInt64();
            break;
          }
          case 26: {
            if (startCursor_ == null) {
              StartCursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(StartCursor);
            break;
          }
          case 34: {
            if (endCursor_ == null) {
              EndCursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(EndCursor);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 16: {
            Partition = input.ReadInt64();
            break;
          }
          case 26: {
            if (startCursor_ == null) {
              StartCursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(StartCursor);
            break;
          }
          case 34: {
            if (endCursor_ == null) {
              EndCursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(EndCursor);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response containing stats for messages in the requested topic and partition.
  /// </summary>
  public sealed partial class ComputeMessageStatsResponse : pb::IMessage<ComputeMessageStatsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeMessageStatsResponse> _parser = new pb::MessageParser<ComputeMessageStatsResponse>(() => new ComputeMessageStatsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeMessageStatsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.TopicStatsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeMessageStatsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeMessageStatsResponse(ComputeMessageStatsResponse other) : this() {
      messageCount_ = other.messageCount_;
      messageBytes_ = other.messageBytes_;
      minimumPublishTime_ = other.minimumPublishTime_ != null ? other.minimumPublishTime_.Clone() : null;
      minimumEventTime_ = other.minimumEventTime_ != null ? other.minimumEventTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeMessageStatsResponse Clone() {
      return new ComputeMessageStatsResponse(this);
    }

    /// <summary>Field number for the "message_count" field.</summary>
    public const int MessageCountFieldNumber = 1;
    private long messageCount_;
    /// <summary>
    /// The count of messages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MessageCount {
      get { return messageCount_; }
      set {
        messageCount_ = value;
      }
    }

    /// <summary>Field number for the "message_bytes" field.</summary>
    public const int MessageBytesFieldNumber = 2;
    private long messageBytes_;
    /// <summary>
    /// The number of quota bytes accounted to these messages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MessageBytes {
      get { return messageBytes_; }
      set {
        messageBytes_ = value;
      }
    }

    /// <summary>Field number for the "minimum_publish_time" field.</summary>
    public const int MinimumPublishTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp minimumPublishTime_;
    /// <summary>
    /// The minimum publish timestamp across these messages. Note that publish
    /// timestamps within a partition are not guaranteed to be non-decreasing. The
    /// timestamp will be unset if there are no messages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp MinimumPublishTime {
      get { return minimumPublishTime_; }
      set {
        minimumPublishTime_ = value;
      }
    }

    /// <summary>Field number for the "minimum_event_time" field.</summary>
    public const int MinimumEventTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp minimumEventTime_;
    /// <summary>
    /// The minimum event timestamp across these messages. For the purposes of this
    /// computation, if a message does not have an event time, we use the publish
    /// time. The timestamp will be unset if there are no messages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp MinimumEventTime {
      get { return minimumEventTime_; }
      set {
        minimumEventTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeMessageStatsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeMessageStatsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageCount != other.MessageCount) return false;
      if (MessageBytes != other.MessageBytes) return false;
      if (!object.Equals(MinimumPublishTime, other.MinimumPublishTime)) return false;
      if (!object.Equals(MinimumEventTime, other.MinimumEventTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageCount != 0L) hash ^= MessageCount.GetHashCode();
      if (MessageBytes != 0L) hash ^= MessageBytes.GetHashCode();
      if (minimumPublishTime_ != null) hash ^= MinimumPublishTime.GetHashCode();
      if (minimumEventTime_ != null) hash ^= MinimumEventTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MessageCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MessageCount);
      }
      if (MessageBytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MessageBytes);
      }
      if (minimumPublishTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MinimumPublishTime);
      }
      if (minimumEventTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MinimumEventTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MessageCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MessageCount);
      }
      if (MessageBytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MessageBytes);
      }
      if (minimumPublishTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MinimumPublishTime);
      }
      if (minimumEventTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MinimumEventTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MessageCount);
      }
      if (MessageBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MessageBytes);
      }
      if (minimumPublishTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinimumPublishTime);
      }
      if (minimumEventTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinimumEventTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeMessageStatsResponse other) {
      if (other == null) {
        return;
      }
      if (other.MessageCount != 0L) {
        MessageCount = other.MessageCount;
      }
      if (other.MessageBytes != 0L) {
        MessageBytes = other.MessageBytes;
      }
      if (other.minimumPublishTime_ != null) {
        if (minimumPublishTime_ == null) {
          MinimumPublishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        MinimumPublishTime.MergeFrom(other.MinimumPublishTime);
      }
      if (other.minimumEventTime_ != null) {
        if (minimumEventTime_ == null) {
          MinimumEventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        MinimumEventTime.MergeFrom(other.MinimumEventTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MessageCount = input.ReadInt64();
            break;
          }
          case 16: {
            MessageBytes = input.ReadInt64();
            break;
          }
          case 26: {
            if (minimumPublishTime_ == null) {
              MinimumPublishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MinimumPublishTime);
            break;
          }
          case 34: {
            if (minimumEventTime_ == null) {
              MinimumEventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MinimumEventTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MessageCount = input.ReadInt64();
            break;
          }
          case 16: {
            MessageBytes = input.ReadInt64();
            break;
          }
          case 26: {
            if (minimumPublishTime_ == null) {
              MinimumPublishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MinimumPublishTime);
            break;
          }
          case 34: {
            if (minimumEventTime_ == null) {
              MinimumEventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MinimumEventTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Compute the current head cursor for a partition.
  /// </summary>
  public sealed partial class ComputeHeadCursorRequest : pb::IMessage<ComputeHeadCursorRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeHeadCursorRequest> _parser = new pb::MessageParser<ComputeHeadCursorRequest>(() => new ComputeHeadCursorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeHeadCursorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.TopicStatsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeHeadCursorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeHeadCursorRequest(ComputeHeadCursorRequest other) : this() {
      topic_ = other.topic_;
      partition_ = other.partition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeHeadCursorRequest Clone() {
      return new ComputeHeadCursorRequest(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    /// <summary>
    /// Required. The topic for which we should compute the head cursor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partition" field.</summary>
    public const int PartitionFieldNumber = 2;
    private long partition_;
    /// <summary>
    /// Required. The partition for which we should compute the head cursor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Partition {
      get { return partition_; }
      set {
        partition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeHeadCursorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeHeadCursorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      if (Partition != other.Partition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (Partition != 0L) hash ^= Partition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (Partition != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Partition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (Partition != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Partition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (Partition != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Partition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeHeadCursorRequest other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.Partition != 0L) {
        Partition = other.Partition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 16: {
            Partition = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 16: {
            Partition = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response containing the head cursor for the requested topic and partition.
  /// </summary>
  public sealed partial class ComputeHeadCursorResponse : pb::IMessage<ComputeHeadCursorResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeHeadCursorResponse> _parser = new pb::MessageParser<ComputeHeadCursorResponse>(() => new ComputeHeadCursorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeHeadCursorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.TopicStatsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeHeadCursorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeHeadCursorResponse(ComputeHeadCursorResponse other) : this() {
      headCursor_ = other.headCursor_ != null ? other.headCursor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeHeadCursorResponse Clone() {
      return new ComputeHeadCursorResponse(this);
    }

    /// <summary>Field number for the "head_cursor" field.</summary>
    public const int HeadCursorFieldNumber = 1;
    private global::Google.Cloud.PubSubLite.V1.Cursor headCursor_;
    /// <summary>
    /// The head cursor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.PubSubLite.V1.Cursor HeadCursor {
      get { return headCursor_; }
      set {
        headCursor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeHeadCursorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeHeadCursorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HeadCursor, other.HeadCursor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (headCursor_ != null) hash ^= HeadCursor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (headCursor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HeadCursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (headCursor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HeadCursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (headCursor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeadCursor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeHeadCursorResponse other) {
      if (other == null) {
        return;
      }
      if (other.headCursor_ != null) {
        if (headCursor_ == null) {
          HeadCursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
        }
        HeadCursor.MergeFrom(other.HeadCursor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (headCursor_ == null) {
              HeadCursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(HeadCursor);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (headCursor_ == null) {
              HeadCursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(HeadCursor);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Compute the corresponding cursor for a publish or event time in a topic
  /// partition.
  /// </summary>
  public sealed partial class ComputeTimeCursorRequest : pb::IMessage<ComputeTimeCursorRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeTimeCursorRequest> _parser = new pb::MessageParser<ComputeTimeCursorRequest>(() => new ComputeTimeCursorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeTimeCursorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.TopicStatsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeTimeCursorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeTimeCursorRequest(ComputeTimeCursorRequest other) : this() {
      topic_ = other.topic_;
      partition_ = other.partition_;
      target_ = other.target_ != null ? other.target_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeTimeCursorRequest Clone() {
      return new ComputeTimeCursorRequest(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 1;
    private string topic_ = "";
    /// <summary>
    /// Required. The topic for which we should compute the cursor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partition" field.</summary>
    public const int PartitionFieldNumber = 2;
    private long partition_;
    /// <summary>
    /// Required. The partition for which we should compute the cursor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Partition {
      get { return partition_; }
      set {
        partition_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 3;
    private global::Google.Cloud.PubSubLite.V1.TimeTarget target_;
    /// <summary>
    /// Required. The target publish or event time. Specifying a future time will return an
    /// unset cursor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.PubSubLite.V1.TimeTarget Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeTimeCursorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeTimeCursorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      if (Partition != other.Partition) return false;
      if (!object.Equals(Target, other.Target)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (Partition != 0L) hash ^= Partition.GetHashCode();
      if (target_ != null) hash ^= Target.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (Partition != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Partition);
      }
      if (target_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Topic);
      }
      if (Partition != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Partition);
      }
      if (target_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (Partition != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Partition);
      }
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeTimeCursorRequest other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.Partition != 0L) {
        Partition = other.Partition;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::Google.Cloud.PubSubLite.V1.TimeTarget();
        }
        Target.MergeFrom(other.Target);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 16: {
            Partition = input.ReadInt64();
            break;
          }
          case 26: {
            if (target_ == null) {
              Target = new global::Google.Cloud.PubSubLite.V1.TimeTarget();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Topic = input.ReadString();
            break;
          }
          case 16: {
            Partition = input.ReadInt64();
            break;
          }
          case 26: {
            if (target_ == null) {
              Target = new global::Google.Cloud.PubSubLite.V1.TimeTarget();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response containing the cursor corresponding to a publish or event time in a
  /// topic partition.
  /// </summary>
  public sealed partial class ComputeTimeCursorResponse : pb::IMessage<ComputeTimeCursorResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeTimeCursorResponse> _parser = new pb::MessageParser<ComputeTimeCursorResponse>(() => new ComputeTimeCursorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeTimeCursorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.PubSubLite.V1.TopicStatsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeTimeCursorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeTimeCursorResponse(ComputeTimeCursorResponse other) : this() {
      cursor_ = other.cursor_ != null ? other.cursor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeTimeCursorResponse Clone() {
      return new ComputeTimeCursorResponse(this);
    }

    /// <summary>Field number for the "cursor" field.</summary>
    public const int CursorFieldNumber = 1;
    private global::Google.Cloud.PubSubLite.V1.Cursor cursor_;
    /// <summary>
    /// If present, the cursor references the first message with time greater than
    /// or equal to the specified target time. If such a message cannot be found,
    /// the cursor will be unset (i.e. `cursor` is not present).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.PubSubLite.V1.Cursor Cursor {
      get { return cursor_; }
      set {
        cursor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeTimeCursorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeTimeCursorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Cursor, other.Cursor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cursor_ != null) hash ^= Cursor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cursor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cursor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cursor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cursor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cursor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeTimeCursorResponse other) {
      if (other == null) {
        return;
      }
      if (other.cursor_ != null) {
        if (cursor_ == null) {
          Cursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
        }
        Cursor.MergeFrom(other.Cursor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cursor_ == null) {
              Cursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(Cursor);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cursor_ == null) {
              Cursor = new global::Google.Cloud.PubSubLite.V1.Cursor();
            }
            input.ReadMessage(Cursor);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
