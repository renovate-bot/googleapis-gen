# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/cloud/pubsublite/v1/subscriber.proto for package 'Google.Cloud.PubSubLite.V1'
# Original file comments:
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/cloud/pubsublite/v1/subscriber_pb'

module Google
  module Cloud
    module PubSubLite
      module V1
        module SubscriberService
          # The service that a subscriber client application uses to receive messages
          # from subscriptions.
          class Service

            include ::GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'google.cloud.pubsublite.v1.SubscriberService'

            # Establishes a stream with the server for receiving messages.
            rpc :Subscribe, stream(::Google::Cloud::PubSubLite::V1::SubscribeRequest), stream(::Google::Cloud::PubSubLite::V1::SubscribeResponse)
          end

          Stub = Service.rpc_stub_class
        end
        module PartitionAssignmentService
          # The service that a subscriber client application uses to determine which
          # partitions it should connect to.
          class Service

            include ::GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'google.cloud.pubsublite.v1.PartitionAssignmentService'

            # Assign partitions for this client to handle for the specified subscription.
            #
            # The client must send an InitialPartitionAssignmentRequest first.
            # The server will then send at most one unacknowledged PartitionAssignment
            # outstanding on the stream at a time.
            # The client should send a PartitionAssignmentAck after updating the
            # partitions it is connected to to reflect the new assignment.
            rpc :AssignPartitions, stream(::Google::Cloud::PubSubLite::V1::PartitionAssignmentRequest), stream(::Google::Cloud::PubSubLite::V1::PartitionAssignment)
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
