// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/automl/v1beta1/tables.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Automl.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/automl/v1beta1/tables.proto</summary>
  public static partial class TablesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/automl/v1beta1/tables.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TablesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihnb29nbGUvY2xvdWQvYXV0b21sL3YxYmV0YTEvdGFibGVzLnByb3RvEhtn",
            "b29nbGUuY2xvdWQuYXV0b21sLnYxYmV0YTEaMGdvb2dsZS9jbG91ZC9hdXRv",
            "bWwvdjFiZXRhMS9jbGFzc2lmaWNhdGlvbi5wcm90bxotZ29vZ2xlL2Nsb3Vk",
            "L2F1dG9tbC92MWJldGExL2NvbHVtbl9zcGVjLnByb3RvGixnb29nbGUvY2xv",
            "dWQvYXV0b21sL3YxYmV0YTEvZGF0YV9pdGVtcy5wcm90bxosZ29vZ2xlL2Ns",
            "b3VkL2F1dG9tbC92MWJldGExL2RhdGFfc3RhdHMucHJvdG8aKGdvb2dsZS9j",
            "bG91ZC9hdXRvbWwvdjFiZXRhMS9yYW5nZXMucHJvdG8aLGdvb2dsZS9jbG91",
            "ZC9hdXRvbWwvdjFiZXRhMS9yZWdyZXNzaW9uLnByb3RvGipnb29nbGUvY2xv",
            "dWQvYXV0b21sL3YxYmV0YTEvdGVtcG9yYWwucHJvdG8aHGdvb2dsZS9wcm90",
            "b2J1Zi9zdHJ1Y3QucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAu",
            "cHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8isAMKFVRhYmxl",
            "c0RhdGFzZXRNZXRhZGF0YRIdChVwcmltYXJ5X3RhYmxlX3NwZWNfaWQYASAB",
            "KAkSHQoVdGFyZ2V0X2NvbHVtbl9zcGVjX2lkGAIgASgJEh0KFXdlaWdodF9j",
            "b2x1bW5fc3BlY19pZBgDIAEoCRIdChVtbF91c2VfY29sdW1uX3NwZWNfaWQY",
            "BCABKAkSdAoadGFyZ2V0X2NvbHVtbl9jb3JyZWxhdGlvbnMYBiADKAsyUC5n",
            "b29nbGUuY2xvdWQuYXV0b21sLnYxYmV0YTEuVGFibGVzRGF0YXNldE1ldGFk",
            "YXRhLlRhcmdldENvbHVtbkNvcnJlbGF0aW9uc0VudHJ5EjUKEXN0YXRzX3Vw",
            "ZGF0ZV90aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBpu",
            "Ch1UYXJnZXRDb2x1bW5Db3JyZWxhdGlvbnNFbnRyeRILCgNrZXkYASABKAkS",
            "PAoFdmFsdWUYAiABKAsyLS5nb29nbGUuY2xvdWQuYXV0b21sLnYxYmV0YTEu",
            "Q29ycmVsYXRpb25TdGF0czoCOAEilgQKE1RhYmxlc01vZGVsTWV0YWRhdGES",
            "LQojb3B0aW1pemF0aW9uX29iamVjdGl2ZV9yZWNhbGxfdmFsdWUYESABKAJI",
            "ABIwCiZvcHRpbWl6YXRpb25fb2JqZWN0aXZlX3ByZWNpc2lvbl92YWx1ZRgS",
            "IAEoAkgAEkMKEnRhcmdldF9jb2x1bW5fc3BlYxgCIAEoCzInLmdvb2dsZS5j",
            "bG91ZC5hdXRvbWwudjFiZXRhMS5Db2x1bW5TcGVjEksKGmlucHV0X2ZlYXR1",
            "cmVfY29sdW1uX3NwZWNzGAMgAygLMicuZ29vZ2xlLmNsb3VkLmF1dG9tbC52",
            "MWJldGExLkNvbHVtblNwZWMSHgoWb3B0aW1pemF0aW9uX29iamVjdGl2ZRgE",
            "IAEoCRJUChh0YWJsZXNfbW9kZWxfY29sdW1uX2luZm8YBSADKAsyMi5nb29n",
            "bGUuY2xvdWQuYXV0b21sLnYxYmV0YTEuVGFibGVzTW9kZWxDb2x1bW5JbmZv",
            "EiUKHXRyYWluX2J1ZGdldF9taWxsaV9ub2RlX2hvdXJzGAYgASgDEiMKG3Ry",
            "YWluX2Nvc3RfbWlsbGlfbm9kZV9ob3VycxgHIAEoAxIeChZkaXNhYmxlX2Vh",
            "cmx5X3N0b3BwaW5nGAwgASgIQioKKGFkZGl0aW9uYWxfb3B0aW1pemF0aW9u",
            "X29iamVjdGl2ZV9jb25maWci/QEKEFRhYmxlc0Fubm90YXRpb24SDQoFc2Nv",
            "cmUYASABKAISRQoTcHJlZGljdGlvbl9pbnRlcnZhbBgEIAEoCzIoLmdvb2ds",
            "ZS5jbG91ZC5hdXRvbWwudjFiZXRhMS5Eb3VibGVSYW5nZRIlCgV2YWx1ZRgC",
            "IAEoCzIWLmdvb2dsZS5wcm90b2J1Zi5WYWx1ZRJUChh0YWJsZXNfbW9kZWxf",
            "Y29sdW1uX2luZm8YAyADKAsyMi5nb29nbGUuY2xvdWQuYXV0b21sLnYxYmV0",
            "YTEuVGFibGVzTW9kZWxDb2x1bW5JbmZvEhYKDmJhc2VsaW5lX3Njb3JlGAUg",
            "ASgCImoKFVRhYmxlc01vZGVsQ29sdW1uSW5mbxIYChBjb2x1bW5fc3BlY19u",
            "YW1lGAEgASgJEhsKE2NvbHVtbl9kaXNwbGF5X25hbWUYAiABKAkSGgoSZmVh",
            "dHVyZV9pbXBvcnRhbmNlGAMgASgCQqUBCh9jb20uZ29vZ2xlLmNsb3VkLmF1",
            "dG9tbC52MWJldGExUAFaQWdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dv",
            "b2dsZWFwaXMvY2xvdWQvYXV0b21sL3YxYmV0YTE7YXV0b21sygIbR29vZ2xl",
            "XENsb3VkXEF1dG9NbFxWMWJldGEx6gIeR29vZ2xlOjpDbG91ZDo6QXV0b01M",
            "OjpWMWJldGExYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Cloud.Automl.V1Beta1.ClassificationReflection.Descriptor, global::Google.Cloud.Automl.V1Beta1.ColumnSpecReflection.Descriptor, global::Google.Cloud.Automl.V1Beta1.DataItemsReflection.Descriptor, global::Google.Cloud.Automl.V1Beta1.DataStatsReflection.Descriptor, global::Google.Cloud.Automl.V1Beta1.RangesReflection.Descriptor, global::Google.Cloud.Automl.V1Beta1.RegressionReflection.Descriptor, global::Google.Cloud.Automl.V1Beta1.TemporalReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Automl.V1Beta1.TablesDatasetMetadata), global::Google.Cloud.Automl.V1Beta1.TablesDatasetMetadata.Parser, new[]{ "PrimaryTableSpecId", "TargetColumnSpecId", "WeightColumnSpecId", "MlUseColumnSpecId", "TargetColumnCorrelations", "StatsUpdateTime" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Automl.V1Beta1.TablesModelMetadata), global::Google.Cloud.Automl.V1Beta1.TablesModelMetadata.Parser, new[]{ "OptimizationObjectiveRecallValue", "OptimizationObjectivePrecisionValue", "TargetColumnSpec", "InputFeatureColumnSpecs", "OptimizationObjective", "TablesModelColumnInfo", "TrainBudgetMilliNodeHours", "TrainCostMilliNodeHours", "DisableEarlyStopping" }, new[]{ "AdditionalOptimizationObjectiveConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Automl.V1Beta1.TablesAnnotation), global::Google.Cloud.Automl.V1Beta1.TablesAnnotation.Parser, new[]{ "Score", "PredictionInterval", "Value", "TablesModelColumnInfo", "BaselineScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Automl.V1Beta1.TablesModelColumnInfo), global::Google.Cloud.Automl.V1Beta1.TablesModelColumnInfo.Parser, new[]{ "ColumnSpecName", "ColumnDisplayName", "FeatureImportance" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Metadata for a dataset used for AutoML Tables.
  /// </summary>
  public sealed partial class TablesDatasetMetadata : pb::IMessage<TablesDatasetMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TablesDatasetMetadata> _parser = new pb::MessageParser<TablesDatasetMetadata>(() => new TablesDatasetMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TablesDatasetMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Automl.V1Beta1.TablesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablesDatasetMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablesDatasetMetadata(TablesDatasetMetadata other) : this() {
      primaryTableSpecId_ = other.primaryTableSpecId_;
      targetColumnSpecId_ = other.targetColumnSpecId_;
      weightColumnSpecId_ = other.weightColumnSpecId_;
      mlUseColumnSpecId_ = other.mlUseColumnSpecId_;
      targetColumnCorrelations_ = other.targetColumnCorrelations_.Clone();
      statsUpdateTime_ = other.statsUpdateTime_ != null ? other.statsUpdateTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablesDatasetMetadata Clone() {
      return new TablesDatasetMetadata(this);
    }

    /// <summary>Field number for the "primary_table_spec_id" field.</summary>
    public const int PrimaryTableSpecIdFieldNumber = 1;
    private string primaryTableSpecId_ = "";
    /// <summary>
    /// Output only. The table_spec_id of the primary table of this dataset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrimaryTableSpecId {
      get { return primaryTableSpecId_; }
      set {
        primaryTableSpecId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_column_spec_id" field.</summary>
    public const int TargetColumnSpecIdFieldNumber = 2;
    private string targetColumnSpecId_ = "";
    /// <summary>
    /// column_spec_id of the primary table's column that should be used as the
    /// training &amp; prediction target.
    /// This column must be non-nullable and have one of following data types
    /// (otherwise model creation will error):
    ///
    /// * CATEGORY
    ///
    /// * FLOAT64
    ///
    /// If the type is CATEGORY , only up to
    /// 100 unique values may exist in that column across all rows.
    ///
    /// NOTE: Updates of this field will instantly affect any other users
    /// concurrently working with the dataset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetColumnSpecId {
      get { return targetColumnSpecId_; }
      set {
        targetColumnSpecId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "weight_column_spec_id" field.</summary>
    public const int WeightColumnSpecIdFieldNumber = 3;
    private string weightColumnSpecId_ = "";
    /// <summary>
    /// column_spec_id of the primary table's column that should be used as the
    /// weight column, i.e. the higher the value the more important the row will be
    /// during model training.
    /// Required type: FLOAT64.
    /// Allowed values: 0 to 10000, inclusive on both ends; 0 means the row is
    ///                 ignored for training.
    /// If not set all rows are assumed to have equal weight of 1.
    /// NOTE: Updates of this field will instantly affect any other users
    /// concurrently working with the dataset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WeightColumnSpecId {
      get { return weightColumnSpecId_; }
      set {
        weightColumnSpecId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ml_use_column_spec_id" field.</summary>
    public const int MlUseColumnSpecIdFieldNumber = 4;
    private string mlUseColumnSpecId_ = "";
    /// <summary>
    /// column_spec_id of the primary table column which specifies a possible ML
    /// use of the row, i.e. the column will be used to split the rows into TRAIN,
    /// VALIDATE and TEST sets.
    /// Required type: STRING.
    /// This column, if set, must either have all of `TRAIN`, `VALIDATE`, `TEST`
    /// among its values, or only have `TEST`, `UNASSIGNED` values. In the latter
    /// case the rows with `UNASSIGNED` value will be assigned by AutoML. Note
    /// that if a given ml use distribution makes it impossible to create a "good"
    /// model, that call will error describing the issue.
    /// If both this column_spec_id and primary table's time_column_spec_id are not
    /// set, then all rows are treated as `UNASSIGNED`.
    /// NOTE: Updates of this field will instantly affect any other users
    /// concurrently working with the dataset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MlUseColumnSpecId {
      get { return mlUseColumnSpecId_; }
      set {
        mlUseColumnSpecId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_column_correlations" field.</summary>
    public const int TargetColumnCorrelationsFieldNumber = 6;
    private static readonly pbc::MapField<string, global::Google.Cloud.Automl.V1Beta1.CorrelationStats>.Codec _map_targetColumnCorrelations_codec
        = new pbc::MapField<string, global::Google.Cloud.Automl.V1Beta1.CorrelationStats>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Automl.V1Beta1.CorrelationStats.Parser), 50);
    private readonly pbc::MapField<string, global::Google.Cloud.Automl.V1Beta1.CorrelationStats> targetColumnCorrelations_ = new pbc::MapField<string, global::Google.Cloud.Automl.V1Beta1.CorrelationStats>();
    /// <summary>
    /// Output only. Correlations between
    ///
    /// [TablesDatasetMetadata.target_column_spec_id][google.cloud.automl.v1beta1.TablesDatasetMetadata.target_column_spec_id],
    /// and other columns of the
    ///
    /// [TablesDatasetMetadataprimary_table][google.cloud.automl.v1beta1.TablesDatasetMetadata.primary_table_spec_id].
    /// Only set if the target column is set. Mapping from other column spec id to
    /// its CorrelationStats with the target column.
    /// This field may be stale, see the stats_update_time field for
    /// for the timestamp at which these stats were last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.Automl.V1Beta1.CorrelationStats> TargetColumnCorrelations {
      get { return targetColumnCorrelations_; }
    }

    /// <summary>Field number for the "stats_update_time" field.</summary>
    public const int StatsUpdateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp statsUpdateTime_;
    /// <summary>
    /// Output only. The most recent timestamp when target_column_correlations
    /// field and all descendant ColumnSpec.data_stats and
    /// ColumnSpec.top_correlated_columns fields were last (re-)generated. Any
    /// changes that happened to the dataset afterwards are not reflected in these
    /// fields values. The regeneration happens in the background on a best effort
    /// basis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StatsUpdateTime {
      get { return statsUpdateTime_; }
      set {
        statsUpdateTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TablesDatasetMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TablesDatasetMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrimaryTableSpecId != other.PrimaryTableSpecId) return false;
      if (TargetColumnSpecId != other.TargetColumnSpecId) return false;
      if (WeightColumnSpecId != other.WeightColumnSpecId) return false;
      if (MlUseColumnSpecId != other.MlUseColumnSpecId) return false;
      if (!TargetColumnCorrelations.Equals(other.TargetColumnCorrelations)) return false;
      if (!object.Equals(StatsUpdateTime, other.StatsUpdateTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PrimaryTableSpecId.Length != 0) hash ^= PrimaryTableSpecId.GetHashCode();
      if (TargetColumnSpecId.Length != 0) hash ^= TargetColumnSpecId.GetHashCode();
      if (WeightColumnSpecId.Length != 0) hash ^= WeightColumnSpecId.GetHashCode();
      if (MlUseColumnSpecId.Length != 0) hash ^= MlUseColumnSpecId.GetHashCode();
      hash ^= TargetColumnCorrelations.GetHashCode();
      if (statsUpdateTime_ != null) hash ^= StatsUpdateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PrimaryTableSpecId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PrimaryTableSpecId);
      }
      if (TargetColumnSpecId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetColumnSpecId);
      }
      if (WeightColumnSpecId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WeightColumnSpecId);
      }
      if (MlUseColumnSpecId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MlUseColumnSpecId);
      }
      targetColumnCorrelations_.WriteTo(output, _map_targetColumnCorrelations_codec);
      if (statsUpdateTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StatsUpdateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PrimaryTableSpecId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PrimaryTableSpecId);
      }
      if (TargetColumnSpecId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetColumnSpecId);
      }
      if (WeightColumnSpecId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WeightColumnSpecId);
      }
      if (MlUseColumnSpecId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MlUseColumnSpecId);
      }
      targetColumnCorrelations_.WriteTo(ref output, _map_targetColumnCorrelations_codec);
      if (statsUpdateTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StatsUpdateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PrimaryTableSpecId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrimaryTableSpecId);
      }
      if (TargetColumnSpecId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetColumnSpecId);
      }
      if (WeightColumnSpecId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WeightColumnSpecId);
      }
      if (MlUseColumnSpecId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MlUseColumnSpecId);
      }
      size += targetColumnCorrelations_.CalculateSize(_map_targetColumnCorrelations_codec);
      if (statsUpdateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatsUpdateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TablesDatasetMetadata other) {
      if (other == null) {
        return;
      }
      if (other.PrimaryTableSpecId.Length != 0) {
        PrimaryTableSpecId = other.PrimaryTableSpecId;
      }
      if (other.TargetColumnSpecId.Length != 0) {
        TargetColumnSpecId = other.TargetColumnSpecId;
      }
      if (other.WeightColumnSpecId.Length != 0) {
        WeightColumnSpecId = other.WeightColumnSpecId;
      }
      if (other.MlUseColumnSpecId.Length != 0) {
        MlUseColumnSpecId = other.MlUseColumnSpecId;
      }
      targetColumnCorrelations_.Add(other.targetColumnCorrelations_);
      if (other.statsUpdateTime_ != null) {
        if (statsUpdateTime_ == null) {
          StatsUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StatsUpdateTime.MergeFrom(other.StatsUpdateTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PrimaryTableSpecId = input.ReadString();
            break;
          }
          case 18: {
            TargetColumnSpecId = input.ReadString();
            break;
          }
          case 26: {
            WeightColumnSpecId = input.ReadString();
            break;
          }
          case 34: {
            MlUseColumnSpecId = input.ReadString();
            break;
          }
          case 50: {
            targetColumnCorrelations_.AddEntriesFrom(input, _map_targetColumnCorrelations_codec);
            break;
          }
          case 58: {
            if (statsUpdateTime_ == null) {
              StatsUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StatsUpdateTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PrimaryTableSpecId = input.ReadString();
            break;
          }
          case 18: {
            TargetColumnSpecId = input.ReadString();
            break;
          }
          case 26: {
            WeightColumnSpecId = input.ReadString();
            break;
          }
          case 34: {
            MlUseColumnSpecId = input.ReadString();
            break;
          }
          case 50: {
            targetColumnCorrelations_.AddEntriesFrom(ref input, _map_targetColumnCorrelations_codec);
            break;
          }
          case 58: {
            if (statsUpdateTime_ == null) {
              StatsUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StatsUpdateTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Model metadata specific to AutoML Tables.
  /// </summary>
  public sealed partial class TablesModelMetadata : pb::IMessage<TablesModelMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TablesModelMetadata> _parser = new pb::MessageParser<TablesModelMetadata>(() => new TablesModelMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TablesModelMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Automl.V1Beta1.TablesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablesModelMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablesModelMetadata(TablesModelMetadata other) : this() {
      targetColumnSpec_ = other.targetColumnSpec_ != null ? other.targetColumnSpec_.Clone() : null;
      inputFeatureColumnSpecs_ = other.inputFeatureColumnSpecs_.Clone();
      optimizationObjective_ = other.optimizationObjective_;
      tablesModelColumnInfo_ = other.tablesModelColumnInfo_.Clone();
      trainBudgetMilliNodeHours_ = other.trainBudgetMilliNodeHours_;
      trainCostMilliNodeHours_ = other.trainCostMilliNodeHours_;
      disableEarlyStopping_ = other.disableEarlyStopping_;
      switch (other.AdditionalOptimizationObjectiveConfigCase) {
        case AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectiveRecallValue:
          OptimizationObjectiveRecallValue = other.OptimizationObjectiveRecallValue;
          break;
        case AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectivePrecisionValue:
          OptimizationObjectivePrecisionValue = other.OptimizationObjectivePrecisionValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablesModelMetadata Clone() {
      return new TablesModelMetadata(this);
    }

    /// <summary>Field number for the "optimization_objective_recall_value" field.</summary>
    public const int OptimizationObjectiveRecallValueFieldNumber = 17;
    /// <summary>
    /// Required when optimization_objective is "MAXIMIZE_PRECISION_AT_RECALL".
    /// Must be between 0 and 1, inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float OptimizationObjectiveRecallValue {
      get { return additionalOptimizationObjectiveConfigCase_ == AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectiveRecallValue ? (float) additionalOptimizationObjectiveConfig_ : 0F; }
      set {
        additionalOptimizationObjectiveConfig_ = value;
        additionalOptimizationObjectiveConfigCase_ = AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectiveRecallValue;
      }
    }

    /// <summary>Field number for the "optimization_objective_precision_value" field.</summary>
    public const int OptimizationObjectivePrecisionValueFieldNumber = 18;
    /// <summary>
    /// Required when optimization_objective is "MAXIMIZE_RECALL_AT_PRECISION".
    /// Must be between 0 and 1, inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float OptimizationObjectivePrecisionValue {
      get { return additionalOptimizationObjectiveConfigCase_ == AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectivePrecisionValue ? (float) additionalOptimizationObjectiveConfig_ : 0F; }
      set {
        additionalOptimizationObjectiveConfig_ = value;
        additionalOptimizationObjectiveConfigCase_ = AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectivePrecisionValue;
      }
    }

    /// <summary>Field number for the "target_column_spec" field.</summary>
    public const int TargetColumnSpecFieldNumber = 2;
    private global::Google.Cloud.Automl.V1Beta1.ColumnSpec targetColumnSpec_;
    /// <summary>
    /// Column spec of the dataset's primary table's column the model is
    /// predicting. Snapshotted when model creation started.
    /// Only 3 fields are used:
    /// name - May be set on CreateModel, if it's not then the ColumnSpec
    ///        corresponding to the current target_column_spec_id of the dataset
    ///        the model is trained from is used.
    ///        If neither is set, CreateModel will error.
    /// display_name - Output only.
    /// data_type - Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Automl.V1Beta1.ColumnSpec TargetColumnSpec {
      get { return targetColumnSpec_; }
      set {
        targetColumnSpec_ = value;
      }
    }

    /// <summary>Field number for the "input_feature_column_specs" field.</summary>
    public const int InputFeatureColumnSpecsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Automl.V1Beta1.ColumnSpec> _repeated_inputFeatureColumnSpecs_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Automl.V1Beta1.ColumnSpec.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Automl.V1Beta1.ColumnSpec> inputFeatureColumnSpecs_ = new pbc::RepeatedField<global::Google.Cloud.Automl.V1Beta1.ColumnSpec>();
    /// <summary>
    /// Column specs of the dataset's primary table's columns, on which
    /// the model is trained and which are used as the input for predictions.
    /// The
    ///
    /// [target_column][google.cloud.automl.v1beta1.TablesModelMetadata.target_column_spec]
    /// as well as, according to dataset's state upon model creation,
    ///
    /// [weight_column][google.cloud.automl.v1beta1.TablesDatasetMetadata.weight_column_spec_id],
    /// and
    ///
    /// [ml_use_column][google.cloud.automl.v1beta1.TablesDatasetMetadata.ml_use_column_spec_id]
    /// must never be included here.
    ///
    /// Only 3 fields are used:
    ///
    /// * name - May be set on CreateModel, if set only the columns specified are
    ///   used, otherwise all primary table's columns (except the ones listed
    ///   above) are used for the training and prediction input.
    ///
    /// * display_name - Output only.
    ///
    /// * data_type - Output only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Automl.V1Beta1.ColumnSpec> InputFeatureColumnSpecs {
      get { return inputFeatureColumnSpecs_; }
    }

    /// <summary>Field number for the "optimization_objective" field.</summary>
    public const int OptimizationObjectiveFieldNumber = 4;
    private string optimizationObjective_ = "";
    /// <summary>
    /// Objective function the model is optimizing towards. The training process
    /// creates a model that maximizes/minimizes the value of the objective
    /// function over the validation set.
    ///
    /// The supported optimization objectives depend on the prediction type.
    /// If the field is not set, a default objective function is used.
    ///
    /// CLASSIFICATION_BINARY:
    ///   "MAXIMIZE_AU_ROC" (default) - Maximize the area under the receiver
    ///                                 operating characteristic (ROC) curve.
    ///   "MINIMIZE_LOG_LOSS" - Minimize log loss.
    ///   "MAXIMIZE_AU_PRC" - Maximize the area under the precision-recall curve.
    ///   "MAXIMIZE_PRECISION_AT_RECALL" - Maximize precision for a specified
    ///                                   recall value.
    ///   "MAXIMIZE_RECALL_AT_PRECISION" - Maximize recall for a specified
    ///                                    precision value.
    ///
    /// CLASSIFICATION_MULTI_CLASS :
    ///   "MINIMIZE_LOG_LOSS" (default) - Minimize log loss.
    ///
    /// REGRESSION:
    ///   "MINIMIZE_RMSE" (default) - Minimize root-mean-squared error (RMSE).
    ///   "MINIMIZE_MAE" - Minimize mean-absolute error (MAE).
    ///   "MINIMIZE_RMSLE" - Minimize root-mean-squared log error (RMSLE).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OptimizationObjective {
      get { return optimizationObjective_; }
      set {
        optimizationObjective_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tables_model_column_info" field.</summary>
    public const int TablesModelColumnInfoFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.Automl.V1Beta1.TablesModelColumnInfo> _repeated_tablesModelColumnInfo_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Automl.V1Beta1.TablesModelColumnInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Automl.V1Beta1.TablesModelColumnInfo> tablesModelColumnInfo_ = new pbc::RepeatedField<global::Google.Cloud.Automl.V1Beta1.TablesModelColumnInfo>();
    /// <summary>
    /// Output only. Auxiliary information for each of the
    /// input_feature_column_specs with respect to this particular model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Automl.V1Beta1.TablesModelColumnInfo> TablesModelColumnInfo {
      get { return tablesModelColumnInfo_; }
    }

    /// <summary>Field number for the "train_budget_milli_node_hours" field.</summary>
    public const int TrainBudgetMilliNodeHoursFieldNumber = 6;
    private long trainBudgetMilliNodeHours_;
    /// <summary>
    /// Required. The train budget of creating this model, expressed in milli node
    /// hours i.e. 1,000 value in this field means 1 node hour.
    ///
    /// The training cost of the model will not exceed this budget. The final cost
    /// will be attempted to be close to the budget, though may end up being (even)
    /// noticeably smaller - at the backend's discretion. This especially may
    /// happen when further model training ceases to provide any improvements.
    ///
    /// If the budget is set to a value known to be insufficient to train a
    /// model for the given dataset, the training won't be attempted and
    /// will error.
    ///
    /// The train budget must be between 1,000 and 72,000 milli node hours,
    /// inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TrainBudgetMilliNodeHours {
      get { return trainBudgetMilliNodeHours_; }
      set {
        trainBudgetMilliNodeHours_ = value;
      }
    }

    /// <summary>Field number for the "train_cost_milli_node_hours" field.</summary>
    public const int TrainCostMilliNodeHoursFieldNumber = 7;
    private long trainCostMilliNodeHours_;
    /// <summary>
    /// Output only. The actual training cost of the model, expressed in milli
    /// node hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed
    /// to not exceed the train budget.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TrainCostMilliNodeHours {
      get { return trainCostMilliNodeHours_; }
      set {
        trainCostMilliNodeHours_ = value;
      }
    }

    /// <summary>Field number for the "disable_early_stopping" field.</summary>
    public const int DisableEarlyStoppingFieldNumber = 12;
    private bool disableEarlyStopping_;
    /// <summary>
    /// Use the entire training budget. This disables the early stopping feature.
    /// By default, the early stopping feature is enabled, which means that AutoML
    /// Tables might stop training before the entire training budget has been used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DisableEarlyStopping {
      get { return disableEarlyStopping_; }
      set {
        disableEarlyStopping_ = value;
      }
    }

    private object additionalOptimizationObjectiveConfig_;
    /// <summary>Enum of possible cases for the "additional_optimization_objective_config" oneof.</summary>
    public enum AdditionalOptimizationObjectiveConfigOneofCase {
      None = 0,
      OptimizationObjectiveRecallValue = 17,
      OptimizationObjectivePrecisionValue = 18,
    }
    private AdditionalOptimizationObjectiveConfigOneofCase additionalOptimizationObjectiveConfigCase_ = AdditionalOptimizationObjectiveConfigOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdditionalOptimizationObjectiveConfigOneofCase AdditionalOptimizationObjectiveConfigCase {
      get { return additionalOptimizationObjectiveConfigCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAdditionalOptimizationObjectiveConfig() {
      additionalOptimizationObjectiveConfigCase_ = AdditionalOptimizationObjectiveConfigOneofCase.None;
      additionalOptimizationObjectiveConfig_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TablesModelMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TablesModelMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OptimizationObjectiveRecallValue, other.OptimizationObjectiveRecallValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OptimizationObjectivePrecisionValue, other.OptimizationObjectivePrecisionValue)) return false;
      if (!object.Equals(TargetColumnSpec, other.TargetColumnSpec)) return false;
      if(!inputFeatureColumnSpecs_.Equals(other.inputFeatureColumnSpecs_)) return false;
      if (OptimizationObjective != other.OptimizationObjective) return false;
      if(!tablesModelColumnInfo_.Equals(other.tablesModelColumnInfo_)) return false;
      if (TrainBudgetMilliNodeHours != other.TrainBudgetMilliNodeHours) return false;
      if (TrainCostMilliNodeHours != other.TrainCostMilliNodeHours) return false;
      if (DisableEarlyStopping != other.DisableEarlyStopping) return false;
      if (AdditionalOptimizationObjectiveConfigCase != other.AdditionalOptimizationObjectiveConfigCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (additionalOptimizationObjectiveConfigCase_ == AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectiveRecallValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OptimizationObjectiveRecallValue);
      if (additionalOptimizationObjectiveConfigCase_ == AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectivePrecisionValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OptimizationObjectivePrecisionValue);
      if (targetColumnSpec_ != null) hash ^= TargetColumnSpec.GetHashCode();
      hash ^= inputFeatureColumnSpecs_.GetHashCode();
      if (OptimizationObjective.Length != 0) hash ^= OptimizationObjective.GetHashCode();
      hash ^= tablesModelColumnInfo_.GetHashCode();
      if (TrainBudgetMilliNodeHours != 0L) hash ^= TrainBudgetMilliNodeHours.GetHashCode();
      if (TrainCostMilliNodeHours != 0L) hash ^= TrainCostMilliNodeHours.GetHashCode();
      if (DisableEarlyStopping != false) hash ^= DisableEarlyStopping.GetHashCode();
      hash ^= (int) additionalOptimizationObjectiveConfigCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (targetColumnSpec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetColumnSpec);
      }
      inputFeatureColumnSpecs_.WriteTo(output, _repeated_inputFeatureColumnSpecs_codec);
      if (OptimizationObjective.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OptimizationObjective);
      }
      tablesModelColumnInfo_.WriteTo(output, _repeated_tablesModelColumnInfo_codec);
      if (TrainBudgetMilliNodeHours != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TrainBudgetMilliNodeHours);
      }
      if (TrainCostMilliNodeHours != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TrainCostMilliNodeHours);
      }
      if (DisableEarlyStopping != false) {
        output.WriteRawTag(96);
        output.WriteBool(DisableEarlyStopping);
      }
      if (additionalOptimizationObjectiveConfigCase_ == AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectiveRecallValue) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(OptimizationObjectiveRecallValue);
      }
      if (additionalOptimizationObjectiveConfigCase_ == AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectivePrecisionValue) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(OptimizationObjectivePrecisionValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (targetColumnSpec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetColumnSpec);
      }
      inputFeatureColumnSpecs_.WriteTo(ref output, _repeated_inputFeatureColumnSpecs_codec);
      if (OptimizationObjective.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OptimizationObjective);
      }
      tablesModelColumnInfo_.WriteTo(ref output, _repeated_tablesModelColumnInfo_codec);
      if (TrainBudgetMilliNodeHours != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TrainBudgetMilliNodeHours);
      }
      if (TrainCostMilliNodeHours != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TrainCostMilliNodeHours);
      }
      if (DisableEarlyStopping != false) {
        output.WriteRawTag(96);
        output.WriteBool(DisableEarlyStopping);
      }
      if (additionalOptimizationObjectiveConfigCase_ == AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectiveRecallValue) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(OptimizationObjectiveRecallValue);
      }
      if (additionalOptimizationObjectiveConfigCase_ == AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectivePrecisionValue) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(OptimizationObjectivePrecisionValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (additionalOptimizationObjectiveConfigCase_ == AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectiveRecallValue) {
        size += 2 + 4;
      }
      if (additionalOptimizationObjectiveConfigCase_ == AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectivePrecisionValue) {
        size += 2 + 4;
      }
      if (targetColumnSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetColumnSpec);
      }
      size += inputFeatureColumnSpecs_.CalculateSize(_repeated_inputFeatureColumnSpecs_codec);
      if (OptimizationObjective.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptimizationObjective);
      }
      size += tablesModelColumnInfo_.CalculateSize(_repeated_tablesModelColumnInfo_codec);
      if (TrainBudgetMilliNodeHours != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TrainBudgetMilliNodeHours);
      }
      if (TrainCostMilliNodeHours != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TrainCostMilliNodeHours);
      }
      if (DisableEarlyStopping != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TablesModelMetadata other) {
      if (other == null) {
        return;
      }
      if (other.targetColumnSpec_ != null) {
        if (targetColumnSpec_ == null) {
          TargetColumnSpec = new global::Google.Cloud.Automl.V1Beta1.ColumnSpec();
        }
        TargetColumnSpec.MergeFrom(other.TargetColumnSpec);
      }
      inputFeatureColumnSpecs_.Add(other.inputFeatureColumnSpecs_);
      if (other.OptimizationObjective.Length != 0) {
        OptimizationObjective = other.OptimizationObjective;
      }
      tablesModelColumnInfo_.Add(other.tablesModelColumnInfo_);
      if (other.TrainBudgetMilliNodeHours != 0L) {
        TrainBudgetMilliNodeHours = other.TrainBudgetMilliNodeHours;
      }
      if (other.TrainCostMilliNodeHours != 0L) {
        TrainCostMilliNodeHours = other.TrainCostMilliNodeHours;
      }
      if (other.DisableEarlyStopping != false) {
        DisableEarlyStopping = other.DisableEarlyStopping;
      }
      switch (other.AdditionalOptimizationObjectiveConfigCase) {
        case AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectiveRecallValue:
          OptimizationObjectiveRecallValue = other.OptimizationObjectiveRecallValue;
          break;
        case AdditionalOptimizationObjectiveConfigOneofCase.OptimizationObjectivePrecisionValue:
          OptimizationObjectivePrecisionValue = other.OptimizationObjectivePrecisionValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (targetColumnSpec_ == null) {
              TargetColumnSpec = new global::Google.Cloud.Automl.V1Beta1.ColumnSpec();
            }
            input.ReadMessage(TargetColumnSpec);
            break;
          }
          case 26: {
            inputFeatureColumnSpecs_.AddEntriesFrom(input, _repeated_inputFeatureColumnSpecs_codec);
            break;
          }
          case 34: {
            OptimizationObjective = input.ReadString();
            break;
          }
          case 42: {
            tablesModelColumnInfo_.AddEntriesFrom(input, _repeated_tablesModelColumnInfo_codec);
            break;
          }
          case 48: {
            TrainBudgetMilliNodeHours = input.ReadInt64();
            break;
          }
          case 56: {
            TrainCostMilliNodeHours = input.ReadInt64();
            break;
          }
          case 96: {
            DisableEarlyStopping = input.ReadBool();
            break;
          }
          case 141: {
            OptimizationObjectiveRecallValue = input.ReadFloat();
            break;
          }
          case 149: {
            OptimizationObjectivePrecisionValue = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (targetColumnSpec_ == null) {
              TargetColumnSpec = new global::Google.Cloud.Automl.V1Beta1.ColumnSpec();
            }
            input.ReadMessage(TargetColumnSpec);
            break;
          }
          case 26: {
            inputFeatureColumnSpecs_.AddEntriesFrom(ref input, _repeated_inputFeatureColumnSpecs_codec);
            break;
          }
          case 34: {
            OptimizationObjective = input.ReadString();
            break;
          }
          case 42: {
            tablesModelColumnInfo_.AddEntriesFrom(ref input, _repeated_tablesModelColumnInfo_codec);
            break;
          }
          case 48: {
            TrainBudgetMilliNodeHours = input.ReadInt64();
            break;
          }
          case 56: {
            TrainCostMilliNodeHours = input.ReadInt64();
            break;
          }
          case 96: {
            DisableEarlyStopping = input.ReadBool();
            break;
          }
          case 141: {
            OptimizationObjectiveRecallValue = input.ReadFloat();
            break;
          }
          case 149: {
            OptimizationObjectivePrecisionValue = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains annotation details specific to Tables.
  /// </summary>
  public sealed partial class TablesAnnotation : pb::IMessage<TablesAnnotation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TablesAnnotation> _parser = new pb::MessageParser<TablesAnnotation>(() => new TablesAnnotation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TablesAnnotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Automl.V1Beta1.TablesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablesAnnotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablesAnnotation(TablesAnnotation other) : this() {
      score_ = other.score_;
      predictionInterval_ = other.predictionInterval_ != null ? other.predictionInterval_.Clone() : null;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      tablesModelColumnInfo_ = other.tablesModelColumnInfo_.Clone();
      baselineScore_ = other.baselineScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablesAnnotation Clone() {
      return new TablesAnnotation(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private float score_;
    /// <summary>
    /// Output only. A confidence estimate between 0.0 and 1.0, inclusive. A higher
    /// value means greater confidence in the returned value.
    /// For
    ///
    /// [target_column_spec][google.cloud.automl.v1beta1.TablesModelMetadata.target_column_spec]
    /// of FLOAT64 data type the score is not populated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "prediction_interval" field.</summary>
    public const int PredictionIntervalFieldNumber = 4;
    private global::Google.Cloud.Automl.V1Beta1.DoubleRange predictionInterval_;
    /// <summary>
    /// Output only. Only populated when
    ///
    /// [target_column_spec][google.cloud.automl.v1beta1.TablesModelMetadata.target_column_spec]
    /// has FLOAT64 data type. An interval in which the exactly correct target
    /// value has 95% chance to be in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Automl.V1Beta1.DoubleRange PredictionInterval {
      get { return predictionInterval_; }
      set {
        predictionInterval_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Value value_;
    /// <summary>
    /// The predicted value of the row's
    ///
    /// [target_column][google.cloud.automl.v1beta1.TablesModelMetadata.target_column_spec].
    /// The value depends on the column's DataType:
    ///
    /// * CATEGORY - the predicted (with the above confidence `score`) CATEGORY
    ///   value.
    ///
    /// * FLOAT64 - the predicted (with above `prediction_interval`) FLOAT64 value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Value Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "tables_model_column_info" field.</summary>
    public const int TablesModelColumnInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Automl.V1Beta1.TablesModelColumnInfo> _repeated_tablesModelColumnInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Automl.V1Beta1.TablesModelColumnInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Automl.V1Beta1.TablesModelColumnInfo> tablesModelColumnInfo_ = new pbc::RepeatedField<global::Google.Cloud.Automl.V1Beta1.TablesModelColumnInfo>();
    /// <summary>
    /// Output only. Auxiliary information for each of the model's
    ///
    /// [input_feature_column_specs][google.cloud.automl.v1beta1.TablesModelMetadata.input_feature_column_specs]
    /// with respect to this particular prediction.
    /// If no other fields than
    ///
    /// [column_spec_name][google.cloud.automl.v1beta1.TablesModelColumnInfo.column_spec_name]
    /// and
    ///
    /// [column_display_name][google.cloud.automl.v1beta1.TablesModelColumnInfo.column_display_name]
    /// would be populated, then this whole field is not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Automl.V1Beta1.TablesModelColumnInfo> TablesModelColumnInfo {
      get { return tablesModelColumnInfo_; }
    }

    /// <summary>Field number for the "baseline_score" field.</summary>
    public const int BaselineScoreFieldNumber = 5;
    private float baselineScore_;
    /// <summary>
    /// Output only. Stores the prediction score for the baseline example, which
    /// is defined as the example with all values set to their baseline values.
    /// This is used as part of the Sampled Shapley explanation of the model's
    /// prediction. This field is populated only when feature importance is
    /// requested. For regression models, this holds the baseline prediction for
    /// the baseline example. For classification models, this holds the baseline
    /// prediction for the baseline example for the argmax class.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BaselineScore {
      get { return baselineScore_; }
      set {
        baselineScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TablesAnnotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TablesAnnotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Score, other.Score)) return false;
      if (!object.Equals(PredictionInterval, other.PredictionInterval)) return false;
      if (!object.Equals(Value, other.Value)) return false;
      if(!tablesModelColumnInfo_.Equals(other.tablesModelColumnInfo_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BaselineScore, other.BaselineScore)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Score);
      if (predictionInterval_ != null) hash ^= PredictionInterval.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      hash ^= tablesModelColumnInfo_.GetHashCode();
      if (BaselineScore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BaselineScore);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Score != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Score);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      tablesModelColumnInfo_.WriteTo(output, _repeated_tablesModelColumnInfo_codec);
      if (predictionInterval_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PredictionInterval);
      }
      if (BaselineScore != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(BaselineScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Score != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Score);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      tablesModelColumnInfo_.WriteTo(ref output, _repeated_tablesModelColumnInfo_codec);
      if (predictionInterval_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PredictionInterval);
      }
      if (BaselineScore != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(BaselineScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0F) {
        size += 1 + 4;
      }
      if (predictionInterval_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PredictionInterval);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      size += tablesModelColumnInfo_.CalculateSize(_repeated_tablesModelColumnInfo_codec);
      if (BaselineScore != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TablesAnnotation other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
      if (other.predictionInterval_ != null) {
        if (predictionInterval_ == null) {
          PredictionInterval = new global::Google.Cloud.Automl.V1Beta1.DoubleRange();
        }
        PredictionInterval.MergeFrom(other.PredictionInterval);
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Google.Protobuf.WellKnownTypes.Value();
        }
        Value.MergeFrom(other.Value);
      }
      tablesModelColumnInfo_.Add(other.tablesModelColumnInfo_);
      if (other.BaselineScore != 0F) {
        BaselineScore = other.BaselineScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Score = input.ReadFloat();
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Google.Protobuf.WellKnownTypes.Value();
            }
            input.ReadMessage(Value);
            break;
          }
          case 26: {
            tablesModelColumnInfo_.AddEntriesFrom(input, _repeated_tablesModelColumnInfo_codec);
            break;
          }
          case 34: {
            if (predictionInterval_ == null) {
              PredictionInterval = new global::Google.Cloud.Automl.V1Beta1.DoubleRange();
            }
            input.ReadMessage(PredictionInterval);
            break;
          }
          case 45: {
            BaselineScore = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Score = input.ReadFloat();
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Google.Protobuf.WellKnownTypes.Value();
            }
            input.ReadMessage(Value);
            break;
          }
          case 26: {
            tablesModelColumnInfo_.AddEntriesFrom(ref input, _repeated_tablesModelColumnInfo_codec);
            break;
          }
          case 34: {
            if (predictionInterval_ == null) {
              PredictionInterval = new global::Google.Cloud.Automl.V1Beta1.DoubleRange();
            }
            input.ReadMessage(PredictionInterval);
            break;
          }
          case 45: {
            BaselineScore = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An information specific to given column and Tables Model, in context
  /// of the Model and the predictions created by it.
  /// </summary>
  public sealed partial class TablesModelColumnInfo : pb::IMessage<TablesModelColumnInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TablesModelColumnInfo> _parser = new pb::MessageParser<TablesModelColumnInfo>(() => new TablesModelColumnInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TablesModelColumnInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Automl.V1Beta1.TablesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablesModelColumnInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablesModelColumnInfo(TablesModelColumnInfo other) : this() {
      columnSpecName_ = other.columnSpecName_;
      columnDisplayName_ = other.columnDisplayName_;
      featureImportance_ = other.featureImportance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablesModelColumnInfo Clone() {
      return new TablesModelColumnInfo(this);
    }

    /// <summary>Field number for the "column_spec_name" field.</summary>
    public const int ColumnSpecNameFieldNumber = 1;
    private string columnSpecName_ = "";
    /// <summary>
    /// Output only. The name of the ColumnSpec describing the column. Not
    /// populated when this proto is outputted to BigQuery.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ColumnSpecName {
      get { return columnSpecName_; }
      set {
        columnSpecName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "column_display_name" field.</summary>
    public const int ColumnDisplayNameFieldNumber = 2;
    private string columnDisplayName_ = "";
    /// <summary>
    /// Output only. The display name of the column (same as the display_name of
    /// its ColumnSpec).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ColumnDisplayName {
      get { return columnDisplayName_; }
      set {
        columnDisplayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "feature_importance" field.</summary>
    public const int FeatureImportanceFieldNumber = 3;
    private float featureImportance_;
    /// <summary>
    /// Output only. When given as part of a Model (always populated):
    /// Measurement of how much model predictions correctness on the TEST data
    /// depend on values in this column. A value between 0 and 1, higher means
    /// higher influence. These values are normalized - for all input feature
    /// columns of a given model they add to 1.
    ///
    /// When given back by Predict (populated iff
    /// [feature_importance
    /// param][google.cloud.automl.v1beta1.PredictRequest.params] is set) or Batch
    /// Predict (populated iff
    /// [feature_importance][google.cloud.automl.v1beta1.PredictRequest.params]
    /// param is set):
    /// Measurement of how impactful for the prediction returned for the given row
    /// the value in this column was. Specifically, the feature importance
    /// specifies the marginal contribution that the feature made to the prediction
    /// score compared to the baseline score. These values are computed using the
    /// Sampled Shapley method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float FeatureImportance {
      get { return featureImportance_; }
      set {
        featureImportance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TablesModelColumnInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TablesModelColumnInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ColumnSpecName != other.ColumnSpecName) return false;
      if (ColumnDisplayName != other.ColumnDisplayName) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FeatureImportance, other.FeatureImportance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ColumnSpecName.Length != 0) hash ^= ColumnSpecName.GetHashCode();
      if (ColumnDisplayName.Length != 0) hash ^= ColumnDisplayName.GetHashCode();
      if (FeatureImportance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FeatureImportance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ColumnSpecName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ColumnSpecName);
      }
      if (ColumnDisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ColumnDisplayName);
      }
      if (FeatureImportance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(FeatureImportance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ColumnSpecName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ColumnSpecName);
      }
      if (ColumnDisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ColumnDisplayName);
      }
      if (FeatureImportance != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(FeatureImportance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ColumnSpecName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnSpecName);
      }
      if (ColumnDisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnDisplayName);
      }
      if (FeatureImportance != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TablesModelColumnInfo other) {
      if (other == null) {
        return;
      }
      if (other.ColumnSpecName.Length != 0) {
        ColumnSpecName = other.ColumnSpecName;
      }
      if (other.ColumnDisplayName.Length != 0) {
        ColumnDisplayName = other.ColumnDisplayName;
      }
      if (other.FeatureImportance != 0F) {
        FeatureImportance = other.FeatureImportance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ColumnSpecName = input.ReadString();
            break;
          }
          case 18: {
            ColumnDisplayName = input.ReadString();
            break;
          }
          case 29: {
            FeatureImportance = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ColumnSpecName = input.ReadString();
            break;
          }
          case 18: {
            ColumnDisplayName = input.ReadString();
            break;
          }
          case 29: {
            FeatureImportance = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
