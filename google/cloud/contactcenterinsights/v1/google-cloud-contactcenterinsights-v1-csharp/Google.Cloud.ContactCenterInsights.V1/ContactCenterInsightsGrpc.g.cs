// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/contactcenterinsights/v1/contact_center_insights.proto
// </auto-generated>
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.ContactCenterInsights.V1 {
  /// <summary>
  /// An API that lets users analyze and explore their business conversation data.
  /// </summary>
  public static partial class ContactCenterInsights
  {
    static readonly string __ServiceName = "google.cloud.contactcenterinsights.v1.ContactCenterInsights";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.CreateConversationRequest> __Marshaller_google_cloud_contactcenterinsights_v1_CreateConversationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.CreateConversationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.Conversation> __Marshaller_google_cloud_contactcenterinsights_v1_Conversation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.Conversation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.UpdateConversationRequest> __Marshaller_google_cloud_contactcenterinsights_v1_UpdateConversationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.UpdateConversationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.GetConversationRequest> __Marshaller_google_cloud_contactcenterinsights_v1_GetConversationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.GetConversationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.ListConversationsRequest> __Marshaller_google_cloud_contactcenterinsights_v1_ListConversationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.ListConversationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.ListConversationsResponse> __Marshaller_google_cloud_contactcenterinsights_v1_ListConversationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.ListConversationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.DeleteConversationRequest> __Marshaller_google_cloud_contactcenterinsights_v1_DeleteConversationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.DeleteConversationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.CreateAnalysisRequest> __Marshaller_google_cloud_contactcenterinsights_v1_CreateAnalysisRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.CreateAnalysisRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.GetAnalysisRequest> __Marshaller_google_cloud_contactcenterinsights_v1_GetAnalysisRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.GetAnalysisRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.Analysis> __Marshaller_google_cloud_contactcenterinsights_v1_Analysis = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.Analysis.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesRequest> __Marshaller_google_cloud_contactcenterinsights_v1_ListAnalysesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesResponse> __Marshaller_google_cloud_contactcenterinsights_v1_ListAnalysesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.DeleteAnalysisRequest> __Marshaller_google_cloud_contactcenterinsights_v1_DeleteAnalysisRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.DeleteAnalysisRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.ExportInsightsDataRequest> __Marshaller_google_cloud_contactcenterinsights_v1_ExportInsightsDataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.ExportInsightsDataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.CreateIssueModelRequest> __Marshaller_google_cloud_contactcenterinsights_v1_CreateIssueModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.CreateIssueModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueModelRequest> __Marshaller_google_cloud_contactcenterinsights_v1_UpdateIssueModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.IssueModel> __Marshaller_google_cloud_contactcenterinsights_v1_IssueModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.IssueModel.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.GetIssueModelRequest> __Marshaller_google_cloud_contactcenterinsights_v1_GetIssueModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.GetIssueModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsRequest> __Marshaller_google_cloud_contactcenterinsights_v1_ListIssueModelsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsResponse> __Marshaller_google_cloud_contactcenterinsights_v1_ListIssueModelsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.DeleteIssueModelRequest> __Marshaller_google_cloud_contactcenterinsights_v1_DeleteIssueModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.DeleteIssueModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.DeployIssueModelRequest> __Marshaller_google_cloud_contactcenterinsights_v1_DeployIssueModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.DeployIssueModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.UndeployIssueModelRequest> __Marshaller_google_cloud_contactcenterinsights_v1_UndeployIssueModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.UndeployIssueModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.GetIssueRequest> __Marshaller_google_cloud_contactcenterinsights_v1_GetIssueRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.GetIssueRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.Issue> __Marshaller_google_cloud_contactcenterinsights_v1_Issue = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.Issue.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.ListIssuesRequest> __Marshaller_google_cloud_contactcenterinsights_v1_ListIssuesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.ListIssuesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.ListIssuesResponse> __Marshaller_google_cloud_contactcenterinsights_v1_ListIssuesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.ListIssuesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueRequest> __Marshaller_google_cloud_contactcenterinsights_v1_UpdateIssueRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsRequest> __Marshaller_google_cloud_contactcenterinsights_v1_CalculateIssueModelStatsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsResponse> __Marshaller_google_cloud_contactcenterinsights_v1_CalculateIssueModelStatsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.CreatePhraseMatcherRequest> __Marshaller_google_cloud_contactcenterinsights_v1_CreatePhraseMatcherRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.CreatePhraseMatcherRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher> __Marshaller_google_cloud_contactcenterinsights_v1_PhraseMatcher = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.GetPhraseMatcherRequest> __Marshaller_google_cloud_contactcenterinsights_v1_GetPhraseMatcherRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.GetPhraseMatcherRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersRequest> __Marshaller_google_cloud_contactcenterinsights_v1_ListPhraseMatchersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersResponse> __Marshaller_google_cloud_contactcenterinsights_v1_ListPhraseMatchersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.DeletePhraseMatcherRequest> __Marshaller_google_cloud_contactcenterinsights_v1_DeletePhraseMatcherRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.DeletePhraseMatcherRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsRequest> __Marshaller_google_cloud_contactcenterinsights_v1_CalculateStatsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsResponse> __Marshaller_google_cloud_contactcenterinsights_v1_CalculateStatsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.GetSettingsRequest> __Marshaller_google_cloud_contactcenterinsights_v1_GetSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.GetSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.Settings> __Marshaller_google_cloud_contactcenterinsights_v1_Settings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.Settings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ContactCenterInsights.V1.UpdateSettingsRequest> __Marshaller_google_cloud_contactcenterinsights_v1_UpdateSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ContactCenterInsights.V1.UpdateSettingsRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.CreateConversationRequest, global::Google.Cloud.ContactCenterInsights.V1.Conversation> __Method_CreateConversation = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.CreateConversationRequest, global::Google.Cloud.ContactCenterInsights.V1.Conversation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateConversation",
        __Marshaller_google_cloud_contactcenterinsights_v1_CreateConversationRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_Conversation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.UpdateConversationRequest, global::Google.Cloud.ContactCenterInsights.V1.Conversation> __Method_UpdateConversation = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.UpdateConversationRequest, global::Google.Cloud.ContactCenterInsights.V1.Conversation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateConversation",
        __Marshaller_google_cloud_contactcenterinsights_v1_UpdateConversationRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_Conversation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.GetConversationRequest, global::Google.Cloud.ContactCenterInsights.V1.Conversation> __Method_GetConversation = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.GetConversationRequest, global::Google.Cloud.ContactCenterInsights.V1.Conversation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetConversation",
        __Marshaller_google_cloud_contactcenterinsights_v1_GetConversationRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_Conversation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.ListConversationsRequest, global::Google.Cloud.ContactCenterInsights.V1.ListConversationsResponse> __Method_ListConversations = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.ListConversationsRequest, global::Google.Cloud.ContactCenterInsights.V1.ListConversationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListConversations",
        __Marshaller_google_cloud_contactcenterinsights_v1_ListConversationsRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_ListConversationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.DeleteConversationRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteConversation = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.DeleteConversationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteConversation",
        __Marshaller_google_cloud_contactcenterinsights_v1_DeleteConversationRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.CreateAnalysisRequest, global::Google.LongRunning.Operation> __Method_CreateAnalysis = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.CreateAnalysisRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAnalysis",
        __Marshaller_google_cloud_contactcenterinsights_v1_CreateAnalysisRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.GetAnalysisRequest, global::Google.Cloud.ContactCenterInsights.V1.Analysis> __Method_GetAnalysis = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.GetAnalysisRequest, global::Google.Cloud.ContactCenterInsights.V1.Analysis>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAnalysis",
        __Marshaller_google_cloud_contactcenterinsights_v1_GetAnalysisRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_Analysis);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesRequest, global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesResponse> __Method_ListAnalyses = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesRequest, global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAnalyses",
        __Marshaller_google_cloud_contactcenterinsights_v1_ListAnalysesRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_ListAnalysesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.DeleteAnalysisRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAnalysis = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.DeleteAnalysisRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAnalysis",
        __Marshaller_google_cloud_contactcenterinsights_v1_DeleteAnalysisRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.ExportInsightsDataRequest, global::Google.LongRunning.Operation> __Method_ExportInsightsData = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.ExportInsightsDataRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportInsightsData",
        __Marshaller_google_cloud_contactcenterinsights_v1_ExportInsightsDataRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.CreateIssueModelRequest, global::Google.LongRunning.Operation> __Method_CreateIssueModel = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.CreateIssueModelRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateIssueModel",
        __Marshaller_google_cloud_contactcenterinsights_v1_CreateIssueModelRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueModelRequest, global::Google.Cloud.ContactCenterInsights.V1.IssueModel> __Method_UpdateIssueModel = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueModelRequest, global::Google.Cloud.ContactCenterInsights.V1.IssueModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateIssueModel",
        __Marshaller_google_cloud_contactcenterinsights_v1_UpdateIssueModelRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_IssueModel);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.GetIssueModelRequest, global::Google.Cloud.ContactCenterInsights.V1.IssueModel> __Method_GetIssueModel = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.GetIssueModelRequest, global::Google.Cloud.ContactCenterInsights.V1.IssueModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIssueModel",
        __Marshaller_google_cloud_contactcenterinsights_v1_GetIssueModelRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_IssueModel);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsRequest, global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsResponse> __Method_ListIssueModels = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsRequest, global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListIssueModels",
        __Marshaller_google_cloud_contactcenterinsights_v1_ListIssueModelsRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_ListIssueModelsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.DeleteIssueModelRequest, global::Google.LongRunning.Operation> __Method_DeleteIssueModel = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.DeleteIssueModelRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteIssueModel",
        __Marshaller_google_cloud_contactcenterinsights_v1_DeleteIssueModelRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.DeployIssueModelRequest, global::Google.LongRunning.Operation> __Method_DeployIssueModel = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.DeployIssueModelRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeployIssueModel",
        __Marshaller_google_cloud_contactcenterinsights_v1_DeployIssueModelRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.UndeployIssueModelRequest, global::Google.LongRunning.Operation> __Method_UndeployIssueModel = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.UndeployIssueModelRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UndeployIssueModel",
        __Marshaller_google_cloud_contactcenterinsights_v1_UndeployIssueModelRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.GetIssueRequest, global::Google.Cloud.ContactCenterInsights.V1.Issue> __Method_GetIssue = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.GetIssueRequest, global::Google.Cloud.ContactCenterInsights.V1.Issue>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIssue",
        __Marshaller_google_cloud_contactcenterinsights_v1_GetIssueRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_Issue);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.ListIssuesRequest, global::Google.Cloud.ContactCenterInsights.V1.ListIssuesResponse> __Method_ListIssues = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.ListIssuesRequest, global::Google.Cloud.ContactCenterInsights.V1.ListIssuesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListIssues",
        __Marshaller_google_cloud_contactcenterinsights_v1_ListIssuesRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_ListIssuesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueRequest, global::Google.Cloud.ContactCenterInsights.V1.Issue> __Method_UpdateIssue = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueRequest, global::Google.Cloud.ContactCenterInsights.V1.Issue>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateIssue",
        __Marshaller_google_cloud_contactcenterinsights_v1_UpdateIssueRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_Issue);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsRequest, global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsResponse> __Method_CalculateIssueModelStats = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsRequest, global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CalculateIssueModelStats",
        __Marshaller_google_cloud_contactcenterinsights_v1_CalculateIssueModelStatsRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_CalculateIssueModelStatsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.CreatePhraseMatcherRequest, global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher> __Method_CreatePhraseMatcher = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.CreatePhraseMatcherRequest, global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatePhraseMatcher",
        __Marshaller_google_cloud_contactcenterinsights_v1_CreatePhraseMatcherRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_PhraseMatcher);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.GetPhraseMatcherRequest, global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher> __Method_GetPhraseMatcher = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.GetPhraseMatcherRequest, global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPhraseMatcher",
        __Marshaller_google_cloud_contactcenterinsights_v1_GetPhraseMatcherRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_PhraseMatcher);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersRequest, global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersResponse> __Method_ListPhraseMatchers = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersRequest, global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPhraseMatchers",
        __Marshaller_google_cloud_contactcenterinsights_v1_ListPhraseMatchersRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_ListPhraseMatchersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.DeletePhraseMatcherRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeletePhraseMatcher = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.DeletePhraseMatcherRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePhraseMatcher",
        __Marshaller_google_cloud_contactcenterinsights_v1_DeletePhraseMatcherRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsRequest, global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsResponse> __Method_CalculateStats = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsRequest, global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CalculateStats",
        __Marshaller_google_cloud_contactcenterinsights_v1_CalculateStatsRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_CalculateStatsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.GetSettingsRequest, global::Google.Cloud.ContactCenterInsights.V1.Settings> __Method_GetSettings = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.GetSettingsRequest, global::Google.Cloud.ContactCenterInsights.V1.Settings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSettings",
        __Marshaller_google_cloud_contactcenterinsights_v1_GetSettingsRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_Settings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.UpdateSettingsRequest, global::Google.Cloud.ContactCenterInsights.V1.Settings> __Method_UpdateSettings = new grpc::Method<global::Google.Cloud.ContactCenterInsights.V1.UpdateSettingsRequest, global::Google.Cloud.ContactCenterInsights.V1.Settings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSettings",
        __Marshaller_google_cloud_contactcenterinsights_v1_UpdateSettingsRequest,
        __Marshaller_google_cloud_contactcenterinsights_v1_Settings);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.ContactCenterInsights.V1.ContactCenterInsightsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ContactCenterInsights</summary>
    [grpc::BindServiceMethod(typeof(ContactCenterInsights), "BindService")]
    public abstract partial class ContactCenterInsightsBase
    {
      /// <summary>
      /// Creates a conversation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.Conversation> CreateConversation(global::Google.Cloud.ContactCenterInsights.V1.CreateConversationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a conversation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.Conversation> UpdateConversation(global::Google.Cloud.ContactCenterInsights.V1.UpdateConversationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a conversation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.Conversation> GetConversation(global::Google.Cloud.ContactCenterInsights.V1.GetConversationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists conversations.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.ListConversationsResponse> ListConversations(global::Google.Cloud.ContactCenterInsights.V1.ListConversationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a conversation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteConversation(global::Google.Cloud.ContactCenterInsights.V1.DeleteConversationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an analysis. The long running operation is done when the analysis
      /// has completed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateAnalysis(global::Google.Cloud.ContactCenterInsights.V1.CreateAnalysisRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an analysis.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.Analysis> GetAnalysis(global::Google.Cloud.ContactCenterInsights.V1.GetAnalysisRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists analyses.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesResponse> ListAnalyses(global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an analysis.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAnalysis(global::Google.Cloud.ContactCenterInsights.V1.DeleteAnalysisRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Export insights data to a destination defined in the request body.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ExportInsightsData(global::Google.Cloud.ContactCenterInsights.V1.ExportInsightsDataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an issue model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateIssueModel(global::Google.Cloud.ContactCenterInsights.V1.CreateIssueModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an issue model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.IssueModel> UpdateIssueModel(global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an issue model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.IssueModel> GetIssueModel(global::Google.Cloud.ContactCenterInsights.V1.GetIssueModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists issue models.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsResponse> ListIssueModels(global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an issue model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteIssueModel(global::Google.Cloud.ContactCenterInsights.V1.DeleteIssueModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deploys an issue model. Returns an error if a model is already deployed.
      /// An issue model can only be used in analysis after it has been deployed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeployIssueModel(global::Google.Cloud.ContactCenterInsights.V1.DeployIssueModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Undeploys an issue model.
      /// An issue model can not be used in analysis after it has been undeployed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UndeployIssueModel(global::Google.Cloud.ContactCenterInsights.V1.UndeployIssueModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an issue.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.Issue> GetIssue(global::Google.Cloud.ContactCenterInsights.V1.GetIssueRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists issues.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.ListIssuesResponse> ListIssues(global::Google.Cloud.ContactCenterInsights.V1.ListIssuesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an issue.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.Issue> UpdateIssue(global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an issue model's statistics.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsResponse> CalculateIssueModelStats(global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a phrase matcher.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher> CreatePhraseMatcher(global::Google.Cloud.ContactCenterInsights.V1.CreatePhraseMatcherRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a phrase matcher.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher> GetPhraseMatcher(global::Google.Cloud.ContactCenterInsights.V1.GetPhraseMatcherRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists phrase matchers.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersResponse> ListPhraseMatchers(global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a phrase matcher.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeletePhraseMatcher(global::Google.Cloud.ContactCenterInsights.V1.DeletePhraseMatcherRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets conversation statistics.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsResponse> CalculateStats(global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets project-level settings.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.Settings> GetSettings(global::Google.Cloud.ContactCenterInsights.V1.GetSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates project-level settings.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ContactCenterInsights.V1.Settings> UpdateSettings(global::Google.Cloud.ContactCenterInsights.V1.UpdateSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ContactCenterInsights</summary>
    public partial class ContactCenterInsightsClient : grpc::ClientBase<ContactCenterInsightsClient>
    {
      /// <summary>Creates a new client for ContactCenterInsights</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ContactCenterInsightsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ContactCenterInsights that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ContactCenterInsightsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ContactCenterInsightsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ContactCenterInsightsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Conversation CreateConversation(global::Google.Cloud.ContactCenterInsights.V1.CreateConversationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateConversation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Conversation CreateConversation(global::Google.Cloud.ContactCenterInsights.V1.CreateConversationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateConversation, null, options, request);
      }
      /// <summary>
      /// Creates a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Conversation> CreateConversationAsync(global::Google.Cloud.ContactCenterInsights.V1.CreateConversationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateConversationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Conversation> CreateConversationAsync(global::Google.Cloud.ContactCenterInsights.V1.CreateConversationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateConversation, null, options, request);
      }
      /// <summary>
      /// Updates a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Conversation UpdateConversation(global::Google.Cloud.ContactCenterInsights.V1.UpdateConversationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateConversation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Conversation UpdateConversation(global::Google.Cloud.ContactCenterInsights.V1.UpdateConversationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateConversation, null, options, request);
      }
      /// <summary>
      /// Updates a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Conversation> UpdateConversationAsync(global::Google.Cloud.ContactCenterInsights.V1.UpdateConversationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateConversationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Conversation> UpdateConversationAsync(global::Google.Cloud.ContactCenterInsights.V1.UpdateConversationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateConversation, null, options, request);
      }
      /// <summary>
      /// Gets a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Conversation GetConversation(global::Google.Cloud.ContactCenterInsights.V1.GetConversationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConversation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Conversation GetConversation(global::Google.Cloud.ContactCenterInsights.V1.GetConversationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetConversation, null, options, request);
      }
      /// <summary>
      /// Gets a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Conversation> GetConversationAsync(global::Google.Cloud.ContactCenterInsights.V1.GetConversationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConversationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Conversation> GetConversationAsync(global::Google.Cloud.ContactCenterInsights.V1.GetConversationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetConversation, null, options, request);
      }
      /// <summary>
      /// Lists conversations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.ListConversationsResponse ListConversations(global::Google.Cloud.ContactCenterInsights.V1.ListConversationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConversations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists conversations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.ListConversationsResponse ListConversations(global::Google.Cloud.ContactCenterInsights.V1.ListConversationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListConversations, null, options, request);
      }
      /// <summary>
      /// Lists conversations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.ListConversationsResponse> ListConversationsAsync(global::Google.Cloud.ContactCenterInsights.V1.ListConversationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConversationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists conversations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.ListConversationsResponse> ListConversationsAsync(global::Google.Cloud.ContactCenterInsights.V1.ListConversationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListConversations, null, options, request);
      }
      /// <summary>
      /// Deletes a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteConversation(global::Google.Cloud.ContactCenterInsights.V1.DeleteConversationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteConversation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteConversation(global::Google.Cloud.ContactCenterInsights.V1.DeleteConversationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteConversation, null, options, request);
      }
      /// <summary>
      /// Deletes a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteConversationAsync(global::Google.Cloud.ContactCenterInsights.V1.DeleteConversationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteConversationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a conversation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteConversationAsync(global::Google.Cloud.ContactCenterInsights.V1.DeleteConversationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteConversation, null, options, request);
      }
      /// <summary>
      /// Creates an analysis. The long running operation is done when the analysis
      /// has completed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateAnalysis(global::Google.Cloud.ContactCenterInsights.V1.CreateAnalysisRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAnalysis(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an analysis. The long running operation is done when the analysis
      /// has completed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateAnalysis(global::Google.Cloud.ContactCenterInsights.V1.CreateAnalysisRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAnalysis, null, options, request);
      }
      /// <summary>
      /// Creates an analysis. The long running operation is done when the analysis
      /// has completed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateAnalysisAsync(global::Google.Cloud.ContactCenterInsights.V1.CreateAnalysisRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAnalysisAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an analysis. The long running operation is done when the analysis
      /// has completed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateAnalysisAsync(global::Google.Cloud.ContactCenterInsights.V1.CreateAnalysisRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAnalysis, null, options, request);
      }
      /// <summary>
      /// Gets an analysis.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Analysis GetAnalysis(global::Google.Cloud.ContactCenterInsights.V1.GetAnalysisRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAnalysis(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an analysis.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Analysis GetAnalysis(global::Google.Cloud.ContactCenterInsights.V1.GetAnalysisRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAnalysis, null, options, request);
      }
      /// <summary>
      /// Gets an analysis.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Analysis> GetAnalysisAsync(global::Google.Cloud.ContactCenterInsights.V1.GetAnalysisRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAnalysisAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an analysis.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Analysis> GetAnalysisAsync(global::Google.Cloud.ContactCenterInsights.V1.GetAnalysisRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAnalysis, null, options, request);
      }
      /// <summary>
      /// Lists analyses.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesResponse ListAnalyses(global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAnalyses(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists analyses.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesResponse ListAnalyses(global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAnalyses, null, options, request);
      }
      /// <summary>
      /// Lists analyses.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesResponse> ListAnalysesAsync(global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAnalysesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists analyses.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesResponse> ListAnalysesAsync(global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAnalyses, null, options, request);
      }
      /// <summary>
      /// Deletes an analysis.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAnalysis(global::Google.Cloud.ContactCenterInsights.V1.DeleteAnalysisRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAnalysis(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an analysis.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAnalysis(global::Google.Cloud.ContactCenterInsights.V1.DeleteAnalysisRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAnalysis, null, options, request);
      }
      /// <summary>
      /// Deletes an analysis.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAnalysisAsync(global::Google.Cloud.ContactCenterInsights.V1.DeleteAnalysisRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAnalysisAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an analysis.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAnalysisAsync(global::Google.Cloud.ContactCenterInsights.V1.DeleteAnalysisRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAnalysis, null, options, request);
      }
      /// <summary>
      /// Export insights data to a destination defined in the request body.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportInsightsData(global::Google.Cloud.ContactCenterInsights.V1.ExportInsightsDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportInsightsData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Export insights data to a destination defined in the request body.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportInsightsData(global::Google.Cloud.ContactCenterInsights.V1.ExportInsightsDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportInsightsData, null, options, request);
      }
      /// <summary>
      /// Export insights data to a destination defined in the request body.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportInsightsDataAsync(global::Google.Cloud.ContactCenterInsights.V1.ExportInsightsDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportInsightsDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Export insights data to a destination defined in the request body.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportInsightsDataAsync(global::Google.Cloud.ContactCenterInsights.V1.ExportInsightsDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportInsightsData, null, options, request);
      }
      /// <summary>
      /// Creates an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateIssueModel(global::Google.Cloud.ContactCenterInsights.V1.CreateIssueModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateIssueModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateIssueModel(global::Google.Cloud.ContactCenterInsights.V1.CreateIssueModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateIssueModel, null, options, request);
      }
      /// <summary>
      /// Creates an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateIssueModelAsync(global::Google.Cloud.ContactCenterInsights.V1.CreateIssueModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateIssueModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateIssueModelAsync(global::Google.Cloud.ContactCenterInsights.V1.CreateIssueModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateIssueModel, null, options, request);
      }
      /// <summary>
      /// Updates an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.IssueModel UpdateIssueModel(global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateIssueModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.IssueModel UpdateIssueModel(global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateIssueModel, null, options, request);
      }
      /// <summary>
      /// Updates an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.IssueModel> UpdateIssueModelAsync(global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateIssueModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.IssueModel> UpdateIssueModelAsync(global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateIssueModel, null, options, request);
      }
      /// <summary>
      /// Gets an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.IssueModel GetIssueModel(global::Google.Cloud.ContactCenterInsights.V1.GetIssueModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIssueModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.IssueModel GetIssueModel(global::Google.Cloud.ContactCenterInsights.V1.GetIssueModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIssueModel, null, options, request);
      }
      /// <summary>
      /// Gets an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.IssueModel> GetIssueModelAsync(global::Google.Cloud.ContactCenterInsights.V1.GetIssueModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIssueModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.IssueModel> GetIssueModelAsync(global::Google.Cloud.ContactCenterInsights.V1.GetIssueModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIssueModel, null, options, request);
      }
      /// <summary>
      /// Lists issue models.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsResponse ListIssueModels(global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListIssueModels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists issue models.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsResponse ListIssueModels(global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListIssueModels, null, options, request);
      }
      /// <summary>
      /// Lists issue models.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsResponse> ListIssueModelsAsync(global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListIssueModelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists issue models.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsResponse> ListIssueModelsAsync(global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListIssueModels, null, options, request);
      }
      /// <summary>
      /// Deletes an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteIssueModel(global::Google.Cloud.ContactCenterInsights.V1.DeleteIssueModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteIssueModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteIssueModel(global::Google.Cloud.ContactCenterInsights.V1.DeleteIssueModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteIssueModel, null, options, request);
      }
      /// <summary>
      /// Deletes an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteIssueModelAsync(global::Google.Cloud.ContactCenterInsights.V1.DeleteIssueModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteIssueModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an issue model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteIssueModelAsync(global::Google.Cloud.ContactCenterInsights.V1.DeleteIssueModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteIssueModel, null, options, request);
      }
      /// <summary>
      /// Deploys an issue model. Returns an error if a model is already deployed.
      /// An issue model can only be used in analysis after it has been deployed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeployIssueModel(global::Google.Cloud.ContactCenterInsights.V1.DeployIssueModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeployIssueModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deploys an issue model. Returns an error if a model is already deployed.
      /// An issue model can only be used in analysis after it has been deployed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeployIssueModel(global::Google.Cloud.ContactCenterInsights.V1.DeployIssueModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeployIssueModel, null, options, request);
      }
      /// <summary>
      /// Deploys an issue model. Returns an error if a model is already deployed.
      /// An issue model can only be used in analysis after it has been deployed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeployIssueModelAsync(global::Google.Cloud.ContactCenterInsights.V1.DeployIssueModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeployIssueModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deploys an issue model. Returns an error if a model is already deployed.
      /// An issue model can only be used in analysis after it has been deployed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeployIssueModelAsync(global::Google.Cloud.ContactCenterInsights.V1.DeployIssueModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeployIssueModel, null, options, request);
      }
      /// <summary>
      /// Undeploys an issue model.
      /// An issue model can not be used in analysis after it has been undeployed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UndeployIssueModel(global::Google.Cloud.ContactCenterInsights.V1.UndeployIssueModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UndeployIssueModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Undeploys an issue model.
      /// An issue model can not be used in analysis after it has been undeployed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UndeployIssueModel(global::Google.Cloud.ContactCenterInsights.V1.UndeployIssueModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UndeployIssueModel, null, options, request);
      }
      /// <summary>
      /// Undeploys an issue model.
      /// An issue model can not be used in analysis after it has been undeployed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UndeployIssueModelAsync(global::Google.Cloud.ContactCenterInsights.V1.UndeployIssueModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UndeployIssueModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Undeploys an issue model.
      /// An issue model can not be used in analysis after it has been undeployed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UndeployIssueModelAsync(global::Google.Cloud.ContactCenterInsights.V1.UndeployIssueModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UndeployIssueModel, null, options, request);
      }
      /// <summary>
      /// Gets an issue.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Issue GetIssue(global::Google.Cloud.ContactCenterInsights.V1.GetIssueRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIssue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an issue.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Issue GetIssue(global::Google.Cloud.ContactCenterInsights.V1.GetIssueRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIssue, null, options, request);
      }
      /// <summary>
      /// Gets an issue.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Issue> GetIssueAsync(global::Google.Cloud.ContactCenterInsights.V1.GetIssueRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIssueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an issue.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Issue> GetIssueAsync(global::Google.Cloud.ContactCenterInsights.V1.GetIssueRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIssue, null, options, request);
      }
      /// <summary>
      /// Lists issues.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.ListIssuesResponse ListIssues(global::Google.Cloud.ContactCenterInsights.V1.ListIssuesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListIssues(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists issues.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.ListIssuesResponse ListIssues(global::Google.Cloud.ContactCenterInsights.V1.ListIssuesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListIssues, null, options, request);
      }
      /// <summary>
      /// Lists issues.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.ListIssuesResponse> ListIssuesAsync(global::Google.Cloud.ContactCenterInsights.V1.ListIssuesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListIssuesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists issues.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.ListIssuesResponse> ListIssuesAsync(global::Google.Cloud.ContactCenterInsights.V1.ListIssuesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListIssues, null, options, request);
      }
      /// <summary>
      /// Updates an issue.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Issue UpdateIssue(global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateIssue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an issue.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Issue UpdateIssue(global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateIssue, null, options, request);
      }
      /// <summary>
      /// Updates an issue.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Issue> UpdateIssueAsync(global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateIssueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an issue.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Issue> UpdateIssueAsync(global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateIssue, null, options, request);
      }
      /// <summary>
      /// Gets an issue model's statistics.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsResponse CalculateIssueModelStats(global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CalculateIssueModelStats(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an issue model's statistics.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsResponse CalculateIssueModelStats(global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CalculateIssueModelStats, null, options, request);
      }
      /// <summary>
      /// Gets an issue model's statistics.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsResponse> CalculateIssueModelStatsAsync(global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CalculateIssueModelStatsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an issue model's statistics.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsResponse> CalculateIssueModelStatsAsync(global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CalculateIssueModelStats, null, options, request);
      }
      /// <summary>
      /// Creates a phrase matcher.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher CreatePhraseMatcher(global::Google.Cloud.ContactCenterInsights.V1.CreatePhraseMatcherRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePhraseMatcher(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a phrase matcher.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher CreatePhraseMatcher(global::Google.Cloud.ContactCenterInsights.V1.CreatePhraseMatcherRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatePhraseMatcher, null, options, request);
      }
      /// <summary>
      /// Creates a phrase matcher.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher> CreatePhraseMatcherAsync(global::Google.Cloud.ContactCenterInsights.V1.CreatePhraseMatcherRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePhraseMatcherAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a phrase matcher.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher> CreatePhraseMatcherAsync(global::Google.Cloud.ContactCenterInsights.V1.CreatePhraseMatcherRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatePhraseMatcher, null, options, request);
      }
      /// <summary>
      /// Gets a phrase matcher.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher GetPhraseMatcher(global::Google.Cloud.ContactCenterInsights.V1.GetPhraseMatcherRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPhraseMatcher(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a phrase matcher.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher GetPhraseMatcher(global::Google.Cloud.ContactCenterInsights.V1.GetPhraseMatcherRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPhraseMatcher, null, options, request);
      }
      /// <summary>
      /// Gets a phrase matcher.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher> GetPhraseMatcherAsync(global::Google.Cloud.ContactCenterInsights.V1.GetPhraseMatcherRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPhraseMatcherAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a phrase matcher.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher> GetPhraseMatcherAsync(global::Google.Cloud.ContactCenterInsights.V1.GetPhraseMatcherRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPhraseMatcher, null, options, request);
      }
      /// <summary>
      /// Lists phrase matchers.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersResponse ListPhraseMatchers(global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPhraseMatchers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists phrase matchers.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersResponse ListPhraseMatchers(global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPhraseMatchers, null, options, request);
      }
      /// <summary>
      /// Lists phrase matchers.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersResponse> ListPhraseMatchersAsync(global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPhraseMatchersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists phrase matchers.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersResponse> ListPhraseMatchersAsync(global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPhraseMatchers, null, options, request);
      }
      /// <summary>
      /// Deletes a phrase matcher.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeletePhraseMatcher(global::Google.Cloud.ContactCenterInsights.V1.DeletePhraseMatcherRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePhraseMatcher(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a phrase matcher.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeletePhraseMatcher(global::Google.Cloud.ContactCenterInsights.V1.DeletePhraseMatcherRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeletePhraseMatcher, null, options, request);
      }
      /// <summary>
      /// Deletes a phrase matcher.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeletePhraseMatcherAsync(global::Google.Cloud.ContactCenterInsights.V1.DeletePhraseMatcherRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePhraseMatcherAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a phrase matcher.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeletePhraseMatcherAsync(global::Google.Cloud.ContactCenterInsights.V1.DeletePhraseMatcherRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeletePhraseMatcher, null, options, request);
      }
      /// <summary>
      /// Gets conversation statistics.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsResponse CalculateStats(global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CalculateStats(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets conversation statistics.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsResponse CalculateStats(global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CalculateStats, null, options, request);
      }
      /// <summary>
      /// Gets conversation statistics.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsResponse> CalculateStatsAsync(global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CalculateStatsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets conversation statistics.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsResponse> CalculateStatsAsync(global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CalculateStats, null, options, request);
      }
      /// <summary>
      /// Gets project-level settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Settings GetSettings(global::Google.Cloud.ContactCenterInsights.V1.GetSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets project-level settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Settings GetSettings(global::Google.Cloud.ContactCenterInsights.V1.GetSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSettings, null, options, request);
      }
      /// <summary>
      /// Gets project-level settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Settings> GetSettingsAsync(global::Google.Cloud.ContactCenterInsights.V1.GetSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets project-level settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Settings> GetSettingsAsync(global::Google.Cloud.ContactCenterInsights.V1.GetSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSettings, null, options, request);
      }
      /// <summary>
      /// Updates project-level settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Settings UpdateSettings(global::Google.Cloud.ContactCenterInsights.V1.UpdateSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates project-level settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ContactCenterInsights.V1.Settings UpdateSettings(global::Google.Cloud.ContactCenterInsights.V1.UpdateSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSettings, null, options, request);
      }
      /// <summary>
      /// Updates project-level settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Settings> UpdateSettingsAsync(global::Google.Cloud.ContactCenterInsights.V1.UpdateSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates project-level settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ContactCenterInsights.V1.Settings> UpdateSettingsAsync(global::Google.Cloud.ContactCenterInsights.V1.UpdateSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSettings, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ContactCenterInsightsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ContactCenterInsightsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ContactCenterInsightsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateConversation, serviceImpl.CreateConversation)
          .AddMethod(__Method_UpdateConversation, serviceImpl.UpdateConversation)
          .AddMethod(__Method_GetConversation, serviceImpl.GetConversation)
          .AddMethod(__Method_ListConversations, serviceImpl.ListConversations)
          .AddMethod(__Method_DeleteConversation, serviceImpl.DeleteConversation)
          .AddMethod(__Method_CreateAnalysis, serviceImpl.CreateAnalysis)
          .AddMethod(__Method_GetAnalysis, serviceImpl.GetAnalysis)
          .AddMethod(__Method_ListAnalyses, serviceImpl.ListAnalyses)
          .AddMethod(__Method_DeleteAnalysis, serviceImpl.DeleteAnalysis)
          .AddMethod(__Method_ExportInsightsData, serviceImpl.ExportInsightsData)
          .AddMethod(__Method_CreateIssueModel, serviceImpl.CreateIssueModel)
          .AddMethod(__Method_UpdateIssueModel, serviceImpl.UpdateIssueModel)
          .AddMethod(__Method_GetIssueModel, serviceImpl.GetIssueModel)
          .AddMethod(__Method_ListIssueModels, serviceImpl.ListIssueModels)
          .AddMethod(__Method_DeleteIssueModel, serviceImpl.DeleteIssueModel)
          .AddMethod(__Method_DeployIssueModel, serviceImpl.DeployIssueModel)
          .AddMethod(__Method_UndeployIssueModel, serviceImpl.UndeployIssueModel)
          .AddMethod(__Method_GetIssue, serviceImpl.GetIssue)
          .AddMethod(__Method_ListIssues, serviceImpl.ListIssues)
          .AddMethod(__Method_UpdateIssue, serviceImpl.UpdateIssue)
          .AddMethod(__Method_CalculateIssueModelStats, serviceImpl.CalculateIssueModelStats)
          .AddMethod(__Method_CreatePhraseMatcher, serviceImpl.CreatePhraseMatcher)
          .AddMethod(__Method_GetPhraseMatcher, serviceImpl.GetPhraseMatcher)
          .AddMethod(__Method_ListPhraseMatchers, serviceImpl.ListPhraseMatchers)
          .AddMethod(__Method_DeletePhraseMatcher, serviceImpl.DeletePhraseMatcher)
          .AddMethod(__Method_CalculateStats, serviceImpl.CalculateStats)
          .AddMethod(__Method_GetSettings, serviceImpl.GetSettings)
          .AddMethod(__Method_UpdateSettings, serviceImpl.UpdateSettings).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ContactCenterInsightsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateConversation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.CreateConversationRequest, global::Google.Cloud.ContactCenterInsights.V1.Conversation>(serviceImpl.CreateConversation));
      serviceBinder.AddMethod(__Method_UpdateConversation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.UpdateConversationRequest, global::Google.Cloud.ContactCenterInsights.V1.Conversation>(serviceImpl.UpdateConversation));
      serviceBinder.AddMethod(__Method_GetConversation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.GetConversationRequest, global::Google.Cloud.ContactCenterInsights.V1.Conversation>(serviceImpl.GetConversation));
      serviceBinder.AddMethod(__Method_ListConversations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.ListConversationsRequest, global::Google.Cloud.ContactCenterInsights.V1.ListConversationsResponse>(serviceImpl.ListConversations));
      serviceBinder.AddMethod(__Method_DeleteConversation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.DeleteConversationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteConversation));
      serviceBinder.AddMethod(__Method_CreateAnalysis, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.CreateAnalysisRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateAnalysis));
      serviceBinder.AddMethod(__Method_GetAnalysis, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.GetAnalysisRequest, global::Google.Cloud.ContactCenterInsights.V1.Analysis>(serviceImpl.GetAnalysis));
      serviceBinder.AddMethod(__Method_ListAnalyses, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesRequest, global::Google.Cloud.ContactCenterInsights.V1.ListAnalysesResponse>(serviceImpl.ListAnalyses));
      serviceBinder.AddMethod(__Method_DeleteAnalysis, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.DeleteAnalysisRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAnalysis));
      serviceBinder.AddMethod(__Method_ExportInsightsData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.ExportInsightsDataRequest, global::Google.LongRunning.Operation>(serviceImpl.ExportInsightsData));
      serviceBinder.AddMethod(__Method_CreateIssueModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.CreateIssueModelRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateIssueModel));
      serviceBinder.AddMethod(__Method_UpdateIssueModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueModelRequest, global::Google.Cloud.ContactCenterInsights.V1.IssueModel>(serviceImpl.UpdateIssueModel));
      serviceBinder.AddMethod(__Method_GetIssueModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.GetIssueModelRequest, global::Google.Cloud.ContactCenterInsights.V1.IssueModel>(serviceImpl.GetIssueModel));
      serviceBinder.AddMethod(__Method_ListIssueModels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsRequest, global::Google.Cloud.ContactCenterInsights.V1.ListIssueModelsResponse>(serviceImpl.ListIssueModels));
      serviceBinder.AddMethod(__Method_DeleteIssueModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.DeleteIssueModelRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteIssueModel));
      serviceBinder.AddMethod(__Method_DeployIssueModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.DeployIssueModelRequest, global::Google.LongRunning.Operation>(serviceImpl.DeployIssueModel));
      serviceBinder.AddMethod(__Method_UndeployIssueModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.UndeployIssueModelRequest, global::Google.LongRunning.Operation>(serviceImpl.UndeployIssueModel));
      serviceBinder.AddMethod(__Method_GetIssue, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.GetIssueRequest, global::Google.Cloud.ContactCenterInsights.V1.Issue>(serviceImpl.GetIssue));
      serviceBinder.AddMethod(__Method_ListIssues, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.ListIssuesRequest, global::Google.Cloud.ContactCenterInsights.V1.ListIssuesResponse>(serviceImpl.ListIssues));
      serviceBinder.AddMethod(__Method_UpdateIssue, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.UpdateIssueRequest, global::Google.Cloud.ContactCenterInsights.V1.Issue>(serviceImpl.UpdateIssue));
      serviceBinder.AddMethod(__Method_CalculateIssueModelStats, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsRequest, global::Google.Cloud.ContactCenterInsights.V1.CalculateIssueModelStatsResponse>(serviceImpl.CalculateIssueModelStats));
      serviceBinder.AddMethod(__Method_CreatePhraseMatcher, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.CreatePhraseMatcherRequest, global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher>(serviceImpl.CreatePhraseMatcher));
      serviceBinder.AddMethod(__Method_GetPhraseMatcher, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.GetPhraseMatcherRequest, global::Google.Cloud.ContactCenterInsights.V1.PhraseMatcher>(serviceImpl.GetPhraseMatcher));
      serviceBinder.AddMethod(__Method_ListPhraseMatchers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersRequest, global::Google.Cloud.ContactCenterInsights.V1.ListPhraseMatchersResponse>(serviceImpl.ListPhraseMatchers));
      serviceBinder.AddMethod(__Method_DeletePhraseMatcher, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.DeletePhraseMatcherRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeletePhraseMatcher));
      serviceBinder.AddMethod(__Method_CalculateStats, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsRequest, global::Google.Cloud.ContactCenterInsights.V1.CalculateStatsResponse>(serviceImpl.CalculateStats));
      serviceBinder.AddMethod(__Method_GetSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.GetSettingsRequest, global::Google.Cloud.ContactCenterInsights.V1.Settings>(serviceImpl.GetSettings));
      serviceBinder.AddMethod(__Method_UpdateSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ContactCenterInsights.V1.UpdateSettingsRequest, global::Google.Cloud.ContactCenterInsights.V1.Settings>(serviceImpl.UpdateSettings));
    }

  }
}
#endregion
