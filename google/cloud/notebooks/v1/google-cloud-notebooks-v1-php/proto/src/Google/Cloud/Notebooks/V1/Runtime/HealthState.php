<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/notebooks/v1/runtime.proto

namespace Google\Cloud\Notebooks\V1\Runtime;

use UnexpectedValueException;

/**
 * The runtime substate.
 *
 * Protobuf type <code>google.cloud.notebooks.v1.Runtime.HealthState</code>
 */
class HealthState
{
    /**
     * The runtime substate is unknown.
     *
     * Generated from protobuf enum <code>HEALTH_STATE_UNSPECIFIED = 0;</code>
     */
    const HEALTH_STATE_UNSPECIFIED = 0;
    /**
     * The runtime is known to be in an healthy state
     * (for example, critical daemons are running)
     * Applies to ACTIVE state.
     *
     * Generated from protobuf enum <code>HEALTHY = 1;</code>
     */
    const HEALTHY = 1;
    /**
     * The runtime is known to be in an unhealthy state
     * (for example, critical daemons are not running)
     * Applies to ACTIVE state.
     *
     * Generated from protobuf enum <code>UNHEALTHY = 2;</code>
     */
    const UNHEALTHY = 2;

    private static $valueToName = [
        self::HEALTH_STATE_UNSPECIFIED => 'HEALTH_STATE_UNSPECIFIED',
        self::HEALTHY => 'HEALTHY',
        self::UNHEALTHY => 'UNHEALTHY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(HealthState::class, \Google\Cloud\Notebooks\V1\Runtime_HealthState::class);

