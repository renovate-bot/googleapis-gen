<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storage/v2/storage.proto

namespace Google\Storage\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describes an attempt to insert an object, possibly over multiple requests.
 *
 * Generated from protobuf message <code>google.storage.v2.WriteObjectSpec</code>
 */
class WriteObjectSpec extends \Google\Protobuf\Internal\Message
{
    /**
     * Destination object, including its name and its metadata.
     *
     * Generated from protobuf field <code>.google.storage.v2.Object resource = 1;</code>
     */
    protected $resource = null;
    /**
     * Apply a predefined set of access controls to this object.
     *
     * Generated from protobuf field <code>.google.storage.v2.PredefinedObjectAcl predefined_acl = 2;</code>
     */
    protected $predefined_acl = 0;
    /**
     * Makes the operation conditional on whether the object's current
     * generation matches the given value. Setting to 0 makes the operation
     * succeed only if there are no live versions of the object.
     *
     * Generated from protobuf field <code>optional int64 if_generation_match = 3;</code>
     */
    protected $if_generation_match = null;
    /**
     * Makes the operation conditional on whether the object's current
     * generation does not match the given value. If no live object exists, the
     * precondition fails. Setting to 0 makes the operation succeed only if
     * there is a live version of the object.
     *
     * Generated from protobuf field <code>optional int64 if_generation_not_match = 4;</code>
     */
    protected $if_generation_not_match = null;
    /**
     * Makes the operation conditional on whether the object's current
     * metageneration matches the given value.
     *
     * Generated from protobuf field <code>optional int64 if_metageneration_match = 5;</code>
     */
    protected $if_metageneration_match = null;
    /**
     * Makes the operation conditional on whether the object's current
     * metageneration does not match the given value.
     *
     * Generated from protobuf field <code>optional int64 if_metageneration_not_match = 6;</code>
     */
    protected $if_metageneration_not_match = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Storage\V2\Object $resource
     *           Destination object, including its name and its metadata.
     *     @type int $predefined_acl
     *           Apply a predefined set of access controls to this object.
     *     @type int|string $if_generation_match
     *           Makes the operation conditional on whether the object's current
     *           generation matches the given value. Setting to 0 makes the operation
     *           succeed only if there are no live versions of the object.
     *     @type int|string $if_generation_not_match
     *           Makes the operation conditional on whether the object's current
     *           generation does not match the given value. If no live object exists, the
     *           precondition fails. Setting to 0 makes the operation succeed only if
     *           there is a live version of the object.
     *     @type int|string $if_metageneration_match
     *           Makes the operation conditional on whether the object's current
     *           metageneration matches the given value.
     *     @type int|string $if_metageneration_not_match
     *           Makes the operation conditional on whether the object's current
     *           metageneration does not match the given value.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Storage\V2\Storage::initOnce();
        parent::__construct($data);
    }

    /**
     * Destination object, including its name and its metadata.
     *
     * Generated from protobuf field <code>.google.storage.v2.Object resource = 1;</code>
     * @return \Google\Storage\V2\Object|null
     */
    public function getResource()
    {
        return $this->resource;
    }

    public function hasResource()
    {
        return isset($this->resource);
    }

    public function clearResource()
    {
        unset($this->resource);
    }

    /**
     * Destination object, including its name and its metadata.
     *
     * Generated from protobuf field <code>.google.storage.v2.Object resource = 1;</code>
     * @param \Google\Storage\V2\Object $var
     * @return $this
     */
    public function setResource($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\Object::class);
        $this->resource = $var;

        return $this;
    }

    /**
     * Apply a predefined set of access controls to this object.
     *
     * Generated from protobuf field <code>.google.storage.v2.PredefinedObjectAcl predefined_acl = 2;</code>
     * @return int
     */
    public function getPredefinedAcl()
    {
        return $this->predefined_acl;
    }

    /**
     * Apply a predefined set of access controls to this object.
     *
     * Generated from protobuf field <code>.google.storage.v2.PredefinedObjectAcl predefined_acl = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPredefinedAcl($var)
    {
        GPBUtil::checkEnum($var, \Google\Storage\V2\PredefinedObjectAcl::class);
        $this->predefined_acl = $var;

        return $this;
    }

    /**
     * Makes the operation conditional on whether the object's current
     * generation matches the given value. Setting to 0 makes the operation
     * succeed only if there are no live versions of the object.
     *
     * Generated from protobuf field <code>optional int64 if_generation_match = 3;</code>
     * @return int|string
     */
    public function getIfGenerationMatch()
    {
        return isset($this->if_generation_match) ? $this->if_generation_match : 0;
    }

    public function hasIfGenerationMatch()
    {
        return isset($this->if_generation_match);
    }

    public function clearIfGenerationMatch()
    {
        unset($this->if_generation_match);
    }

    /**
     * Makes the operation conditional on whether the object's current
     * generation matches the given value. Setting to 0 makes the operation
     * succeed only if there are no live versions of the object.
     *
     * Generated from protobuf field <code>optional int64 if_generation_match = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIfGenerationMatch($var)
    {
        GPBUtil::checkInt64($var);
        $this->if_generation_match = $var;

        return $this;
    }

    /**
     * Makes the operation conditional on whether the object's current
     * generation does not match the given value. If no live object exists, the
     * precondition fails. Setting to 0 makes the operation succeed only if
     * there is a live version of the object.
     *
     * Generated from protobuf field <code>optional int64 if_generation_not_match = 4;</code>
     * @return int|string
     */
    public function getIfGenerationNotMatch()
    {
        return isset($this->if_generation_not_match) ? $this->if_generation_not_match : 0;
    }

    public function hasIfGenerationNotMatch()
    {
        return isset($this->if_generation_not_match);
    }

    public function clearIfGenerationNotMatch()
    {
        unset($this->if_generation_not_match);
    }

    /**
     * Makes the operation conditional on whether the object's current
     * generation does not match the given value. If no live object exists, the
     * precondition fails. Setting to 0 makes the operation succeed only if
     * there is a live version of the object.
     *
     * Generated from protobuf field <code>optional int64 if_generation_not_match = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIfGenerationNotMatch($var)
    {
        GPBUtil::checkInt64($var);
        $this->if_generation_not_match = $var;

        return $this;
    }

    /**
     * Makes the operation conditional on whether the object's current
     * metageneration matches the given value.
     *
     * Generated from protobuf field <code>optional int64 if_metageneration_match = 5;</code>
     * @return int|string
     */
    public function getIfMetagenerationMatch()
    {
        return isset($this->if_metageneration_match) ? $this->if_metageneration_match : 0;
    }

    public function hasIfMetagenerationMatch()
    {
        return isset($this->if_metageneration_match);
    }

    public function clearIfMetagenerationMatch()
    {
        unset($this->if_metageneration_match);
    }

    /**
     * Makes the operation conditional on whether the object's current
     * metageneration matches the given value.
     *
     * Generated from protobuf field <code>optional int64 if_metageneration_match = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIfMetagenerationMatch($var)
    {
        GPBUtil::checkInt64($var);
        $this->if_metageneration_match = $var;

        return $this;
    }

    /**
     * Makes the operation conditional on whether the object's current
     * metageneration does not match the given value.
     *
     * Generated from protobuf field <code>optional int64 if_metageneration_not_match = 6;</code>
     * @return int|string
     */
    public function getIfMetagenerationNotMatch()
    {
        return isset($this->if_metageneration_not_match) ? $this->if_metageneration_not_match : 0;
    }

    public function hasIfMetagenerationNotMatch()
    {
        return isset($this->if_metageneration_not_match);
    }

    public function clearIfMetagenerationNotMatch()
    {
        unset($this->if_metageneration_not_match);
    }

    /**
     * Makes the operation conditional on whether the object's current
     * metageneration does not match the given value.
     *
     * Generated from protobuf field <code>optional int64 if_metageneration_not_match = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIfMetagenerationNotMatch($var)
    {
        GPBUtil::checkInt64($var);
        $this->if_metageneration_not_match = $var;

        return $this;
    }

}

