<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storage/v2/storage.proto

namespace Google\Storage\V2\Bucket\Lifecycle\Rule;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A condition of an object which triggers some action.
 *
 * Generated from protobuf message <code>google.storage.v2.Bucket.Lifecycle.Rule.Condition</code>
 */
class Condition extends \Google\Protobuf\Internal\Message
{
    /**
     * Age of an object (in days). This condition is satisfied when an
     * object reaches the specified age.
     * A value of 0 indicates that all objects immediately match this
     * condition.
     *
     * Generated from protobuf field <code>optional int32 age_days = 1;</code>
     */
    protected $age_days = null;
    /**
     * This condition is satisfied when an object is created before midnight
     * of the specified date in UTC.
     *
     * Generated from protobuf field <code>.google.type.Date created_before = 2;</code>
     */
    protected $created_before = null;
    /**
     * Relevant only for versioned objects. If the value is
     * `true`, this condition matches live objects; if the value
     * is `false`, it matches archived objects.
     *
     * Generated from protobuf field <code>optional bool is_live = 3;</code>
     */
    protected $is_live = null;
    /**
     * Relevant only for versioned objects. If the value is N, this
     * condition is satisfied when there are at least N versions (including
     * the live version) newer than this version of the object.
     *
     * Generated from protobuf field <code>optional int32 num_newer_versions = 4;</code>
     */
    protected $num_newer_versions = null;
    /**
     * Objects having any of the storage classes specified by this condition
     * will be matched. Values include `MULTI_REGIONAL`, `REGIONAL`,
     * `NEARLINE`, `COLDLINE`, `STANDARD`, and
     * `DURABLE_REDUCED_AVAILABILITY`.
     *
     * Generated from protobuf field <code>repeated string matches_storage_class = 5;</code>
     */
    private $matches_storage_class;
    /**
     * Number of days that have elapsed since the custom timestamp set on an
     * object.
     * The value of the field must be a nonnegative integer.
     *
     * Generated from protobuf field <code>optional int32 days_since_custom_time = 7;</code>
     */
    protected $days_since_custom_time = null;
    /**
     * An object matches this condition if the custom timestamp set on the
     * object is before the specified date in UTC.
     *
     * Generated from protobuf field <code>.google.type.Date custom_time_before = 8;</code>
     */
    protected $custom_time_before = null;
    /**
     * This condition is relevant only for versioned objects. An object
     * version satisfies this condition only if these many days have been
     * passed since it became noncurrent. The value of the field must be a
     * nonnegative integer. If it's zero, the object version will become
     * eligible for Lifecycle action as soon as it becomes noncurrent.
     *
     * Generated from protobuf field <code>optional int32 days_since_noncurrent_time = 9;</code>
     */
    protected $days_since_noncurrent_time = null;
    /**
     * This condition is relevant only for versioned objects. An object
     * version satisfies this condition only if it became noncurrent before
     * the specified date in UTC.
     *
     * Generated from protobuf field <code>.google.type.Date noncurrent_time_before = 10;</code>
     */
    protected $noncurrent_time_before = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $age_days
     *           Age of an object (in days). This condition is satisfied when an
     *           object reaches the specified age.
     *           A value of 0 indicates that all objects immediately match this
     *           condition.
     *     @type \Google\Type\Date $created_before
     *           This condition is satisfied when an object is created before midnight
     *           of the specified date in UTC.
     *     @type bool $is_live
     *           Relevant only for versioned objects. If the value is
     *           `true`, this condition matches live objects; if the value
     *           is `false`, it matches archived objects.
     *     @type int $num_newer_versions
     *           Relevant only for versioned objects. If the value is N, this
     *           condition is satisfied when there are at least N versions (including
     *           the live version) newer than this version of the object.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $matches_storage_class
     *           Objects having any of the storage classes specified by this condition
     *           will be matched. Values include `MULTI_REGIONAL`, `REGIONAL`,
     *           `NEARLINE`, `COLDLINE`, `STANDARD`, and
     *           `DURABLE_REDUCED_AVAILABILITY`.
     *     @type int $days_since_custom_time
     *           Number of days that have elapsed since the custom timestamp set on an
     *           object.
     *           The value of the field must be a nonnegative integer.
     *     @type \Google\Type\Date $custom_time_before
     *           An object matches this condition if the custom timestamp set on the
     *           object is before the specified date in UTC.
     *     @type int $days_since_noncurrent_time
     *           This condition is relevant only for versioned objects. An object
     *           version satisfies this condition only if these many days have been
     *           passed since it became noncurrent. The value of the field must be a
     *           nonnegative integer. If it's zero, the object version will become
     *           eligible for Lifecycle action as soon as it becomes noncurrent.
     *     @type \Google\Type\Date $noncurrent_time_before
     *           This condition is relevant only for versioned objects. An object
     *           version satisfies this condition only if it became noncurrent before
     *           the specified date in UTC.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Storage\V2\Storage::initOnce();
        parent::__construct($data);
    }

    /**
     * Age of an object (in days). This condition is satisfied when an
     * object reaches the specified age.
     * A value of 0 indicates that all objects immediately match this
     * condition.
     *
     * Generated from protobuf field <code>optional int32 age_days = 1;</code>
     * @return int
     */
    public function getAgeDays()
    {
        return isset($this->age_days) ? $this->age_days : 0;
    }

    public function hasAgeDays()
    {
        return isset($this->age_days);
    }

    public function clearAgeDays()
    {
        unset($this->age_days);
    }

    /**
     * Age of an object (in days). This condition is satisfied when an
     * object reaches the specified age.
     * A value of 0 indicates that all objects immediately match this
     * condition.
     *
     * Generated from protobuf field <code>optional int32 age_days = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setAgeDays($var)
    {
        GPBUtil::checkInt32($var);
        $this->age_days = $var;

        return $this;
    }

    /**
     * This condition is satisfied when an object is created before midnight
     * of the specified date in UTC.
     *
     * Generated from protobuf field <code>.google.type.Date created_before = 2;</code>
     * @return \Google\Type\Date|null
     */
    public function getCreatedBefore()
    {
        return $this->created_before;
    }

    public function hasCreatedBefore()
    {
        return isset($this->created_before);
    }

    public function clearCreatedBefore()
    {
        unset($this->created_before);
    }

    /**
     * This condition is satisfied when an object is created before midnight
     * of the specified date in UTC.
     *
     * Generated from protobuf field <code>.google.type.Date created_before = 2;</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setCreatedBefore($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->created_before = $var;

        return $this;
    }

    /**
     * Relevant only for versioned objects. If the value is
     * `true`, this condition matches live objects; if the value
     * is `false`, it matches archived objects.
     *
     * Generated from protobuf field <code>optional bool is_live = 3;</code>
     * @return bool
     */
    public function getIsLive()
    {
        return isset($this->is_live) ? $this->is_live : false;
    }

    public function hasIsLive()
    {
        return isset($this->is_live);
    }

    public function clearIsLive()
    {
        unset($this->is_live);
    }

    /**
     * Relevant only for versioned objects. If the value is
     * `true`, this condition matches live objects; if the value
     * is `false`, it matches archived objects.
     *
     * Generated from protobuf field <code>optional bool is_live = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsLive($var)
    {
        GPBUtil::checkBool($var);
        $this->is_live = $var;

        return $this;
    }

    /**
     * Relevant only for versioned objects. If the value is N, this
     * condition is satisfied when there are at least N versions (including
     * the live version) newer than this version of the object.
     *
     * Generated from protobuf field <code>optional int32 num_newer_versions = 4;</code>
     * @return int
     */
    public function getNumNewerVersions()
    {
        return isset($this->num_newer_versions) ? $this->num_newer_versions : 0;
    }

    public function hasNumNewerVersions()
    {
        return isset($this->num_newer_versions);
    }

    public function clearNumNewerVersions()
    {
        unset($this->num_newer_versions);
    }

    /**
     * Relevant only for versioned objects. If the value is N, this
     * condition is satisfied when there are at least N versions (including
     * the live version) newer than this version of the object.
     *
     * Generated from protobuf field <code>optional int32 num_newer_versions = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setNumNewerVersions($var)
    {
        GPBUtil::checkInt32($var);
        $this->num_newer_versions = $var;

        return $this;
    }

    /**
     * Objects having any of the storage classes specified by this condition
     * will be matched. Values include `MULTI_REGIONAL`, `REGIONAL`,
     * `NEARLINE`, `COLDLINE`, `STANDARD`, and
     * `DURABLE_REDUCED_AVAILABILITY`.
     *
     * Generated from protobuf field <code>repeated string matches_storage_class = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMatchesStorageClass()
    {
        return $this->matches_storage_class;
    }

    /**
     * Objects having any of the storage classes specified by this condition
     * will be matched. Values include `MULTI_REGIONAL`, `REGIONAL`,
     * `NEARLINE`, `COLDLINE`, `STANDARD`, and
     * `DURABLE_REDUCED_AVAILABILITY`.
     *
     * Generated from protobuf field <code>repeated string matches_storage_class = 5;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMatchesStorageClass($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->matches_storage_class = $arr;

        return $this;
    }

    /**
     * Number of days that have elapsed since the custom timestamp set on an
     * object.
     * The value of the field must be a nonnegative integer.
     *
     * Generated from protobuf field <code>optional int32 days_since_custom_time = 7;</code>
     * @return int
     */
    public function getDaysSinceCustomTime()
    {
        return isset($this->days_since_custom_time) ? $this->days_since_custom_time : 0;
    }

    public function hasDaysSinceCustomTime()
    {
        return isset($this->days_since_custom_time);
    }

    public function clearDaysSinceCustomTime()
    {
        unset($this->days_since_custom_time);
    }

    /**
     * Number of days that have elapsed since the custom timestamp set on an
     * object.
     * The value of the field must be a nonnegative integer.
     *
     * Generated from protobuf field <code>optional int32 days_since_custom_time = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setDaysSinceCustomTime($var)
    {
        GPBUtil::checkInt32($var);
        $this->days_since_custom_time = $var;

        return $this;
    }

    /**
     * An object matches this condition if the custom timestamp set on the
     * object is before the specified date in UTC.
     *
     * Generated from protobuf field <code>.google.type.Date custom_time_before = 8;</code>
     * @return \Google\Type\Date|null
     */
    public function getCustomTimeBefore()
    {
        return $this->custom_time_before;
    }

    public function hasCustomTimeBefore()
    {
        return isset($this->custom_time_before);
    }

    public function clearCustomTimeBefore()
    {
        unset($this->custom_time_before);
    }

    /**
     * An object matches this condition if the custom timestamp set on the
     * object is before the specified date in UTC.
     *
     * Generated from protobuf field <code>.google.type.Date custom_time_before = 8;</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setCustomTimeBefore($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->custom_time_before = $var;

        return $this;
    }

    /**
     * This condition is relevant only for versioned objects. An object
     * version satisfies this condition only if these many days have been
     * passed since it became noncurrent. The value of the field must be a
     * nonnegative integer. If it's zero, the object version will become
     * eligible for Lifecycle action as soon as it becomes noncurrent.
     *
     * Generated from protobuf field <code>optional int32 days_since_noncurrent_time = 9;</code>
     * @return int
     */
    public function getDaysSinceNoncurrentTime()
    {
        return isset($this->days_since_noncurrent_time) ? $this->days_since_noncurrent_time : 0;
    }

    public function hasDaysSinceNoncurrentTime()
    {
        return isset($this->days_since_noncurrent_time);
    }

    public function clearDaysSinceNoncurrentTime()
    {
        unset($this->days_since_noncurrent_time);
    }

    /**
     * This condition is relevant only for versioned objects. An object
     * version satisfies this condition only if these many days have been
     * passed since it became noncurrent. The value of the field must be a
     * nonnegative integer. If it's zero, the object version will become
     * eligible for Lifecycle action as soon as it becomes noncurrent.
     *
     * Generated from protobuf field <code>optional int32 days_since_noncurrent_time = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setDaysSinceNoncurrentTime($var)
    {
        GPBUtil::checkInt32($var);
        $this->days_since_noncurrent_time = $var;

        return $this;
    }

    /**
     * This condition is relevant only for versioned objects. An object
     * version satisfies this condition only if it became noncurrent before
     * the specified date in UTC.
     *
     * Generated from protobuf field <code>.google.type.Date noncurrent_time_before = 10;</code>
     * @return \Google\Type\Date|null
     */
    public function getNoncurrentTimeBefore()
    {
        return $this->noncurrent_time_before;
    }

    public function hasNoncurrentTimeBefore()
    {
        return isset($this->noncurrent_time_before);
    }

    public function clearNoncurrentTimeBefore()
    {
        unset($this->noncurrent_time_before);
    }

    /**
     * This condition is relevant only for versioned objects. An object
     * version satisfies this condition only if it became noncurrent before
     * the specified date in UTC.
     *
     * Generated from protobuf field <code>.google.type.Date noncurrent_time_before = 10;</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setNoncurrentTimeBefore($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->noncurrent_time_before = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Condition::class, \Google\Storage\V2\Bucket_Lifecycle_Rule_Condition::class);

