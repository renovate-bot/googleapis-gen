<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storage/v2/storage.proto

namespace Google\Storage\V2\Bucket\IamConfig;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Settings for Uniform Bucket level access.
 * See https://cloud.google.com/storage/docs/uniform-bucket-level-access.
 *
 * Generated from protobuf message <code>google.storage.v2.Bucket.IamConfig.UniformBucketLevelAccess</code>
 */
class UniformBucketLevelAccess extends \Google\Protobuf\Internal\Message
{
    /**
     * If set, access checks only use bucket-level IAM policies or above.
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     */
    protected $enabled = false;
    /**
     * The deadline time for changing
     * `iamConfig.uniformBucketLevelAccess.enabled` from
     * true to false in [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * Mutable until the specified deadline is reached, but not afterward.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp lock_time = 2;</code>
     */
    protected $lock_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enabled
     *           If set, access checks only use bucket-level IAM policies or above.
     *     @type \Google\Protobuf\Timestamp $lock_time
     *           The deadline time for changing
     *           `iamConfig.uniformBucketLevelAccess.enabled` from
     *           true to false in [RFC 3339](https://tools.ietf.org/html/rfc3339).
     *           Mutable until the specified deadline is reached, but not afterward.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Storage\V2\Storage::initOnce();
        parent::__construct($data);
    }

    /**
     * If set, access checks only use bucket-level IAM policies or above.
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     * @return bool
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     * If set, access checks only use bucket-level IAM policies or above.
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->enabled = $var;

        return $this;
    }

    /**
     * The deadline time for changing
     * `iamConfig.uniformBucketLevelAccess.enabled` from
     * true to false in [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * Mutable until the specified deadline is reached, but not afterward.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp lock_time = 2;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getLockTime()
    {
        return $this->lock_time;
    }

    public function hasLockTime()
    {
        return isset($this->lock_time);
    }

    public function clearLockTime()
    {
        unset($this->lock_time);
    }

    /**
     * The deadline time for changing
     * `iamConfig.uniformBucketLevelAccess.enabled` from
     * true to false in [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * Mutable until the specified deadline is reached, but not afterward.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp lock_time = 2;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setLockTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->lock_time = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(UniformBucketLevelAccess::class, \Google\Storage\V2\Bucket_IamConfig_UniformBucketLevelAccess::class);

