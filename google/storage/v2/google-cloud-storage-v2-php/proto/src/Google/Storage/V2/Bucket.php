<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storage/v2/storage.proto

namespace Google\Storage\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A bucket.
 *
 * Generated from protobuf message <code>google.storage.v2.Bucket</code>
 */
class Bucket extends \Google\Protobuf\Internal\Message
{
    /**
     * Immutable. The name of the bucket.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    protected $name = '';
    /**
     * Output only. The user-chosen part of the bucket name. The `{bucket}` portion of the
     * `name` field. For globally unique buckets, this is equal to the "bucket
     * name" of other Cloud Storage APIs. Example: "pub".
     *
     * Generated from protobuf field <code>string bucket_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $bucket_id = '';
    /**
     * Immutable. The project which owns this bucket.
     *
     * Generated from protobuf field <code>string project = 3 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {</code>
     */
    protected $project = '';
    /**
     * Output only. The metadata generation of this bucket.
     * Attempting to set or update this field will result in a
     * [FieldViolation][google.rpc.BadRequest.FieldViolation].
     *
     * Generated from protobuf field <code>int64 metageneration = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $metageneration = 0;
    /**
     * Immutable. The location of the bucket. Object data for objects in the bucket resides
     * in physical storage within this region.  Defaults to `US`. See the
     * [https://developers.google.com/storage/docs/concepts-techniques#specifyinglocations"][developer's
     * guide] for the authoritative list. Attempting to update this field after
     * the bucket is created will result in an error.
     *
     * Generated from protobuf field <code>string location = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    protected $location = '';
    /**
     * Output only. The location type of the bucket (region, dual-region, multi-region, etc).
     *
     * Generated from protobuf field <code>string location_type = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $location_type = '';
    /**
     * The bucket's default storage class, used whenever no storageClass is
     * specified for a newly-created object. This defines how objects in the
     * bucket are stored and determines the SLA and the cost of storage.
     * If this value is not specified when the bucket is created, it will default
     * to `STANDARD`. For more information, see
     * https://developers.google.com/storage/docs/storage-classes.
     *
     * Generated from protobuf field <code>string storage_class = 7;</code>
     */
    protected $storage_class = '';
    /**
     * Access controls on the bucket.
     * If iamConfig.uniformBucketLevelAccess is enabled on this bucket,
     * requests to set, read, or modify acl is an error.
     *
     * Generated from protobuf field <code>repeated .google.storage.v2.BucketAccessControl acl = 8;</code>
     */
    private $acl;
    /**
     * Default access controls to apply to new objects when no ACL is provided.
     * If iamConfig.uniformBucketLevelAccess is enabled on this bucket,
     * requests to set, read, or modify acl is an error.
     *
     * Generated from protobuf field <code>repeated .google.storage.v2.ObjectAccessControl default_object_acl = 9;</code>
     */
    private $default_object_acl;
    /**
     * The bucket's lifecycle config. See
     * [https://developers.google.com/storage/docs/lifecycle]Lifecycle Management]
     * for more information.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Lifecycle lifecycle = 10;</code>
     */
    protected $lifecycle = null;
    /**
     * Output only. The creation time of the bucket in
     * [https://tools.ietf.org/html/rfc3339][RFC 3339] format.
     * Attempting to set or update this field will result in a
     * [FieldViolation][google.rpc.BadRequest.FieldViolation].
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $create_time = null;
    /**
     * The bucket's [https://www.w3.org/TR/cors/][Cross-Origin Resource Sharing]
     * (CORS) config.
     *
     * Generated from protobuf field <code>repeated .google.storage.v2.Bucket.Cors cors = 12;</code>
     */
    private $cors;
    /**
     * Output only. The modification time of the bucket.
     * Attempting to set or update this field will result in a
     * [FieldViolation][google.rpc.BadRequest.FieldViolation].
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $update_time = null;
    /**
     * The default value for event-based hold on newly created objects in this
     * bucket.  Event-based hold is a way to retain objects indefinitely until an
     * event occurs, signified by the
     * hold's release. After being released, such objects will be subject to
     * bucket-level retention (if any).  One sample use case of this flag is for
     * banks to hold loan documents for at least 3 years after loan is paid in
     * full. Here, bucket-level retention is 3 years and the event is loan being
     * paid in full. In this example, these objects will be held intact for any
     * number of years until the event has occurred (event-based hold on the
     * object is released) and then 3 more years after that. That means retention
     * duration of the objects begins from the moment event-based hold
     * transitioned from true to false.  Objects under event-based hold cannot be
     * deleted, overwritten or archived until the hold is removed.
     *
     * Generated from protobuf field <code>bool default_event_based_hold = 14;</code>
     */
    protected $default_event_based_hold = false;
    /**
     * User-provided labels, in key/value pairs.
     *
     * Generated from protobuf field <code>map<string, string> labels = 15;</code>
     */
    private $labels;
    /**
     * The bucket's website config, controlling how the service behaves
     * when accessing bucket contents as a web site. See the
     * [https://cloud.google.com/storage/docs/static-website][Static Website
     * Examples] for more information.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Website website = 16;</code>
     */
    protected $website = null;
    /**
     * The bucket's versioning config.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Versioning versioning = 17;</code>
     */
    protected $versioning = null;
    /**
     * The bucket's logging config, which defines the destination bucket
     * and name prefix (if any) for the current bucket's logs.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Logging logging = 18;</code>
     */
    protected $logging = null;
    /**
     * Output only. The owner of the bucket. This is always the project team's owner group.
     *
     * Generated from protobuf field <code>.google.storage.v2.Owner owner = 19 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $owner = null;
    /**
     * Encryption config for a bucket.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Encryption encryption = 20;</code>
     */
    protected $encryption = null;
    /**
     * The bucket's billing config.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Billing billing = 21;</code>
     */
    protected $billing = null;
    /**
     * The bucket's retention policy. The retention policy enforces a minimum
     * retention time for all objects contained in the bucket, based on their
     * creation time. Any attempt to overwrite or delete objects younger than the
     * retention period will result in a PERMISSION_DENIED error.  An unlocked
     * retention policy can be modified or removed from the bucket via a
     * storage.buckets.update operation. A locked retention policy cannot be
     * removed or shortened in duration for the lifetime of the bucket.
     * Attempting to remove or decrease period of a locked retention policy will
     * result in a PERMISSION_DENIED error.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.RetentionPolicy retention_policy = 22;</code>
     */
    protected $retention_policy = null;
    /**
     * The bucket's IAM config.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.IamConfig iam_config = 23;</code>
     */
    protected $iam_config = null;
    /**
     * Immutable. The zone or zones from which the bucket is intended to use zonal quota.
     * Requests for data from outside the specified affinities are still allowed
     * but won't be able to use zonal quota. The values are case-insensitive.
     * Attempting to update this field after bucket is created will result in an
     * error.
     *
     * Generated from protobuf field <code>repeated string zone_affinity = 24 [deprecated = true, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @deprecated
     */
    private $zone_affinity;
    /**
     * Reserved for future use.
     *
     * Generated from protobuf field <code>bool satisfies_pzs = 25;</code>
     */
    protected $satisfies_pzs = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Immutable. The name of the bucket.
     *     @type string $bucket_id
     *           Output only. The user-chosen part of the bucket name. The `{bucket}` portion of the
     *           `name` field. For globally unique buckets, this is equal to the "bucket
     *           name" of other Cloud Storage APIs. Example: "pub".
     *     @type string $project
     *           Immutable. The project which owns this bucket.
     *     @type int|string $metageneration
     *           Output only. The metadata generation of this bucket.
     *           Attempting to set or update this field will result in a
     *           [FieldViolation][google.rpc.BadRequest.FieldViolation].
     *     @type string $location
     *           Immutable. The location of the bucket. Object data for objects in the bucket resides
     *           in physical storage within this region.  Defaults to `US`. See the
     *           [https://developers.google.com/storage/docs/concepts-techniques#specifyinglocations"][developer's
     *           guide] for the authoritative list. Attempting to update this field after
     *           the bucket is created will result in an error.
     *     @type string $location_type
     *           Output only. The location type of the bucket (region, dual-region, multi-region, etc).
     *     @type string $storage_class
     *           The bucket's default storage class, used whenever no storageClass is
     *           specified for a newly-created object. This defines how objects in the
     *           bucket are stored and determines the SLA and the cost of storage.
     *           If this value is not specified when the bucket is created, it will default
     *           to `STANDARD`. For more information, see
     *           https://developers.google.com/storage/docs/storage-classes.
     *     @type \Google\Storage\V2\BucketAccessControl[]|\Google\Protobuf\Internal\RepeatedField $acl
     *           Access controls on the bucket.
     *           If iamConfig.uniformBucketLevelAccess is enabled on this bucket,
     *           requests to set, read, or modify acl is an error.
     *     @type \Google\Storage\V2\ObjectAccessControl[]|\Google\Protobuf\Internal\RepeatedField $default_object_acl
     *           Default access controls to apply to new objects when no ACL is provided.
     *           If iamConfig.uniformBucketLevelAccess is enabled on this bucket,
     *           requests to set, read, or modify acl is an error.
     *     @type \Google\Storage\V2\Bucket\Lifecycle $lifecycle
     *           The bucket's lifecycle config. See
     *           [https://developers.google.com/storage/docs/lifecycle]Lifecycle Management]
     *           for more information.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. The creation time of the bucket in
     *           [https://tools.ietf.org/html/rfc3339][RFC 3339] format.
     *           Attempting to set or update this field will result in a
     *           [FieldViolation][google.rpc.BadRequest.FieldViolation].
     *     @type \Google\Storage\V2\Bucket\Cors[]|\Google\Protobuf\Internal\RepeatedField $cors
     *           The bucket's [https://www.w3.org/TR/cors/][Cross-Origin Resource Sharing]
     *           (CORS) config.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. The modification time of the bucket.
     *           Attempting to set or update this field will result in a
     *           [FieldViolation][google.rpc.BadRequest.FieldViolation].
     *     @type bool $default_event_based_hold
     *           The default value for event-based hold on newly created objects in this
     *           bucket.  Event-based hold is a way to retain objects indefinitely until an
     *           event occurs, signified by the
     *           hold's release. After being released, such objects will be subject to
     *           bucket-level retention (if any).  One sample use case of this flag is for
     *           banks to hold loan documents for at least 3 years after loan is paid in
     *           full. Here, bucket-level retention is 3 years and the event is loan being
     *           paid in full. In this example, these objects will be held intact for any
     *           number of years until the event has occurred (event-based hold on the
     *           object is released) and then 3 more years after that. That means retention
     *           duration of the objects begins from the moment event-based hold
     *           transitioned from true to false.  Objects under event-based hold cannot be
     *           deleted, overwritten or archived until the hold is removed.
     *     @type array|\Google\Protobuf\Internal\MapField $labels
     *           User-provided labels, in key/value pairs.
     *     @type \Google\Storage\V2\Bucket\Website $website
     *           The bucket's website config, controlling how the service behaves
     *           when accessing bucket contents as a web site. See the
     *           [https://cloud.google.com/storage/docs/static-website][Static Website
     *           Examples] for more information.
     *     @type \Google\Storage\V2\Bucket\Versioning $versioning
     *           The bucket's versioning config.
     *     @type \Google\Storage\V2\Bucket\Logging $logging
     *           The bucket's logging config, which defines the destination bucket
     *           and name prefix (if any) for the current bucket's logs.
     *     @type \Google\Storage\V2\Owner $owner
     *           Output only. The owner of the bucket. This is always the project team's owner group.
     *     @type \Google\Storage\V2\Bucket\Encryption $encryption
     *           Encryption config for a bucket.
     *     @type \Google\Storage\V2\Bucket\Billing $billing
     *           The bucket's billing config.
     *     @type \Google\Storage\V2\Bucket\RetentionPolicy $retention_policy
     *           The bucket's retention policy. The retention policy enforces a minimum
     *           retention time for all objects contained in the bucket, based on their
     *           creation time. Any attempt to overwrite or delete objects younger than the
     *           retention period will result in a PERMISSION_DENIED error.  An unlocked
     *           retention policy can be modified or removed from the bucket via a
     *           storage.buckets.update operation. A locked retention policy cannot be
     *           removed or shortened in duration for the lifetime of the bucket.
     *           Attempting to remove or decrease period of a locked retention policy will
     *           result in a PERMISSION_DENIED error.
     *     @type \Google\Storage\V2\Bucket\IamConfig $iam_config
     *           The bucket's IAM config.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $zone_affinity
     *           Immutable. The zone or zones from which the bucket is intended to use zonal quota.
     *           Requests for data from outside the specified affinities are still allowed
     *           but won't be able to use zonal quota. The values are case-insensitive.
     *           Attempting to update this field after bucket is created will result in an
     *           error.
     *     @type bool $satisfies_pzs
     *           Reserved for future use.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Storage\V2\Storage::initOnce();
        parent::__construct($data);
    }

    /**
     * Immutable. The name of the bucket.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Immutable. The name of the bucket.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Output only. The user-chosen part of the bucket name. The `{bucket}` portion of the
     * `name` field. For globally unique buckets, this is equal to the "bucket
     * name" of other Cloud Storage APIs. Example: "pub".
     *
     * Generated from protobuf field <code>string bucket_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getBucketId()
    {
        return $this->bucket_id;
    }

    /**
     * Output only. The user-chosen part of the bucket name. The `{bucket}` portion of the
     * `name` field. For globally unique buckets, this is equal to the "bucket
     * name" of other Cloud Storage APIs. Example: "pub".
     *
     * Generated from protobuf field <code>string bucket_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setBucketId($var)
    {
        GPBUtil::checkString($var, True);
        $this->bucket_id = $var;

        return $this;
    }

    /**
     * Immutable. The project which owns this bucket.
     *
     * Generated from protobuf field <code>string project = 3 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getProject()
    {
        return $this->project;
    }

    /**
     * Immutable. The project which owns this bucket.
     *
     * Generated from protobuf field <code>string project = 3 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setProject($var)
    {
        GPBUtil::checkString($var, True);
        $this->project = $var;

        return $this;
    }

    /**
     * Output only. The metadata generation of this bucket.
     * Attempting to set or update this field will result in a
     * [FieldViolation][google.rpc.BadRequest.FieldViolation].
     *
     * Generated from protobuf field <code>int64 metageneration = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int|string
     */
    public function getMetageneration()
    {
        return $this->metageneration;
    }

    /**
     * Output only. The metadata generation of this bucket.
     * Attempting to set or update this field will result in a
     * [FieldViolation][google.rpc.BadRequest.FieldViolation].
     *
     * Generated from protobuf field <code>int64 metageneration = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int|string $var
     * @return $this
     */
    public function setMetageneration($var)
    {
        GPBUtil::checkInt64($var);
        $this->metageneration = $var;

        return $this;
    }

    /**
     * Immutable. The location of the bucket. Object data for objects in the bucket resides
     * in physical storage within this region.  Defaults to `US`. See the
     * [https://developers.google.com/storage/docs/concepts-techniques#specifyinglocations"][developer's
     * guide] for the authoritative list. Attempting to update this field after
     * the bucket is created will result in an error.
     *
     * Generated from protobuf field <code>string location = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return string
     */
    public function getLocation()
    {
        return $this->location;
    }

    /**
     * Immutable. The location of the bucket. Object data for objects in the bucket resides
     * in physical storage within this region.  Defaults to `US`. See the
     * [https://developers.google.com/storage/docs/concepts-techniques#specifyinglocations"][developer's
     * guide] for the authoritative list. Attempting to update this field after
     * the bucket is created will result in an error.
     *
     * Generated from protobuf field <code>string location = 5 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param string $var
     * @return $this
     */
    public function setLocation($var)
    {
        GPBUtil::checkString($var, True);
        $this->location = $var;

        return $this;
    }

    /**
     * Output only. The location type of the bucket (region, dual-region, multi-region, etc).
     *
     * Generated from protobuf field <code>string location_type = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getLocationType()
    {
        return $this->location_type;
    }

    /**
     * Output only. The location type of the bucket (region, dual-region, multi-region, etc).
     *
     * Generated from protobuf field <code>string location_type = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setLocationType($var)
    {
        GPBUtil::checkString($var, True);
        $this->location_type = $var;

        return $this;
    }

    /**
     * The bucket's default storage class, used whenever no storageClass is
     * specified for a newly-created object. This defines how objects in the
     * bucket are stored and determines the SLA and the cost of storage.
     * If this value is not specified when the bucket is created, it will default
     * to `STANDARD`. For more information, see
     * https://developers.google.com/storage/docs/storage-classes.
     *
     * Generated from protobuf field <code>string storage_class = 7;</code>
     * @return string
     */
    public function getStorageClass()
    {
        return $this->storage_class;
    }

    /**
     * The bucket's default storage class, used whenever no storageClass is
     * specified for a newly-created object. This defines how objects in the
     * bucket are stored and determines the SLA and the cost of storage.
     * If this value is not specified when the bucket is created, it will default
     * to `STANDARD`. For more information, see
     * https://developers.google.com/storage/docs/storage-classes.
     *
     * Generated from protobuf field <code>string storage_class = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setStorageClass($var)
    {
        GPBUtil::checkString($var, True);
        $this->storage_class = $var;

        return $this;
    }

    /**
     * Access controls on the bucket.
     * If iamConfig.uniformBucketLevelAccess is enabled on this bucket,
     * requests to set, read, or modify acl is an error.
     *
     * Generated from protobuf field <code>repeated .google.storage.v2.BucketAccessControl acl = 8;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAcl()
    {
        return $this->acl;
    }

    /**
     * Access controls on the bucket.
     * If iamConfig.uniformBucketLevelAccess is enabled on this bucket,
     * requests to set, read, or modify acl is an error.
     *
     * Generated from protobuf field <code>repeated .google.storage.v2.BucketAccessControl acl = 8;</code>
     * @param \Google\Storage\V2\BucketAccessControl[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAcl($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Storage\V2\BucketAccessControl::class);
        $this->acl = $arr;

        return $this;
    }

    /**
     * Default access controls to apply to new objects when no ACL is provided.
     * If iamConfig.uniformBucketLevelAccess is enabled on this bucket,
     * requests to set, read, or modify acl is an error.
     *
     * Generated from protobuf field <code>repeated .google.storage.v2.ObjectAccessControl default_object_acl = 9;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDefaultObjectAcl()
    {
        return $this->default_object_acl;
    }

    /**
     * Default access controls to apply to new objects when no ACL is provided.
     * If iamConfig.uniformBucketLevelAccess is enabled on this bucket,
     * requests to set, read, or modify acl is an error.
     *
     * Generated from protobuf field <code>repeated .google.storage.v2.ObjectAccessControl default_object_acl = 9;</code>
     * @param \Google\Storage\V2\ObjectAccessControl[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDefaultObjectAcl($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Storage\V2\ObjectAccessControl::class);
        $this->default_object_acl = $arr;

        return $this;
    }

    /**
     * The bucket's lifecycle config. See
     * [https://developers.google.com/storage/docs/lifecycle]Lifecycle Management]
     * for more information.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Lifecycle lifecycle = 10;</code>
     * @return \Google\Storage\V2\Bucket\Lifecycle|null
     */
    public function getLifecycle()
    {
        return $this->lifecycle;
    }

    public function hasLifecycle()
    {
        return isset($this->lifecycle);
    }

    public function clearLifecycle()
    {
        unset($this->lifecycle);
    }

    /**
     * The bucket's lifecycle config. See
     * [https://developers.google.com/storage/docs/lifecycle]Lifecycle Management]
     * for more information.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Lifecycle lifecycle = 10;</code>
     * @param \Google\Storage\V2\Bucket\Lifecycle $var
     * @return $this
     */
    public function setLifecycle($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\Bucket\Lifecycle::class);
        $this->lifecycle = $var;

        return $this;
    }

    /**
     * Output only. The creation time of the bucket in
     * [https://tools.ietf.org/html/rfc3339][RFC 3339] format.
     * Attempting to set or update this field will result in a
     * [FieldViolation][google.rpc.BadRequest.FieldViolation].
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. The creation time of the bucket in
     * [https://tools.ietf.org/html/rfc3339][RFC 3339] format.
     * Attempting to set or update this field will result in a
     * [FieldViolation][google.rpc.BadRequest.FieldViolation].
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * The bucket's [https://www.w3.org/TR/cors/][Cross-Origin Resource Sharing]
     * (CORS) config.
     *
     * Generated from protobuf field <code>repeated .google.storage.v2.Bucket.Cors cors = 12;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCors()
    {
        return $this->cors;
    }

    /**
     * The bucket's [https://www.w3.org/TR/cors/][Cross-Origin Resource Sharing]
     * (CORS) config.
     *
     * Generated from protobuf field <code>repeated .google.storage.v2.Bucket.Cors cors = 12;</code>
     * @param \Google\Storage\V2\Bucket\Cors[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setCors($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Storage\V2\Bucket\Cors::class);
        $this->cors = $arr;

        return $this;
    }

    /**
     * Output only. The modification time of the bucket.
     * Attempting to set or update this field will result in a
     * [FieldViolation][google.rpc.BadRequest.FieldViolation].
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. The modification time of the bucket.
     * Attempting to set or update this field will result in a
     * [FieldViolation][google.rpc.BadRequest.FieldViolation].
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * The default value for event-based hold on newly created objects in this
     * bucket.  Event-based hold is a way to retain objects indefinitely until an
     * event occurs, signified by the
     * hold's release. After being released, such objects will be subject to
     * bucket-level retention (if any).  One sample use case of this flag is for
     * banks to hold loan documents for at least 3 years after loan is paid in
     * full. Here, bucket-level retention is 3 years and the event is loan being
     * paid in full. In this example, these objects will be held intact for any
     * number of years until the event has occurred (event-based hold on the
     * object is released) and then 3 more years after that. That means retention
     * duration of the objects begins from the moment event-based hold
     * transitioned from true to false.  Objects under event-based hold cannot be
     * deleted, overwritten or archived until the hold is removed.
     *
     * Generated from protobuf field <code>bool default_event_based_hold = 14;</code>
     * @return bool
     */
    public function getDefaultEventBasedHold()
    {
        return $this->default_event_based_hold;
    }

    /**
     * The default value for event-based hold on newly created objects in this
     * bucket.  Event-based hold is a way to retain objects indefinitely until an
     * event occurs, signified by the
     * hold's release. After being released, such objects will be subject to
     * bucket-level retention (if any).  One sample use case of this flag is for
     * banks to hold loan documents for at least 3 years after loan is paid in
     * full. Here, bucket-level retention is 3 years and the event is loan being
     * paid in full. In this example, these objects will be held intact for any
     * number of years until the event has occurred (event-based hold on the
     * object is released) and then 3 more years after that. That means retention
     * duration of the objects begins from the moment event-based hold
     * transitioned from true to false.  Objects under event-based hold cannot be
     * deleted, overwritten or archived until the hold is removed.
     *
     * Generated from protobuf field <code>bool default_event_based_hold = 14;</code>
     * @param bool $var
     * @return $this
     */
    public function setDefaultEventBasedHold($var)
    {
        GPBUtil::checkBool($var);
        $this->default_event_based_hold = $var;

        return $this;
    }

    /**
     * User-provided labels, in key/value pairs.
     *
     * Generated from protobuf field <code>map<string, string> labels = 15;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * User-provided labels, in key/value pairs.
     *
     * Generated from protobuf field <code>map<string, string> labels = 15;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setLabels($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;

        return $this;
    }

    /**
     * The bucket's website config, controlling how the service behaves
     * when accessing bucket contents as a web site. See the
     * [https://cloud.google.com/storage/docs/static-website][Static Website
     * Examples] for more information.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Website website = 16;</code>
     * @return \Google\Storage\V2\Bucket\Website|null
     */
    public function getWebsite()
    {
        return $this->website;
    }

    public function hasWebsite()
    {
        return isset($this->website);
    }

    public function clearWebsite()
    {
        unset($this->website);
    }

    /**
     * The bucket's website config, controlling how the service behaves
     * when accessing bucket contents as a web site. See the
     * [https://cloud.google.com/storage/docs/static-website][Static Website
     * Examples] for more information.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Website website = 16;</code>
     * @param \Google\Storage\V2\Bucket\Website $var
     * @return $this
     */
    public function setWebsite($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\Bucket\Website::class);
        $this->website = $var;

        return $this;
    }

    /**
     * The bucket's versioning config.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Versioning versioning = 17;</code>
     * @return \Google\Storage\V2\Bucket\Versioning|null
     */
    public function getVersioning()
    {
        return $this->versioning;
    }

    public function hasVersioning()
    {
        return isset($this->versioning);
    }

    public function clearVersioning()
    {
        unset($this->versioning);
    }

    /**
     * The bucket's versioning config.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Versioning versioning = 17;</code>
     * @param \Google\Storage\V2\Bucket\Versioning $var
     * @return $this
     */
    public function setVersioning($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\Bucket\Versioning::class);
        $this->versioning = $var;

        return $this;
    }

    /**
     * The bucket's logging config, which defines the destination bucket
     * and name prefix (if any) for the current bucket's logs.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Logging logging = 18;</code>
     * @return \Google\Storage\V2\Bucket\Logging|null
     */
    public function getLogging()
    {
        return $this->logging;
    }

    public function hasLogging()
    {
        return isset($this->logging);
    }

    public function clearLogging()
    {
        unset($this->logging);
    }

    /**
     * The bucket's logging config, which defines the destination bucket
     * and name prefix (if any) for the current bucket's logs.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Logging logging = 18;</code>
     * @param \Google\Storage\V2\Bucket\Logging $var
     * @return $this
     */
    public function setLogging($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\Bucket\Logging::class);
        $this->logging = $var;

        return $this;
    }

    /**
     * Output only. The owner of the bucket. This is always the project team's owner group.
     *
     * Generated from protobuf field <code>.google.storage.v2.Owner owner = 19 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Storage\V2\Owner|null
     */
    public function getOwner()
    {
        return $this->owner;
    }

    public function hasOwner()
    {
        return isset($this->owner);
    }

    public function clearOwner()
    {
        unset($this->owner);
    }

    /**
     * Output only. The owner of the bucket. This is always the project team's owner group.
     *
     * Generated from protobuf field <code>.google.storage.v2.Owner owner = 19 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Storage\V2\Owner $var
     * @return $this
     */
    public function setOwner($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\Owner::class);
        $this->owner = $var;

        return $this;
    }

    /**
     * Encryption config for a bucket.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Encryption encryption = 20;</code>
     * @return \Google\Storage\V2\Bucket\Encryption|null
     */
    public function getEncryption()
    {
        return $this->encryption;
    }

    public function hasEncryption()
    {
        return isset($this->encryption);
    }

    public function clearEncryption()
    {
        unset($this->encryption);
    }

    /**
     * Encryption config for a bucket.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Encryption encryption = 20;</code>
     * @param \Google\Storage\V2\Bucket\Encryption $var
     * @return $this
     */
    public function setEncryption($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\Bucket\Encryption::class);
        $this->encryption = $var;

        return $this;
    }

    /**
     * The bucket's billing config.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Billing billing = 21;</code>
     * @return \Google\Storage\V2\Bucket\Billing|null
     */
    public function getBilling()
    {
        return $this->billing;
    }

    public function hasBilling()
    {
        return isset($this->billing);
    }

    public function clearBilling()
    {
        unset($this->billing);
    }

    /**
     * The bucket's billing config.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Billing billing = 21;</code>
     * @param \Google\Storage\V2\Bucket\Billing $var
     * @return $this
     */
    public function setBilling($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\Bucket\Billing::class);
        $this->billing = $var;

        return $this;
    }

    /**
     * The bucket's retention policy. The retention policy enforces a minimum
     * retention time for all objects contained in the bucket, based on their
     * creation time. Any attempt to overwrite or delete objects younger than the
     * retention period will result in a PERMISSION_DENIED error.  An unlocked
     * retention policy can be modified or removed from the bucket via a
     * storage.buckets.update operation. A locked retention policy cannot be
     * removed or shortened in duration for the lifetime of the bucket.
     * Attempting to remove or decrease period of a locked retention policy will
     * result in a PERMISSION_DENIED error.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.RetentionPolicy retention_policy = 22;</code>
     * @return \Google\Storage\V2\Bucket\RetentionPolicy|null
     */
    public function getRetentionPolicy()
    {
        return $this->retention_policy;
    }

    public function hasRetentionPolicy()
    {
        return isset($this->retention_policy);
    }

    public function clearRetentionPolicy()
    {
        unset($this->retention_policy);
    }

    /**
     * The bucket's retention policy. The retention policy enforces a minimum
     * retention time for all objects contained in the bucket, based on their
     * creation time. Any attempt to overwrite or delete objects younger than the
     * retention period will result in a PERMISSION_DENIED error.  An unlocked
     * retention policy can be modified or removed from the bucket via a
     * storage.buckets.update operation. A locked retention policy cannot be
     * removed or shortened in duration for the lifetime of the bucket.
     * Attempting to remove or decrease period of a locked retention policy will
     * result in a PERMISSION_DENIED error.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.RetentionPolicy retention_policy = 22;</code>
     * @param \Google\Storage\V2\Bucket\RetentionPolicy $var
     * @return $this
     */
    public function setRetentionPolicy($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\Bucket\RetentionPolicy::class);
        $this->retention_policy = $var;

        return $this;
    }

    /**
     * The bucket's IAM config.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.IamConfig iam_config = 23;</code>
     * @return \Google\Storage\V2\Bucket\IamConfig|null
     */
    public function getIamConfig()
    {
        return $this->iam_config;
    }

    public function hasIamConfig()
    {
        return isset($this->iam_config);
    }

    public function clearIamConfig()
    {
        unset($this->iam_config);
    }

    /**
     * The bucket's IAM config.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.IamConfig iam_config = 23;</code>
     * @param \Google\Storage\V2\Bucket\IamConfig $var
     * @return $this
     */
    public function setIamConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\Bucket\IamConfig::class);
        $this->iam_config = $var;

        return $this;
    }

    /**
     * Immutable. The zone or zones from which the bucket is intended to use zonal quota.
     * Requests for data from outside the specified affinities are still allowed
     * but won't be able to use zonal quota. The values are case-insensitive.
     * Attempting to update this field after bucket is created will result in an
     * error.
     *
     * Generated from protobuf field <code>repeated string zone_affinity = 24 [deprecated = true, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     * @deprecated
     */
    public function getZoneAffinity()
    {
        @trigger_error('zone_affinity is deprecated.', E_USER_DEPRECATED);
        return $this->zone_affinity;
    }

    /**
     * Immutable. The zone or zones from which the bucket is intended to use zonal quota.
     * Requests for data from outside the specified affinities are still allowed
     * but won't be able to use zonal quota. The values are case-insensitive.
     * Attempting to update this field after bucket is created will result in an
     * error.
     *
     * Generated from protobuf field <code>repeated string zone_affinity = 24 [deprecated = true, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     * @deprecated
     */
    public function setZoneAffinity($var)
    {
        @trigger_error('zone_affinity is deprecated.', E_USER_DEPRECATED);
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->zone_affinity = $arr;

        return $this;
    }

    /**
     * Reserved for future use.
     *
     * Generated from protobuf field <code>bool satisfies_pzs = 25;</code>
     * @return bool
     */
    public function getSatisfiesPzs()
    {
        return $this->satisfies_pzs;
    }

    /**
     * Reserved for future use.
     *
     * Generated from protobuf field <code>bool satisfies_pzs = 25;</code>
     * @param bool $var
     * @return $this
     */
    public function setSatisfiesPzs($var)
    {
        GPBUtil::checkBool($var);
        $this->satisfies_pzs = $var;

        return $this;
    }

}

