<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storage/v2/storage.proto

namespace Google\Storage\V2\Bucket\Lifecycle;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A lifecycle Rule, combining an action to take on an object and a
 * condition which will trigger that action.
 *
 * Generated from protobuf message <code>google.storage.v2.Bucket.Lifecycle.Rule</code>
 */
class Rule extends \Google\Protobuf\Internal\Message
{
    /**
     * The action to take.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Lifecycle.Rule.Action action = 1;</code>
     */
    protected $action = null;
    /**
     * The condition(s) under which the action will be taken.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Lifecycle.Rule.Condition condition = 2;</code>
     */
    protected $condition = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Storage\V2\Bucket\Lifecycle\Rule\Action $action
     *           The action to take.
     *     @type \Google\Storage\V2\Bucket\Lifecycle\Rule\Condition $condition
     *           The condition(s) under which the action will be taken.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Storage\V2\Storage::initOnce();
        parent::__construct($data);
    }

    /**
     * The action to take.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Lifecycle.Rule.Action action = 1;</code>
     * @return \Google\Storage\V2\Bucket\Lifecycle\Rule\Action|null
     */
    public function getAction()
    {
        return $this->action;
    }

    public function hasAction()
    {
        return isset($this->action);
    }

    public function clearAction()
    {
        unset($this->action);
    }

    /**
     * The action to take.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Lifecycle.Rule.Action action = 1;</code>
     * @param \Google\Storage\V2\Bucket\Lifecycle\Rule\Action $var
     * @return $this
     */
    public function setAction($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\Bucket\Lifecycle\Rule\Action::class);
        $this->action = $var;

        return $this;
    }

    /**
     * The condition(s) under which the action will be taken.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Lifecycle.Rule.Condition condition = 2;</code>
     * @return \Google\Storage\V2\Bucket\Lifecycle\Rule\Condition|null
     */
    public function getCondition()
    {
        return $this->condition;
    }

    public function hasCondition()
    {
        return isset($this->condition);
    }

    public function clearCondition()
    {
        unset($this->condition);
    }

    /**
     * The condition(s) under which the action will be taken.
     *
     * Generated from protobuf field <code>.google.storage.v2.Bucket.Lifecycle.Rule.Condition condition = 2;</code>
     * @param \Google\Storage\V2\Bucket\Lifecycle\Rule\Condition $var
     * @return $this
     */
    public function setCondition($var)
    {
        GPBUtil::checkMessage($var, \Google\Storage\V2\Bucket\Lifecycle\Rule\Condition::class);
        $this->condition = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Rule::class, \Google\Storage\V2\Bucket_Lifecycle_Rule::class);

