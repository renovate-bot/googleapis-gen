// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/api/serviceusage/v1beta1/serviceusage.proto
// </auto-generated>
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Api.ServiceUsage.V1Beta1 {
  /// <summary>
  /// [Service Usage API](https://cloud.google.com/service-usage/docs/overview)
  /// </summary>
  public static partial class ServiceUsage
  {
    static readonly string __ServiceName = "google.api.serviceusage.v1beta1.ServiceUsage";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.EnableServiceRequest> __Marshaller_google_api_serviceusage_v1beta1_EnableServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.EnableServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.DisableServiceRequest> __Marshaller_google_api_serviceusage_v1beta1_DisableServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.DisableServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.GetServiceRequest> __Marshaller_google_api_serviceusage_v1beta1_GetServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.GetServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.Service> __Marshaller_google_api_serviceusage_v1beta1_Service = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.Service.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.ListServicesRequest> __Marshaller_google_api_serviceusage_v1beta1_ListServicesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.ListServicesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.ListServicesResponse> __Marshaller_google_api_serviceusage_v1beta1_ListServicesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.ListServicesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.BatchEnableServicesRequest> __Marshaller_google_api_serviceusage_v1beta1_BatchEnableServicesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.BatchEnableServicesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsRequest> __Marshaller_google_api_serviceusage_v1beta1_ListConsumerQuotaMetricsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsResponse> __Marshaller_google_api_serviceusage_v1beta1_ListConsumerQuotaMetricsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaMetricRequest> __Marshaller_google_api_serviceusage_v1beta1_GetConsumerQuotaMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaMetric> __Marshaller_google_api_serviceusage_v1beta1_ConsumerQuotaMetric = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaMetric.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaLimitRequest> __Marshaller_google_api_serviceusage_v1beta1_GetConsumerQuotaLimitRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaLimitRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaLimit> __Marshaller_google_api_serviceusage_v1beta1_ConsumerQuotaLimit = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaLimit.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.CreateAdminOverrideRequest> __Marshaller_google_api_serviceusage_v1beta1_CreateAdminOverrideRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.CreateAdminOverrideRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.UpdateAdminOverrideRequest> __Marshaller_google_api_serviceusage_v1beta1_UpdateAdminOverrideRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.UpdateAdminOverrideRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.DeleteAdminOverrideRequest> __Marshaller_google_api_serviceusage_v1beta1_DeleteAdminOverrideRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.DeleteAdminOverrideRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesRequest> __Marshaller_google_api_serviceusage_v1beta1_ListAdminOverridesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesResponse> __Marshaller_google_api_serviceusage_v1beta1_ListAdminOverridesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.ImportAdminOverridesRequest> __Marshaller_google_api_serviceusage_v1beta1_ImportAdminOverridesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.ImportAdminOverridesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.CreateConsumerOverrideRequest> __Marshaller_google_api_serviceusage_v1beta1_CreateConsumerOverrideRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.CreateConsumerOverrideRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.UpdateConsumerOverrideRequest> __Marshaller_google_api_serviceusage_v1beta1_UpdateConsumerOverrideRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.UpdateConsumerOverrideRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.DeleteConsumerOverrideRequest> __Marshaller_google_api_serviceusage_v1beta1_DeleteConsumerOverrideRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.DeleteConsumerOverrideRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesRequest> __Marshaller_google_api_serviceusage_v1beta1_ListConsumerOverridesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesResponse> __Marshaller_google_api_serviceusage_v1beta1_ListConsumerOverridesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.ImportConsumerOverridesRequest> __Marshaller_google_api_serviceusage_v1beta1_ImportConsumerOverridesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.ImportConsumerOverridesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.ServiceUsage.V1Beta1.GenerateServiceIdentityRequest> __Marshaller_google_api_serviceusage_v1beta1_GenerateServiceIdentityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.ServiceUsage.V1Beta1.GenerateServiceIdentityRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.EnableServiceRequest, global::Google.LongRunning.Operation> __Method_EnableService = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.EnableServiceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EnableService",
        __Marshaller_google_api_serviceusage_v1beta1_EnableServiceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.DisableServiceRequest, global::Google.LongRunning.Operation> __Method_DisableService = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.DisableServiceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableService",
        __Marshaller_google_api_serviceusage_v1beta1_DisableServiceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.GetServiceRequest, global::Google.Api.ServiceUsage.V1Beta1.Service> __Method_GetService = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.GetServiceRequest, global::Google.Api.ServiceUsage.V1Beta1.Service>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetService",
        __Marshaller_google_api_serviceusage_v1beta1_GetServiceRequest,
        __Marshaller_google_api_serviceusage_v1beta1_Service);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.ListServicesRequest, global::Google.Api.ServiceUsage.V1Beta1.ListServicesResponse> __Method_ListServices = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.ListServicesRequest, global::Google.Api.ServiceUsage.V1Beta1.ListServicesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListServices",
        __Marshaller_google_api_serviceusage_v1beta1_ListServicesRequest,
        __Marshaller_google_api_serviceusage_v1beta1_ListServicesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.BatchEnableServicesRequest, global::Google.LongRunning.Operation> __Method_BatchEnableServices = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.BatchEnableServicesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchEnableServices",
        __Marshaller_google_api_serviceusage_v1beta1_BatchEnableServicesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsRequest, global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsResponse> __Method_ListConsumerQuotaMetrics = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsRequest, global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListConsumerQuotaMetrics",
        __Marshaller_google_api_serviceusage_v1beta1_ListConsumerQuotaMetricsRequest,
        __Marshaller_google_api_serviceusage_v1beta1_ListConsumerQuotaMetricsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaMetricRequest, global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaMetric> __Method_GetConsumerQuotaMetric = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaMetricRequest, global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaMetric>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetConsumerQuotaMetric",
        __Marshaller_google_api_serviceusage_v1beta1_GetConsumerQuotaMetricRequest,
        __Marshaller_google_api_serviceusage_v1beta1_ConsumerQuotaMetric);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaLimitRequest, global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaLimit> __Method_GetConsumerQuotaLimit = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaLimitRequest, global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaLimit>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetConsumerQuotaLimit",
        __Marshaller_google_api_serviceusage_v1beta1_GetConsumerQuotaLimitRequest,
        __Marshaller_google_api_serviceusage_v1beta1_ConsumerQuotaLimit);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.CreateAdminOverrideRequest, global::Google.LongRunning.Operation> __Method_CreateAdminOverride = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.CreateAdminOverrideRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAdminOverride",
        __Marshaller_google_api_serviceusage_v1beta1_CreateAdminOverrideRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.UpdateAdminOverrideRequest, global::Google.LongRunning.Operation> __Method_UpdateAdminOverride = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.UpdateAdminOverrideRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAdminOverride",
        __Marshaller_google_api_serviceusage_v1beta1_UpdateAdminOverrideRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.DeleteAdminOverrideRequest, global::Google.LongRunning.Operation> __Method_DeleteAdminOverride = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.DeleteAdminOverrideRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAdminOverride",
        __Marshaller_google_api_serviceusage_v1beta1_DeleteAdminOverrideRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesRequest, global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesResponse> __Method_ListAdminOverrides = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesRequest, global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAdminOverrides",
        __Marshaller_google_api_serviceusage_v1beta1_ListAdminOverridesRequest,
        __Marshaller_google_api_serviceusage_v1beta1_ListAdminOverridesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.ImportAdminOverridesRequest, global::Google.LongRunning.Operation> __Method_ImportAdminOverrides = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.ImportAdminOverridesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportAdminOverrides",
        __Marshaller_google_api_serviceusage_v1beta1_ImportAdminOverridesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.CreateConsumerOverrideRequest, global::Google.LongRunning.Operation> __Method_CreateConsumerOverride = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.CreateConsumerOverrideRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateConsumerOverride",
        __Marshaller_google_api_serviceusage_v1beta1_CreateConsumerOverrideRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.UpdateConsumerOverrideRequest, global::Google.LongRunning.Operation> __Method_UpdateConsumerOverride = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.UpdateConsumerOverrideRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateConsumerOverride",
        __Marshaller_google_api_serviceusage_v1beta1_UpdateConsumerOverrideRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.DeleteConsumerOverrideRequest, global::Google.LongRunning.Operation> __Method_DeleteConsumerOverride = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.DeleteConsumerOverrideRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteConsumerOverride",
        __Marshaller_google_api_serviceusage_v1beta1_DeleteConsumerOverrideRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesRequest, global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesResponse> __Method_ListConsumerOverrides = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesRequest, global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListConsumerOverrides",
        __Marshaller_google_api_serviceusage_v1beta1_ListConsumerOverridesRequest,
        __Marshaller_google_api_serviceusage_v1beta1_ListConsumerOverridesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.ImportConsumerOverridesRequest, global::Google.LongRunning.Operation> __Method_ImportConsumerOverrides = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.ImportConsumerOverridesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportConsumerOverrides",
        __Marshaller_google_api_serviceusage_v1beta1_ImportConsumerOverridesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.GenerateServiceIdentityRequest, global::Google.LongRunning.Operation> __Method_GenerateServiceIdentity = new grpc::Method<global::Google.Api.ServiceUsage.V1Beta1.GenerateServiceIdentityRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateServiceIdentity",
        __Marshaller_google_api_serviceusage_v1beta1_GenerateServiceIdentityRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Api.ServiceUsage.V1Beta1.ServiceusageReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ServiceUsage</summary>
    [grpc::BindServiceMethod(typeof(ServiceUsage), "BindService")]
    public abstract partial class ServiceUsageBase
    {
      /// <summary>
      /// Enables a service so that it can be used with a project.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> EnableService(global::Google.Api.ServiceUsage.V1Beta1.EnableServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Disables a service so that it can no longer be used with a project.
      /// This prevents unintended usage that may cause unexpected billing
      /// charges or security leaks.
      ///
      /// It is not valid to call the disable method on a service that is not
      /// currently enabled. Callers will receive a `FAILED_PRECONDITION` status if
      /// the target service is not currently enabled.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DisableService(global::Google.Api.ServiceUsage.V1Beta1.DisableServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the service configuration and enabled state for a given service.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.ServiceUsage.V1Beta1.Service> GetService(global::Google.Api.ServiceUsage.V1Beta1.GetServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all services available to the specified project, and the current
      /// state of those services with respect to the project. The list includes
      /// all public services, all services for which the calling user has the
      /// `servicemanagement.services.bind` permission, and all services that have
      /// already been enabled on the project. The list can be filtered to
      /// only include services in a specific state, for example to only include
      /// services enabled on the project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.ServiceUsage.V1Beta1.ListServicesResponse> ListServices(global::Google.Api.ServiceUsage.V1Beta1.ListServicesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Enables multiple services on a project. The operation is atomic: if
      /// enabling any service fails, then the entire batch fails, and no state
      /// changes occur.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> BatchEnableServices(global::Google.Api.ServiceUsage.V1Beta1.BatchEnableServicesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves a summary of all quota information visible to the service
      /// consumer, organized by service metric. Each metric includes information
      /// about all of its defined limits. Each limit includes the limit
      /// configuration (quota unit, preciseness, default value), the current
      /// effective limit value, and all of the overrides applied to the limit.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsResponse> ListConsumerQuotaMetrics(global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves a summary of quota information for a specific quota metric
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaMetric> GetConsumerQuotaMetric(global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves a summary of quota information for a specific quota limit.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaLimit> GetConsumerQuotaLimit(global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaLimitRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an admin override.
      /// An admin override is applied by an administrator of a parent folder or
      /// parent organization of the consumer receiving the override. An admin
      /// override is intended to limit the amount of quota the consumer can use out
      /// of the total quota pool allocated to all children of the folder or
      /// organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateAdminOverride(global::Google.Api.ServiceUsage.V1Beta1.CreateAdminOverrideRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an admin override.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateAdminOverride(global::Google.Api.ServiceUsage.V1Beta1.UpdateAdminOverrideRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an admin override.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteAdminOverride(global::Google.Api.ServiceUsage.V1Beta1.DeleteAdminOverrideRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all admin overrides on this limit.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesResponse> ListAdminOverrides(global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates or updates multiple admin overrides atomically, all on the
      /// same consumer, but on many different metrics or limits.
      /// The name field in the quota override message should not be set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ImportAdminOverrides(global::Google.Api.ServiceUsage.V1Beta1.ImportAdminOverridesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a consumer override.
      /// A consumer override is applied to the consumer on its own authority to
      /// limit its own quota usage. Consumer overrides cannot be used to grant more
      /// quota than would be allowed by admin overrides, producer overrides, or the
      /// default limit of the service.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateConsumerOverride(global::Google.Api.ServiceUsage.V1Beta1.CreateConsumerOverrideRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a consumer override.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateConsumerOverride(global::Google.Api.ServiceUsage.V1Beta1.UpdateConsumerOverrideRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a consumer override.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteConsumerOverride(global::Google.Api.ServiceUsage.V1Beta1.DeleteConsumerOverrideRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all consumer overrides on this limit.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesResponse> ListConsumerOverrides(global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates or updates multiple consumer overrides atomically, all on the
      /// same consumer, but on many different metrics or limits.
      /// The name field in the quota override message should not be set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ImportConsumerOverrides(global::Google.Api.ServiceUsage.V1Beta1.ImportConsumerOverridesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Generates service identity for service.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> GenerateServiceIdentity(global::Google.Api.ServiceUsage.V1Beta1.GenerateServiceIdentityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ServiceUsage</summary>
    public partial class ServiceUsageClient : grpc::ClientBase<ServiceUsageClient>
    {
      /// <summary>Creates a new client for ServiceUsage</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ServiceUsageClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ServiceUsage that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ServiceUsageClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ServiceUsageClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ServiceUsageClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Enables a service so that it can be used with a project.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation EnableService(global::Google.Api.ServiceUsage.V1Beta1.EnableServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnableService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Enables a service so that it can be used with a project.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation EnableService(global::Google.Api.ServiceUsage.V1Beta1.EnableServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EnableService, null, options, request);
      }
      /// <summary>
      /// Enables a service so that it can be used with a project.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> EnableServiceAsync(global::Google.Api.ServiceUsage.V1Beta1.EnableServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnableServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Enables a service so that it can be used with a project.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> EnableServiceAsync(global::Google.Api.ServiceUsage.V1Beta1.EnableServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EnableService, null, options, request);
      }
      /// <summary>
      /// Disables a service so that it can no longer be used with a project.
      /// This prevents unintended usage that may cause unexpected billing
      /// charges or security leaks.
      ///
      /// It is not valid to call the disable method on a service that is not
      /// currently enabled. Callers will receive a `FAILED_PRECONDITION` status if
      /// the target service is not currently enabled.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DisableService(global::Google.Api.ServiceUsage.V1Beta1.DisableServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Disables a service so that it can no longer be used with a project.
      /// This prevents unintended usage that may cause unexpected billing
      /// charges or security leaks.
      ///
      /// It is not valid to call the disable method on a service that is not
      /// currently enabled. Callers will receive a `FAILED_PRECONDITION` status if
      /// the target service is not currently enabled.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DisableService(global::Google.Api.ServiceUsage.V1Beta1.DisableServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableService, null, options, request);
      }
      /// <summary>
      /// Disables a service so that it can no longer be used with a project.
      /// This prevents unintended usage that may cause unexpected billing
      /// charges or security leaks.
      ///
      /// It is not valid to call the disable method on a service that is not
      /// currently enabled. Callers will receive a `FAILED_PRECONDITION` status if
      /// the target service is not currently enabled.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DisableServiceAsync(global::Google.Api.ServiceUsage.V1Beta1.DisableServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Disables a service so that it can no longer be used with a project.
      /// This prevents unintended usage that may cause unexpected billing
      /// charges or security leaks.
      ///
      /// It is not valid to call the disable method on a service that is not
      /// currently enabled. Callers will receive a `FAILED_PRECONDITION` status if
      /// the target service is not currently enabled.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DisableServiceAsync(global::Google.Api.ServiceUsage.V1Beta1.DisableServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableService, null, options, request);
      }
      /// <summary>
      /// Returns the service configuration and enabled state for a given service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.Service GetService(global::Google.Api.ServiceUsage.V1Beta1.GetServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the service configuration and enabled state for a given service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.Service GetService(global::Google.Api.ServiceUsage.V1Beta1.GetServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetService, null, options, request);
      }
      /// <summary>
      /// Returns the service configuration and enabled state for a given service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.Service> GetServiceAsync(global::Google.Api.ServiceUsage.V1Beta1.GetServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the service configuration and enabled state for a given service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.Service> GetServiceAsync(global::Google.Api.ServiceUsage.V1Beta1.GetServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetService, null, options, request);
      }
      /// <summary>
      /// Lists all services available to the specified project, and the current
      /// state of those services with respect to the project. The list includes
      /// all public services, all services for which the calling user has the
      /// `servicemanagement.services.bind` permission, and all services that have
      /// already been enabled on the project. The list can be filtered to
      /// only include services in a specific state, for example to only include
      /// services enabled on the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.ListServicesResponse ListServices(global::Google.Api.ServiceUsage.V1Beta1.ListServicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListServices(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all services available to the specified project, and the current
      /// state of those services with respect to the project. The list includes
      /// all public services, all services for which the calling user has the
      /// `servicemanagement.services.bind` permission, and all services that have
      /// already been enabled on the project. The list can be filtered to
      /// only include services in a specific state, for example to only include
      /// services enabled on the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.ListServicesResponse ListServices(global::Google.Api.ServiceUsage.V1Beta1.ListServicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListServices, null, options, request);
      }
      /// <summary>
      /// Lists all services available to the specified project, and the current
      /// state of those services with respect to the project. The list includes
      /// all public services, all services for which the calling user has the
      /// `servicemanagement.services.bind` permission, and all services that have
      /// already been enabled on the project. The list can be filtered to
      /// only include services in a specific state, for example to only include
      /// services enabled on the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.ListServicesResponse> ListServicesAsync(global::Google.Api.ServiceUsage.V1Beta1.ListServicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListServicesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all services available to the specified project, and the current
      /// state of those services with respect to the project. The list includes
      /// all public services, all services for which the calling user has the
      /// `servicemanagement.services.bind` permission, and all services that have
      /// already been enabled on the project. The list can be filtered to
      /// only include services in a specific state, for example to only include
      /// services enabled on the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.ListServicesResponse> ListServicesAsync(global::Google.Api.ServiceUsage.V1Beta1.ListServicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListServices, null, options, request);
      }
      /// <summary>
      /// Enables multiple services on a project. The operation is atomic: if
      /// enabling any service fails, then the entire batch fails, and no state
      /// changes occur.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchEnableServices(global::Google.Api.ServiceUsage.V1Beta1.BatchEnableServicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchEnableServices(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Enables multiple services on a project. The operation is atomic: if
      /// enabling any service fails, then the entire batch fails, and no state
      /// changes occur.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchEnableServices(global::Google.Api.ServiceUsage.V1Beta1.BatchEnableServicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchEnableServices, null, options, request);
      }
      /// <summary>
      /// Enables multiple services on a project. The operation is atomic: if
      /// enabling any service fails, then the entire batch fails, and no state
      /// changes occur.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchEnableServicesAsync(global::Google.Api.ServiceUsage.V1Beta1.BatchEnableServicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchEnableServicesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Enables multiple services on a project. The operation is atomic: if
      /// enabling any service fails, then the entire batch fails, and no state
      /// changes occur.
      ///
      /// Operation response type: `google.protobuf.Empty`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchEnableServicesAsync(global::Google.Api.ServiceUsage.V1Beta1.BatchEnableServicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchEnableServices, null, options, request);
      }
      /// <summary>
      /// Retrieves a summary of all quota information visible to the service
      /// consumer, organized by service metric. Each metric includes information
      /// about all of its defined limits. Each limit includes the limit
      /// configuration (quota unit, preciseness, default value), the current
      /// effective limit value, and all of the overrides applied to the limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsResponse ListConsumerQuotaMetrics(global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConsumerQuotaMetrics(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a summary of all quota information visible to the service
      /// consumer, organized by service metric. Each metric includes information
      /// about all of its defined limits. Each limit includes the limit
      /// configuration (quota unit, preciseness, default value), the current
      /// effective limit value, and all of the overrides applied to the limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsResponse ListConsumerQuotaMetrics(global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListConsumerQuotaMetrics, null, options, request);
      }
      /// <summary>
      /// Retrieves a summary of all quota information visible to the service
      /// consumer, organized by service metric. Each metric includes information
      /// about all of its defined limits. Each limit includes the limit
      /// configuration (quota unit, preciseness, default value), the current
      /// effective limit value, and all of the overrides applied to the limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsResponse> ListConsumerQuotaMetricsAsync(global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConsumerQuotaMetricsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a summary of all quota information visible to the service
      /// consumer, organized by service metric. Each metric includes information
      /// about all of its defined limits. Each limit includes the limit
      /// configuration (quota unit, preciseness, default value), the current
      /// effective limit value, and all of the overrides applied to the limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsResponse> ListConsumerQuotaMetricsAsync(global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListConsumerQuotaMetrics, null, options, request);
      }
      /// <summary>
      /// Retrieves a summary of quota information for a specific quota metric
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaMetric GetConsumerQuotaMetric(global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConsumerQuotaMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a summary of quota information for a specific quota metric
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaMetric GetConsumerQuotaMetric(global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetConsumerQuotaMetric, null, options, request);
      }
      /// <summary>
      /// Retrieves a summary of quota information for a specific quota metric
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaMetric> GetConsumerQuotaMetricAsync(global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConsumerQuotaMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a summary of quota information for a specific quota metric
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaMetric> GetConsumerQuotaMetricAsync(global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetConsumerQuotaMetric, null, options, request);
      }
      /// <summary>
      /// Retrieves a summary of quota information for a specific quota limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaLimit GetConsumerQuotaLimit(global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConsumerQuotaLimit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a summary of quota information for a specific quota limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaLimit GetConsumerQuotaLimit(global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetConsumerQuotaLimit, null, options, request);
      }
      /// <summary>
      /// Retrieves a summary of quota information for a specific quota limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaLimit> GetConsumerQuotaLimitAsync(global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaLimitRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConsumerQuotaLimitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a summary of quota information for a specific quota limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaLimit> GetConsumerQuotaLimitAsync(global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaLimitRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetConsumerQuotaLimit, null, options, request);
      }
      /// <summary>
      /// Creates an admin override.
      /// An admin override is applied by an administrator of a parent folder or
      /// parent organization of the consumer receiving the override. An admin
      /// override is intended to limit the amount of quota the consumer can use out
      /// of the total quota pool allocated to all children of the folder or
      /// organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateAdminOverride(global::Google.Api.ServiceUsage.V1Beta1.CreateAdminOverrideRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdminOverride(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an admin override.
      /// An admin override is applied by an administrator of a parent folder or
      /// parent organization of the consumer receiving the override. An admin
      /// override is intended to limit the amount of quota the consumer can use out
      /// of the total quota pool allocated to all children of the folder or
      /// organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateAdminOverride(global::Google.Api.ServiceUsage.V1Beta1.CreateAdminOverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAdminOverride, null, options, request);
      }
      /// <summary>
      /// Creates an admin override.
      /// An admin override is applied by an administrator of a parent folder or
      /// parent organization of the consumer receiving the override. An admin
      /// override is intended to limit the amount of quota the consumer can use out
      /// of the total quota pool allocated to all children of the folder or
      /// organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateAdminOverrideAsync(global::Google.Api.ServiceUsage.V1Beta1.CreateAdminOverrideRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAdminOverrideAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an admin override.
      /// An admin override is applied by an administrator of a parent folder or
      /// parent organization of the consumer receiving the override. An admin
      /// override is intended to limit the amount of quota the consumer can use out
      /// of the total quota pool allocated to all children of the folder or
      /// organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateAdminOverrideAsync(global::Google.Api.ServiceUsage.V1Beta1.CreateAdminOverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAdminOverride, null, options, request);
      }
      /// <summary>
      /// Updates an admin override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateAdminOverride(global::Google.Api.ServiceUsage.V1Beta1.UpdateAdminOverrideRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAdminOverride(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an admin override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateAdminOverride(global::Google.Api.ServiceUsage.V1Beta1.UpdateAdminOverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAdminOverride, null, options, request);
      }
      /// <summary>
      /// Updates an admin override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateAdminOverrideAsync(global::Google.Api.ServiceUsage.V1Beta1.UpdateAdminOverrideRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAdminOverrideAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an admin override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateAdminOverrideAsync(global::Google.Api.ServiceUsage.V1Beta1.UpdateAdminOverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAdminOverride, null, options, request);
      }
      /// <summary>
      /// Deletes an admin override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteAdminOverride(global::Google.Api.ServiceUsage.V1Beta1.DeleteAdminOverrideRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAdminOverride(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an admin override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteAdminOverride(global::Google.Api.ServiceUsage.V1Beta1.DeleteAdminOverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAdminOverride, null, options, request);
      }
      /// <summary>
      /// Deletes an admin override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteAdminOverrideAsync(global::Google.Api.ServiceUsage.V1Beta1.DeleteAdminOverrideRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAdminOverrideAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an admin override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteAdminOverrideAsync(global::Google.Api.ServiceUsage.V1Beta1.DeleteAdminOverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAdminOverride, null, options, request);
      }
      /// <summary>
      /// Lists all admin overrides on this limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesResponse ListAdminOverrides(global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAdminOverrides(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all admin overrides on this limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesResponse ListAdminOverrides(global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAdminOverrides, null, options, request);
      }
      /// <summary>
      /// Lists all admin overrides on this limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesResponse> ListAdminOverridesAsync(global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAdminOverridesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all admin overrides on this limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesResponse> ListAdminOverridesAsync(global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAdminOverrides, null, options, request);
      }
      /// <summary>
      /// Creates or updates multiple admin overrides atomically, all on the
      /// same consumer, but on many different metrics or limits.
      /// The name field in the quota override message should not be set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportAdminOverrides(global::Google.Api.ServiceUsage.V1Beta1.ImportAdminOverridesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportAdminOverrides(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates or updates multiple admin overrides atomically, all on the
      /// same consumer, but on many different metrics or limits.
      /// The name field in the quota override message should not be set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportAdminOverrides(global::Google.Api.ServiceUsage.V1Beta1.ImportAdminOverridesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportAdminOverrides, null, options, request);
      }
      /// <summary>
      /// Creates or updates multiple admin overrides atomically, all on the
      /// same consumer, but on many different metrics or limits.
      /// The name field in the quota override message should not be set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportAdminOverridesAsync(global::Google.Api.ServiceUsage.V1Beta1.ImportAdminOverridesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportAdminOverridesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates or updates multiple admin overrides atomically, all on the
      /// same consumer, but on many different metrics or limits.
      /// The name field in the quota override message should not be set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportAdminOverridesAsync(global::Google.Api.ServiceUsage.V1Beta1.ImportAdminOverridesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportAdminOverrides, null, options, request);
      }
      /// <summary>
      /// Creates a consumer override.
      /// A consumer override is applied to the consumer on its own authority to
      /// limit its own quota usage. Consumer overrides cannot be used to grant more
      /// quota than would be allowed by admin overrides, producer overrides, or the
      /// default limit of the service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateConsumerOverride(global::Google.Api.ServiceUsage.V1Beta1.CreateConsumerOverrideRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateConsumerOverride(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a consumer override.
      /// A consumer override is applied to the consumer on its own authority to
      /// limit its own quota usage. Consumer overrides cannot be used to grant more
      /// quota than would be allowed by admin overrides, producer overrides, or the
      /// default limit of the service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateConsumerOverride(global::Google.Api.ServiceUsage.V1Beta1.CreateConsumerOverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateConsumerOverride, null, options, request);
      }
      /// <summary>
      /// Creates a consumer override.
      /// A consumer override is applied to the consumer on its own authority to
      /// limit its own quota usage. Consumer overrides cannot be used to grant more
      /// quota than would be allowed by admin overrides, producer overrides, or the
      /// default limit of the service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateConsumerOverrideAsync(global::Google.Api.ServiceUsage.V1Beta1.CreateConsumerOverrideRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateConsumerOverrideAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a consumer override.
      /// A consumer override is applied to the consumer on its own authority to
      /// limit its own quota usage. Consumer overrides cannot be used to grant more
      /// quota than would be allowed by admin overrides, producer overrides, or the
      /// default limit of the service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateConsumerOverrideAsync(global::Google.Api.ServiceUsage.V1Beta1.CreateConsumerOverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateConsumerOverride, null, options, request);
      }
      /// <summary>
      /// Updates a consumer override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateConsumerOverride(global::Google.Api.ServiceUsage.V1Beta1.UpdateConsumerOverrideRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateConsumerOverride(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a consumer override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateConsumerOverride(global::Google.Api.ServiceUsage.V1Beta1.UpdateConsumerOverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateConsumerOverride, null, options, request);
      }
      /// <summary>
      /// Updates a consumer override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateConsumerOverrideAsync(global::Google.Api.ServiceUsage.V1Beta1.UpdateConsumerOverrideRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateConsumerOverrideAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a consumer override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateConsumerOverrideAsync(global::Google.Api.ServiceUsage.V1Beta1.UpdateConsumerOverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateConsumerOverride, null, options, request);
      }
      /// <summary>
      /// Deletes a consumer override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteConsumerOverride(global::Google.Api.ServiceUsage.V1Beta1.DeleteConsumerOverrideRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteConsumerOverride(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a consumer override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteConsumerOverride(global::Google.Api.ServiceUsage.V1Beta1.DeleteConsumerOverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteConsumerOverride, null, options, request);
      }
      /// <summary>
      /// Deletes a consumer override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteConsumerOverrideAsync(global::Google.Api.ServiceUsage.V1Beta1.DeleteConsumerOverrideRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteConsumerOverrideAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a consumer override.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteConsumerOverrideAsync(global::Google.Api.ServiceUsage.V1Beta1.DeleteConsumerOverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteConsumerOverride, null, options, request);
      }
      /// <summary>
      /// Lists all consumer overrides on this limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesResponse ListConsumerOverrides(global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConsumerOverrides(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all consumer overrides on this limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesResponse ListConsumerOverrides(global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListConsumerOverrides, null, options, request);
      }
      /// <summary>
      /// Lists all consumer overrides on this limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesResponse> ListConsumerOverridesAsync(global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConsumerOverridesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all consumer overrides on this limit.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesResponse> ListConsumerOverridesAsync(global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListConsumerOverrides, null, options, request);
      }
      /// <summary>
      /// Creates or updates multiple consumer overrides atomically, all on the
      /// same consumer, but on many different metrics or limits.
      /// The name field in the quota override message should not be set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportConsumerOverrides(global::Google.Api.ServiceUsage.V1Beta1.ImportConsumerOverridesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportConsumerOverrides(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates or updates multiple consumer overrides atomically, all on the
      /// same consumer, but on many different metrics or limits.
      /// The name field in the quota override message should not be set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportConsumerOverrides(global::Google.Api.ServiceUsage.V1Beta1.ImportConsumerOverridesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportConsumerOverrides, null, options, request);
      }
      /// <summary>
      /// Creates or updates multiple consumer overrides atomically, all on the
      /// same consumer, but on many different metrics or limits.
      /// The name field in the quota override message should not be set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportConsumerOverridesAsync(global::Google.Api.ServiceUsage.V1Beta1.ImportConsumerOverridesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportConsumerOverridesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates or updates multiple consumer overrides atomically, all on the
      /// same consumer, but on many different metrics or limits.
      /// The name field in the quota override message should not be set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportConsumerOverridesAsync(global::Google.Api.ServiceUsage.V1Beta1.ImportConsumerOverridesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportConsumerOverrides, null, options, request);
      }
      /// <summary>
      /// Generates service identity for service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation GenerateServiceIdentity(global::Google.Api.ServiceUsage.V1Beta1.GenerateServiceIdentityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateServiceIdentity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates service identity for service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation GenerateServiceIdentity(global::Google.Api.ServiceUsage.V1Beta1.GenerateServiceIdentityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateServiceIdentity, null, options, request);
      }
      /// <summary>
      /// Generates service identity for service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> GenerateServiceIdentityAsync(global::Google.Api.ServiceUsage.V1Beta1.GenerateServiceIdentityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateServiceIdentityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates service identity for service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> GenerateServiceIdentityAsync(global::Google.Api.ServiceUsage.V1Beta1.GenerateServiceIdentityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateServiceIdentity, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ServiceUsageClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ServiceUsageClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ServiceUsageBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_EnableService, serviceImpl.EnableService)
          .AddMethod(__Method_DisableService, serviceImpl.DisableService)
          .AddMethod(__Method_GetService, serviceImpl.GetService)
          .AddMethod(__Method_ListServices, serviceImpl.ListServices)
          .AddMethod(__Method_BatchEnableServices, serviceImpl.BatchEnableServices)
          .AddMethod(__Method_ListConsumerQuotaMetrics, serviceImpl.ListConsumerQuotaMetrics)
          .AddMethod(__Method_GetConsumerQuotaMetric, serviceImpl.GetConsumerQuotaMetric)
          .AddMethod(__Method_GetConsumerQuotaLimit, serviceImpl.GetConsumerQuotaLimit)
          .AddMethod(__Method_CreateAdminOverride, serviceImpl.CreateAdminOverride)
          .AddMethod(__Method_UpdateAdminOverride, serviceImpl.UpdateAdminOverride)
          .AddMethod(__Method_DeleteAdminOverride, serviceImpl.DeleteAdminOverride)
          .AddMethod(__Method_ListAdminOverrides, serviceImpl.ListAdminOverrides)
          .AddMethod(__Method_ImportAdminOverrides, serviceImpl.ImportAdminOverrides)
          .AddMethod(__Method_CreateConsumerOverride, serviceImpl.CreateConsumerOverride)
          .AddMethod(__Method_UpdateConsumerOverride, serviceImpl.UpdateConsumerOverride)
          .AddMethod(__Method_DeleteConsumerOverride, serviceImpl.DeleteConsumerOverride)
          .AddMethod(__Method_ListConsumerOverrides, serviceImpl.ListConsumerOverrides)
          .AddMethod(__Method_ImportConsumerOverrides, serviceImpl.ImportConsumerOverrides)
          .AddMethod(__Method_GenerateServiceIdentity, serviceImpl.GenerateServiceIdentity).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ServiceUsageBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_EnableService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.EnableServiceRequest, global::Google.LongRunning.Operation>(serviceImpl.EnableService));
      serviceBinder.AddMethod(__Method_DisableService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.DisableServiceRequest, global::Google.LongRunning.Operation>(serviceImpl.DisableService));
      serviceBinder.AddMethod(__Method_GetService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.GetServiceRequest, global::Google.Api.ServiceUsage.V1Beta1.Service>(serviceImpl.GetService));
      serviceBinder.AddMethod(__Method_ListServices, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.ListServicesRequest, global::Google.Api.ServiceUsage.V1Beta1.ListServicesResponse>(serviceImpl.ListServices));
      serviceBinder.AddMethod(__Method_BatchEnableServices, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.BatchEnableServicesRequest, global::Google.LongRunning.Operation>(serviceImpl.BatchEnableServices));
      serviceBinder.AddMethod(__Method_ListConsumerQuotaMetrics, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsRequest, global::Google.Api.ServiceUsage.V1Beta1.ListConsumerQuotaMetricsResponse>(serviceImpl.ListConsumerQuotaMetrics));
      serviceBinder.AddMethod(__Method_GetConsumerQuotaMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaMetricRequest, global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaMetric>(serviceImpl.GetConsumerQuotaMetric));
      serviceBinder.AddMethod(__Method_GetConsumerQuotaLimit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.GetConsumerQuotaLimitRequest, global::Google.Api.ServiceUsage.V1Beta1.ConsumerQuotaLimit>(serviceImpl.GetConsumerQuotaLimit));
      serviceBinder.AddMethod(__Method_CreateAdminOverride, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.CreateAdminOverrideRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateAdminOverride));
      serviceBinder.AddMethod(__Method_UpdateAdminOverride, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.UpdateAdminOverrideRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateAdminOverride));
      serviceBinder.AddMethod(__Method_DeleteAdminOverride, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.DeleteAdminOverrideRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteAdminOverride));
      serviceBinder.AddMethod(__Method_ListAdminOverrides, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesRequest, global::Google.Api.ServiceUsage.V1Beta1.ListAdminOverridesResponse>(serviceImpl.ListAdminOverrides));
      serviceBinder.AddMethod(__Method_ImportAdminOverrides, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.ImportAdminOverridesRequest, global::Google.LongRunning.Operation>(serviceImpl.ImportAdminOverrides));
      serviceBinder.AddMethod(__Method_CreateConsumerOverride, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.CreateConsumerOverrideRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateConsumerOverride));
      serviceBinder.AddMethod(__Method_UpdateConsumerOverride, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.UpdateConsumerOverrideRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateConsumerOverride));
      serviceBinder.AddMethod(__Method_DeleteConsumerOverride, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.DeleteConsumerOverrideRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteConsumerOverride));
      serviceBinder.AddMethod(__Method_ListConsumerOverrides, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesRequest, global::Google.Api.ServiceUsage.V1Beta1.ListConsumerOverridesResponse>(serviceImpl.ListConsumerOverrides));
      serviceBinder.AddMethod(__Method_ImportConsumerOverrides, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.ImportConsumerOverridesRequest, global::Google.LongRunning.Operation>(serviceImpl.ImportConsumerOverrides));
      serviceBinder.AddMethod(__Method_GenerateServiceIdentity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Api.ServiceUsage.V1Beta1.GenerateServiceIdentityRequest, global::Google.LongRunning.Operation>(serviceImpl.GenerateServiceIdentity));
    }

  }
}
#endregion
