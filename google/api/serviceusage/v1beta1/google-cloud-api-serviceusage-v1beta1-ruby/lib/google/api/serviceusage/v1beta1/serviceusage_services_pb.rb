# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/api/serviceusage/v1beta1/serviceusage.proto for package 'Google.Api.ServiceUsage.V1beta1'
# Original file comments:
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/api/serviceusage/v1beta1/serviceusage_pb'

module Google
  module Api
    module ServiceUsage
      module V1beta1
        module ServiceUsage
          # [Service Usage API](https://cloud.google.com/service-usage/docs/overview)
          class Service

            include ::GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'google.api.serviceusage.v1beta1.ServiceUsage'

            # Enables a service so that it can be used with a project.
            #
            # Operation response type: `google.protobuf.Empty`
            rpc :EnableService, ::Google::Api::ServiceUsage::V1beta1::EnableServiceRequest, ::Google::Longrunning::Operation
            # Disables a service so that it can no longer be used with a project.
            # This prevents unintended usage that may cause unexpected billing
            # charges or security leaks.
            #
            # It is not valid to call the disable method on a service that is not
            # currently enabled. Callers will receive a `FAILED_PRECONDITION` status if
            # the target service is not currently enabled.
            #
            # Operation response type: `google.protobuf.Empty`
            rpc :DisableService, ::Google::Api::ServiceUsage::V1beta1::DisableServiceRequest, ::Google::Longrunning::Operation
            # Returns the service configuration and enabled state for a given service.
            rpc :GetService, ::Google::Api::ServiceUsage::V1beta1::GetServiceRequest, ::Google::Api::ServiceUsage::V1beta1::Service
            # Lists all services available to the specified project, and the current
            # state of those services with respect to the project. The list includes
            # all public services, all services for which the calling user has the
            # `servicemanagement.services.bind` permission, and all services that have
            # already been enabled on the project. The list can be filtered to
            # only include services in a specific state, for example to only include
            # services enabled on the project.
            rpc :ListServices, ::Google::Api::ServiceUsage::V1beta1::ListServicesRequest, ::Google::Api::ServiceUsage::V1beta1::ListServicesResponse
            # Enables multiple services on a project. The operation is atomic: if
            # enabling any service fails, then the entire batch fails, and no state
            # changes occur.
            #
            # Operation response type: `google.protobuf.Empty`
            rpc :BatchEnableServices, ::Google::Api::ServiceUsage::V1beta1::BatchEnableServicesRequest, ::Google::Longrunning::Operation
            # Retrieves a summary of all quota information visible to the service
            # consumer, organized by service metric. Each metric includes information
            # about all of its defined limits. Each limit includes the limit
            # configuration (quota unit, preciseness, default value), the current
            # effective limit value, and all of the overrides applied to the limit.
            rpc :ListConsumerQuotaMetrics, ::Google::Api::ServiceUsage::V1beta1::ListConsumerQuotaMetricsRequest, ::Google::Api::ServiceUsage::V1beta1::ListConsumerQuotaMetricsResponse
            # Retrieves a summary of quota information for a specific quota metric
            rpc :GetConsumerQuotaMetric, ::Google::Api::ServiceUsage::V1beta1::GetConsumerQuotaMetricRequest, ::Google::Api::ServiceUsage::V1beta1::ConsumerQuotaMetric
            # Retrieves a summary of quota information for a specific quota limit.
            rpc :GetConsumerQuotaLimit, ::Google::Api::ServiceUsage::V1beta1::GetConsumerQuotaLimitRequest, ::Google::Api::ServiceUsage::V1beta1::ConsumerQuotaLimit
            # Creates an admin override.
            # An admin override is applied by an administrator of a parent folder or
            # parent organization of the consumer receiving the override. An admin
            # override is intended to limit the amount of quota the consumer can use out
            # of the total quota pool allocated to all children of the folder or
            # organization.
            rpc :CreateAdminOverride, ::Google::Api::ServiceUsage::V1beta1::CreateAdminOverrideRequest, ::Google::Longrunning::Operation
            # Updates an admin override.
            rpc :UpdateAdminOverride, ::Google::Api::ServiceUsage::V1beta1::UpdateAdminOverrideRequest, ::Google::Longrunning::Operation
            # Deletes an admin override.
            rpc :DeleteAdminOverride, ::Google::Api::ServiceUsage::V1beta1::DeleteAdminOverrideRequest, ::Google::Longrunning::Operation
            # Lists all admin overrides on this limit.
            rpc :ListAdminOverrides, ::Google::Api::ServiceUsage::V1beta1::ListAdminOverridesRequest, ::Google::Api::ServiceUsage::V1beta1::ListAdminOverridesResponse
            # Creates or updates multiple admin overrides atomically, all on the
            # same consumer, but on many different metrics or limits.
            # The name field in the quota override message should not be set.
            rpc :ImportAdminOverrides, ::Google::Api::ServiceUsage::V1beta1::ImportAdminOverridesRequest, ::Google::Longrunning::Operation
            # Creates a consumer override.
            # A consumer override is applied to the consumer on its own authority to
            # limit its own quota usage. Consumer overrides cannot be used to grant more
            # quota than would be allowed by admin overrides, producer overrides, or the
            # default limit of the service.
            rpc :CreateConsumerOverride, ::Google::Api::ServiceUsage::V1beta1::CreateConsumerOverrideRequest, ::Google::Longrunning::Operation
            # Updates a consumer override.
            rpc :UpdateConsumerOverride, ::Google::Api::ServiceUsage::V1beta1::UpdateConsumerOverrideRequest, ::Google::Longrunning::Operation
            # Deletes a consumer override.
            rpc :DeleteConsumerOverride, ::Google::Api::ServiceUsage::V1beta1::DeleteConsumerOverrideRequest, ::Google::Longrunning::Operation
            # Lists all consumer overrides on this limit.
            rpc :ListConsumerOverrides, ::Google::Api::ServiceUsage::V1beta1::ListConsumerOverridesRequest, ::Google::Api::ServiceUsage::V1beta1::ListConsumerOverridesResponse
            # Creates or updates multiple consumer overrides atomically, all on the
            # same consumer, but on many different metrics or limits.
            # The name field in the quota override message should not be set.
            rpc :ImportConsumerOverrides, ::Google::Api::ServiceUsage::V1beta1::ImportConsumerOverridesRequest, ::Google::Longrunning::Operation
            # Generates service identity for service.
            rpc :GenerateServiceIdentity, ::Google::Api::ServiceUsage::V1beta1::GenerateServiceIdentityRequest, ::Google::Longrunning::Operation
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
