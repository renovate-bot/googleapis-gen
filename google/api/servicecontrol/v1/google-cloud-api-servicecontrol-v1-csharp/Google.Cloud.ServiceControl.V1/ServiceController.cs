// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/api/servicecontrol/v1/service_controller.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.ServiceControl.V1 {

  /// <summary>Holder for reflection information generated from google/api/servicecontrol/v1/service_controller.proto</summary>
  public static partial class ServiceControllerReflection {

    #region Descriptor
    /// <summary>File descriptor for google/api/servicecontrol/v1/service_controller.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceControllerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVnb29nbGUvYXBpL3NlcnZpY2Vjb250cm9sL3YxL3NlcnZpY2VfY29udHJv",
            "bGxlci5wcm90bxIcZ29vZ2xlLmFwaS5zZXJ2aWNlY29udHJvbC52MRocZ29v",
            "Z2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxoXZ29vZ2xlL2FwaS9jbGllbnQu",
            "cHJvdG8aLmdvb2dsZS9hcGkvc2VydmljZWNvbnRyb2wvdjEvY2hlY2tfZXJy",
            "b3IucHJvdG8aLGdvb2dsZS9hcGkvc2VydmljZWNvbnRyb2wvdjEvb3BlcmF0",
            "aW9uLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhdn",
            "b29nbGUvcnBjL3N0YXR1cy5wcm90byJ7CgxDaGVja1JlcXVlc3QSFAoMc2Vy",
            "dmljZV9uYW1lGAEgASgJEjoKCW9wZXJhdGlvbhgCIAEoCzInLmdvb2dsZS5h",
            "cGkuc2VydmljZWNvbnRyb2wudjEuT3BlcmF0aW9uEhkKEXNlcnZpY2VfY29u",
            "ZmlnX2lkGAQgASgJIuYECg1DaGVja1Jlc3BvbnNlEhQKDG9wZXJhdGlvbl9p",
            "ZBgBIAEoCRI+CgxjaGVja19lcnJvcnMYAiADKAsyKC5nb29nbGUuYXBpLnNl",
            "cnZpY2Vjb250cm9sLnYxLkNoZWNrRXJyb3ISGQoRc2VydmljZV9jb25maWdf",
            "aWQYBSABKAkSGgoSc2VydmljZV9yb2xsb3V0X2lkGAsgASgJEkkKCmNoZWNr",
            "X2luZm8YBiABKAsyNS5nb29nbGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxLkNo",
            "ZWNrUmVzcG9uc2UuQ2hlY2tJbmZvGnYKCUNoZWNrSW5mbxIYChB1bnVzZWRf",
            "YXJndW1lbnRzGAEgAygJEk8KDWNvbnN1bWVyX2luZm8YAiABKAsyOC5nb29n",
            "bGUuYXBpLnNlcnZpY2Vjb250cm9sLnYxLkNoZWNrUmVzcG9uc2UuQ29uc3Vt",
            "ZXJJbmZvGoQCCgxDb25zdW1lckluZm8SFgoOcHJvamVjdF9udW1iZXIYASAB",
            "KAMSUwoEdHlwZRgCIAEoDjJFLmdvb2dsZS5hcGkuc2VydmljZWNvbnRyb2wu",
            "djEuQ2hlY2tSZXNwb25zZS5Db25zdW1lckluZm8uQ29uc3VtZXJUeXBlEhcK",
            "D2NvbnN1bWVyX251bWJlchgDIAEoAyJuCgxDb25zdW1lclR5cGUSHQoZQ09O",
            "U1VNRVJfVFlQRV9VTlNQRUNJRklFRBAAEgsKB1BST0pFQ1QQARIKCgZGT0xE",
            "RVIQAhIQCgxPUkdBTklaQVRJT04QAxIUChBTRVJWSUNFX1NQRUNJRklDEAQi",
            "fQoNUmVwb3J0UmVxdWVzdBIUCgxzZXJ2aWNlX25hbWUYASABKAkSOwoKb3Bl",
            "cmF0aW9ucxgCIAMoCzInLmdvb2dsZS5hcGkuc2VydmljZWNvbnRyb2wudjEu",
            "T3BlcmF0aW9uEhkKEXNlcnZpY2VfY29uZmlnX2lkGAMgASgJIuEBCg5SZXBv",
            "cnRSZXNwb25zZRJPCg1yZXBvcnRfZXJyb3JzGAEgAygLMjguZ29vZ2xlLmFw",
            "aS5zZXJ2aWNlY29udHJvbC52MS5SZXBvcnRSZXNwb25zZS5SZXBvcnRFcnJv",
            "chIZChFzZXJ2aWNlX2NvbmZpZ19pZBgCIAEoCRIaChJzZXJ2aWNlX3JvbGxv",
            "dXRfaWQYBCABKAkaRwoLUmVwb3J0RXJyb3ISFAoMb3BlcmF0aW9uX2lkGAEg",
            "ASgJEiIKBnN0YXR1cxgCIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzMrwDChFT",
            "ZXJ2aWNlQ29udHJvbGxlchKOAQoFQ2hlY2sSKi5nb29nbGUuYXBpLnNlcnZp",
            "Y2Vjb250cm9sLnYxLkNoZWNrUmVxdWVzdBorLmdvb2dsZS5hcGkuc2Vydmlj",
            "ZWNvbnRyb2wudjEuQ2hlY2tSZXNwb25zZSIsgtPkkwImIiEvdjEvc2Vydmlj",
            "ZXMve3NlcnZpY2VfbmFtZX06Y2hlY2s6ASoSkgEKBlJlcG9ydBIrLmdvb2ds",
            "ZS5hcGkuc2VydmljZWNvbnRyb2wudjEuUmVwb3J0UmVxdWVzdBosLmdvb2ds",
            "ZS5hcGkuc2VydmljZWNvbnRyb2wudjEuUmVwb3J0UmVzcG9uc2UiLYLT5JMC",
            "JyIiL3YxL3NlcnZpY2VzL3tzZXJ2aWNlX25hbWV9OnJlcG9ydDoBKhqAAcpB",
            "HXNlcnZpY2Vjb250cm9sLmdvb2dsZWFwaXMuY29t0kFdaHR0cHM6Ly93d3cu",
            "Z29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxodHRwczovL3d3",
            "dy5nb29nbGVhcGlzLmNvbS9hdXRoL3NlcnZpY2Vjb250cm9sQvgBCiBjb20u",
            "Z29vZ2xlLmFwaS5zZXJ2aWNlY29udHJvbC52MUIWU2VydmljZUNvbnRyb2xs",
            "ZXJQcm90b1ABWkpnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVh",
            "cGlzL2FwaS9zZXJ2aWNlY29udHJvbC92MTtzZXJ2aWNlY29udHJvbPgBAaIC",
            "BEdBU0OqAh5Hb29nbGUuQ2xvdWQuU2VydmljZUNvbnRyb2wuVjHKAh5Hb29n",
            "bGVcQ2xvdWRcU2VydmljZUNvbnRyb2xcVjHqAiFHb29nbGU6OkNsb3VkOjpT",
            "ZXJ2aWNlQ29udHJvbDo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Cloud.ServiceControl.V1.CheckErrorReflection.Descriptor, global::Google.Cloud.ServiceControl.V1.OperationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ServiceControl.V1.CheckRequest), global::Google.Cloud.ServiceControl.V1.CheckRequest.Parser, new[]{ "ServiceName", "Operation", "ServiceConfigId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ServiceControl.V1.CheckResponse), global::Google.Cloud.ServiceControl.V1.CheckResponse.Parser, new[]{ "OperationId", "CheckErrors", "ServiceConfigId", "ServiceRolloutId", "CheckInfo" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.CheckInfo), global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.CheckInfo.Parser, new[]{ "UnusedArguments", "ConsumerInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo), global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo.Parser, new[]{ "ProjectNumber", "Type", "ConsumerNumber" }, null, new[]{ typeof(global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo.Types.ConsumerType) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ServiceControl.V1.ReportRequest), global::Google.Cloud.ServiceControl.V1.ReportRequest.Parser, new[]{ "ServiceName", "Operations", "ServiceConfigId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ServiceControl.V1.ReportResponse), global::Google.Cloud.ServiceControl.V1.ReportResponse.Parser, new[]{ "ReportErrors", "ServiceConfigId", "ServiceRolloutId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ServiceControl.V1.ReportResponse.Types.ReportError), global::Google.Cloud.ServiceControl.V1.ReportResponse.Types.ReportError.Parser, new[]{ "OperationId", "Status" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request message for the Check method.
  /// </summary>
  public sealed partial class CheckRequest : pb::IMessage<CheckRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CheckRequest> _parser = new pb::MessageParser<CheckRequest>(() => new CheckRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ServiceControl.V1.ServiceControllerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckRequest(CheckRequest other) : this() {
      serviceName_ = other.serviceName_;
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      serviceConfigId_ = other.serviceConfigId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckRequest Clone() {
      return new CheckRequest(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    /// <summary>
    /// The service name as specified in its service configuration. For example,
    /// `"pubsub.googleapis.com"`.
    ///
    /// See
    /// [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)
    /// for the definition of a service name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 2;
    private global::Google.Cloud.ServiceControl.V1.Operation operation_;
    /// <summary>
    /// The operation to be checked.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ServiceControl.V1.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "service_config_id" field.</summary>
    public const int ServiceConfigIdFieldNumber = 4;
    private string serviceConfigId_ = "";
    /// <summary>
    /// Specifies which version of service configuration should be used to process
    /// the request.
    ///
    /// If unspecified or no matching version can be found, the
    /// latest one will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceConfigId {
      get { return serviceConfigId_; }
      set {
        serviceConfigId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (!object.Equals(Operation, other.Operation)) return false;
      if (ServiceConfigId != other.ServiceConfigId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (ServiceConfigId.Length != 0) hash ^= ServiceConfigId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (operation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Operation);
      }
      if (ServiceConfigId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ServiceConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (operation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Operation);
      }
      if (ServiceConfigId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ServiceConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (ServiceConfigId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceConfigId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckRequest other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Google.Cloud.ServiceControl.V1.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      if (other.ServiceConfigId.Length != 0) {
        ServiceConfigId = other.ServiceConfigId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 18: {
            if (operation_ == null) {
              Operation = new global::Google.Cloud.ServiceControl.V1.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
          case 34: {
            ServiceConfigId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 18: {
            if (operation_ == null) {
              Operation = new global::Google.Cloud.ServiceControl.V1.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
          case 34: {
            ServiceConfigId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for the Check method.
  /// </summary>
  public sealed partial class CheckResponse : pb::IMessage<CheckResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CheckResponse> _parser = new pb::MessageParser<CheckResponse>(() => new CheckResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ServiceControl.V1.ServiceControllerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckResponse(CheckResponse other) : this() {
      operationId_ = other.operationId_;
      checkErrors_ = other.checkErrors_.Clone();
      serviceConfigId_ = other.serviceConfigId_;
      serviceRolloutId_ = other.serviceRolloutId_;
      checkInfo_ = other.checkInfo_ != null ? other.checkInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckResponse Clone() {
      return new CheckResponse(this);
    }

    /// <summary>Field number for the "operation_id" field.</summary>
    public const int OperationIdFieldNumber = 1;
    private string operationId_ = "";
    /// <summary>
    /// The same operation_id value used in the
    /// [CheckRequest][google.api.servicecontrol.v1.CheckRequest]. Used for logging
    /// and diagnostics purposes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OperationId {
      get { return operationId_; }
      set {
        operationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "check_errors" field.</summary>
    public const int CheckErrorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.ServiceControl.V1.CheckError> _repeated_checkErrors_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.ServiceControl.V1.CheckError.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.ServiceControl.V1.CheckError> checkErrors_ = new pbc::RepeatedField<global::Google.Cloud.ServiceControl.V1.CheckError>();
    /// <summary>
    /// Indicate the decision of the check.
    ///
    /// If no check errors are present, the service should process the operation.
    /// Otherwise the service should use the list of errors to determine the
    /// appropriate action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.ServiceControl.V1.CheckError> CheckErrors {
      get { return checkErrors_; }
    }

    /// <summary>Field number for the "service_config_id" field.</summary>
    public const int ServiceConfigIdFieldNumber = 5;
    private string serviceConfigId_ = "";
    /// <summary>
    /// The actual config id used to process the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceConfigId {
      get { return serviceConfigId_; }
      set {
        serviceConfigId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_rollout_id" field.</summary>
    public const int ServiceRolloutIdFieldNumber = 11;
    private string serviceRolloutId_ = "";
    /// <summary>
    /// The current service rollout id used to process the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceRolloutId {
      get { return serviceRolloutId_; }
      set {
        serviceRolloutId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "check_info" field.</summary>
    public const int CheckInfoFieldNumber = 6;
    private global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.CheckInfo checkInfo_;
    /// <summary>
    /// Feedback data returned from the server during processing a Check request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.CheckInfo CheckInfo {
      get { return checkInfo_; }
      set {
        checkInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperationId != other.OperationId) return false;
      if(!checkErrors_.Equals(other.checkErrors_)) return false;
      if (ServiceConfigId != other.ServiceConfigId) return false;
      if (ServiceRolloutId != other.ServiceRolloutId) return false;
      if (!object.Equals(CheckInfo, other.CheckInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OperationId.Length != 0) hash ^= OperationId.GetHashCode();
      hash ^= checkErrors_.GetHashCode();
      if (ServiceConfigId.Length != 0) hash ^= ServiceConfigId.GetHashCode();
      if (ServiceRolloutId.Length != 0) hash ^= ServiceRolloutId.GetHashCode();
      if (checkInfo_ != null) hash ^= CheckInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OperationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OperationId);
      }
      checkErrors_.WriteTo(output, _repeated_checkErrors_codec);
      if (ServiceConfigId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ServiceConfigId);
      }
      if (checkInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CheckInfo);
      }
      if (ServiceRolloutId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ServiceRolloutId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OperationId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OperationId);
      }
      checkErrors_.WriteTo(ref output, _repeated_checkErrors_codec);
      if (ServiceConfigId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ServiceConfigId);
      }
      if (checkInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CheckInfo);
      }
      if (ServiceRolloutId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ServiceRolloutId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OperationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationId);
      }
      size += checkErrors_.CalculateSize(_repeated_checkErrors_codec);
      if (ServiceConfigId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceConfigId);
      }
      if (ServiceRolloutId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceRolloutId);
      }
      if (checkInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CheckInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckResponse other) {
      if (other == null) {
        return;
      }
      if (other.OperationId.Length != 0) {
        OperationId = other.OperationId;
      }
      checkErrors_.Add(other.checkErrors_);
      if (other.ServiceConfigId.Length != 0) {
        ServiceConfigId = other.ServiceConfigId;
      }
      if (other.ServiceRolloutId.Length != 0) {
        ServiceRolloutId = other.ServiceRolloutId;
      }
      if (other.checkInfo_ != null) {
        if (checkInfo_ == null) {
          CheckInfo = new global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.CheckInfo();
        }
        CheckInfo.MergeFrom(other.CheckInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OperationId = input.ReadString();
            break;
          }
          case 18: {
            checkErrors_.AddEntriesFrom(input, _repeated_checkErrors_codec);
            break;
          }
          case 42: {
            ServiceConfigId = input.ReadString();
            break;
          }
          case 50: {
            if (checkInfo_ == null) {
              CheckInfo = new global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.CheckInfo();
            }
            input.ReadMessage(CheckInfo);
            break;
          }
          case 90: {
            ServiceRolloutId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OperationId = input.ReadString();
            break;
          }
          case 18: {
            checkErrors_.AddEntriesFrom(ref input, _repeated_checkErrors_codec);
            break;
          }
          case 42: {
            ServiceConfigId = input.ReadString();
            break;
          }
          case 50: {
            if (checkInfo_ == null) {
              CheckInfo = new global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.CheckInfo();
            }
            input.ReadMessage(CheckInfo);
            break;
          }
          case 90: {
            ServiceRolloutId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CheckResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Contains additional information about the check operation.
      /// </summary>
      public sealed partial class CheckInfo : pb::IMessage<CheckInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CheckInfo> _parser = new pb::MessageParser<CheckInfo>(() => new CheckInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CheckInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.ServiceControl.V1.CheckResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CheckInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CheckInfo(CheckInfo other) : this() {
          unusedArguments_ = other.unusedArguments_.Clone();
          consumerInfo_ = other.consumerInfo_ != null ? other.consumerInfo_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CheckInfo Clone() {
          return new CheckInfo(this);
        }

        /// <summary>Field number for the "unused_arguments" field.</summary>
        public const int UnusedArgumentsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_unusedArguments_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> unusedArguments_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// A list of fields and label keys that are ignored by the server.
        /// The client doesn't need to send them for following requests to improve
        /// performance and allow better aggregation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> UnusedArguments {
          get { return unusedArguments_; }
        }

        /// <summary>Field number for the "consumer_info" field.</summary>
        public const int ConsumerInfoFieldNumber = 2;
        private global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo consumerInfo_;
        /// <summary>
        /// Consumer info of this check.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo ConsumerInfo {
          get { return consumerInfo_; }
          set {
            consumerInfo_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CheckInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CheckInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!unusedArguments_.Equals(other.unusedArguments_)) return false;
          if (!object.Equals(ConsumerInfo, other.ConsumerInfo)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= unusedArguments_.GetHashCode();
          if (consumerInfo_ != null) hash ^= ConsumerInfo.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          unusedArguments_.WriteTo(output, _repeated_unusedArguments_codec);
          if (consumerInfo_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ConsumerInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          unusedArguments_.WriteTo(ref output, _repeated_unusedArguments_codec);
          if (consumerInfo_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ConsumerInfo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += unusedArguments_.CalculateSize(_repeated_unusedArguments_codec);
          if (consumerInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConsumerInfo);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CheckInfo other) {
          if (other == null) {
            return;
          }
          unusedArguments_.Add(other.unusedArguments_);
          if (other.consumerInfo_ != null) {
            if (consumerInfo_ == null) {
              ConsumerInfo = new global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo();
            }
            ConsumerInfo.MergeFrom(other.ConsumerInfo);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                unusedArguments_.AddEntriesFrom(input, _repeated_unusedArguments_codec);
                break;
              }
              case 18: {
                if (consumerInfo_ == null) {
                  ConsumerInfo = new global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo();
                }
                input.ReadMessage(ConsumerInfo);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                unusedArguments_.AddEntriesFrom(ref input, _repeated_unusedArguments_codec);
                break;
              }
              case 18: {
                if (consumerInfo_ == null) {
                  ConsumerInfo = new global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo();
                }
                input.ReadMessage(ConsumerInfo);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// `ConsumerInfo` provides information about the consumer.
      /// </summary>
      public sealed partial class ConsumerInfo : pb::IMessage<ConsumerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ConsumerInfo> _parser = new pb::MessageParser<ConsumerInfo>(() => new ConsumerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ConsumerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.ServiceControl.V1.CheckResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConsumerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConsumerInfo(ConsumerInfo other) : this() {
          projectNumber_ = other.projectNumber_;
          type_ = other.type_;
          consumerNumber_ = other.consumerNumber_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConsumerInfo Clone() {
          return new ConsumerInfo(this);
        }

        /// <summary>Field number for the "project_number" field.</summary>
        public const int ProjectNumberFieldNumber = 1;
        private long projectNumber_;
        /// <summary>
        /// The Google cloud project number, e.g. 1234567890. A value of 0 indicates
        /// no project number is found.
        ///
        /// NOTE: This field is deprecated after we support flexible consumer
        /// id. New code should not depend on this field anymore.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ProjectNumber {
          get { return projectNumber_; }
          set {
            projectNumber_ = value;
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 2;
        private global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo.Types.ConsumerType type_ = global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo.Types.ConsumerType.Unspecified;
        /// <summary>
        /// The type of the consumer which should have been defined in
        /// [Google Resource Manager](https://cloud.google.com/resource-manager/).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo.Types.ConsumerType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "consumer_number" field.</summary>
        public const int ConsumerNumberFieldNumber = 3;
        private long consumerNumber_;
        /// <summary>
        /// The consumer identity number, can be Google cloud project number, folder
        /// number or organization number e.g. 1234567890. A value of 0 indicates no
        /// consumer number is found.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ConsumerNumber {
          get { return consumerNumber_; }
          set {
            consumerNumber_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ConsumerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ConsumerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProjectNumber != other.ProjectNumber) return false;
          if (Type != other.Type) return false;
          if (ConsumerNumber != other.ConsumerNumber) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ProjectNumber != 0L) hash ^= ProjectNumber.GetHashCode();
          if (Type != global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo.Types.ConsumerType.Unspecified) hash ^= Type.GetHashCode();
          if (ConsumerNumber != 0L) hash ^= ConsumerNumber.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ProjectNumber != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ProjectNumber);
          }
          if (Type != global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo.Types.ConsumerType.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Type);
          }
          if (ConsumerNumber != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(ConsumerNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ProjectNumber != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ProjectNumber);
          }
          if (Type != global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo.Types.ConsumerType.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Type);
          }
          if (ConsumerNumber != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(ConsumerNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ProjectNumber != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProjectNumber);
          }
          if (Type != global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo.Types.ConsumerType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (ConsumerNumber != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConsumerNumber);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ConsumerInfo other) {
          if (other == null) {
            return;
          }
          if (other.ProjectNumber != 0L) {
            ProjectNumber = other.ProjectNumber;
          }
          if (other.Type != global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo.Types.ConsumerType.Unspecified) {
            Type = other.Type;
          }
          if (other.ConsumerNumber != 0L) {
            ConsumerNumber = other.ConsumerNumber;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ProjectNumber = input.ReadInt64();
                break;
              }
              case 16: {
                Type = (global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo.Types.ConsumerType) input.ReadEnum();
                break;
              }
              case 24: {
                ConsumerNumber = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ProjectNumber = input.ReadInt64();
                break;
              }
              case 16: {
                Type = (global::Google.Cloud.ServiceControl.V1.CheckResponse.Types.ConsumerInfo.Types.ConsumerType) input.ReadEnum();
                break;
              }
              case 24: {
                ConsumerNumber = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the ConsumerInfo message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// The type of the consumer as defined in
          /// [Google Resource Manager](https://cloud.google.com/resource-manager/).
          /// </summary>
          public enum ConsumerType {
            /// <summary>
            /// This is never used.
            /// </summary>
            [pbr::OriginalName("CONSUMER_TYPE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The consumer is a Google Cloud Project.
            /// </summary>
            [pbr::OriginalName("PROJECT")] Project = 1,
            /// <summary>
            /// The consumer is a Google Cloud Folder.
            /// </summary>
            [pbr::OriginalName("FOLDER")] Folder = 2,
            /// <summary>
            /// The consumer is a Google Cloud Organization.
            /// </summary>
            [pbr::OriginalName("ORGANIZATION")] Organization = 3,
            /// <summary>
            /// Service-specific resource container which is defined by the service
            /// producer to offer their users the ability to manage service control
            /// functionalities at a finer level of granularity than the PROJECT.
            /// </summary>
            [pbr::OriginalName("SERVICE_SPECIFIC")] ServiceSpecific = 4,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Request message for the Report method.
  /// </summary>
  public sealed partial class ReportRequest : pb::IMessage<ReportRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportRequest> _parser = new pb::MessageParser<ReportRequest>(() => new ReportRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ServiceControl.V1.ServiceControllerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportRequest(ReportRequest other) : this() {
      serviceName_ = other.serviceName_;
      operations_ = other.operations_.Clone();
      serviceConfigId_ = other.serviceConfigId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportRequest Clone() {
      return new ReportRequest(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    /// <summary>
    /// The service name as specified in its service configuration. For example,
    /// `"pubsub.googleapis.com"`.
    ///
    /// See
    /// [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)
    /// for the definition of a service name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operations" field.</summary>
    public const int OperationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.ServiceControl.V1.Operation> _repeated_operations_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.ServiceControl.V1.Operation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.ServiceControl.V1.Operation> operations_ = new pbc::RepeatedField<global::Google.Cloud.ServiceControl.V1.Operation>();
    /// <summary>
    /// Operations to be reported.
    ///
    /// Typically the service should report one operation per request.
    /// Putting multiple operations into a single request is allowed, but should
    /// be used only when multiple operations are natually available at the time
    /// of the report.
    ///
    /// There is no limit on the number of operations in the same ReportRequest,
    /// however the ReportRequest size should be no larger than 1MB. See
    /// [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors]
    /// for partial failure behavior.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.ServiceControl.V1.Operation> Operations {
      get { return operations_; }
    }

    /// <summary>Field number for the "service_config_id" field.</summary>
    public const int ServiceConfigIdFieldNumber = 3;
    private string serviceConfigId_ = "";
    /// <summary>
    /// Specifies which version of service config should be used to process the
    /// request.
    ///
    /// If unspecified or no matching version can be found, the
    /// latest one will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceConfigId {
      get { return serviceConfigId_; }
      set {
        serviceConfigId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if(!operations_.Equals(other.operations_)) return false;
      if (ServiceConfigId != other.ServiceConfigId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      hash ^= operations_.GetHashCode();
      if (ServiceConfigId.Length != 0) hash ^= ServiceConfigId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      operations_.WriteTo(output, _repeated_operations_codec);
      if (ServiceConfigId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServiceConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      operations_.WriteTo(ref output, _repeated_operations_codec);
      if (ServiceConfigId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServiceConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      size += operations_.CalculateSize(_repeated_operations_codec);
      if (ServiceConfigId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceConfigId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportRequest other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      operations_.Add(other.operations_);
      if (other.ServiceConfigId.Length != 0) {
        ServiceConfigId = other.ServiceConfigId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 18: {
            operations_.AddEntriesFrom(input, _repeated_operations_codec);
            break;
          }
          case 26: {
            ServiceConfigId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 18: {
            operations_.AddEntriesFrom(ref input, _repeated_operations_codec);
            break;
          }
          case 26: {
            ServiceConfigId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for the Report method.
  /// </summary>
  public sealed partial class ReportResponse : pb::IMessage<ReportResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportResponse> _parser = new pb::MessageParser<ReportResponse>(() => new ReportResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ServiceControl.V1.ServiceControllerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportResponse(ReportResponse other) : this() {
      reportErrors_ = other.reportErrors_.Clone();
      serviceConfigId_ = other.serviceConfigId_;
      serviceRolloutId_ = other.serviceRolloutId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportResponse Clone() {
      return new ReportResponse(this);
    }

    /// <summary>Field number for the "report_errors" field.</summary>
    public const int ReportErrorsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.ServiceControl.V1.ReportResponse.Types.ReportError> _repeated_reportErrors_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.ServiceControl.V1.ReportResponse.Types.ReportError.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.ServiceControl.V1.ReportResponse.Types.ReportError> reportErrors_ = new pbc::RepeatedField<global::Google.Cloud.ServiceControl.V1.ReportResponse.Types.ReportError>();
    /// <summary>
    /// Partial failures, one for each `Operation` in the request that failed
    /// processing. There are three possible combinations of the RPC status:
    ///
    /// 1. The combination of a successful RPC status and an empty `report_errors`
    ///    list indicates a complete success where all `Operations` in the
    ///    request are processed successfully.
    /// 2. The combination of a successful RPC status and a non-empty
    ///    `report_errors` list indicates a partial success where some
    ///    `Operations` in the request succeeded. Each
    ///    `Operation` that failed processing has a corresponding item
    ///    in this list.
    /// 3. A failed RPC status indicates a general non-deterministic failure.
    ///    When this happens, it's impossible to know which of the
    ///    'Operations' in the request succeeded or failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.ServiceControl.V1.ReportResponse.Types.ReportError> ReportErrors {
      get { return reportErrors_; }
    }

    /// <summary>Field number for the "service_config_id" field.</summary>
    public const int ServiceConfigIdFieldNumber = 2;
    private string serviceConfigId_ = "";
    /// <summary>
    /// The actual config id used to process the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceConfigId {
      get { return serviceConfigId_; }
      set {
        serviceConfigId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_rollout_id" field.</summary>
    public const int ServiceRolloutIdFieldNumber = 4;
    private string serviceRolloutId_ = "";
    /// <summary>
    /// The current service rollout id used to process the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceRolloutId {
      get { return serviceRolloutId_; }
      set {
        serviceRolloutId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reportErrors_.Equals(other.reportErrors_)) return false;
      if (ServiceConfigId != other.ServiceConfigId) return false;
      if (ServiceRolloutId != other.ServiceRolloutId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reportErrors_.GetHashCode();
      if (ServiceConfigId.Length != 0) hash ^= ServiceConfigId.GetHashCode();
      if (ServiceRolloutId.Length != 0) hash ^= ServiceRolloutId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      reportErrors_.WriteTo(output, _repeated_reportErrors_codec);
      if (ServiceConfigId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceConfigId);
      }
      if (ServiceRolloutId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ServiceRolloutId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      reportErrors_.WriteTo(ref output, _repeated_reportErrors_codec);
      if (ServiceConfigId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceConfigId);
      }
      if (ServiceRolloutId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ServiceRolloutId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reportErrors_.CalculateSize(_repeated_reportErrors_codec);
      if (ServiceConfigId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceConfigId);
      }
      if (ServiceRolloutId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceRolloutId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportResponse other) {
      if (other == null) {
        return;
      }
      reportErrors_.Add(other.reportErrors_);
      if (other.ServiceConfigId.Length != 0) {
        ServiceConfigId = other.ServiceConfigId;
      }
      if (other.ServiceRolloutId.Length != 0) {
        ServiceRolloutId = other.ServiceRolloutId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reportErrors_.AddEntriesFrom(input, _repeated_reportErrors_codec);
            break;
          }
          case 18: {
            ServiceConfigId = input.ReadString();
            break;
          }
          case 34: {
            ServiceRolloutId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            reportErrors_.AddEntriesFrom(ref input, _repeated_reportErrors_codec);
            break;
          }
          case 18: {
            ServiceConfigId = input.ReadString();
            break;
          }
          case 34: {
            ServiceRolloutId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReportResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Represents the processing error of one
      /// [Operation][google.api.servicecontrol.v1.Operation] in the request.
      /// </summary>
      public sealed partial class ReportError : pb::IMessage<ReportError>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ReportError> _parser = new pb::MessageParser<ReportError>(() => new ReportError());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ReportError> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.ServiceControl.V1.ReportResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReportError() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReportError(ReportError other) : this() {
          operationId_ = other.operationId_;
          status_ = other.status_ != null ? other.status_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ReportError Clone() {
          return new ReportError(this);
        }

        /// <summary>Field number for the "operation_id" field.</summary>
        public const int OperationIdFieldNumber = 1;
        private string operationId_ = "";
        /// <summary>
        /// The
        /// [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
        /// value from the request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OperationId {
          get { return operationId_; }
          set {
            operationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 2;
        private global::Google.Rpc.Status status_;
        /// <summary>
        /// Details of the error when processing the
        /// [Operation][google.api.servicecontrol.v1.Operation].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Rpc.Status Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ReportError);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ReportError other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OperationId != other.OperationId) return false;
          if (!object.Equals(Status, other.Status)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OperationId.Length != 0) hash ^= OperationId.GetHashCode();
          if (status_ != null) hash ^= Status.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (OperationId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(OperationId);
          }
          if (status_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Status);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (OperationId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(OperationId);
          }
          if (status_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Status);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OperationId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationId);
          }
          if (status_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ReportError other) {
          if (other == null) {
            return;
          }
          if (other.OperationId.Length != 0) {
            OperationId = other.OperationId;
          }
          if (other.status_ != null) {
            if (status_ == null) {
              Status = new global::Google.Rpc.Status();
            }
            Status.MergeFrom(other.Status);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                OperationId = input.ReadString();
                break;
              }
              case 18: {
                if (status_ == null) {
                  Status = new global::Google.Rpc.Status();
                }
                input.ReadMessage(Status);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                OperationId = input.ReadString();
                break;
              }
              case 18: {
                if (status_ == null) {
                  Status = new global::Google.Rpc.Status();
                }
                input.ReadMessage(Status);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
