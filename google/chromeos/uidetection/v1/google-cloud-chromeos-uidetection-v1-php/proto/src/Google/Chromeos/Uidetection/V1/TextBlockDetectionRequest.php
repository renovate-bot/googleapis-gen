<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/chromeos/uidetection/v1/ui_detection.proto

namespace Google\Chromeos\Uidetection\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Detection type for text block detection.
 *
 * Generated from protobuf message <code>google.chromeos.uidetection.v1.TextBlockDetectionRequest</code>
 */
class TextBlockDetectionRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The text block consisting a list of words to locate im the image.
     *
     * Generated from protobuf field <code>repeated string words = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $words;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $words
     *           Required. The text block consisting a list of words to locate im the image.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Chromeos\Uidetection\V1\UiDetection::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The text block consisting a list of words to locate im the image.
     *
     * Generated from protobuf field <code>repeated string words = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getWords()
    {
        return $this->words;
    }

    /**
     * Required. The text block consisting a list of words to locate im the image.
     *
     * Generated from protobuf field <code>repeated string words = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setWords($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->words = $arr;

        return $this;
    }

}

