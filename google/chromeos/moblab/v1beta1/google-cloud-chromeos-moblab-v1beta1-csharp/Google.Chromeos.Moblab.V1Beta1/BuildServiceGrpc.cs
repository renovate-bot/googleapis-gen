// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/chromeos/moblab/v1beta1/build_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Chromeos.Moblab.V1Beta1 {
  /// <summary>
  /// Manages Chrome OS build services.
  /// </summary>
  public static partial class BuildService
  {
    static readonly string __ServiceName = "google.chromeos.moblab.v1beta1.BuildService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsRequest> __Marshaller_google_chromeos_moblab_v1beta1_ListBuildTargetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsRequest.Parser));
    static readonly grpc::Marshaller<global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsResponse> __Marshaller_google_chromeos_moblab_v1beta1_ListBuildTargetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsResponse.Parser));
    static readonly grpc::Marshaller<global::Google.Chromeos.Moblab.V1Beta1.ListBuildsRequest> __Marshaller_google_chromeos_moblab_v1beta1_ListBuildsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Chromeos.Moblab.V1Beta1.ListBuildsRequest.Parser));
    static readonly grpc::Marshaller<global::Google.Chromeos.Moblab.V1Beta1.ListBuildsResponse> __Marshaller_google_chromeos_moblab_v1beta1_ListBuildsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Chromeos.Moblab.V1Beta1.ListBuildsResponse.Parser));
    static readonly grpc::Marshaller<global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusRequest> __Marshaller_google_chromeos_moblab_v1beta1_CheckBuildStageStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusRequest.Parser));
    static readonly grpc::Marshaller<global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusResponse> __Marshaller_google_chromeos_moblab_v1beta1_CheckBuildStageStatusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusResponse.Parser));
    static readonly grpc::Marshaller<global::Google.Chromeos.Moblab.V1Beta1.StageBuildRequest> __Marshaller_google_chromeos_moblab_v1beta1_StageBuildRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Chromeos.Moblab.V1Beta1.StageBuildRequest.Parser));
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    static readonly grpc::Marshaller<global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildRequest> __Marshaller_google_chromeos_moblab_v1beta1_FindMostStableBuildRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildRequest.Parser));
    static readonly grpc::Marshaller<global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildResponse> __Marshaller_google_chromeos_moblab_v1beta1_FindMostStableBuildResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildResponse.Parser));

    static readonly grpc::Method<global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsRequest, global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsResponse> __Method_ListBuildTargets = new grpc::Method<global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsRequest, global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBuildTargets",
        __Marshaller_google_chromeos_moblab_v1beta1_ListBuildTargetsRequest,
        __Marshaller_google_chromeos_moblab_v1beta1_ListBuildTargetsResponse);

    static readonly grpc::Method<global::Google.Chromeos.Moblab.V1Beta1.ListBuildsRequest, global::Google.Chromeos.Moblab.V1Beta1.ListBuildsResponse> __Method_ListBuilds = new grpc::Method<global::Google.Chromeos.Moblab.V1Beta1.ListBuildsRequest, global::Google.Chromeos.Moblab.V1Beta1.ListBuildsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBuilds",
        __Marshaller_google_chromeos_moblab_v1beta1_ListBuildsRequest,
        __Marshaller_google_chromeos_moblab_v1beta1_ListBuildsResponse);

    static readonly grpc::Method<global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusRequest, global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusResponse> __Method_CheckBuildStageStatus = new grpc::Method<global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusRequest, global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckBuildStageStatus",
        __Marshaller_google_chromeos_moblab_v1beta1_CheckBuildStageStatusRequest,
        __Marshaller_google_chromeos_moblab_v1beta1_CheckBuildStageStatusResponse);

    static readonly grpc::Method<global::Google.Chromeos.Moblab.V1Beta1.StageBuildRequest, global::Google.LongRunning.Operation> __Method_StageBuild = new grpc::Method<global::Google.Chromeos.Moblab.V1Beta1.StageBuildRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StageBuild",
        __Marshaller_google_chromeos_moblab_v1beta1_StageBuildRequest,
        __Marshaller_google_longrunning_Operation);

    static readonly grpc::Method<global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildRequest, global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildResponse> __Method_FindMostStableBuild = new grpc::Method<global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildRequest, global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FindMostStableBuild",
        __Marshaller_google_chromeos_moblab_v1beta1_FindMostStableBuildRequest,
        __Marshaller_google_chromeos_moblab_v1beta1_FindMostStableBuildResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Chromeos.Moblab.V1Beta1.BuildServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BuildService</summary>
    [grpc::BindServiceMethod(typeof(BuildService), "BindService")]
    public abstract partial class BuildServiceBase
    {
      /// <summary>
      /// Lists all build targets that a user has access to.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsResponse> ListBuildTargets(global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all builds for the given build target and model in descending order
      /// for the milestones and build versions.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Chromeos.Moblab.V1Beta1.ListBuildsResponse> ListBuilds(global::Google.Chromeos.Moblab.V1Beta1.ListBuildsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Checks the stage status for a given build artifact in a partner Google
      /// Cloud Storage bucket.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusResponse> CheckBuildStageStatus(global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stages a given build artifact from a internal Google Cloud Storage bucket
      /// to a partner Google Cloud Storage bucket. If any of objects has already
      /// been copied, it will overwrite the previous objects. Operation &lt;response:
      /// [StageBuildResponse][google.chromeos.moblab.v1beta1.StageBuildResponse],
      ///            metadata: [StageBuildMetadata][google.chromeos.moblab.v1beta1.StageBuildMetadata]>
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> StageBuild(global::Google.Chromeos.Moblab.V1Beta1.StageBuildRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Finds the most stable build for the given build target. The definition of
      /// the most stable build is determined by evaluating the following rules in
      /// order until one is true. If none are true, then there is no stable build
      /// and it will return an empty response.
      ///
      /// Evaluation rules:
      ///   1. Stable channel build with label “Live”
      ///   2. Beta channel build with label “Live”
      ///   3. Dev channel build with label “Live”
      ///   4. Most recent stable channel build with build status Pass
      ///   5. Most recent beta channel build with build status Pass
      ///   6. Most recent dev channel build with build status Pass
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildResponse> FindMostStableBuild(global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BuildService</summary>
    public partial class BuildServiceClient : grpc::ClientBase<BuildServiceClient>
    {
      /// <summary>Creates a new client for BuildService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public BuildServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BuildService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public BuildServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected BuildServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected BuildServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists all build targets that a user has access to.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsResponse ListBuildTargets(global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBuildTargets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all build targets that a user has access to.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsResponse ListBuildTargets(global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBuildTargets, null, options, request);
      }
      /// <summary>
      /// Lists all build targets that a user has access to.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsResponse> ListBuildTargetsAsync(global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBuildTargetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all build targets that a user has access to.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsResponse> ListBuildTargetsAsync(global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBuildTargets, null, options, request);
      }
      /// <summary>
      /// Lists all builds for the given build target and model in descending order
      /// for the milestones and build versions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Chromeos.Moblab.V1Beta1.ListBuildsResponse ListBuilds(global::Google.Chromeos.Moblab.V1Beta1.ListBuildsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBuilds(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all builds for the given build target and model in descending order
      /// for the milestones and build versions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Chromeos.Moblab.V1Beta1.ListBuildsResponse ListBuilds(global::Google.Chromeos.Moblab.V1Beta1.ListBuildsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBuilds, null, options, request);
      }
      /// <summary>
      /// Lists all builds for the given build target and model in descending order
      /// for the milestones and build versions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Chromeos.Moblab.V1Beta1.ListBuildsResponse> ListBuildsAsync(global::Google.Chromeos.Moblab.V1Beta1.ListBuildsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBuildsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all builds for the given build target and model in descending order
      /// for the milestones and build versions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Chromeos.Moblab.V1Beta1.ListBuildsResponse> ListBuildsAsync(global::Google.Chromeos.Moblab.V1Beta1.ListBuildsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBuilds, null, options, request);
      }
      /// <summary>
      /// Checks the stage status for a given build artifact in a partner Google
      /// Cloud Storage bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusResponse CheckBuildStageStatus(global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckBuildStageStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Checks the stage status for a given build artifact in a partner Google
      /// Cloud Storage bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusResponse CheckBuildStageStatus(global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckBuildStageStatus, null, options, request);
      }
      /// <summary>
      /// Checks the stage status for a given build artifact in a partner Google
      /// Cloud Storage bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusResponse> CheckBuildStageStatusAsync(global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckBuildStageStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Checks the stage status for a given build artifact in a partner Google
      /// Cloud Storage bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusResponse> CheckBuildStageStatusAsync(global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckBuildStageStatus, null, options, request);
      }
      /// <summary>
      /// Stages a given build artifact from a internal Google Cloud Storage bucket
      /// to a partner Google Cloud Storage bucket. If any of objects has already
      /// been copied, it will overwrite the previous objects. Operation &lt;response:
      /// [StageBuildResponse][google.chromeos.moblab.v1beta1.StageBuildResponse],
      ///            metadata: [StageBuildMetadata][google.chromeos.moblab.v1beta1.StageBuildMetadata]>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation StageBuild(global::Google.Chromeos.Moblab.V1Beta1.StageBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StageBuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stages a given build artifact from a internal Google Cloud Storage bucket
      /// to a partner Google Cloud Storage bucket. If any of objects has already
      /// been copied, it will overwrite the previous objects. Operation &lt;response:
      /// [StageBuildResponse][google.chromeos.moblab.v1beta1.StageBuildResponse],
      ///            metadata: [StageBuildMetadata][google.chromeos.moblab.v1beta1.StageBuildMetadata]>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.LongRunning.Operation StageBuild(global::Google.Chromeos.Moblab.V1Beta1.StageBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StageBuild, null, options, request);
      }
      /// <summary>
      /// Stages a given build artifact from a internal Google Cloud Storage bucket
      /// to a partner Google Cloud Storage bucket. If any of objects has already
      /// been copied, it will overwrite the previous objects. Operation &lt;response:
      /// [StageBuildResponse][google.chromeos.moblab.v1beta1.StageBuildResponse],
      ///            metadata: [StageBuildMetadata][google.chromeos.moblab.v1beta1.StageBuildMetadata]>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StageBuildAsync(global::Google.Chromeos.Moblab.V1Beta1.StageBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StageBuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stages a given build artifact from a internal Google Cloud Storage bucket
      /// to a partner Google Cloud Storage bucket. If any of objects has already
      /// been copied, it will overwrite the previous objects. Operation &lt;response:
      /// [StageBuildResponse][google.chromeos.moblab.v1beta1.StageBuildResponse],
      ///            metadata: [StageBuildMetadata][google.chromeos.moblab.v1beta1.StageBuildMetadata]>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StageBuildAsync(global::Google.Chromeos.Moblab.V1Beta1.StageBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StageBuild, null, options, request);
      }
      /// <summary>
      /// Finds the most stable build for the given build target. The definition of
      /// the most stable build is determined by evaluating the following rules in
      /// order until one is true. If none are true, then there is no stable build
      /// and it will return an empty response.
      ///
      /// Evaluation rules:
      ///   1. Stable channel build with label “Live”
      ///   2. Beta channel build with label “Live”
      ///   3. Dev channel build with label “Live”
      ///   4. Most recent stable channel build with build status Pass
      ///   5. Most recent beta channel build with build status Pass
      ///   6. Most recent dev channel build with build status Pass
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildResponse FindMostStableBuild(global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FindMostStableBuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Finds the most stable build for the given build target. The definition of
      /// the most stable build is determined by evaluating the following rules in
      /// order until one is true. If none are true, then there is no stable build
      /// and it will return an empty response.
      ///
      /// Evaluation rules:
      ///   1. Stable channel build with label “Live”
      ///   2. Beta channel build with label “Live”
      ///   3. Dev channel build with label “Live”
      ///   4. Most recent stable channel build with build status Pass
      ///   5. Most recent beta channel build with build status Pass
      ///   6. Most recent dev channel build with build status Pass
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildResponse FindMostStableBuild(global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FindMostStableBuild, null, options, request);
      }
      /// <summary>
      /// Finds the most stable build for the given build target. The definition of
      /// the most stable build is determined by evaluating the following rules in
      /// order until one is true. If none are true, then there is no stable build
      /// and it will return an empty response.
      ///
      /// Evaluation rules:
      ///   1. Stable channel build with label “Live”
      ///   2. Beta channel build with label “Live”
      ///   3. Dev channel build with label “Live”
      ///   4. Most recent stable channel build with build status Pass
      ///   5. Most recent beta channel build with build status Pass
      ///   6. Most recent dev channel build with build status Pass
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildResponse> FindMostStableBuildAsync(global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FindMostStableBuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Finds the most stable build for the given build target. The definition of
      /// the most stable build is determined by evaluating the following rules in
      /// order until one is true. If none are true, then there is no stable build
      /// and it will return an empty response.
      ///
      /// Evaluation rules:
      ///   1. Stable channel build with label “Live”
      ///   2. Beta channel build with label “Live”
      ///   3. Dev channel build with label “Live”
      ///   4. Most recent stable channel build with build status Pass
      ///   5. Most recent beta channel build with build status Pass
      ///   6. Most recent dev channel build with build status Pass
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildResponse> FindMostStableBuildAsync(global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FindMostStableBuild, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override BuildServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BuildServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(BuildServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListBuildTargets, serviceImpl.ListBuildTargets)
          .AddMethod(__Method_ListBuilds, serviceImpl.ListBuilds)
          .AddMethod(__Method_CheckBuildStageStatus, serviceImpl.CheckBuildStageStatus)
          .AddMethod(__Method_StageBuild, serviceImpl.StageBuild)
          .AddMethod(__Method_FindMostStableBuild, serviceImpl.FindMostStableBuild).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BuildServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListBuildTargets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsRequest, global::Google.Chromeos.Moblab.V1Beta1.ListBuildTargetsResponse>(serviceImpl.ListBuildTargets));
      serviceBinder.AddMethod(__Method_ListBuilds, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Chromeos.Moblab.V1Beta1.ListBuildsRequest, global::Google.Chromeos.Moblab.V1Beta1.ListBuildsResponse>(serviceImpl.ListBuilds));
      serviceBinder.AddMethod(__Method_CheckBuildStageStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusRequest, global::Google.Chromeos.Moblab.V1Beta1.CheckBuildStageStatusResponse>(serviceImpl.CheckBuildStageStatus));
      serviceBinder.AddMethod(__Method_StageBuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Chromeos.Moblab.V1Beta1.StageBuildRequest, global::Google.LongRunning.Operation>(serviceImpl.StageBuild));
      serviceBinder.AddMethod(__Method_FindMostStableBuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildRequest, global::Google.Chromeos.Moblab.V1Beta1.FindMostStableBuildResponse>(serviceImpl.FindMostStableBuild));
    }

  }
}
#endregion
