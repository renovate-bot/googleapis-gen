# frozen_string_literal: true

# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!

require "google/cloud/errors"
require "google/chromeos/moblab/v1beta1/build_service_pb"

module Google
  module Chromeos
    module Moblab
      module V1beta1
        module BuildService
          ##
          # Client for the BuildService service.
          #
          # Manages Chrome OS build services.
          #
          class Client
            include Paths

            # @private
            attr_reader :build_service_stub

            ##
            # Configure the BuildService Client class.
            #
            # See {::Google::Chromeos::Moblab::V1beta1::BuildService::Client::Configuration}
            # for a description of the configuration fields.
            #
            # @example
            #
            #   # Modify the configuration for all BuildService clients
            #   ::Google::Chromeos::Moblab::V1beta1::BuildService::Client.configure do |config|
            #     config.timeout = 10.0
            #   end
            #
            # @yield [config] Configure the Client client.
            # @yieldparam config [Client::Configuration]
            #
            # @return [Client::Configuration]
            #
            def self.configure
              @configure ||= begin
                namespace = ["Google", "Chromeos", "Moblab", "V1beta1"]
                parent_config = while namespace.any?
                                  parent_name = namespace.join "::"
                                  parent_const = const_get parent_name
                                  break parent_const.configure if parent_const.respond_to? :configure
                                  namespace.pop
                                end
                default_config = Client::Configuration.new parent_config

                default_config.rpcs.list_builds.timeout = 60.0
                default_config.rpcs.list_builds.retry_policy = {
                  initial_delay: 1.0, max_delay: 10.0, multiplier: 1.3, retry_codes: [14]
                }

                default_config.rpcs.check_build_stage_status.timeout = 60.0
                default_config.rpcs.check_build_stage_status.retry_policy = {
                  initial_delay: 1.0, max_delay: 10.0, multiplier: 1.3, retry_codes: [14]
                }

                default_config.rpcs.stage_build.timeout = 60.0

                default_config
              end
              yield @configure if block_given?
              @configure
            end

            ##
            # Configure the BuildService Client instance.
            #
            # The configuration is set to the derived mode, meaning that values can be changed,
            # but structural changes (adding new fields, etc.) are not allowed. Structural changes
            # should be made on {Client.configure}.
            #
            # See {::Google::Chromeos::Moblab::V1beta1::BuildService::Client::Configuration}
            # for a description of the configuration fields.
            #
            # @yield [config] Configure the Client client.
            # @yieldparam config [Client::Configuration]
            #
            # @return [Client::Configuration]
            #
            def configure
              yield @config if block_given?
              @config
            end

            ##
            # Create a new BuildService client object.
            #
            # @example
            #
            #   # Create a client using the default configuration
            #   client = ::Google::Chromeos::Moblab::V1beta1::BuildService::Client.new
            #
            #   # Create a client using a custom configuration
            #   client = ::Google::Chromeos::Moblab::V1beta1::BuildService::Client.new do |config|
            #     config.timeout = 10.0
            #   end
            #
            # @yield [config] Configure the BuildService client.
            # @yieldparam config [Client::Configuration]
            #
            def initialize
              # These require statements are intentionally placed here to initialize
              # the gRPC module only when it's required.
              # See https://github.com/googleapis/toolkit/issues/446
              require "gapic/grpc"
              require "google/chromeos/moblab/v1beta1/build_service_services_pb"

              # Create the configuration object
              @config = Configuration.new Client.configure

              # Yield the configuration if needed
              yield @config if block_given?

              # Create credentials
              credentials = @config.credentials
              # Use self-signed JWT if the endpoint is unchanged from default,
              # but only if the default endpoint does not have a region prefix.
              enable_self_signed_jwt = @config.endpoint == Client.configure.endpoint &&
                                       !@config.endpoint.split(".").first.include?("-")
              credentials ||= Credentials.default scope: @config.scope,
                                                  enable_self_signed_jwt: enable_self_signed_jwt
              if credentials.is_a?(::String) || credentials.is_a?(::Hash)
                credentials = Credentials.new credentials, scope: @config.scope
              end
              @quota_project_id = @config.quota_project
              @quota_project_id ||= credentials.quota_project_id if credentials.respond_to? :quota_project_id

              @operations_client = Operations.new do |config|
                config.credentials = credentials
                config.endpoint = @config.endpoint
              end

              @build_service_stub = ::Gapic::ServiceStub.new(
                ::Google::Chromeos::Moblab::V1beta1::BuildService::Stub,
                credentials:  credentials,
                endpoint:     @config.endpoint,
                channel_args: @config.channel_args,
                interceptors: @config.interceptors
              )
            end

            ##
            # Get the associated client for long-running operations.
            #
            # @return [::Google::Chromeos::Moblab::V1beta1::BuildService::Operations]
            #
            attr_reader :operations_client

            # Service calls

            ##
            # Lists all build targets that a user has access to.
            #
            # @overload list_build_targets(request, options = nil)
            #   Pass arguments to `list_build_targets` via a request object, either of type
            #   {::Google::Chromeos::Moblab::V1beta1::ListBuildTargetsRequest} or an equivalent Hash.
            #
            #   @param request [::Google::Chromeos::Moblab::V1beta1::ListBuildTargetsRequest, ::Hash]
            #     A request object representing the call parameters. Required. To specify no
            #     parameters, or to keep all the default parameter values, pass an empty Hash.
            #   @param options [::Gapic::CallOptions, ::Hash]
            #     Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
            #
            # @overload list_build_targets(page_size: nil, page_token: nil)
            #   Pass arguments to `list_build_targets` via keyword arguments. Note that at
            #   least one keyword argument is required. To specify no parameters, or to keep all
            #   the default parameter values, pass an empty Hash as a request object (see above).
            #
            #   @param page_size [::Integer]
            #     Optional. The number of build targets to return in a page.
            #   @param page_token [::String]
            #     Optional. A page token, received from a previous `ListBuildTargets` call. Provide
            #     this to retrieve the subsequent page.
            #
            # @yield [response, operation] Access the result along with the RPC operation
            # @yieldparam response [::Gapic::PagedEnumerable<::Google::Chromeos::Moblab::V1beta1::BuildTarget>]
            # @yieldparam operation [::GRPC::ActiveCall::Operation]
            #
            # @return [::Gapic::PagedEnumerable<::Google::Chromeos::Moblab::V1beta1::BuildTarget>]
            #
            # @raise [::Google::Cloud::Error] if the RPC is aborted.
            #
            def list_build_targets request, options = nil
              raise ::ArgumentError, "request must be provided" if request.nil?

              request = ::Gapic::Protobuf.coerce request, to: ::Google::Chromeos::Moblab::V1beta1::ListBuildTargetsRequest

              # Converts hash and nil to an options object
              options = ::Gapic::CallOptions.new(**options.to_h) if options.respond_to? :to_h

              # Customize the options with defaults
              metadata = @config.rpcs.list_build_targets.metadata.to_h

              # Set x-goog-api-client and x-goog-user-project headers
              metadata[:"x-goog-api-client"] ||= ::Gapic::Headers.x_goog_api_client \
                lib_name: @config.lib_name, lib_version: @config.lib_version,
                gapic_version: ::Google::Cloud::Chromeos::Moblab::V1beta1::VERSION
              metadata[:"x-goog-user-project"] = @quota_project_id if @quota_project_id

              options.apply_defaults timeout:      @config.rpcs.list_build_targets.timeout,
                                     metadata:     metadata,
                                     retry_policy: @config.rpcs.list_build_targets.retry_policy

              options.apply_defaults timeout:      @config.timeout,
                                     metadata:     @config.metadata,
                                     retry_policy: @config.retry_policy

              @build_service_stub.call_rpc :list_build_targets, request, options: options do |response, operation|
                response = ::Gapic::PagedEnumerable.new @build_service_stub, :list_build_targets, request, response, operation, options
                yield response, operation if block_given?
                return response
              end
            rescue ::GRPC::BadStatus => e
              raise ::Google::Cloud::Error.from_error(e)
            end

            ##
            # Lists all models for the given build target.
            #
            # @overload list_models(request, options = nil)
            #   Pass arguments to `list_models` via a request object, either of type
            #   {::Google::Chromeos::Moblab::V1beta1::ListModelsRequest} or an equivalent Hash.
            #
            #   @param request [::Google::Chromeos::Moblab::V1beta1::ListModelsRequest, ::Hash]
            #     A request object representing the call parameters. Required. To specify no
            #     parameters, or to keep all the default parameter values, pass an empty Hash.
            #   @param options [::Gapic::CallOptions, ::Hash]
            #     Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
            #
            # @overload list_models(parent: nil, page_size: nil, page_token: nil)
            #   Pass arguments to `list_models` via keyword arguments. Note that at
            #   least one keyword argument is required. To specify no parameters, or to keep all
            #   the default parameter values, pass an empty Hash as a request object (see above).
            #
            #   @param parent [::String]
            #     Required. The full resource name of build target.
            #   @param page_size [::Integer]
            #     Optional. The number of models to return in a page.
            #   @param page_token [::String]
            #     Optional. A page token, received from a previous `ListModels` call. Provide
            #     this to retrieve the subsequent page.
            #
            # @yield [response, operation] Access the result along with the RPC operation
            # @yieldparam response [::Gapic::PagedEnumerable<::Google::Chromeos::Moblab::V1beta1::Model>]
            # @yieldparam operation [::GRPC::ActiveCall::Operation]
            #
            # @return [::Gapic::PagedEnumerable<::Google::Chromeos::Moblab::V1beta1::Model>]
            #
            # @raise [::Google::Cloud::Error] if the RPC is aborted.
            #
            def list_models request, options = nil
              raise ::ArgumentError, "request must be provided" if request.nil?

              request = ::Gapic::Protobuf.coerce request, to: ::Google::Chromeos::Moblab::V1beta1::ListModelsRequest

              # Converts hash and nil to an options object
              options = ::Gapic::CallOptions.new(**options.to_h) if options.respond_to? :to_h

              # Customize the options with defaults
              metadata = @config.rpcs.list_models.metadata.to_h

              # Set x-goog-api-client and x-goog-user-project headers
              metadata[:"x-goog-api-client"] ||= ::Gapic::Headers.x_goog_api_client \
                lib_name: @config.lib_name, lib_version: @config.lib_version,
                gapic_version: ::Google::Cloud::Chromeos::Moblab::V1beta1::VERSION
              metadata[:"x-goog-user-project"] = @quota_project_id if @quota_project_id

              header_params = {}
              if request.parent
                header_params["parent"] = request.parent
              end

              request_params_header = header_params.map { |k, v| "#{k}=#{v}" }.join("&")
              metadata[:"x-goog-request-params"] ||= request_params_header

              options.apply_defaults timeout:      @config.rpcs.list_models.timeout,
                                     metadata:     metadata,
                                     retry_policy: @config.rpcs.list_models.retry_policy

              options.apply_defaults timeout:      @config.timeout,
                                     metadata:     @config.metadata,
                                     retry_policy: @config.retry_policy

              @build_service_stub.call_rpc :list_models, request, options: options do |response, operation|
                response = ::Gapic::PagedEnumerable.new @build_service_stub, :list_models, request, response, operation, options
                yield response, operation if block_given?
                return response
              end
            rescue ::GRPC::BadStatus => e
              raise ::Google::Cloud::Error.from_error(e)
            end

            ##
            # Lists all builds for the given build target and model in descending order
            # for the milestones and build versions.
            #
            # @overload list_builds(request, options = nil)
            #   Pass arguments to `list_builds` via a request object, either of type
            #   {::Google::Chromeos::Moblab::V1beta1::ListBuildsRequest} or an equivalent Hash.
            #
            #   @param request [::Google::Chromeos::Moblab::V1beta1::ListBuildsRequest, ::Hash]
            #     A request object representing the call parameters. Required. To specify no
            #     parameters, or to keep all the default parameter values, pass an empty Hash.
            #   @param options [::Gapic::CallOptions, ::Hash]
            #     Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
            #
            # @overload list_builds(parent: nil, page_size: nil, page_token: nil, filter: nil, read_mask: nil, group_by: nil)
            #   Pass arguments to `list_builds` via keyword arguments. Note that at
            #   least one keyword argument is required. To specify no parameters, or to keep all
            #   the default parameter values, pass an empty Hash as a request object (see above).
            #
            #   @param parent [::String]
            #     Required. The full resource name of the model. The model id is the same as
            #     the build target id for non-unified builds.
            #     For example,
            #     'buildTargets/octopus/models/bobba'.
            #   @param page_size [::Integer]
            #     Optional. The number of builds to return in a page.
            #   @param page_token [::String]
            #     Optional. A page token, received from a previous `ListBuilds` call. Provide this to
            #     retrieve the subsequent page.
            #   @param filter [::String]
            #     Optional. Filter that specifies value constraints of fields. For example, the
            #     filter can be set as "filter='milestone=milestones/80'" to only select
            #     builds in milestone 80.
            #   @param read_mask [::Google::Protobuf::FieldMask, ::Hash]
            #     Optional. Read mask that specifies which Build fields to return. If empty, all Build
            #     fields will be returned.
            #     Valid fields: name, milestone, build_version.
            #     For example, if the read_mask is set as "read_mask='milestone'", the
            #     ListBuilds will return a list of Builds object with only the milestone
            #     field.
            #   @param group_by [::Google::Protobuf::FieldMask, ::Hash]
            #     Optional. The operation that groups by all the Build fields specified in the read
            #     mask. The group_by field should be the same as the read_mask field in
            #     convention of SQL.
            #
            # @yield [response, operation] Access the result along with the RPC operation
            # @yieldparam response [::Gapic::PagedEnumerable<::Google::Chromeos::Moblab::V1beta1::Build>]
            # @yieldparam operation [::GRPC::ActiveCall::Operation]
            #
            # @return [::Gapic::PagedEnumerable<::Google::Chromeos::Moblab::V1beta1::Build>]
            #
            # @raise [::Google::Cloud::Error] if the RPC is aborted.
            #
            def list_builds request, options = nil
              raise ::ArgumentError, "request must be provided" if request.nil?

              request = ::Gapic::Protobuf.coerce request, to: ::Google::Chromeos::Moblab::V1beta1::ListBuildsRequest

              # Converts hash and nil to an options object
              options = ::Gapic::CallOptions.new(**options.to_h) if options.respond_to? :to_h

              # Customize the options with defaults
              metadata = @config.rpcs.list_builds.metadata.to_h

              # Set x-goog-api-client and x-goog-user-project headers
              metadata[:"x-goog-api-client"] ||= ::Gapic::Headers.x_goog_api_client \
                lib_name: @config.lib_name, lib_version: @config.lib_version,
                gapic_version: ::Google::Cloud::Chromeos::Moblab::V1beta1::VERSION
              metadata[:"x-goog-user-project"] = @quota_project_id if @quota_project_id

              header_params = {}
              if request.parent
                header_params["parent"] = request.parent
              end

              request_params_header = header_params.map { |k, v| "#{k}=#{v}" }.join("&")
              metadata[:"x-goog-request-params"] ||= request_params_header

              options.apply_defaults timeout:      @config.rpcs.list_builds.timeout,
                                     metadata:     metadata,
                                     retry_policy: @config.rpcs.list_builds.retry_policy

              options.apply_defaults timeout:      @config.timeout,
                                     metadata:     @config.metadata,
                                     retry_policy: @config.retry_policy

              @build_service_stub.call_rpc :list_builds, request, options: options do |response, operation|
                response = ::Gapic::PagedEnumerable.new @build_service_stub, :list_builds, request, response, operation, options
                yield response, operation if block_given?
                return response
              end
            rescue ::GRPC::BadStatus => e
              raise ::Google::Cloud::Error.from_error(e)
            end

            ##
            # Checks the stage status for a given build artifact in a partner Google
            # Cloud Storage bucket.
            #
            # @overload check_build_stage_status(request, options = nil)
            #   Pass arguments to `check_build_stage_status` via a request object, either of type
            #   {::Google::Chromeos::Moblab::V1beta1::CheckBuildStageStatusRequest} or an equivalent Hash.
            #
            #   @param request [::Google::Chromeos::Moblab::V1beta1::CheckBuildStageStatusRequest, ::Hash]
            #     A request object representing the call parameters. Required. To specify no
            #     parameters, or to keep all the default parameter values, pass an empty Hash.
            #   @param options [::Gapic::CallOptions, ::Hash]
            #     Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
            #
            # @overload check_build_stage_status(name: nil, filter: nil)
            #   Pass arguments to `check_build_stage_status` via keyword arguments. Note that at
            #   least one keyword argument is required. To specify no parameters, or to keep all
            #   the default parameter values, pass an empty Hash as a request object (see above).
            #
            #   @param name [::String]
            #     Required. The full resource name of the build artifact.
            #     For example,
            #     'buildTargets/octopus/models/bobba/builds/12607.6.0/artifacts/chromeos-moblab-peng-staging'.
            #   @param filter [::String]
            #     Optional. Filter that specifies value constraints of fields. For example, the
            #     filter can be set as "filter='type=release'" to only check the release
            #     builds.
            #
            # @yield [response, operation] Access the result along with the RPC operation
            # @yieldparam response [::Google::Chromeos::Moblab::V1beta1::CheckBuildStageStatusResponse]
            # @yieldparam operation [::GRPC::ActiveCall::Operation]
            #
            # @return [::Google::Chromeos::Moblab::V1beta1::CheckBuildStageStatusResponse]
            #
            # @raise [::Google::Cloud::Error] if the RPC is aborted.
            #
            def check_build_stage_status request, options = nil
              raise ::ArgumentError, "request must be provided" if request.nil?

              request = ::Gapic::Protobuf.coerce request, to: ::Google::Chromeos::Moblab::V1beta1::CheckBuildStageStatusRequest

              # Converts hash and nil to an options object
              options = ::Gapic::CallOptions.new(**options.to_h) if options.respond_to? :to_h

              # Customize the options with defaults
              metadata = @config.rpcs.check_build_stage_status.metadata.to_h

              # Set x-goog-api-client and x-goog-user-project headers
              metadata[:"x-goog-api-client"] ||= ::Gapic::Headers.x_goog_api_client \
                lib_name: @config.lib_name, lib_version: @config.lib_version,
                gapic_version: ::Google::Cloud::Chromeos::Moblab::V1beta1::VERSION
              metadata[:"x-goog-user-project"] = @quota_project_id if @quota_project_id

              header_params = {}
              if request.name
                header_params["name"] = request.name
              end

              request_params_header = header_params.map { |k, v| "#{k}=#{v}" }.join("&")
              metadata[:"x-goog-request-params"] ||= request_params_header

              options.apply_defaults timeout:      @config.rpcs.check_build_stage_status.timeout,
                                     metadata:     metadata,
                                     retry_policy: @config.rpcs.check_build_stage_status.retry_policy

              options.apply_defaults timeout:      @config.timeout,
                                     metadata:     @config.metadata,
                                     retry_policy: @config.retry_policy

              @build_service_stub.call_rpc :check_build_stage_status, request, options: options do |response, operation|
                yield response, operation if block_given?
                return response
              end
            rescue ::GRPC::BadStatus => e
              raise ::Google::Cloud::Error.from_error(e)
            end

            ##
            # Stages a given build artifact from a internal Google Cloud Storage bucket
            # to a partner Google Cloud Storage bucket. If any of objects has already
            # been copied, it will overwrite the previous objects. Operation <response:
            # {::Google::Chromeos::Moblab::V1beta1::StageBuildResponse StageBuildResponse},
            #            metadata: {::Google::Chromeos::Moblab::V1beta1::StageBuildMetadata StageBuildMetadata}>
            #
            # @overload stage_build(request, options = nil)
            #   Pass arguments to `stage_build` via a request object, either of type
            #   {::Google::Chromeos::Moblab::V1beta1::StageBuildRequest} or an equivalent Hash.
            #
            #   @param request [::Google::Chromeos::Moblab::V1beta1::StageBuildRequest, ::Hash]
            #     A request object representing the call parameters. Required. To specify no
            #     parameters, or to keep all the default parameter values, pass an empty Hash.
            #   @param options [::Gapic::CallOptions, ::Hash]
            #     Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
            #
            # @overload stage_build(name: nil, filter: nil)
            #   Pass arguments to `stage_build` via keyword arguments. Note that at
            #   least one keyword argument is required. To specify no parameters, or to keep all
            #   the default parameter values, pass an empty Hash as a request object (see above).
            #
            #   @param name [::String]
            #     Required. The full resource name of the build artifact.
            #     For example,
            #     'buildTargets/octopus/models/bobba/builds/12607.6.0/artifacts/chromeos-moblab-peng-staging'.
            #   @param filter [::String]
            #     Optional. Filter that specifies value constraints of fields. For example, the
            #     filter can be set as "filter='type=release'" to only check the release
            #     builds.
            #
            # @yield [response, operation] Access the result along with the RPC operation
            # @yieldparam response [::Gapic::Operation]
            # @yieldparam operation [::GRPC::ActiveCall::Operation]
            #
            # @return [::Gapic::Operation]
            #
            # @raise [::Google::Cloud::Error] if the RPC is aborted.
            #
            def stage_build request, options = nil
              raise ::ArgumentError, "request must be provided" if request.nil?

              request = ::Gapic::Protobuf.coerce request, to: ::Google::Chromeos::Moblab::V1beta1::StageBuildRequest

              # Converts hash and nil to an options object
              options = ::Gapic::CallOptions.new(**options.to_h) if options.respond_to? :to_h

              # Customize the options with defaults
              metadata = @config.rpcs.stage_build.metadata.to_h

              # Set x-goog-api-client and x-goog-user-project headers
              metadata[:"x-goog-api-client"] ||= ::Gapic::Headers.x_goog_api_client \
                lib_name: @config.lib_name, lib_version: @config.lib_version,
                gapic_version: ::Google::Cloud::Chromeos::Moblab::V1beta1::VERSION
              metadata[:"x-goog-user-project"] = @quota_project_id if @quota_project_id

              header_params = {}
              if request.name
                header_params["name"] = request.name
              end

              request_params_header = header_params.map { |k, v| "#{k}=#{v}" }.join("&")
              metadata[:"x-goog-request-params"] ||= request_params_header

              options.apply_defaults timeout:      @config.rpcs.stage_build.timeout,
                                     metadata:     metadata,
                                     retry_policy: @config.rpcs.stage_build.retry_policy

              options.apply_defaults timeout:      @config.timeout,
                                     metadata:     @config.metadata,
                                     retry_policy: @config.retry_policy

              @build_service_stub.call_rpc :stage_build, request, options: options do |response, operation|
                response = ::Gapic::Operation.new response, @operations_client, options: options
                yield response, operation if block_given?
                return response
              end
            rescue ::GRPC::BadStatus => e
              raise ::Google::Cloud::Error.from_error(e)
            end

            ##
            # Finds the most stable build for the given build target. The definition of
            # the most stable build is determined by evaluating the following rules in
            # order until one is true. If none are true, then there is no stable build
            # and it will return an empty response.
            #
            # Evaluation rules:
            #   1. Stable channel build with label “Live”
            #   2. Beta channel build with label “Live”
            #   3. Dev channel build with label “Live”
            #   4. Most recent stable channel build with build status Pass
            #   5. Most recent beta channel build with build status Pass
            #   6. Most recent dev channel build with build status Pass
            #
            # @overload find_most_stable_build(request, options = nil)
            #   Pass arguments to `find_most_stable_build` via a request object, either of type
            #   {::Google::Chromeos::Moblab::V1beta1::FindMostStableBuildRequest} or an equivalent Hash.
            #
            #   @param request [::Google::Chromeos::Moblab::V1beta1::FindMostStableBuildRequest, ::Hash]
            #     A request object representing the call parameters. Required. To specify no
            #     parameters, or to keep all the default parameter values, pass an empty Hash.
            #   @param options [::Gapic::CallOptions, ::Hash]
            #     Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
            #
            # @overload find_most_stable_build(build_target: nil)
            #   Pass arguments to `find_most_stable_build` via keyword arguments. Note that at
            #   least one keyword argument is required. To specify no parameters, or to keep all
            #   the default parameter values, pass an empty Hash as a request object (see above).
            #
            #   @param build_target [::String]
            #     Required. The full resource name of the build target.
            #     For example,
            #     'buildTargets/octopus'.
            #
            # @yield [response, operation] Access the result along with the RPC operation
            # @yieldparam response [::Google::Chromeos::Moblab::V1beta1::FindMostStableBuildResponse]
            # @yieldparam operation [::GRPC::ActiveCall::Operation]
            #
            # @return [::Google::Chromeos::Moblab::V1beta1::FindMostStableBuildResponse]
            #
            # @raise [::Google::Cloud::Error] if the RPC is aborted.
            #
            def find_most_stable_build request, options = nil
              raise ::ArgumentError, "request must be provided" if request.nil?

              request = ::Gapic::Protobuf.coerce request, to: ::Google::Chromeos::Moblab::V1beta1::FindMostStableBuildRequest

              # Converts hash and nil to an options object
              options = ::Gapic::CallOptions.new(**options.to_h) if options.respond_to? :to_h

              # Customize the options with defaults
              metadata = @config.rpcs.find_most_stable_build.metadata.to_h

              # Set x-goog-api-client and x-goog-user-project headers
              metadata[:"x-goog-api-client"] ||= ::Gapic::Headers.x_goog_api_client \
                lib_name: @config.lib_name, lib_version: @config.lib_version,
                gapic_version: ::Google::Cloud::Chromeos::Moblab::V1beta1::VERSION
              metadata[:"x-goog-user-project"] = @quota_project_id if @quota_project_id

              header_params = {}
              if request.build_target
                header_params["build_target"] = request.build_target
              end

              request_params_header = header_params.map { |k, v| "#{k}=#{v}" }.join("&")
              metadata[:"x-goog-request-params"] ||= request_params_header

              options.apply_defaults timeout:      @config.rpcs.find_most_stable_build.timeout,
                                     metadata:     metadata,
                                     retry_policy: @config.rpcs.find_most_stable_build.retry_policy

              options.apply_defaults timeout:      @config.timeout,
                                     metadata:     @config.metadata,
                                     retry_policy: @config.retry_policy

              @build_service_stub.call_rpc :find_most_stable_build, request, options: options do |response, operation|
                yield response, operation if block_given?
                return response
              end
            rescue ::GRPC::BadStatus => e
              raise ::Google::Cloud::Error.from_error(e)
            end

            ##
            # Configuration class for the BuildService API.
            #
            # This class represents the configuration for BuildService,
            # providing control over timeouts, retry behavior, logging, transport
            # parameters, and other low-level controls. Certain parameters can also be
            # applied individually to specific RPCs. See
            # {::Google::Chromeos::Moblab::V1beta1::BuildService::Client::Configuration::Rpcs}
            # for a list of RPCs that can be configured independently.
            #
            # Configuration can be applied globally to all clients, or to a single client
            # on construction.
            #
            # @example
            #
            #   # Modify the global config, setting the timeout for
            #   # list_build_targets to 20 seconds,
            #   # and all remaining timeouts to 10 seconds.
            #   ::Google::Chromeos::Moblab::V1beta1::BuildService::Client.configure do |config|
            #     config.timeout = 10.0
            #     config.rpcs.list_build_targets.timeout = 20.0
            #   end
            #
            #   # Apply the above configuration only to a new client.
            #   client = ::Google::Chromeos::Moblab::V1beta1::BuildService::Client.new do |config|
            #     config.timeout = 10.0
            #     config.rpcs.list_build_targets.timeout = 20.0
            #   end
            #
            # @!attribute [rw] endpoint
            #   The hostname or hostname:port of the service endpoint.
            #   Defaults to `"chromeosmoblab.googleapis.com"`.
            #   @return [::String]
            # @!attribute [rw] credentials
            #   Credentials to send with calls. You may provide any of the following types:
            #    *  (`String`) The path to a service account key file in JSON format
            #    *  (`Hash`) A service account key as a Hash
            #    *  (`Google::Auth::Credentials`) A googleauth credentials object
            #       (see the [googleauth docs](https://googleapis.dev/ruby/googleauth/latest/index.html))
            #    *  (`Signet::OAuth2::Client`) A signet oauth2 client object
            #       (see the [signet docs](https://googleapis.dev/ruby/signet/latest/Signet/OAuth2/Client.html))
            #    *  (`GRPC::Core::Channel`) a gRPC channel with included credentials
            #    *  (`GRPC::Core::ChannelCredentials`) a gRPC credentails object
            #    *  (`nil`) indicating no credentials
            #   @return [::Object]
            # @!attribute [rw] scope
            #   The OAuth scopes
            #   @return [::Array<::String>]
            # @!attribute [rw] lib_name
            #   The library name as recorded in instrumentation and logging
            #   @return [::String]
            # @!attribute [rw] lib_version
            #   The library version as recorded in instrumentation and logging
            #   @return [::String]
            # @!attribute [rw] channel_args
            #   Extra parameters passed to the gRPC channel. Note: this is ignored if a
            #   `GRPC::Core::Channel` object is provided as the credential.
            #   @return [::Hash]
            # @!attribute [rw] interceptors
            #   An array of interceptors that are run before calls are executed.
            #   @return [::Array<::GRPC::ClientInterceptor>]
            # @!attribute [rw] timeout
            #   The call timeout in seconds.
            #   @return [::Numeric]
            # @!attribute [rw] metadata
            #   Additional gRPC headers to be sent with the call.
            #   @return [::Hash{::Symbol=>::String}]
            # @!attribute [rw] retry_policy
            #   The retry policy. The value is a hash with the following keys:
            #    *  `:initial_delay` (*type:* `Numeric`) - The initial delay in seconds.
            #    *  `:max_delay` (*type:* `Numeric`) - The max delay in seconds.
            #    *  `:multiplier` (*type:* `Numeric`) - The incremental backoff multiplier.
            #    *  `:retry_codes` (*type:* `Array<String>`) - The error codes that should
            #       trigger a retry.
            #   @return [::Hash]
            # @!attribute [rw] quota_project
            #   A separate project against which to charge quota.
            #   @return [::String]
            #
            class Configuration
              extend ::Gapic::Config

              config_attr :endpoint,      "chromeosmoblab.googleapis.com", ::String
              config_attr :credentials,   nil do |value|
                allowed = [::String, ::Hash, ::Proc, ::Symbol, ::Google::Auth::Credentials, ::Signet::OAuth2::Client, nil]
                allowed += [::GRPC::Core::Channel, ::GRPC::Core::ChannelCredentials] if defined? ::GRPC
                allowed.any? { |klass| klass === value }
              end
              config_attr :scope,         nil, ::String, ::Array, nil
              config_attr :lib_name,      nil, ::String, nil
              config_attr :lib_version,   nil, ::String, nil
              config_attr(:channel_args,  { "grpc.service_config_disable_resolution" => 1 }, ::Hash, nil)
              config_attr :interceptors,  nil, ::Array, nil
              config_attr :timeout,       nil, ::Numeric, nil
              config_attr :metadata,      nil, ::Hash, nil
              config_attr :retry_policy,  nil, ::Hash, ::Proc, nil
              config_attr :quota_project, nil, ::String, nil

              # @private
              def initialize parent_config = nil
                @parent_config = parent_config unless parent_config.nil?

                yield self if block_given?
              end

              ##
              # Configurations for individual RPCs
              # @return [Rpcs]
              #
              def rpcs
                @rpcs ||= begin
                  parent_rpcs = nil
                  parent_rpcs = @parent_config.rpcs if defined?(@parent_config) && @parent_config.respond_to?(:rpcs)
                  Rpcs.new parent_rpcs
                end
              end

              ##
              # Configuration RPC class for the BuildService API.
              #
              # Includes fields providing the configuration for each RPC in this service.
              # Each configuration object is of type `Gapic::Config::Method` and includes
              # the following configuration fields:
              #
              #  *  `timeout` (*type:* `Numeric`) - The call timeout in seconds
              #  *  `metadata` (*type:* `Hash{Symbol=>String}`) - Additional gRPC headers
              #  *  `retry_policy (*type:* `Hash`) - The retry policy. The policy fields
              #     include the following keys:
              #      *  `:initial_delay` (*type:* `Numeric`) - The initial delay in seconds.
              #      *  `:max_delay` (*type:* `Numeric`) - The max delay in seconds.
              #      *  `:multiplier` (*type:* `Numeric`) - The incremental backoff multiplier.
              #      *  `:retry_codes` (*type:* `Array<String>`) - The error codes that should
              #         trigger a retry.
              #
              class Rpcs
                ##
                # RPC-specific configuration for `list_build_targets`
                # @return [::Gapic::Config::Method]
                #
                attr_reader :list_build_targets
                ##
                # RPC-specific configuration for `list_models`
                # @return [::Gapic::Config::Method]
                #
                attr_reader :list_models
                ##
                # RPC-specific configuration for `list_builds`
                # @return [::Gapic::Config::Method]
                #
                attr_reader :list_builds
                ##
                # RPC-specific configuration for `check_build_stage_status`
                # @return [::Gapic::Config::Method]
                #
                attr_reader :check_build_stage_status
                ##
                # RPC-specific configuration for `stage_build`
                # @return [::Gapic::Config::Method]
                #
                attr_reader :stage_build
                ##
                # RPC-specific configuration for `find_most_stable_build`
                # @return [::Gapic::Config::Method]
                #
                attr_reader :find_most_stable_build

                # @private
                def initialize parent_rpcs = nil
                  list_build_targets_config = parent_rpcs.list_build_targets if parent_rpcs.respond_to? :list_build_targets
                  @list_build_targets = ::Gapic::Config::Method.new list_build_targets_config
                  list_models_config = parent_rpcs.list_models if parent_rpcs.respond_to? :list_models
                  @list_models = ::Gapic::Config::Method.new list_models_config
                  list_builds_config = parent_rpcs.list_builds if parent_rpcs.respond_to? :list_builds
                  @list_builds = ::Gapic::Config::Method.new list_builds_config
                  check_build_stage_status_config = parent_rpcs.check_build_stage_status if parent_rpcs.respond_to? :check_build_stage_status
                  @check_build_stage_status = ::Gapic::Config::Method.new check_build_stage_status_config
                  stage_build_config = parent_rpcs.stage_build if parent_rpcs.respond_to? :stage_build
                  @stage_build = ::Gapic::Config::Method.new stage_build_config
                  find_most_stable_build_config = parent_rpcs.find_most_stable_build if parent_rpcs.respond_to? :find_most_stable_build
                  @find_most_stable_build = ::Gapic::Config::Method.new find_most_stable_build_config

                  yield self if block_given?
                end
              end
            end
          end
        end
      end
    end
  end
end
