// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/monitoring/dashboard/v1/layouts.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Monitoring.Dashboard.V1 {

  /// <summary>Holder for reflection information generated from google/monitoring/dashboard/v1/layouts.proto</summary>
  public static partial class LayoutsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/monitoring/dashboard/v1/layouts.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LayoutsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixnb29nbGUvbW9uaXRvcmluZy9kYXNoYm9hcmQvdjEvbGF5b3V0cy5wcm90",
            "bxIeZ29vZ2xlLm1vbml0b3JpbmcuZGFzaGJvYXJkLnYxGitnb29nbGUvbW9u",
            "aXRvcmluZy9kYXNoYm9hcmQvdjEvd2lkZ2V0LnByb3RvIlYKCkdyaWRMYXlv",
            "dXQSDwoHY29sdW1ucxgBIAEoAxI3Cgd3aWRnZXRzGAIgAygLMiYuZ29vZ2xl",
            "Lm1vbml0b3JpbmcuZGFzaGJvYXJkLnYxLldpZGdldCLeAQoMTW9zYWljTGF5",
            "b3V0Eg8KB2NvbHVtbnMYASABKAUSQAoFdGlsZXMYAyADKAsyMS5nb29nbGUu",
            "bW9uaXRvcmluZy5kYXNoYm9hcmQudjEuTW9zYWljTGF5b3V0LlRpbGUaewoE",
            "VGlsZRINCgV4X3BvcxgBIAEoBRINCgV5X3BvcxgCIAEoBRINCgV3aWR0aBgD",
            "IAEoBRIOCgZoZWlnaHQYBCABKAUSNgoGd2lkZ2V0GAUgASgLMiYuZ29vZ2xl",
            "Lm1vbml0b3JpbmcuZGFzaGJvYXJkLnYxLldpZGdldCKYAQoJUm93TGF5b3V0",
            "EjsKBHJvd3MYASADKAsyLS5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQu",
            "djEuUm93TGF5b3V0LlJvdxpOCgNSb3cSDgoGd2VpZ2h0GAEgASgDEjcKB3dp",
            "ZGdldHMYAiADKAsyJi5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQudjEu",
            "V2lkZ2V0IqcBCgxDb2x1bW5MYXlvdXQSRAoHY29sdW1ucxgBIAMoCzIzLmdv",
            "b2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5Db2x1bW5MYXlvdXQuQ29s",
            "dW1uGlEKBkNvbHVtbhIOCgZ3ZWlnaHQYASABKAMSNwoHd2lkZ2V0cxgCIAMo",
            "CzImLmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5XaWRnZXRC9gEK",
            "ImNvbS5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQudjFCDExheW91dHNQ",
            "cm90b1ABWkdnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlz",
            "L21vbml0b3JpbmcvZGFzaGJvYXJkL3YxO2Rhc2hib2FyZKoCJEdvb2dsZS5D",
            "bG91ZC5Nb25pdG9yaW5nLkRhc2hib2FyZC5WMcoCJEdvb2dsZVxDbG91ZFxN",
            "b25pdG9yaW5nXERhc2hib2FyZFxWMeoCKEdvb2dsZTo6Q2xvdWQ6Ok1vbml0",
            "b3Jpbmc6OkRhc2hib2FyZDo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Cloud.Monitoring.Dashboard.V1.WidgetReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.Dashboard.V1.GridLayout), global::Google.Cloud.Monitoring.Dashboard.V1.GridLayout.Parser, new[]{ "Columns", "Widgets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.Dashboard.V1.MosaicLayout), global::Google.Cloud.Monitoring.Dashboard.V1.MosaicLayout.Parser, new[]{ "Columns", "Tiles" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.Dashboard.V1.MosaicLayout.Types.Tile), global::Google.Cloud.Monitoring.Dashboard.V1.MosaicLayout.Types.Tile.Parser, new[]{ "XPos", "YPos", "Width", "Height", "Widget" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.Dashboard.V1.RowLayout), global::Google.Cloud.Monitoring.Dashboard.V1.RowLayout.Parser, new[]{ "Rows" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.Dashboard.V1.RowLayout.Types.Row), global::Google.Cloud.Monitoring.Dashboard.V1.RowLayout.Types.Row.Parser, new[]{ "Weight", "Widgets" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.Dashboard.V1.ColumnLayout), global::Google.Cloud.Monitoring.Dashboard.V1.ColumnLayout.Parser, new[]{ "Columns" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.Dashboard.V1.ColumnLayout.Types.Column), global::Google.Cloud.Monitoring.Dashboard.V1.ColumnLayout.Types.Column.Parser, new[]{ "Weight", "Widgets" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A basic layout divides the available space into vertical columns of equal
  /// width and arranges a list of widgets using a row-first strategy.
  /// </summary>
  public sealed partial class GridLayout : pb::IMessage<GridLayout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GridLayout> _parser = new pb::MessageParser<GridLayout>(() => new GridLayout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GridLayout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.Dashboard.V1.LayoutsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GridLayout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GridLayout(GridLayout other) : this() {
      columns_ = other.columns_;
      widgets_ = other.widgets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GridLayout Clone() {
      return new GridLayout(this);
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 1;
    private long columns_;
    /// <summary>
    /// The number of columns into which the view's width is divided. If omitted
    /// or set to zero, a system default will be used while rendering.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Columns {
      get { return columns_; }
      set {
        columns_ = value;
      }
    }

    /// <summary>Field number for the "widgets" field.</summary>
    public const int WidgetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.Dashboard.V1.Widget> _repeated_widgets_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Monitoring.Dashboard.V1.Widget.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.Widget> widgets_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.Widget>();
    /// <summary>
    /// The informational elements that are arranged into the columns row-first.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.Widget> Widgets {
      get { return widgets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GridLayout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GridLayout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Columns != other.Columns) return false;
      if(!widgets_.Equals(other.widgets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Columns != 0L) hash ^= Columns.GetHashCode();
      hash ^= widgets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Columns != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Columns);
      }
      widgets_.WriteTo(output, _repeated_widgets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Columns != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Columns);
      }
      widgets_.WriteTo(ref output, _repeated_widgets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Columns != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Columns);
      }
      size += widgets_.CalculateSize(_repeated_widgets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GridLayout other) {
      if (other == null) {
        return;
      }
      if (other.Columns != 0L) {
        Columns = other.Columns;
      }
      widgets_.Add(other.widgets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Columns = input.ReadInt64();
            break;
          }
          case 18: {
            widgets_.AddEntriesFrom(input, _repeated_widgets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Columns = input.ReadInt64();
            break;
          }
          case 18: {
            widgets_.AddEntriesFrom(ref input, _repeated_widgets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A mosaic layout divides the available space into a grid of blocks, and
  /// overlays the grid with tiles. Unlike `GridLayout`, tiles may span multiple
  /// grid blocks and can be placed at arbitrary locations in the grid.
  /// </summary>
  public sealed partial class MosaicLayout : pb::IMessage<MosaicLayout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MosaicLayout> _parser = new pb::MessageParser<MosaicLayout>(() => new MosaicLayout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MosaicLayout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.Dashboard.V1.LayoutsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MosaicLayout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MosaicLayout(MosaicLayout other) : this() {
      columns_ = other.columns_;
      tiles_ = other.tiles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MosaicLayout Clone() {
      return new MosaicLayout(this);
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 1;
    private int columns_;
    /// <summary>
    /// The number of columns in the mosaic grid. The number of columns must be
    /// between 1 and 12, inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Columns {
      get { return columns_; }
      set {
        columns_ = value;
      }
    }

    /// <summary>Field number for the "tiles" field.</summary>
    public const int TilesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.Dashboard.V1.MosaicLayout.Types.Tile> _repeated_tiles_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Monitoring.Dashboard.V1.MosaicLayout.Types.Tile.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.MosaicLayout.Types.Tile> tiles_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.MosaicLayout.Types.Tile>();
    /// <summary>
    /// The tiles to display.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.MosaicLayout.Types.Tile> Tiles {
      get { return tiles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MosaicLayout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MosaicLayout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Columns != other.Columns) return false;
      if(!tiles_.Equals(other.tiles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Columns != 0) hash ^= Columns.GetHashCode();
      hash ^= tiles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Columns != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Columns);
      }
      tiles_.WriteTo(output, _repeated_tiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Columns != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Columns);
      }
      tiles_.WriteTo(ref output, _repeated_tiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Columns != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Columns);
      }
      size += tiles_.CalculateSize(_repeated_tiles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MosaicLayout other) {
      if (other == null) {
        return;
      }
      if (other.Columns != 0) {
        Columns = other.Columns;
      }
      tiles_.Add(other.tiles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Columns = input.ReadInt32();
            break;
          }
          case 26: {
            tiles_.AddEntriesFrom(input, _repeated_tiles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Columns = input.ReadInt32();
            break;
          }
          case 26: {
            tiles_.AddEntriesFrom(ref input, _repeated_tiles_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MosaicLayout message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A single tile in the mosaic. The placement and size of the tile are
      /// configurable.
      /// </summary>
      public sealed partial class Tile : pb::IMessage<Tile>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Tile> _parser = new pb::MessageParser<Tile>(() => new Tile());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Tile> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Monitoring.Dashboard.V1.MosaicLayout.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Tile() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Tile(Tile other) : this() {
          xPos_ = other.xPos_;
          yPos_ = other.yPos_;
          width_ = other.width_;
          height_ = other.height_;
          widget_ = other.widget_ != null ? other.widget_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Tile Clone() {
          return new Tile(this);
        }

        /// <summary>Field number for the "x_pos" field.</summary>
        public const int XPosFieldNumber = 1;
        private int xPos_;
        /// <summary>
        /// The zero-indexed position of the tile in grid blocks relative to the
        /// left edge of the grid. Tiles must be contained within the specified
        /// number of columns. `x_pos` cannot be negative.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int XPos {
          get { return xPos_; }
          set {
            xPos_ = value;
          }
        }

        /// <summary>Field number for the "y_pos" field.</summary>
        public const int YPosFieldNumber = 2;
        private int yPos_;
        /// <summary>
        /// The zero-indexed position of the tile in grid blocks relative to the
        /// top edge of the grid. `y_pos` cannot be negative.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int YPos {
          get { return yPos_; }
          set {
            yPos_ = value;
          }
        }

        /// <summary>Field number for the "width" field.</summary>
        public const int WidthFieldNumber = 3;
        private int width_;
        /// <summary>
        /// The width of the tile, measured in grid blocks. Tiles must have a
        /// minimum width of 1.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Width {
          get { return width_; }
          set {
            width_ = value;
          }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 4;
        private int height_;
        /// <summary>
        /// The height of the tile, measured in grid blocks. Tiles must have a
        /// minimum height of 1.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Height {
          get { return height_; }
          set {
            height_ = value;
          }
        }

        /// <summary>Field number for the "widget" field.</summary>
        public const int WidgetFieldNumber = 5;
        private global::Google.Cloud.Monitoring.Dashboard.V1.Widget widget_;
        /// <summary>
        /// The informational widget contained in the tile. For example an `XyChart`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Monitoring.Dashboard.V1.Widget Widget {
          get { return widget_; }
          set {
            widget_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Tile);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Tile other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (XPos != other.XPos) return false;
          if (YPos != other.YPos) return false;
          if (Width != other.Width) return false;
          if (Height != other.Height) return false;
          if (!object.Equals(Widget, other.Widget)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (XPos != 0) hash ^= XPos.GetHashCode();
          if (YPos != 0) hash ^= YPos.GetHashCode();
          if (Width != 0) hash ^= Width.GetHashCode();
          if (Height != 0) hash ^= Height.GetHashCode();
          if (widget_ != null) hash ^= Widget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (XPos != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(XPos);
          }
          if (YPos != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(YPos);
          }
          if (Width != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (Height != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (widget_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(Widget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (XPos != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(XPos);
          }
          if (YPos != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(YPos);
          }
          if (Width != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Width);
          }
          if (Height != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Height);
          }
          if (widget_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(Widget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (XPos != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(XPos);
          }
          if (YPos != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(YPos);
          }
          if (Width != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
          }
          if (Height != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
          }
          if (widget_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Widget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Tile other) {
          if (other == null) {
            return;
          }
          if (other.XPos != 0) {
            XPos = other.XPos;
          }
          if (other.YPos != 0) {
            YPos = other.YPos;
          }
          if (other.Width != 0) {
            Width = other.Width;
          }
          if (other.Height != 0) {
            Height = other.Height;
          }
          if (other.widget_ != null) {
            if (widget_ == null) {
              Widget = new global::Google.Cloud.Monitoring.Dashboard.V1.Widget();
            }
            Widget.MergeFrom(other.Widget);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                XPos = input.ReadInt32();
                break;
              }
              case 16: {
                YPos = input.ReadInt32();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 42: {
                if (widget_ == null) {
                  Widget = new global::Google.Cloud.Monitoring.Dashboard.V1.Widget();
                }
                input.ReadMessage(Widget);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                XPos = input.ReadInt32();
                break;
              }
              case 16: {
                YPos = input.ReadInt32();
                break;
              }
              case 24: {
                Width = input.ReadInt32();
                break;
              }
              case 32: {
                Height = input.ReadInt32();
                break;
              }
              case 42: {
                if (widget_ == null) {
                  Widget = new global::Google.Cloud.Monitoring.Dashboard.V1.Widget();
                }
                input.ReadMessage(Widget);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// A simplified layout that divides the available space into rows
  /// and arranges a set of widgets horizontally in each row.
  /// </summary>
  public sealed partial class RowLayout : pb::IMessage<RowLayout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RowLayout> _parser = new pb::MessageParser<RowLayout>(() => new RowLayout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RowLayout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.Dashboard.V1.LayoutsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowLayout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowLayout(RowLayout other) : this() {
      rows_ = other.rows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowLayout Clone() {
      return new RowLayout(this);
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.Dashboard.V1.RowLayout.Types.Row> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Monitoring.Dashboard.V1.RowLayout.Types.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.RowLayout.Types.Row> rows_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.RowLayout.Types.Row>();
    /// <summary>
    /// The rows of content to display.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.RowLayout.Types.Row> Rows {
      get { return rows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RowLayout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RowLayout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rows_.Equals(other.rows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rows_.WriteTo(output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rows_.WriteTo(ref output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RowLayout other) {
      if (other == null) {
        return;
      }
      rows_.Add(other.rows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rows_.AddEntriesFrom(ref input, _repeated_rows_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RowLayout message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Defines the layout properties and content for a row.
      /// </summary>
      public sealed partial class Row : pb::IMessage<Row>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Row> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Monitoring.Dashboard.V1.RowLayout.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Row() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Row(Row other) : this() {
          weight_ = other.weight_;
          widgets_ = other.widgets_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Row Clone() {
          return new Row(this);
        }

        /// <summary>Field number for the "weight" field.</summary>
        public const int WeightFieldNumber = 1;
        private long weight_;
        /// <summary>
        /// The relative weight of this row. The row weight is used to adjust the
        /// height of rows on the screen (relative to peers). Greater the weight,
        /// greater the height of the row on the screen. If omitted, a value
        /// of 1 is used while rendering.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Weight {
          get { return weight_; }
          set {
            weight_ = value;
          }
        }

        /// <summary>Field number for the "widgets" field.</summary>
        public const int WidgetsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.Dashboard.V1.Widget> _repeated_widgets_codec
            = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Monitoring.Dashboard.V1.Widget.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.Widget> widgets_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.Widget>();
        /// <summary>
        /// The display widgets arranged horizontally in this row.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.Widget> Widgets {
          get { return widgets_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Row other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Weight != other.Weight) return false;
          if(!widgets_.Equals(other.widgets_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Weight != 0L) hash ^= Weight.GetHashCode();
          hash ^= widgets_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Weight != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Weight);
          }
          widgets_.WriteTo(output, _repeated_widgets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Weight != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Weight);
          }
          widgets_.WriteTo(ref output, _repeated_widgets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Weight != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Weight);
          }
          size += widgets_.CalculateSize(_repeated_widgets_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Row other) {
          if (other == null) {
            return;
          }
          if (other.Weight != 0L) {
            Weight = other.Weight;
          }
          widgets_.Add(other.widgets_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Weight = input.ReadInt64();
                break;
              }
              case 18: {
                widgets_.AddEntriesFrom(input, _repeated_widgets_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Weight = input.ReadInt64();
                break;
              }
              case 18: {
                widgets_.AddEntriesFrom(ref input, _repeated_widgets_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// A simplified layout that divides the available space into vertical columns
  /// and arranges a set of widgets vertically in each column.
  /// </summary>
  public sealed partial class ColumnLayout : pb::IMessage<ColumnLayout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ColumnLayout> _parser = new pb::MessageParser<ColumnLayout>(() => new ColumnLayout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ColumnLayout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.Dashboard.V1.LayoutsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnLayout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnLayout(ColumnLayout other) : this() {
      columns_ = other.columns_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnLayout Clone() {
      return new ColumnLayout(this);
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.Dashboard.V1.ColumnLayout.Types.Column> _repeated_columns_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Monitoring.Dashboard.V1.ColumnLayout.Types.Column.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.ColumnLayout.Types.Column> columns_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.ColumnLayout.Types.Column>();
    /// <summary>
    /// The columns of content to display.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.ColumnLayout.Types.Column> Columns {
      get { return columns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ColumnLayout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ColumnLayout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!columns_.Equals(other.columns_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= columns_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      columns_.WriteTo(output, _repeated_columns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      columns_.WriteTo(ref output, _repeated_columns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += columns_.CalculateSize(_repeated_columns_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ColumnLayout other) {
      if (other == null) {
        return;
      }
      columns_.Add(other.columns_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ColumnLayout message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Defines the layout properties and content for a column.
      /// </summary>
      public sealed partial class Column : pb::IMessage<Column>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Column> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Monitoring.Dashboard.V1.ColumnLayout.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Column() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Column(Column other) : this() {
          weight_ = other.weight_;
          widgets_ = other.widgets_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Column Clone() {
          return new Column(this);
        }

        /// <summary>Field number for the "weight" field.</summary>
        public const int WeightFieldNumber = 1;
        private long weight_;
        /// <summary>
        /// The relative weight of this column. The column weight is used to adjust
        /// the width of columns on the screen (relative to peers).
        /// Greater the weight, greater the width of the column on the screen.
        /// If omitted, a value of 1 is used while rendering.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Weight {
          get { return weight_; }
          set {
            weight_ = value;
          }
        }

        /// <summary>Field number for the "widgets" field.</summary>
        public const int WidgetsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.Dashboard.V1.Widget> _repeated_widgets_codec
            = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Monitoring.Dashboard.V1.Widget.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.Widget> widgets_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.Widget>();
        /// <summary>
        /// The display widgets arranged vertically in this column.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Monitoring.Dashboard.V1.Widget> Widgets {
          get { return widgets_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Column);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Column other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Weight != other.Weight) return false;
          if(!widgets_.Equals(other.widgets_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Weight != 0L) hash ^= Weight.GetHashCode();
          hash ^= widgets_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Weight != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Weight);
          }
          widgets_.WriteTo(output, _repeated_widgets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Weight != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Weight);
          }
          widgets_.WriteTo(ref output, _repeated_widgets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Weight != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Weight);
          }
          size += widgets_.CalculateSize(_repeated_widgets_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Column other) {
          if (other == null) {
            return;
          }
          if (other.Weight != 0L) {
            Weight = other.Weight;
          }
          widgets_.Add(other.widgets_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Weight = input.ReadInt64();
                break;
              }
              case 18: {
                widgets_.AddEntriesFrom(input, _repeated_widgets_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Weight = input.ReadInt64();
                break;
              }
              case 18: {
                widgets_.AddEntriesFrom(ref input, _repeated_widgets_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
