// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/monitoring/dashboard/v1/metrics.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Monitoring.Dashboard.V1 {

  /// <summary>Holder for reflection information generated from google/monitoring/dashboard/v1/metrics.proto</summary>
  public static partial class MetricsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/monitoring/dashboard/v1/metrics.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MetricsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixnb29nbGUvbW9uaXRvcmluZy9kYXNoYm9hcmQvdjEvbWV0cmljcy5wcm90",
            "bxIeZ29vZ2xlLm1vbml0b3JpbmcuZGFzaGJvYXJkLnYxGh9nb29nbGUvYXBp",
            "L2ZpZWxkX2JlaGF2aW9yLnByb3RvGitnb29nbGUvbW9uaXRvcmluZy9kYXNo",
            "Ym9hcmQvdjEvY29tbW9uLnByb3RvIoMCCg9UaW1lU2VyaWVzUXVlcnkSTgoS",
            "dGltZV9zZXJpZXNfZmlsdGVyGAEgASgLMjAuZ29vZ2xlLm1vbml0b3Jpbmcu",
            "ZGFzaGJvYXJkLnYxLlRpbWVTZXJpZXNGaWx0ZXJIABJZChh0aW1lX3Nlcmll",
            "c19maWx0ZXJfcmF0aW8YAiABKAsyNS5nb29nbGUubW9uaXRvcmluZy5kYXNo",
            "Ym9hcmQudjEuVGltZVNlcmllc0ZpbHRlclJhdGlvSAASJAoadGltZV9zZXJp",
            "ZXNfcXVlcnlfbGFuZ3VhZ2UYAyABKAlIABIVCg11bml0X292ZXJyaWRlGAUg",
            "ASgJQggKBnNvdXJjZSKKAwoQVGltZVNlcmllc0ZpbHRlchITCgZmaWx0ZXIY",
            "ASABKAlCA+BBAhJACgthZ2dyZWdhdGlvbhgCIAEoCzIrLmdvb2dsZS5tb25p",
            "dG9yaW5nLmRhc2hib2FyZC52MS5BZ2dyZWdhdGlvbhJKChVzZWNvbmRhcnlf",
            "YWdncmVnYXRpb24YAyABKAsyKy5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9h",
            "cmQudjEuQWdncmVnYXRpb24SVwoXcGlja190aW1lX3Nlcmllc19maWx0ZXIY",
            "BCABKAsyNC5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQudjEuUGlja1Rp",
            "bWVTZXJpZXNGaWx0ZXJIABJpCh5zdGF0aXN0aWNhbF90aW1lX3Nlcmllc19m",
            "aWx0ZXIYBSABKAsyOy5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQudjEu",
            "U3RhdGlzdGljYWxUaW1lU2VyaWVzRmlsdGVyQgIYAUgAQg8KDW91dHB1dF9m",
            "aWx0ZXIixgQKFVRpbWVTZXJpZXNGaWx0ZXJSYXRpbxJSCgludW1lcmF0b3IY",
            "ASABKAsyPy5nb29nbGUubW9uaXRvcmluZy5kYXNoYm9hcmQudjEuVGltZVNl",
            "cmllc0ZpbHRlclJhdGlvLlJhdGlvUGFydBJUCgtkZW5vbWluYXRvchgCIAEo",
            "CzI/Lmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5UaW1lU2VyaWVz",
            "RmlsdGVyUmF0aW8uUmF0aW9QYXJ0EkoKFXNlY29uZGFyeV9hZ2dyZWdhdGlv",
            "bhgDIAEoCzIrLmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5BZ2dy",
            "ZWdhdGlvbhJXChdwaWNrX3RpbWVfc2VyaWVzX2ZpbHRlchgEIAEoCzI0Lmdv",
            "b2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5QaWNrVGltZVNlcmllc0Zp",
            "bHRlckgAEmkKHnN0YXRpc3RpY2FsX3RpbWVfc2VyaWVzX2ZpbHRlchgFIAEo",
            "CzI7Lmdvb2dsZS5tb25pdG9yaW5nLmRhc2hib2FyZC52MS5TdGF0aXN0aWNh",
            "bFRpbWVTZXJpZXNGaWx0ZXJCAhgBSAAaYgoJUmF0aW9QYXJ0EhMKBmZpbHRl",
            "chgBIAEoCUID4EECEkAKC2FnZ3JlZ2F0aW9uGAIgASgLMisuZ29vZ2xlLm1v",
            "bml0b3JpbmcuZGFzaGJvYXJkLnYxLkFnZ3JlZ2F0aW9uQg8KDW91dHB1dF9m",
            "aWx0ZXIipAIKCVRocmVzaG9sZBINCgVsYWJlbBgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoARI+CgVjb2xvchgDIAEoDjIvLmdvb2dsZS5tb25pdG9yaW5nLmRhc2hi",
            "b2FyZC52MS5UaHJlc2hvbGQuQ29sb3ISRgoJZGlyZWN0aW9uGAQgASgOMjMu",
            "Z29vZ2xlLm1vbml0b3JpbmcuZGFzaGJvYXJkLnYxLlRocmVzaG9sZC5EaXJl",
            "Y3Rpb24iMwoFQ29sb3ISFQoRQ09MT1JfVU5TUEVDSUZJRUQQABIKCgZZRUxM",
            "T1cQBBIHCgNSRUQQBiI8CglEaXJlY3Rpb24SGQoVRElSRUNUSU9OX1VOU1BF",
            "Q0lGSUVEEAASCQoFQUJPVkUQARIJCgVCRUxPVxACKlEKDlNwYXJrQ2hhcnRU",
            "eXBlEiAKHFNQQVJLX0NIQVJUX1RZUEVfVU5TUEVDSUZJRUQQABIOCgpTUEFS",
            "S19MSU5FEAESDQoJU1BBUktfQkFSEAJC9gEKImNvbS5nb29nbGUubW9uaXRv",
            "cmluZy5kYXNoYm9hcmQudjFCDE1ldHJpY3NQcm90b1ABWkdnb29nbGUuZ29s",
            "YW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL21vbml0b3JpbmcvZGFzaGJv",
            "YXJkL3YxO2Rhc2hib2FyZKoCJEdvb2dsZS5DbG91ZC5Nb25pdG9yaW5nLkRh",
            "c2hib2FyZC5WMcoCJEdvb2dsZVxDbG91ZFxNb25pdG9yaW5nXERhc2hib2Fy",
            "ZFxWMeoCKEdvb2dsZTo6Q2xvdWQ6Ok1vbml0b3Jpbmc6OkRhc2hib2FyZDo6",
            "VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Cloud.Monitoring.Dashboard.V1.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Monitoring.Dashboard.V1.SparkChartType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesQuery), global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesQuery.Parser, new[]{ "TimeSeriesFilter", "TimeSeriesFilterRatio", "TimeSeriesQueryLanguage", "UnitOverride" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilter), global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilter.Parser, new[]{ "Filter", "Aggregation", "SecondaryAggregation", "PickTimeSeriesFilter", "StatisticalTimeSeriesFilter" }, new[]{ "OutputFilter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio), global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Parser, new[]{ "Numerator", "Denominator", "SecondaryAggregation", "PickTimeSeriesFilter", "StatisticalTimeSeriesFilter" }, new[]{ "OutputFilter" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Types.RatioPart), global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Types.RatioPart.Parser, new[]{ "Filter", "Aggregation" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.Dashboard.V1.Threshold), global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Parser, new[]{ "Label", "Value", "Color", "Direction" }, null, new[]{ typeof(global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Color), typeof(global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Direction) }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Defines the possible types of spark chart supported by the `Scorecard`.
  /// </summary>
  public enum SparkChartType {
    /// <summary>
    /// Not allowed in well-formed requests.
    /// </summary>
    [pbr::OriginalName("SPARK_CHART_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The sparkline will be rendered as a small line chart.
    /// </summary>
    [pbr::OriginalName("SPARK_LINE")] SparkLine = 1,
    /// <summary>
    /// The sparkbar will be rendered as a small bar chart.
    /// </summary>
    [pbr::OriginalName("SPARK_BAR")] SparkBar = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// TimeSeriesQuery collects the set of supported methods for querying time
  /// series data from the Stackdriver metrics API.
  /// </summary>
  public sealed partial class TimeSeriesQuery : pb::IMessage<TimeSeriesQuery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimeSeriesQuery> _parser = new pb::MessageParser<TimeSeriesQuery>(() => new TimeSeriesQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeSeriesQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.Dashboard.V1.MetricsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeriesQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeriesQuery(TimeSeriesQuery other) : this() {
      unitOverride_ = other.unitOverride_;
      switch (other.SourceCase) {
        case SourceOneofCase.TimeSeriesFilter:
          TimeSeriesFilter = other.TimeSeriesFilter.Clone();
          break;
        case SourceOneofCase.TimeSeriesFilterRatio:
          TimeSeriesFilterRatio = other.TimeSeriesFilterRatio.Clone();
          break;
        case SourceOneofCase.TimeSeriesQueryLanguage:
          TimeSeriesQueryLanguage = other.TimeSeriesQueryLanguage;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeriesQuery Clone() {
      return new TimeSeriesQuery(this);
    }

    /// <summary>Field number for the "time_series_filter" field.</summary>
    public const int TimeSeriesFilterFieldNumber = 1;
    /// <summary>
    /// Filter parameters to fetch time series.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilter TimeSeriesFilter {
      get { return sourceCase_ == SourceOneofCase.TimeSeriesFilter ? (global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilter) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.TimeSeriesFilter;
      }
    }

    /// <summary>Field number for the "time_series_filter_ratio" field.</summary>
    public const int TimeSeriesFilterRatioFieldNumber = 2;
    /// <summary>
    /// Parameters to fetch a ratio between two time series filters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio TimeSeriesFilterRatio {
      get { return sourceCase_ == SourceOneofCase.TimeSeriesFilterRatio ? (global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.TimeSeriesFilterRatio;
      }
    }

    /// <summary>Field number for the "time_series_query_language" field.</summary>
    public const int TimeSeriesQueryLanguageFieldNumber = 3;
    /// <summary>
    /// A query used to fetch time series.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeSeriesQueryLanguage {
      get { return sourceCase_ == SourceOneofCase.TimeSeriesQueryLanguage ? (string) source_ : ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.TimeSeriesQueryLanguage;
      }
    }

    /// <summary>Field number for the "unit_override" field.</summary>
    public const int UnitOverrideFieldNumber = 5;
    private string unitOverride_ = "";
    /// <summary>
    /// The unit of data contained in fetched time series. If non-empty, this
    /// unit will override any unit that accompanies fetched data. The format is
    /// the same as the
    /// [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors)
    /// field in `MetricDescriptor`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitOverride {
      get { return unitOverride_; }
      set {
        unitOverride_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      TimeSeriesFilter = 1,
      TimeSeriesFilterRatio = 2,
      TimeSeriesQueryLanguage = 3,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeSeriesQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeSeriesQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeSeriesFilter, other.TimeSeriesFilter)) return false;
      if (!object.Equals(TimeSeriesFilterRatio, other.TimeSeriesFilterRatio)) return false;
      if (TimeSeriesQueryLanguage != other.TimeSeriesQueryLanguage) return false;
      if (UnitOverride != other.UnitOverride) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.TimeSeriesFilter) hash ^= TimeSeriesFilter.GetHashCode();
      if (sourceCase_ == SourceOneofCase.TimeSeriesFilterRatio) hash ^= TimeSeriesFilterRatio.GetHashCode();
      if (sourceCase_ == SourceOneofCase.TimeSeriesQueryLanguage) hash ^= TimeSeriesQueryLanguage.GetHashCode();
      if (UnitOverride.Length != 0) hash ^= UnitOverride.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sourceCase_ == SourceOneofCase.TimeSeriesFilter) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeSeriesFilter);
      }
      if (sourceCase_ == SourceOneofCase.TimeSeriesFilterRatio) {
        output.WriteRawTag(18);
        output.WriteMessage(TimeSeriesFilterRatio);
      }
      if (sourceCase_ == SourceOneofCase.TimeSeriesQueryLanguage) {
        output.WriteRawTag(26);
        output.WriteString(TimeSeriesQueryLanguage);
      }
      if (UnitOverride.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UnitOverride);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sourceCase_ == SourceOneofCase.TimeSeriesFilter) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeSeriesFilter);
      }
      if (sourceCase_ == SourceOneofCase.TimeSeriesFilterRatio) {
        output.WriteRawTag(18);
        output.WriteMessage(TimeSeriesFilterRatio);
      }
      if (sourceCase_ == SourceOneofCase.TimeSeriesQueryLanguage) {
        output.WriteRawTag(26);
        output.WriteString(TimeSeriesQueryLanguage);
      }
      if (UnitOverride.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UnitOverride);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.TimeSeriesFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeSeriesFilter);
      }
      if (sourceCase_ == SourceOneofCase.TimeSeriesFilterRatio) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeSeriesFilterRatio);
      }
      if (sourceCase_ == SourceOneofCase.TimeSeriesQueryLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeSeriesQueryLanguage);
      }
      if (UnitOverride.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitOverride);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeSeriesQuery other) {
      if (other == null) {
        return;
      }
      if (other.UnitOverride.Length != 0) {
        UnitOverride = other.UnitOverride;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.TimeSeriesFilter:
          if (TimeSeriesFilter == null) {
            TimeSeriesFilter = new global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilter();
          }
          TimeSeriesFilter.MergeFrom(other.TimeSeriesFilter);
          break;
        case SourceOneofCase.TimeSeriesFilterRatio:
          if (TimeSeriesFilterRatio == null) {
            TimeSeriesFilterRatio = new global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio();
          }
          TimeSeriesFilterRatio.MergeFrom(other.TimeSeriesFilterRatio);
          break;
        case SourceOneofCase.TimeSeriesQueryLanguage:
          TimeSeriesQueryLanguage = other.TimeSeriesQueryLanguage;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilter subBuilder = new global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilter();
            if (sourceCase_ == SourceOneofCase.TimeSeriesFilter) {
              subBuilder.MergeFrom(TimeSeriesFilter);
            }
            input.ReadMessage(subBuilder);
            TimeSeriesFilter = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio subBuilder = new global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio();
            if (sourceCase_ == SourceOneofCase.TimeSeriesFilterRatio) {
              subBuilder.MergeFrom(TimeSeriesFilterRatio);
            }
            input.ReadMessage(subBuilder);
            TimeSeriesFilterRatio = subBuilder;
            break;
          }
          case 26: {
            TimeSeriesQueryLanguage = input.ReadString();
            break;
          }
          case 42: {
            UnitOverride = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilter subBuilder = new global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilter();
            if (sourceCase_ == SourceOneofCase.TimeSeriesFilter) {
              subBuilder.MergeFrom(TimeSeriesFilter);
            }
            input.ReadMessage(subBuilder);
            TimeSeriesFilter = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio subBuilder = new global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio();
            if (sourceCase_ == SourceOneofCase.TimeSeriesFilterRatio) {
              subBuilder.MergeFrom(TimeSeriesFilterRatio);
            }
            input.ReadMessage(subBuilder);
            TimeSeriesFilterRatio = subBuilder;
            break;
          }
          case 26: {
            TimeSeriesQueryLanguage = input.ReadString();
            break;
          }
          case 42: {
            UnitOverride = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A filter that defines a subset of time series data that is displayed in a
  /// widget. Time series data is fetched using the
  /// [`ListTimeSeries`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list)
  /// method.
  /// </summary>
  public sealed partial class TimeSeriesFilter : pb::IMessage<TimeSeriesFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimeSeriesFilter> _parser = new pb::MessageParser<TimeSeriesFilter>(() => new TimeSeriesFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeSeriesFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.Dashboard.V1.MetricsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeriesFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeriesFilter(TimeSeriesFilter other) : this() {
      filter_ = other.filter_;
      aggregation_ = other.aggregation_ != null ? other.aggregation_.Clone() : null;
      secondaryAggregation_ = other.secondaryAggregation_ != null ? other.secondaryAggregation_.Clone() : null;
      switch (other.OutputFilterCase) {
        case OutputFilterOneofCase.PickTimeSeriesFilter:
          PickTimeSeriesFilter = other.PickTimeSeriesFilter.Clone();
          break;
        case OutputFilterOneofCase.StatisticalTimeSeriesFilter:
          StatisticalTimeSeriesFilter = other.StatisticalTimeSeriesFilter.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeriesFilter Clone() {
      return new TimeSeriesFilter(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    /// <summary>
    /// Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
    /// that identifies the metric types, resources, and projects to query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aggregation" field.</summary>
    public const int AggregationFieldNumber = 2;
    private global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation aggregation_;
    /// <summary>
    /// By default, the raw time series data is returned.
    /// Use this field to combine multiple time series for different views of the
    /// data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation Aggregation {
      get { return aggregation_; }
      set {
        aggregation_ = value;
      }
    }

    /// <summary>Field number for the "secondary_aggregation" field.</summary>
    public const int SecondaryAggregationFieldNumber = 3;
    private global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation secondaryAggregation_;
    /// <summary>
    /// Apply a second aggregation after `aggregation` is applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation SecondaryAggregation {
      get { return secondaryAggregation_; }
      set {
        secondaryAggregation_ = value;
      }
    }

    /// <summary>Field number for the "pick_time_series_filter" field.</summary>
    public const int PickTimeSeriesFilterFieldNumber = 4;
    /// <summary>
    /// Ranking based time series filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter PickTimeSeriesFilter {
      get { return outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter ? (global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter) outputFilter_ : null; }
      set {
        outputFilter_ = value;
        outputFilterCase_ = value == null ? OutputFilterOneofCase.None : OutputFilterOneofCase.PickTimeSeriesFilter;
      }
    }

    /// <summary>Field number for the "statistical_time_series_filter" field.</summary>
    public const int StatisticalTimeSeriesFilterFieldNumber = 5;
    /// <summary>
    /// Statistics based time series filter.
    /// Note: This field is deprecated and completely ignored by the API.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter StatisticalTimeSeriesFilter {
      get { return outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter ? (global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter) outputFilter_ : null; }
      set {
        outputFilter_ = value;
        outputFilterCase_ = value == null ? OutputFilterOneofCase.None : OutputFilterOneofCase.StatisticalTimeSeriesFilter;
      }
    }

    private object outputFilter_;
    /// <summary>Enum of possible cases for the "output_filter" oneof.</summary>
    public enum OutputFilterOneofCase {
      None = 0,
      PickTimeSeriesFilter = 4,
      StatisticalTimeSeriesFilter = 5,
    }
    private OutputFilterOneofCase outputFilterCase_ = OutputFilterOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputFilterOneofCase OutputFilterCase {
      get { return outputFilterCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOutputFilter() {
      outputFilterCase_ = OutputFilterOneofCase.None;
      outputFilter_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeSeriesFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeSeriesFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      if (!object.Equals(Aggregation, other.Aggregation)) return false;
      if (!object.Equals(SecondaryAggregation, other.SecondaryAggregation)) return false;
      if (!object.Equals(PickTimeSeriesFilter, other.PickTimeSeriesFilter)) return false;
      if (!object.Equals(StatisticalTimeSeriesFilter, other.StatisticalTimeSeriesFilter)) return false;
      if (OutputFilterCase != other.OutputFilterCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (aggregation_ != null) hash ^= Aggregation.GetHashCode();
      if (secondaryAggregation_ != null) hash ^= SecondaryAggregation.GetHashCode();
      if (outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter) hash ^= PickTimeSeriesFilter.GetHashCode();
      if (outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter) hash ^= StatisticalTimeSeriesFilter.GetHashCode();
      hash ^= (int) outputFilterCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (aggregation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Aggregation);
      }
      if (secondaryAggregation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SecondaryAggregation);
      }
      if (outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter) {
        output.WriteRawTag(34);
        output.WriteMessage(PickTimeSeriesFilter);
      }
      if (outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter) {
        output.WriteRawTag(42);
        output.WriteMessage(StatisticalTimeSeriesFilter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (aggregation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Aggregation);
      }
      if (secondaryAggregation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SecondaryAggregation);
      }
      if (outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter) {
        output.WriteRawTag(34);
        output.WriteMessage(PickTimeSeriesFilter);
      }
      if (outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter) {
        output.WriteRawTag(42);
        output.WriteMessage(StatisticalTimeSeriesFilter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (aggregation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Aggregation);
      }
      if (secondaryAggregation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SecondaryAggregation);
      }
      if (outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PickTimeSeriesFilter);
      }
      if (outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatisticalTimeSeriesFilter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeSeriesFilter other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.aggregation_ != null) {
        if (aggregation_ == null) {
          Aggregation = new global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation();
        }
        Aggregation.MergeFrom(other.Aggregation);
      }
      if (other.secondaryAggregation_ != null) {
        if (secondaryAggregation_ == null) {
          SecondaryAggregation = new global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation();
        }
        SecondaryAggregation.MergeFrom(other.SecondaryAggregation);
      }
      switch (other.OutputFilterCase) {
        case OutputFilterOneofCase.PickTimeSeriesFilter:
          if (PickTimeSeriesFilter == null) {
            PickTimeSeriesFilter = new global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter();
          }
          PickTimeSeriesFilter.MergeFrom(other.PickTimeSeriesFilter);
          break;
        case OutputFilterOneofCase.StatisticalTimeSeriesFilter:
          if (StatisticalTimeSeriesFilter == null) {
            StatisticalTimeSeriesFilter = new global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter();
          }
          StatisticalTimeSeriesFilter.MergeFrom(other.StatisticalTimeSeriesFilter);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
          case 18: {
            if (aggregation_ == null) {
              Aggregation = new global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation();
            }
            input.ReadMessage(Aggregation);
            break;
          }
          case 26: {
            if (secondaryAggregation_ == null) {
              SecondaryAggregation = new global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation();
            }
            input.ReadMessage(SecondaryAggregation);
            break;
          }
          case 34: {
            global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter subBuilder = new global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter();
            if (outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter) {
              subBuilder.MergeFrom(PickTimeSeriesFilter);
            }
            input.ReadMessage(subBuilder);
            PickTimeSeriesFilter = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter subBuilder = new global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter();
            if (outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter) {
              subBuilder.MergeFrom(StatisticalTimeSeriesFilter);
            }
            input.ReadMessage(subBuilder);
            StatisticalTimeSeriesFilter = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
          case 18: {
            if (aggregation_ == null) {
              Aggregation = new global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation();
            }
            input.ReadMessage(Aggregation);
            break;
          }
          case 26: {
            if (secondaryAggregation_ == null) {
              SecondaryAggregation = new global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation();
            }
            input.ReadMessage(SecondaryAggregation);
            break;
          }
          case 34: {
            global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter subBuilder = new global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter();
            if (outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter) {
              subBuilder.MergeFrom(PickTimeSeriesFilter);
            }
            input.ReadMessage(subBuilder);
            PickTimeSeriesFilter = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter subBuilder = new global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter();
            if (outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter) {
              subBuilder.MergeFrom(StatisticalTimeSeriesFilter);
            }
            input.ReadMessage(subBuilder);
            StatisticalTimeSeriesFilter = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A pair of time series filters that define a ratio computation. The output
  /// time series is the pair-wise division of each aligned element from the
  /// numerator and denominator time series.
  /// </summary>
  public sealed partial class TimeSeriesFilterRatio : pb::IMessage<TimeSeriesFilterRatio>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimeSeriesFilterRatio> _parser = new pb::MessageParser<TimeSeriesFilterRatio>(() => new TimeSeriesFilterRatio());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeSeriesFilterRatio> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.Dashboard.V1.MetricsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeriesFilterRatio() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeriesFilterRatio(TimeSeriesFilterRatio other) : this() {
      numerator_ = other.numerator_ != null ? other.numerator_.Clone() : null;
      denominator_ = other.denominator_ != null ? other.denominator_.Clone() : null;
      secondaryAggregation_ = other.secondaryAggregation_ != null ? other.secondaryAggregation_.Clone() : null;
      switch (other.OutputFilterCase) {
        case OutputFilterOneofCase.PickTimeSeriesFilter:
          PickTimeSeriesFilter = other.PickTimeSeriesFilter.Clone();
          break;
        case OutputFilterOneofCase.StatisticalTimeSeriesFilter:
          StatisticalTimeSeriesFilter = other.StatisticalTimeSeriesFilter.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeriesFilterRatio Clone() {
      return new TimeSeriesFilterRatio(this);
    }

    /// <summary>Field number for the "numerator" field.</summary>
    public const int NumeratorFieldNumber = 1;
    private global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Types.RatioPart numerator_;
    /// <summary>
    /// The numerator of the ratio.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Types.RatioPart Numerator {
      get { return numerator_; }
      set {
        numerator_ = value;
      }
    }

    /// <summary>Field number for the "denominator" field.</summary>
    public const int DenominatorFieldNumber = 2;
    private global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Types.RatioPart denominator_;
    /// <summary>
    /// The denominator of the ratio.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Types.RatioPart Denominator {
      get { return denominator_; }
      set {
        denominator_ = value;
      }
    }

    /// <summary>Field number for the "secondary_aggregation" field.</summary>
    public const int SecondaryAggregationFieldNumber = 3;
    private global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation secondaryAggregation_;
    /// <summary>
    /// Apply a second aggregation after the ratio is computed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation SecondaryAggregation {
      get { return secondaryAggregation_; }
      set {
        secondaryAggregation_ = value;
      }
    }

    /// <summary>Field number for the "pick_time_series_filter" field.</summary>
    public const int PickTimeSeriesFilterFieldNumber = 4;
    /// <summary>
    /// Ranking based time series filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter PickTimeSeriesFilter {
      get { return outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter ? (global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter) outputFilter_ : null; }
      set {
        outputFilter_ = value;
        outputFilterCase_ = value == null ? OutputFilterOneofCase.None : OutputFilterOneofCase.PickTimeSeriesFilter;
      }
    }

    /// <summary>Field number for the "statistical_time_series_filter" field.</summary>
    public const int StatisticalTimeSeriesFilterFieldNumber = 5;
    /// <summary>
    /// Statistics based time series filter.
    /// Note: This field is deprecated and completely ignored by the API.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter StatisticalTimeSeriesFilter {
      get { return outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter ? (global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter) outputFilter_ : null; }
      set {
        outputFilter_ = value;
        outputFilterCase_ = value == null ? OutputFilterOneofCase.None : OutputFilterOneofCase.StatisticalTimeSeriesFilter;
      }
    }

    private object outputFilter_;
    /// <summary>Enum of possible cases for the "output_filter" oneof.</summary>
    public enum OutputFilterOneofCase {
      None = 0,
      PickTimeSeriesFilter = 4,
      StatisticalTimeSeriesFilter = 5,
    }
    private OutputFilterOneofCase outputFilterCase_ = OutputFilterOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputFilterOneofCase OutputFilterCase {
      get { return outputFilterCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOutputFilter() {
      outputFilterCase_ = OutputFilterOneofCase.None;
      outputFilter_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeSeriesFilterRatio);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeSeriesFilterRatio other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Numerator, other.Numerator)) return false;
      if (!object.Equals(Denominator, other.Denominator)) return false;
      if (!object.Equals(SecondaryAggregation, other.SecondaryAggregation)) return false;
      if (!object.Equals(PickTimeSeriesFilter, other.PickTimeSeriesFilter)) return false;
      if (!object.Equals(StatisticalTimeSeriesFilter, other.StatisticalTimeSeriesFilter)) return false;
      if (OutputFilterCase != other.OutputFilterCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (numerator_ != null) hash ^= Numerator.GetHashCode();
      if (denominator_ != null) hash ^= Denominator.GetHashCode();
      if (secondaryAggregation_ != null) hash ^= SecondaryAggregation.GetHashCode();
      if (outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter) hash ^= PickTimeSeriesFilter.GetHashCode();
      if (outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter) hash ^= StatisticalTimeSeriesFilter.GetHashCode();
      hash ^= (int) outputFilterCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (numerator_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Numerator);
      }
      if (denominator_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Denominator);
      }
      if (secondaryAggregation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SecondaryAggregation);
      }
      if (outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter) {
        output.WriteRawTag(34);
        output.WriteMessage(PickTimeSeriesFilter);
      }
      if (outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter) {
        output.WriteRawTag(42);
        output.WriteMessage(StatisticalTimeSeriesFilter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (numerator_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Numerator);
      }
      if (denominator_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Denominator);
      }
      if (secondaryAggregation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SecondaryAggregation);
      }
      if (outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter) {
        output.WriteRawTag(34);
        output.WriteMessage(PickTimeSeriesFilter);
      }
      if (outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter) {
        output.WriteRawTag(42);
        output.WriteMessage(StatisticalTimeSeriesFilter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (numerator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Numerator);
      }
      if (denominator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Denominator);
      }
      if (secondaryAggregation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SecondaryAggregation);
      }
      if (outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PickTimeSeriesFilter);
      }
      if (outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatisticalTimeSeriesFilter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeSeriesFilterRatio other) {
      if (other == null) {
        return;
      }
      if (other.numerator_ != null) {
        if (numerator_ == null) {
          Numerator = new global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Types.RatioPart();
        }
        Numerator.MergeFrom(other.Numerator);
      }
      if (other.denominator_ != null) {
        if (denominator_ == null) {
          Denominator = new global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Types.RatioPart();
        }
        Denominator.MergeFrom(other.Denominator);
      }
      if (other.secondaryAggregation_ != null) {
        if (secondaryAggregation_ == null) {
          SecondaryAggregation = new global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation();
        }
        SecondaryAggregation.MergeFrom(other.SecondaryAggregation);
      }
      switch (other.OutputFilterCase) {
        case OutputFilterOneofCase.PickTimeSeriesFilter:
          if (PickTimeSeriesFilter == null) {
            PickTimeSeriesFilter = new global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter();
          }
          PickTimeSeriesFilter.MergeFrom(other.PickTimeSeriesFilter);
          break;
        case OutputFilterOneofCase.StatisticalTimeSeriesFilter:
          if (StatisticalTimeSeriesFilter == null) {
            StatisticalTimeSeriesFilter = new global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter();
          }
          StatisticalTimeSeriesFilter.MergeFrom(other.StatisticalTimeSeriesFilter);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (numerator_ == null) {
              Numerator = new global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Types.RatioPart();
            }
            input.ReadMessage(Numerator);
            break;
          }
          case 18: {
            if (denominator_ == null) {
              Denominator = new global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Types.RatioPart();
            }
            input.ReadMessage(Denominator);
            break;
          }
          case 26: {
            if (secondaryAggregation_ == null) {
              SecondaryAggregation = new global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation();
            }
            input.ReadMessage(SecondaryAggregation);
            break;
          }
          case 34: {
            global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter subBuilder = new global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter();
            if (outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter) {
              subBuilder.MergeFrom(PickTimeSeriesFilter);
            }
            input.ReadMessage(subBuilder);
            PickTimeSeriesFilter = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter subBuilder = new global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter();
            if (outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter) {
              subBuilder.MergeFrom(StatisticalTimeSeriesFilter);
            }
            input.ReadMessage(subBuilder);
            StatisticalTimeSeriesFilter = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (numerator_ == null) {
              Numerator = new global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Types.RatioPart();
            }
            input.ReadMessage(Numerator);
            break;
          }
          case 18: {
            if (denominator_ == null) {
              Denominator = new global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Types.RatioPart();
            }
            input.ReadMessage(Denominator);
            break;
          }
          case 26: {
            if (secondaryAggregation_ == null) {
              SecondaryAggregation = new global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation();
            }
            input.ReadMessage(SecondaryAggregation);
            break;
          }
          case 34: {
            global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter subBuilder = new global::Google.Cloud.Monitoring.Dashboard.V1.PickTimeSeriesFilter();
            if (outputFilterCase_ == OutputFilterOneofCase.PickTimeSeriesFilter) {
              subBuilder.MergeFrom(PickTimeSeriesFilter);
            }
            input.ReadMessage(subBuilder);
            PickTimeSeriesFilter = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter subBuilder = new global::Google.Cloud.Monitoring.Dashboard.V1.StatisticalTimeSeriesFilter();
            if (outputFilterCase_ == OutputFilterOneofCase.StatisticalTimeSeriesFilter) {
              subBuilder.MergeFrom(StatisticalTimeSeriesFilter);
            }
            input.ReadMessage(subBuilder);
            StatisticalTimeSeriesFilter = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TimeSeriesFilterRatio message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Describes a query to build the numerator or denominator of a
      /// TimeSeriesFilterRatio.
      /// </summary>
      public sealed partial class RatioPart : pb::IMessage<RatioPart>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RatioPart> _parser = new pb::MessageParser<RatioPart>(() => new RatioPart());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RatioPart> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Monitoring.Dashboard.V1.TimeSeriesFilterRatio.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RatioPart() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RatioPart(RatioPart other) : this() {
          filter_ = other.filter_;
          aggregation_ = other.aggregation_ != null ? other.aggregation_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RatioPart Clone() {
          return new RatioPart(this);
        }

        /// <summary>Field number for the "filter" field.</summary>
        public const int FilterFieldNumber = 1;
        private string filter_ = "";
        /// <summary>
        /// Required. The [monitoring
        /// filter](https://cloud.google.com/monitoring/api/v3/filters) that
        /// identifies the metric types, resources, and projects to query.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Filter {
          get { return filter_; }
          set {
            filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "aggregation" field.</summary>
        public const int AggregationFieldNumber = 2;
        private global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation aggregation_;
        /// <summary>
        /// By default, the raw time series data is returned.
        /// Use this field to combine multiple time series for different views of the
        /// data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation Aggregation {
          get { return aggregation_; }
          set {
            aggregation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RatioPart);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RatioPart other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Filter != other.Filter) return false;
          if (!object.Equals(Aggregation, other.Aggregation)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Filter.Length != 0) hash ^= Filter.GetHashCode();
          if (aggregation_ != null) hash ^= Aggregation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Filter.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Filter);
          }
          if (aggregation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Aggregation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Filter.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Filter);
          }
          if (aggregation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Aggregation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Filter.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
          }
          if (aggregation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Aggregation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RatioPart other) {
          if (other == null) {
            return;
          }
          if (other.Filter.Length != 0) {
            Filter = other.Filter;
          }
          if (other.aggregation_ != null) {
            if (aggregation_ == null) {
              Aggregation = new global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation();
            }
            Aggregation.MergeFrom(other.Aggregation);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Filter = input.ReadString();
                break;
              }
              case 18: {
                if (aggregation_ == null) {
                  Aggregation = new global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation();
                }
                input.ReadMessage(Aggregation);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Filter = input.ReadString();
                break;
              }
              case 18: {
                if (aggregation_ == null) {
                  Aggregation = new global::Google.Cloud.Monitoring.Dashboard.V1.Aggregation();
                }
                input.ReadMessage(Aggregation);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Defines a threshold for categorizing time series values.
  /// </summary>
  public sealed partial class Threshold : pb::IMessage<Threshold>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Threshold> _parser = new pb::MessageParser<Threshold>(() => new Threshold());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Threshold> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.Dashboard.V1.MetricsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Threshold() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Threshold(Threshold other) : this() {
      label_ = other.label_;
      value_ = other.value_;
      color_ = other.color_;
      direction_ = other.direction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Threshold Clone() {
      return new Threshold(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private string label_ = "";
    /// <summary>
    /// A label for the threshold.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private double value_;
    /// <summary>
    /// The value of the threshold. The value should be defined in the native scale
    /// of the metric.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 3;
    private global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Color color_ = global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Color.Unspecified;
    /// <summary>
    /// The state color for this threshold. Color is not allowed in a XyChart.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Color Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 4;
    private global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Direction direction_ = global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Direction.Unspecified;
    /// <summary>
    /// The direction for the current threshold. Direction is not allowed in a
    /// XyChart.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Direction Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Threshold);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Threshold other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      if (Color != other.Color) return false;
      if (Direction != other.Direction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (Color != global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Color.Unspecified) hash ^= Color.GetHashCode();
      if (Direction != global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Direction.Unspecified) hash ^= Direction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (Value != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Value);
      }
      if (Color != global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Color.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Color);
      }
      if (Direction != global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Direction.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (Value != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Value);
      }
      if (Color != global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Color.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Color);
      }
      if (Direction != global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Direction.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (Color != global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Color.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Color);
      }
      if (Direction != global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Direction.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Threshold other) {
      if (other == null) {
        return;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      if (other.Color != global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Color.Unspecified) {
        Color = other.Color;
      }
      if (other.Direction != global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Direction.Unspecified) {
        Direction = other.Direction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 17: {
            Value = input.ReadDouble();
            break;
          }
          case 24: {
            Color = (global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Color) input.ReadEnum();
            break;
          }
          case 32: {
            Direction = (global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Direction) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 17: {
            Value = input.ReadDouble();
            break;
          }
          case 24: {
            Color = (global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Color) input.ReadEnum();
            break;
          }
          case 32: {
            Direction = (global::Google.Cloud.Monitoring.Dashboard.V1.Threshold.Types.Direction) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Threshold message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The color suggests an interpretation to the viewer when actual values cross
      /// the threshold. Comments on each color provide UX guidance on how users can
      /// be expected to interpret a given state color.
      /// </summary>
      public enum Color {
        /// <summary>
        /// Color is unspecified. Not allowed in well-formed requests.
        /// </summary>
        [pbr::OriginalName("COLOR_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Crossing the threshold is "concerning" behavior.
        /// </summary>
        [pbr::OriginalName("YELLOW")] Yellow = 4,
        /// <summary>
        /// Crossing the threshold is "emergency" behavior.
        /// </summary>
        [pbr::OriginalName("RED")] Red = 6,
      }

      /// <summary>
      /// Whether the threshold is considered crossed by an actual value above or
      /// below its threshold value.
      /// </summary>
      public enum Direction {
        /// <summary>
        /// Not allowed in well-formed requests.
        /// </summary>
        [pbr::OriginalName("DIRECTION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The threshold will be considered crossed if the actual value is above
        /// the threshold value.
        /// </summary>
        [pbr::OriginalName("ABOVE")] Above = 1,
        /// <summary>
        /// The threshold will be considered crossed if the actual value is below
        /// the threshold value.
        /// </summary>
        [pbr::OriginalName("BELOW")] Below = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
