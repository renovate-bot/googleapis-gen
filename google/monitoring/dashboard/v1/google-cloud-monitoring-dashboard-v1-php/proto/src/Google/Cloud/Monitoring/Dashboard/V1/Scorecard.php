<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/dashboard/v1/scorecard.proto

namespace Google\Cloud\Monitoring\Dashboard\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A widget showing the latest value of a metric, and how this value relates to
 * one or more thresholds.
 *
 * Generated from protobuf message <code>google.monitoring.dashboard.v1.Scorecard</code>
 */
class Scorecard extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Fields for querying time series data from the
     * Stackdriver metrics API.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $time_series_query = null;
    /**
     * The thresholds used to determine the state of the scorecard given the
     * time series' current value. For an actual value x, the scorecard is in a
     * danger state if x is less than or equal to a danger threshold that triggers
     * below, or greater than or equal to a danger threshold that triggers above.
     * Similarly, if x is above/below a warning threshold that triggers
     * above/below, then the scorecard is in a warning state - unless x also puts
     * it in a danger state. (Danger trumps warning.)
     * As an example, consider a scorecard with the following four thresholds:
     * {
     *   value: 90,
     *   category: 'DANGER',
     *   trigger: 'ABOVE',
     * },
     * {
     *   value: 70,
     *   category: 'WARNING',
     *   trigger: 'ABOVE',
     * },
     * {
     *   value: 10,
     *   category: 'DANGER',
     *   trigger: 'BELOW',
     * },
     * {
     *   value: 20,
     *   category: 'WARNING',
     *   trigger: 'BELOW',
     * }
     * Then: values less than or equal to 10 would put the scorecard in a DANGER
     * state, values greater than 10 but less than or equal to 20 a WARNING state,
     * values strictly between 20 and 70 an OK state, values greater than or equal
     * to 70 but less than 90 a WARNING state, and values greater than or equal to
     * 90 a DANGER state.
     *
     * Generated from protobuf field <code>repeated .google.monitoring.dashboard.v1.Threshold thresholds = 6;</code>
     */
    private $thresholds;
    protected $data_view;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Monitoring\Dashboard\V1\TimeSeriesQuery $time_series_query
     *           Required. Fields for querying time series data from the
     *           Stackdriver metrics API.
     *     @type \Google\Cloud\Monitoring\Dashboard\V1\Scorecard\GaugeView $gauge_view
     *           Will cause the scorecard to show a gauge chart.
     *     @type \Google\Cloud\Monitoring\Dashboard\V1\Scorecard\SparkChartView $spark_chart_view
     *           Will cause the scorecard to show a spark chart.
     *     @type \Google\Cloud\Monitoring\Dashboard\V1\Threshold[]|\Google\Protobuf\Internal\RepeatedField $thresholds
     *           The thresholds used to determine the state of the scorecard given the
     *           time series' current value. For an actual value x, the scorecard is in a
     *           danger state if x is less than or equal to a danger threshold that triggers
     *           below, or greater than or equal to a danger threshold that triggers above.
     *           Similarly, if x is above/below a warning threshold that triggers
     *           above/below, then the scorecard is in a warning state - unless x also puts
     *           it in a danger state. (Danger trumps warning.)
     *           As an example, consider a scorecard with the following four thresholds:
     *           {
     *             value: 90,
     *             category: 'DANGER',
     *             trigger: 'ABOVE',
     *           },
     *           {
     *             value: 70,
     *             category: 'WARNING',
     *             trigger: 'ABOVE',
     *           },
     *           {
     *             value: 10,
     *             category: 'DANGER',
     *             trigger: 'BELOW',
     *           },
     *           {
     *             value: 20,
     *             category: 'WARNING',
     *             trigger: 'BELOW',
     *           }
     *           Then: values less than or equal to 10 would put the scorecard in a DANGER
     *           state, values greater than 10 but less than or equal to 20 a WARNING state,
     *           values strictly between 20 and 70 an OK state, values greater than or equal
     *           to 70 but less than 90 a WARNING state, and values greater than or equal to
     *           90 a DANGER state.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Monitoring\Dashboard\V1\Scorecard::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Fields for querying time series data from the
     * Stackdriver metrics API.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\Monitoring\Dashboard\V1\TimeSeriesQuery|null
     */
    public function getTimeSeriesQuery()
    {
        return $this->time_series_query;
    }

    public function hasTimeSeriesQuery()
    {
        return isset($this->time_series_query);
    }

    public function clearTimeSeriesQuery()
    {
        unset($this->time_series_query);
    }

    /**
     * Required. Fields for querying time series data from the
     * Stackdriver metrics API.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.TimeSeriesQuery time_series_query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Monitoring\Dashboard\V1\TimeSeriesQuery $var
     * @return $this
     */
    public function setTimeSeriesQuery($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Monitoring\Dashboard\V1\TimeSeriesQuery::class);
        $this->time_series_query = $var;

        return $this;
    }

    /**
     * Will cause the scorecard to show a gauge chart.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.Scorecard.GaugeView gauge_view = 4;</code>
     * @return \Google\Cloud\Monitoring\Dashboard\V1\Scorecard\GaugeView|null
     */
    public function getGaugeView()
    {
        return $this->readOneof(4);
    }

    public function hasGaugeView()
    {
        return $this->hasOneof(4);
    }

    /**
     * Will cause the scorecard to show a gauge chart.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.Scorecard.GaugeView gauge_view = 4;</code>
     * @param \Google\Cloud\Monitoring\Dashboard\V1\Scorecard\GaugeView $var
     * @return $this
     */
    public function setGaugeView($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Monitoring\Dashboard\V1\Scorecard\GaugeView::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Will cause the scorecard to show a spark chart.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.Scorecard.SparkChartView spark_chart_view = 5;</code>
     * @return \Google\Cloud\Monitoring\Dashboard\V1\Scorecard\SparkChartView|null
     */
    public function getSparkChartView()
    {
        return $this->readOneof(5);
    }

    public function hasSparkChartView()
    {
        return $this->hasOneof(5);
    }

    /**
     * Will cause the scorecard to show a spark chart.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.Scorecard.SparkChartView spark_chart_view = 5;</code>
     * @param \Google\Cloud\Monitoring\Dashboard\V1\Scorecard\SparkChartView $var
     * @return $this
     */
    public function setSparkChartView($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Monitoring\Dashboard\V1\Scorecard\SparkChartView::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * The thresholds used to determine the state of the scorecard given the
     * time series' current value. For an actual value x, the scorecard is in a
     * danger state if x is less than or equal to a danger threshold that triggers
     * below, or greater than or equal to a danger threshold that triggers above.
     * Similarly, if x is above/below a warning threshold that triggers
     * above/below, then the scorecard is in a warning state - unless x also puts
     * it in a danger state. (Danger trumps warning.)
     * As an example, consider a scorecard with the following four thresholds:
     * {
     *   value: 90,
     *   category: 'DANGER',
     *   trigger: 'ABOVE',
     * },
     * {
     *   value: 70,
     *   category: 'WARNING',
     *   trigger: 'ABOVE',
     * },
     * {
     *   value: 10,
     *   category: 'DANGER',
     *   trigger: 'BELOW',
     * },
     * {
     *   value: 20,
     *   category: 'WARNING',
     *   trigger: 'BELOW',
     * }
     * Then: values less than or equal to 10 would put the scorecard in a DANGER
     * state, values greater than 10 but less than or equal to 20 a WARNING state,
     * values strictly between 20 and 70 an OK state, values greater than or equal
     * to 70 but less than 90 a WARNING state, and values greater than or equal to
     * 90 a DANGER state.
     *
     * Generated from protobuf field <code>repeated .google.monitoring.dashboard.v1.Threshold thresholds = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getThresholds()
    {
        return $this->thresholds;
    }

    /**
     * The thresholds used to determine the state of the scorecard given the
     * time series' current value. For an actual value x, the scorecard is in a
     * danger state if x is less than or equal to a danger threshold that triggers
     * below, or greater than or equal to a danger threshold that triggers above.
     * Similarly, if x is above/below a warning threshold that triggers
     * above/below, then the scorecard is in a warning state - unless x also puts
     * it in a danger state. (Danger trumps warning.)
     * As an example, consider a scorecard with the following four thresholds:
     * {
     *   value: 90,
     *   category: 'DANGER',
     *   trigger: 'ABOVE',
     * },
     * {
     *   value: 70,
     *   category: 'WARNING',
     *   trigger: 'ABOVE',
     * },
     * {
     *   value: 10,
     *   category: 'DANGER',
     *   trigger: 'BELOW',
     * },
     * {
     *   value: 20,
     *   category: 'WARNING',
     *   trigger: 'BELOW',
     * }
     * Then: values less than or equal to 10 would put the scorecard in a DANGER
     * state, values greater than 10 but less than or equal to 20 a WARNING state,
     * values strictly between 20 and 70 an OK state, values greater than or equal
     * to 70 but less than 90 a WARNING state, and values greater than or equal to
     * 90 a DANGER state.
     *
     * Generated from protobuf field <code>repeated .google.monitoring.dashboard.v1.Threshold thresholds = 6;</code>
     * @param \Google\Cloud\Monitoring\Dashboard\V1\Threshold[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setThresholds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Monitoring\Dashboard\V1\Threshold::class);
        $this->thresholds = $arr;

        return $this;
    }

    /**
     * @return string
     */
    public function getDataView()
    {
        return $this->whichOneof("data_view");
    }

}

