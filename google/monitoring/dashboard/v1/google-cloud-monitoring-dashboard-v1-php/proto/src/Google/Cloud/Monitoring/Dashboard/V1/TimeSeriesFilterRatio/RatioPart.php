<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/dashboard/v1/metrics.proto

namespace Google\Cloud\Monitoring\Dashboard\V1\TimeSeriesFilterRatio;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describes a query to build the numerator or denominator of a
 * TimeSeriesFilterRatio.
 *
 * Generated from protobuf message <code>google.monitoring.dashboard.v1.TimeSeriesFilterRatio.RatioPart</code>
 */
class RatioPart extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The [monitoring
     * filter](https://cloud.google.com/monitoring/api/v3/filters) that
     * identifies the metric types, resources, and projects to query.
     *
     * Generated from protobuf field <code>string filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $filter = '';
    /**
     * By default, the raw time series data is returned.
     * Use this field to combine multiple time series for different views of the
     * data.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.Aggregation aggregation = 2;</code>
     */
    protected $aggregation = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $filter
     *           Required. The [monitoring
     *           filter](https://cloud.google.com/monitoring/api/v3/filters) that
     *           identifies the metric types, resources, and projects to query.
     *     @type \Google\Cloud\Monitoring\Dashboard\V1\Aggregation $aggregation
     *           By default, the raw time series data is returned.
     *           Use this field to combine multiple time series for different views of the
     *           data.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Monitoring\Dashboard\V1\Metrics::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The [monitoring
     * filter](https://cloud.google.com/monitoring/api/v3/filters) that
     * identifies the metric types, resources, and projects to query.
     *
     * Generated from protobuf field <code>string filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Required. The [monitoring
     * filter](https://cloud.google.com/monitoring/api/v3/filters) that
     * identifies the metric types, resources, and projects to query.
     *
     * Generated from protobuf field <code>string filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

    /**
     * By default, the raw time series data is returned.
     * Use this field to combine multiple time series for different views of the
     * data.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.Aggregation aggregation = 2;</code>
     * @return \Google\Cloud\Monitoring\Dashboard\V1\Aggregation|null
     */
    public function getAggregation()
    {
        return $this->aggregation;
    }

    public function hasAggregation()
    {
        return isset($this->aggregation);
    }

    public function clearAggregation()
    {
        unset($this->aggregation);
    }

    /**
     * By default, the raw time series data is returned.
     * Use this field to combine multiple time series for different views of the
     * data.
     *
     * Generated from protobuf field <code>.google.monitoring.dashboard.v1.Aggregation aggregation = 2;</code>
     * @param \Google\Cloud\Monitoring\Dashboard\V1\Aggregation $var
     * @return $this
     */
    public function setAggregation($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Monitoring\Dashboard\V1\Aggregation::class);
        $this->aggregation = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(RatioPart::class, \Google\Cloud\Monitoring\Dashboard\V1\TimeSeriesFilterRatio_RatioPart::class);

