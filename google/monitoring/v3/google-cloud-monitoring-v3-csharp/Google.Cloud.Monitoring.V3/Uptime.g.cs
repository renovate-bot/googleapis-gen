// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/monitoring/v3/uptime.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Monitoring.V3 {

  /// <summary>Holder for reflection information generated from google/monitoring/v3/uptime.proto</summary>
  public static partial class UptimeReflection {

    #region Descriptor
    /// <summary>File descriptor for google/monitoring/v3/uptime.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UptimeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFnb29nbGUvbW9uaXRvcmluZy92My91cHRpbWUucHJvdG8SFGdvb2dsZS5t",
            "b25pdG9yaW5nLnYzGiNnb29nbGUvYXBpL21vbml0b3JlZF9yZXNvdXJjZS5w",
            "cm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxoeZ29vZ2xlL3Byb3Rv",
            "YnVmL2R1cmF0aW9uLnByb3RvIuYBCg9JbnRlcm5hbENoZWNrZXISDAoEbmFt",
            "ZRgBIAEoCRIUCgxkaXNwbGF5X25hbWUYAiABKAkSDwoHbmV0d29yaxgDIAEo",
            "CRIQCghnY3Bfem9uZRgEIAEoCRIXCg9wZWVyX3Byb2plY3RfaWQYBiABKAkS",
            "OgoFc3RhdGUYByABKA4yKy5nb29nbGUubW9uaXRvcmluZy52My5JbnRlcm5h",
            "bENoZWNrZXIuU3RhdGUiMwoFU3RhdGUSDwoLVU5TUEVDSUZJRUQQABIMCghD",
            "UkVBVElORxABEgsKB1JVTk5JTkcQAjoCGAEi+w8KEVVwdGltZUNoZWNrQ29u",
            "ZmlnEgwKBG5hbWUYASABKAkSFAoMZGlzcGxheV9uYW1lGAIgASgJEjsKEm1v",
            "bml0b3JlZF9yZXNvdXJjZRgDIAEoCzIdLmdvb2dsZS5hcGkuTW9uaXRvcmVk",
            "UmVzb3VyY2VIABJPCg5yZXNvdXJjZV9ncm91cBgEIAEoCzI1Lmdvb2dsZS5t",
            "b25pdG9yaW5nLnYzLlVwdGltZUNoZWNrQ29uZmlnLlJlc291cmNlR3JvdXBI",
            "ABJHCgpodHRwX2NoZWNrGAUgASgLMjEuZ29vZ2xlLm1vbml0b3JpbmcudjMu",
            "VXB0aW1lQ2hlY2tDb25maWcuSHR0cENoZWNrSAESRQoJdGNwX2NoZWNrGAYg",
            "ASgLMjAuZ29vZ2xlLm1vbml0b3JpbmcudjMuVXB0aW1lQ2hlY2tDb25maWcu",
            "VGNwQ2hlY2tIARIpCgZwZXJpb2QYByABKAsyGS5nb29nbGUucHJvdG9idWYu",
            "RHVyYXRpb24SKgoHdGltZW91dBgIIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5E",
            "dXJhdGlvbhJQChBjb250ZW50X21hdGNoZXJzGAkgAygLMjYuZ29vZ2xlLm1v",
            "bml0b3JpbmcudjMuVXB0aW1lQ2hlY2tDb25maWcuQ29udGVudE1hdGNoZXIS",
            "QQoQc2VsZWN0ZWRfcmVnaW9ucxgKIAMoDjInLmdvb2dsZS5tb25pdG9yaW5n",
            "LnYzLlVwdGltZUNoZWNrUmVnaW9uEhcKC2lzX2ludGVybmFsGA8gASgIQgIY",
            "ARJEChFpbnRlcm5hbF9jaGVja2VycxgOIAMoCzIlLmdvb2dsZS5tb25pdG9y",
            "aW5nLnYzLkludGVybmFsQ2hlY2tlckICGAEaYQoNUmVzb3VyY2VHcm91cBIQ",
            "Cghncm91cF9pZBgBIAEoCRI+Cg1yZXNvdXJjZV90eXBlGAIgASgOMicuZ29v",
            "Z2xlLm1vbml0b3JpbmcudjMuR3JvdXBSZXNvdXJjZVR5cGUaqAUKCUh0dHBD",
            "aGVjaxJXCg5yZXF1ZXN0X21ldGhvZBgIIAEoDjI/Lmdvb2dsZS5tb25pdG9y",
            "aW5nLnYzLlVwdGltZUNoZWNrQ29uZmlnLkh0dHBDaGVjay5SZXF1ZXN0TWV0",
            "aG9kEg8KB3VzZV9zc2wYASABKAgSDAoEcGF0aBgCIAEoCRIMCgRwb3J0GAMg",
            "ASgFElgKCWF1dGhfaW5mbxgEIAEoCzJFLmdvb2dsZS5tb25pdG9yaW5nLnYz",
            "LlVwdGltZUNoZWNrQ29uZmlnLkh0dHBDaGVjay5CYXNpY0F1dGhlbnRpY2F0",
            "aW9uEhQKDG1hc2tfaGVhZGVycxgFIAEoCBJPCgdoZWFkZXJzGAYgAygLMj4u",
            "Z29vZ2xlLm1vbml0b3JpbmcudjMuVXB0aW1lQ2hlY2tDb25maWcuSHR0cENo",
            "ZWNrLkhlYWRlcnNFbnRyeRJTCgxjb250ZW50X3R5cGUYCSABKA4yPS5nb29n",
            "bGUubW9uaXRvcmluZy52My5VcHRpbWVDaGVja0NvbmZpZy5IdHRwQ2hlY2su",
            "Q29udGVudFR5cGUSFAoMdmFsaWRhdGVfc3NsGAcgASgIEgwKBGJvZHkYCiAB",
            "KAwaOQoTQmFzaWNBdXRoZW50aWNhdGlvbhIQCgh1c2VybmFtZRgBIAEoCRIQ",
            "CghwYXNzd29yZBgCIAEoCRouCgxIZWFkZXJzRW50cnkSCwoDa2V5GAEgASgJ",
            "Eg0KBXZhbHVlGAIgASgJOgI4ASI6Cg1SZXF1ZXN0TWV0aG9kEhYKEk1FVEhP",
            "RF9VTlNQRUNJRklFRBAAEgcKA0dFVBABEggKBFBPU1QQAiI0CgtDb250ZW50",
            "VHlwZRIUChBUWVBFX1VOU1BFQ0lGSUVEEAASDwoLVVJMX0VOQ09ERUQQARoY",
            "CghUY3BDaGVjaxIMCgRwb3J0GAEgASgFGpgCCg5Db250ZW50TWF0Y2hlchIP",
            "Cgdjb250ZW50GAEgASgJElwKB21hdGNoZXIYAiABKA4ySy5nb29nbGUubW9u",
            "aXRvcmluZy52My5VcHRpbWVDaGVja0NvbmZpZy5Db250ZW50TWF0Y2hlci5D",
            "b250ZW50TWF0Y2hlck9wdGlvbiKWAQoUQ29udGVudE1hdGNoZXJPcHRpb24S",
            "JgoiQ09OVEVOVF9NQVRDSEVSX09QVElPTl9VTlNQRUNJRklFRBAAEhMKD0NP",
            "TlRBSU5TX1NUUklORxABEhcKE05PVF9DT05UQUlOU19TVFJJTkcQAhIRCg1N",
            "QVRDSEVTX1JFR0VYEAMSFQoRTk9UX01BVENIRVNfUkVHRVgQBDrzAepB7wEK",
            "K21vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vVXB0aW1lQ2hlY2tDb25maWcS",
            "O3Byb2plY3RzL3twcm9qZWN0fS91cHRpbWVDaGVja0NvbmZpZ3Mve3VwdGlt",
            "ZV9jaGVja19jb25maWd9EkVvcmdhbml6YXRpb25zL3tvcmdhbml6YXRpb259",
            "L3VwdGltZUNoZWNrQ29uZmlncy97dXB0aW1lX2NoZWNrX2NvbmZpZ30SOWZv",
            "bGRlcnMve2ZvbGRlcn0vdXB0aW1lQ2hlY2tDb25maWdzL3t1cHRpbWVfY2hl",
            "Y2tfY29uZmlnfRIBKkIKCghyZXNvdXJjZUIUChJjaGVja19yZXF1ZXN0X3R5",
            "cGUibgoNVXB0aW1lQ2hlY2tJcBI3CgZyZWdpb24YASABKA4yJy5nb29nbGUu",
            "bW9uaXRvcmluZy52My5VcHRpbWVDaGVja1JlZ2lvbhIQCghsb2NhdGlvbhgC",
            "IAEoCRISCgppcF9hZGRyZXNzGAMgASgJKmUKEVVwdGltZUNoZWNrUmVnaW9u",
            "EhYKElJFR0lPTl9VTlNQRUNJRklFRBAAEgcKA1VTQRABEgoKBkVVUk9QRRAC",
            "EhEKDVNPVVRIX0FNRVJJQ0EQAxIQCgxBU0lBX1BBQ0lGSUMQBCpbChFHcm91",
            "cFJlc291cmNlVHlwZRIdChlSRVNPVVJDRV9UWVBFX1VOU1BFQ0lGSUVEEAAS",
            "DAoISU5TVEFOQ0UQARIZChVBV1NfRUxCX0xPQURfQkFMQU5DRVIQAkLDAQoY",
            "Y29tLmdvb2dsZS5tb25pdG9yaW5nLnYzQgtVcHRpbWVQcm90b1ABWj5nb29n",
            "bGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL21vbml0b3Jpbmcv",
            "djM7bW9uaXRvcmluZ6oCGkdvb2dsZS5DbG91ZC5Nb25pdG9yaW5nLlYzygIa",
            "R29vZ2xlXENsb3VkXE1vbml0b3JpbmdcVjPqAh1Hb29nbGU6OkNsb3VkOjpN",
            "b25pdG9yaW5nOjpWM2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.MonitoredResourceReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Monitoring.V3.UptimeCheckRegion), typeof(global::Google.Cloud.Monitoring.V3.GroupResourceType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.InternalChecker), global::Google.Cloud.Monitoring.V3.InternalChecker.Parser, new[]{ "Name", "DisplayName", "Network", "GcpZone", "PeerProjectId", "State" }, null, new[]{ typeof(global::Google.Cloud.Monitoring.V3.InternalChecker.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.UptimeCheckConfig), global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Parser, new[]{ "Name", "DisplayName", "MonitoredResource", "ResourceGroup", "HttpCheck", "TcpCheck", "Period", "Timeout", "ContentMatchers", "SelectedRegions", "IsInternal", "InternalCheckers" }, new[]{ "Resource", "CheckRequestType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ResourceGroup), global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ResourceGroup.Parser, new[]{ "GroupId", "ResourceType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck), global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Parser, new[]{ "RequestMethod", "UseSsl", "Path", "Port", "AuthInfo", "MaskHeaders", "Headers", "ContentType", "ValidateSsl", "Body" }, null, new[]{ typeof(global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.RequestMethod), typeof(global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.ContentType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.BasicAuthentication), global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.BasicAuthentication.Parser, new[]{ "Username", "Password" }, null, null, null, null),
            null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.TcpCheck), global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.TcpCheck.Parser, new[]{ "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher), global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Parser, new[]{ "Content", "Matcher" }, null, new[]{ typeof(global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Types.ContentMatcherOption) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.UptimeCheckIp), global::Google.Cloud.Monitoring.V3.UptimeCheckIp.Parser, new[]{ "Region", "Location", "IpAddress" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The regions from which an Uptime check can be run.
  /// </summary>
  public enum UptimeCheckRegion {
    /// <summary>
    /// Default value if no region is specified. Will result in Uptime checks
    /// running from all regions.
    /// </summary>
    [pbr::OriginalName("REGION_UNSPECIFIED")] RegionUnspecified = 0,
    /// <summary>
    /// Allows checks to run from locations within the United States of America.
    /// </summary>
    [pbr::OriginalName("USA")] Usa = 1,
    /// <summary>
    /// Allows checks to run from locations within the continent of Europe.
    /// </summary>
    [pbr::OriginalName("EUROPE")] Europe = 2,
    /// <summary>
    /// Allows checks to run from locations within the continent of South
    /// America.
    /// </summary>
    [pbr::OriginalName("SOUTH_AMERICA")] SouthAmerica = 3,
    /// <summary>
    /// Allows checks to run from locations within the Asia Pacific area (ex:
    /// Singapore).
    /// </summary>
    [pbr::OriginalName("ASIA_PACIFIC")] AsiaPacific = 4,
  }

  /// <summary>
  /// The supported resource types that can be used as values of
  /// `group_resource.resource_type`.
  /// `INSTANCE` includes `gce_instance` and `aws_ec2_instance` resource types.
  /// The resource types `gae_app` and `uptime_url` are not valid here because
  /// group checks on App Engine modules and URLs are not allowed.
  /// </summary>
  public enum GroupResourceType {
    /// <summary>
    /// Default value (not valid).
    /// </summary>
    [pbr::OriginalName("RESOURCE_TYPE_UNSPECIFIED")] ResourceTypeUnspecified = 0,
    /// <summary>
    /// A group of instances from Google Cloud Platform (GCP) or
    /// Amazon Web Services (AWS).
    /// </summary>
    [pbr::OriginalName("INSTANCE")] Instance = 1,
    /// <summary>
    /// A group of Amazon ELB load balancers.
    /// </summary>
    [pbr::OriginalName("AWS_ELB_LOAD_BALANCER")] AwsElbLoadBalancer = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// An internal checker allows Uptime checks to run on private/internal GCP
  /// resources.
  /// </summary>
  [global::System.ObsoleteAttribute]
  public sealed partial class InternalChecker : pb::IMessage<InternalChecker>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InternalChecker> _parser = new pb::MessageParser<InternalChecker>(() => new InternalChecker());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InternalChecker> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.UptimeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InternalChecker() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InternalChecker(InternalChecker other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      network_ = other.network_;
      gcpZone_ = other.gcpZone_;
      peerProjectId_ = other.peerProjectId_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InternalChecker Clone() {
      return new InternalChecker(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// A unique resource name for this InternalChecker. The format is:
    ///
    ///     projects/[PROJECT_ID_OR_NUMBER]/internalCheckers/[INTERNAL_CHECKER_ID]
    ///
    /// `[PROJECT_ID_OR_NUMBER]` is the Stackdriver Workspace project for the
    /// Uptime check config associated with the internal checker.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// The checker's human-readable name. The display name
    /// should be unique within a Stackdriver Workspace in order to make it easier
    /// to identify; however, uniqueness is not enforced.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 3;
    private string network_ = "";
    /// <summary>
    /// The [GCP VPC network](https://cloud.google.com/vpc/docs/vpc) where the
    /// internal resource lives (ex: "default").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gcp_zone" field.</summary>
    public const int GcpZoneFieldNumber = 4;
    private string gcpZone_ = "";
    /// <summary>
    /// The GCP zone the Uptime check should egress from. Only respected for
    /// internal Uptime checks, where internal_network is specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GcpZone {
      get { return gcpZone_; }
      set {
        gcpZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "peer_project_id" field.</summary>
    public const int PeerProjectIdFieldNumber = 6;
    private string peerProjectId_ = "";
    /// <summary>
    /// The GCP project ID where the internal checker lives. Not necessary
    /// the same as the Workspace project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PeerProjectId {
      get { return peerProjectId_; }
      set {
        peerProjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 7;
    private global::Google.Cloud.Monitoring.V3.InternalChecker.Types.State state_ = global::Google.Cloud.Monitoring.V3.InternalChecker.Types.State.Unspecified;
    /// <summary>
    /// The current operational state of the internal checker.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Monitoring.V3.InternalChecker.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InternalChecker);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InternalChecker other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Network != other.Network) return false;
      if (GcpZone != other.GcpZone) return false;
      if (PeerProjectId != other.PeerProjectId) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (GcpZone.Length != 0) hash ^= GcpZone.GetHashCode();
      if (PeerProjectId.Length != 0) hash ^= PeerProjectId.GetHashCode();
      if (State != global::Google.Cloud.Monitoring.V3.InternalChecker.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Network);
      }
      if (GcpZone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GcpZone);
      }
      if (PeerProjectId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PeerProjectId);
      }
      if (State != global::Google.Cloud.Monitoring.V3.InternalChecker.Types.State.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Network);
      }
      if (GcpZone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GcpZone);
      }
      if (PeerProjectId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PeerProjectId);
      }
      if (State != global::Google.Cloud.Monitoring.V3.InternalChecker.Types.State.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Network.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (GcpZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GcpZone);
      }
      if (PeerProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PeerProjectId);
      }
      if (State != global::Google.Cloud.Monitoring.V3.InternalChecker.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InternalChecker other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      if (other.GcpZone.Length != 0) {
        GcpZone = other.GcpZone;
      }
      if (other.PeerProjectId.Length != 0) {
        PeerProjectId = other.PeerProjectId;
      }
      if (other.State != global::Google.Cloud.Monitoring.V3.InternalChecker.Types.State.Unspecified) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            Network = input.ReadString();
            break;
          }
          case 34: {
            GcpZone = input.ReadString();
            break;
          }
          case 50: {
            PeerProjectId = input.ReadString();
            break;
          }
          case 56: {
            State = (global::Google.Cloud.Monitoring.V3.InternalChecker.Types.State) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            Network = input.ReadString();
            break;
          }
          case 34: {
            GcpZone = input.ReadString();
            break;
          }
          case 50: {
            PeerProjectId = input.ReadString();
            break;
          }
          case 56: {
            State = (global::Google.Cloud.Monitoring.V3.InternalChecker.Types.State) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the InternalChecker message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Operational states for an internal checker.
      /// </summary>
      public enum State {
        /// <summary>
        /// An internal checker should never be in the unspecified state.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The checker is being created, provisioned, and configured. A checker in
        /// this state can be returned by `ListInternalCheckers` or
        /// `GetInternalChecker`, as well as by examining the [long running
        /// Operation](https://cloud.google.com/apis/design/design_patterns#long_running_operations)
        /// that created it.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// The checker is running and available for use. A checker in this state
        /// can be returned by `ListInternalCheckers` or `GetInternalChecker` as
        /// well as by examining the [long running
        /// Operation](https://cloud.google.com/apis/design/design_patterns#long_running_operations)
        /// that created it.
        /// If a checker is being torn down, it is neither visible nor usable, so
        /// there is no "deleting" or "down" state.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// This message configures which resources and services to monitor for
  /// availability.
  /// </summary>
  public sealed partial class UptimeCheckConfig : pb::IMessage<UptimeCheckConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UptimeCheckConfig> _parser = new pb::MessageParser<UptimeCheckConfig>(() => new UptimeCheckConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UptimeCheckConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.UptimeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UptimeCheckConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UptimeCheckConfig(UptimeCheckConfig other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      period_ = other.period_ != null ? other.period_.Clone() : null;
      timeout_ = other.timeout_ != null ? other.timeout_.Clone() : null;
      contentMatchers_ = other.contentMatchers_.Clone();
      selectedRegions_ = other.selectedRegions_.Clone();
      isInternal_ = other.isInternal_;
      internalCheckers_ = other.internalCheckers_.Clone();
      switch (other.ResourceCase) {
        case ResourceOneofCase.MonitoredResource:
          MonitoredResource = other.MonitoredResource.Clone();
          break;
        case ResourceOneofCase.ResourceGroup:
          ResourceGroup = other.ResourceGroup.Clone();
          break;
      }

      switch (other.CheckRequestTypeCase) {
        case CheckRequestTypeOneofCase.HttpCheck:
          HttpCheck = other.HttpCheck.Clone();
          break;
        case CheckRequestTypeOneofCase.TcpCheck:
          TcpCheck = other.TcpCheck.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UptimeCheckConfig Clone() {
      return new UptimeCheckConfig(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// A unique resource name for this Uptime check configuration. The format is:
    ///
    ///      projects/[PROJECT_ID_OR_NUMBER]/uptimeCheckConfigs/[UPTIME_CHECK_ID]
    ///
    /// `[PROJECT_ID_OR_NUMBER]` is the Workspace host project associated with the
    /// Uptime check.
    ///
    /// This field should be omitted when creating the Uptime check configuration;
    /// on create, the resource name is assigned by the server and included in the
    /// response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// A human-friendly name for the Uptime check configuration. The display name
    /// should be unique within a Stackdriver Workspace in order to make it easier
    /// to identify; however, uniqueness is not enforced. Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "monitored_resource" field.</summary>
    public const int MonitoredResourceFieldNumber = 3;
    /// <summary>
    /// The [monitored
    /// resource](https://cloud.google.com/monitoring/api/resources) associated
    /// with the configuration.
    /// The following monitored resource types are valid for this field:
    ///   `uptime_url`,
    ///   `gce_instance`,
    ///   `gae_app`,
    ///   `aws_ec2_instance`,
    ///   `aws_elb_load_balancer`
    ///   `k8s_service`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Api.MonitoredResource MonitoredResource {
      get { return resourceCase_ == ResourceOneofCase.MonitoredResource ? (global::Google.Api.MonitoredResource) resource_ : null; }
      set {
        resource_ = value;
        resourceCase_ = value == null ? ResourceOneofCase.None : ResourceOneofCase.MonitoredResource;
      }
    }

    /// <summary>Field number for the "resource_group" field.</summary>
    public const int ResourceGroupFieldNumber = 4;
    /// <summary>
    /// The group resource associated with the configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ResourceGroup ResourceGroup {
      get { return resourceCase_ == ResourceOneofCase.ResourceGroup ? (global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ResourceGroup) resource_ : null; }
      set {
        resource_ = value;
        resourceCase_ = value == null ? ResourceOneofCase.None : ResourceOneofCase.ResourceGroup;
      }
    }

    /// <summary>Field number for the "http_check" field.</summary>
    public const int HttpCheckFieldNumber = 5;
    /// <summary>
    /// Contains information needed to make an HTTP or HTTPS check.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck HttpCheck {
      get { return checkRequestTypeCase_ == CheckRequestTypeOneofCase.HttpCheck ? (global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck) checkRequestType_ : null; }
      set {
        checkRequestType_ = value;
        checkRequestTypeCase_ = value == null ? CheckRequestTypeOneofCase.None : CheckRequestTypeOneofCase.HttpCheck;
      }
    }

    /// <summary>Field number for the "tcp_check" field.</summary>
    public const int TcpCheckFieldNumber = 6;
    /// <summary>
    /// Contains information needed to make a TCP check.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.TcpCheck TcpCheck {
      get { return checkRequestTypeCase_ == CheckRequestTypeOneofCase.TcpCheck ? (global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.TcpCheck) checkRequestType_ : null; }
      set {
        checkRequestType_ = value;
        checkRequestTypeCase_ = value == null ? CheckRequestTypeOneofCase.None : CheckRequestTypeOneofCase.TcpCheck;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Duration period_;
    /// <summary>
    /// How often, in seconds, the Uptime check is performed.
    /// Currently, the only supported values are `60s` (1 minute), `300s`
    /// (5 minutes), `600s` (10 minutes), and `900s` (15 minutes). Optional,
    /// defaults to `60s`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Duration timeout_;
    /// <summary>
    /// The maximum amount of time to wait for the request to complete (must be
    /// between 1 and 60 seconds). Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "content_matchers" field.</summary>
    public const int ContentMatchersFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher> _repeated_contentMatchers_codec
        = pb::FieldCodec.ForMessage(74, global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher> contentMatchers_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher>();
    /// <summary>
    /// The content that is expected to appear in the data returned by the target
    /// server against which the check is run.  Currently, only the first entry
    /// in the `content_matchers` list is supported, and additional entries will
    /// be ignored. This field is optional and should only be specified if a
    /// content match is required as part of the/ Uptime check.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher> ContentMatchers {
      get { return contentMatchers_; }
    }

    /// <summary>Field number for the "selected_regions" field.</summary>
    public const int SelectedRegionsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.V3.UptimeCheckRegion> _repeated_selectedRegions_codec
        = pb::FieldCodec.ForEnum(82, x => (int) x, x => (global::Google.Cloud.Monitoring.V3.UptimeCheckRegion) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.UptimeCheckRegion> selectedRegions_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.UptimeCheckRegion>();
    /// <summary>
    /// The list of regions from which the check will be run.
    /// Some regions contain one location, and others contain more than one.
    /// If this field is specified, enough regions must be provided to include a
    /// minimum of 3 locations.  Not specifying this field will result in Uptime
    /// checks running from all available regions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.UptimeCheckRegion> SelectedRegions {
      get { return selectedRegions_; }
    }

    /// <summary>Field number for the "is_internal" field.</summary>
    public const int IsInternalFieldNumber = 15;
    private bool isInternal_;
    /// <summary>
    /// If this is `true`, then checks are made only from the 'internal_checkers'.
    /// If it is `false`, then checks are made only from the 'selected_regions'.
    /// It is an error to provide 'selected_regions' when is_internal is `true`,
    /// or to provide 'internal_checkers' when is_internal is `false`.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInternal {
      get { return isInternal_; }
      set {
        isInternal_ = value;
      }
    }

    /// <summary>Field number for the "internal_checkers" field.</summary>
    public const int InternalCheckersFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.V3.InternalChecker> _repeated_internalCheckers_codec
        = pb::FieldCodec.ForMessage(114, global::Google.Cloud.Monitoring.V3.InternalChecker.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.InternalChecker> internalCheckers_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.InternalChecker>();
    /// <summary>
    /// The internal checkers that this check will egress from. If `is_internal` is
    /// `true` and this list is empty, the check will egress from all the
    /// InternalCheckers configured for the project that owns this
    /// `UptimeCheckConfig`.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.InternalChecker> InternalCheckers {
      get { return internalCheckers_; }
    }

    private object resource_;
    /// <summary>Enum of possible cases for the "resource" oneof.</summary>
    public enum ResourceOneofCase {
      None = 0,
      MonitoredResource = 3,
      ResourceGroup = 4,
    }
    private ResourceOneofCase resourceCase_ = ResourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourceOneofCase ResourceCase {
      get { return resourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResource() {
      resourceCase_ = ResourceOneofCase.None;
      resource_ = null;
    }

    private object checkRequestType_;
    /// <summary>Enum of possible cases for the "check_request_type" oneof.</summary>
    public enum CheckRequestTypeOneofCase {
      None = 0,
      HttpCheck = 5,
      TcpCheck = 6,
    }
    private CheckRequestTypeOneofCase checkRequestTypeCase_ = CheckRequestTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckRequestTypeOneofCase CheckRequestTypeCase {
      get { return checkRequestTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCheckRequestType() {
      checkRequestTypeCase_ = CheckRequestTypeOneofCase.None;
      checkRequestType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UptimeCheckConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UptimeCheckConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(MonitoredResource, other.MonitoredResource)) return false;
      if (!object.Equals(ResourceGroup, other.ResourceGroup)) return false;
      if (!object.Equals(HttpCheck, other.HttpCheck)) return false;
      if (!object.Equals(TcpCheck, other.TcpCheck)) return false;
      if (!object.Equals(Period, other.Period)) return false;
      if (!object.Equals(Timeout, other.Timeout)) return false;
      if(!contentMatchers_.Equals(other.contentMatchers_)) return false;
      if(!selectedRegions_.Equals(other.selectedRegions_)) return false;
      if (IsInternal != other.IsInternal) return false;
      if(!internalCheckers_.Equals(other.internalCheckers_)) return false;
      if (ResourceCase != other.ResourceCase) return false;
      if (CheckRequestTypeCase != other.CheckRequestTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (resourceCase_ == ResourceOneofCase.MonitoredResource) hash ^= MonitoredResource.GetHashCode();
      if (resourceCase_ == ResourceOneofCase.ResourceGroup) hash ^= ResourceGroup.GetHashCode();
      if (checkRequestTypeCase_ == CheckRequestTypeOneofCase.HttpCheck) hash ^= HttpCheck.GetHashCode();
      if (checkRequestTypeCase_ == CheckRequestTypeOneofCase.TcpCheck) hash ^= TcpCheck.GetHashCode();
      if (period_ != null) hash ^= Period.GetHashCode();
      if (timeout_ != null) hash ^= Timeout.GetHashCode();
      hash ^= contentMatchers_.GetHashCode();
      hash ^= selectedRegions_.GetHashCode();
      if (IsInternal != false) hash ^= IsInternal.GetHashCode();
      hash ^= internalCheckers_.GetHashCode();
      hash ^= (int) resourceCase_;
      hash ^= (int) checkRequestTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (resourceCase_ == ResourceOneofCase.MonitoredResource) {
        output.WriteRawTag(26);
        output.WriteMessage(MonitoredResource);
      }
      if (resourceCase_ == ResourceOneofCase.ResourceGroup) {
        output.WriteRawTag(34);
        output.WriteMessage(ResourceGroup);
      }
      if (checkRequestTypeCase_ == CheckRequestTypeOneofCase.HttpCheck) {
        output.WriteRawTag(42);
        output.WriteMessage(HttpCheck);
      }
      if (checkRequestTypeCase_ == CheckRequestTypeOneofCase.TcpCheck) {
        output.WriteRawTag(50);
        output.WriteMessage(TcpCheck);
      }
      if (period_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Period);
      }
      if (timeout_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Timeout);
      }
      contentMatchers_.WriteTo(output, _repeated_contentMatchers_codec);
      selectedRegions_.WriteTo(output, _repeated_selectedRegions_codec);
      internalCheckers_.WriteTo(output, _repeated_internalCheckers_codec);
      if (IsInternal != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsInternal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (resourceCase_ == ResourceOneofCase.MonitoredResource) {
        output.WriteRawTag(26);
        output.WriteMessage(MonitoredResource);
      }
      if (resourceCase_ == ResourceOneofCase.ResourceGroup) {
        output.WriteRawTag(34);
        output.WriteMessage(ResourceGroup);
      }
      if (checkRequestTypeCase_ == CheckRequestTypeOneofCase.HttpCheck) {
        output.WriteRawTag(42);
        output.WriteMessage(HttpCheck);
      }
      if (checkRequestTypeCase_ == CheckRequestTypeOneofCase.TcpCheck) {
        output.WriteRawTag(50);
        output.WriteMessage(TcpCheck);
      }
      if (period_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Period);
      }
      if (timeout_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Timeout);
      }
      contentMatchers_.WriteTo(ref output, _repeated_contentMatchers_codec);
      selectedRegions_.WriteTo(ref output, _repeated_selectedRegions_codec);
      internalCheckers_.WriteTo(ref output, _repeated_internalCheckers_codec);
      if (IsInternal != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsInternal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (resourceCase_ == ResourceOneofCase.MonitoredResource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MonitoredResource);
      }
      if (resourceCase_ == ResourceOneofCase.ResourceGroup) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResourceGroup);
      }
      if (checkRequestTypeCase_ == CheckRequestTypeOneofCase.HttpCheck) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpCheck);
      }
      if (checkRequestTypeCase_ == CheckRequestTypeOneofCase.TcpCheck) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TcpCheck);
      }
      if (period_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Period);
      }
      if (timeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timeout);
      }
      size += contentMatchers_.CalculateSize(_repeated_contentMatchers_codec);
      size += selectedRegions_.CalculateSize(_repeated_selectedRegions_codec);
      if (IsInternal != false) {
        size += 1 + 1;
      }
      size += internalCheckers_.CalculateSize(_repeated_internalCheckers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UptimeCheckConfig other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.period_ != null) {
        if (period_ == null) {
          Period = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Period.MergeFrom(other.Period);
      }
      if (other.timeout_ != null) {
        if (timeout_ == null) {
          Timeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Timeout.MergeFrom(other.Timeout);
      }
      contentMatchers_.Add(other.contentMatchers_);
      selectedRegions_.Add(other.selectedRegions_);
      if (other.IsInternal != false) {
        IsInternal = other.IsInternal;
      }
      internalCheckers_.Add(other.internalCheckers_);
      switch (other.ResourceCase) {
        case ResourceOneofCase.MonitoredResource:
          if (MonitoredResource == null) {
            MonitoredResource = new global::Google.Api.MonitoredResource();
          }
          MonitoredResource.MergeFrom(other.MonitoredResource);
          break;
        case ResourceOneofCase.ResourceGroup:
          if (ResourceGroup == null) {
            ResourceGroup = new global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ResourceGroup();
          }
          ResourceGroup.MergeFrom(other.ResourceGroup);
          break;
      }

      switch (other.CheckRequestTypeCase) {
        case CheckRequestTypeOneofCase.HttpCheck:
          if (HttpCheck == null) {
            HttpCheck = new global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck();
          }
          HttpCheck.MergeFrom(other.HttpCheck);
          break;
        case CheckRequestTypeOneofCase.TcpCheck:
          if (TcpCheck == null) {
            TcpCheck = new global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.TcpCheck();
          }
          TcpCheck.MergeFrom(other.TcpCheck);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            global::Google.Api.MonitoredResource subBuilder = new global::Google.Api.MonitoredResource();
            if (resourceCase_ == ResourceOneofCase.MonitoredResource) {
              subBuilder.MergeFrom(MonitoredResource);
            }
            input.ReadMessage(subBuilder);
            MonitoredResource = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ResourceGroup subBuilder = new global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ResourceGroup();
            if (resourceCase_ == ResourceOneofCase.ResourceGroup) {
              subBuilder.MergeFrom(ResourceGroup);
            }
            input.ReadMessage(subBuilder);
            ResourceGroup = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck subBuilder = new global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck();
            if (checkRequestTypeCase_ == CheckRequestTypeOneofCase.HttpCheck) {
              subBuilder.MergeFrom(HttpCheck);
            }
            input.ReadMessage(subBuilder);
            HttpCheck = subBuilder;
            break;
          }
          case 50: {
            global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.TcpCheck subBuilder = new global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.TcpCheck();
            if (checkRequestTypeCase_ == CheckRequestTypeOneofCase.TcpCheck) {
              subBuilder.MergeFrom(TcpCheck);
            }
            input.ReadMessage(subBuilder);
            TcpCheck = subBuilder;
            break;
          }
          case 58: {
            if (period_ == null) {
              Period = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Period);
            break;
          }
          case 66: {
            if (timeout_ == null) {
              Timeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Timeout);
            break;
          }
          case 74: {
            contentMatchers_.AddEntriesFrom(input, _repeated_contentMatchers_codec);
            break;
          }
          case 82:
          case 80: {
            selectedRegions_.AddEntriesFrom(input, _repeated_selectedRegions_codec);
            break;
          }
          case 114: {
            internalCheckers_.AddEntriesFrom(input, _repeated_internalCheckers_codec);
            break;
          }
          case 120: {
            IsInternal = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            global::Google.Api.MonitoredResource subBuilder = new global::Google.Api.MonitoredResource();
            if (resourceCase_ == ResourceOneofCase.MonitoredResource) {
              subBuilder.MergeFrom(MonitoredResource);
            }
            input.ReadMessage(subBuilder);
            MonitoredResource = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ResourceGroup subBuilder = new global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ResourceGroup();
            if (resourceCase_ == ResourceOneofCase.ResourceGroup) {
              subBuilder.MergeFrom(ResourceGroup);
            }
            input.ReadMessage(subBuilder);
            ResourceGroup = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck subBuilder = new global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck();
            if (checkRequestTypeCase_ == CheckRequestTypeOneofCase.HttpCheck) {
              subBuilder.MergeFrom(HttpCheck);
            }
            input.ReadMessage(subBuilder);
            HttpCheck = subBuilder;
            break;
          }
          case 50: {
            global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.TcpCheck subBuilder = new global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.TcpCheck();
            if (checkRequestTypeCase_ == CheckRequestTypeOneofCase.TcpCheck) {
              subBuilder.MergeFrom(TcpCheck);
            }
            input.ReadMessage(subBuilder);
            TcpCheck = subBuilder;
            break;
          }
          case 58: {
            if (period_ == null) {
              Period = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Period);
            break;
          }
          case 66: {
            if (timeout_ == null) {
              Timeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Timeout);
            break;
          }
          case 74: {
            contentMatchers_.AddEntriesFrom(ref input, _repeated_contentMatchers_codec);
            break;
          }
          case 82:
          case 80: {
            selectedRegions_.AddEntriesFrom(ref input, _repeated_selectedRegions_codec);
            break;
          }
          case 114: {
            internalCheckers_.AddEntriesFrom(ref input, _repeated_internalCheckers_codec);
            break;
          }
          case 120: {
            IsInternal = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UptimeCheckConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The resource submessage for group checks. It can be used instead of a
      /// monitored resource, when multiple resources are being monitored.
      /// </summary>
      public sealed partial class ResourceGroup : pb::IMessage<ResourceGroup>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ResourceGroup> _parser = new pb::MessageParser<ResourceGroup>(() => new ResourceGroup());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ResourceGroup> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ResourceGroup() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ResourceGroup(ResourceGroup other) : this() {
          groupId_ = other.groupId_;
          resourceType_ = other.resourceType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ResourceGroup Clone() {
          return new ResourceGroup(this);
        }

        /// <summary>Field number for the "group_id" field.</summary>
        public const int GroupIdFieldNumber = 1;
        private string groupId_ = "";
        /// <summary>
        /// The group of resources being monitored. Should be only the `[GROUP_ID]`,
        /// and not the full-path
        /// `projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID]`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string GroupId {
          get { return groupId_; }
          set {
            groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "resource_type" field.</summary>
        public const int ResourceTypeFieldNumber = 2;
        private global::Google.Cloud.Monitoring.V3.GroupResourceType resourceType_ = global::Google.Cloud.Monitoring.V3.GroupResourceType.ResourceTypeUnspecified;
        /// <summary>
        /// The resource type of the group members.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Monitoring.V3.GroupResourceType ResourceType {
          get { return resourceType_; }
          set {
            resourceType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ResourceGroup);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ResourceGroup other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GroupId != other.GroupId) return false;
          if (ResourceType != other.ResourceType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
          if (ResourceType != global::Google.Cloud.Monitoring.V3.GroupResourceType.ResourceTypeUnspecified) hash ^= ResourceType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (GroupId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(GroupId);
          }
          if (ResourceType != global::Google.Cloud.Monitoring.V3.GroupResourceType.ResourceTypeUnspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ResourceType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (GroupId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(GroupId);
          }
          if (ResourceType != global::Google.Cloud.Monitoring.V3.GroupResourceType.ResourceTypeUnspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ResourceType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (GroupId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
          }
          if (ResourceType != global::Google.Cloud.Monitoring.V3.GroupResourceType.ResourceTypeUnspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResourceType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ResourceGroup other) {
          if (other == null) {
            return;
          }
          if (other.GroupId.Length != 0) {
            GroupId = other.GroupId;
          }
          if (other.ResourceType != global::Google.Cloud.Monitoring.V3.GroupResourceType.ResourceTypeUnspecified) {
            ResourceType = other.ResourceType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                GroupId = input.ReadString();
                break;
              }
              case 16: {
                ResourceType = (global::Google.Cloud.Monitoring.V3.GroupResourceType) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                GroupId = input.ReadString();
                break;
              }
              case 16: {
                ResourceType = (global::Google.Cloud.Monitoring.V3.GroupResourceType) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Information involved in an HTTP/HTTPS Uptime check request.
      /// </summary>
      public sealed partial class HttpCheck : pb::IMessage<HttpCheck>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<HttpCheck> _parser = new pb::MessageParser<HttpCheck>(() => new HttpCheck());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<HttpCheck> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public HttpCheck() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public HttpCheck(HttpCheck other) : this() {
          requestMethod_ = other.requestMethod_;
          useSsl_ = other.useSsl_;
          path_ = other.path_;
          port_ = other.port_;
          authInfo_ = other.authInfo_ != null ? other.authInfo_.Clone() : null;
          maskHeaders_ = other.maskHeaders_;
          headers_ = other.headers_.Clone();
          contentType_ = other.contentType_;
          validateSsl_ = other.validateSsl_;
          body_ = other.body_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public HttpCheck Clone() {
          return new HttpCheck(this);
        }

        /// <summary>Field number for the "request_method" field.</summary>
        public const int RequestMethodFieldNumber = 8;
        private global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.RequestMethod requestMethod_ = global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.RequestMethod.MethodUnspecified;
        /// <summary>
        /// The HTTP request method to use for the check. If set to
        /// `METHOD_UNSPECIFIED` then `request_method` defaults to `GET`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.RequestMethod RequestMethod {
          get { return requestMethod_; }
          set {
            requestMethod_ = value;
          }
        }

        /// <summary>Field number for the "use_ssl" field.</summary>
        public const int UseSslFieldNumber = 1;
        private bool useSsl_;
        /// <summary>
        /// If `true`, use HTTPS instead of HTTP to run the check.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool UseSsl {
          get { return useSsl_; }
          set {
            useSsl_ = value;
          }
        }

        /// <summary>Field number for the "path" field.</summary>
        public const int PathFieldNumber = 2;
        private string path_ = "";
        /// <summary>
        /// Optional (defaults to "/"). The path to the page against which to run
        /// the check. Will be combined with the `host` (specified within the
        /// `monitored_resource`) and `port` to construct the full URL. If the
        /// provided path does not begin with "/", a "/" will be prepended
        /// automatically.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Path {
          get { return path_; }
          set {
            path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "port" field.</summary>
        public const int PortFieldNumber = 3;
        private int port_;
        /// <summary>
        /// Optional (defaults to 80 when `use_ssl` is `false`, and 443 when
        /// `use_ssl` is `true`). The TCP port on the HTTP server against which to
        /// run the check. Will be combined with host (specified within the
        /// `monitored_resource`) and `path` to construct the full URL.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Port {
          get { return port_; }
          set {
            port_ = value;
          }
        }

        /// <summary>Field number for the "auth_info" field.</summary>
        public const int AuthInfoFieldNumber = 4;
        private global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.BasicAuthentication authInfo_;
        /// <summary>
        /// The authentication information. Optional when creating an HTTP check;
        /// defaults to empty.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.BasicAuthentication AuthInfo {
          get { return authInfo_; }
          set {
            authInfo_ = value;
          }
        }

        /// <summary>Field number for the "mask_headers" field.</summary>
        public const int MaskHeadersFieldNumber = 5;
        private bool maskHeaders_;
        /// <summary>
        /// Boolean specifying whether to encrypt the header information.
        /// Encryption should be specified for any headers related to authentication
        /// that you do not wish to be seen when retrieving the configuration. The
        /// server will be responsible for encrypting the headers.
        /// On Get/List calls, if `mask_headers` is set to `true` then the headers
        /// will be obscured with `******.`
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool MaskHeaders {
          get { return maskHeaders_; }
          set {
            maskHeaders_ = value;
          }
        }

        /// <summary>Field number for the "headers" field.</summary>
        public const int HeadersFieldNumber = 6;
        private static readonly pbc::MapField<string, string>.Codec _map_headers_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
        private readonly pbc::MapField<string, string> headers_ = new pbc::MapField<string, string>();
        /// <summary>
        /// The list of headers to send as part of the Uptime check request.
        /// If two headers have the same key and different values, they should
        /// be entered as a single header, with the value being a comma-separated
        /// list of all the desired values as described at
        /// https://www.w3.org/Protocols/rfc2616/rfc2616.txt (page 31).
        /// Entering two separate headers with the same key in a Create call will
        /// cause the first to be overwritten by the second.
        /// The maximum number of headers allowed is 100.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::MapField<string, string> Headers {
          get { return headers_; }
        }

        /// <summary>Field number for the "content_type" field.</summary>
        public const int ContentTypeFieldNumber = 9;
        private global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.ContentType contentType_ = global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.ContentType.TypeUnspecified;
        /// <summary>
        /// The content type header to use for the check. The following
        /// configurations result in errors:
        /// 1. Content type is specified in both the `headers` field and the
        /// `content_type` field.
        /// 2. Request method is `GET` and `content_type` is not `TYPE_UNSPECIFIED`
        /// 3. Request method is `POST` and `content_type` is `TYPE_UNSPECIFIED`.
        /// 4. Request method is `POST` and a "Content-Type" header is provided via
        /// `headers` field. The `content_type` field should be used instead.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.ContentType ContentType {
          get { return contentType_; }
          set {
            contentType_ = value;
          }
        }

        /// <summary>Field number for the "validate_ssl" field.</summary>
        public const int ValidateSslFieldNumber = 7;
        private bool validateSsl_;
        /// <summary>
        /// Boolean specifying whether to include SSL certificate validation as a
        /// part of the Uptime check. Only applies to checks where
        /// `monitored_resource` is set to `uptime_url`. If `use_ssl` is `false`,
        /// setting `validate_ssl` to `true` has no effect.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool ValidateSsl {
          get { return validateSsl_; }
          set {
            validateSsl_ = value;
          }
        }

        /// <summary>Field number for the "body" field.</summary>
        public const int BodyFieldNumber = 10;
        private pb::ByteString body_ = pb::ByteString.Empty;
        /// <summary>
        /// The request body associated with the HTTP POST request. If `content_type`
        /// is `URL_ENCODED`, the body passed in must be URL-encoded. Users can
        /// provide a `Content-Length` header via the `headers` field or the API will
        /// do so. If the `request_method` is `GET` and `body` is not empty, the API
        /// will return an error. The maximum byte size is 1 megabyte. Note: As with
        /// all `bytes` fields, JSON representations are base64 encoded. e.g.:
        /// "foo=bar" in URL-encoded form is "foo%3Dbar" and in base64 encoding is
        /// "Zm9vJTI1M0RiYXI=".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Body {
          get { return body_; }
          set {
            body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as HttpCheck);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(HttpCheck other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RequestMethod != other.RequestMethod) return false;
          if (UseSsl != other.UseSsl) return false;
          if (Path != other.Path) return false;
          if (Port != other.Port) return false;
          if (!object.Equals(AuthInfo, other.AuthInfo)) return false;
          if (MaskHeaders != other.MaskHeaders) return false;
          if (!Headers.Equals(other.Headers)) return false;
          if (ContentType != other.ContentType) return false;
          if (ValidateSsl != other.ValidateSsl) return false;
          if (Body != other.Body) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (RequestMethod != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.RequestMethod.MethodUnspecified) hash ^= RequestMethod.GetHashCode();
          if (UseSsl != false) hash ^= UseSsl.GetHashCode();
          if (Path.Length != 0) hash ^= Path.GetHashCode();
          if (Port != 0) hash ^= Port.GetHashCode();
          if (authInfo_ != null) hash ^= AuthInfo.GetHashCode();
          if (MaskHeaders != false) hash ^= MaskHeaders.GetHashCode();
          hash ^= Headers.GetHashCode();
          if (ContentType != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.ContentType.TypeUnspecified) hash ^= ContentType.GetHashCode();
          if (ValidateSsl != false) hash ^= ValidateSsl.GetHashCode();
          if (Body.Length != 0) hash ^= Body.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (UseSsl != false) {
            output.WriteRawTag(8);
            output.WriteBool(UseSsl);
          }
          if (Path.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Path);
          }
          if (Port != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Port);
          }
          if (authInfo_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(AuthInfo);
          }
          if (MaskHeaders != false) {
            output.WriteRawTag(40);
            output.WriteBool(MaskHeaders);
          }
          headers_.WriteTo(output, _map_headers_codec);
          if (ValidateSsl != false) {
            output.WriteRawTag(56);
            output.WriteBool(ValidateSsl);
          }
          if (RequestMethod != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.RequestMethod.MethodUnspecified) {
            output.WriteRawTag(64);
            output.WriteEnum((int) RequestMethod);
          }
          if (ContentType != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.ContentType.TypeUnspecified) {
            output.WriteRawTag(72);
            output.WriteEnum((int) ContentType);
          }
          if (Body.Length != 0) {
            output.WriteRawTag(82);
            output.WriteBytes(Body);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (UseSsl != false) {
            output.WriteRawTag(8);
            output.WriteBool(UseSsl);
          }
          if (Path.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Path);
          }
          if (Port != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Port);
          }
          if (authInfo_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(AuthInfo);
          }
          if (MaskHeaders != false) {
            output.WriteRawTag(40);
            output.WriteBool(MaskHeaders);
          }
          headers_.WriteTo(ref output, _map_headers_codec);
          if (ValidateSsl != false) {
            output.WriteRawTag(56);
            output.WriteBool(ValidateSsl);
          }
          if (RequestMethod != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.RequestMethod.MethodUnspecified) {
            output.WriteRawTag(64);
            output.WriteEnum((int) RequestMethod);
          }
          if (ContentType != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.ContentType.TypeUnspecified) {
            output.WriteRawTag(72);
            output.WriteEnum((int) ContentType);
          }
          if (Body.Length != 0) {
            output.WriteRawTag(82);
            output.WriteBytes(Body);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (RequestMethod != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.RequestMethod.MethodUnspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestMethod);
          }
          if (UseSsl != false) {
            size += 1 + 1;
          }
          if (Path.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
          }
          if (Port != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
          }
          if (authInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthInfo);
          }
          if (MaskHeaders != false) {
            size += 1 + 1;
          }
          size += headers_.CalculateSize(_map_headers_codec);
          if (ContentType != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.ContentType.TypeUnspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
          }
          if (ValidateSsl != false) {
            size += 1 + 1;
          }
          if (Body.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(HttpCheck other) {
          if (other == null) {
            return;
          }
          if (other.RequestMethod != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.RequestMethod.MethodUnspecified) {
            RequestMethod = other.RequestMethod;
          }
          if (other.UseSsl != false) {
            UseSsl = other.UseSsl;
          }
          if (other.Path.Length != 0) {
            Path = other.Path;
          }
          if (other.Port != 0) {
            Port = other.Port;
          }
          if (other.authInfo_ != null) {
            if (authInfo_ == null) {
              AuthInfo = new global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.BasicAuthentication();
            }
            AuthInfo.MergeFrom(other.AuthInfo);
          }
          if (other.MaskHeaders != false) {
            MaskHeaders = other.MaskHeaders;
          }
          headers_.Add(other.headers_);
          if (other.ContentType != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.ContentType.TypeUnspecified) {
            ContentType = other.ContentType;
          }
          if (other.ValidateSsl != false) {
            ValidateSsl = other.ValidateSsl;
          }
          if (other.Body.Length != 0) {
            Body = other.Body;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                UseSsl = input.ReadBool();
                break;
              }
              case 18: {
                Path = input.ReadString();
                break;
              }
              case 24: {
                Port = input.ReadInt32();
                break;
              }
              case 34: {
                if (authInfo_ == null) {
                  AuthInfo = new global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.BasicAuthentication();
                }
                input.ReadMessage(AuthInfo);
                break;
              }
              case 40: {
                MaskHeaders = input.ReadBool();
                break;
              }
              case 50: {
                headers_.AddEntriesFrom(input, _map_headers_codec);
                break;
              }
              case 56: {
                ValidateSsl = input.ReadBool();
                break;
              }
              case 64: {
                RequestMethod = (global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.RequestMethod) input.ReadEnum();
                break;
              }
              case 72: {
                ContentType = (global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.ContentType) input.ReadEnum();
                break;
              }
              case 82: {
                Body = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                UseSsl = input.ReadBool();
                break;
              }
              case 18: {
                Path = input.ReadString();
                break;
              }
              case 24: {
                Port = input.ReadInt32();
                break;
              }
              case 34: {
                if (authInfo_ == null) {
                  AuthInfo = new global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.BasicAuthentication();
                }
                input.ReadMessage(AuthInfo);
                break;
              }
              case 40: {
                MaskHeaders = input.ReadBool();
                break;
              }
              case 50: {
                headers_.AddEntriesFrom(ref input, _map_headers_codec);
                break;
              }
              case 56: {
                ValidateSsl = input.ReadBool();
                break;
              }
              case 64: {
                RequestMethod = (global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.RequestMethod) input.ReadEnum();
                break;
              }
              case 72: {
                ContentType = (global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Types.ContentType) input.ReadEnum();
                break;
              }
              case 82: {
                Body = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the HttpCheck message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// The HTTP request method options.
          /// </summary>
          public enum RequestMethod {
            /// <summary>
            /// No request method specified.
            /// </summary>
            [pbr::OriginalName("METHOD_UNSPECIFIED")] MethodUnspecified = 0,
            /// <summary>
            /// GET request.
            /// </summary>
            [pbr::OriginalName("GET")] Get = 1,
            /// <summary>
            /// POST request.
            /// </summary>
            [pbr::OriginalName("POST")] Post = 2,
          }

          /// <summary>
          /// Header options corresponding to the content type of a HTTP request body.
          /// </summary>
          public enum ContentType {
            /// <summary>
            /// No content type specified.
            /// </summary>
            [pbr::OriginalName("TYPE_UNSPECIFIED")] TypeUnspecified = 0,
            /// <summary>
            /// `body` is in URL-encoded form. Equivalent to setting the `Content-Type`
            /// to `application/x-www-form-urlencoded` in the HTTP request.
            /// </summary>
            [pbr::OriginalName("URL_ENCODED")] UrlEncoded = 1,
          }

          /// <summary>
          /// The authentication parameters to provide to the specified resource or
          /// URL that requires a username and password. Currently, only
          /// [Basic HTTP authentication](https://tools.ietf.org/html/rfc7617) is
          /// supported in Uptime checks.
          /// </summary>
          public sealed partial class BasicAuthentication : pb::IMessage<BasicAuthentication>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<BasicAuthentication> _parser = new pb::MessageParser<BasicAuthentication>(() => new BasicAuthentication());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<BasicAuthentication> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.HttpCheck.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public BasicAuthentication() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public BasicAuthentication(BasicAuthentication other) : this() {
              username_ = other.username_;
              password_ = other.password_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public BasicAuthentication Clone() {
              return new BasicAuthentication(this);
            }

            /// <summary>Field number for the "username" field.</summary>
            public const int UsernameFieldNumber = 1;
            private string username_ = "";
            /// <summary>
            /// The username to use when authenticating with the HTTP server.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Username {
              get { return username_; }
              set {
                username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "password" field.</summary>
            public const int PasswordFieldNumber = 2;
            private string password_ = "";
            /// <summary>
            /// The password to use when authenticating with the HTTP server.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Password {
              get { return password_; }
              set {
                password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as BasicAuthentication);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(BasicAuthentication other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Username != other.Username) return false;
              if (Password != other.Password) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Username.Length != 0) hash ^= Username.GetHashCode();
              if (Password.Length != 0) hash ^= Password.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Username.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Username);
              }
              if (Password.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Password);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Username.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Username);
              }
              if (Password.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Password);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Username.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
              }
              if (Password.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(BasicAuthentication other) {
              if (other == null) {
                return;
              }
              if (other.Username.Length != 0) {
                Username = other.Username;
              }
              if (other.Password.Length != 0) {
                Password = other.Password;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Username = input.ReadString();
                    break;
                  }
                  case 18: {
                    Password = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Username = input.ReadString();
                    break;
                  }
                  case 18: {
                    Password = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Information required for a TCP Uptime check request.
      /// </summary>
      public sealed partial class TcpCheck : pb::IMessage<TcpCheck>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TcpCheck> _parser = new pb::MessageParser<TcpCheck>(() => new TcpCheck());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TcpCheck> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TcpCheck() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TcpCheck(TcpCheck other) : this() {
          port_ = other.port_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TcpCheck Clone() {
          return new TcpCheck(this);
        }

        /// <summary>Field number for the "port" field.</summary>
        public const int PortFieldNumber = 1;
        private int port_;
        /// <summary>
        /// The TCP port on the server against which to run the check. Will be
        /// combined with host (specified within the `monitored_resource`) to
        /// construct the full URL. Required.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Port {
          get { return port_; }
          set {
            port_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TcpCheck);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TcpCheck other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Port != other.Port) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Port != 0) hash ^= Port.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Port != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Port);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Port != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Port);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Port != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TcpCheck other) {
          if (other == null) {
            return;
          }
          if (other.Port != 0) {
            Port = other.Port;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Port = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Port = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Optional. Used to perform content matching. This allows matching based on
      /// substrings and regular expressions, together with their negations. Only the
      /// first 4&amp;nbsp;MB of an HTTP or HTTPS check's response (and the first
      /// 1&amp;nbsp;MB of a TCP check's response) are examined for purposes of content
      /// matching.
      /// </summary>
      public sealed partial class ContentMatcher : pb::IMessage<ContentMatcher>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ContentMatcher> _parser = new pb::MessageParser<ContentMatcher>(() => new ContentMatcher());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ContentMatcher> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ContentMatcher() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ContentMatcher(ContentMatcher other) : this() {
          content_ = other.content_;
          matcher_ = other.matcher_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ContentMatcher Clone() {
          return new ContentMatcher(this);
        }

        /// <summary>Field number for the "content" field.</summary>
        public const int ContentFieldNumber = 1;
        private string content_ = "";
        /// <summary>
        /// String or regex content to match. Maximum 1024 bytes. An empty `content`
        /// string indicates no content matching is to be performed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Content {
          get { return content_; }
          set {
            content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "matcher" field.</summary>
        public const int MatcherFieldNumber = 2;
        private global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Types.ContentMatcherOption matcher_ = global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Types.ContentMatcherOption.Unspecified;
        /// <summary>
        /// The type of content matcher that will be applied to the server output,
        /// compared to the `content` string when the check is run.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Types.ContentMatcherOption Matcher {
          get { return matcher_; }
          set {
            matcher_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ContentMatcher);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ContentMatcher other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Content != other.Content) return false;
          if (Matcher != other.Matcher) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Content.Length != 0) hash ^= Content.GetHashCode();
          if (Matcher != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Types.ContentMatcherOption.Unspecified) hash ^= Matcher.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Content.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Content);
          }
          if (Matcher != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Types.ContentMatcherOption.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Matcher);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Content.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Content);
          }
          if (Matcher != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Types.ContentMatcherOption.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Matcher);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Content.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
          }
          if (Matcher != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Types.ContentMatcherOption.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Matcher);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ContentMatcher other) {
          if (other == null) {
            return;
          }
          if (other.Content.Length != 0) {
            Content = other.Content;
          }
          if (other.Matcher != global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Types.ContentMatcherOption.Unspecified) {
            Matcher = other.Matcher;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Content = input.ReadString();
                break;
              }
              case 16: {
                Matcher = (global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Types.ContentMatcherOption) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Content = input.ReadString();
                break;
              }
              case 16: {
                Matcher = (global::Google.Cloud.Monitoring.V3.UptimeCheckConfig.Types.ContentMatcher.Types.ContentMatcherOption) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the ContentMatcher message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Options to perform content matching.
          /// </summary>
          public enum ContentMatcherOption {
            /// <summary>
            /// No content matcher type specified (maintained for backward
            /// compatibility, but deprecated for future use).
            /// Treated as `CONTAINS_STRING`.
            /// </summary>
            [pbr::OriginalName("CONTENT_MATCHER_OPTION_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// Selects substring matching. The match succeeds if the output contains
            /// the `content` string.  This is the default value for checks without
            /// a `matcher` option, or where the value of `matcher` is
            /// `CONTENT_MATCHER_OPTION_UNSPECIFIED`.
            /// </summary>
            [pbr::OriginalName("CONTAINS_STRING")] ContainsString = 1,
            /// <summary>
            /// Selects negation of substring matching. The match succeeds if the
            /// output does _NOT_ contain the `content` string.
            /// </summary>
            [pbr::OriginalName("NOT_CONTAINS_STRING")] NotContainsString = 2,
            /// <summary>
            /// Selects regular-expression matching. The match succeeds of the output
            /// matches the regular expression specified in the `content` string.
            /// Regex matching is only supported for HTTP/HTTPS checks.
            /// </summary>
            [pbr::OriginalName("MATCHES_REGEX")] MatchesRegex = 3,
            /// <summary>
            /// Selects negation of regular-expression matching. The match succeeds if
            /// the output does _NOT_ match the regular expression specified in the
            /// `content` string. Regex matching is only supported for HTTP/HTTPS
            /// checks.
            /// </summary>
            [pbr::OriginalName("NOT_MATCHES_REGEX")] NotMatchesRegex = 4,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Contains the region, location, and list of IP
  /// addresses where checkers in the location run from.
  /// </summary>
  public sealed partial class UptimeCheckIp : pb::IMessage<UptimeCheckIp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UptimeCheckIp> _parser = new pb::MessageParser<UptimeCheckIp>(() => new UptimeCheckIp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UptimeCheckIp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.UptimeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UptimeCheckIp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UptimeCheckIp(UptimeCheckIp other) : this() {
      region_ = other.region_;
      location_ = other.location_;
      ipAddress_ = other.ipAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UptimeCheckIp Clone() {
      return new UptimeCheckIp(this);
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 1;
    private global::Google.Cloud.Monitoring.V3.UptimeCheckRegion region_ = global::Google.Cloud.Monitoring.V3.UptimeCheckRegion.RegionUnspecified;
    /// <summary>
    /// A broad region category in which the IP address is located.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Monitoring.V3.UptimeCheckRegion Region {
      get { return region_; }
      set {
        region_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private string location_ = "";
    /// <summary>
    /// A more specific location within the region that typically encodes
    /// a particular city/town/metro (and its containing state/province or country)
    /// within the broader umbrella region category.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ip_address" field.</summary>
    public const int IpAddressFieldNumber = 3;
    private string ipAddress_ = "";
    /// <summary>
    /// The IP address from which the Uptime check originates. This is a fully
    /// specified IP address (not an IP address range). Most IP addresses, as of
    /// this publication, are in IPv4 format; however, one should not rely on the
    /// IP addresses being in IPv4 format indefinitely, and should support
    /// interpreting this field in either IPv4 or IPv6 format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IpAddress {
      get { return ipAddress_; }
      set {
        ipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UptimeCheckIp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UptimeCheckIp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Region != other.Region) return false;
      if (Location != other.Location) return false;
      if (IpAddress != other.IpAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Region != global::Google.Cloud.Monitoring.V3.UptimeCheckRegion.RegionUnspecified) hash ^= Region.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (IpAddress.Length != 0) hash ^= IpAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Region != global::Google.Cloud.Monitoring.V3.UptimeCheckRegion.RegionUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Region);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Location);
      }
      if (IpAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IpAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Region != global::Google.Cloud.Monitoring.V3.UptimeCheckRegion.RegionUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Region);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Location);
      }
      if (IpAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IpAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Region != global::Google.Cloud.Monitoring.V3.UptimeCheckRegion.RegionUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Region);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (IpAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UptimeCheckIp other) {
      if (other == null) {
        return;
      }
      if (other.Region != global::Google.Cloud.Monitoring.V3.UptimeCheckRegion.RegionUnspecified) {
        Region = other.Region;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.IpAddress.Length != 0) {
        IpAddress = other.IpAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Region = (global::Google.Cloud.Monitoring.V3.UptimeCheckRegion) input.ReadEnum();
            break;
          }
          case 18: {
            Location = input.ReadString();
            break;
          }
          case 26: {
            IpAddress = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Region = (global::Google.Cloud.Monitoring.V3.UptimeCheckRegion) input.ReadEnum();
            break;
          }
          case 18: {
            Location = input.ReadString();
            break;
          }
          case 26: {
            IpAddress = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
