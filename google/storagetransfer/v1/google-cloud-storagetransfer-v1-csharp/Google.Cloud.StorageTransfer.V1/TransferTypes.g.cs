// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/storagetransfer/v1/transfer_types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.StorageTransfer.V1 {

  /// <summary>Holder for reflection information generated from google/storagetransfer/v1/transfer_types.proto</summary>
  public static partial class TransferTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/storagetransfer/v1/transfer_types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TransferTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5nb29nbGUvc3RvcmFnZXRyYW5zZmVyL3YxL3RyYW5zZmVyX3R5cGVzLnBy",
            "b3RvEhlnb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxGhxnb29nbGUvYXBpL2Fu",
            "bm90YXRpb25zLnByb3RvGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnBy",
            "b3RvGhlnb29nbGUvcHJvdG9idWYvYW55LnByb3RvGh5nb29nbGUvcHJvdG9i",
            "dWYvZHVyYXRpb24ucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAu",
            "cHJvdG8aFWdvb2dsZS9ycGMvY29kZS5wcm90bxoWZ29vZ2xlL3R5cGUvZGF0",
            "ZS5wcm90bxobZ29vZ2xlL3R5cGUvdGltZW9mZGF5LnByb3RvIkEKFEdvb2ds",
            "ZVNlcnZpY2VBY2NvdW50EhUKDWFjY291bnRfZW1haWwYASABKAkSEgoKc3Vi",
            "amVjdF9pZBgCIAEoCSJKCgxBd3NBY2Nlc3NLZXkSGgoNYWNjZXNzX2tleV9p",
            "ZBgBIAEoCUID4EECEh4KEXNlY3JldF9hY2Nlc3Nfa2V5GAIgASgJQgPgQQIi",
            "KgoQQXp1cmVDcmVkZW50aWFscxIWCglzYXNfdG9rZW4YAiABKAlCA+BBAiLT",
            "AgoQT2JqZWN0Q29uZGl0aW9ucxJLCihtaW5fdGltZV9lbGFwc2VkX3NpbmNl",
            "X2xhc3RfbW9kaWZpY2F0aW9uGAEgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1",
            "cmF0aW9uEksKKG1heF90aW1lX2VsYXBzZWRfc2luY2VfbGFzdF9tb2RpZmlj",
            "YXRpb24YAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SGAoQaW5j",
            "bHVkZV9wcmVmaXhlcxgDIAMoCRIYChBleGNsdWRlX3ByZWZpeGVzGAQgAygJ",
            "EjcKE2xhc3RfbW9kaWZpZWRfc2luY2UYBSABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEjgKFGxhc3RfbW9kaWZpZWRfYmVmb3JlGAYgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCIxCgdHY3NEYXRhEhgKC2J1Y2tl",
            "dF9uYW1lGAEgASgJQgPgQQISDAoEcGF0aBgDIAEoCSKQAQoJQXdzUzNEYXRh",
            "EhgKC2J1Y2tldF9uYW1lGAEgASgJQgPgQQISRAoOYXdzX2FjY2Vzc19rZXkY",
            "AiABKAsyJy5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLkF3c0FjY2Vzc0tl",
            "eUID4EEEEgwKBHBhdGgYAyABKAkSFQoIcm9sZV9hcm4YBCABKAlCA+BBBCKq",
            "AQoUQXp1cmVCbG9iU3RvcmFnZURhdGESHAoPc3RvcmFnZV9hY2NvdW50GAEg",
            "ASgJQgPgQQISTgoRYXp1cmVfY3JlZGVudGlhbHMYAiABKAsyKy5nb29nbGUu",
            "c3RvcmFnZXRyYW5zZmVyLnYxLkF6dXJlQ3JlZGVudGlhbHNCBuBBAuBBBBIW",
            "Cgljb250YWluZXIYBCABKAlCA+BBAhIMCgRwYXRoGAUgASgJIiEKCEh0dHBE",
            "YXRhEhUKCGxpc3RfdXJsGAEgASgJQgPgQQIinwEKD1RyYW5zZmVyT3B0aW9u",
            "cxIyCipvdmVyd3JpdGVfb2JqZWN0c19hbHJlYWR5X2V4aXN0aW5nX2luX3Np",
            "bmsYASABKAgSJQodZGVsZXRlX29iamVjdHNfdW5pcXVlX2luX3NpbmsYAiAB",
            "KAgSMQopZGVsZXRlX29iamVjdHNfZnJvbV9zb3VyY2VfYWZ0ZXJfdHJhbnNm",
            "ZXIYAyABKAgilAQKDFRyYW5zZmVyU3BlYxI7Cg1nY3NfZGF0YV9zaW5rGAQg",
            "ASgLMiIuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5HY3NEYXRhSAASPQoP",
            "Z2NzX2RhdGFfc291cmNlGAEgASgLMiIuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zl",
            "ci52MS5HY3NEYXRhSAESQgoSYXdzX3MzX2RhdGFfc291cmNlGAIgASgLMiQu",
            "Z29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5Bd3NTM0RhdGFIARI/ChBodHRw",
            "X2RhdGFfc291cmNlGAMgASgLMiMuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52",
            "MS5IdHRwRGF0YUgBElkKHmF6dXJlX2Jsb2Jfc3RvcmFnZV9kYXRhX3NvdXJj",
            "ZRgIIAEoCzIvLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuQXp1cmVCbG9i",
            "U3RvcmFnZURhdGFIARJGChFvYmplY3RfY29uZGl0aW9ucxgFIAEoCzIrLmdv",
            "b2dsZS5zdG9yYWdldHJhbnNmZXIudjEuT2JqZWN0Q29uZGl0aW9ucxJEChB0",
            "cmFuc2Zlcl9vcHRpb25zGAYgASgLMiouZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zl",
            "ci52MS5UcmFuc2Zlck9wdGlvbnNCCwoJZGF0YV9zaW5rQg0KC2RhdGFfc291",
            "cmNlIoUCCghTY2hlZHVsZRIzChNzY2hlZHVsZV9zdGFydF9kYXRlGAEgASgL",
            "MhEuZ29vZ2xlLnR5cGUuRGF0ZUID4EECEiwKEXNjaGVkdWxlX2VuZF9kYXRl",
            "GAIgASgLMhEuZ29vZ2xlLnR5cGUuRGF0ZRIxChFzdGFydF90aW1lX29mX2Rh",
            "eRgDIAEoCzIWLmdvb2dsZS50eXBlLlRpbWVPZkRheRIvCg9lbmRfdGltZV9v",
            "Zl9kYXkYBCABKAsyFi5nb29nbGUudHlwZS5UaW1lT2ZEYXkSMgoPcmVwZWF0",
            "X2ludGVydmFsGAUgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uIuAE",
            "CgtUcmFuc2ZlckpvYhIMCgRuYW1lGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIg",
            "ASgJEhIKCnByb2plY3RfaWQYAyABKAkSPgoNdHJhbnNmZXJfc3BlYxgEIAEo",
            "CzInLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuVHJhbnNmZXJTcGVjEkoK",
            "E25vdGlmaWNhdGlvbl9jb25maWcYCyABKAsyLS5nb29nbGUuc3RvcmFnZXRy",
            "YW5zZmVyLnYxLk5vdGlmaWNhdGlvbkNvbmZpZxI1CghzY2hlZHVsZRgFIAEo",
            "CzIjLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuU2NoZWR1bGUSPQoGc3Rh",
            "dHVzGAYgASgOMi0uZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5UcmFuc2Zl",
            "ckpvYi5TdGF0dXMSNgoNY3JlYXRpb25fdGltZRgHIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI/ChZsYXN0X21vZGlmaWNhdGlvbl90",
            "aW1lGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjYK",
            "DWRlbGV0aW9uX3RpbWUYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wQgPgQQMSHQoVbGF0ZXN0X29wZXJhdGlvbl9uYW1lGAwgASgJIkgKBlN0",
            "YXR1cxIWChJTVEFUVVNfVU5TUEVDSUZJRUQQABILCgdFTkFCTEVEEAESDAoI",
            "RElTQUJMRUQQAhILCgdERUxFVEVEEAMiOAoNRXJyb3JMb2dFbnRyeRIQCgN1",
            "cmwYASABKAlCA+BBAhIVCg1lcnJvcl9kZXRhaWxzGAMgAygJIpgBCgxFcnJv",
            "clN1bW1hcnkSKQoKZXJyb3JfY29kZRgBIAEoDjIQLmdvb2dsZS5ycGMuQ29k",
            "ZUID4EECEhgKC2Vycm9yX2NvdW50GAIgASgDQgPgQQISQwoRZXJyb3JfbG9n",
            "X2VudHJpZXMYAyADKAsyKC5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLkVy",
            "cm9yTG9nRW50cnki3gQKEFRyYW5zZmVyQ291bnRlcnMSIQoZb2JqZWN0c19m",
            "b3VuZF9mcm9tX3NvdXJjZRgBIAEoAxIfChdieXRlc19mb3VuZF9mcm9tX3Nv",
            "dXJjZRgCIAEoAxIkChxvYmplY3RzX2ZvdW5kX29ubHlfZnJvbV9zaW5rGAMg",
            "ASgDEiIKGmJ5dGVzX2ZvdW5kX29ubHlfZnJvbV9zaW5rGAQgASgDEisKI29i",
            "amVjdHNfZnJvbV9zb3VyY2Vfc2tpcHBlZF9ieV9zeW5jGAUgASgDEikKIWJ5",
            "dGVzX2Zyb21fc291cmNlX3NraXBwZWRfYnlfc3luYxgGIAEoAxIeChZvYmpl",
            "Y3RzX2NvcGllZF90b19zaW5rGAcgASgDEhwKFGJ5dGVzX2NvcGllZF90b19z",
            "aW5rGAggASgDEiMKG29iamVjdHNfZGVsZXRlZF9mcm9tX3NvdXJjZRgJIAEo",
            "AxIhChlieXRlc19kZWxldGVkX2Zyb21fc291cmNlGAogASgDEiEKGW9iamVj",
            "dHNfZGVsZXRlZF9mcm9tX3NpbmsYCyABKAMSHwoXYnl0ZXNfZGVsZXRlZF9m",
            "cm9tX3NpbmsYDCABKAMSIgoab2JqZWN0c19mcm9tX3NvdXJjZV9mYWlsZWQY",
            "DSABKAMSIAoYYnl0ZXNfZnJvbV9zb3VyY2VfZmFpbGVkGA4gASgDEioKIm9i",
            "amVjdHNfZmFpbGVkX3RvX2RlbGV0ZV9mcm9tX3NpbmsYDyABKAMSKAogYnl0",
            "ZXNfZmFpbGVkX3RvX2RlbGV0ZV9mcm9tX3NpbmsYECABKAMipQMKEk5vdGlm",
            "aWNhdGlvbkNvbmZpZxIZCgxwdWJzdWJfdG9waWMYASABKAlCA+BBAhJMCgtl",
            "dmVudF90eXBlcxgCIAMoDjI3Lmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEu",
            "Tm90aWZpY2F0aW9uQ29uZmlnLkV2ZW50VHlwZRJYCg5wYXlsb2FkX2Zvcm1h",
            "dBgDIAEoDjI7Lmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuTm90aWZpY2F0",
            "aW9uQ29uZmlnLlBheWxvYWRGb3JtYXRCA+BBAiKGAQoJRXZlbnRUeXBlEhoK",
            "FkVWRU5UX1RZUEVfVU5TUEVDSUZJRUQQABIeChpUUkFOU0ZFUl9PUEVSQVRJ",
            "T05fU1VDQ0VTUxABEh0KGVRSQU5TRkVSX09QRVJBVElPTl9GQUlMRUQQAhIe",
            "ChpUUkFOU0ZFUl9PUEVSQVRJT05fQUJPUlRFRBADIkMKDVBheWxvYWRGb3Jt",
            "YXQSHgoaUEFZTE9BRF9GT1JNQVRfVU5TUEVDSUZJRUQQABIICgROT05FEAES",
            "CAoESlNPThACIvIEChFUcmFuc2Zlck9wZXJhdGlvbhIMCgRuYW1lGAEgASgJ",
            "EhIKCnByb2plY3RfaWQYAiABKAkSPgoNdHJhbnNmZXJfc3BlYxgDIAEoCzIn",
            "Lmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuVHJhbnNmZXJTcGVjEkoKE25v",
            "dGlmaWNhdGlvbl9jb25maWcYCiABKAsyLS5nb29nbGUuc3RvcmFnZXRyYW5z",
            "ZmVyLnYxLk5vdGlmaWNhdGlvbkNvbmZpZxIuCgpzdGFydF90aW1lGAQgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgFIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASQwoGc3RhdHVzGAYgASgO",
            "MjMuZ29vZ2xlLnN0b3JhZ2V0cmFuc2Zlci52MS5UcmFuc2Zlck9wZXJhdGlv",
            "bi5TdGF0dXMSPQoIY291bnRlcnMYByABKAsyKy5nb29nbGUuc3RvcmFnZXRy",
            "YW5zZmVyLnYxLlRyYW5zZmVyQ291bnRlcnMSQQoQZXJyb3JfYnJlYWtkb3du",
            "cxgIIAMoCzInLmdvb2dsZS5zdG9yYWdldHJhbnNmZXIudjEuRXJyb3JTdW1t",
            "YXJ5EhkKEXRyYW5zZmVyX2pvYl9uYW1lGAkgASgJIm8KBlN0YXR1cxIWChJT",
            "VEFUVVNfVU5TUEVDSUZJRUQQABIPCgtJTl9QUk9HUkVTUxABEgoKBlBBVVNF",
            "RBACEgsKB1NVQ0NFU1MQAxIKCgZGQUlMRUQQBBILCgdBQk9SVEVEEAUSCgoG",
            "UVVFVUVEEAZC6gEKI2NvbS5nb29nbGUuc3RvcmFnZXRyYW5zZmVyLnYxLnBy",
            "b3RvQg1UcmFuc2ZlclR5cGVzWkhnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90",
            "by9nb29nbGVhcGlzL3N0b3JhZ2V0cmFuc2Zlci92MTtzdG9yYWdldHJhbnNm",
            "ZXL4AQGqAh9Hb29nbGUuQ2xvdWQuU3RvcmFnZVRyYW5zZmVyLlYxygIfR29v",
            "Z2xlXENsb3VkXFN0b3JhZ2VUcmFuc2ZlclxWMeoCIkdvb2dsZTo6Q2xvdWQ6",
            "OlN0b3JhZ2VUcmFuc2Zlcjo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.CodeReflection.Descriptor, global::Google.Type.DateReflection.Descriptor, global::Google.Type.TimeofdayReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.GoogleServiceAccount), global::Google.Cloud.StorageTransfer.V1.GoogleServiceAccount.Parser, new[]{ "AccountEmail", "SubjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.AwsAccessKey), global::Google.Cloud.StorageTransfer.V1.AwsAccessKey.Parser, new[]{ "AccessKeyId", "SecretAccessKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.AzureCredentials), global::Google.Cloud.StorageTransfer.V1.AzureCredentials.Parser, new[]{ "SasToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.ObjectConditions), global::Google.Cloud.StorageTransfer.V1.ObjectConditions.Parser, new[]{ "MinTimeElapsedSinceLastModification", "MaxTimeElapsedSinceLastModification", "IncludePrefixes", "ExcludePrefixes", "LastModifiedSince", "LastModifiedBefore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.GcsData), global::Google.Cloud.StorageTransfer.V1.GcsData.Parser, new[]{ "BucketName", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.AwsS3Data), global::Google.Cloud.StorageTransfer.V1.AwsS3Data.Parser, new[]{ "BucketName", "AwsAccessKey", "Path", "RoleArn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.AzureBlobStorageData), global::Google.Cloud.StorageTransfer.V1.AzureBlobStorageData.Parser, new[]{ "StorageAccount", "AzureCredentials", "Container", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.HttpData), global::Google.Cloud.StorageTransfer.V1.HttpData.Parser, new[]{ "ListUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.TransferOptions), global::Google.Cloud.StorageTransfer.V1.TransferOptions.Parser, new[]{ "OverwriteObjectsAlreadyExistingInSink", "DeleteObjectsUniqueInSink", "DeleteObjectsFromSourceAfterTransfer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.TransferSpec), global::Google.Cloud.StorageTransfer.V1.TransferSpec.Parser, new[]{ "GcsDataSink", "GcsDataSource", "AwsS3DataSource", "HttpDataSource", "AzureBlobStorageDataSource", "ObjectConditions", "TransferOptions" }, new[]{ "DataSink", "DataSource" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.Schedule), global::Google.Cloud.StorageTransfer.V1.Schedule.Parser, new[]{ "ScheduleStartDate", "ScheduleEndDate", "StartTimeOfDay", "EndTimeOfDay", "RepeatInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.TransferJob), global::Google.Cloud.StorageTransfer.V1.TransferJob.Parser, new[]{ "Name", "Description", "ProjectId", "TransferSpec", "NotificationConfig", "Schedule", "Status", "CreationTime", "LastModificationTime", "DeletionTime", "LatestOperationName" }, null, new[]{ typeof(global::Google.Cloud.StorageTransfer.V1.TransferJob.Types.Status) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.ErrorLogEntry), global::Google.Cloud.StorageTransfer.V1.ErrorLogEntry.Parser, new[]{ "Url", "ErrorDetails" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.ErrorSummary), global::Google.Cloud.StorageTransfer.V1.ErrorSummary.Parser, new[]{ "ErrorCode", "ErrorCount", "ErrorLogEntries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.TransferCounters), global::Google.Cloud.StorageTransfer.V1.TransferCounters.Parser, new[]{ "ObjectsFoundFromSource", "BytesFoundFromSource", "ObjectsFoundOnlyFromSink", "BytesFoundOnlyFromSink", "ObjectsFromSourceSkippedBySync", "BytesFromSourceSkippedBySync", "ObjectsCopiedToSink", "BytesCopiedToSink", "ObjectsDeletedFromSource", "BytesDeletedFromSource", "ObjectsDeletedFromSink", "BytesDeletedFromSink", "ObjectsFromSourceFailed", "BytesFromSourceFailed", "ObjectsFailedToDeleteFromSink", "BytesFailedToDeleteFromSink" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.NotificationConfig), global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Parser, new[]{ "PubsubTopic", "EventTypes", "PayloadFormat" }, null, new[]{ typeof(global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.EventType), typeof(global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.PayloadFormat) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.StorageTransfer.V1.TransferOperation), global::Google.Cloud.StorageTransfer.V1.TransferOperation.Parser, new[]{ "Name", "ProjectId", "TransferSpec", "NotificationConfig", "StartTime", "EndTime", "Status", "Counters", "ErrorBreakdowns", "TransferJobName" }, null, new[]{ typeof(global::Google.Cloud.StorageTransfer.V1.TransferOperation.Types.Status) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Google service account
  /// </summary>
  public sealed partial class GoogleServiceAccount : pb::IMessage<GoogleServiceAccount>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GoogleServiceAccount> _parser = new pb::MessageParser<GoogleServiceAccount>(() => new GoogleServiceAccount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GoogleServiceAccount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoogleServiceAccount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoogleServiceAccount(GoogleServiceAccount other) : this() {
      accountEmail_ = other.accountEmail_;
      subjectId_ = other.subjectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoogleServiceAccount Clone() {
      return new GoogleServiceAccount(this);
    }

    /// <summary>Field number for the "account_email" field.</summary>
    public const int AccountEmailFieldNumber = 1;
    private string accountEmail_ = "";
    /// <summary>
    /// Email address of the service account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountEmail {
      get { return accountEmail_; }
      set {
        accountEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject_id" field.</summary>
    public const int SubjectIdFieldNumber = 2;
    private string subjectId_ = "";
    /// <summary>
    /// Unique identifier for the service account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GoogleServiceAccount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GoogleServiceAccount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountEmail != other.AccountEmail) return false;
      if (SubjectId != other.SubjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountEmail.Length != 0) hash ^= AccountEmail.GetHashCode();
      if (SubjectId.Length != 0) hash ^= SubjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AccountEmail.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountEmail);
      }
      if (SubjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AccountEmail.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountEmail);
      }
      if (SubjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountEmail);
      }
      if (SubjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GoogleServiceAccount other) {
      if (other == null) {
        return;
      }
      if (other.AccountEmail.Length != 0) {
        AccountEmail = other.AccountEmail;
      }
      if (other.SubjectId.Length != 0) {
        SubjectId = other.SubjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountEmail = input.ReadString();
            break;
          }
          case 18: {
            SubjectId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccountEmail = input.ReadString();
            break;
          }
          case 18: {
            SubjectId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// AWS access key (see
  /// [AWS Security
  /// Credentials](https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html)).
  ///
  /// For information on our data retention policy for user credentials, see
  /// [User credentials](/storage-transfer/docs/data-retention#user-credentials).
  /// </summary>
  public sealed partial class AwsAccessKey : pb::IMessage<AwsAccessKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwsAccessKey> _parser = new pb::MessageParser<AwsAccessKey>(() => new AwsAccessKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwsAccessKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwsAccessKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwsAccessKey(AwsAccessKey other) : this() {
      accessKeyId_ = other.accessKeyId_;
      secretAccessKey_ = other.secretAccessKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwsAccessKey Clone() {
      return new AwsAccessKey(this);
    }

    /// <summary>Field number for the "access_key_id" field.</summary>
    public const int AccessKeyIdFieldNumber = 1;
    private string accessKeyId_ = "";
    /// <summary>
    /// Required. AWS access key ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessKeyId {
      get { return accessKeyId_; }
      set {
        accessKeyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret_access_key" field.</summary>
    public const int SecretAccessKeyFieldNumber = 2;
    private string secretAccessKey_ = "";
    /// <summary>
    /// Required. AWS secret access key. This field is not returned in RPC
    /// responses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecretAccessKey {
      get { return secretAccessKey_; }
      set {
        secretAccessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwsAccessKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwsAccessKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessKeyId != other.AccessKeyId) return false;
      if (SecretAccessKey != other.SecretAccessKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessKeyId.Length != 0) hash ^= AccessKeyId.GetHashCode();
      if (SecretAccessKey.Length != 0) hash ^= SecretAccessKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AccessKeyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessKeyId);
      }
      if (SecretAccessKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SecretAccessKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AccessKeyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessKeyId);
      }
      if (SecretAccessKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SecretAccessKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccessKeyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKeyId);
      }
      if (SecretAccessKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecretAccessKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwsAccessKey other) {
      if (other == null) {
        return;
      }
      if (other.AccessKeyId.Length != 0) {
        AccessKeyId = other.AccessKeyId;
      }
      if (other.SecretAccessKey.Length != 0) {
        SecretAccessKey = other.SecretAccessKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessKeyId = input.ReadString();
            break;
          }
          case 18: {
            SecretAccessKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccessKeyId = input.ReadString();
            break;
          }
          case 18: {
            SecretAccessKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Azure credentials
  ///
  /// For information on our data retention policy for user credentials, see
  /// [User credentials](/storage-transfer/docs/data-retention#user-credentials).
  /// </summary>
  public sealed partial class AzureCredentials : pb::IMessage<AzureCredentials>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AzureCredentials> _parser = new pb::MessageParser<AzureCredentials>(() => new AzureCredentials());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureCredentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureCredentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureCredentials(AzureCredentials other) : this() {
      sasToken_ = other.sasToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureCredentials Clone() {
      return new AzureCredentials(this);
    }

    /// <summary>Field number for the "sas_token" field.</summary>
    public const int SasTokenFieldNumber = 2;
    private string sasToken_ = "";
    /// <summary>
    /// Required. Azure shared access signature (SAS).
    ///
    /// &lt;aside class="note">
    /// &lt;strong>Note:&lt;/strong>Copying data from Azure Data Lake
    /// Storage (ADLS) Gen 2 is in [Preview](/products/#product-launch-stages).
    /// During Preview, if you are copying data from ADLS Gen 2, you must use an
    /// account SAS.
    /// &lt;/aside>
    ///
    /// For more information about SAS, see
    /// [Grant limited access to Azure Storage resources using shared access
    /// signatures
    /// (SAS)](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SasToken {
      get { return sasToken_; }
      set {
        sasToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureCredentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureCredentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SasToken != other.SasToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SasToken.Length != 0) hash ^= SasToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SasToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SasToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SasToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SasToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SasToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SasToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureCredentials other) {
      if (other == null) {
        return;
      }
      if (other.SasToken.Length != 0) {
        SasToken = other.SasToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            SasToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            SasToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Conditions that determine which objects will be transferred. Applies only
  /// to Cloud Data Sources such as S3, Azure, and Cloud Storage.
  ///
  /// The "last modification time" refers to the time of the
  /// last change to the object's content or metadata — specifically, this is
  /// the `updated` property of Cloud Storage objects, the `LastModified` field
  /// of S3 objects, and the `Last-Modified` header of Azure blobs.
  /// </summary>
  public sealed partial class ObjectConditions : pb::IMessage<ObjectConditions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectConditions> _parser = new pb::MessageParser<ObjectConditions>(() => new ObjectConditions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectConditions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectConditions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectConditions(ObjectConditions other) : this() {
      minTimeElapsedSinceLastModification_ = other.minTimeElapsedSinceLastModification_ != null ? other.minTimeElapsedSinceLastModification_.Clone() : null;
      maxTimeElapsedSinceLastModification_ = other.maxTimeElapsedSinceLastModification_ != null ? other.maxTimeElapsedSinceLastModification_.Clone() : null;
      includePrefixes_ = other.includePrefixes_.Clone();
      excludePrefixes_ = other.excludePrefixes_.Clone();
      lastModifiedSince_ = other.lastModifiedSince_ != null ? other.lastModifiedSince_.Clone() : null;
      lastModifiedBefore_ = other.lastModifiedBefore_ != null ? other.lastModifiedBefore_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectConditions Clone() {
      return new ObjectConditions(this);
    }

    /// <summary>Field number for the "min_time_elapsed_since_last_modification" field.</summary>
    public const int MinTimeElapsedSinceLastModificationFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Duration minTimeElapsedSinceLastModification_;
    /// <summary>
    /// If specified, only objects with a "last modification time" before
    /// `NOW` - `min_time_elapsed_since_last_modification` and objects that don't
    ///  have a "last modification time" are transferred.
    ///
    /// For each [TransferOperation][google.storagetransfer.v1.TransferOperation]
    /// started by this [TransferJob][google.storagetransfer.v1.TransferJob], `NOW`
    /// refers to the [start_time]
    /// [google.storagetransfer.v1.TransferOperation.start_time] of the
    /// `TransferOperation`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration MinTimeElapsedSinceLastModification {
      get { return minTimeElapsedSinceLastModification_; }
      set {
        minTimeElapsedSinceLastModification_ = value;
      }
    }

    /// <summary>Field number for the "max_time_elapsed_since_last_modification" field.</summary>
    public const int MaxTimeElapsedSinceLastModificationFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration maxTimeElapsedSinceLastModification_;
    /// <summary>
    /// If specified, only objects with a "last modification time" on or after
    /// `NOW` - `max_time_elapsed_since_last_modification` and objects that don't
    /// have a "last modification time" are transferred.
    ///
    /// For each [TransferOperation][google.storagetransfer.v1.TransferOperation]
    /// started by this [TransferJob][google.storagetransfer.v1.TransferJob],
    /// `NOW` refers to the [start_time]
    /// [google.storagetransfer.v1.TransferOperation.start_time] of the
    /// `TransferOperation`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration MaxTimeElapsedSinceLastModification {
      get { return maxTimeElapsedSinceLastModification_; }
      set {
        maxTimeElapsedSinceLastModification_ = value;
      }
    }

    /// <summary>Field number for the "include_prefixes" field.</summary>
    public const int IncludePrefixesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_includePrefixes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> includePrefixes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// If you specify `include_prefixes`, Storage Transfer Service uses the items
    /// in the `include_prefixes` array to determine which objects to include in a
    /// transfer. Objects must start with one of the matching `include_prefixes`
    /// for inclusion in the transfer. If [exclude_prefixes]
    /// [google.storagetransfer.v1.ObjectConditions.exclude_prefixes] is specified,
    /// objects must not start with any of the `exclude_prefixes` specified for
    /// inclusion in the transfer.
    ///
    /// The following are requirements of `include_prefixes`:
    ///
    ///   * Each include-prefix can contain any sequence of Unicode characters, to
    ///     a max length of 1024 bytes when UTF8-encoded, and must not contain
    ///     Carriage Return or Line Feed characters.  Wildcard matching and regular
    ///     expression matching are not supported.
    ///
    ///   * Each include-prefix must omit the leading slash. For example, to
    ///     include the object `s3://my-aws-bucket/logs/y=2015/requests.gz`,
    ///     specify the include-prefix as `logs/y=2015/requests.gz`.
    ///
    ///   * None of the include-prefix values can be empty, if specified.
    ///
    ///   * Each include-prefix must include a distinct portion of the object
    ///     namespace. No include-prefix may be a prefix of another
    ///     include-prefix.
    ///
    /// The max size of `include_prefixes` is 1000.
    ///
    /// For more information, see [Filtering objects from
    /// transfers](/storage-transfer/docs/filtering-objects-from-transfers).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> IncludePrefixes {
      get { return includePrefixes_; }
    }

    /// <summary>Field number for the "exclude_prefixes" field.</summary>
    public const int ExcludePrefixesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_excludePrefixes_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> excludePrefixes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// If you specify `exclude_prefixes`, Storage Transfer Service uses the items
    /// in the `exclude_prefixes` array to determine which objects to exclude from
    /// a transfer. Objects must not start with one of the matching
    /// `exclude_prefixes` for inclusion in a transfer.
    ///
    /// The following are requirements of `exclude_prefixes`:
    ///
    ///   * Each exclude-prefix can contain any sequence of Unicode characters, to
    ///     a max length of 1024 bytes when UTF8-encoded, and must not contain
    ///     Carriage Return or Line Feed characters.  Wildcard matching and regular
    ///     expression matching are not supported.
    ///
    ///   * Each exclude-prefix must omit the leading slash. For example, to
    ///     exclude the object `s3://my-aws-bucket/logs/y=2015/requests.gz`,
    ///     specify the exclude-prefix as `logs/y=2015/requests.gz`.
    ///
    ///   * None of the exclude-prefix values can be empty, if specified.
    ///
    ///   * Each exclude-prefix must exclude a distinct portion of the object
    ///     namespace. No exclude-prefix may be a prefix of another
    ///     exclude-prefix.
    ///
    ///   * If [include_prefixes]
    ///     [google.storagetransfer.v1.ObjectConditions.include_prefixes] is
    ///     specified, then each exclude-prefix must start with the value of a path
    ///     explicitly included by `include_prefixes`.
    ///
    /// The max size of `exclude_prefixes` is 1000.
    ///
    /// For more information, see [Filtering objects from
    /// transfers](/storage-transfer/docs/filtering-objects-from-transfers).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ExcludePrefixes {
      get { return excludePrefixes_; }
    }

    /// <summary>Field number for the "last_modified_since" field.</summary>
    public const int LastModifiedSinceFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastModifiedSince_;
    /// <summary>
    /// If specified, only objects with a "last modification time" on or after
    /// this timestamp and objects that don't have a "last modification time" are
    /// transferred.
    ///
    /// The `last_modified_since` and `last_modified_before` fields can be used
    /// together for chunked data processing. For example, consider a script that
    /// processes each day's worth of data at a time. For that you'd set each
    /// of the fields as follows:
    ///
    /// *  `last_modified_since` to the start of the day
    ///
    /// *  `last_modified_before` to the end of the day
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastModifiedSince {
      get { return lastModifiedSince_; }
      set {
        lastModifiedSince_ = value;
      }
    }

    /// <summary>Field number for the "last_modified_before" field.</summary>
    public const int LastModifiedBeforeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastModifiedBefore_;
    /// <summary>
    /// If specified, only objects with a "last modification time" before this
    /// timestamp and objects that don't have a "last modification time" will be
    /// transferred.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastModifiedBefore {
      get { return lastModifiedBefore_; }
      set {
        lastModifiedBefore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectConditions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectConditions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MinTimeElapsedSinceLastModification, other.MinTimeElapsedSinceLastModification)) return false;
      if (!object.Equals(MaxTimeElapsedSinceLastModification, other.MaxTimeElapsedSinceLastModification)) return false;
      if(!includePrefixes_.Equals(other.includePrefixes_)) return false;
      if(!excludePrefixes_.Equals(other.excludePrefixes_)) return false;
      if (!object.Equals(LastModifiedSince, other.LastModifiedSince)) return false;
      if (!object.Equals(LastModifiedBefore, other.LastModifiedBefore)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (minTimeElapsedSinceLastModification_ != null) hash ^= MinTimeElapsedSinceLastModification.GetHashCode();
      if (maxTimeElapsedSinceLastModification_ != null) hash ^= MaxTimeElapsedSinceLastModification.GetHashCode();
      hash ^= includePrefixes_.GetHashCode();
      hash ^= excludePrefixes_.GetHashCode();
      if (lastModifiedSince_ != null) hash ^= LastModifiedSince.GetHashCode();
      if (lastModifiedBefore_ != null) hash ^= LastModifiedBefore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (minTimeElapsedSinceLastModification_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MinTimeElapsedSinceLastModification);
      }
      if (maxTimeElapsedSinceLastModification_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MaxTimeElapsedSinceLastModification);
      }
      includePrefixes_.WriteTo(output, _repeated_includePrefixes_codec);
      excludePrefixes_.WriteTo(output, _repeated_excludePrefixes_codec);
      if (lastModifiedSince_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LastModifiedSince);
      }
      if (lastModifiedBefore_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LastModifiedBefore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (minTimeElapsedSinceLastModification_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MinTimeElapsedSinceLastModification);
      }
      if (maxTimeElapsedSinceLastModification_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MaxTimeElapsedSinceLastModification);
      }
      includePrefixes_.WriteTo(ref output, _repeated_includePrefixes_codec);
      excludePrefixes_.WriteTo(ref output, _repeated_excludePrefixes_codec);
      if (lastModifiedSince_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LastModifiedSince);
      }
      if (lastModifiedBefore_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LastModifiedBefore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (minTimeElapsedSinceLastModification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinTimeElapsedSinceLastModification);
      }
      if (maxTimeElapsedSinceLastModification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxTimeElapsedSinceLastModification);
      }
      size += includePrefixes_.CalculateSize(_repeated_includePrefixes_codec);
      size += excludePrefixes_.CalculateSize(_repeated_excludePrefixes_codec);
      if (lastModifiedSince_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastModifiedSince);
      }
      if (lastModifiedBefore_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastModifiedBefore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectConditions other) {
      if (other == null) {
        return;
      }
      if (other.minTimeElapsedSinceLastModification_ != null) {
        if (minTimeElapsedSinceLastModification_ == null) {
          MinTimeElapsedSinceLastModification = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        MinTimeElapsedSinceLastModification.MergeFrom(other.MinTimeElapsedSinceLastModification);
      }
      if (other.maxTimeElapsedSinceLastModification_ != null) {
        if (maxTimeElapsedSinceLastModification_ == null) {
          MaxTimeElapsedSinceLastModification = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        MaxTimeElapsedSinceLastModification.MergeFrom(other.MaxTimeElapsedSinceLastModification);
      }
      includePrefixes_.Add(other.includePrefixes_);
      excludePrefixes_.Add(other.excludePrefixes_);
      if (other.lastModifiedSince_ != null) {
        if (lastModifiedSince_ == null) {
          LastModifiedSince = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastModifiedSince.MergeFrom(other.LastModifiedSince);
      }
      if (other.lastModifiedBefore_ != null) {
        if (lastModifiedBefore_ == null) {
          LastModifiedBefore = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastModifiedBefore.MergeFrom(other.LastModifiedBefore);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (minTimeElapsedSinceLastModification_ == null) {
              MinTimeElapsedSinceLastModification = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MinTimeElapsedSinceLastModification);
            break;
          }
          case 18: {
            if (maxTimeElapsedSinceLastModification_ == null) {
              MaxTimeElapsedSinceLastModification = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MaxTimeElapsedSinceLastModification);
            break;
          }
          case 26: {
            includePrefixes_.AddEntriesFrom(input, _repeated_includePrefixes_codec);
            break;
          }
          case 34: {
            excludePrefixes_.AddEntriesFrom(input, _repeated_excludePrefixes_codec);
            break;
          }
          case 42: {
            if (lastModifiedSince_ == null) {
              LastModifiedSince = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastModifiedSince);
            break;
          }
          case 50: {
            if (lastModifiedBefore_ == null) {
              LastModifiedBefore = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastModifiedBefore);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (minTimeElapsedSinceLastModification_ == null) {
              MinTimeElapsedSinceLastModification = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MinTimeElapsedSinceLastModification);
            break;
          }
          case 18: {
            if (maxTimeElapsedSinceLastModification_ == null) {
              MaxTimeElapsedSinceLastModification = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MaxTimeElapsedSinceLastModification);
            break;
          }
          case 26: {
            includePrefixes_.AddEntriesFrom(ref input, _repeated_includePrefixes_codec);
            break;
          }
          case 34: {
            excludePrefixes_.AddEntriesFrom(ref input, _repeated_excludePrefixes_codec);
            break;
          }
          case 42: {
            if (lastModifiedSince_ == null) {
              LastModifiedSince = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastModifiedSince);
            break;
          }
          case 50: {
            if (lastModifiedBefore_ == null) {
              LastModifiedBefore = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastModifiedBefore);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// In a GcsData resource, an object's name is the Cloud Storage object's
  /// name and its "last modification time" refers to the object's `updated`
  /// property of Cloud Storage objects, which changes when the content or the
  /// metadata of the object is updated.
  /// </summary>
  public sealed partial class GcsData : pb::IMessage<GcsData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GcsData> _parser = new pb::MessageParser<GcsData>(() => new GcsData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GcsData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcsData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcsData(GcsData other) : this() {
      bucketName_ = other.bucketName_;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcsData Clone() {
      return new GcsData(this);
    }

    /// <summary>Field number for the "bucket_name" field.</summary>
    public const int BucketNameFieldNumber = 1;
    private string bucketName_ = "";
    /// <summary>
    /// Required. Cloud Storage bucket name. Must meet
    /// [Bucket Name Requirements](/storage/docs/naming#requirements).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BucketName {
      get { return bucketName_; }
      set {
        bucketName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 3;
    private string path_ = "";
    /// <summary>
    /// Root path to transfer objects.
    ///
    /// Must be an empty string or full path name that ends with a '/'. This field
    /// is treated as an object prefix. As such, it should generally not begin with
    /// a '/'.
    ///
    /// The root path value must meet
    /// [Object Name Requirements](/storage/docs/naming#objectnames).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GcsData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GcsData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BucketName != other.BucketName) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BucketName.Length != 0) hash ^= BucketName.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BucketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BucketName);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BucketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BucketName);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BucketName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BucketName);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GcsData other) {
      if (other == null) {
        return;
      }
      if (other.BucketName.Length != 0) {
        BucketName = other.BucketName;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BucketName = input.ReadString();
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BucketName = input.ReadString();
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An AwsS3Data resource can be a data source, but not a data sink.
  /// In an AwsS3Data resource, an object's name is the S3 object's key name.
  /// </summary>
  public sealed partial class AwsS3Data : pb::IMessage<AwsS3Data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwsS3Data> _parser = new pb::MessageParser<AwsS3Data>(() => new AwsS3Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwsS3Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwsS3Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwsS3Data(AwsS3Data other) : this() {
      bucketName_ = other.bucketName_;
      awsAccessKey_ = other.awsAccessKey_ != null ? other.awsAccessKey_.Clone() : null;
      path_ = other.path_;
      roleArn_ = other.roleArn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwsS3Data Clone() {
      return new AwsS3Data(this);
    }

    /// <summary>Field number for the "bucket_name" field.</summary>
    public const int BucketNameFieldNumber = 1;
    private string bucketName_ = "";
    /// <summary>
    /// Required. S3 Bucket name (see
    /// [Creating a
    /// bucket](https://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BucketName {
      get { return bucketName_; }
      set {
        bucketName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aws_access_key" field.</summary>
    public const int AwsAccessKeyFieldNumber = 2;
    private global::Google.Cloud.StorageTransfer.V1.AwsAccessKey awsAccessKey_;
    /// <summary>
    /// Input only. AWS access key used to sign the API requests to the AWS S3
    /// bucket. Permissions on the bucket must be granted to the access ID of the
    /// AWS access key. This field is required.
    ///
    /// For information on our data retention policy for user credentials, see
    /// [User credentials](/storage-transfer/docs/data-retention#user-credentials).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.AwsAccessKey AwsAccessKey {
      get { return awsAccessKey_; }
      set {
        awsAccessKey_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 3;
    private string path_ = "";
    /// <summary>
    /// Root path to transfer objects.
    ///
    /// Must be an empty string or full path name that ends with a '/'. This field
    /// is treated as an object prefix. As such, it should generally not begin with
    /// a '/'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role_arn" field.</summary>
    public const int RoleArnFieldNumber = 4;
    private string roleArn_ = "";
    /// <summary>
    /// Input only. Role arn to support temporary credentials via
    /// AssumeRoleWithWebIdentity.
    ///
    /// When role arn is provided, transfer service will fetch temporary
    /// credentials for the session using AssumeRoleWithWebIdentity call for the
    /// provided role using the [GoogleServiceAccount] for this project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoleArn {
      get { return roleArn_; }
      set {
        roleArn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwsS3Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwsS3Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BucketName != other.BucketName) return false;
      if (!object.Equals(AwsAccessKey, other.AwsAccessKey)) return false;
      if (Path != other.Path) return false;
      if (RoleArn != other.RoleArn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BucketName.Length != 0) hash ^= BucketName.GetHashCode();
      if (awsAccessKey_ != null) hash ^= AwsAccessKey.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (RoleArn.Length != 0) hash ^= RoleArn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BucketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BucketName);
      }
      if (awsAccessKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AwsAccessKey);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (RoleArn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoleArn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BucketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BucketName);
      }
      if (awsAccessKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AwsAccessKey);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (RoleArn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoleArn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BucketName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BucketName);
      }
      if (awsAccessKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AwsAccessKey);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (RoleArn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleArn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwsS3Data other) {
      if (other == null) {
        return;
      }
      if (other.BucketName.Length != 0) {
        BucketName = other.BucketName;
      }
      if (other.awsAccessKey_ != null) {
        if (awsAccessKey_ == null) {
          AwsAccessKey = new global::Google.Cloud.StorageTransfer.V1.AwsAccessKey();
        }
        AwsAccessKey.MergeFrom(other.AwsAccessKey);
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.RoleArn.Length != 0) {
        RoleArn = other.RoleArn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BucketName = input.ReadString();
            break;
          }
          case 18: {
            if (awsAccessKey_ == null) {
              AwsAccessKey = new global::Google.Cloud.StorageTransfer.V1.AwsAccessKey();
            }
            input.ReadMessage(AwsAccessKey);
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            RoleArn = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BucketName = input.ReadString();
            break;
          }
          case 18: {
            if (awsAccessKey_ == null) {
              AwsAccessKey = new global::Google.Cloud.StorageTransfer.V1.AwsAccessKey();
            }
            input.ReadMessage(AwsAccessKey);
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            RoleArn = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An AzureBlobStorageData resource can be a data source, but not a data sink.
  /// An AzureBlobStorageData resource represents one Azure container. The storage
  /// account determines the [Azure
  /// endpoint](https://docs.microsoft.com/en-us/azure/storage/common/storage-create-storage-account#storage-account-endpoints).
  /// In an AzureBlobStorageData resource, a blobs's name is the [Azure Blob
  /// Storage blob's key
  /// name](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#blob-names).
  /// </summary>
  public sealed partial class AzureBlobStorageData : pb::IMessage<AzureBlobStorageData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AzureBlobStorageData> _parser = new pb::MessageParser<AzureBlobStorageData>(() => new AzureBlobStorageData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AzureBlobStorageData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureBlobStorageData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureBlobStorageData(AzureBlobStorageData other) : this() {
      storageAccount_ = other.storageAccount_;
      azureCredentials_ = other.azureCredentials_ != null ? other.azureCredentials_.Clone() : null;
      container_ = other.container_;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AzureBlobStorageData Clone() {
      return new AzureBlobStorageData(this);
    }

    /// <summary>Field number for the "storage_account" field.</summary>
    public const int StorageAccountFieldNumber = 1;
    private string storageAccount_ = "";
    /// <summary>
    /// Required. The name of the Azure Storage account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StorageAccount {
      get { return storageAccount_; }
      set {
        storageAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "azure_credentials" field.</summary>
    public const int AzureCredentialsFieldNumber = 2;
    private global::Google.Cloud.StorageTransfer.V1.AzureCredentials azureCredentials_;
    /// <summary>
    /// Required. Input only. Credentials used to authenticate API requests to
    /// Azure.
    ///
    /// For information on our data retention policy for user credentials, see
    /// [User credentials](/storage-transfer/docs/data-retention#user-credentials).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.AzureCredentials AzureCredentials {
      get { return azureCredentials_; }
      set {
        azureCredentials_ = value;
      }
    }

    /// <summary>Field number for the "container" field.</summary>
    public const int ContainerFieldNumber = 4;
    private string container_ = "";
    /// <summary>
    /// Required. The container to transfer from the Azure Storage account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Container {
      get { return container_; }
      set {
        container_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 5;
    private string path_ = "";
    /// <summary>
    /// Root path to transfer objects.
    ///
    /// Must be an empty string or full path name that ends with a '/'. This field
    /// is treated as an object prefix. As such, it should generally not begin with
    /// a '/'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AzureBlobStorageData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AzureBlobStorageData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StorageAccount != other.StorageAccount) return false;
      if (!object.Equals(AzureCredentials, other.AzureCredentials)) return false;
      if (Container != other.Container) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StorageAccount.Length != 0) hash ^= StorageAccount.GetHashCode();
      if (azureCredentials_ != null) hash ^= AzureCredentials.GetHashCode();
      if (Container.Length != 0) hash ^= Container.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StorageAccount.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StorageAccount);
      }
      if (azureCredentials_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AzureCredentials);
      }
      if (Container.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Container);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StorageAccount.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StorageAccount);
      }
      if (azureCredentials_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AzureCredentials);
      }
      if (Container.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Container);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StorageAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StorageAccount);
      }
      if (azureCredentials_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AzureCredentials);
      }
      if (Container.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Container);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AzureBlobStorageData other) {
      if (other == null) {
        return;
      }
      if (other.StorageAccount.Length != 0) {
        StorageAccount = other.StorageAccount;
      }
      if (other.azureCredentials_ != null) {
        if (azureCredentials_ == null) {
          AzureCredentials = new global::Google.Cloud.StorageTransfer.V1.AzureCredentials();
        }
        AzureCredentials.MergeFrom(other.AzureCredentials);
      }
      if (other.Container.Length != 0) {
        Container = other.Container;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StorageAccount = input.ReadString();
            break;
          }
          case 18: {
            if (azureCredentials_ == null) {
              AzureCredentials = new global::Google.Cloud.StorageTransfer.V1.AzureCredentials();
            }
            input.ReadMessage(AzureCredentials);
            break;
          }
          case 34: {
            Container = input.ReadString();
            break;
          }
          case 42: {
            Path = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StorageAccount = input.ReadString();
            break;
          }
          case 18: {
            if (azureCredentials_ == null) {
              AzureCredentials = new global::Google.Cloud.StorageTransfer.V1.AzureCredentials();
            }
            input.ReadMessage(AzureCredentials);
            break;
          }
          case 34: {
            Container = input.ReadString();
            break;
          }
          case 42: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An HttpData resource specifies a list of objects on the web to be transferred
  /// over HTTP.  The information of the objects to be transferred is contained in
  /// a file referenced by a URL. The first line in the file must be
  /// `"TsvHttpData-1.0"`, which specifies the format of the file.  Subsequent
  /// lines specify the information of the list of objects, one object per list
  /// entry. Each entry has the following tab-delimited fields:
  ///
  /// * **HTTP URL** — The location of the object.
  ///
  /// * **Length** — The size of the object in bytes.
  ///
  /// * **MD5** — The base64-encoded MD5 hash of the object.
  ///
  /// For an example of a valid TSV file, see
  /// [Transferring data from
  /// URLs](https://cloud.google.com/storage-transfer/docs/create-url-list).
  ///
  /// When transferring data based on a URL list, keep the following in mind:
  ///
  /// * When an object located at `http(s)://hostname:port/&lt;URL-path>` is
  /// transferred to a data sink, the name of the object at the data sink is
  /// `&lt;hostname>/&lt;URL-path>`.
  ///
  /// * If the specified size of an object does not match the actual size of the
  /// object fetched, the object will not be transferred.
  ///
  /// * If the specified MD5 does not match the MD5 computed from the transferred
  /// bytes, the object transfer will fail.
  ///
  /// * Ensure that each URL you specify is publicly accessible. For
  /// example, in Cloud Storage you can
  /// [share an object publicly]
  /// (/storage/docs/cloud-console#_sharingdata) and get a link to it.
  ///
  /// * Storage Transfer Service obeys `robots.txt` rules and requires the source
  /// HTTP server to support `Range` requests and to return a `Content-Length`
  /// header in each response.
  ///
  /// * [ObjectConditions][google.storagetransfer.v1.ObjectConditions] have no
  /// effect when filtering objects to transfer.
  /// </summary>
  public sealed partial class HttpData : pb::IMessage<HttpData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HttpData> _parser = new pb::MessageParser<HttpData>(() => new HttpData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HttpData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpData(HttpData other) : this() {
      listUrl_ = other.listUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpData Clone() {
      return new HttpData(this);
    }

    /// <summary>Field number for the "list_url" field.</summary>
    public const int ListUrlFieldNumber = 1;
    private string listUrl_ = "";
    /// <summary>
    /// Required. The URL that points to the file that stores the object list
    /// entries. This file must allow public access.  Currently, only URLs with
    /// HTTP and HTTPS schemes are supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListUrl {
      get { return listUrl_; }
      set {
        listUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HttpData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HttpData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ListUrl != other.ListUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ListUrl.Length != 0) hash ^= ListUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ListUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ListUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ListUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ListUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ListUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HttpData other) {
      if (other == null) {
        return;
      }
      if (other.ListUrl.Length != 0) {
        ListUrl = other.ListUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ListUrl = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ListUrl = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TransferOptions define the actions to be performed on objects in a transfer.
  /// </summary>
  public sealed partial class TransferOptions : pb::IMessage<TransferOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferOptions> _parser = new pb::MessageParser<TransferOptions>(() => new TransferOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferOptions(TransferOptions other) : this() {
      overwriteObjectsAlreadyExistingInSink_ = other.overwriteObjectsAlreadyExistingInSink_;
      deleteObjectsUniqueInSink_ = other.deleteObjectsUniqueInSink_;
      deleteObjectsFromSourceAfterTransfer_ = other.deleteObjectsFromSourceAfterTransfer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferOptions Clone() {
      return new TransferOptions(this);
    }

    /// <summary>Field number for the "overwrite_objects_already_existing_in_sink" field.</summary>
    public const int OverwriteObjectsAlreadyExistingInSinkFieldNumber = 1;
    private bool overwriteObjectsAlreadyExistingInSink_;
    /// <summary>
    /// When to overwrite objects that already exist in the sink. The default is
    /// that only objects that are different from the source are ovewritten. If
    /// true, all objects in the sink whose name matches an object in the source
    /// will be overwritten with the source object.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OverwriteObjectsAlreadyExistingInSink {
      get { return overwriteObjectsAlreadyExistingInSink_; }
      set {
        overwriteObjectsAlreadyExistingInSink_ = value;
      }
    }

    /// <summary>Field number for the "delete_objects_unique_in_sink" field.</summary>
    public const int DeleteObjectsUniqueInSinkFieldNumber = 2;
    private bool deleteObjectsUniqueInSink_;
    /// <summary>
    /// Whether objects that exist only in the sink should be deleted.
    ///
    /// **Note:** This option and [delete_objects_from_source_after_transfer]
    /// [google.storagetransfer.v1.TransferOptions.delete_objects_from_source_after_transfer]
    /// are mutually exclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DeleteObjectsUniqueInSink {
      get { return deleteObjectsUniqueInSink_; }
      set {
        deleteObjectsUniqueInSink_ = value;
      }
    }

    /// <summary>Field number for the "delete_objects_from_source_after_transfer" field.</summary>
    public const int DeleteObjectsFromSourceAfterTransferFieldNumber = 3;
    private bool deleteObjectsFromSourceAfterTransfer_;
    /// <summary>
    /// Whether objects should be deleted from the source after they are
    /// transferred to the sink.
    ///
    /// **Note:** This option and [delete_objects_unique_in_sink]
    /// [google.storagetransfer.v1.TransferOptions.delete_objects_unique_in_sink]
    /// are mutually exclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DeleteObjectsFromSourceAfterTransfer {
      get { return deleteObjectsFromSourceAfterTransfer_; }
      set {
        deleteObjectsFromSourceAfterTransfer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OverwriteObjectsAlreadyExistingInSink != other.OverwriteObjectsAlreadyExistingInSink) return false;
      if (DeleteObjectsUniqueInSink != other.DeleteObjectsUniqueInSink) return false;
      if (DeleteObjectsFromSourceAfterTransfer != other.DeleteObjectsFromSourceAfterTransfer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OverwriteObjectsAlreadyExistingInSink != false) hash ^= OverwriteObjectsAlreadyExistingInSink.GetHashCode();
      if (DeleteObjectsUniqueInSink != false) hash ^= DeleteObjectsUniqueInSink.GetHashCode();
      if (DeleteObjectsFromSourceAfterTransfer != false) hash ^= DeleteObjectsFromSourceAfterTransfer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OverwriteObjectsAlreadyExistingInSink != false) {
        output.WriteRawTag(8);
        output.WriteBool(OverwriteObjectsAlreadyExistingInSink);
      }
      if (DeleteObjectsUniqueInSink != false) {
        output.WriteRawTag(16);
        output.WriteBool(DeleteObjectsUniqueInSink);
      }
      if (DeleteObjectsFromSourceAfterTransfer != false) {
        output.WriteRawTag(24);
        output.WriteBool(DeleteObjectsFromSourceAfterTransfer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OverwriteObjectsAlreadyExistingInSink != false) {
        output.WriteRawTag(8);
        output.WriteBool(OverwriteObjectsAlreadyExistingInSink);
      }
      if (DeleteObjectsUniqueInSink != false) {
        output.WriteRawTag(16);
        output.WriteBool(DeleteObjectsUniqueInSink);
      }
      if (DeleteObjectsFromSourceAfterTransfer != false) {
        output.WriteRawTag(24);
        output.WriteBool(DeleteObjectsFromSourceAfterTransfer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OverwriteObjectsAlreadyExistingInSink != false) {
        size += 1 + 1;
      }
      if (DeleteObjectsUniqueInSink != false) {
        size += 1 + 1;
      }
      if (DeleteObjectsFromSourceAfterTransfer != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferOptions other) {
      if (other == null) {
        return;
      }
      if (other.OverwriteObjectsAlreadyExistingInSink != false) {
        OverwriteObjectsAlreadyExistingInSink = other.OverwriteObjectsAlreadyExistingInSink;
      }
      if (other.DeleteObjectsUniqueInSink != false) {
        DeleteObjectsUniqueInSink = other.DeleteObjectsUniqueInSink;
      }
      if (other.DeleteObjectsFromSourceAfterTransfer != false) {
        DeleteObjectsFromSourceAfterTransfer = other.DeleteObjectsFromSourceAfterTransfer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OverwriteObjectsAlreadyExistingInSink = input.ReadBool();
            break;
          }
          case 16: {
            DeleteObjectsUniqueInSink = input.ReadBool();
            break;
          }
          case 24: {
            DeleteObjectsFromSourceAfterTransfer = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OverwriteObjectsAlreadyExistingInSink = input.ReadBool();
            break;
          }
          case 16: {
            DeleteObjectsUniqueInSink = input.ReadBool();
            break;
          }
          case 24: {
            DeleteObjectsFromSourceAfterTransfer = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Configuration for running a transfer.
  /// </summary>
  public sealed partial class TransferSpec : pb::IMessage<TransferSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferSpec> _parser = new pb::MessageParser<TransferSpec>(() => new TransferSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferSpec(TransferSpec other) : this() {
      objectConditions_ = other.objectConditions_ != null ? other.objectConditions_.Clone() : null;
      transferOptions_ = other.transferOptions_ != null ? other.transferOptions_.Clone() : null;
      switch (other.DataSinkCase) {
        case DataSinkOneofCase.GcsDataSink:
          GcsDataSink = other.GcsDataSink.Clone();
          break;
      }

      switch (other.DataSourceCase) {
        case DataSourceOneofCase.GcsDataSource:
          GcsDataSource = other.GcsDataSource.Clone();
          break;
        case DataSourceOneofCase.AwsS3DataSource:
          AwsS3DataSource = other.AwsS3DataSource.Clone();
          break;
        case DataSourceOneofCase.HttpDataSource:
          HttpDataSource = other.HttpDataSource.Clone();
          break;
        case DataSourceOneofCase.AzureBlobStorageDataSource:
          AzureBlobStorageDataSource = other.AzureBlobStorageDataSource.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferSpec Clone() {
      return new TransferSpec(this);
    }

    /// <summary>Field number for the "gcs_data_sink" field.</summary>
    public const int GcsDataSinkFieldNumber = 4;
    /// <summary>
    /// A Cloud Storage data sink.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.GcsData GcsDataSink {
      get { return dataSinkCase_ == DataSinkOneofCase.GcsDataSink ? (global::Google.Cloud.StorageTransfer.V1.GcsData) dataSink_ : null; }
      set {
        dataSink_ = value;
        dataSinkCase_ = value == null ? DataSinkOneofCase.None : DataSinkOneofCase.GcsDataSink;
      }
    }

    /// <summary>Field number for the "gcs_data_source" field.</summary>
    public const int GcsDataSourceFieldNumber = 1;
    /// <summary>
    /// A Cloud Storage data source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.GcsData GcsDataSource {
      get { return dataSourceCase_ == DataSourceOneofCase.GcsDataSource ? (global::Google.Cloud.StorageTransfer.V1.GcsData) dataSource_ : null; }
      set {
        dataSource_ = value;
        dataSourceCase_ = value == null ? DataSourceOneofCase.None : DataSourceOneofCase.GcsDataSource;
      }
    }

    /// <summary>Field number for the "aws_s3_data_source" field.</summary>
    public const int AwsS3DataSourceFieldNumber = 2;
    /// <summary>
    /// An AWS S3 data source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.AwsS3Data AwsS3DataSource {
      get { return dataSourceCase_ == DataSourceOneofCase.AwsS3DataSource ? (global::Google.Cloud.StorageTransfer.V1.AwsS3Data) dataSource_ : null; }
      set {
        dataSource_ = value;
        dataSourceCase_ = value == null ? DataSourceOneofCase.None : DataSourceOneofCase.AwsS3DataSource;
      }
    }

    /// <summary>Field number for the "http_data_source" field.</summary>
    public const int HttpDataSourceFieldNumber = 3;
    /// <summary>
    /// An HTTP URL data source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.HttpData HttpDataSource {
      get { return dataSourceCase_ == DataSourceOneofCase.HttpDataSource ? (global::Google.Cloud.StorageTransfer.V1.HttpData) dataSource_ : null; }
      set {
        dataSource_ = value;
        dataSourceCase_ = value == null ? DataSourceOneofCase.None : DataSourceOneofCase.HttpDataSource;
      }
    }

    /// <summary>Field number for the "azure_blob_storage_data_source" field.</summary>
    public const int AzureBlobStorageDataSourceFieldNumber = 8;
    /// <summary>
    /// An Azure Blob Storage data source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.AzureBlobStorageData AzureBlobStorageDataSource {
      get { return dataSourceCase_ == DataSourceOneofCase.AzureBlobStorageDataSource ? (global::Google.Cloud.StorageTransfer.V1.AzureBlobStorageData) dataSource_ : null; }
      set {
        dataSource_ = value;
        dataSourceCase_ = value == null ? DataSourceOneofCase.None : DataSourceOneofCase.AzureBlobStorageDataSource;
      }
    }

    /// <summary>Field number for the "object_conditions" field.</summary>
    public const int ObjectConditionsFieldNumber = 5;
    private global::Google.Cloud.StorageTransfer.V1.ObjectConditions objectConditions_;
    /// <summary>
    /// Only objects that satisfy these object conditions are included in the set
    /// of data source and data sink objects.  Object conditions based on
    /// objects' "last modification time" do not exclude objects in a data sink.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.ObjectConditions ObjectConditions {
      get { return objectConditions_; }
      set {
        objectConditions_ = value;
      }
    }

    /// <summary>Field number for the "transfer_options" field.</summary>
    public const int TransferOptionsFieldNumber = 6;
    private global::Google.Cloud.StorageTransfer.V1.TransferOptions transferOptions_;
    /// <summary>
    /// If the option
    /// [delete_objects_unique_in_sink][google.storagetransfer.v1.TransferOptions.delete_objects_unique_in_sink]
    /// is `true` and time-based object conditions such as 'last modification time'
    /// are specified, the request fails with an
    /// [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT] error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.TransferOptions TransferOptions {
      get { return transferOptions_; }
      set {
        transferOptions_ = value;
      }
    }

    private object dataSink_;
    /// <summary>Enum of possible cases for the "data_sink" oneof.</summary>
    public enum DataSinkOneofCase {
      None = 0,
      GcsDataSink = 4,
    }
    private DataSinkOneofCase dataSinkCase_ = DataSinkOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSinkOneofCase DataSinkCase {
      get { return dataSinkCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDataSink() {
      dataSinkCase_ = DataSinkOneofCase.None;
      dataSink_ = null;
    }

    private object dataSource_;
    /// <summary>Enum of possible cases for the "data_source" oneof.</summary>
    public enum DataSourceOneofCase {
      None = 0,
      GcsDataSource = 1,
      AwsS3DataSource = 2,
      HttpDataSource = 3,
      AzureBlobStorageDataSource = 8,
    }
    private DataSourceOneofCase dataSourceCase_ = DataSourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceOneofCase DataSourceCase {
      get { return dataSourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDataSource() {
      dataSourceCase_ = DataSourceOneofCase.None;
      dataSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GcsDataSink, other.GcsDataSink)) return false;
      if (!object.Equals(GcsDataSource, other.GcsDataSource)) return false;
      if (!object.Equals(AwsS3DataSource, other.AwsS3DataSource)) return false;
      if (!object.Equals(HttpDataSource, other.HttpDataSource)) return false;
      if (!object.Equals(AzureBlobStorageDataSource, other.AzureBlobStorageDataSource)) return false;
      if (!object.Equals(ObjectConditions, other.ObjectConditions)) return false;
      if (!object.Equals(TransferOptions, other.TransferOptions)) return false;
      if (DataSinkCase != other.DataSinkCase) return false;
      if (DataSourceCase != other.DataSourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataSinkCase_ == DataSinkOneofCase.GcsDataSink) hash ^= GcsDataSink.GetHashCode();
      if (dataSourceCase_ == DataSourceOneofCase.GcsDataSource) hash ^= GcsDataSource.GetHashCode();
      if (dataSourceCase_ == DataSourceOneofCase.AwsS3DataSource) hash ^= AwsS3DataSource.GetHashCode();
      if (dataSourceCase_ == DataSourceOneofCase.HttpDataSource) hash ^= HttpDataSource.GetHashCode();
      if (dataSourceCase_ == DataSourceOneofCase.AzureBlobStorageDataSource) hash ^= AzureBlobStorageDataSource.GetHashCode();
      if (objectConditions_ != null) hash ^= ObjectConditions.GetHashCode();
      if (transferOptions_ != null) hash ^= TransferOptions.GetHashCode();
      hash ^= (int) dataSinkCase_;
      hash ^= (int) dataSourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dataSourceCase_ == DataSourceOneofCase.GcsDataSource) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsDataSource);
      }
      if (dataSourceCase_ == DataSourceOneofCase.AwsS3DataSource) {
        output.WriteRawTag(18);
        output.WriteMessage(AwsS3DataSource);
      }
      if (dataSourceCase_ == DataSourceOneofCase.HttpDataSource) {
        output.WriteRawTag(26);
        output.WriteMessage(HttpDataSource);
      }
      if (dataSinkCase_ == DataSinkOneofCase.GcsDataSink) {
        output.WriteRawTag(34);
        output.WriteMessage(GcsDataSink);
      }
      if (objectConditions_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ObjectConditions);
      }
      if (transferOptions_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TransferOptions);
      }
      if (dataSourceCase_ == DataSourceOneofCase.AzureBlobStorageDataSource) {
        output.WriteRawTag(66);
        output.WriteMessage(AzureBlobStorageDataSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dataSourceCase_ == DataSourceOneofCase.GcsDataSource) {
        output.WriteRawTag(10);
        output.WriteMessage(GcsDataSource);
      }
      if (dataSourceCase_ == DataSourceOneofCase.AwsS3DataSource) {
        output.WriteRawTag(18);
        output.WriteMessage(AwsS3DataSource);
      }
      if (dataSourceCase_ == DataSourceOneofCase.HttpDataSource) {
        output.WriteRawTag(26);
        output.WriteMessage(HttpDataSource);
      }
      if (dataSinkCase_ == DataSinkOneofCase.GcsDataSink) {
        output.WriteRawTag(34);
        output.WriteMessage(GcsDataSink);
      }
      if (objectConditions_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ObjectConditions);
      }
      if (transferOptions_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TransferOptions);
      }
      if (dataSourceCase_ == DataSourceOneofCase.AzureBlobStorageDataSource) {
        output.WriteRawTag(66);
        output.WriteMessage(AzureBlobStorageDataSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataSinkCase_ == DataSinkOneofCase.GcsDataSink) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcsDataSink);
      }
      if (dataSourceCase_ == DataSourceOneofCase.GcsDataSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcsDataSource);
      }
      if (dataSourceCase_ == DataSourceOneofCase.AwsS3DataSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AwsS3DataSource);
      }
      if (dataSourceCase_ == DataSourceOneofCase.HttpDataSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpDataSource);
      }
      if (dataSourceCase_ == DataSourceOneofCase.AzureBlobStorageDataSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AzureBlobStorageDataSource);
      }
      if (objectConditions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectConditions);
      }
      if (transferOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransferOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferSpec other) {
      if (other == null) {
        return;
      }
      if (other.objectConditions_ != null) {
        if (objectConditions_ == null) {
          ObjectConditions = new global::Google.Cloud.StorageTransfer.V1.ObjectConditions();
        }
        ObjectConditions.MergeFrom(other.ObjectConditions);
      }
      if (other.transferOptions_ != null) {
        if (transferOptions_ == null) {
          TransferOptions = new global::Google.Cloud.StorageTransfer.V1.TransferOptions();
        }
        TransferOptions.MergeFrom(other.TransferOptions);
      }
      switch (other.DataSinkCase) {
        case DataSinkOneofCase.GcsDataSink:
          if (GcsDataSink == null) {
            GcsDataSink = new global::Google.Cloud.StorageTransfer.V1.GcsData();
          }
          GcsDataSink.MergeFrom(other.GcsDataSink);
          break;
      }

      switch (other.DataSourceCase) {
        case DataSourceOneofCase.GcsDataSource:
          if (GcsDataSource == null) {
            GcsDataSource = new global::Google.Cloud.StorageTransfer.V1.GcsData();
          }
          GcsDataSource.MergeFrom(other.GcsDataSource);
          break;
        case DataSourceOneofCase.AwsS3DataSource:
          if (AwsS3DataSource == null) {
            AwsS3DataSource = new global::Google.Cloud.StorageTransfer.V1.AwsS3Data();
          }
          AwsS3DataSource.MergeFrom(other.AwsS3DataSource);
          break;
        case DataSourceOneofCase.HttpDataSource:
          if (HttpDataSource == null) {
            HttpDataSource = new global::Google.Cloud.StorageTransfer.V1.HttpData();
          }
          HttpDataSource.MergeFrom(other.HttpDataSource);
          break;
        case DataSourceOneofCase.AzureBlobStorageDataSource:
          if (AzureBlobStorageDataSource == null) {
            AzureBlobStorageDataSource = new global::Google.Cloud.StorageTransfer.V1.AzureBlobStorageData();
          }
          AzureBlobStorageDataSource.MergeFrom(other.AzureBlobStorageDataSource);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.StorageTransfer.V1.GcsData subBuilder = new global::Google.Cloud.StorageTransfer.V1.GcsData();
            if (dataSourceCase_ == DataSourceOneofCase.GcsDataSource) {
              subBuilder.MergeFrom(GcsDataSource);
            }
            input.ReadMessage(subBuilder);
            GcsDataSource = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.StorageTransfer.V1.AwsS3Data subBuilder = new global::Google.Cloud.StorageTransfer.V1.AwsS3Data();
            if (dataSourceCase_ == DataSourceOneofCase.AwsS3DataSource) {
              subBuilder.MergeFrom(AwsS3DataSource);
            }
            input.ReadMessage(subBuilder);
            AwsS3DataSource = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.StorageTransfer.V1.HttpData subBuilder = new global::Google.Cloud.StorageTransfer.V1.HttpData();
            if (dataSourceCase_ == DataSourceOneofCase.HttpDataSource) {
              subBuilder.MergeFrom(HttpDataSource);
            }
            input.ReadMessage(subBuilder);
            HttpDataSource = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.StorageTransfer.V1.GcsData subBuilder = new global::Google.Cloud.StorageTransfer.V1.GcsData();
            if (dataSinkCase_ == DataSinkOneofCase.GcsDataSink) {
              subBuilder.MergeFrom(GcsDataSink);
            }
            input.ReadMessage(subBuilder);
            GcsDataSink = subBuilder;
            break;
          }
          case 42: {
            if (objectConditions_ == null) {
              ObjectConditions = new global::Google.Cloud.StorageTransfer.V1.ObjectConditions();
            }
            input.ReadMessage(ObjectConditions);
            break;
          }
          case 50: {
            if (transferOptions_ == null) {
              TransferOptions = new global::Google.Cloud.StorageTransfer.V1.TransferOptions();
            }
            input.ReadMessage(TransferOptions);
            break;
          }
          case 66: {
            global::Google.Cloud.StorageTransfer.V1.AzureBlobStorageData subBuilder = new global::Google.Cloud.StorageTransfer.V1.AzureBlobStorageData();
            if (dataSourceCase_ == DataSourceOneofCase.AzureBlobStorageDataSource) {
              subBuilder.MergeFrom(AzureBlobStorageDataSource);
            }
            input.ReadMessage(subBuilder);
            AzureBlobStorageDataSource = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.StorageTransfer.V1.GcsData subBuilder = new global::Google.Cloud.StorageTransfer.V1.GcsData();
            if (dataSourceCase_ == DataSourceOneofCase.GcsDataSource) {
              subBuilder.MergeFrom(GcsDataSource);
            }
            input.ReadMessage(subBuilder);
            GcsDataSource = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.StorageTransfer.V1.AwsS3Data subBuilder = new global::Google.Cloud.StorageTransfer.V1.AwsS3Data();
            if (dataSourceCase_ == DataSourceOneofCase.AwsS3DataSource) {
              subBuilder.MergeFrom(AwsS3DataSource);
            }
            input.ReadMessage(subBuilder);
            AwsS3DataSource = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.StorageTransfer.V1.HttpData subBuilder = new global::Google.Cloud.StorageTransfer.V1.HttpData();
            if (dataSourceCase_ == DataSourceOneofCase.HttpDataSource) {
              subBuilder.MergeFrom(HttpDataSource);
            }
            input.ReadMessage(subBuilder);
            HttpDataSource = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.StorageTransfer.V1.GcsData subBuilder = new global::Google.Cloud.StorageTransfer.V1.GcsData();
            if (dataSinkCase_ == DataSinkOneofCase.GcsDataSink) {
              subBuilder.MergeFrom(GcsDataSink);
            }
            input.ReadMessage(subBuilder);
            GcsDataSink = subBuilder;
            break;
          }
          case 42: {
            if (objectConditions_ == null) {
              ObjectConditions = new global::Google.Cloud.StorageTransfer.V1.ObjectConditions();
            }
            input.ReadMessage(ObjectConditions);
            break;
          }
          case 50: {
            if (transferOptions_ == null) {
              TransferOptions = new global::Google.Cloud.StorageTransfer.V1.TransferOptions();
            }
            input.ReadMessage(TransferOptions);
            break;
          }
          case 66: {
            global::Google.Cloud.StorageTransfer.V1.AzureBlobStorageData subBuilder = new global::Google.Cloud.StorageTransfer.V1.AzureBlobStorageData();
            if (dataSourceCase_ == DataSourceOneofCase.AzureBlobStorageDataSource) {
              subBuilder.MergeFrom(AzureBlobStorageDataSource);
            }
            input.ReadMessage(subBuilder);
            AzureBlobStorageDataSource = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Transfers can be scheduled to recur or to run just once.
  /// </summary>
  public sealed partial class Schedule : pb::IMessage<Schedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schedule> _parser = new pb::MessageParser<Schedule>(() => new Schedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Schedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule(Schedule other) : this() {
      scheduleStartDate_ = other.scheduleStartDate_ != null ? other.scheduleStartDate_.Clone() : null;
      scheduleEndDate_ = other.scheduleEndDate_ != null ? other.scheduleEndDate_.Clone() : null;
      startTimeOfDay_ = other.startTimeOfDay_ != null ? other.startTimeOfDay_.Clone() : null;
      endTimeOfDay_ = other.endTimeOfDay_ != null ? other.endTimeOfDay_.Clone() : null;
      repeatInterval_ = other.repeatInterval_ != null ? other.repeatInterval_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule Clone() {
      return new Schedule(this);
    }

    /// <summary>Field number for the "schedule_start_date" field.</summary>
    public const int ScheduleStartDateFieldNumber = 1;
    private global::Google.Type.Date scheduleStartDate_;
    /// <summary>
    /// Required. The start date of a transfer. Date boundaries are determined
    /// relative to UTC time. If `schedule_start_date` and
    /// [start_time_of_day][google.storagetransfer.v1.Schedule.start_time_of_day]
    /// are in the past relative to the job's creation time, the transfer starts
    /// the day after you schedule the transfer request.
    ///
    /// **Note:** When starting jobs at or near midnight UTC it is possible that
    /// a job will start later than expected. For example, if you send an outbound
    /// request on June 1 one millisecond prior to midnight UTC and the Storage
    /// Transfer Service server receives the request on June 2, then it will create
    /// a TransferJob with `schedule_start_date` set to June 2 and a
    /// `start_time_of_day` set to midnight UTC. The first scheduled
    /// [TransferOperation][google.storagetransfer.v1.TransferOperation] will take
    /// place on June 3 at midnight UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date ScheduleStartDate {
      get { return scheduleStartDate_; }
      set {
        scheduleStartDate_ = value;
      }
    }

    /// <summary>Field number for the "schedule_end_date" field.</summary>
    public const int ScheduleEndDateFieldNumber = 2;
    private global::Google.Type.Date scheduleEndDate_;
    /// <summary>
    /// The last day a transfer runs. Date boundaries are determined relative to
    /// UTC time. A job will run once per 24 hours within the following guidelines:
    ///
    /// *   If `schedule_end_date` and
    /// [schedule_start_date][google.storagetransfer.v1.Schedule.schedule_start_date]
    /// are the same and in
    ///     the future relative to UTC, the transfer is executed only one time.
    /// *   If `schedule_end_date` is later than `schedule_start_date`  and
    ///     `schedule_end_date` is in the future relative to UTC, the job will
    ///     run each day at
    ///     [start_time_of_day][google.storagetransfer.v1.Schedule.start_time_of_day]
    ///     through `schedule_end_date`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date ScheduleEndDate {
      get { return scheduleEndDate_; }
      set {
        scheduleEndDate_ = value;
      }
    }

    /// <summary>Field number for the "start_time_of_day" field.</summary>
    public const int StartTimeOfDayFieldNumber = 3;
    private global::Google.Type.TimeOfDay startTimeOfDay_;
    /// <summary>
    /// The time in UTC that a transfer job is scheduled to run. Transfers may
    /// start later than this time.
    ///
    /// If `start_time_of_day` is not specified:
    ///
    /// *   One-time transfers run immediately.
    /// *   Recurring transfers run immediately, and each day at midnight UTC,
    ///     through
    ///     [schedule_end_date][google.storagetransfer.v1.Schedule.schedule_end_date].
    ///
    /// If `start_time_of_day` is specified:
    ///
    /// *   One-time transfers run at the specified time.
    /// *   Recurring transfers run at the specified time each day, through
    ///     `schedule_end_date`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.TimeOfDay StartTimeOfDay {
      get { return startTimeOfDay_; }
      set {
        startTimeOfDay_ = value;
      }
    }

    /// <summary>Field number for the "end_time_of_day" field.</summary>
    public const int EndTimeOfDayFieldNumber = 4;
    private global::Google.Type.TimeOfDay endTimeOfDay_;
    /// <summary>
    /// The time in UTC that no further transfer operations are scheduled. Combined
    /// with
    /// [schedule_end_date][google.storagetransfer.v1.Schedule.schedule_end_date],
    /// `end_time_of_day` specifies the end date and time for starting new transfer
    /// operations. This field must be greater than or equal to the timestamp
    /// corresponding to the combintation of
    /// [schedule_start_date][google.storagetransfer.v1.Schedule.schedule_start_date]
    /// and
    /// [start_time_of_day][google.storagetransfer.v1.Schedule.start_time_of_day],
    /// and is subject to the following:
    ///
    /// *   If `end_time_of_day` is not set and `schedule_end_date` is set, then
    ///     a default value of `23:59:59` is used for `end_time_of_day`.
    ///
    /// *   If `end_time_of_day` is set and `schedule_end_date` is not set, then
    ///     [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT] is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.TimeOfDay EndTimeOfDay {
      get { return endTimeOfDay_; }
      set {
        endTimeOfDay_ = value;
      }
    }

    /// <summary>Field number for the "repeat_interval" field.</summary>
    public const int RepeatIntervalFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Duration repeatInterval_;
    /// <summary>
    /// Interval between the start of each scheduled TransferOperation. If
    /// unspecified, the default value is 24 hours. This value may not be less than
    /// 1 hour.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration RepeatInterval {
      get { return repeatInterval_; }
      set {
        repeatInterval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Schedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Schedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ScheduleStartDate, other.ScheduleStartDate)) return false;
      if (!object.Equals(ScheduleEndDate, other.ScheduleEndDate)) return false;
      if (!object.Equals(StartTimeOfDay, other.StartTimeOfDay)) return false;
      if (!object.Equals(EndTimeOfDay, other.EndTimeOfDay)) return false;
      if (!object.Equals(RepeatInterval, other.RepeatInterval)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (scheduleStartDate_ != null) hash ^= ScheduleStartDate.GetHashCode();
      if (scheduleEndDate_ != null) hash ^= ScheduleEndDate.GetHashCode();
      if (startTimeOfDay_ != null) hash ^= StartTimeOfDay.GetHashCode();
      if (endTimeOfDay_ != null) hash ^= EndTimeOfDay.GetHashCode();
      if (repeatInterval_ != null) hash ^= RepeatInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (scheduleStartDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ScheduleStartDate);
      }
      if (scheduleEndDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScheduleEndDate);
      }
      if (startTimeOfDay_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartTimeOfDay);
      }
      if (endTimeOfDay_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EndTimeOfDay);
      }
      if (repeatInterval_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RepeatInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (scheduleStartDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ScheduleStartDate);
      }
      if (scheduleEndDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScheduleEndDate);
      }
      if (startTimeOfDay_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartTimeOfDay);
      }
      if (endTimeOfDay_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EndTimeOfDay);
      }
      if (repeatInterval_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RepeatInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (scheduleStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleStartDate);
      }
      if (scheduleEndDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleEndDate);
      }
      if (startTimeOfDay_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimeOfDay);
      }
      if (endTimeOfDay_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTimeOfDay);
      }
      if (repeatInterval_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RepeatInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Schedule other) {
      if (other == null) {
        return;
      }
      if (other.scheduleStartDate_ != null) {
        if (scheduleStartDate_ == null) {
          ScheduleStartDate = new global::Google.Type.Date();
        }
        ScheduleStartDate.MergeFrom(other.ScheduleStartDate);
      }
      if (other.scheduleEndDate_ != null) {
        if (scheduleEndDate_ == null) {
          ScheduleEndDate = new global::Google.Type.Date();
        }
        ScheduleEndDate.MergeFrom(other.ScheduleEndDate);
      }
      if (other.startTimeOfDay_ != null) {
        if (startTimeOfDay_ == null) {
          StartTimeOfDay = new global::Google.Type.TimeOfDay();
        }
        StartTimeOfDay.MergeFrom(other.StartTimeOfDay);
      }
      if (other.endTimeOfDay_ != null) {
        if (endTimeOfDay_ == null) {
          EndTimeOfDay = new global::Google.Type.TimeOfDay();
        }
        EndTimeOfDay.MergeFrom(other.EndTimeOfDay);
      }
      if (other.repeatInterval_ != null) {
        if (repeatInterval_ == null) {
          RepeatInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        RepeatInterval.MergeFrom(other.RepeatInterval);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (scheduleStartDate_ == null) {
              ScheduleStartDate = new global::Google.Type.Date();
            }
            input.ReadMessage(ScheduleStartDate);
            break;
          }
          case 18: {
            if (scheduleEndDate_ == null) {
              ScheduleEndDate = new global::Google.Type.Date();
            }
            input.ReadMessage(ScheduleEndDate);
            break;
          }
          case 26: {
            if (startTimeOfDay_ == null) {
              StartTimeOfDay = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(StartTimeOfDay);
            break;
          }
          case 34: {
            if (endTimeOfDay_ == null) {
              EndTimeOfDay = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(EndTimeOfDay);
            break;
          }
          case 42: {
            if (repeatInterval_ == null) {
              RepeatInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(RepeatInterval);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (scheduleStartDate_ == null) {
              ScheduleStartDate = new global::Google.Type.Date();
            }
            input.ReadMessage(ScheduleStartDate);
            break;
          }
          case 18: {
            if (scheduleEndDate_ == null) {
              ScheduleEndDate = new global::Google.Type.Date();
            }
            input.ReadMessage(ScheduleEndDate);
            break;
          }
          case 26: {
            if (startTimeOfDay_ == null) {
              StartTimeOfDay = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(StartTimeOfDay);
            break;
          }
          case 34: {
            if (endTimeOfDay_ == null) {
              EndTimeOfDay = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(EndTimeOfDay);
            break;
          }
          case 42: {
            if (repeatInterval_ == null) {
              RepeatInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(RepeatInterval);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This resource represents the configuration of a transfer job that runs
  /// periodically.
  /// </summary>
  public sealed partial class TransferJob : pb::IMessage<TransferJob>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferJob> _parser = new pb::MessageParser<TransferJob>(() => new TransferJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferJob(TransferJob other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      projectId_ = other.projectId_;
      transferSpec_ = other.transferSpec_ != null ? other.transferSpec_.Clone() : null;
      notificationConfig_ = other.notificationConfig_ != null ? other.notificationConfig_.Clone() : null;
      schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
      status_ = other.status_;
      creationTime_ = other.creationTime_ != null ? other.creationTime_.Clone() : null;
      lastModificationTime_ = other.lastModificationTime_ != null ? other.lastModificationTime_.Clone() : null;
      deletionTime_ = other.deletionTime_ != null ? other.deletionTime_.Clone() : null;
      latestOperationName_ = other.latestOperationName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferJob Clone() {
      return new TransferJob(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// A unique name (within the transfer project) assigned when the job is
    /// created.  If this field is empty in a CreateTransferJobRequest, Storage
    /// Transfer Service will assign a unique name. Otherwise, the specified name
    /// is used as the unique name for this job.
    ///
    /// If the specified name is in use by a job, the creation request fails with
    /// an [ALREADY_EXISTS][google.rpc.Code.ALREADY_EXISTS] error.
    ///
    /// This name must start with `"transferJobs/"` prefix and end with a letter or
    /// a number, and should be no more than 128 characters. This name must not
    /// start with 'transferJobs/OPI'. 'transferJobs/OPI' is a reserved prefix.
    /// Example:
    /// `"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$"`
    ///
    /// Invalid job names will fail with an
    /// [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT] error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// A description provided by the user for the job. Its max length is 1024
    /// bytes when Unicode-encoded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 3;
    private string projectId_ = "";
    /// <summary>
    /// The ID of the Google Cloud Platform Project that owns the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transfer_spec" field.</summary>
    public const int TransferSpecFieldNumber = 4;
    private global::Google.Cloud.StorageTransfer.V1.TransferSpec transferSpec_;
    /// <summary>
    /// Transfer specification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.TransferSpec TransferSpec {
      get { return transferSpec_; }
      set {
        transferSpec_ = value;
      }
    }

    /// <summary>Field number for the "notification_config" field.</summary>
    public const int NotificationConfigFieldNumber = 11;
    private global::Google.Cloud.StorageTransfer.V1.NotificationConfig notificationConfig_;
    /// <summary>
    /// Notification configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.NotificationConfig NotificationConfig {
      get { return notificationConfig_; }
      set {
        notificationConfig_ = value;
      }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 5;
    private global::Google.Cloud.StorageTransfer.V1.Schedule schedule_;
    /// <summary>
    /// Specifies schedule for the transfer job.
    /// This is an optional field. When the field is not set, the job will never
    /// execute a transfer, unless you invoke RunTransferJob or update the job to
    /// have a non-empty schedule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.Schedule Schedule {
      get { return schedule_; }
      set {
        schedule_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private global::Google.Cloud.StorageTransfer.V1.TransferJob.Types.Status status_ = global::Google.Cloud.StorageTransfer.V1.TransferJob.Types.Status.Unspecified;
    /// <summary>
    /// Status of the job. This value MUST be specified for
    /// `CreateTransferJobRequests`.
    ///
    /// **Note:** The effect of the new job status takes place during a subsequent
    /// job run. For example, if you change the job status from
    /// [ENABLED][google.storagetransfer.v1.TransferJob.Status.ENABLED] to
    /// [DISABLED][google.storagetransfer.v1.TransferJob.Status.DISABLED], and an
    /// operation spawned by the transfer is running, the status change would not
    /// affect the current operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.TransferJob.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "creation_time" field.</summary>
    public const int CreationTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp creationTime_;
    /// <summary>
    /// Output only. The time that the transfer job was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreationTime {
      get { return creationTime_; }
      set {
        creationTime_ = value;
      }
    }

    /// <summary>Field number for the "last_modification_time" field.</summary>
    public const int LastModificationTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastModificationTime_;
    /// <summary>
    /// Output only. The time that the transfer job was last modified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastModificationTime {
      get { return lastModificationTime_; }
      set {
        lastModificationTime_ = value;
      }
    }

    /// <summary>Field number for the "deletion_time" field.</summary>
    public const int DeletionTimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp deletionTime_;
    /// <summary>
    /// Output only. The time that the transfer job was deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DeletionTime {
      get { return deletionTime_; }
      set {
        deletionTime_ = value;
      }
    }

    /// <summary>Field number for the "latest_operation_name" field.</summary>
    public const int LatestOperationNameFieldNumber = 12;
    private string latestOperationName_ = "";
    /// <summary>
    /// The name of the most recently started TransferOperation of this JobConfig.
    /// Present if a TransferOperation has been created for this JobConfig.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LatestOperationName {
      get { return latestOperationName_; }
      set {
        latestOperationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (ProjectId != other.ProjectId) return false;
      if (!object.Equals(TransferSpec, other.TransferSpec)) return false;
      if (!object.Equals(NotificationConfig, other.NotificationConfig)) return false;
      if (!object.Equals(Schedule, other.Schedule)) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(CreationTime, other.CreationTime)) return false;
      if (!object.Equals(LastModificationTime, other.LastModificationTime)) return false;
      if (!object.Equals(DeletionTime, other.DeletionTime)) return false;
      if (LatestOperationName != other.LatestOperationName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (transferSpec_ != null) hash ^= TransferSpec.GetHashCode();
      if (notificationConfig_ != null) hash ^= NotificationConfig.GetHashCode();
      if (schedule_ != null) hash ^= Schedule.GetHashCode();
      if (Status != global::Google.Cloud.StorageTransfer.V1.TransferJob.Types.Status.Unspecified) hash ^= Status.GetHashCode();
      if (creationTime_ != null) hash ^= CreationTime.GetHashCode();
      if (lastModificationTime_ != null) hash ^= LastModificationTime.GetHashCode();
      if (deletionTime_ != null) hash ^= DeletionTime.GetHashCode();
      if (LatestOperationName.Length != 0) hash ^= LatestOperationName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProjectId);
      }
      if (transferSpec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TransferSpec);
      }
      if (schedule_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Schedule);
      }
      if (Status != global::Google.Cloud.StorageTransfer.V1.TransferJob.Types.Status.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (creationTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreationTime);
      }
      if (lastModificationTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LastModificationTime);
      }
      if (deletionTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DeletionTime);
      }
      if (notificationConfig_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(NotificationConfig);
      }
      if (LatestOperationName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LatestOperationName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProjectId);
      }
      if (transferSpec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TransferSpec);
      }
      if (schedule_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Schedule);
      }
      if (Status != global::Google.Cloud.StorageTransfer.V1.TransferJob.Types.Status.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (creationTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreationTime);
      }
      if (lastModificationTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LastModificationTime);
      }
      if (deletionTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DeletionTime);
      }
      if (notificationConfig_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(NotificationConfig);
      }
      if (LatestOperationName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LatestOperationName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (transferSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransferSpec);
      }
      if (notificationConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationConfig);
      }
      if (schedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (Status != global::Google.Cloud.StorageTransfer.V1.TransferJob.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (creationTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreationTime);
      }
      if (lastModificationTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastModificationTime);
      }
      if (deletionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeletionTime);
      }
      if (LatestOperationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LatestOperationName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferJob other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.transferSpec_ != null) {
        if (transferSpec_ == null) {
          TransferSpec = new global::Google.Cloud.StorageTransfer.V1.TransferSpec();
        }
        TransferSpec.MergeFrom(other.TransferSpec);
      }
      if (other.notificationConfig_ != null) {
        if (notificationConfig_ == null) {
          NotificationConfig = new global::Google.Cloud.StorageTransfer.V1.NotificationConfig();
        }
        NotificationConfig.MergeFrom(other.NotificationConfig);
      }
      if (other.schedule_ != null) {
        if (schedule_ == null) {
          Schedule = new global::Google.Cloud.StorageTransfer.V1.Schedule();
        }
        Schedule.MergeFrom(other.Schedule);
      }
      if (other.Status != global::Google.Cloud.StorageTransfer.V1.TransferJob.Types.Status.Unspecified) {
        Status = other.Status;
      }
      if (other.creationTime_ != null) {
        if (creationTime_ == null) {
          CreationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreationTime.MergeFrom(other.CreationTime);
      }
      if (other.lastModificationTime_ != null) {
        if (lastModificationTime_ == null) {
          LastModificationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastModificationTime.MergeFrom(other.LastModificationTime);
      }
      if (other.deletionTime_ != null) {
        if (deletionTime_ == null) {
          DeletionTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DeletionTime.MergeFrom(other.DeletionTime);
      }
      if (other.LatestOperationName.Length != 0) {
        LatestOperationName = other.LatestOperationName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            ProjectId = input.ReadString();
            break;
          }
          case 34: {
            if (transferSpec_ == null) {
              TransferSpec = new global::Google.Cloud.StorageTransfer.V1.TransferSpec();
            }
            input.ReadMessage(TransferSpec);
            break;
          }
          case 42: {
            if (schedule_ == null) {
              Schedule = new global::Google.Cloud.StorageTransfer.V1.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
          case 48: {
            Status = (global::Google.Cloud.StorageTransfer.V1.TransferJob.Types.Status) input.ReadEnum();
            break;
          }
          case 58: {
            if (creationTime_ == null) {
              CreationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreationTime);
            break;
          }
          case 66: {
            if (lastModificationTime_ == null) {
              LastModificationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastModificationTime);
            break;
          }
          case 74: {
            if (deletionTime_ == null) {
              DeletionTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeletionTime);
            break;
          }
          case 90: {
            if (notificationConfig_ == null) {
              NotificationConfig = new global::Google.Cloud.StorageTransfer.V1.NotificationConfig();
            }
            input.ReadMessage(NotificationConfig);
            break;
          }
          case 98: {
            LatestOperationName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            ProjectId = input.ReadString();
            break;
          }
          case 34: {
            if (transferSpec_ == null) {
              TransferSpec = new global::Google.Cloud.StorageTransfer.V1.TransferSpec();
            }
            input.ReadMessage(TransferSpec);
            break;
          }
          case 42: {
            if (schedule_ == null) {
              Schedule = new global::Google.Cloud.StorageTransfer.V1.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
          case 48: {
            Status = (global::Google.Cloud.StorageTransfer.V1.TransferJob.Types.Status) input.ReadEnum();
            break;
          }
          case 58: {
            if (creationTime_ == null) {
              CreationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreationTime);
            break;
          }
          case 66: {
            if (lastModificationTime_ == null) {
              LastModificationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastModificationTime);
            break;
          }
          case 74: {
            if (deletionTime_ == null) {
              DeletionTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeletionTime);
            break;
          }
          case 90: {
            if (notificationConfig_ == null) {
              NotificationConfig = new global::Google.Cloud.StorageTransfer.V1.NotificationConfig();
            }
            input.ReadMessage(NotificationConfig);
            break;
          }
          case 98: {
            LatestOperationName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TransferJob message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The status of the transfer job.
      /// </summary>
      public enum Status {
        /// <summary>
        /// Zero is an illegal value.
        /// </summary>
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// New transfers will be performed based on the schedule.
        /// </summary>
        [pbr::OriginalName("ENABLED")] Enabled = 1,
        /// <summary>
        /// New transfers will not be scheduled.
        /// </summary>
        [pbr::OriginalName("DISABLED")] Disabled = 2,
        /// <summary>
        /// This is a soft delete state. After a transfer job is set to this
        /// state, the job and all the transfer executions are subject to
        /// garbage collection. Transfer jobs become eligible for garbage collection
        /// 30 days after their status is set to `DELETED`.
        /// </summary>
        [pbr::OriginalName("DELETED")] Deleted = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// An entry describing an error that has occurred.
  /// </summary>
  public sealed partial class ErrorLogEntry : pb::IMessage<ErrorLogEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ErrorLogEntry> _parser = new pb::MessageParser<ErrorLogEntry>(() => new ErrorLogEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorLogEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorLogEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorLogEntry(ErrorLogEntry other) : this() {
      url_ = other.url_;
      errorDetails_ = other.errorDetails_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorLogEntry Clone() {
      return new ErrorLogEntry(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    /// <summary>
    /// Required. A URL that refers to the target (a data source, a data sink,
    /// or an object) with which the error is associated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error_details" field.</summary>
    public const int ErrorDetailsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_errorDetails_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> errorDetails_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of messages that carry the error details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ErrorDetails {
      get { return errorDetails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorLogEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorLogEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if(!errorDetails_.Equals(other.errorDetails_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      hash ^= errorDetails_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      errorDetails_.WriteTo(output, _repeated_errorDetails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      errorDetails_.WriteTo(ref output, _repeated_errorDetails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      size += errorDetails_.CalculateSize(_repeated_errorDetails_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorLogEntry other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      errorDetails_.Add(other.errorDetails_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            errorDetails_.AddEntriesFrom(input, _repeated_errorDetails_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            errorDetails_.AddEntriesFrom(ref input, _repeated_errorDetails_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A summary of errors by error code, plus a count and sample error log
  /// entries.
  /// </summary>
  public sealed partial class ErrorSummary : pb::IMessage<ErrorSummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ErrorSummary> _parser = new pb::MessageParser<ErrorSummary>(() => new ErrorSummary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorSummary(ErrorSummary other) : this() {
      errorCode_ = other.errorCode_;
      errorCount_ = other.errorCount_;
      errorLogEntries_ = other.errorLogEntries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorSummary Clone() {
      return new ErrorSummary(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::Google.Rpc.Code errorCode_ = global::Google.Rpc.Code.Ok;
    /// <summary>
    /// Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Code ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "error_count" field.</summary>
    public const int ErrorCountFieldNumber = 2;
    private long errorCount_;
    /// <summary>
    /// Required. Count of this type of error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ErrorCount {
      get { return errorCount_; }
      set {
        errorCount_ = value;
      }
    }

    /// <summary>Field number for the "error_log_entries" field.</summary>
    public const int ErrorLogEntriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.StorageTransfer.V1.ErrorLogEntry> _repeated_errorLogEntries_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.StorageTransfer.V1.ErrorLogEntry.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.StorageTransfer.V1.ErrorLogEntry> errorLogEntries_ = new pbc::RepeatedField<global::Google.Cloud.StorageTransfer.V1.ErrorLogEntry>();
    /// <summary>
    /// Error samples.
    ///
    /// At most 5 error log entries will be recorded for a given
    /// error code for a single transfer operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.StorageTransfer.V1.ErrorLogEntry> ErrorLogEntries {
      get { return errorLogEntries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorCount != other.ErrorCount) return false;
      if(!errorLogEntries_.Equals(other.errorLogEntries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != global::Google.Rpc.Code.Ok) hash ^= ErrorCode.GetHashCode();
      if (ErrorCount != 0L) hash ^= ErrorCount.GetHashCode();
      hash ^= errorLogEntries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ErrorCode != global::Google.Rpc.Code.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (ErrorCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ErrorCount);
      }
      errorLogEntries_.WriteTo(output, _repeated_errorLogEntries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ErrorCode != global::Google.Rpc.Code.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (ErrorCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ErrorCount);
      }
      errorLogEntries_.WriteTo(ref output, _repeated_errorLogEntries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != global::Google.Rpc.Code.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (ErrorCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ErrorCount);
      }
      size += errorLogEntries_.CalculateSize(_repeated_errorLogEntries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorSummary other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != global::Google.Rpc.Code.Ok) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorCount != 0L) {
        ErrorCount = other.ErrorCount;
      }
      errorLogEntries_.Add(other.errorLogEntries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = (global::Google.Rpc.Code) input.ReadEnum();
            break;
          }
          case 16: {
            ErrorCount = input.ReadInt64();
            break;
          }
          case 26: {
            errorLogEntries_.AddEntriesFrom(input, _repeated_errorLogEntries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ErrorCode = (global::Google.Rpc.Code) input.ReadEnum();
            break;
          }
          case 16: {
            ErrorCount = input.ReadInt64();
            break;
          }
          case 26: {
            errorLogEntries_.AddEntriesFrom(ref input, _repeated_errorLogEntries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A collection of counters that report the progress of a transfer operation.
  /// </summary>
  public sealed partial class TransferCounters : pb::IMessage<TransferCounters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferCounters> _parser = new pb::MessageParser<TransferCounters>(() => new TransferCounters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferCounters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferCounters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferCounters(TransferCounters other) : this() {
      objectsFoundFromSource_ = other.objectsFoundFromSource_;
      bytesFoundFromSource_ = other.bytesFoundFromSource_;
      objectsFoundOnlyFromSink_ = other.objectsFoundOnlyFromSink_;
      bytesFoundOnlyFromSink_ = other.bytesFoundOnlyFromSink_;
      objectsFromSourceSkippedBySync_ = other.objectsFromSourceSkippedBySync_;
      bytesFromSourceSkippedBySync_ = other.bytesFromSourceSkippedBySync_;
      objectsCopiedToSink_ = other.objectsCopiedToSink_;
      bytesCopiedToSink_ = other.bytesCopiedToSink_;
      objectsDeletedFromSource_ = other.objectsDeletedFromSource_;
      bytesDeletedFromSource_ = other.bytesDeletedFromSource_;
      objectsDeletedFromSink_ = other.objectsDeletedFromSink_;
      bytesDeletedFromSink_ = other.bytesDeletedFromSink_;
      objectsFromSourceFailed_ = other.objectsFromSourceFailed_;
      bytesFromSourceFailed_ = other.bytesFromSourceFailed_;
      objectsFailedToDeleteFromSink_ = other.objectsFailedToDeleteFromSink_;
      bytesFailedToDeleteFromSink_ = other.bytesFailedToDeleteFromSink_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferCounters Clone() {
      return new TransferCounters(this);
    }

    /// <summary>Field number for the "objects_found_from_source" field.</summary>
    public const int ObjectsFoundFromSourceFieldNumber = 1;
    private long objectsFoundFromSource_;
    /// <summary>
    /// Objects found in the data source that are scheduled to be transferred,
    /// excluding any that are filtered based on object conditions or skipped due
    /// to sync.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObjectsFoundFromSource {
      get { return objectsFoundFromSource_; }
      set {
        objectsFoundFromSource_ = value;
      }
    }

    /// <summary>Field number for the "bytes_found_from_source" field.</summary>
    public const int BytesFoundFromSourceFieldNumber = 2;
    private long bytesFoundFromSource_;
    /// <summary>
    /// Bytes found in the data source that are scheduled to be transferred,
    /// excluding any that are filtered based on object conditions or skipped due
    /// to sync.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BytesFoundFromSource {
      get { return bytesFoundFromSource_; }
      set {
        bytesFoundFromSource_ = value;
      }
    }

    /// <summary>Field number for the "objects_found_only_from_sink" field.</summary>
    public const int ObjectsFoundOnlyFromSinkFieldNumber = 3;
    private long objectsFoundOnlyFromSink_;
    /// <summary>
    /// Objects found only in the data sink that are scheduled to be deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObjectsFoundOnlyFromSink {
      get { return objectsFoundOnlyFromSink_; }
      set {
        objectsFoundOnlyFromSink_ = value;
      }
    }

    /// <summary>Field number for the "bytes_found_only_from_sink" field.</summary>
    public const int BytesFoundOnlyFromSinkFieldNumber = 4;
    private long bytesFoundOnlyFromSink_;
    /// <summary>
    /// Bytes found only in the data sink that are scheduled to be deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BytesFoundOnlyFromSink {
      get { return bytesFoundOnlyFromSink_; }
      set {
        bytesFoundOnlyFromSink_ = value;
      }
    }

    /// <summary>Field number for the "objects_from_source_skipped_by_sync" field.</summary>
    public const int ObjectsFromSourceSkippedBySyncFieldNumber = 5;
    private long objectsFromSourceSkippedBySync_;
    /// <summary>
    /// Objects in the data source that are not transferred because they already
    /// exist in the data sink.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObjectsFromSourceSkippedBySync {
      get { return objectsFromSourceSkippedBySync_; }
      set {
        objectsFromSourceSkippedBySync_ = value;
      }
    }

    /// <summary>Field number for the "bytes_from_source_skipped_by_sync" field.</summary>
    public const int BytesFromSourceSkippedBySyncFieldNumber = 6;
    private long bytesFromSourceSkippedBySync_;
    /// <summary>
    /// Bytes in the data source that are not transferred because they already
    /// exist in the data sink.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BytesFromSourceSkippedBySync {
      get { return bytesFromSourceSkippedBySync_; }
      set {
        bytesFromSourceSkippedBySync_ = value;
      }
    }

    /// <summary>Field number for the "objects_copied_to_sink" field.</summary>
    public const int ObjectsCopiedToSinkFieldNumber = 7;
    private long objectsCopiedToSink_;
    /// <summary>
    /// Objects that are copied to the data sink.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObjectsCopiedToSink {
      get { return objectsCopiedToSink_; }
      set {
        objectsCopiedToSink_ = value;
      }
    }

    /// <summary>Field number for the "bytes_copied_to_sink" field.</summary>
    public const int BytesCopiedToSinkFieldNumber = 8;
    private long bytesCopiedToSink_;
    /// <summary>
    /// Bytes that are copied to the data sink.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BytesCopiedToSink {
      get { return bytesCopiedToSink_; }
      set {
        bytesCopiedToSink_ = value;
      }
    }

    /// <summary>Field number for the "objects_deleted_from_source" field.</summary>
    public const int ObjectsDeletedFromSourceFieldNumber = 9;
    private long objectsDeletedFromSource_;
    /// <summary>
    /// Objects that are deleted from the data source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObjectsDeletedFromSource {
      get { return objectsDeletedFromSource_; }
      set {
        objectsDeletedFromSource_ = value;
      }
    }

    /// <summary>Field number for the "bytes_deleted_from_source" field.</summary>
    public const int BytesDeletedFromSourceFieldNumber = 10;
    private long bytesDeletedFromSource_;
    /// <summary>
    /// Bytes that are deleted from the data source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BytesDeletedFromSource {
      get { return bytesDeletedFromSource_; }
      set {
        bytesDeletedFromSource_ = value;
      }
    }

    /// <summary>Field number for the "objects_deleted_from_sink" field.</summary>
    public const int ObjectsDeletedFromSinkFieldNumber = 11;
    private long objectsDeletedFromSink_;
    /// <summary>
    /// Objects that are deleted from the data sink.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObjectsDeletedFromSink {
      get { return objectsDeletedFromSink_; }
      set {
        objectsDeletedFromSink_ = value;
      }
    }

    /// <summary>Field number for the "bytes_deleted_from_sink" field.</summary>
    public const int BytesDeletedFromSinkFieldNumber = 12;
    private long bytesDeletedFromSink_;
    /// <summary>
    /// Bytes that are deleted from the data sink.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BytesDeletedFromSink {
      get { return bytesDeletedFromSink_; }
      set {
        bytesDeletedFromSink_ = value;
      }
    }

    /// <summary>Field number for the "objects_from_source_failed" field.</summary>
    public const int ObjectsFromSourceFailedFieldNumber = 13;
    private long objectsFromSourceFailed_;
    /// <summary>
    /// Objects in the data source that failed to be transferred or that failed
    /// to be deleted after being transferred.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObjectsFromSourceFailed {
      get { return objectsFromSourceFailed_; }
      set {
        objectsFromSourceFailed_ = value;
      }
    }

    /// <summary>Field number for the "bytes_from_source_failed" field.</summary>
    public const int BytesFromSourceFailedFieldNumber = 14;
    private long bytesFromSourceFailed_;
    /// <summary>
    /// Bytes in the data source that failed to be transferred or that failed to
    /// be deleted after being transferred.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BytesFromSourceFailed {
      get { return bytesFromSourceFailed_; }
      set {
        bytesFromSourceFailed_ = value;
      }
    }

    /// <summary>Field number for the "objects_failed_to_delete_from_sink" field.</summary>
    public const int ObjectsFailedToDeleteFromSinkFieldNumber = 15;
    private long objectsFailedToDeleteFromSink_;
    /// <summary>
    /// Objects that failed to be deleted from the data sink.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ObjectsFailedToDeleteFromSink {
      get { return objectsFailedToDeleteFromSink_; }
      set {
        objectsFailedToDeleteFromSink_ = value;
      }
    }

    /// <summary>Field number for the "bytes_failed_to_delete_from_sink" field.</summary>
    public const int BytesFailedToDeleteFromSinkFieldNumber = 16;
    private long bytesFailedToDeleteFromSink_;
    /// <summary>
    /// Bytes that failed to be deleted from the data sink.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BytesFailedToDeleteFromSink {
      get { return bytesFailedToDeleteFromSink_; }
      set {
        bytesFailedToDeleteFromSink_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferCounters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferCounters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectsFoundFromSource != other.ObjectsFoundFromSource) return false;
      if (BytesFoundFromSource != other.BytesFoundFromSource) return false;
      if (ObjectsFoundOnlyFromSink != other.ObjectsFoundOnlyFromSink) return false;
      if (BytesFoundOnlyFromSink != other.BytesFoundOnlyFromSink) return false;
      if (ObjectsFromSourceSkippedBySync != other.ObjectsFromSourceSkippedBySync) return false;
      if (BytesFromSourceSkippedBySync != other.BytesFromSourceSkippedBySync) return false;
      if (ObjectsCopiedToSink != other.ObjectsCopiedToSink) return false;
      if (BytesCopiedToSink != other.BytesCopiedToSink) return false;
      if (ObjectsDeletedFromSource != other.ObjectsDeletedFromSource) return false;
      if (BytesDeletedFromSource != other.BytesDeletedFromSource) return false;
      if (ObjectsDeletedFromSink != other.ObjectsDeletedFromSink) return false;
      if (BytesDeletedFromSink != other.BytesDeletedFromSink) return false;
      if (ObjectsFromSourceFailed != other.ObjectsFromSourceFailed) return false;
      if (BytesFromSourceFailed != other.BytesFromSourceFailed) return false;
      if (ObjectsFailedToDeleteFromSink != other.ObjectsFailedToDeleteFromSink) return false;
      if (BytesFailedToDeleteFromSink != other.BytesFailedToDeleteFromSink) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectsFoundFromSource != 0L) hash ^= ObjectsFoundFromSource.GetHashCode();
      if (BytesFoundFromSource != 0L) hash ^= BytesFoundFromSource.GetHashCode();
      if (ObjectsFoundOnlyFromSink != 0L) hash ^= ObjectsFoundOnlyFromSink.GetHashCode();
      if (BytesFoundOnlyFromSink != 0L) hash ^= BytesFoundOnlyFromSink.GetHashCode();
      if (ObjectsFromSourceSkippedBySync != 0L) hash ^= ObjectsFromSourceSkippedBySync.GetHashCode();
      if (BytesFromSourceSkippedBySync != 0L) hash ^= BytesFromSourceSkippedBySync.GetHashCode();
      if (ObjectsCopiedToSink != 0L) hash ^= ObjectsCopiedToSink.GetHashCode();
      if (BytesCopiedToSink != 0L) hash ^= BytesCopiedToSink.GetHashCode();
      if (ObjectsDeletedFromSource != 0L) hash ^= ObjectsDeletedFromSource.GetHashCode();
      if (BytesDeletedFromSource != 0L) hash ^= BytesDeletedFromSource.GetHashCode();
      if (ObjectsDeletedFromSink != 0L) hash ^= ObjectsDeletedFromSink.GetHashCode();
      if (BytesDeletedFromSink != 0L) hash ^= BytesDeletedFromSink.GetHashCode();
      if (ObjectsFromSourceFailed != 0L) hash ^= ObjectsFromSourceFailed.GetHashCode();
      if (BytesFromSourceFailed != 0L) hash ^= BytesFromSourceFailed.GetHashCode();
      if (ObjectsFailedToDeleteFromSink != 0L) hash ^= ObjectsFailedToDeleteFromSink.GetHashCode();
      if (BytesFailedToDeleteFromSink != 0L) hash ^= BytesFailedToDeleteFromSink.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ObjectsFoundFromSource != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ObjectsFoundFromSource);
      }
      if (BytesFoundFromSource != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BytesFoundFromSource);
      }
      if (ObjectsFoundOnlyFromSink != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ObjectsFoundOnlyFromSink);
      }
      if (BytesFoundOnlyFromSink != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BytesFoundOnlyFromSink);
      }
      if (ObjectsFromSourceSkippedBySync != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ObjectsFromSourceSkippedBySync);
      }
      if (BytesFromSourceSkippedBySync != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BytesFromSourceSkippedBySync);
      }
      if (ObjectsCopiedToSink != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ObjectsCopiedToSink);
      }
      if (BytesCopiedToSink != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(BytesCopiedToSink);
      }
      if (ObjectsDeletedFromSource != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ObjectsDeletedFromSource);
      }
      if (BytesDeletedFromSource != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(BytesDeletedFromSource);
      }
      if (ObjectsDeletedFromSink != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(ObjectsDeletedFromSink);
      }
      if (BytesDeletedFromSink != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(BytesDeletedFromSink);
      }
      if (ObjectsFromSourceFailed != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(ObjectsFromSourceFailed);
      }
      if (BytesFromSourceFailed != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(BytesFromSourceFailed);
      }
      if (ObjectsFailedToDeleteFromSink != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(ObjectsFailedToDeleteFromSink);
      }
      if (BytesFailedToDeleteFromSink != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(BytesFailedToDeleteFromSink);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ObjectsFoundFromSource != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ObjectsFoundFromSource);
      }
      if (BytesFoundFromSource != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BytesFoundFromSource);
      }
      if (ObjectsFoundOnlyFromSink != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ObjectsFoundOnlyFromSink);
      }
      if (BytesFoundOnlyFromSink != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BytesFoundOnlyFromSink);
      }
      if (ObjectsFromSourceSkippedBySync != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ObjectsFromSourceSkippedBySync);
      }
      if (BytesFromSourceSkippedBySync != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BytesFromSourceSkippedBySync);
      }
      if (ObjectsCopiedToSink != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ObjectsCopiedToSink);
      }
      if (BytesCopiedToSink != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(BytesCopiedToSink);
      }
      if (ObjectsDeletedFromSource != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ObjectsDeletedFromSource);
      }
      if (BytesDeletedFromSource != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(BytesDeletedFromSource);
      }
      if (ObjectsDeletedFromSink != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(ObjectsDeletedFromSink);
      }
      if (BytesDeletedFromSink != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(BytesDeletedFromSink);
      }
      if (ObjectsFromSourceFailed != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(ObjectsFromSourceFailed);
      }
      if (BytesFromSourceFailed != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(BytesFromSourceFailed);
      }
      if (ObjectsFailedToDeleteFromSink != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(ObjectsFailedToDeleteFromSink);
      }
      if (BytesFailedToDeleteFromSink != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(BytesFailedToDeleteFromSink);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectsFoundFromSource != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObjectsFoundFromSource);
      }
      if (BytesFoundFromSource != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesFoundFromSource);
      }
      if (ObjectsFoundOnlyFromSink != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObjectsFoundOnlyFromSink);
      }
      if (BytesFoundOnlyFromSink != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesFoundOnlyFromSink);
      }
      if (ObjectsFromSourceSkippedBySync != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObjectsFromSourceSkippedBySync);
      }
      if (BytesFromSourceSkippedBySync != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesFromSourceSkippedBySync);
      }
      if (ObjectsCopiedToSink != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObjectsCopiedToSink);
      }
      if (BytesCopiedToSink != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesCopiedToSink);
      }
      if (ObjectsDeletedFromSource != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObjectsDeletedFromSource);
      }
      if (BytesDeletedFromSource != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesDeletedFromSource);
      }
      if (ObjectsDeletedFromSink != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObjectsDeletedFromSink);
      }
      if (BytesDeletedFromSink != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesDeletedFromSink);
      }
      if (ObjectsFromSourceFailed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObjectsFromSourceFailed);
      }
      if (BytesFromSourceFailed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesFromSourceFailed);
      }
      if (ObjectsFailedToDeleteFromSink != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ObjectsFailedToDeleteFromSink);
      }
      if (BytesFailedToDeleteFromSink != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(BytesFailedToDeleteFromSink);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferCounters other) {
      if (other == null) {
        return;
      }
      if (other.ObjectsFoundFromSource != 0L) {
        ObjectsFoundFromSource = other.ObjectsFoundFromSource;
      }
      if (other.BytesFoundFromSource != 0L) {
        BytesFoundFromSource = other.BytesFoundFromSource;
      }
      if (other.ObjectsFoundOnlyFromSink != 0L) {
        ObjectsFoundOnlyFromSink = other.ObjectsFoundOnlyFromSink;
      }
      if (other.BytesFoundOnlyFromSink != 0L) {
        BytesFoundOnlyFromSink = other.BytesFoundOnlyFromSink;
      }
      if (other.ObjectsFromSourceSkippedBySync != 0L) {
        ObjectsFromSourceSkippedBySync = other.ObjectsFromSourceSkippedBySync;
      }
      if (other.BytesFromSourceSkippedBySync != 0L) {
        BytesFromSourceSkippedBySync = other.BytesFromSourceSkippedBySync;
      }
      if (other.ObjectsCopiedToSink != 0L) {
        ObjectsCopiedToSink = other.ObjectsCopiedToSink;
      }
      if (other.BytesCopiedToSink != 0L) {
        BytesCopiedToSink = other.BytesCopiedToSink;
      }
      if (other.ObjectsDeletedFromSource != 0L) {
        ObjectsDeletedFromSource = other.ObjectsDeletedFromSource;
      }
      if (other.BytesDeletedFromSource != 0L) {
        BytesDeletedFromSource = other.BytesDeletedFromSource;
      }
      if (other.ObjectsDeletedFromSink != 0L) {
        ObjectsDeletedFromSink = other.ObjectsDeletedFromSink;
      }
      if (other.BytesDeletedFromSink != 0L) {
        BytesDeletedFromSink = other.BytesDeletedFromSink;
      }
      if (other.ObjectsFromSourceFailed != 0L) {
        ObjectsFromSourceFailed = other.ObjectsFromSourceFailed;
      }
      if (other.BytesFromSourceFailed != 0L) {
        BytesFromSourceFailed = other.BytesFromSourceFailed;
      }
      if (other.ObjectsFailedToDeleteFromSink != 0L) {
        ObjectsFailedToDeleteFromSink = other.ObjectsFailedToDeleteFromSink;
      }
      if (other.BytesFailedToDeleteFromSink != 0L) {
        BytesFailedToDeleteFromSink = other.BytesFailedToDeleteFromSink;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectsFoundFromSource = input.ReadInt64();
            break;
          }
          case 16: {
            BytesFoundFromSource = input.ReadInt64();
            break;
          }
          case 24: {
            ObjectsFoundOnlyFromSink = input.ReadInt64();
            break;
          }
          case 32: {
            BytesFoundOnlyFromSink = input.ReadInt64();
            break;
          }
          case 40: {
            ObjectsFromSourceSkippedBySync = input.ReadInt64();
            break;
          }
          case 48: {
            BytesFromSourceSkippedBySync = input.ReadInt64();
            break;
          }
          case 56: {
            ObjectsCopiedToSink = input.ReadInt64();
            break;
          }
          case 64: {
            BytesCopiedToSink = input.ReadInt64();
            break;
          }
          case 72: {
            ObjectsDeletedFromSource = input.ReadInt64();
            break;
          }
          case 80: {
            BytesDeletedFromSource = input.ReadInt64();
            break;
          }
          case 88: {
            ObjectsDeletedFromSink = input.ReadInt64();
            break;
          }
          case 96: {
            BytesDeletedFromSink = input.ReadInt64();
            break;
          }
          case 104: {
            ObjectsFromSourceFailed = input.ReadInt64();
            break;
          }
          case 112: {
            BytesFromSourceFailed = input.ReadInt64();
            break;
          }
          case 120: {
            ObjectsFailedToDeleteFromSink = input.ReadInt64();
            break;
          }
          case 128: {
            BytesFailedToDeleteFromSink = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ObjectsFoundFromSource = input.ReadInt64();
            break;
          }
          case 16: {
            BytesFoundFromSource = input.ReadInt64();
            break;
          }
          case 24: {
            ObjectsFoundOnlyFromSink = input.ReadInt64();
            break;
          }
          case 32: {
            BytesFoundOnlyFromSink = input.ReadInt64();
            break;
          }
          case 40: {
            ObjectsFromSourceSkippedBySync = input.ReadInt64();
            break;
          }
          case 48: {
            BytesFromSourceSkippedBySync = input.ReadInt64();
            break;
          }
          case 56: {
            ObjectsCopiedToSink = input.ReadInt64();
            break;
          }
          case 64: {
            BytesCopiedToSink = input.ReadInt64();
            break;
          }
          case 72: {
            ObjectsDeletedFromSource = input.ReadInt64();
            break;
          }
          case 80: {
            BytesDeletedFromSource = input.ReadInt64();
            break;
          }
          case 88: {
            ObjectsDeletedFromSink = input.ReadInt64();
            break;
          }
          case 96: {
            BytesDeletedFromSink = input.ReadInt64();
            break;
          }
          case 104: {
            ObjectsFromSourceFailed = input.ReadInt64();
            break;
          }
          case 112: {
            BytesFromSourceFailed = input.ReadInt64();
            break;
          }
          case 120: {
            ObjectsFailedToDeleteFromSink = input.ReadInt64();
            break;
          }
          case 128: {
            BytesFailedToDeleteFromSink = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specification to configure notifications published to Cloud Pub/Sub.
  /// Notifications will be published to the customer-provided topic using the
  /// following `PubsubMessage.attributes`:
  ///
  /// * `"eventType"`: one of the
  /// [EventType][google.storagetransfer.v1.NotificationConfig.EventType] values
  /// * `"payloadFormat"`: one of the
  /// [PayloadFormat][google.storagetransfer.v1.NotificationConfig.PayloadFormat]
  /// values
  /// * `"projectId"`: the
  /// [project_id][google.storagetransfer.v1.TransferOperation.project_id] of the
  /// `TransferOperation`
  /// * `"transferJobName"`: the
  /// [transfer_job_name][google.storagetransfer.v1.TransferOperation.transfer_job_name]
  /// of the `TransferOperation`
  /// * `"transferOperationName"`: the
  /// [name][google.storagetransfer.v1.TransferOperation.name] of the
  /// `TransferOperation`
  ///
  /// The `PubsubMessage.data` will contain a
  /// [TransferOperation][google.storagetransfer.v1.TransferOperation] resource
  /// formatted according to the specified `PayloadFormat`.
  /// </summary>
  public sealed partial class NotificationConfig : pb::IMessage<NotificationConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotificationConfig> _parser = new pb::MessageParser<NotificationConfig>(() => new NotificationConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationConfig(NotificationConfig other) : this() {
      pubsubTopic_ = other.pubsubTopic_;
      eventTypes_ = other.eventTypes_.Clone();
      payloadFormat_ = other.payloadFormat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationConfig Clone() {
      return new NotificationConfig(this);
    }

    /// <summary>Field number for the "pubsub_topic" field.</summary>
    public const int PubsubTopicFieldNumber = 1;
    private string pubsubTopic_ = "";
    /// <summary>
    /// Required. The `Topic.name` of the Cloud Pub/Sub topic to which to publish
    /// notifications. Must be of the format: `projects/{project}/topics/{topic}`.
    /// Not matching this format will result in an
    /// [INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT] error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PubsubTopic {
      get { return pubsubTopic_; }
      set {
        pubsubTopic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_types" field.</summary>
    public const int EventTypesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.EventType> _repeated_eventTypes_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.EventType) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.EventType> eventTypes_ = new pbc::RepeatedField<global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.EventType>();
    /// <summary>
    /// Event types for which a notification is desired. If empty, send
    /// notifications for all event types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.EventType> EventTypes {
      get { return eventTypes_; }
    }

    /// <summary>Field number for the "payload_format" field.</summary>
    public const int PayloadFormatFieldNumber = 3;
    private global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.PayloadFormat payloadFormat_ = global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.PayloadFormat.Unspecified;
    /// <summary>
    /// Required. The desired format of the notification message payloads.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.PayloadFormat PayloadFormat {
      get { return payloadFormat_; }
      set {
        payloadFormat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PubsubTopic != other.PubsubTopic) return false;
      if(!eventTypes_.Equals(other.eventTypes_)) return false;
      if (PayloadFormat != other.PayloadFormat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PubsubTopic.Length != 0) hash ^= PubsubTopic.GetHashCode();
      hash ^= eventTypes_.GetHashCode();
      if (PayloadFormat != global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.PayloadFormat.Unspecified) hash ^= PayloadFormat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PubsubTopic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PubsubTopic);
      }
      eventTypes_.WriteTo(output, _repeated_eventTypes_codec);
      if (PayloadFormat != global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.PayloadFormat.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PayloadFormat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PubsubTopic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PubsubTopic);
      }
      eventTypes_.WriteTo(ref output, _repeated_eventTypes_codec);
      if (PayloadFormat != global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.PayloadFormat.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PayloadFormat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PubsubTopic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PubsubTopic);
      }
      size += eventTypes_.CalculateSize(_repeated_eventTypes_codec);
      if (PayloadFormat != global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.PayloadFormat.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PayloadFormat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationConfig other) {
      if (other == null) {
        return;
      }
      if (other.PubsubTopic.Length != 0) {
        PubsubTopic = other.PubsubTopic;
      }
      eventTypes_.Add(other.eventTypes_);
      if (other.PayloadFormat != global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.PayloadFormat.Unspecified) {
        PayloadFormat = other.PayloadFormat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PubsubTopic = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            eventTypes_.AddEntriesFrom(input, _repeated_eventTypes_codec);
            break;
          }
          case 24: {
            PayloadFormat = (global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.PayloadFormat) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PubsubTopic = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            eventTypes_.AddEntriesFrom(ref input, _repeated_eventTypes_codec);
            break;
          }
          case 24: {
            PayloadFormat = (global::Google.Cloud.StorageTransfer.V1.NotificationConfig.Types.PayloadFormat) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the NotificationConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Enum for specifying event types for which notifications are to be
      /// published.
      ///
      /// Additional event types may be added in the future. Clients should either
      /// safely ignore unrecognized event types or explicitly specify which event
      /// types they are prepared to accept.
      /// </summary>
      public enum EventType {
        /// <summary>
        /// Illegal value, to avoid allowing a default.
        /// </summary>
        [pbr::OriginalName("EVENT_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// `TransferOperation` completed with status
        /// [SUCCESS][google.storagetransfer.v1.TransferOperation.Status.SUCCESS].
        /// </summary>
        [pbr::OriginalName("TRANSFER_OPERATION_SUCCESS")] TransferOperationSuccess = 1,
        /// <summary>
        /// `TransferOperation` completed with status
        /// [FAILED][google.storagetransfer.v1.TransferOperation.Status.FAILED].
        /// </summary>
        [pbr::OriginalName("TRANSFER_OPERATION_FAILED")] TransferOperationFailed = 2,
        /// <summary>
        /// `TransferOperation` completed with status
        /// [ABORTED][google.storagetransfer.v1.TransferOperation.Status.ABORTED].
        /// </summary>
        [pbr::OriginalName("TRANSFER_OPERATION_ABORTED")] TransferOperationAborted = 3,
      }

      /// <summary>
      /// Enum for specifying the format of a notification message's payload.
      /// </summary>
      public enum PayloadFormat {
        /// <summary>
        /// Illegal value, to avoid allowing a default.
        /// </summary>
        [pbr::OriginalName("PAYLOAD_FORMAT_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// No payload is included with the notification.
        /// </summary>
        [pbr::OriginalName("NONE")] None = 1,
        /// <summary>
        /// `TransferOperation` is [formatted as a JSON
        /// response](https://developers.google.com/protocol-buffers/docs/proto3#json),
        /// in application/json.
        /// </summary>
        [pbr::OriginalName("JSON")] Json = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// A description of the execution of a transfer.
  /// </summary>
  public sealed partial class TransferOperation : pb::IMessage<TransferOperation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferOperation> _parser = new pb::MessageParser<TransferOperation>(() => new TransferOperation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferOperation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferTypesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferOperation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferOperation(TransferOperation other) : this() {
      name_ = other.name_;
      projectId_ = other.projectId_;
      transferSpec_ = other.transferSpec_ != null ? other.transferSpec_.Clone() : null;
      notificationConfig_ = other.notificationConfig_ != null ? other.notificationConfig_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      status_ = other.status_;
      counters_ = other.counters_ != null ? other.counters_.Clone() : null;
      errorBreakdowns_ = other.errorBreakdowns_.Clone();
      transferJobName_ = other.transferJobName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferOperation Clone() {
      return new TransferOperation(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// A globally unique ID assigned by the system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 2;
    private string projectId_ = "";
    /// <summary>
    /// The ID of the Google Cloud Platform Project that owns the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transfer_spec" field.</summary>
    public const int TransferSpecFieldNumber = 3;
    private global::Google.Cloud.StorageTransfer.V1.TransferSpec transferSpec_;
    /// <summary>
    /// Transfer specification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.TransferSpec TransferSpec {
      get { return transferSpec_; }
      set {
        transferSpec_ = value;
      }
    }

    /// <summary>Field number for the "notification_config" field.</summary>
    public const int NotificationConfigFieldNumber = 10;
    private global::Google.Cloud.StorageTransfer.V1.NotificationConfig notificationConfig_;
    /// <summary>
    /// Notification configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.NotificationConfig NotificationConfig {
      get { return notificationConfig_; }
      set {
        notificationConfig_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Start time of this transfer execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// End time of this transfer execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private global::Google.Cloud.StorageTransfer.V1.TransferOperation.Types.Status status_ = global::Google.Cloud.StorageTransfer.V1.TransferOperation.Types.Status.Unspecified;
    /// <summary>
    /// Status of the transfer operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.TransferOperation.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "counters" field.</summary>
    public const int CountersFieldNumber = 7;
    private global::Google.Cloud.StorageTransfer.V1.TransferCounters counters_;
    /// <summary>
    /// Information about the progress of the transfer operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.StorageTransfer.V1.TransferCounters Counters {
      get { return counters_; }
      set {
        counters_ = value;
      }
    }

    /// <summary>Field number for the "error_breakdowns" field.</summary>
    public const int ErrorBreakdownsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Cloud.StorageTransfer.V1.ErrorSummary> _repeated_errorBreakdowns_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Cloud.StorageTransfer.V1.ErrorSummary.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.StorageTransfer.V1.ErrorSummary> errorBreakdowns_ = new pbc::RepeatedField<global::Google.Cloud.StorageTransfer.V1.ErrorSummary>();
    /// <summary>
    /// Summarizes errors encountered with sample error log entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.StorageTransfer.V1.ErrorSummary> ErrorBreakdowns {
      get { return errorBreakdowns_; }
    }

    /// <summary>Field number for the "transfer_job_name" field.</summary>
    public const int TransferJobNameFieldNumber = 9;
    private string transferJobName_ = "";
    /// <summary>
    /// The name of the transfer job that triggers this transfer operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransferJobName {
      get { return transferJobName_; }
      set {
        transferJobName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferOperation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferOperation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ProjectId != other.ProjectId) return false;
      if (!object.Equals(TransferSpec, other.TransferSpec)) return false;
      if (!object.Equals(NotificationConfig, other.NotificationConfig)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(Counters, other.Counters)) return false;
      if(!errorBreakdowns_.Equals(other.errorBreakdowns_)) return false;
      if (TransferJobName != other.TransferJobName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (transferSpec_ != null) hash ^= TransferSpec.GetHashCode();
      if (notificationConfig_ != null) hash ^= NotificationConfig.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Status != global::Google.Cloud.StorageTransfer.V1.TransferOperation.Types.Status.Unspecified) hash ^= Status.GetHashCode();
      if (counters_ != null) hash ^= Counters.GetHashCode();
      hash ^= errorBreakdowns_.GetHashCode();
      if (TransferJobName.Length != 0) hash ^= TransferJobName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      if (transferSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TransferSpec);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (Status != global::Google.Cloud.StorageTransfer.V1.TransferOperation.Types.Status.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (counters_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Counters);
      }
      errorBreakdowns_.WriteTo(output, _repeated_errorBreakdowns_codec);
      if (TransferJobName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TransferJobName);
      }
      if (notificationConfig_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(NotificationConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      if (transferSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TransferSpec);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (Status != global::Google.Cloud.StorageTransfer.V1.TransferOperation.Types.Status.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (counters_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Counters);
      }
      errorBreakdowns_.WriteTo(ref output, _repeated_errorBreakdowns_codec);
      if (TransferJobName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TransferJobName);
      }
      if (notificationConfig_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(NotificationConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (transferSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransferSpec);
      }
      if (notificationConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationConfig);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Status != global::Google.Cloud.StorageTransfer.V1.TransferOperation.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (counters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Counters);
      }
      size += errorBreakdowns_.CalculateSize(_repeated_errorBreakdowns_codec);
      if (TransferJobName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransferJobName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferOperation other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.transferSpec_ != null) {
        if (transferSpec_ == null) {
          TransferSpec = new global::Google.Cloud.StorageTransfer.V1.TransferSpec();
        }
        TransferSpec.MergeFrom(other.TransferSpec);
      }
      if (other.notificationConfig_ != null) {
        if (notificationConfig_ == null) {
          NotificationConfig = new global::Google.Cloud.StorageTransfer.V1.NotificationConfig();
        }
        NotificationConfig.MergeFrom(other.NotificationConfig);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Status != global::Google.Cloud.StorageTransfer.V1.TransferOperation.Types.Status.Unspecified) {
        Status = other.Status;
      }
      if (other.counters_ != null) {
        if (counters_ == null) {
          Counters = new global::Google.Cloud.StorageTransfer.V1.TransferCounters();
        }
        Counters.MergeFrom(other.Counters);
      }
      errorBreakdowns_.Add(other.errorBreakdowns_);
      if (other.TransferJobName.Length != 0) {
        TransferJobName = other.TransferJobName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 26: {
            if (transferSpec_ == null) {
              TransferSpec = new global::Google.Cloud.StorageTransfer.V1.TransferSpec();
            }
            input.ReadMessage(TransferSpec);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 48: {
            Status = (global::Google.Cloud.StorageTransfer.V1.TransferOperation.Types.Status) input.ReadEnum();
            break;
          }
          case 58: {
            if (counters_ == null) {
              Counters = new global::Google.Cloud.StorageTransfer.V1.TransferCounters();
            }
            input.ReadMessage(Counters);
            break;
          }
          case 66: {
            errorBreakdowns_.AddEntriesFrom(input, _repeated_errorBreakdowns_codec);
            break;
          }
          case 74: {
            TransferJobName = input.ReadString();
            break;
          }
          case 82: {
            if (notificationConfig_ == null) {
              NotificationConfig = new global::Google.Cloud.StorageTransfer.V1.NotificationConfig();
            }
            input.ReadMessage(NotificationConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 26: {
            if (transferSpec_ == null) {
              TransferSpec = new global::Google.Cloud.StorageTransfer.V1.TransferSpec();
            }
            input.ReadMessage(TransferSpec);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 48: {
            Status = (global::Google.Cloud.StorageTransfer.V1.TransferOperation.Types.Status) input.ReadEnum();
            break;
          }
          case 58: {
            if (counters_ == null) {
              Counters = new global::Google.Cloud.StorageTransfer.V1.TransferCounters();
            }
            input.ReadMessage(Counters);
            break;
          }
          case 66: {
            errorBreakdowns_.AddEntriesFrom(ref input, _repeated_errorBreakdowns_codec);
            break;
          }
          case 74: {
            TransferJobName = input.ReadString();
            break;
          }
          case 82: {
            if (notificationConfig_ == null) {
              NotificationConfig = new global::Google.Cloud.StorageTransfer.V1.NotificationConfig();
            }
            input.ReadMessage(NotificationConfig);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TransferOperation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The status of a TransferOperation.
      /// </summary>
      public enum Status {
        /// <summary>
        /// Zero is an illegal value.
        /// </summary>
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// In progress.
        /// </summary>
        [pbr::OriginalName("IN_PROGRESS")] InProgress = 1,
        /// <summary>
        /// Paused.
        /// </summary>
        [pbr::OriginalName("PAUSED")] Paused = 2,
        /// <summary>
        /// Completed successfully.
        /// </summary>
        [pbr::OriginalName("SUCCESS")] Success = 3,
        /// <summary>
        /// Terminated due to an unrecoverable failure.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 4,
        /// <summary>
        /// Aborted by the user.
        /// </summary>
        [pbr::OriginalName("ABORTED")] Aborted = 5,
        /// <summary>
        /// Temporarily delayed by the system. No user action is required.
        /// </summary>
        [pbr::OriginalName("QUEUED")] Queued = 6,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
