// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/bigtable/v2/bigtable.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Bigtable.V2 {

  /// <summary>Holder for reflection information generated from google/bigtable/v2/bigtable.proto</summary>
  public static partial class BigtableReflection {

    #region Descriptor
    /// <summary>File descriptor for google/bigtable/v2/bigtable.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BigtableReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFnb29nbGUvYmlndGFibGUvdjIvYmlndGFibGUucHJvdG8SEmdvb2dsZS5i",
            "aWd0YWJsZS52MhocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxoXZ29v",
            "Z2xlL2FwaS9jbGllbnQucHJvdG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZp",
            "b3IucHJvdG8aGWdvb2dsZS9hcGkvcmVzb3VyY2UucHJvdG8aHWdvb2dsZS9i",
            "aWd0YWJsZS92Mi9kYXRhLnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBl",
            "cnMucHJvdG8aF2dvb2dsZS9ycGMvc3RhdHVzLnByb3RvItEBCg9SZWFkUm93",
            "c1JlcXVlc3QSOQoKdGFibGVfbmFtZRgBIAEoCUIl4EEC+kEfCh1iaWd0YWJs",
            "ZS5nb29nbGVhcGlzLmNvbS9UYWJsZRIWCg5hcHBfcHJvZmlsZV9pZBgFIAEo",
            "CRIoCgRyb3dzGAIgASgLMhouZ29vZ2xlLmJpZ3RhYmxlLnYyLlJvd1NldBIt",
            "CgZmaWx0ZXIYAyABKAsyHS5nb29nbGUuYmlndGFibGUudjIuUm93RmlsdGVy",
            "EhIKCnJvd3NfbGltaXQYBCABKAMi+AIKEFJlYWRSb3dzUmVzcG9uc2USPgoG",
            "Y2h1bmtzGAEgAygLMi4uZ29vZ2xlLmJpZ3RhYmxlLnYyLlJlYWRSb3dzUmVz",
            "cG9uc2UuQ2VsbENodW5rEhwKFGxhc3Rfc2Nhbm5lZF9yb3dfa2V5GAIgASgM",
            "GoUCCglDZWxsQ2h1bmsSDwoHcm93X2tleRgBIAEoDBIxCgtmYW1pbHlfbmFt",
            "ZRgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIuCglxdWFs",
            "aWZpZXIYAyABKAsyGy5nb29nbGUucHJvdG9idWYuQnl0ZXNWYWx1ZRIYChB0",
            "aW1lc3RhbXBfbWljcm9zGAQgASgDEg4KBmxhYmVscxgFIAMoCRINCgV2YWx1",
            "ZRgGIAEoDBISCgp2YWx1ZV9zaXplGAcgASgFEhMKCXJlc2V0X3JvdxgIIAEo",
            "CEgAEhQKCmNvbW1pdF9yb3cYCSABKAhIAEIMCgpyb3dfc3RhdHVzImkKFFNh",
            "bXBsZVJvd0tleXNSZXF1ZXN0EjkKCnRhYmxlX25hbWUYASABKAlCJeBBAvpB",
            "HwodYmlndGFibGUuZ29vZ2xlYXBpcy5jb20vVGFibGUSFgoOYXBwX3Byb2Zp",
            "bGVfaWQYAiABKAkiPgoVU2FtcGxlUm93S2V5c1Jlc3BvbnNlEg8KB3Jvd19r",
            "ZXkYASABKAwSFAoMb2Zmc2V0X2J5dGVzGAIgASgDIrEBChBNdXRhdGVSb3dS",
            "ZXF1ZXN0EjkKCnRhYmxlX25hbWUYASABKAlCJeBBAvpBHwodYmlndGFibGUu",
            "Z29vZ2xlYXBpcy5jb20vVGFibGUSFgoOYXBwX3Byb2ZpbGVfaWQYBCABKAkS",
            "FAoHcm93X2tleRgCIAEoDEID4EECEjQKCW11dGF0aW9ucxgDIAMoCzIcLmdv",
            "b2dsZS5iaWd0YWJsZS52Mi5NdXRhdGlvbkID4EECIhMKEU11dGF0ZVJvd1Jl",
            "c3BvbnNlIvkBChFNdXRhdGVSb3dzUmVxdWVzdBI5Cgp0YWJsZV9uYW1lGAEg",
            "ASgJQiXgQQL6QR8KHWJpZ3RhYmxlLmdvb2dsZWFwaXMuY29tL1RhYmxlEhYK",
            "DmFwcF9wcm9maWxlX2lkGAMgASgJEkEKB2VudHJpZXMYAiADKAsyKy5nb29n",
            "bGUuYmlndGFibGUudjIuTXV0YXRlUm93c1JlcXVlc3QuRW50cnlCA+BBAhpO",
            "CgVFbnRyeRIPCgdyb3dfa2V5GAEgASgMEjQKCW11dGF0aW9ucxgCIAMoCzIc",
            "Lmdvb2dsZS5iaWd0YWJsZS52Mi5NdXRhdGlvbkID4EECIo8BChJNdXRhdGVS",
            "b3dzUmVzcG9uc2USPQoHZW50cmllcxgBIAMoCzIsLmdvb2dsZS5iaWd0YWJs",
            "ZS52Mi5NdXRhdGVSb3dzUmVzcG9uc2UuRW50cnkaOgoFRW50cnkSDQoFaW5k",
            "ZXgYASABKAMSIgoGc3RhdHVzGAIgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMi",
            "qQIKGENoZWNrQW5kTXV0YXRlUm93UmVxdWVzdBI5Cgp0YWJsZV9uYW1lGAEg",
            "ASgJQiXgQQL6QR8KHWJpZ3RhYmxlLmdvb2dsZWFwaXMuY29tL1RhYmxlEhYK",
            "DmFwcF9wcm9maWxlX2lkGAcgASgJEhQKB3Jvd19rZXkYAiABKAxCA+BBAhI3",
            "ChBwcmVkaWNhdGVfZmlsdGVyGAYgASgLMh0uZ29vZ2xlLmJpZ3RhYmxlLnYy",
            "LlJvd0ZpbHRlchI0Cg50cnVlX211dGF0aW9ucxgEIAMoCzIcLmdvb2dsZS5i",
            "aWd0YWJsZS52Mi5NdXRhdGlvbhI1Cg9mYWxzZV9tdXRhdGlvbnMYBSADKAsy",
            "HC5nb29nbGUuYmlndGFibGUudjIuTXV0YXRpb24iNgoZQ2hlY2tBbmRNdXRh",
            "dGVSb3dSZXNwb25zZRIZChFwcmVkaWNhdGVfbWF0Y2hlZBgBIAEoCCLBAQoZ",
            "UmVhZE1vZGlmeVdyaXRlUm93UmVxdWVzdBI5Cgp0YWJsZV9uYW1lGAEgASgJ",
            "QiXgQQL6QR8KHWJpZ3RhYmxlLmdvb2dsZWFwaXMuY29tL1RhYmxlEhYKDmFw",
            "cF9wcm9maWxlX2lkGAQgASgJEhQKB3Jvd19rZXkYAiABKAxCA+BBAhI7CgVy",
            "dWxlcxgDIAMoCzInLmdvb2dsZS5iaWd0YWJsZS52Mi5SZWFkTW9kaWZ5V3Jp",
            "dGVSdWxlQgPgQQIiQgoaUmVhZE1vZGlmeVdyaXRlUm93UmVzcG9uc2USJAoD",
            "cm93GAEgASgLMhcuZ29vZ2xlLmJpZ3RhYmxlLnYyLlJvdzLEDgoIQmlndGFi",
            "bGUSxgEKCFJlYWRSb3dzEiMuZ29vZ2xlLmJpZ3RhYmxlLnYyLlJlYWRSb3dz",
            "UmVxdWVzdBokLmdvb2dsZS5iaWd0YWJsZS52Mi5SZWFkUm93c1Jlc3BvbnNl",
            "Im2C0+STAj4iOS92Mi97dGFibGVfbmFtZT1wcm9qZWN0cy8qL2luc3RhbmNl",
            "cy8qL3RhYmxlcy8qfTpyZWFkUm93czoBKtpBCnRhYmxlX25hbWXaQRl0YWJs",
            "ZV9uYW1lLGFwcF9wcm9maWxlX2lkMAES1wEKDVNhbXBsZVJvd0tleXMSKC5n",
            "b29nbGUuYmlndGFibGUudjIuU2FtcGxlUm93S2V5c1JlcXVlc3QaKS5nb29n",
            "bGUuYmlndGFibGUudjIuU2FtcGxlUm93S2V5c1Jlc3BvbnNlIm+C0+STAkAS",
            "Pi92Mi97dGFibGVfbmFtZT1wcm9qZWN0cy8qL2luc3RhbmNlcy8qL3RhYmxl",
            "cy8qfTpzYW1wbGVSb3dLZXlz2kEKdGFibGVfbmFtZdpBGXRhYmxlX25hbWUs",
            "YXBwX3Byb2ZpbGVfaWQwARLtAQoJTXV0YXRlUm93EiQuZ29vZ2xlLmJpZ3Rh",
            "YmxlLnYyLk11dGF0ZVJvd1JlcXVlc3QaJS5nb29nbGUuYmlndGFibGUudjIu",
            "TXV0YXRlUm93UmVzcG9uc2UikgGC0+STAj8iOi92Mi97dGFibGVfbmFtZT1w",
            "cm9qZWN0cy8qL2luc3RhbmNlcy8qL3RhYmxlcy8qfTptdXRhdGVSb3c6ASra",
            "QRx0YWJsZV9uYW1lLHJvd19rZXksbXV0YXRpb25z2kErdGFibGVfbmFtZSxy",
            "b3dfa2V5LG11dGF0aW9ucyxhcHBfcHJvZmlsZV9pZBLeAQoKTXV0YXRlUm93",
            "cxIlLmdvb2dsZS5iaWd0YWJsZS52Mi5NdXRhdGVSb3dzUmVxdWVzdBomLmdv",
            "b2dsZS5iaWd0YWJsZS52Mi5NdXRhdGVSb3dzUmVzcG9uc2Uif4LT5JMCQCI7",
            "L3YyL3t0YWJsZV9uYW1lPXByb2plY3RzLyovaW5zdGFuY2VzLyovdGFibGVz",
            "Lyp9Om11dGF0ZVJvd3M6ASraQRJ0YWJsZV9uYW1lLGVudHJpZXPaQSF0YWJs",
            "ZV9uYW1lLGVudHJpZXMsYXBwX3Byb2ZpbGVfaWQwARLZAgoRQ2hlY2tBbmRN",
            "dXRhdGVSb3cSLC5nb29nbGUuYmlndGFibGUudjIuQ2hlY2tBbmRNdXRhdGVS",
            "b3dSZXF1ZXN0Gi0uZ29vZ2xlLmJpZ3RhYmxlLnYyLkNoZWNrQW5kTXV0YXRl",
            "Um93UmVzcG9uc2Ui5gGC0+STAkciQi92Mi97dGFibGVfbmFtZT1wcm9qZWN0",
            "cy8qL2luc3RhbmNlcy8qL3RhYmxlcy8qfTpjaGVja0FuZE11dGF0ZVJvdzoB",
            "KtpBQnRhYmxlX25hbWUscm93X2tleSxwcmVkaWNhdGVfZmlsdGVyLHRydWVf",
            "bXV0YXRpb25zLGZhbHNlX211dGF0aW9uc9pBUXRhYmxlX25hbWUscm93X2tl",
            "eSxwcmVkaWNhdGVfZmlsdGVyLHRydWVfbXV0YXRpb25zLGZhbHNlX211dGF0",
            "aW9ucyxhcHBfcHJvZmlsZV9pZBKJAgoSUmVhZE1vZGlmeVdyaXRlUm93Ei0u",
            "Z29vZ2xlLmJpZ3RhYmxlLnYyLlJlYWRNb2RpZnlXcml0ZVJvd1JlcXVlc3Qa",
            "Li5nb29nbGUuYmlndGFibGUudjIuUmVhZE1vZGlmeVdyaXRlUm93UmVzcG9u",
            "c2UikwGC0+STAkgiQy92Mi97dGFibGVfbmFtZT1wcm9qZWN0cy8qL2luc3Rh",
            "bmNlcy8qL3RhYmxlcy8qfTpyZWFkTW9kaWZ5V3JpdGVSb3c6ASraQRh0YWJs",
            "ZV9uYW1lLHJvd19rZXkscnVsZXPaQSd0YWJsZV9uYW1lLHJvd19rZXkscnVs",
            "ZXMsYXBwX3Byb2ZpbGVfaWQa2wLKQRdiaWd0YWJsZS5nb29nbGVhcGlzLmNv",
            "bdJBvQJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2JpZ3RhYmxl",
            "LmRhdGEsaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9iaWd0YWJs",
            "ZS5kYXRhLnJlYWRvbmx5LGh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1",
            "dGgvY2xvdWQtYmlndGFibGUuZGF0YSxodHRwczovL3d3dy5nb29nbGVhcGlz",
            "LmNvbS9hdXRoL2Nsb3VkLWJpZ3RhYmxlLmRhdGEucmVhZG9ubHksaHR0cHM6",
            "Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxodHRw",
            "czovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3JtLnJl",
            "YWQtb25seUKTAgoWY29tLmdvb2dsZS5iaWd0YWJsZS52MkINQmlndGFibGVQ",
            "cm90b1ABWjpnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlz",
            "L2JpZ3RhYmxlL3YyO2JpZ3RhYmxlqgIYR29vZ2xlLkNsb3VkLkJpZ3RhYmxl",
            "LlYyygIYR29vZ2xlXENsb3VkXEJpZ3RhYmxlXFYy6gIbR29vZ2xlOjpDbG91",
            "ZDo6QmlndGFibGU6OlYy6kFXCh1iaWd0YWJsZS5nb29nbGVhcGlzLmNvbS9U",
            "YWJsZRI2cHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97aW5zdGFuY2V9",
            "L3RhYmxlcy97dGFibGV9YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Bigtable.V2.DataReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.ReadRowsRequest), global::Google.Cloud.Bigtable.V2.ReadRowsRequest.Parser, new[]{ "TableName", "AppProfileId", "Rows", "Filter", "RowsLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.ReadRowsResponse), global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Parser, new[]{ "Chunks", "LastScannedRowKey" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Types.CellChunk), global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Types.CellChunk.Parser, new[]{ "RowKey", "FamilyName", "Qualifier", "TimestampMicros", "Labels", "Value", "ValueSize", "ResetRow", "CommitRow" }, new[]{ "RowStatus" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.SampleRowKeysRequest), global::Google.Cloud.Bigtable.V2.SampleRowKeysRequest.Parser, new[]{ "TableName", "AppProfileId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.SampleRowKeysResponse), global::Google.Cloud.Bigtable.V2.SampleRowKeysResponse.Parser, new[]{ "RowKey", "OffsetBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.MutateRowRequest), global::Google.Cloud.Bigtable.V2.MutateRowRequest.Parser, new[]{ "TableName", "AppProfileId", "RowKey", "Mutations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.MutateRowResponse), global::Google.Cloud.Bigtable.V2.MutateRowResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.MutateRowsRequest), global::Google.Cloud.Bigtable.V2.MutateRowsRequest.Parser, new[]{ "TableName", "AppProfileId", "Entries" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.MutateRowsRequest.Types.Entry), global::Google.Cloud.Bigtable.V2.MutateRowsRequest.Types.Entry.Parser, new[]{ "RowKey", "Mutations" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.MutateRowsResponse), global::Google.Cloud.Bigtable.V2.MutateRowsResponse.Parser, new[]{ "Entries" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.MutateRowsResponse.Types.Entry), global::Google.Cloud.Bigtable.V2.MutateRowsResponse.Types.Entry.Parser, new[]{ "Index", "Status" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.CheckAndMutateRowRequest), global::Google.Cloud.Bigtable.V2.CheckAndMutateRowRequest.Parser, new[]{ "TableName", "AppProfileId", "RowKey", "PredicateFilter", "TrueMutations", "FalseMutations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.CheckAndMutateRowResponse), global::Google.Cloud.Bigtable.V2.CheckAndMutateRowResponse.Parser, new[]{ "PredicateMatched" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.ReadModifyWriteRowRequest), global::Google.Cloud.Bigtable.V2.ReadModifyWriteRowRequest.Parser, new[]{ "TableName", "AppProfileId", "RowKey", "Rules" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.ReadModifyWriteRowResponse), global::Google.Cloud.Bigtable.V2.ReadModifyWriteRowResponse.Parser, new[]{ "Row" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request message for Bigtable.ReadRows.
  /// </summary>
  public sealed partial class ReadRowsRequest : pb::IMessage<ReadRowsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadRowsRequest> _parser = new pb::MessageParser<ReadRowsRequest>(() => new ReadRowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadRowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsRequest(ReadRowsRequest other) : this() {
      tableName_ = other.tableName_;
      appProfileId_ = other.appProfileId_;
      rows_ = other.rows_ != null ? other.rows_.Clone() : null;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      rowsLimit_ = other.rowsLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsRequest Clone() {
      return new ReadRowsRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    /// <summary>
    /// Required. The unique name of the table from which to read.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/tables/&lt;table>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_profile_id" field.</summary>
    public const int AppProfileIdFieldNumber = 5;
    private string appProfileId_ = "";
    /// <summary>
    /// This value specifies routing for replication. If not specified, the
    /// "default" application profile will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppProfileId {
      get { return appProfileId_; }
      set {
        appProfileId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private global::Google.Cloud.Bigtable.V2.RowSet rows_;
    /// <summary>
    /// The row keys and/or ranges to read. If not specified, reads from all rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.V2.RowSet Rows {
      get { return rows_; }
      set {
        rows_ = value;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 3;
    private global::Google.Cloud.Bigtable.V2.RowFilter filter_;
    /// <summary>
    /// The filter to apply to the contents of the specified row(s). If unset,
    /// reads the entirety of each row.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.V2.RowFilter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "rows_limit" field.</summary>
    public const int RowsLimitFieldNumber = 4;
    private long rowsLimit_;
    /// <summary>
    /// The read will terminate after committing to N rows' worth of results. The
    /// default (zero) is to return all results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RowsLimit {
      get { return rowsLimit_; }
      set {
        rowsLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadRowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadRowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (AppProfileId != other.AppProfileId) return false;
      if (!object.Equals(Rows, other.Rows)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (RowsLimit != other.RowsLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (AppProfileId.Length != 0) hash ^= AppProfileId.GetHashCode();
      if (rows_ != null) hash ^= Rows.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (RowsLimit != 0L) hash ^= RowsLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (rows_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rows);
      }
      if (filter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Filter);
      }
      if (RowsLimit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RowsLimit);
      }
      if (AppProfileId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AppProfileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (rows_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rows);
      }
      if (filter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Filter);
      }
      if (RowsLimit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RowsLimit);
      }
      if (AppProfileId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AppProfileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (AppProfileId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppProfileId);
      }
      if (rows_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rows);
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (RowsLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowsLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadRowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.AppProfileId.Length != 0) {
        AppProfileId = other.AppProfileId;
      }
      if (other.rows_ != null) {
        if (rows_ == null) {
          Rows = new global::Google.Cloud.Bigtable.V2.RowSet();
        }
        Rows.MergeFrom(other.Rows);
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::Google.Cloud.Bigtable.V2.RowFilter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.RowsLimit != 0L) {
        RowsLimit = other.RowsLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            if (rows_ == null) {
              Rows = new global::Google.Cloud.Bigtable.V2.RowSet();
            }
            input.ReadMessage(Rows);
            break;
          }
          case 26: {
            if (filter_ == null) {
              Filter = new global::Google.Cloud.Bigtable.V2.RowFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 32: {
            RowsLimit = input.ReadInt64();
            break;
          }
          case 42: {
            AppProfileId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            if (rows_ == null) {
              Rows = new global::Google.Cloud.Bigtable.V2.RowSet();
            }
            input.ReadMessage(Rows);
            break;
          }
          case 26: {
            if (filter_ == null) {
              Filter = new global::Google.Cloud.Bigtable.V2.RowFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 32: {
            RowsLimit = input.ReadInt64();
            break;
          }
          case 42: {
            AppProfileId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for Bigtable.ReadRows.
  /// </summary>
  public sealed partial class ReadRowsResponse : pb::IMessage<ReadRowsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadRowsResponse> _parser = new pb::MessageParser<ReadRowsResponse>(() => new ReadRowsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadRowsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsResponse(ReadRowsResponse other) : this() {
      chunks_ = other.chunks_.Clone();
      lastScannedRowKey_ = other.lastScannedRowKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsResponse Clone() {
      return new ReadRowsResponse(this);
    }

    /// <summary>Field number for the "chunks" field.</summary>
    public const int ChunksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Types.CellChunk> _repeated_chunks_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Types.CellChunk.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Types.CellChunk> chunks_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Types.CellChunk>();
    /// <summary>
    /// A collection of a row's contents as part of the read request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Types.CellChunk> Chunks {
      get { return chunks_; }
    }

    /// <summary>Field number for the "last_scanned_row_key" field.</summary>
    public const int LastScannedRowKeyFieldNumber = 2;
    private pb::ByteString lastScannedRowKey_ = pb::ByteString.Empty;
    /// <summary>
    /// Optionally the server might return the row key of the last row it
    /// has scanned.  The client can use this to construct a more
    /// efficient retry request if needed: any row keys or portions of
    /// ranges less than this row key can be dropped from the request.
    /// This is primarily useful for cases where the server has read a
    /// lot of data that was filtered out since the last committed row
    /// key, allowing the client to skip that work on a retry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString LastScannedRowKey {
      get { return lastScannedRowKey_; }
      set {
        lastScannedRowKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadRowsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadRowsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!chunks_.Equals(other.chunks_)) return false;
      if (LastScannedRowKey != other.LastScannedRowKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= chunks_.GetHashCode();
      if (LastScannedRowKey.Length != 0) hash ^= LastScannedRowKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      chunks_.WriteTo(output, _repeated_chunks_codec);
      if (LastScannedRowKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(LastScannedRowKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      chunks_.WriteTo(ref output, _repeated_chunks_codec);
      if (LastScannedRowKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(LastScannedRowKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += chunks_.CalculateSize(_repeated_chunks_codec);
      if (LastScannedRowKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(LastScannedRowKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadRowsResponse other) {
      if (other == null) {
        return;
      }
      chunks_.Add(other.chunks_);
      if (other.LastScannedRowKey.Length != 0) {
        LastScannedRowKey = other.LastScannedRowKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            chunks_.AddEntriesFrom(input, _repeated_chunks_codec);
            break;
          }
          case 18: {
            LastScannedRowKey = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            chunks_.AddEntriesFrom(ref input, _repeated_chunks_codec);
            break;
          }
          case 18: {
            LastScannedRowKey = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReadRowsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Specifies a piece of a row's contents returned as part of the read
      /// response stream.
      /// </summary>
      public sealed partial class CellChunk : pb::IMessage<CellChunk>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CellChunk> _parser = new pb::MessageParser<CellChunk>(() => new CellChunk());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CellChunk> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CellChunk() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CellChunk(CellChunk other) : this() {
          rowKey_ = other.rowKey_;
          FamilyName = other.FamilyName;
          Qualifier = other.Qualifier;
          timestampMicros_ = other.timestampMicros_;
          labels_ = other.labels_.Clone();
          value_ = other.value_;
          valueSize_ = other.valueSize_;
          switch (other.RowStatusCase) {
            case RowStatusOneofCase.ResetRow:
              ResetRow = other.ResetRow;
              break;
            case RowStatusOneofCase.CommitRow:
              CommitRow = other.CommitRow;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CellChunk Clone() {
          return new CellChunk(this);
        }

        /// <summary>Field number for the "row_key" field.</summary>
        public const int RowKeyFieldNumber = 1;
        private pb::ByteString rowKey_ = pb::ByteString.Empty;
        /// <summary>
        /// The row key for this chunk of data.  If the row key is empty,
        /// this CellChunk is a continuation of the same row as the previous
        /// CellChunk in the response stream, even if that CellChunk was in a
        /// previous ReadRowsResponse message.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString RowKey {
          get { return rowKey_; }
          set {
            rowKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "family_name" field.</summary>
        public const int FamilyNameFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_familyName_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string familyName_;
        /// <summary>
        /// The column family name for this chunk of data.  If this message
        /// is not present this CellChunk is a continuation of the same column
        /// family as the previous CellChunk.  The empty string can occur as a
        /// column family name in a response so clients must check
        /// explicitly for the presence of this message, not just for
        /// `family_name.value` being non-empty.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FamilyName {
          get { return familyName_; }
          set {
            familyName_ = value;
          }
        }


        /// <summary>Field number for the "qualifier" field.</summary>
        public const int QualifierFieldNumber = 3;
        private static readonly pb::FieldCodec<pb::ByteString> _single_qualifier_codec = pb::FieldCodec.ForClassWrapper<pb::ByteString>(26);
        private pb::ByteString qualifier_;
        /// <summary>
        /// The column qualifier for this chunk of data.  If this message
        /// is not present, this CellChunk is a continuation of the same column
        /// as the previous CellChunk.  Column qualifiers may be empty so
        /// clients must check for the presence of this message, not just
        /// for `qualifier.value` being non-empty.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Qualifier {
          get { return qualifier_; }
          set {
            qualifier_ = value;
          }
        }


        /// <summary>Field number for the "timestamp_micros" field.</summary>
        public const int TimestampMicrosFieldNumber = 4;
        private long timestampMicros_;
        /// <summary>
        /// The cell's stored timestamp, which also uniquely identifies it
        /// within its column.  Values are always expressed in
        /// microseconds, but individual tables may set a coarser
        /// granularity to further restrict the allowed values. For
        /// example, a table which specifies millisecond granularity will
        /// only allow values of `timestamp_micros` which are multiples of
        /// 1000.  Timestamps are only set in the first CellChunk per cell
        /// (for cells split into multiple chunks).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TimestampMicros {
          get { return timestampMicros_; }
          set {
            timestampMicros_ = value;
          }
        }

        /// <summary>Field number for the "labels" field.</summary>
        public const int LabelsFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _repeated_labels_codec
            = pb::FieldCodec.ForString(42);
        private readonly pbc::RepeatedField<string> labels_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Labels applied to the cell by a
        /// [RowFilter][google.bigtable.v2.RowFilter].  Labels are only set
        /// on the first CellChunk per cell.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Labels {
          get { return labels_; }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 6;
        private pb::ByteString value_ = pb::ByteString.Empty;
        /// <summary>
        /// The value stored in the cell.  Cell values can be split across
        /// multiple CellChunks.  In that case only the value field will be
        /// set in CellChunks after the first: the timestamp and labels
        /// will only be present in the first CellChunk, even if the first
        /// CellChunk came in a previous ReadRowsResponse.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "value_size" field.</summary>
        public const int ValueSizeFieldNumber = 7;
        private int valueSize_;
        /// <summary>
        /// If this CellChunk is part of a chunked cell value and this is
        /// not the final chunk of that cell, value_size will be set to the
        /// total length of the cell value.  The client can use this size
        /// to pre-allocate memory to hold the full cell value.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ValueSize {
          get { return valueSize_; }
          set {
            valueSize_ = value;
          }
        }

        /// <summary>Field number for the "reset_row" field.</summary>
        public const int ResetRowFieldNumber = 8;
        /// <summary>
        /// Indicates that the client should drop all previous chunks for
        /// `row_key`, as it will be re-read from the beginning.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ResetRow {
          get { return rowStatusCase_ == RowStatusOneofCase.ResetRow ? (bool) rowStatus_ : false; }
          set {
            rowStatus_ = value;
            rowStatusCase_ = RowStatusOneofCase.ResetRow;
          }
        }

        /// <summary>Field number for the "commit_row" field.</summary>
        public const int CommitRowFieldNumber = 9;
        /// <summary>
        /// Indicates that the client can safely process all previous chunks for
        /// `row_key`, as its data has been fully read.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool CommitRow {
          get { return rowStatusCase_ == RowStatusOneofCase.CommitRow ? (bool) rowStatus_ : false; }
          set {
            rowStatus_ = value;
            rowStatusCase_ = RowStatusOneofCase.CommitRow;
          }
        }

        private object rowStatus_;
        /// <summary>Enum of possible cases for the "row_status" oneof.</summary>
        public enum RowStatusOneofCase {
          None = 0,
          ResetRow = 8,
          CommitRow = 9,
        }
        private RowStatusOneofCase rowStatusCase_ = RowStatusOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RowStatusOneofCase RowStatusCase {
          get { return rowStatusCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRowStatus() {
          rowStatusCase_ = RowStatusOneofCase.None;
          rowStatus_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CellChunk);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CellChunk other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RowKey != other.RowKey) return false;
          if (FamilyName != other.FamilyName) return false;
          if (Qualifier != other.Qualifier) return false;
          if (TimestampMicros != other.TimestampMicros) return false;
          if(!labels_.Equals(other.labels_)) return false;
          if (Value != other.Value) return false;
          if (ValueSize != other.ValueSize) return false;
          if (ResetRow != other.ResetRow) return false;
          if (CommitRow != other.CommitRow) return false;
          if (RowStatusCase != other.RowStatusCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RowKey.Length != 0) hash ^= RowKey.GetHashCode();
          if (familyName_ != null) hash ^= FamilyName.GetHashCode();
          if (qualifier_ != null) hash ^= Qualifier.GetHashCode();
          if (TimestampMicros != 0L) hash ^= TimestampMicros.GetHashCode();
          hash ^= labels_.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (ValueSize != 0) hash ^= ValueSize.GetHashCode();
          if (rowStatusCase_ == RowStatusOneofCase.ResetRow) hash ^= ResetRow.GetHashCode();
          if (rowStatusCase_ == RowStatusOneofCase.CommitRow) hash ^= CommitRow.GetHashCode();
          hash ^= (int) rowStatusCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (RowKey.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(RowKey);
          }
          if (familyName_ != null) {
            _single_familyName_codec.WriteTagAndValue(output, FamilyName);
          }
          if (qualifier_ != null) {
            _single_qualifier_codec.WriteTagAndValue(output, Qualifier);
          }
          if (TimestampMicros != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(TimestampMicros);
          }
          labels_.WriteTo(output, _repeated_labels_codec);
          if (Value.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(Value);
          }
          if (ValueSize != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(ValueSize);
          }
          if (rowStatusCase_ == RowStatusOneofCase.ResetRow) {
            output.WriteRawTag(64);
            output.WriteBool(ResetRow);
          }
          if (rowStatusCase_ == RowStatusOneofCase.CommitRow) {
            output.WriteRawTag(72);
            output.WriteBool(CommitRow);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (RowKey.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(RowKey);
          }
          if (familyName_ != null) {
            _single_familyName_codec.WriteTagAndValue(ref output, FamilyName);
          }
          if (qualifier_ != null) {
            _single_qualifier_codec.WriteTagAndValue(ref output, Qualifier);
          }
          if (TimestampMicros != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(TimestampMicros);
          }
          labels_.WriteTo(ref output, _repeated_labels_codec);
          if (Value.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(Value);
          }
          if (ValueSize != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(ValueSize);
          }
          if (rowStatusCase_ == RowStatusOneofCase.ResetRow) {
            output.WriteRawTag(64);
            output.WriteBool(ResetRow);
          }
          if (rowStatusCase_ == RowStatusOneofCase.CommitRow) {
            output.WriteRawTag(72);
            output.WriteBool(CommitRow);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RowKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(RowKey);
          }
          if (familyName_ != null) {
            size += _single_familyName_codec.CalculateSizeWithTag(FamilyName);
          }
          if (qualifier_ != null) {
            size += _single_qualifier_codec.CalculateSizeWithTag(Qualifier);
          }
          if (TimestampMicros != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimestampMicros);
          }
          size += labels_.CalculateSize(_repeated_labels_codec);
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
          }
          if (ValueSize != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValueSize);
          }
          if (rowStatusCase_ == RowStatusOneofCase.ResetRow) {
            size += 1 + 1;
          }
          if (rowStatusCase_ == RowStatusOneofCase.CommitRow) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CellChunk other) {
          if (other == null) {
            return;
          }
          if (other.RowKey.Length != 0) {
            RowKey = other.RowKey;
          }
          if (other.familyName_ != null) {
            if (familyName_ == null || other.FamilyName != "") {
              FamilyName = other.FamilyName;
            }
          }
          if (other.qualifier_ != null) {
            if (qualifier_ == null || other.Qualifier != pb::ByteString.Empty) {
              Qualifier = other.Qualifier;
            }
          }
          if (other.TimestampMicros != 0L) {
            TimestampMicros = other.TimestampMicros;
          }
          labels_.Add(other.labels_);
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          if (other.ValueSize != 0) {
            ValueSize = other.ValueSize;
          }
          switch (other.RowStatusCase) {
            case RowStatusOneofCase.ResetRow:
              ResetRow = other.ResetRow;
              break;
            case RowStatusOneofCase.CommitRow:
              CommitRow = other.CommitRow;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                RowKey = input.ReadBytes();
                break;
              }
              case 18: {
                string value = _single_familyName_codec.Read(input);
                if (familyName_ == null || value != "") {
                  FamilyName = value;
                }
                break;
              }
              case 26: {
                pb::ByteString value = _single_qualifier_codec.Read(input);
                if (qualifier_ == null || value != pb::ByteString.Empty) {
                  Qualifier = value;
                }
                break;
              }
              case 32: {
                TimestampMicros = input.ReadInt64();
                break;
              }
              case 42: {
                labels_.AddEntriesFrom(input, _repeated_labels_codec);
                break;
              }
              case 50: {
                Value = input.ReadBytes();
                break;
              }
              case 56: {
                ValueSize = input.ReadInt32();
                break;
              }
              case 64: {
                ResetRow = input.ReadBool();
                break;
              }
              case 72: {
                CommitRow = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                RowKey = input.ReadBytes();
                break;
              }
              case 18: {
                string value = _single_familyName_codec.Read(ref input);
                if (familyName_ == null || value != "") {
                  FamilyName = value;
                }
                break;
              }
              case 26: {
                pb::ByteString value = _single_qualifier_codec.Read(ref input);
                if (qualifier_ == null || value != pb::ByteString.Empty) {
                  Qualifier = value;
                }
                break;
              }
              case 32: {
                TimestampMicros = input.ReadInt64();
                break;
              }
              case 42: {
                labels_.AddEntriesFrom(ref input, _repeated_labels_codec);
                break;
              }
              case 50: {
                Value = input.ReadBytes();
                break;
              }
              case 56: {
                ValueSize = input.ReadInt32();
                break;
              }
              case 64: {
                ResetRow = input.ReadBool();
                break;
              }
              case 72: {
                CommitRow = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Request message for Bigtable.SampleRowKeys.
  /// </summary>
  public sealed partial class SampleRowKeysRequest : pb::IMessage<SampleRowKeysRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SampleRowKeysRequest> _parser = new pb::MessageParser<SampleRowKeysRequest>(() => new SampleRowKeysRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SampleRowKeysRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SampleRowKeysRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SampleRowKeysRequest(SampleRowKeysRequest other) : this() {
      tableName_ = other.tableName_;
      appProfileId_ = other.appProfileId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SampleRowKeysRequest Clone() {
      return new SampleRowKeysRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    /// <summary>
    /// Required. The unique name of the table from which to sample row keys.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/tables/&lt;table>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_profile_id" field.</summary>
    public const int AppProfileIdFieldNumber = 2;
    private string appProfileId_ = "";
    /// <summary>
    /// This value specifies routing for replication. If not specified, the
    /// "default" application profile will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppProfileId {
      get { return appProfileId_; }
      set {
        appProfileId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SampleRowKeysRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SampleRowKeysRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (AppProfileId != other.AppProfileId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (AppProfileId.Length != 0) hash ^= AppProfileId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (AppProfileId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppProfileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (AppProfileId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppProfileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (AppProfileId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppProfileId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SampleRowKeysRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.AppProfileId.Length != 0) {
        AppProfileId = other.AppProfileId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            AppProfileId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            AppProfileId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for Bigtable.SampleRowKeys.
  /// </summary>
  public sealed partial class SampleRowKeysResponse : pb::IMessage<SampleRowKeysResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SampleRowKeysResponse> _parser = new pb::MessageParser<SampleRowKeysResponse>(() => new SampleRowKeysResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SampleRowKeysResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SampleRowKeysResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SampleRowKeysResponse(SampleRowKeysResponse other) : this() {
      rowKey_ = other.rowKey_;
      offsetBytes_ = other.offsetBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SampleRowKeysResponse Clone() {
      return new SampleRowKeysResponse(this);
    }

    /// <summary>Field number for the "row_key" field.</summary>
    public const int RowKeyFieldNumber = 1;
    private pb::ByteString rowKey_ = pb::ByteString.Empty;
    /// <summary>
    /// Sorted streamed sequence of sample row keys in the table. The table might
    /// have contents before the first row key in the list and after the last one,
    /// but a key containing the empty string indicates "end of table" and will be
    /// the last response given, if present.
    /// Note that row keys in this list may not have ever been written to or read
    /// from, and users should therefore not make any assumptions about the row key
    /// structure that are specific to their use case.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset_bytes" field.</summary>
    public const int OffsetBytesFieldNumber = 2;
    private long offsetBytes_;
    /// <summary>
    /// Approximate total storage space used by all rows in the table which precede
    /// `row_key`. Buffering the contents of all rows between two subsequent
    /// samples would require space roughly equal to the difference in their
    /// `offset_bytes` fields.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OffsetBytes {
      get { return offsetBytes_; }
      set {
        offsetBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SampleRowKeysResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SampleRowKeysResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowKey != other.RowKey) return false;
      if (OffsetBytes != other.OffsetBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowKey.Length != 0) hash ^= RowKey.GetHashCode();
      if (OffsetBytes != 0L) hash ^= OffsetBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RowKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(RowKey);
      }
      if (OffsetBytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OffsetBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RowKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(RowKey);
      }
      if (OffsetBytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OffsetBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RowKey);
      }
      if (OffsetBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OffsetBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SampleRowKeysResponse other) {
      if (other == null) {
        return;
      }
      if (other.RowKey.Length != 0) {
        RowKey = other.RowKey;
      }
      if (other.OffsetBytes != 0L) {
        OffsetBytes = other.OffsetBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RowKey = input.ReadBytes();
            break;
          }
          case 16: {
            OffsetBytes = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RowKey = input.ReadBytes();
            break;
          }
          case 16: {
            OffsetBytes = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for Bigtable.MutateRow.
  /// </summary>
  public sealed partial class MutateRowRequest : pb::IMessage<MutateRowRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MutateRowRequest> _parser = new pb::MessageParser<MutateRowRequest>(() => new MutateRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MutateRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateRowRequest(MutateRowRequest other) : this() {
      tableName_ = other.tableName_;
      appProfileId_ = other.appProfileId_;
      rowKey_ = other.rowKey_;
      mutations_ = other.mutations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateRowRequest Clone() {
      return new MutateRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    /// <summary>
    /// Required. The unique name of the table to which the mutation should be applied.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/tables/&lt;table>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_profile_id" field.</summary>
    public const int AppProfileIdFieldNumber = 4;
    private string appProfileId_ = "";
    /// <summary>
    /// This value specifies routing for replication. If not specified, the
    /// "default" application profile will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppProfileId {
      get { return appProfileId_; }
      set {
        appProfileId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "row_key" field.</summary>
    public const int RowKeyFieldNumber = 2;
    private pb::ByteString rowKey_ = pb::ByteString.Empty;
    /// <summary>
    /// Required. The key of the row to which the mutation should be applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mutations" field.</summary>
    public const int MutationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.V2.Mutation> _repeated_mutations_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Bigtable.V2.Mutation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Mutation> mutations_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Mutation>();
    /// <summary>
    /// Required. Changes to be atomically applied to the specified row. Entries are applied
    /// in order, meaning that earlier mutations can be masked by later ones.
    /// Must contain at least one entry and at most 100000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Mutation> Mutations {
      get { return mutations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MutateRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MutateRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (AppProfileId != other.AppProfileId) return false;
      if (RowKey != other.RowKey) return false;
      if(!mutations_.Equals(other.mutations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (AppProfileId.Length != 0) hash ^= AppProfileId.GetHashCode();
      if (RowKey.Length != 0) hash ^= RowKey.GetHashCode();
      hash ^= mutations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (RowKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(RowKey);
      }
      mutations_.WriteTo(output, _repeated_mutations_codec);
      if (AppProfileId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppProfileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (RowKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(RowKey);
      }
      mutations_.WriteTo(ref output, _repeated_mutations_codec);
      if (AppProfileId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppProfileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (AppProfileId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppProfileId);
      }
      if (RowKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RowKey);
      }
      size += mutations_.CalculateSize(_repeated_mutations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MutateRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.AppProfileId.Length != 0) {
        AppProfileId = other.AppProfileId;
      }
      if (other.RowKey.Length != 0) {
        RowKey = other.RowKey;
      }
      mutations_.Add(other.mutations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            RowKey = input.ReadBytes();
            break;
          }
          case 26: {
            mutations_.AddEntriesFrom(input, _repeated_mutations_codec);
            break;
          }
          case 34: {
            AppProfileId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            RowKey = input.ReadBytes();
            break;
          }
          case 26: {
            mutations_.AddEntriesFrom(ref input, _repeated_mutations_codec);
            break;
          }
          case 34: {
            AppProfileId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for Bigtable.MutateRow.
  /// </summary>
  public sealed partial class MutateRowResponse : pb::IMessage<MutateRowResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MutateRowResponse> _parser = new pb::MessageParser<MutateRowResponse>(() => new MutateRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MutateRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateRowResponse(MutateRowResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateRowResponse Clone() {
      return new MutateRowResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MutateRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MutateRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MutateRowResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for BigtableService.MutateRows.
  /// </summary>
  public sealed partial class MutateRowsRequest : pb::IMessage<MutateRowsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MutateRowsRequest> _parser = new pb::MessageParser<MutateRowsRequest>(() => new MutateRowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MutateRowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateRowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateRowsRequest(MutateRowsRequest other) : this() {
      tableName_ = other.tableName_;
      appProfileId_ = other.appProfileId_;
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateRowsRequest Clone() {
      return new MutateRowsRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    /// <summary>
    /// Required. The unique name of the table to which the mutations should be applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_profile_id" field.</summary>
    public const int AppProfileIdFieldNumber = 3;
    private string appProfileId_ = "";
    /// <summary>
    /// This value specifies routing for replication. If not specified, the
    /// "default" application profile will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppProfileId {
      get { return appProfileId_; }
      set {
        appProfileId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.V2.MutateRowsRequest.Types.Entry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Bigtable.V2.MutateRowsRequest.Types.Entry.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.MutateRowsRequest.Types.Entry> entries_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.MutateRowsRequest.Types.Entry>();
    /// <summary>
    /// Required. The row keys and corresponding mutations to be applied in bulk.
    /// Each entry is applied as an atomic mutation, but the entries may be
    /// applied in arbitrary order (even between entries for the same row).
    /// At least one entry must be specified, and in total the entries can
    /// contain at most 100000 mutations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.MutateRowsRequest.Types.Entry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MutateRowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MutateRowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (AppProfileId != other.AppProfileId) return false;
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (AppProfileId.Length != 0) hash ^= AppProfileId.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      entries_.WriteTo(output, _repeated_entries_codec);
      if (AppProfileId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AppProfileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (AppProfileId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AppProfileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (AppProfileId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppProfileId);
      }
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MutateRowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.AppProfileId.Length != 0) {
        AppProfileId = other.AppProfileId;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
          case 26: {
            AppProfileId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
          case 26: {
            AppProfileId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MutateRowsRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A mutation for a given row.
      /// </summary>
      public sealed partial class Entry : pb::IMessage<Entry>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Entry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Bigtable.V2.MutateRowsRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry(Entry other) : this() {
          rowKey_ = other.rowKey_;
          mutations_ = other.mutations_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry Clone() {
          return new Entry(this);
        }

        /// <summary>Field number for the "row_key" field.</summary>
        public const int RowKeyFieldNumber = 1;
        private pb::ByteString rowKey_ = pb::ByteString.Empty;
        /// <summary>
        /// The key of the row to which the `mutations` should be applied.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString RowKey {
          get { return rowKey_; }
          set {
            rowKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "mutations" field.</summary>
        public const int MutationsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.V2.Mutation> _repeated_mutations_codec
            = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Bigtable.V2.Mutation.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Mutation> mutations_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Mutation>();
        /// <summary>
        /// Required. Changes to be atomically applied to the specified row. Mutations are
        /// applied in order, meaning that earlier mutations can be masked by
        /// later ones.
        /// You must specify at least one mutation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Mutation> Mutations {
          get { return mutations_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Entry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Entry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RowKey != other.RowKey) return false;
          if(!mutations_.Equals(other.mutations_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RowKey.Length != 0) hash ^= RowKey.GetHashCode();
          hash ^= mutations_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (RowKey.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(RowKey);
          }
          mutations_.WriteTo(output, _repeated_mutations_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (RowKey.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(RowKey);
          }
          mutations_.WriteTo(ref output, _repeated_mutations_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RowKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(RowKey);
          }
          size += mutations_.CalculateSize(_repeated_mutations_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Entry other) {
          if (other == null) {
            return;
          }
          if (other.RowKey.Length != 0) {
            RowKey = other.RowKey;
          }
          mutations_.Add(other.mutations_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                RowKey = input.ReadBytes();
                break;
              }
              case 18: {
                mutations_.AddEntriesFrom(input, _repeated_mutations_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                RowKey = input.ReadBytes();
                break;
              }
              case 18: {
                mutations_.AddEntriesFrom(ref input, _repeated_mutations_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Response message for BigtableService.MutateRows.
  /// </summary>
  public sealed partial class MutateRowsResponse : pb::IMessage<MutateRowsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MutateRowsResponse> _parser = new pb::MessageParser<MutateRowsResponse>(() => new MutateRowsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MutateRowsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateRowsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateRowsResponse(MutateRowsResponse other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateRowsResponse Clone() {
      return new MutateRowsResponse(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.V2.MutateRowsResponse.Types.Entry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Bigtable.V2.MutateRowsResponse.Types.Entry.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.MutateRowsResponse.Types.Entry> entries_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.MutateRowsResponse.Types.Entry>();
    /// <summary>
    /// One or more results for Entries from the batch request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.MutateRowsResponse.Types.Entry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MutateRowsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MutateRowsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MutateRowsResponse other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MutateRowsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The result of applying a passed mutation in the original request.
      /// </summary>
      public sealed partial class Entry : pb::IMessage<Entry>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Entry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Bigtable.V2.MutateRowsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry(Entry other) : this() {
          index_ = other.index_;
          status_ = other.status_ != null ? other.status_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry Clone() {
          return new Entry(this);
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 1;
        private long index_;
        /// <summary>
        /// The index into the original request's `entries` list of the Entry
        /// for which a result is being reported.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Index {
          get { return index_; }
          set {
            index_ = value;
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 2;
        private global::Google.Rpc.Status status_;
        /// <summary>
        /// The result of the request Entry identified by `index`.
        /// Depending on how requests are batched during execution, it is possible
        /// for one Entry to fail due to an error with another Entry. In the event
        /// that this occurs, the same error will be reported for both entries.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Rpc.Status Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Entry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Entry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Index != other.Index) return false;
          if (!object.Equals(Status, other.Status)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Index != 0L) hash ^= Index.GetHashCode();
          if (status_ != null) hash ^= Status.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Index != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Index);
          }
          if (status_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Status);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Index != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Index);
          }
          if (status_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Status);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Index != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Index);
          }
          if (status_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Entry other) {
          if (other == null) {
            return;
          }
          if (other.Index != 0L) {
            Index = other.Index;
          }
          if (other.status_ != null) {
            if (status_ == null) {
              Status = new global::Google.Rpc.Status();
            }
            Status.MergeFrom(other.Status);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Index = input.ReadInt64();
                break;
              }
              case 18: {
                if (status_ == null) {
                  Status = new global::Google.Rpc.Status();
                }
                input.ReadMessage(Status);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Index = input.ReadInt64();
                break;
              }
              case 18: {
                if (status_ == null) {
                  Status = new global::Google.Rpc.Status();
                }
                input.ReadMessage(Status);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Request message for Bigtable.CheckAndMutateRow.
  /// </summary>
  public sealed partial class CheckAndMutateRowRequest : pb::IMessage<CheckAndMutateRowRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CheckAndMutateRowRequest> _parser = new pb::MessageParser<CheckAndMutateRowRequest>(() => new CheckAndMutateRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckAndMutateRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAndMutateRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAndMutateRowRequest(CheckAndMutateRowRequest other) : this() {
      tableName_ = other.tableName_;
      appProfileId_ = other.appProfileId_;
      rowKey_ = other.rowKey_;
      predicateFilter_ = other.predicateFilter_ != null ? other.predicateFilter_.Clone() : null;
      trueMutations_ = other.trueMutations_.Clone();
      falseMutations_ = other.falseMutations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAndMutateRowRequest Clone() {
      return new CheckAndMutateRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    /// <summary>
    /// Required. The unique name of the table to which the conditional mutation should be
    /// applied.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/tables/&lt;table>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_profile_id" field.</summary>
    public const int AppProfileIdFieldNumber = 7;
    private string appProfileId_ = "";
    /// <summary>
    /// This value specifies routing for replication. If not specified, the
    /// "default" application profile will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppProfileId {
      get { return appProfileId_; }
      set {
        appProfileId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "row_key" field.</summary>
    public const int RowKeyFieldNumber = 2;
    private pb::ByteString rowKey_ = pb::ByteString.Empty;
    /// <summary>
    /// Required. The key of the row to which the conditional mutation should be applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "predicate_filter" field.</summary>
    public const int PredicateFilterFieldNumber = 6;
    private global::Google.Cloud.Bigtable.V2.RowFilter predicateFilter_;
    /// <summary>
    /// The filter to be applied to the contents of the specified row. Depending
    /// on whether or not any results are yielded, either `true_mutations` or
    /// `false_mutations` will be executed. If unset, checks that the row contains
    /// any values at all.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.V2.RowFilter PredicateFilter {
      get { return predicateFilter_; }
      set {
        predicateFilter_ = value;
      }
    }

    /// <summary>Field number for the "true_mutations" field.</summary>
    public const int TrueMutationsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.V2.Mutation> _repeated_trueMutations_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Bigtable.V2.Mutation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Mutation> trueMutations_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Mutation>();
    /// <summary>
    /// Changes to be atomically applied to the specified row if `predicate_filter`
    /// yields at least one cell when applied to `row_key`. Entries are applied in
    /// order, meaning that earlier mutations can be masked by later ones.
    /// Must contain at least one entry if `false_mutations` is empty, and at most
    /// 100000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Mutation> TrueMutations {
      get { return trueMutations_; }
    }

    /// <summary>Field number for the "false_mutations" field.</summary>
    public const int FalseMutationsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.V2.Mutation> _repeated_falseMutations_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Bigtable.V2.Mutation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Mutation> falseMutations_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Mutation>();
    /// <summary>
    /// Changes to be atomically applied to the specified row if `predicate_filter`
    /// does not yield any cells when applied to `row_key`. Entries are applied in
    /// order, meaning that earlier mutations can be masked by later ones.
    /// Must contain at least one entry if `true_mutations` is empty, and at most
    /// 100000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Mutation> FalseMutations {
      get { return falseMutations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckAndMutateRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckAndMutateRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (AppProfileId != other.AppProfileId) return false;
      if (RowKey != other.RowKey) return false;
      if (!object.Equals(PredicateFilter, other.PredicateFilter)) return false;
      if(!trueMutations_.Equals(other.trueMutations_)) return false;
      if(!falseMutations_.Equals(other.falseMutations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (AppProfileId.Length != 0) hash ^= AppProfileId.GetHashCode();
      if (RowKey.Length != 0) hash ^= RowKey.GetHashCode();
      if (predicateFilter_ != null) hash ^= PredicateFilter.GetHashCode();
      hash ^= trueMutations_.GetHashCode();
      hash ^= falseMutations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (RowKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(RowKey);
      }
      trueMutations_.WriteTo(output, _repeated_trueMutations_codec);
      falseMutations_.WriteTo(output, _repeated_falseMutations_codec);
      if (predicateFilter_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PredicateFilter);
      }
      if (AppProfileId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AppProfileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (RowKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(RowKey);
      }
      trueMutations_.WriteTo(ref output, _repeated_trueMutations_codec);
      falseMutations_.WriteTo(ref output, _repeated_falseMutations_codec);
      if (predicateFilter_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PredicateFilter);
      }
      if (AppProfileId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AppProfileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (AppProfileId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppProfileId);
      }
      if (RowKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RowKey);
      }
      if (predicateFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PredicateFilter);
      }
      size += trueMutations_.CalculateSize(_repeated_trueMutations_codec);
      size += falseMutations_.CalculateSize(_repeated_falseMutations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckAndMutateRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.AppProfileId.Length != 0) {
        AppProfileId = other.AppProfileId;
      }
      if (other.RowKey.Length != 0) {
        RowKey = other.RowKey;
      }
      if (other.predicateFilter_ != null) {
        if (predicateFilter_ == null) {
          PredicateFilter = new global::Google.Cloud.Bigtable.V2.RowFilter();
        }
        PredicateFilter.MergeFrom(other.PredicateFilter);
      }
      trueMutations_.Add(other.trueMutations_);
      falseMutations_.Add(other.falseMutations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            RowKey = input.ReadBytes();
            break;
          }
          case 34: {
            trueMutations_.AddEntriesFrom(input, _repeated_trueMutations_codec);
            break;
          }
          case 42: {
            falseMutations_.AddEntriesFrom(input, _repeated_falseMutations_codec);
            break;
          }
          case 50: {
            if (predicateFilter_ == null) {
              PredicateFilter = new global::Google.Cloud.Bigtable.V2.RowFilter();
            }
            input.ReadMessage(PredicateFilter);
            break;
          }
          case 58: {
            AppProfileId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            RowKey = input.ReadBytes();
            break;
          }
          case 34: {
            trueMutations_.AddEntriesFrom(ref input, _repeated_trueMutations_codec);
            break;
          }
          case 42: {
            falseMutations_.AddEntriesFrom(ref input, _repeated_falseMutations_codec);
            break;
          }
          case 50: {
            if (predicateFilter_ == null) {
              PredicateFilter = new global::Google.Cloud.Bigtable.V2.RowFilter();
            }
            input.ReadMessage(PredicateFilter);
            break;
          }
          case 58: {
            AppProfileId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for Bigtable.CheckAndMutateRow.
  /// </summary>
  public sealed partial class CheckAndMutateRowResponse : pb::IMessage<CheckAndMutateRowResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CheckAndMutateRowResponse> _parser = new pb::MessageParser<CheckAndMutateRowResponse>(() => new CheckAndMutateRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckAndMutateRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAndMutateRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAndMutateRowResponse(CheckAndMutateRowResponse other) : this() {
      predicateMatched_ = other.predicateMatched_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAndMutateRowResponse Clone() {
      return new CheckAndMutateRowResponse(this);
    }

    /// <summary>Field number for the "predicate_matched" field.</summary>
    public const int PredicateMatchedFieldNumber = 1;
    private bool predicateMatched_;
    /// <summary>
    /// Whether or not the request's `predicate_filter` yielded any results for
    /// the specified row.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PredicateMatched {
      get { return predicateMatched_; }
      set {
        predicateMatched_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckAndMutateRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckAndMutateRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PredicateMatched != other.PredicateMatched) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PredicateMatched != false) hash ^= PredicateMatched.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PredicateMatched != false) {
        output.WriteRawTag(8);
        output.WriteBool(PredicateMatched);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PredicateMatched != false) {
        output.WriteRawTag(8);
        output.WriteBool(PredicateMatched);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PredicateMatched != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckAndMutateRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.PredicateMatched != false) {
        PredicateMatched = other.PredicateMatched;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PredicateMatched = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PredicateMatched = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for Bigtable.ReadModifyWriteRow.
  /// </summary>
  public sealed partial class ReadModifyWriteRowRequest : pb::IMessage<ReadModifyWriteRowRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadModifyWriteRowRequest> _parser = new pb::MessageParser<ReadModifyWriteRowRequest>(() => new ReadModifyWriteRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadModifyWriteRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadModifyWriteRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadModifyWriteRowRequest(ReadModifyWriteRowRequest other) : this() {
      tableName_ = other.tableName_;
      appProfileId_ = other.appProfileId_;
      rowKey_ = other.rowKey_;
      rules_ = other.rules_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadModifyWriteRowRequest Clone() {
      return new ReadModifyWriteRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    /// <summary>
    /// Required. The unique name of the table to which the read/modify/write rules should be
    /// applied.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/tables/&lt;table>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_profile_id" field.</summary>
    public const int AppProfileIdFieldNumber = 4;
    private string appProfileId_ = "";
    /// <summary>
    /// This value specifies routing for replication. If not specified, the
    /// "default" application profile will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppProfileId {
      get { return appProfileId_; }
      set {
        appProfileId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "row_key" field.</summary>
    public const int RowKeyFieldNumber = 2;
    private pb::ByteString rowKey_ = pb::ByteString.Empty;
    /// <summary>
    /// Required. The key of the row to which the read/modify/write rules should be applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.V2.ReadModifyWriteRule> _repeated_rules_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Bigtable.V2.ReadModifyWriteRule.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.ReadModifyWriteRule> rules_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.ReadModifyWriteRule>();
    /// <summary>
    /// Required. Rules specifying how the specified row's contents are to be transformed
    /// into writes. Entries are applied in order, meaning that earlier rules will
    /// affect the results of later ones.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.ReadModifyWriteRule> Rules {
      get { return rules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadModifyWriteRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadModifyWriteRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (AppProfileId != other.AppProfileId) return false;
      if (RowKey != other.RowKey) return false;
      if(!rules_.Equals(other.rules_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (AppProfileId.Length != 0) hash ^= AppProfileId.GetHashCode();
      if (RowKey.Length != 0) hash ^= RowKey.GetHashCode();
      hash ^= rules_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (RowKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(RowKey);
      }
      rules_.WriteTo(output, _repeated_rules_codec);
      if (AppProfileId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppProfileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (RowKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(RowKey);
      }
      rules_.WriteTo(ref output, _repeated_rules_codec);
      if (AppProfileId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppProfileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (AppProfileId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppProfileId);
      }
      if (RowKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RowKey);
      }
      size += rules_.CalculateSize(_repeated_rules_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadModifyWriteRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.AppProfileId.Length != 0) {
        AppProfileId = other.AppProfileId;
      }
      if (other.RowKey.Length != 0) {
        RowKey = other.RowKey;
      }
      rules_.Add(other.rules_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            RowKey = input.ReadBytes();
            break;
          }
          case 26: {
            rules_.AddEntriesFrom(input, _repeated_rules_codec);
            break;
          }
          case 34: {
            AppProfileId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            RowKey = input.ReadBytes();
            break;
          }
          case 26: {
            rules_.AddEntriesFrom(ref input, _repeated_rules_codec);
            break;
          }
          case 34: {
            AppProfileId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for Bigtable.ReadModifyWriteRow.
  /// </summary>
  public sealed partial class ReadModifyWriteRowResponse : pb::IMessage<ReadModifyWriteRowResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadModifyWriteRowResponse> _parser = new pb::MessageParser<ReadModifyWriteRowResponse>(() => new ReadModifyWriteRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadModifyWriteRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadModifyWriteRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadModifyWriteRowResponse(ReadModifyWriteRowResponse other) : this() {
      row_ = other.row_ != null ? other.row_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadModifyWriteRowResponse Clone() {
      return new ReadModifyWriteRowResponse(this);
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 1;
    private global::Google.Cloud.Bigtable.V2.Row row_;
    /// <summary>
    /// A Row containing the new contents of all cells modified by the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.V2.Row Row {
      get { return row_; }
      set {
        row_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadModifyWriteRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadModifyWriteRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Row, other.Row)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (row_ != null) hash ^= Row.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (row_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Row);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (row_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Row);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (row_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Row);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadModifyWriteRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.row_ != null) {
        if (row_ == null) {
          Row = new global::Google.Cloud.Bigtable.V2.Row();
        }
        Row.MergeFrom(other.Row);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (row_ == null) {
              Row = new global::Google.Cloud.Bigtable.V2.Row();
            }
            input.ReadMessage(Row);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (row_ == null) {
              Row = new global::Google.Cloud.Bigtable.V2.Row();
            }
            input.ReadMessage(Row);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
