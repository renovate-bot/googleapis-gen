// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/bigtable/admin/v2/table.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Bigtable.Admin.V2 {

  /// <summary>Holder for reflection information generated from google/bigtable/admin/v2/table.proto</summary>
  public static partial class TableReflection {

    #region Descriptor
    /// <summary>File descriptor for google/bigtable/admin/v2/table.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TableReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRnb29nbGUvYmlndGFibGUvYWRtaW4vdjIvdGFibGUucHJvdG8SGGdvb2ds",
            "ZS5iaWd0YWJsZS5hZG1pbi52MhofZ29vZ2xlL2FwaS9maWVsZF9iZWhhdmlv",
            "ci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxoeZ29vZ2xlL3By",
            "b3RvYnVmL2R1cmF0aW9uLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0",
            "YW1wLnByb3RvGhdnb29nbGUvcnBjL3N0YXR1cy5wcm90byKbAQoLUmVzdG9y",
            "ZUluZm8SQAoLc291cmNlX3R5cGUYASABKA4yKy5nb29nbGUuYmlndGFibGUu",
            "YWRtaW4udjIuUmVzdG9yZVNvdXJjZVR5cGUSOwoLYmFja3VwX2luZm8YAiAB",
            "KAsyJC5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuQmFja3VwSW5mb0gAQg0K",
            "C3NvdXJjZV9pbmZvItgICgVUYWJsZRIMCgRuYW1lGAEgASgJEkoKDmNsdXN0",
            "ZXJfc3RhdGVzGAIgAygLMjIuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLlRh",
            "YmxlLkNsdXN0ZXJTdGF0ZXNFbnRyeRJMCg9jb2x1bW5fZmFtaWxpZXMYAyAD",
            "KAsyMy5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuVGFibGUuQ29sdW1uRmFt",
            "aWxpZXNFbnRyeRJJCgtncmFudWxhcml0eRgEIAEoDjI0Lmdvb2dsZS5iaWd0",
            "YWJsZS5hZG1pbi52Mi5UYWJsZS5UaW1lc3RhbXBHcmFudWxhcml0eRI7Cgxy",
            "ZXN0b3JlX2luZm8YBiABKAsyJS5nb29nbGUuYmlndGFibGUuYWRtaW4udjIu",
            "UmVzdG9yZUluZm8awQIKDENsdXN0ZXJTdGF0ZRJYChFyZXBsaWNhdGlvbl9z",
            "dGF0ZRgBIAEoDjI9Lmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5UYWJsZS5D",
            "bHVzdGVyU3RhdGUuUmVwbGljYXRpb25TdGF0ZRJGCg9lbmNyeXB0aW9uX2lu",
            "Zm8YAiADKAsyKC5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuRW5jcnlwdGlv",
            "bkluZm9CA+BBAyKOAQoQUmVwbGljYXRpb25TdGF0ZRITCg9TVEFURV9OT1Rf",
            "S05PV04QABIQCgxJTklUSUFMSVpJTkcQARIXChNQTEFOTkVEX01BSU5URU5B",
            "TkNFEAISGQoVVU5QTEFOTkVEX01BSU5URU5BTkNFEAMSCQoFUkVBRFkQBBIU",
            "ChBSRUFEWV9PUFRJTUlaSU5HEAUaYgoSQ2x1c3RlclN0YXRlc0VudHJ5EgsK",
            "A2tleRgBIAEoCRI7CgV2YWx1ZRgCIAEoCzIsLmdvb2dsZS5iaWd0YWJsZS5h",
            "ZG1pbi52Mi5UYWJsZS5DbHVzdGVyU3RhdGU6AjgBGl0KE0NvbHVtbkZhbWls",
            "aWVzRW50cnkSCwoDa2V5GAEgASgJEjUKBXZhbHVlGAIgASgLMiYuZ29vZ2xl",
            "LmJpZ3RhYmxlLmFkbWluLnYyLkNvbHVtbkZhbWlseToCOAEiSQoUVGltZXN0",
            "YW1wR3JhbnVsYXJpdHkSJQohVElNRVNUQU1QX0dSQU5VTEFSSVRZX1VOU1BF",
            "Q0lGSUVEEAASCgoGTUlMTElTEAEicQoEVmlldxIUChBWSUVXX1VOU1BFQ0lG",
            "SUVEEAASDQoJTkFNRV9PTkxZEAESDwoLU0NIRU1BX1ZJRVcQAhIUChBSRVBM",
            "SUNBVElPTl9WSUVXEAMSEwoPRU5DUllQVElPTl9WSUVXEAUSCAoERlVMTBAE",
            "OlrqQVcKHWJpZ3RhYmxlLmdvb2dsZWFwaXMuY29tL1RhYmxlEjZwcm9qZWN0",
            "cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0vdGFibGVzL3t0YWJs",
            "ZX0iQQoMQ29sdW1uRmFtaWx5EjEKB2djX3J1bGUYASABKAsyIC5nb29nbGUu",
            "YmlndGFibGUuYWRtaW4udjIuR2NSdWxlItUCCgZHY1J1bGUSGgoQbWF4X251",
            "bV92ZXJzaW9ucxgBIAEoBUgAEiwKB21heF9hZ2UYAiABKAsyGS5nb29nbGUu",
            "cHJvdG9idWYuRHVyYXRpb25IABJFCgxpbnRlcnNlY3Rpb24YAyABKAsyLS5n",
            "b29nbGUuYmlndGFibGUuYWRtaW4udjIuR2NSdWxlLkludGVyc2VjdGlvbkgA",
            "EjcKBXVuaW9uGAQgASgLMiYuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLkdj",
            "UnVsZS5VbmlvbkgAGj8KDEludGVyc2VjdGlvbhIvCgVydWxlcxgBIAMoCzIg",
            "Lmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5HY1J1bGUaOAoFVW5pb24SLwoF",
            "cnVsZXMYASADKAsyIC5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuR2NSdWxl",
            "QgYKBHJ1bGUi2QIKDkVuY3J5cHRpb25JbmZvElUKD2VuY3J5cHRpb25fdHlw",
            "ZRgDIAEoDjI3Lmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5FbmNyeXB0aW9u",
            "SW5mby5FbmNyeXB0aW9uVHlwZUID4EEDEjIKEWVuY3J5cHRpb25fc3RhdHVz",
            "GAQgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXNCA+BBAxJJCg9rbXNfa2V5X3Zl",
            "cnNpb24YAiABKAlCMOBBA/pBKgooY2xvdWRrbXMuZ29vZ2xlYXBpcy5jb20v",
            "Q3J5cHRvS2V5VmVyc2lvbiJxCg5FbmNyeXB0aW9uVHlwZRIfChtFTkNSWVBU",
            "SU9OX1RZUEVfVU5TUEVDSUZJRUQQABIdChlHT09HTEVfREVGQVVMVF9FTkNS",
            "WVBUSU9OEAESHwobQ1VTVE9NRVJfTUFOQUdFRF9FTkNSWVBUSU9OEAIixwMK",
            "CFNuYXBzaG90EgwKBG5hbWUYASABKAkSNQoMc291cmNlX3RhYmxlGAIgASgL",
            "Mh8uZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLlRhYmxlEhcKD2RhdGFfc2l6",
            "ZV9ieXRlcxgDIAEoAxIvCgtjcmVhdGVfdGltZRgEIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXASLwoLZGVsZXRlX3RpbWUYBSABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wEjcKBXN0YXRlGAYgASgOMiguZ29vZ2xl",
            "LmJpZ3RhYmxlLmFkbWluLnYyLlNuYXBzaG90LlN0YXRlEhMKC2Rlc2NyaXB0",
            "aW9uGAcgASgJIjUKBVN0YXRlEhMKD1NUQVRFX05PVF9LTk9XThAAEgkKBVJF",
            "QURZEAESDAoIQ1JFQVRJTkcQAjp26kFzCiBiaWd0YWJsZS5nb29nbGVhcGlz",
            "LmNvbS9TbmFwc2hvdBJPcHJvamVjdHMve3Byb2plY3R9L2luc3RhbmNlcy97",
            "aW5zdGFuY2V9L2NsdXN0ZXJzL3tjbHVzdGVyfS9zbmFwc2hvdHMve3NuYXBz",
            "aG90fSKfBAoGQmFja3VwEhEKBG5hbWUYASABKAlCA+BBAxIcCgxzb3VyY2Vf",
            "dGFibGUYAiABKAlCBuBBBeBBAhI0CgtleHBpcmVfdGltZRgDIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAhIzCgpzdGFydF90aW1lGAQg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjEKCGVuZF90",
            "aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEhcK",
            "CnNpemVfYnl0ZXMYBiABKANCA+BBAxI6CgVzdGF0ZRgHIAEoDjImLmdvb2ds",
            "ZS5iaWd0YWJsZS5hZG1pbi52Mi5CYWNrdXAuU3RhdGVCA+BBAxJGCg9lbmNy",
            "eXB0aW9uX2luZm8YCSABKAsyKC5nb29nbGUuYmlndGFibGUuYWRtaW4udjIu",
            "RW5jcnlwdGlvbkluZm9CA+BBAyI3CgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJ",
            "RklFRBAAEgwKCENSRUFUSU5HEAESCQoFUkVBRFkQAjpw6kFtCh5iaWd0YWJs",
            "ZS5nb29nbGVhcGlzLmNvbS9CYWNrdXASS3Byb2plY3RzL3twcm9qZWN0fS9p",
            "bnN0YW5jZXMve2luc3RhbmNlfS9jbHVzdGVycy97Y2x1c3Rlcn0vYmFja3Vw",
            "cy97YmFja3VwfSKkAQoKQmFja3VwSW5mbxITCgZiYWNrdXAYASABKAlCA+BB",
            "AxIzCgpzdGFydF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcEID4EEDEjEKCGVuZF90aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcEID4EEDEhkKDHNvdXJjZV90YWJsZRgEIAEoCUID4EEDKkQK",
            "EVJlc3RvcmVTb3VyY2VUeXBlEiMKH1JFU1RPUkVfU09VUkNFX1RZUEVfVU5T",
            "UEVDSUZJRUQQABIKCgZCQUNLVVAQAUL8AgocY29tLmdvb2dsZS5iaWd0YWJs",
            "ZS5hZG1pbi52MkIKVGFibGVQcm90b1ABWj1nb29nbGUuZ29sYW5nLm9yZy9n",
            "ZW5wcm90by9nb29nbGVhcGlzL2JpZ3RhYmxlL2FkbWluL3YyO2FkbWluqgIe",
            "R29vZ2xlLkNsb3VkLkJpZ3RhYmxlLkFkbWluLlYyygIeR29vZ2xlXENsb3Vk",
            "XEJpZ3RhYmxlXEFkbWluXFYy6gIiR29vZ2xlOjpDbG91ZDo6QmlndGFibGU6",
            "OkFkbWluOjpWMupBpgEKKGNsb3Vka21zLmdvb2dsZWFwaXMuY29tL0NyeXB0",
            "b0tleVZlcnNpb24SenByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xv",
            "Y2F0aW9ufS9rZXlSaW5ncy97a2V5X3Jpbmd9L2NyeXB0b0tleXMve2NyeXB0",
            "b19rZXl9L2NyeXB0b0tleVZlcnNpb25zL3tjcnlwdG9fa2V5X3ZlcnNpb259",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Bigtable.Admin.V2.RestoreSourceType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.RestoreInfo), global::Google.Cloud.Bigtable.Admin.V2.RestoreInfo.Parser, new[]{ "SourceType", "BackupInfo" }, new[]{ "SourceInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.Table), global::Google.Cloud.Bigtable.Admin.V2.Table.Parser, new[]{ "Name", "ClusterStates", "ColumnFamilies", "Granularity", "RestoreInfo" }, null, new[]{ typeof(global::Google.Cloud.Bigtable.Admin.V2.Table.Types.TimestampGranularity), typeof(global::Google.Cloud.Bigtable.Admin.V2.Table.Types.View) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState), global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Parser, new[]{ "ReplicationState", "EncryptionInfo" }, null, new[]{ typeof(global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Types.ReplicationState) }, null, null),
            null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily), global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily.Parser, new[]{ "GcRule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.GcRule), global::Google.Cloud.Bigtable.Admin.V2.GcRule.Parser, new[]{ "MaxNumVersions", "MaxAge", "Intersection", "Union" }, new[]{ "Rule" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Intersection), global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Intersection.Parser, new[]{ "Rules" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Union), global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Union.Parser, new[]{ "Rules" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo), global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Parser, new[]{ "EncryptionType", "EncryptionStatus", "KmsKeyVersion" }, null, new[]{ typeof(global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Types.EncryptionType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.Snapshot), global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Parser, new[]{ "Name", "SourceTable", "DataSizeBytes", "CreateTime", "DeleteTime", "State", "Description" }, null, new[]{ typeof(global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.Backup), global::Google.Cloud.Bigtable.Admin.V2.Backup.Parser, new[]{ "Name", "SourceTable", "ExpireTime", "StartTime", "EndTime", "SizeBytes", "State", "EncryptionInfo" }, null, new[]{ typeof(global::Google.Cloud.Bigtable.Admin.V2.Backup.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.BackupInfo), global::Google.Cloud.Bigtable.Admin.V2.BackupInfo.Parser, new[]{ "Backup", "StartTime", "EndTime", "SourceTable" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Indicates the type of the restore source.
  /// </summary>
  public enum RestoreSourceType {
    /// <summary>
    /// No restore associated.
    /// </summary>
    [pbr::OriginalName("RESTORE_SOURCE_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// A backup was used as the source of the restore.
    /// </summary>
    [pbr::OriginalName("BACKUP")] Backup = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Information about a table restore.
  /// </summary>
  public sealed partial class RestoreInfo : pb::IMessage<RestoreInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RestoreInfo> _parser = new pb::MessageParser<RestoreInfo>(() => new RestoreInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestoreInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.TableReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreInfo(RestoreInfo other) : this() {
      sourceType_ = other.sourceType_;
      switch (other.SourceInfoCase) {
        case SourceInfoOneofCase.BackupInfo:
          BackupInfo = other.BackupInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreInfo Clone() {
      return new RestoreInfo(this);
    }

    /// <summary>Field number for the "source_type" field.</summary>
    public const int SourceTypeFieldNumber = 1;
    private global::Google.Cloud.Bigtable.Admin.V2.RestoreSourceType sourceType_ = global::Google.Cloud.Bigtable.Admin.V2.RestoreSourceType.Unspecified;
    /// <summary>
    /// The type of the restore source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.RestoreSourceType SourceType {
      get { return sourceType_; }
      set {
        sourceType_ = value;
      }
    }

    /// <summary>Field number for the "backup_info" field.</summary>
    public const int BackupInfoFieldNumber = 2;
    /// <summary>
    /// Information about the backup used to restore the table. The backup
    /// may no longer exist.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.BackupInfo BackupInfo {
      get { return sourceInfoCase_ == SourceInfoOneofCase.BackupInfo ? (global::Google.Cloud.Bigtable.Admin.V2.BackupInfo) sourceInfo_ : null; }
      set {
        sourceInfo_ = value;
        sourceInfoCase_ = value == null ? SourceInfoOneofCase.None : SourceInfoOneofCase.BackupInfo;
      }
    }

    private object sourceInfo_;
    /// <summary>Enum of possible cases for the "source_info" oneof.</summary>
    public enum SourceInfoOneofCase {
      None = 0,
      BackupInfo = 2,
    }
    private SourceInfoOneofCase sourceInfoCase_ = SourceInfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceInfoOneofCase SourceInfoCase {
      get { return sourceInfoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSourceInfo() {
      sourceInfoCase_ = SourceInfoOneofCase.None;
      sourceInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestoreInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestoreInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceType != other.SourceType) return false;
      if (!object.Equals(BackupInfo, other.BackupInfo)) return false;
      if (SourceInfoCase != other.SourceInfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceType != global::Google.Cloud.Bigtable.Admin.V2.RestoreSourceType.Unspecified) hash ^= SourceType.GetHashCode();
      if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) hash ^= BackupInfo.GetHashCode();
      hash ^= (int) sourceInfoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SourceType != global::Google.Cloud.Bigtable.Admin.V2.RestoreSourceType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SourceType);
      }
      if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(BackupInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SourceType != global::Google.Cloud.Bigtable.Admin.V2.RestoreSourceType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SourceType);
      }
      if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(BackupInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceType != global::Google.Cloud.Bigtable.Admin.V2.RestoreSourceType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SourceType);
      }
      if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackupInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestoreInfo other) {
      if (other == null) {
        return;
      }
      if (other.SourceType != global::Google.Cloud.Bigtable.Admin.V2.RestoreSourceType.Unspecified) {
        SourceType = other.SourceType;
      }
      switch (other.SourceInfoCase) {
        case SourceInfoOneofCase.BackupInfo:
          if (BackupInfo == null) {
            BackupInfo = new global::Google.Cloud.Bigtable.Admin.V2.BackupInfo();
          }
          BackupInfo.MergeFrom(other.BackupInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SourceType = (global::Google.Cloud.Bigtable.Admin.V2.RestoreSourceType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Google.Cloud.Bigtable.Admin.V2.BackupInfo subBuilder = new global::Google.Cloud.Bigtable.Admin.V2.BackupInfo();
            if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
              subBuilder.MergeFrom(BackupInfo);
            }
            input.ReadMessage(subBuilder);
            BackupInfo = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SourceType = (global::Google.Cloud.Bigtable.Admin.V2.RestoreSourceType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Google.Cloud.Bigtable.Admin.V2.BackupInfo subBuilder = new global::Google.Cloud.Bigtable.Admin.V2.BackupInfo();
            if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
              subBuilder.MergeFrom(BackupInfo);
            }
            input.ReadMessage(subBuilder);
            BackupInfo = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A collection of user data indexed by row, column, and timestamp.
  /// Each table is served using the resources of its parent cluster.
  /// </summary>
  public sealed partial class Table : pb::IMessage<Table>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Table> _parser = new pb::MessageParser<Table>(() => new Table());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Table> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.TableReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Table() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Table(Table other) : this() {
      name_ = other.name_;
      clusterStates_ = other.clusterStates_.Clone();
      columnFamilies_ = other.columnFamilies_.Clone();
      granularity_ = other.granularity_;
      restoreInfo_ = other.restoreInfo_ != null ? other.restoreInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Table Clone() {
      return new Table(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The unique name of the table. Values are of the form
    /// `projects/{project}/instances/{instance}/tables/[_a-zA-Z0-9][-_.a-zA-Z0-9]*`.
    /// Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_states" field.</summary>
    public const int ClusterStatesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState>.Codec _map_clusterStates_codec
        = new pbc::MapField<string, global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Parser), 18);
    private readonly pbc::MapField<string, global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState> clusterStates_ = new pbc::MapField<string, global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState>();
    /// <summary>
    /// Output only. Map from cluster ID to per-cluster table state.
    /// If it could not be determined whether or not the table has data in a
    /// particular cluster (for example, if its zone is unavailable), then
    /// there will be an entry for the cluster with UNKNOWN `replication_status`.
    /// Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState> ClusterStates {
      get { return clusterStates_; }
    }

    /// <summary>Field number for the "column_families" field.</summary>
    public const int ColumnFamiliesFieldNumber = 3;
    private static readonly pbc::MapField<string, global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily>.Codec _map_columnFamilies_codec
        = new pbc::MapField<string, global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily.Parser), 26);
    private readonly pbc::MapField<string, global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily> columnFamilies_ = new pbc::MapField<string, global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily>();
    /// <summary>
    /// (`CreationOnly`)
    /// The column families configured for this table, mapped by column family ID.
    /// Views: `SCHEMA_VIEW`, `FULL`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily> ColumnFamilies {
      get { return columnFamilies_; }
    }

    /// <summary>Field number for the "granularity" field.</summary>
    public const int GranularityFieldNumber = 4;
    private global::Google.Cloud.Bigtable.Admin.V2.Table.Types.TimestampGranularity granularity_ = global::Google.Cloud.Bigtable.Admin.V2.Table.Types.TimestampGranularity.Unspecified;
    /// <summary>
    /// (`CreationOnly`)
    /// The granularity (i.e. `MILLIS`) at which timestamps are stored in
    /// this table. Timestamps not matching the granularity will be rejected.
    /// If unspecified at creation time, the value will be set to `MILLIS`.
    /// Views: `SCHEMA_VIEW`, `FULL`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.Table.Types.TimestampGranularity Granularity {
      get { return granularity_; }
      set {
        granularity_ = value;
      }
    }

    /// <summary>Field number for the "restore_info" field.</summary>
    public const int RestoreInfoFieldNumber = 6;
    private global::Google.Cloud.Bigtable.Admin.V2.RestoreInfo restoreInfo_;
    /// <summary>
    /// Output only. If this table was restored from another data source (e.g. a
    /// backup), this field will be populated with information about the restore.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.RestoreInfo RestoreInfo {
      get { return restoreInfo_; }
      set {
        restoreInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Table);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Table other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!ClusterStates.Equals(other.ClusterStates)) return false;
      if (!ColumnFamilies.Equals(other.ColumnFamilies)) return false;
      if (Granularity != other.Granularity) return false;
      if (!object.Equals(RestoreInfo, other.RestoreInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= ClusterStates.GetHashCode();
      hash ^= ColumnFamilies.GetHashCode();
      if (Granularity != global::Google.Cloud.Bigtable.Admin.V2.Table.Types.TimestampGranularity.Unspecified) hash ^= Granularity.GetHashCode();
      if (restoreInfo_ != null) hash ^= RestoreInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      clusterStates_.WriteTo(output, _map_clusterStates_codec);
      columnFamilies_.WriteTo(output, _map_columnFamilies_codec);
      if (Granularity != global::Google.Cloud.Bigtable.Admin.V2.Table.Types.TimestampGranularity.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Granularity);
      }
      if (restoreInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RestoreInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      clusterStates_.WriteTo(ref output, _map_clusterStates_codec);
      columnFamilies_.WriteTo(ref output, _map_columnFamilies_codec);
      if (Granularity != global::Google.Cloud.Bigtable.Admin.V2.Table.Types.TimestampGranularity.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Granularity);
      }
      if (restoreInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RestoreInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += clusterStates_.CalculateSize(_map_clusterStates_codec);
      size += columnFamilies_.CalculateSize(_map_columnFamilies_codec);
      if (Granularity != global::Google.Cloud.Bigtable.Admin.V2.Table.Types.TimestampGranularity.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Granularity);
      }
      if (restoreInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RestoreInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Table other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      clusterStates_.Add(other.clusterStates_);
      columnFamilies_.Add(other.columnFamilies_);
      if (other.Granularity != global::Google.Cloud.Bigtable.Admin.V2.Table.Types.TimestampGranularity.Unspecified) {
        Granularity = other.Granularity;
      }
      if (other.restoreInfo_ != null) {
        if (restoreInfo_ == null) {
          RestoreInfo = new global::Google.Cloud.Bigtable.Admin.V2.RestoreInfo();
        }
        RestoreInfo.MergeFrom(other.RestoreInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            clusterStates_.AddEntriesFrom(input, _map_clusterStates_codec);
            break;
          }
          case 26: {
            columnFamilies_.AddEntriesFrom(input, _map_columnFamilies_codec);
            break;
          }
          case 32: {
            Granularity = (global::Google.Cloud.Bigtable.Admin.V2.Table.Types.TimestampGranularity) input.ReadEnum();
            break;
          }
          case 50: {
            if (restoreInfo_ == null) {
              RestoreInfo = new global::Google.Cloud.Bigtable.Admin.V2.RestoreInfo();
            }
            input.ReadMessage(RestoreInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            clusterStates_.AddEntriesFrom(ref input, _map_clusterStates_codec);
            break;
          }
          case 26: {
            columnFamilies_.AddEntriesFrom(ref input, _map_columnFamilies_codec);
            break;
          }
          case 32: {
            Granularity = (global::Google.Cloud.Bigtable.Admin.V2.Table.Types.TimestampGranularity) input.ReadEnum();
            break;
          }
          case 50: {
            if (restoreInfo_ == null) {
              RestoreInfo = new global::Google.Cloud.Bigtable.Admin.V2.RestoreInfo();
            }
            input.ReadMessage(RestoreInfo);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Table message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible timestamp granularities to use when keeping multiple versions
      /// of data in a table.
      /// </summary>
      public enum TimestampGranularity {
        /// <summary>
        /// The user did not specify a granularity. Should not be returned.
        /// When specified during table creation, MILLIS will be used.
        /// </summary>
        [pbr::OriginalName("TIMESTAMP_GRANULARITY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The table keeps data versioned at a granularity of 1ms.
        /// </summary>
        [pbr::OriginalName("MILLIS")] Millis = 1,
      }

      /// <summary>
      /// Defines a view over a table's fields.
      /// </summary>
      public enum View {
        /// <summary>
        /// Uses the default view for each method as documented in its request.
        /// </summary>
        [pbr::OriginalName("VIEW_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Only populates `name`.
        /// </summary>
        [pbr::OriginalName("NAME_ONLY")] NameOnly = 1,
        /// <summary>
        /// Only populates `name` and fields related to the table's schema.
        /// </summary>
        [pbr::OriginalName("SCHEMA_VIEW")] SchemaView = 2,
        /// <summary>
        /// Only populates `name` and fields related to the table's replication
        /// state.
        /// </summary>
        [pbr::OriginalName("REPLICATION_VIEW")] ReplicationView = 3,
        /// <summary>
        /// Only populates 'name' and fields related to the table's encryption state.
        /// </summary>
        [pbr::OriginalName("ENCRYPTION_VIEW")] EncryptionView = 5,
        /// <summary>
        /// Populates all fields.
        /// </summary>
        [pbr::OriginalName("FULL")] Full = 4,
      }

      /// <summary>
      /// The state of a table's data in a particular cluster.
      /// </summary>
      public sealed partial class ClusterState : pb::IMessage<ClusterState>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ClusterState> _parser = new pb::MessageParser<ClusterState>(() => new ClusterState());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClusterState> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Bigtable.Admin.V2.Table.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClusterState() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClusterState(ClusterState other) : this() {
          replicationState_ = other.replicationState_;
          encryptionInfo_ = other.encryptionInfo_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClusterState Clone() {
          return new ClusterState(this);
        }

        /// <summary>Field number for the "replication_state" field.</summary>
        public const int ReplicationStateFieldNumber = 1;
        private global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Types.ReplicationState replicationState_ = global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Types.ReplicationState.StateNotKnown;
        /// <summary>
        /// Output only. The state of replication for the table in this cluster.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Types.ReplicationState ReplicationState {
          get { return replicationState_; }
          set {
            replicationState_ = value;
          }
        }

        /// <summary>Field number for the "encryption_info" field.</summary>
        public const int EncryptionInfoFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo> _repeated_encryptionInfo_codec
            = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo> encryptionInfo_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo>();
        /// <summary>
        /// Output only. The encryption information for the table in this cluster.
        /// If the encryption key protecting this resource is customer managed, then
        /// its version can be rotated in Cloud Key Management Service (Cloud KMS).
        /// The primary version of the key and its status will be reflected here when
        /// changes propagate from Cloud KMS.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo> EncryptionInfo {
          get { return encryptionInfo_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClusterState);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClusterState other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ReplicationState != other.ReplicationState) return false;
          if(!encryptionInfo_.Equals(other.encryptionInfo_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ReplicationState != global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Types.ReplicationState.StateNotKnown) hash ^= ReplicationState.GetHashCode();
          hash ^= encryptionInfo_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ReplicationState != global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Types.ReplicationState.StateNotKnown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ReplicationState);
          }
          encryptionInfo_.WriteTo(output, _repeated_encryptionInfo_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ReplicationState != global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Types.ReplicationState.StateNotKnown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ReplicationState);
          }
          encryptionInfo_.WriteTo(ref output, _repeated_encryptionInfo_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ReplicationState != global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Types.ReplicationState.StateNotKnown) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReplicationState);
          }
          size += encryptionInfo_.CalculateSize(_repeated_encryptionInfo_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClusterState other) {
          if (other == null) {
            return;
          }
          if (other.ReplicationState != global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Types.ReplicationState.StateNotKnown) {
            ReplicationState = other.ReplicationState;
          }
          encryptionInfo_.Add(other.encryptionInfo_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ReplicationState = (global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Types.ReplicationState) input.ReadEnum();
                break;
              }
              case 18: {
                encryptionInfo_.AddEntriesFrom(input, _repeated_encryptionInfo_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ReplicationState = (global::Google.Cloud.Bigtable.Admin.V2.Table.Types.ClusterState.Types.ReplicationState) input.ReadEnum();
                break;
              }
              case 18: {
                encryptionInfo_.AddEntriesFrom(ref input, _repeated_encryptionInfo_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the ClusterState message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Table replication states.
          /// </summary>
          public enum ReplicationState {
            /// <summary>
            /// The replication state of the table is unknown in this cluster.
            /// </summary>
            [pbr::OriginalName("STATE_NOT_KNOWN")] StateNotKnown = 0,
            /// <summary>
            /// The cluster was recently created, and the table must finish copying
            /// over pre-existing data from other clusters before it can begin
            /// receiving live replication updates and serving Data API requests.
            /// </summary>
            [pbr::OriginalName("INITIALIZING")] Initializing = 1,
            /// <summary>
            /// The table is temporarily unable to serve Data API requests from this
            /// cluster due to planned internal maintenance.
            /// </summary>
            [pbr::OriginalName("PLANNED_MAINTENANCE")] PlannedMaintenance = 2,
            /// <summary>
            /// The table is temporarily unable to serve Data API requests from this
            /// cluster due to unplanned or emergency maintenance.
            /// </summary>
            [pbr::OriginalName("UNPLANNED_MAINTENANCE")] UnplannedMaintenance = 3,
            /// <summary>
            /// The table can serve Data API requests from this cluster. Depending on
            /// replication delay, reads may not immediately reflect the state of the
            /// table in other clusters.
            /// </summary>
            [pbr::OriginalName("READY")] Ready = 4,
            /// <summary>
            /// The table is fully created and ready for use after a restore, and is
            /// being optimized for performance. When optimizations are complete, the
            /// table will transition to `READY` state.
            /// </summary>
            [pbr::OriginalName("READY_OPTIMIZING")] ReadyOptimizing = 5,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// A set of columns within a table which share a common configuration.
  /// </summary>
  public sealed partial class ColumnFamily : pb::IMessage<ColumnFamily>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ColumnFamily> _parser = new pb::MessageParser<ColumnFamily>(() => new ColumnFamily());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ColumnFamily> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.TableReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnFamily() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnFamily(ColumnFamily other) : this() {
      gcRule_ = other.gcRule_ != null ? other.gcRule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnFamily Clone() {
      return new ColumnFamily(this);
    }

    /// <summary>Field number for the "gc_rule" field.</summary>
    public const int GcRuleFieldNumber = 1;
    private global::Google.Cloud.Bigtable.Admin.V2.GcRule gcRule_;
    /// <summary>
    /// Garbage collection rule specified as a protobuf.
    /// Must serialize to at most 500 bytes.
    ///
    /// NOTE: Garbage collection executes opportunistically in the background, and
    /// so it's possible for reads to return a cell even if it matches the active
    /// GC expression for its family.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.GcRule GcRule {
      get { return gcRule_; }
      set {
        gcRule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ColumnFamily);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ColumnFamily other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GcRule, other.GcRule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (gcRule_ != null) hash ^= GcRule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gcRule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GcRule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gcRule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GcRule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (gcRule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GcRule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ColumnFamily other) {
      if (other == null) {
        return;
      }
      if (other.gcRule_ != null) {
        if (gcRule_ == null) {
          GcRule = new global::Google.Cloud.Bigtable.Admin.V2.GcRule();
        }
        GcRule.MergeFrom(other.GcRule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gcRule_ == null) {
              GcRule = new global::Google.Cloud.Bigtable.Admin.V2.GcRule();
            }
            input.ReadMessage(GcRule);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gcRule_ == null) {
              GcRule = new global::Google.Cloud.Bigtable.Admin.V2.GcRule();
            }
            input.ReadMessage(GcRule);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Rule for determining which cells to delete during garbage collection.
  /// </summary>
  public sealed partial class GcRule : pb::IMessage<GcRule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GcRule> _parser = new pb::MessageParser<GcRule>(() => new GcRule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GcRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.TableReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcRule(GcRule other) : this() {
      switch (other.RuleCase) {
        case RuleOneofCase.MaxNumVersions:
          MaxNumVersions = other.MaxNumVersions;
          break;
        case RuleOneofCase.MaxAge:
          MaxAge = other.MaxAge.Clone();
          break;
        case RuleOneofCase.Intersection:
          Intersection = other.Intersection.Clone();
          break;
        case RuleOneofCase.Union:
          Union = other.Union.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GcRule Clone() {
      return new GcRule(this);
    }

    /// <summary>Field number for the "max_num_versions" field.</summary>
    public const int MaxNumVersionsFieldNumber = 1;
    /// <summary>
    /// Delete all cells in a column except the most recent N.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxNumVersions {
      get { return ruleCase_ == RuleOneofCase.MaxNumVersions ? (int) rule_ : 0; }
      set {
        rule_ = value;
        ruleCase_ = RuleOneofCase.MaxNumVersions;
      }
    }

    /// <summary>Field number for the "max_age" field.</summary>
    public const int MaxAgeFieldNumber = 2;
    /// <summary>
    /// Delete cells in a column older than the given age.
    /// Values must be at least one millisecond, and will be truncated to
    /// microsecond granularity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration MaxAge {
      get { return ruleCase_ == RuleOneofCase.MaxAge ? (global::Google.Protobuf.WellKnownTypes.Duration) rule_ : null; }
      set {
        rule_ = value;
        ruleCase_ = value == null ? RuleOneofCase.None : RuleOneofCase.MaxAge;
      }
    }

    /// <summary>Field number for the "intersection" field.</summary>
    public const int IntersectionFieldNumber = 3;
    /// <summary>
    /// Delete cells that would be deleted by every nested rule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Intersection Intersection {
      get { return ruleCase_ == RuleOneofCase.Intersection ? (global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Intersection) rule_ : null; }
      set {
        rule_ = value;
        ruleCase_ = value == null ? RuleOneofCase.None : RuleOneofCase.Intersection;
      }
    }

    /// <summary>Field number for the "union" field.</summary>
    public const int UnionFieldNumber = 4;
    /// <summary>
    /// Delete cells that would be deleted by any nested rule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Union Union {
      get { return ruleCase_ == RuleOneofCase.Union ? (global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Union) rule_ : null; }
      set {
        rule_ = value;
        ruleCase_ = value == null ? RuleOneofCase.None : RuleOneofCase.Union;
      }
    }

    private object rule_;
    /// <summary>Enum of possible cases for the "rule" oneof.</summary>
    public enum RuleOneofCase {
      None = 0,
      MaxNumVersions = 1,
      MaxAge = 2,
      Intersection = 3,
      Union = 4,
    }
    private RuleOneofCase ruleCase_ = RuleOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleOneofCase RuleCase {
      get { return ruleCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRule() {
      ruleCase_ = RuleOneofCase.None;
      rule_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GcRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GcRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxNumVersions != other.MaxNumVersions) return false;
      if (!object.Equals(MaxAge, other.MaxAge)) return false;
      if (!object.Equals(Intersection, other.Intersection)) return false;
      if (!object.Equals(Union, other.Union)) return false;
      if (RuleCase != other.RuleCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ruleCase_ == RuleOneofCase.MaxNumVersions) hash ^= MaxNumVersions.GetHashCode();
      if (ruleCase_ == RuleOneofCase.MaxAge) hash ^= MaxAge.GetHashCode();
      if (ruleCase_ == RuleOneofCase.Intersection) hash ^= Intersection.GetHashCode();
      if (ruleCase_ == RuleOneofCase.Union) hash ^= Union.GetHashCode();
      hash ^= (int) ruleCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ruleCase_ == RuleOneofCase.MaxNumVersions) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxNumVersions);
      }
      if (ruleCase_ == RuleOneofCase.MaxAge) {
        output.WriteRawTag(18);
        output.WriteMessage(MaxAge);
      }
      if (ruleCase_ == RuleOneofCase.Intersection) {
        output.WriteRawTag(26);
        output.WriteMessage(Intersection);
      }
      if (ruleCase_ == RuleOneofCase.Union) {
        output.WriteRawTag(34);
        output.WriteMessage(Union);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ruleCase_ == RuleOneofCase.MaxNumVersions) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxNumVersions);
      }
      if (ruleCase_ == RuleOneofCase.MaxAge) {
        output.WriteRawTag(18);
        output.WriteMessage(MaxAge);
      }
      if (ruleCase_ == RuleOneofCase.Intersection) {
        output.WriteRawTag(26);
        output.WriteMessage(Intersection);
      }
      if (ruleCase_ == RuleOneofCase.Union) {
        output.WriteRawTag(34);
        output.WriteMessage(Union);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ruleCase_ == RuleOneofCase.MaxNumVersions) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNumVersions);
      }
      if (ruleCase_ == RuleOneofCase.MaxAge) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxAge);
      }
      if (ruleCase_ == RuleOneofCase.Intersection) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Intersection);
      }
      if (ruleCase_ == RuleOneofCase.Union) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Union);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GcRule other) {
      if (other == null) {
        return;
      }
      switch (other.RuleCase) {
        case RuleOneofCase.MaxNumVersions:
          MaxNumVersions = other.MaxNumVersions;
          break;
        case RuleOneofCase.MaxAge:
          if (MaxAge == null) {
            MaxAge = new global::Google.Protobuf.WellKnownTypes.Duration();
          }
          MaxAge.MergeFrom(other.MaxAge);
          break;
        case RuleOneofCase.Intersection:
          if (Intersection == null) {
            Intersection = new global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Intersection();
          }
          Intersection.MergeFrom(other.Intersection);
          break;
        case RuleOneofCase.Union:
          if (Union == null) {
            Union = new global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Union();
          }
          Union.MergeFrom(other.Union);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxNumVersions = input.ReadInt32();
            break;
          }
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
            if (ruleCase_ == RuleOneofCase.MaxAge) {
              subBuilder.MergeFrom(MaxAge);
            }
            input.ReadMessage(subBuilder);
            MaxAge = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Intersection subBuilder = new global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Intersection();
            if (ruleCase_ == RuleOneofCase.Intersection) {
              subBuilder.MergeFrom(Intersection);
            }
            input.ReadMessage(subBuilder);
            Intersection = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Union subBuilder = new global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Union();
            if (ruleCase_ == RuleOneofCase.Union) {
              subBuilder.MergeFrom(Union);
            }
            input.ReadMessage(subBuilder);
            Union = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxNumVersions = input.ReadInt32();
            break;
          }
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
            if (ruleCase_ == RuleOneofCase.MaxAge) {
              subBuilder.MergeFrom(MaxAge);
            }
            input.ReadMessage(subBuilder);
            MaxAge = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Intersection subBuilder = new global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Intersection();
            if (ruleCase_ == RuleOneofCase.Intersection) {
              subBuilder.MergeFrom(Intersection);
            }
            input.ReadMessage(subBuilder);
            Intersection = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Union subBuilder = new global::Google.Cloud.Bigtable.Admin.V2.GcRule.Types.Union();
            if (ruleCase_ == RuleOneofCase.Union) {
              subBuilder.MergeFrom(Union);
            }
            input.ReadMessage(subBuilder);
            Union = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GcRule message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A GcRule which deletes cells matching all of the given rules.
      /// </summary>
      public sealed partial class Intersection : pb::IMessage<Intersection>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Intersection> _parser = new pb::MessageParser<Intersection>(() => new Intersection());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Intersection> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Bigtable.Admin.V2.GcRule.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Intersection() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Intersection(Intersection other) : this() {
          rules_ = other.rules_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Intersection Clone() {
          return new Intersection(this);
        }

        /// <summary>Field number for the "rules" field.</summary>
        public const int RulesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.Admin.V2.GcRule> _repeated_rules_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Bigtable.Admin.V2.GcRule.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.GcRule> rules_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.GcRule>();
        /// <summary>
        /// Only delete cells which would be deleted by every element of `rules`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.GcRule> Rules {
          get { return rules_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Intersection);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Intersection other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!rules_.Equals(other.rules_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= rules_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          rules_.WriteTo(output, _repeated_rules_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          rules_.WriteTo(ref output, _repeated_rules_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += rules_.CalculateSize(_repeated_rules_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Intersection other) {
          if (other == null) {
            return;
          }
          rules_.Add(other.rules_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                rules_.AddEntriesFrom(input, _repeated_rules_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                rules_.AddEntriesFrom(ref input, _repeated_rules_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A GcRule which deletes cells matching any of the given rules.
      /// </summary>
      public sealed partial class Union : pb::IMessage<Union>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Union> _parser = new pb::MessageParser<Union>(() => new Union());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Union> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Bigtable.Admin.V2.GcRule.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Union() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Union(Union other) : this() {
          rules_ = other.rules_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Union Clone() {
          return new Union(this);
        }

        /// <summary>Field number for the "rules" field.</summary>
        public const int RulesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.Admin.V2.GcRule> _repeated_rules_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Bigtable.Admin.V2.GcRule.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.GcRule> rules_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.GcRule>();
        /// <summary>
        /// Delete cells which would be deleted by any element of `rules`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.GcRule> Rules {
          get { return rules_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Union);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Union other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!rules_.Equals(other.rules_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= rules_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          rules_.WriteTo(output, _repeated_rules_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          rules_.WriteTo(ref output, _repeated_rules_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += rules_.CalculateSize(_repeated_rules_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Union other) {
          if (other == null) {
            return;
          }
          rules_.Add(other.rules_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                rules_.AddEntriesFrom(input, _repeated_rules_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                rules_.AddEntriesFrom(ref input, _repeated_rules_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Encryption information for a given resource.
  /// If this resource is protected with customer managed encryption, the in-use
  /// Cloud Key Management Service (Cloud KMS) key version is specified along with
  /// its status.
  /// </summary>
  public sealed partial class EncryptionInfo : pb::IMessage<EncryptionInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EncryptionInfo> _parser = new pb::MessageParser<EncryptionInfo>(() => new EncryptionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncryptionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.TableReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionInfo(EncryptionInfo other) : this() {
      encryptionType_ = other.encryptionType_;
      encryptionStatus_ = other.encryptionStatus_ != null ? other.encryptionStatus_.Clone() : null;
      kmsKeyVersion_ = other.kmsKeyVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionInfo Clone() {
      return new EncryptionInfo(this);
    }

    /// <summary>Field number for the "encryption_type" field.</summary>
    public const int EncryptionTypeFieldNumber = 3;
    private global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Types.EncryptionType encryptionType_ = global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Types.EncryptionType.Unspecified;
    /// <summary>
    /// Output only. The type of encryption used to protect this resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Types.EncryptionType EncryptionType {
      get { return encryptionType_; }
      set {
        encryptionType_ = value;
      }
    }

    /// <summary>Field number for the "encryption_status" field.</summary>
    public const int EncryptionStatusFieldNumber = 4;
    private global::Google.Rpc.Status encryptionStatus_;
    /// <summary>
    /// Output only. The status of encrypt/decrypt calls on underlying data for
    /// this resource. Regardless of status, the existing data is always encrypted
    /// at rest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status EncryptionStatus {
      get { return encryptionStatus_; }
      set {
        encryptionStatus_ = value;
      }
    }

    /// <summary>Field number for the "kms_key_version" field.</summary>
    public const int KmsKeyVersionFieldNumber = 2;
    private string kmsKeyVersion_ = "";
    /// <summary>
    /// Output only. The version of the Cloud KMS key specified in the parent
    /// cluster that is in use for the data underlying this table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KmsKeyVersion {
      get { return kmsKeyVersion_; }
      set {
        kmsKeyVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncryptionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncryptionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EncryptionType != other.EncryptionType) return false;
      if (!object.Equals(EncryptionStatus, other.EncryptionStatus)) return false;
      if (KmsKeyVersion != other.KmsKeyVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EncryptionType != global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Types.EncryptionType.Unspecified) hash ^= EncryptionType.GetHashCode();
      if (encryptionStatus_ != null) hash ^= EncryptionStatus.GetHashCode();
      if (KmsKeyVersion.Length != 0) hash ^= KmsKeyVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (KmsKeyVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(KmsKeyVersion);
      }
      if (EncryptionType != global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Types.EncryptionType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) EncryptionType);
      }
      if (encryptionStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EncryptionStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (KmsKeyVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(KmsKeyVersion);
      }
      if (EncryptionType != global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Types.EncryptionType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) EncryptionType);
      }
      if (encryptionStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EncryptionStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EncryptionType != global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Types.EncryptionType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EncryptionType);
      }
      if (encryptionStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptionStatus);
      }
      if (KmsKeyVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KmsKeyVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncryptionInfo other) {
      if (other == null) {
        return;
      }
      if (other.EncryptionType != global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Types.EncryptionType.Unspecified) {
        EncryptionType = other.EncryptionType;
      }
      if (other.encryptionStatus_ != null) {
        if (encryptionStatus_ == null) {
          EncryptionStatus = new global::Google.Rpc.Status();
        }
        EncryptionStatus.MergeFrom(other.EncryptionStatus);
      }
      if (other.KmsKeyVersion.Length != 0) {
        KmsKeyVersion = other.KmsKeyVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            KmsKeyVersion = input.ReadString();
            break;
          }
          case 24: {
            EncryptionType = (global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Types.EncryptionType) input.ReadEnum();
            break;
          }
          case 34: {
            if (encryptionStatus_ == null) {
              EncryptionStatus = new global::Google.Rpc.Status();
            }
            input.ReadMessage(EncryptionStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            KmsKeyVersion = input.ReadString();
            break;
          }
          case 24: {
            EncryptionType = (global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo.Types.EncryptionType) input.ReadEnum();
            break;
          }
          case 34: {
            if (encryptionStatus_ == null) {
              EncryptionStatus = new global::Google.Rpc.Status();
            }
            input.ReadMessage(EncryptionStatus);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the EncryptionInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible encryption types for a resource.
      /// </summary>
      public enum EncryptionType {
        /// <summary>
        /// Encryption type was not specified, though data at rest remains encrypted.
        /// </summary>
        [pbr::OriginalName("ENCRYPTION_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The data backing this resource is encrypted at rest with a key that is
        /// fully managed by Google. No key version or status will be populated.
        /// This is the default state.
        /// </summary>
        [pbr::OriginalName("GOOGLE_DEFAULT_ENCRYPTION")] GoogleDefaultEncryption = 1,
        /// <summary>
        /// The data backing this resource is encrypted at rest with a key that is
        /// managed by the customer.
        /// The in-use version of the key and its status are populated for
        /// CMEK-protected tables.
        /// CMEK-protected backups are pinned to the key version that was in use at
        /// the time the backup was taken. This key version is populated but its
        /// status is not tracked and is reported as `UNKNOWN`.
        /// </summary>
        [pbr::OriginalName("CUSTOMER_MANAGED_ENCRYPTION")] CustomerManagedEncryption = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// A snapshot of a table at a particular time. A snapshot can be used as a
  /// checkpoint for data restoration or a data source for a new table.
  ///
  /// Note: This is a private alpha release of Cloud Bigtable snapshots. This
  /// feature is not currently available to most Cloud Bigtable customers. This
  /// feature might be changed in backward-incompatible ways and is not recommended
  /// for production use. It is not subject to any SLA or deprecation policy.
  /// </summary>
  public sealed partial class Snapshot : pb::IMessage<Snapshot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Snapshot> _parser = new pb::MessageParser<Snapshot>(() => new Snapshot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Snapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.TableReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Snapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Snapshot(Snapshot other) : this() {
      name_ = other.name_;
      sourceTable_ = other.sourceTable_ != null ? other.sourceTable_.Clone() : null;
      dataSizeBytes_ = other.dataSizeBytes_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      deleteTime_ = other.deleteTime_ != null ? other.deleteTime_.Clone() : null;
      state_ = other.state_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Snapshot Clone() {
      return new Snapshot(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The unique name of the snapshot.
    /// Values are of the form
    /// `projects/{project}/instances/{instance}/clusters/{cluster}/snapshots/{snapshot}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_table" field.</summary>
    public const int SourceTableFieldNumber = 2;
    private global::Google.Cloud.Bigtable.Admin.V2.Table sourceTable_;
    /// <summary>
    /// Output only. The source table at the time the snapshot was taken.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.Table SourceTable {
      get { return sourceTable_; }
      set {
        sourceTable_ = value;
      }
    }

    /// <summary>Field number for the "data_size_bytes" field.</summary>
    public const int DataSizeBytesFieldNumber = 3;
    private long dataSizeBytes_;
    /// <summary>
    /// Output only. The size of the data in the source table at the time the
    /// snapshot was taken. In some cases, this value may be computed
    /// asynchronously via a background process and a placeholder of 0 will be used
    /// in the meantime.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DataSizeBytes {
      get { return dataSizeBytes_; }
      set {
        dataSizeBytes_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time when the snapshot is created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "delete_time" field.</summary>
    public const int DeleteTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp deleteTime_;
    /// <summary>
    /// Output only. The time when the snapshot will be deleted. The maximum amount
    /// of time a snapshot can stay active is 365 days. If 'ttl' is not specified,
    /// the default maximum of 365 days will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DeleteTime {
      get { return deleteTime_; }
      set {
        deleteTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Types.State state_ = global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Types.State.NotKnown;
    /// <summary>
    /// Output only. The current state of the snapshot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 7;
    private string description_ = "";
    /// <summary>
    /// Output only. Description of the snapshot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Snapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Snapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(SourceTable, other.SourceTable)) return false;
      if (DataSizeBytes != other.DataSizeBytes) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(DeleteTime, other.DeleteTime)) return false;
      if (State != other.State) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (sourceTable_ != null) hash ^= SourceTable.GetHashCode();
      if (DataSizeBytes != 0L) hash ^= DataSizeBytes.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (deleteTime_ != null) hash ^= DeleteTime.GetHashCode();
      if (State != global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Types.State.NotKnown) hash ^= State.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (sourceTable_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SourceTable);
      }
      if (DataSizeBytes != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(DataSizeBytes);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (deleteTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DeleteTime);
      }
      if (State != global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Types.State.NotKnown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) State);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (sourceTable_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SourceTable);
      }
      if (DataSizeBytes != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(DataSizeBytes);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (deleteTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DeleteTime);
      }
      if (State != global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Types.State.NotKnown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) State);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (sourceTable_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourceTable);
      }
      if (DataSizeBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DataSizeBytes);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (deleteTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteTime);
      }
      if (State != global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Types.State.NotKnown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Snapshot other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.sourceTable_ != null) {
        if (sourceTable_ == null) {
          SourceTable = new global::Google.Cloud.Bigtable.Admin.V2.Table();
        }
        SourceTable.MergeFrom(other.SourceTable);
      }
      if (other.DataSizeBytes != 0L) {
        DataSizeBytes = other.DataSizeBytes;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.deleteTime_ != null) {
        if (deleteTime_ == null) {
          DeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DeleteTime.MergeFrom(other.DeleteTime);
      }
      if (other.State != global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Types.State.NotKnown) {
        State = other.State;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (sourceTable_ == null) {
              SourceTable = new global::Google.Cloud.Bigtable.Admin.V2.Table();
            }
            input.ReadMessage(SourceTable);
            break;
          }
          case 24: {
            DataSizeBytes = input.ReadInt64();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (deleteTime_ == null) {
              DeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeleteTime);
            break;
          }
          case 48: {
            State = (global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Types.State) input.ReadEnum();
            break;
          }
          case 58: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (sourceTable_ == null) {
              SourceTable = new global::Google.Cloud.Bigtable.Admin.V2.Table();
            }
            input.ReadMessage(SourceTable);
            break;
          }
          case 24: {
            DataSizeBytes = input.ReadInt64();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (deleteTime_ == null) {
              DeleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeleteTime);
            break;
          }
          case 48: {
            State = (global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Types.State) input.ReadEnum();
            break;
          }
          case 58: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Snapshot message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible states of a snapshot.
      /// </summary>
      public enum State {
        /// <summary>
        /// The state of the snapshot could not be determined.
        /// </summary>
        [pbr::OriginalName("STATE_NOT_KNOWN")] NotKnown = 0,
        /// <summary>
        /// The snapshot has been successfully created and can serve all requests.
        /// </summary>
        [pbr::OriginalName("READY")] Ready = 1,
        /// <summary>
        /// The snapshot is currently being created, and may be destroyed if the
        /// creation process encounters an error. A snapshot may not be restored to a
        /// table while it is being created.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// A backup of a Cloud Bigtable table.
  /// </summary>
  public sealed partial class Backup : pb::IMessage<Backup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Backup> _parser = new pb::MessageParser<Backup>(() => new Backup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Backup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.TableReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Backup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Backup(Backup other) : this() {
      name_ = other.name_;
      sourceTable_ = other.sourceTable_;
      expireTime_ = other.expireTime_ != null ? other.expireTime_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      sizeBytes_ = other.sizeBytes_;
      state_ = other.state_;
      encryptionInfo_ = other.encryptionInfo_ != null ? other.encryptionInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Backup Clone() {
      return new Backup(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. A globally unique identifier for the backup which cannot be
    /// changed. Values are of the form
    /// `projects/{project}/instances/{instance}/clusters/{cluster}/
    ///    backups/[_a-zA-Z0-9][-_.a-zA-Z0-9]*`
    /// The final segment of the name must be between 1 and 50 characters
    /// in length.
    ///
    /// The backup is stored in the cluster identified by the prefix of the backup
    /// name of the form
    /// `projects/{project}/instances/{instance}/clusters/{cluster}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_table" field.</summary>
    public const int SourceTableFieldNumber = 2;
    private string sourceTable_ = "";
    /// <summary>
    /// Required. Immutable. Name of the table from which this backup was created.
    /// This needs to be in the same instance as the backup. Values are of the form
    /// `projects/{project}/instances/{instance}/tables/{source_table}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceTable {
      get { return sourceTable_; }
      set {
        sourceTable_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expire_time" field.</summary>
    public const int ExpireTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expireTime_;
    /// <summary>
    /// Required. The expiration time of the backup, with microseconds
    /// granularity that must be at least 6 hours and at most 30 days
    /// from the time the request is received. Once the `expire_time`
    /// has passed, Cloud Bigtable will delete the backup and free the
    /// resources used by the backup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Output only. `start_time` is the time that the backup was started
    /// (i.e. approximately the time the
    /// [CreateBackup][google.bigtable.admin.v2.BigtableTableAdmin.CreateBackup]
    /// request is received).  The row data in this backup will be no older than
    /// this timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Output only. `end_time` is the time that the backup was finished. The row
    /// data in the backup will be no newer than this timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "size_bytes" field.</summary>
    public const int SizeBytesFieldNumber = 6;
    private long sizeBytes_;
    /// <summary>
    /// Output only. Size of the backup in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SizeBytes {
      get { return sizeBytes_; }
      set {
        sizeBytes_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 7;
    private global::Google.Cloud.Bigtable.Admin.V2.Backup.Types.State state_ = global::Google.Cloud.Bigtable.Admin.V2.Backup.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current state of the backup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.Backup.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "encryption_info" field.</summary>
    public const int EncryptionInfoFieldNumber = 9;
    private global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo encryptionInfo_;
    /// <summary>
    /// Output only. The encryption information for the backup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo EncryptionInfo {
      get { return encryptionInfo_; }
      set {
        encryptionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Backup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Backup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (SourceTable != other.SourceTable) return false;
      if (!object.Equals(ExpireTime, other.ExpireTime)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (SizeBytes != other.SizeBytes) return false;
      if (State != other.State) return false;
      if (!object.Equals(EncryptionInfo, other.EncryptionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SourceTable.Length != 0) hash ^= SourceTable.GetHashCode();
      if (expireTime_ != null) hash ^= ExpireTime.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (SizeBytes != 0L) hash ^= SizeBytes.GetHashCode();
      if (State != global::Google.Cloud.Bigtable.Admin.V2.Backup.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (encryptionInfo_ != null) hash ^= EncryptionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SourceTable.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceTable);
      }
      if (expireTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpireTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (SizeBytes != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(SizeBytes);
      }
      if (State != global::Google.Cloud.Bigtable.Admin.V2.Backup.Types.State.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) State);
      }
      if (encryptionInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EncryptionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SourceTable.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceTable);
      }
      if (expireTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpireTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (SizeBytes != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(SizeBytes);
      }
      if (State != global::Google.Cloud.Bigtable.Admin.V2.Backup.Types.State.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) State);
      }
      if (encryptionInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EncryptionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SourceTable.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceTable);
      }
      if (expireTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireTime);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (SizeBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SizeBytes);
      }
      if (State != global::Google.Cloud.Bigtable.Admin.V2.Backup.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (encryptionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Backup other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SourceTable.Length != 0) {
        SourceTable = other.SourceTable;
      }
      if (other.expireTime_ != null) {
        if (expireTime_ == null) {
          ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpireTime.MergeFrom(other.ExpireTime);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.SizeBytes != 0L) {
        SizeBytes = other.SizeBytes;
      }
      if (other.State != global::Google.Cloud.Bigtable.Admin.V2.Backup.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.encryptionInfo_ != null) {
        if (encryptionInfo_ == null) {
          EncryptionInfo = new global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo();
        }
        EncryptionInfo.MergeFrom(other.EncryptionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            SourceTable = input.ReadString();
            break;
          }
          case 26: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 48: {
            SizeBytes = input.ReadInt64();
            break;
          }
          case 56: {
            State = (global::Google.Cloud.Bigtable.Admin.V2.Backup.Types.State) input.ReadEnum();
            break;
          }
          case 74: {
            if (encryptionInfo_ == null) {
              EncryptionInfo = new global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo();
            }
            input.ReadMessage(EncryptionInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            SourceTable = input.ReadString();
            break;
          }
          case 26: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 48: {
            SizeBytes = input.ReadInt64();
            break;
          }
          case 56: {
            State = (global::Google.Cloud.Bigtable.Admin.V2.Backup.Types.State) input.ReadEnum();
            break;
          }
          case 74: {
            if (encryptionInfo_ == null) {
              EncryptionInfo = new global::Google.Cloud.Bigtable.Admin.V2.EncryptionInfo();
            }
            input.ReadMessage(EncryptionInfo);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Backup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Indicates the current state of the backup.
      /// </summary>
      public enum State {
        /// <summary>
        /// Not specified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The pending backup is still being created. Operations on the
        /// backup may fail with `FAILED_PRECONDITION` in this state.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// The backup is complete and ready for use.
        /// </summary>
        [pbr::OriginalName("READY")] Ready = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Information about a backup.
  /// </summary>
  public sealed partial class BackupInfo : pb::IMessage<BackupInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BackupInfo> _parser = new pb::MessageParser<BackupInfo>(() => new BackupInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackupInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.TableReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackupInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackupInfo(BackupInfo other) : this() {
      backup_ = other.backup_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      sourceTable_ = other.sourceTable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackupInfo Clone() {
      return new BackupInfo(this);
    }

    /// <summary>Field number for the "backup" field.</summary>
    public const int BackupFieldNumber = 1;
    private string backup_ = "";
    /// <summary>
    /// Output only. Name of the backup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Backup {
      get { return backup_; }
      set {
        backup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Output only. The time that the backup was started. Row data in the backup
    /// will be no older than this timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Output only. This time that the backup was finished. Row data in the
    /// backup will be no newer than this timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "source_table" field.</summary>
    public const int SourceTableFieldNumber = 4;
    private string sourceTable_ = "";
    /// <summary>
    /// Output only. Name of the table the backup was created from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceTable {
      get { return sourceTable_; }
      set {
        sourceTable_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackupInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackupInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Backup != other.Backup) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (SourceTable != other.SourceTable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Backup.Length != 0) hash ^= Backup.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (SourceTable.Length != 0) hash ^= SourceTable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Backup.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Backup);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (SourceTable.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceTable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Backup.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Backup);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (SourceTable.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceTable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Backup.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Backup);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (SourceTable.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceTable);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackupInfo other) {
      if (other == null) {
        return;
      }
      if (other.Backup.Length != 0) {
        Backup = other.Backup;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.SourceTable.Length != 0) {
        SourceTable = other.SourceTable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Backup = input.ReadString();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 34: {
            SourceTable = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Backup = input.ReadString();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 34: {
            SourceTable = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
