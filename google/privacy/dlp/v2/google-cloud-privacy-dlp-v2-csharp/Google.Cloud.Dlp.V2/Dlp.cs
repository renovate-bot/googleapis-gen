// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/privacy/dlp/v2/dlp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Dlp.V2 {

  /// <summary>Holder for reflection information generated from google/privacy/dlp/v2/dlp.proto</summary>
  public static partial class DlpReflection {

    #region Descriptor
    /// <summary>File descriptor for google/privacy/dlp/v2/dlp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DlpReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9nb29nbGUvcHJpdmFjeS9kbHAvdjIvZGxwLnByb3RvEhVnb29nbGUucHJp",
            "dmFjeS5kbHAudjIaF2dvb2dsZS9hcGkvY2xpZW50LnByb3RvGh9nb29nbGUv",
            "YXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNl",
            "LnByb3RvGiNnb29nbGUvcHJpdmFjeS9kbHAvdjIvc3RvcmFnZS5wcm90bxoe",
            "Z29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9uLnByb3RvGhtnb29nbGUvcHJvdG9i",
            "dWYvZW1wdHkucHJvdG8aIGdvb2dsZS9wcm90b2J1Zi9maWVsZF9tYXNrLnBy",
            "b3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhdnb29nbGUv",
            "cnBjL3N0YXR1cy5wcm90bxoWZ29vZ2xlL3R5cGUvZGF0ZS5wcm90bxobZ29v",
            "Z2xlL3R5cGUvZGF5b2Z3ZWVrLnByb3RvGhtnb29nbGUvdHlwZS90aW1lb2Zk",
            "YXkucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8iRwoQRXhj",
            "bHVkZUluZm9UeXBlcxIzCgppbmZvX3R5cGVzGAEgAygLMh8uZ29vZ2xlLnBy",
            "aXZhY3kuZGxwLnYyLkluZm9UeXBlIqACCg1FeGNsdXNpb25SdWxlEkYKCmRp",
            "Y3Rpb25hcnkYASABKAsyMC5nb29nbGUucHJpdmFjeS5kbHAudjIuQ3VzdG9t",
            "SW5mb1R5cGUuRGljdGlvbmFyeUgAEjwKBXJlZ2V4GAIgASgLMisuZ29vZ2xl",
            "LnByaXZhY3kuZGxwLnYyLkN1c3RvbUluZm9UeXBlLlJlZ2V4SAASRQoSZXhj",
            "bHVkZV9pbmZvX3R5cGVzGAMgASgLMicuZ29vZ2xlLnByaXZhY3kuZGxwLnYy",
            "LkV4Y2x1ZGVJbmZvVHlwZXNIABI6Cg1tYXRjaGluZ190eXBlGAQgASgOMiMu",
            "Z29vZ2xlLnByaXZhY3kuZGxwLnYyLk1hdGNoaW5nVHlwZUIGCgR0eXBlIrEB",
            "Cg5JbnNwZWN0aW9uUnVsZRJXCgxob3R3b3JkX3J1bGUYASABKAsyPy5nb29n",
            "bGUucHJpdmFjeS5kbHAudjIuQ3VzdG9tSW5mb1R5cGUuRGV0ZWN0aW9uUnVs",
            "ZS5Ib3R3b3JkUnVsZUgAEj4KDmV4Y2x1c2lvbl9ydWxlGAIgASgLMiQuZ29v",
            "Z2xlLnByaXZhY3kuZGxwLnYyLkV4Y2x1c2lvblJ1bGVIAEIGCgR0eXBlIn4K",
            "EUluc3BlY3Rpb25SdWxlU2V0EjMKCmluZm9fdHlwZXMYASADKAsyHy5nb29n",
            "bGUucHJpdmFjeS5kbHAudjIuSW5mb1R5cGUSNAoFcnVsZXMYAiADKAsyJS5n",
            "b29nbGUucHJpdmFjeS5kbHAudjIuSW5zcGVjdGlvblJ1bGUixwUKDUluc3Bl",
            "Y3RDb25maWcSMwoKaW5mb190eXBlcxgBIAMoCzIfLmdvb2dsZS5wcml2YWN5",
            "LmRscC52Mi5JbmZvVHlwZRI5Cg5taW5fbGlrZWxpaG9vZBgCIAEoDjIhLmdv",
            "b2dsZS5wcml2YWN5LmRscC52Mi5MaWtlbGlob29kEkIKBmxpbWl0cxgDIAEo",
            "CzIyLmdvb2dsZS5wcml2YWN5LmRscC52Mi5JbnNwZWN0Q29uZmlnLkZpbmRp",
            "bmdMaW1pdHMSFQoNaW5jbHVkZV9xdW90ZRgEIAEoCBIaChJleGNsdWRlX2lu",
            "Zm9fdHlwZXMYBSABKAgSQAoRY3VzdG9tX2luZm9fdHlwZXMYBiADKAsyJS5n",
            "b29nbGUucHJpdmFjeS5kbHAudjIuQ3VzdG9tSW5mb1R5cGUSPQoPY29udGVu",
            "dF9vcHRpb25zGAggAygOMiQuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkNvbnRl",
            "bnRPcHRpb24SOgoIcnVsZV9zZXQYCiADKAsyKC5nb29nbGUucHJpdmFjeS5k",
            "bHAudjIuSW5zcGVjdGlvblJ1bGVTZXQakQIKDUZpbmRpbmdMaW1pdHMSHQoV",
            "bWF4X2ZpbmRpbmdzX3Blcl9pdGVtGAEgASgFEiAKGG1heF9maW5kaW5nc19w",
            "ZXJfcmVxdWVzdBgCIAEoBRJkChptYXhfZmluZGluZ3NfcGVyX2luZm9fdHlw",
            "ZRgDIAMoCzJALmdvb2dsZS5wcml2YWN5LmRscC52Mi5JbnNwZWN0Q29uZmln",
            "LkZpbmRpbmdMaW1pdHMuSW5mb1R5cGVMaW1pdBpZCg1JbmZvVHlwZUxpbWl0",
            "EjIKCWluZm9fdHlwZRgBIAEoCzIfLmdvb2dsZS5wcml2YWN5LmRscC52Mi5J",
            "bmZvVHlwZRIUCgxtYXhfZmluZGluZ3MYAiABKAUimAIKD0J5dGVDb250ZW50",
            "SXRlbRI+CgR0eXBlGAEgASgOMjAuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkJ5",
            "dGVDb250ZW50SXRlbS5CeXRlc1R5cGUSDAoEZGF0YRgCIAEoDCK2AQoJQnl0",
            "ZXNUeXBlEhoKFkJZVEVTX1RZUEVfVU5TUEVDSUZJRUQQABIJCgVJTUFHRRAG",
            "Eg4KCklNQUdFX0pQRUcQARINCglJTUFHRV9CTVAQAhINCglJTUFHRV9QTkcQ",
            "AxINCglJTUFHRV9TVkcQBBINCglURVhUX1VURjgQBRIRCg1XT1JEX0RPQ1VN",
            "RU5UEAcSBwoDUERGEAgSCAoEQVZSTxALEgcKA0NTVhAMEgcKA1RTVhANIpcB",
            "CgtDb250ZW50SXRlbRIPCgV2YWx1ZRgDIAEoCUgAEi0KBXRhYmxlGAQgASgL",
            "MhwuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlRhYmxlSAASOwoJYnl0ZV9pdGVt",
            "GAUgASgLMiYuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkJ5dGVDb250ZW50SXRl",
            "bUgAQgsKCWRhdGFfaXRlbSKdAQoFVGFibGUSLwoHaGVhZGVycxgBIAMoCzIe",
            "Lmdvb2dsZS5wcml2YWN5LmRscC52Mi5GaWVsZElkEi4KBHJvd3MYAiADKAsy",
            "IC5nb29nbGUucHJpdmFjeS5kbHAudjIuVGFibGUuUm93GjMKA1JvdxIsCgZ2",
            "YWx1ZXMYASADKAsyHC5nb29nbGUucHJpdmFjeS5kbHAudjIuVmFsdWUiXQoN",
            "SW5zcGVjdFJlc3VsdBIwCghmaW5kaW5ncxgBIAMoCzIeLmdvb2dsZS5wcml2",
            "YWN5LmRscC52Mi5GaW5kaW5nEhoKEmZpbmRpbmdzX3RydW5jYXRlZBgCIAEo",
            "CCLLBQoHRmluZGluZxIMCgRuYW1lGA4gASgJEg0KBXF1b3RlGAEgASgJEjIK",
            "CWluZm9fdHlwZRgCIAEoCzIfLmdvb2dsZS5wcml2YWN5LmRscC52Mi5JbmZv",
            "VHlwZRI1CgpsaWtlbGlob29kGAMgASgOMiEuZ29vZ2xlLnByaXZhY3kuZGxw",
            "LnYyLkxpa2VsaWhvb2QSMQoIbG9jYXRpb24YBCABKAsyHy5nb29nbGUucHJp",
            "dmFjeS5kbHAudjIuTG9jYXRpb24SLwoLY3JlYXRlX3RpbWUYBiABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEjQKCnF1b3RlX2luZm8YByABKAsy",
            "IC5nb29nbGUucHJpdmFjeS5kbHAudjIuUXVvdGVJbmZvEjUKDXJlc291cmNl",
            "X25hbWUYCCABKAlCHvpBGwoZZGxwLmdvb2dsZWFwaXMuY29tL0RscEpvYhI4",
            "Cgx0cmlnZ2VyX25hbWUYCSABKAlCIvpBHwodZGxwLmdvb2dsZWFwaXMuY29t",
            "L0pvYlRyaWdnZXISOgoGbGFiZWxzGAogAygLMiouZ29vZ2xlLnByaXZhY3ku",
            "ZGxwLnYyLkZpbmRpbmcuTGFiZWxzRW50cnkSMwoPam9iX2NyZWF0ZV90aW1l",
            "GAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIwCghqb2JfbmFt",
            "ZRgNIAEoCUIe+kEbChlkbHAuZ29vZ2xlYXBpcy5jb20vRGxwSm9iGi0KC0xh",
            "YmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAE6W+pB",
            "WAoaZGxwLmdvb2dsZWFwaXMuY29tL0ZpbmRpbmcSOnByb2plY3RzL3twcm9q",
            "ZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9maW5kaW5ncy97ZmluZGluZ30i",
            "6wEKCExvY2F0aW9uEjAKCmJ5dGVfcmFuZ2UYASABKAsyHC5nb29nbGUucHJp",
            "dmFjeS5kbHAudjIuUmFuZ2USNQoPY29kZXBvaW50X3JhbmdlGAIgASgLMhwu",
            "Z29vZ2xlLnByaXZhY3kuZGxwLnYyLlJhbmdlEkEKEWNvbnRlbnRfbG9jYXRp",
            "b25zGAcgAygLMiYuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkNvbnRlbnRMb2Nh",
            "dGlvbhIzCgljb250YWluZXIYCCABKAsyIC5nb29nbGUucHJpdmFjeS5kbHAu",
            "djIuQ29udGFpbmVyIpcDCg9Db250ZW50TG9jYXRpb24SFgoOY29udGFpbmVy",
            "X25hbWUYASABKAkSQAoPcmVjb3JkX2xvY2F0aW9uGAIgASgLMiUuZ29vZ2xl",
            "LnByaXZhY3kuZGxwLnYyLlJlY29yZExvY2F0aW9uSAASPgoOaW1hZ2VfbG9j",
            "YXRpb24YAyABKAsyJC5nb29nbGUucHJpdmFjeS5kbHAudjIuSW1hZ2VMb2Nh",
            "dGlvbkgAEkQKEWRvY3VtZW50X2xvY2F0aW9uGAUgASgLMicuZ29vZ2xlLnBy",
            "aXZhY3kuZGxwLnYyLkRvY3VtZW50TG9jYXRpb25IABJEChFtZXRhZGF0YV9s",
            "b2NhdGlvbhgIIAEoCzInLmdvb2dsZS5wcml2YWN5LmRscC52Mi5NZXRhZGF0",
            "YUxvY2F0aW9uSAASNwoTY29udGFpbmVyX3RpbWVzdGFtcBgGIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASGQoRY29udGFpbmVyX3ZlcnNpb24Y",
            "ByABKAlCCgoIbG9jYXRpb24ilAEKEE1ldGFkYXRhTG9jYXRpb24SMQoEdHlw",
            "ZRgBIAEoDjIjLmdvb2dsZS5wcml2YWN5LmRscC52Mi5NZXRhZGF0YVR5cGUS",
            "RAoNc3RvcmFnZV9sYWJlbBgDIAEoCzIrLmdvb2dsZS5wcml2YWN5LmRscC52",
            "Mi5TdG9yYWdlTWV0YWRhdGFMYWJlbEgAQgcKBWxhYmVsIiMKFFN0b3JhZ2VN",
            "ZXRhZGF0YUxhYmVsEgsKA2tleRgBIAEoCSInChBEb2N1bWVudExvY2F0aW9u",
            "EhMKC2ZpbGVfb2Zmc2V0GAEgASgDIrYBCg5SZWNvcmRMb2NhdGlvbhI0Cgpy",
            "ZWNvcmRfa2V5GAEgASgLMiAuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlJlY29y",
            "ZEtleRIwCghmaWVsZF9pZBgCIAEoCzIeLmdvb2dsZS5wcml2YWN5LmRscC52",
            "Mi5GaWVsZElkEjwKDnRhYmxlX2xvY2F0aW9uGAMgASgLMiQuZ29vZ2xlLnBy",
            "aXZhY3kuZGxwLnYyLlRhYmxlTG9jYXRpb24iIgoNVGFibGVMb2NhdGlvbhIR",
            "Cglyb3dfaW5kZXgYASABKAMirAEKCUNvbnRhaW5lchIMCgR0eXBlGAEgASgJ",
            "EhIKCnByb2plY3RfaWQYAiABKAkSEQoJZnVsbF9wYXRoGAMgASgJEhEKCXJv",
            "b3RfcGF0aBgEIAEoCRIVCg1yZWxhdGl2ZV9wYXRoGAUgASgJEi8KC3VwZGF0",
            "ZV90aW1lGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIPCgd2",
            "ZXJzaW9uGAcgASgJIiMKBVJhbmdlEg0KBXN0YXJ0GAEgASgDEgsKA2VuZBgC",
            "IAEoAyJLCg1JbWFnZUxvY2F0aW9uEjoKDmJvdW5kaW5nX2JveGVzGAEgAygL",
            "MiIuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkJvdW5kaW5nQm94IkcKC0JvdW5k",
            "aW5nQm94EgsKA3RvcBgBIAEoBRIMCgRsZWZ0GAIgASgFEg0KBXdpZHRoGAMg",
            "ASgFEg4KBmhlaWdodBgEIAEoBSL8AwoSUmVkYWN0SW1hZ2VSZXF1ZXN0EjIK",
            "BnBhcmVudBgBIAEoCUIi+kEfEh1kbHAuZ29vZ2xlYXBpcy5jb20vRGxwQ29u",
            "dGVudBITCgtsb2NhdGlvbl9pZBgIIAEoCRI8Cg5pbnNwZWN0X2NvbmZpZxgC",
            "IAEoCzIkLmdvb2dsZS5wcml2YWN5LmRscC52Mi5JbnNwZWN0Q29uZmlnEl8K",
            "F2ltYWdlX3JlZGFjdGlvbl9jb25maWdzGAUgAygLMj4uZ29vZ2xlLnByaXZh",
            "Y3kuZGxwLnYyLlJlZGFjdEltYWdlUmVxdWVzdC5JbWFnZVJlZGFjdGlvbkNv",
            "bmZpZxIYChBpbmNsdWRlX2ZpbmRpbmdzGAYgASgIEjkKCWJ5dGVfaXRlbRgH",
            "IAEoCzImLmdvb2dsZS5wcml2YWN5LmRscC52Mi5CeXRlQ29udGVudEl0ZW0a",
            "qAEKFEltYWdlUmVkYWN0aW9uQ29uZmlnEjQKCWluZm9fdHlwZRgBIAEoCzIf",
            "Lmdvb2dsZS5wcml2YWN5LmRscC52Mi5JbmZvVHlwZUgAEhkKD3JlZGFjdF9h",
            "bGxfdGV4dBgCIAEoCEgAEjUKD3JlZGFjdGlvbl9jb2xvchgDIAEoCzIcLmdv",
            "b2dsZS5wcml2YWN5LmRscC52Mi5Db2xvckIICgZ0YXJnZXQiMQoFQ29sb3IS",
            "CwoDcmVkGAEgASgCEg0KBWdyZWVuGAIgASgCEgwKBGJsdWUYAyABKAIigwEK",
            "E1JlZGFjdEltYWdlUmVzcG9uc2USFgoOcmVkYWN0ZWRfaW1hZ2UYASABKAwS",
            "FgoOZXh0cmFjdGVkX3RleHQYAiABKAkSPAoOaW5zcGVjdF9yZXN1bHQYAyAB",
            "KAsyJC5nb29nbGUucHJpdmFjeS5kbHAudjIuSW5zcGVjdFJlc3VsdCLYAgoY",
            "RGVpZGVudGlmeUNvbnRlbnRSZXF1ZXN0EjIKBnBhcmVudBgBIAEoCUIi+kEf",
            "Eh1kbHAuZ29vZ2xlYXBpcy5jb20vRGxwQ29udGVudBJCChFkZWlkZW50aWZ5",
            "X2NvbmZpZxgCIAEoCzInLmdvb2dsZS5wcml2YWN5LmRscC52Mi5EZWlkZW50",
            "aWZ5Q29uZmlnEjwKDmluc3BlY3RfY29uZmlnGAMgASgLMiQuZ29vZ2xlLnBy",
            "aXZhY3kuZGxwLnYyLkluc3BlY3RDb25maWcSMAoEaXRlbRgEIAEoCzIiLmdv",
            "b2dsZS5wcml2YWN5LmRscC52Mi5Db250ZW50SXRlbRIdChVpbnNwZWN0X3Rl",
            "bXBsYXRlX25hbWUYBSABKAkSIAoYZGVpZGVudGlmeV90ZW1wbGF0ZV9uYW1l",
            "GAYgASgJEhMKC2xvY2F0aW9uX2lkGAcgASgJIo4BChlEZWlkZW50aWZ5Q29u",
            "dGVudFJlc3BvbnNlEjAKBGl0ZW0YASABKAsyIi5nb29nbGUucHJpdmFjeS5k",
            "bHAudjIuQ29udGVudEl0ZW0SPwoIb3ZlcnZpZXcYAiABKAsyLS5nb29nbGUu",
            "cHJpdmFjeS5kbHAudjIuVHJhbnNmb3JtYXRpb25PdmVydmlldyLbAgoYUmVp",
            "ZGVudGlmeUNvbnRlbnRSZXF1ZXN0EjUKBnBhcmVudBgBIAEoCUIl4EEC+kEf",
            "Eh1kbHAuZ29vZ2xlYXBpcy5jb20vRGxwQ29udGVudBJCChFyZWlkZW50aWZ5",
            "X2NvbmZpZxgCIAEoCzInLmdvb2dsZS5wcml2YWN5LmRscC52Mi5EZWlkZW50",
            "aWZ5Q29uZmlnEjwKDmluc3BlY3RfY29uZmlnGAMgASgLMiQuZ29vZ2xlLnBy",
            "aXZhY3kuZGxwLnYyLkluc3BlY3RDb25maWcSMAoEaXRlbRgEIAEoCzIiLmdv",
            "b2dsZS5wcml2YWN5LmRscC52Mi5Db250ZW50SXRlbRIdChVpbnNwZWN0X3Rl",
            "bXBsYXRlX25hbWUYBSABKAkSIAoYcmVpZGVudGlmeV90ZW1wbGF0ZV9uYW1l",
            "GAYgASgJEhMKC2xvY2F0aW9uX2lkGAcgASgJIo4BChlSZWlkZW50aWZ5Q29u",
            "dGVudFJlc3BvbnNlEjAKBGl0ZW0YASABKAsyIi5nb29nbGUucHJpdmFjeS5k",
            "bHAudjIuQ29udGVudEl0ZW0SPwoIb3ZlcnZpZXcYAiABKAsyLS5nb29nbGUu",
            "cHJpdmFjeS5kbHAudjIuVHJhbnNmb3JtYXRpb25PdmVydmlldyLvAQoVSW5z",
            "cGVjdENvbnRlbnRSZXF1ZXN0EjIKBnBhcmVudBgBIAEoCUIi+kEfEh1kbHAu",
            "Z29vZ2xlYXBpcy5jb20vRGxwQ29udGVudBI8Cg5pbnNwZWN0X2NvbmZpZxgC",
            "IAEoCzIkLmdvb2dsZS5wcml2YWN5LmRscC52Mi5JbnNwZWN0Q29uZmlnEjAK",
            "BGl0ZW0YAyABKAsyIi5nb29nbGUucHJpdmFjeS5kbHAudjIuQ29udGVudEl0",
            "ZW0SHQoVaW5zcGVjdF90ZW1wbGF0ZV9uYW1lGAQgASgJEhMKC2xvY2F0aW9u",
            "X2lkGAUgASgJIk4KFkluc3BlY3RDb250ZW50UmVzcG9uc2USNAoGcmVzdWx0",
            "GAEgASgLMiQuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkluc3BlY3RSZXN1bHQi",
            "twIKE091dHB1dFN0b3JhZ2VDb25maWcSNQoFdGFibGUYASABKAsyJC5nb29n",
            "bGUucHJpdmFjeS5kbHAudjIuQmlnUXVlcnlUYWJsZUgAEk4KDW91dHB1dF9z",
            "Y2hlbWEYAyABKA4yNy5nb29nbGUucHJpdmFjeS5kbHAudjIuT3V0cHV0U3Rv",
            "cmFnZUNvbmZpZy5PdXRwdXRTY2hlbWEikAEKDE91dHB1dFNjaGVtYRIdChlP",
            "VVRQVVRfU0NIRU1BX1VOU1BFQ0lGSUVEEAASEQoNQkFTSUNfQ09MVU1OUxAB",
            "Eg8KC0dDU19DT0xVTU5TEAISFQoRREFUQVNUT1JFX0NPTFVNTlMQAxIVChFC",
            "SUdfUVVFUllfQ09MVU1OUxAEEg8KC0FMTF9DT0xVTU5TEAVCBgoEdHlwZSJS",
            "Cg1JbmZvVHlwZVN0YXRzEjIKCWluZm9fdHlwZRgBIAEoCzIfLmdvb2dsZS5w",
            "cml2YWN5LmRscC52Mi5JbmZvVHlwZRINCgVjb3VudBgCIAEoAyKkBAoYSW5z",
            "cGVjdERhdGFTb3VyY2VEZXRhaWxzElsKEXJlcXVlc3RlZF9vcHRpb25zGAIg",
            "ASgLMkAuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkluc3BlY3REYXRhU291cmNl",
            "RGV0YWlscy5SZXF1ZXN0ZWRPcHRpb25zEkYKBnJlc3VsdBgDIAEoCzI2Lmdv",
            "b2dsZS5wcml2YWN5LmRscC52Mi5JbnNwZWN0RGF0YVNvdXJjZURldGFpbHMu",
            "UmVzdWx0GpoBChBSZXF1ZXN0ZWRPcHRpb25zEkkKGXNuYXBzaG90X2luc3Bl",
            "Y3RfdGVtcGxhdGUYASABKAsyJi5nb29nbGUucHJpdmFjeS5kbHAudjIuSW5z",
            "cGVjdFRlbXBsYXRlEjsKCmpvYl9jb25maWcYAyABKAsyJy5nb29nbGUucHJp",
            "dmFjeS5kbHAudjIuSW5zcGVjdEpvYkNvbmZpZxrFAQoGUmVzdWx0EhcKD3By",
            "b2Nlc3NlZF9ieXRlcxgBIAEoAxIdChV0b3RhbF9lc3RpbWF0ZWRfYnl0ZXMY",
            "AiABKAMSPQoPaW5mb190eXBlX3N0YXRzGAMgAygLMiQuZ29vZ2xlLnByaXZh",
            "Y3kuZGxwLnYyLkluZm9UeXBlU3RhdHMSRAoMaHlicmlkX3N0YXRzGAcgASgL",
            "Mi4uZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkh5YnJpZEluc3BlY3RTdGF0aXN0",
            "aWNzImAKF0h5YnJpZEluc3BlY3RTdGF0aXN0aWNzEhcKD3Byb2Nlc3NlZF9j",
            "b3VudBgBIAEoAxIVCg1hYm9ydGVkX2NvdW50GAIgASgDEhUKDXBlbmRpbmdf",
            "Y291bnQYAyABKAMikAEKE0luZm9UeXBlRGVzY3JpcHRpb24SDAoEbmFtZRgB",
            "IAEoCRIUCgxkaXNwbGF5X25hbWUYAiABKAkSQAoMc3VwcG9ydGVkX2J5GAMg",
            "AygOMiouZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkluZm9UeXBlU3VwcG9ydGVk",
            "QnkSEwoLZGVzY3JpcHRpb24YBCABKAkiYgoUTGlzdEluZm9UeXBlc1JlcXVl",
            "c3QSDgoGcGFyZW50GAQgASgJEhUKDWxhbmd1YWdlX2NvZGUYASABKAkSDgoG",
            "ZmlsdGVyGAIgASgJEhMKC2xvY2F0aW9uX2lkGAMgASgJIlcKFUxpc3RJbmZv",
            "VHlwZXNSZXNwb25zZRI+CgppbmZvX3R5cGVzGAEgAygLMiouZ29vZ2xlLnBy",
            "aXZhY3kuZGxwLnYyLkluZm9UeXBlRGVzY3JpcHRpb24iwQEKFVJpc2tBbmFs",
            "eXNpc0pvYkNvbmZpZxI8Cg5wcml2YWN5X21ldHJpYxgBIAEoCzIkLmdvb2ds",
            "ZS5wcml2YWN5LmRscC52Mi5Qcml2YWN5TWV0cmljEjoKDHNvdXJjZV90YWJs",
            "ZRgCIAEoCzIkLmdvb2dsZS5wcml2YWN5LmRscC52Mi5CaWdRdWVyeVRhYmxl",
            "Ei4KB2FjdGlvbnMYAyADKAsyHS5nb29nbGUucHJpdmFjeS5kbHAudjIuQWN0",
            "aW9uIrwBCgdRdWFzaUlkEjIKBWZpZWxkGAEgASgLMh4uZ29vZ2xlLnByaXZh",
            "Y3kuZGxwLnYyLkZpZWxkSWRCA+BBAhI0CglpbmZvX3R5cGUYAiABKAsyHy5n",
            "b29nbGUucHJpdmFjeS5kbHAudjIuSW5mb1R5cGVIABIUCgpjdXN0b21fdGFn",
            "GAMgASgJSAASKgoIaW5mZXJyZWQYBCABKAsyFi5nb29nbGUucHJvdG9idWYu",
            "RW1wdHlIAEIFCgN0YWcivgIKEFN0YXRpc3RpY2FsVGFibGUSOAoFdGFibGUY",
            "AyABKAsyJC5nb29nbGUucHJpdmFjeS5kbHAudjIuQmlnUXVlcnlUYWJsZUID",
            "4EECElQKCXF1YXNpX2lkcxgBIAMoCzI8Lmdvb2dsZS5wcml2YWN5LmRscC52",
            "Mi5TdGF0aXN0aWNhbFRhYmxlLlF1YXNpSWRlbnRpZmllckZpZWxkQgPgQQIS",
            "PwoScmVsYXRpdmVfZnJlcXVlbmN5GAIgASgLMh4uZ29vZ2xlLnByaXZhY3ku",
            "ZGxwLnYyLkZpZWxkSWRCA+BBAhpZChRRdWFzaUlkZW50aWZpZXJGaWVsZBIt",
            "CgVmaWVsZBgBIAEoCzIeLmdvb2dsZS5wcml2YWN5LmRscC52Mi5GaWVsZElk",
            "EhIKCmN1c3RvbV90YWcYAiABKAkikw8KDVByaXZhY3lNZXRyaWMSWwoWbnVt",
            "ZXJpY2FsX3N0YXRzX2NvbmZpZxgBIAEoCzI5Lmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5Qcml2YWN5TWV0cmljLk51bWVyaWNhbFN0YXRzQ29uZmlnSAASXwoY",
            "Y2F0ZWdvcmljYWxfc3RhdHNfY29uZmlnGAIgASgLMjsuZ29vZ2xlLnByaXZh",
            "Y3kuZGxwLnYyLlByaXZhY3lNZXRyaWMuQ2F0ZWdvcmljYWxTdGF0c0NvbmZp",
            "Z0gAElMKEmtfYW5vbnltaXR5X2NvbmZpZxgDIAEoCzI1Lmdvb2dsZS5wcml2",
            "YWN5LmRscC52Mi5Qcml2YWN5TWV0cmljLktBbm9ueW1pdHlDb25maWdIABJT",
            "ChJsX2RpdmVyc2l0eV9jb25maWcYBCABKAsyNS5nb29nbGUucHJpdmFjeS5k",
            "bHAudjIuUHJpdmFjeU1ldHJpYy5MRGl2ZXJzaXR5Q29uZmlnSAASXAoXa19t",
            "YXBfZXN0aW1hdGlvbl9jb25maWcYBSABKAsyOS5nb29nbGUucHJpdmFjeS5k",
            "bHAudjIuUHJpdmFjeU1ldHJpYy5LTWFwRXN0aW1hdGlvbkNvbmZpZ0gAEm4K",
            "IGRlbHRhX3ByZXNlbmNlX2VzdGltYXRpb25fY29uZmlnGAYgASgLMkIuZ29v",
            "Z2xlLnByaXZhY3kuZGxwLnYyLlByaXZhY3lNZXRyaWMuRGVsdGFQcmVzZW5j",
            "ZUVzdGltYXRpb25Db25maWdIABpFChROdW1lcmljYWxTdGF0c0NvbmZpZxIt",
            "CgVmaWVsZBgBIAEoCzIeLmdvb2dsZS5wcml2YWN5LmRscC52Mi5GaWVsZElk",
            "GkcKFkNhdGVnb3JpY2FsU3RhdHNDb25maWcSLQoFZmllbGQYASABKAsyHi5n",
            "b29nbGUucHJpdmFjeS5kbHAudjIuRmllbGRJZBp5ChBLQW5vbnltaXR5Q29u",
            "ZmlnEjEKCXF1YXNpX2lkcxgBIAMoCzIeLmdvb2dsZS5wcml2YWN5LmRscC52",
            "Mi5GaWVsZElkEjIKCWVudGl0eV9pZBgCIAEoCzIfLmdvb2dsZS5wcml2YWN5",
            "LmRscC52Mi5FbnRpdHlJZBqCAQoQTERpdmVyc2l0eUNvbmZpZxIxCglxdWFz",
            "aV9pZHMYASADKAsyHi5nb29nbGUucHJpdmFjeS5kbHAudjIuRmllbGRJZBI7",
            "ChNzZW5zaXRpdmVfYXR0cmlidXRlGAIgASgLMh4uZ29vZ2xlLnByaXZhY3ku",
            "ZGxwLnYyLkZpZWxkSWQagQYKFEtNYXBFc3RpbWF0aW9uQ29uZmlnEl0KCXF1",
            "YXNpX2lkcxgBIAMoCzJFLmdvb2dsZS5wcml2YWN5LmRscC52Mi5Qcml2YWN5",
            "TWV0cmljLktNYXBFc3RpbWF0aW9uQ29uZmlnLlRhZ2dlZEZpZWxkQgPgQQIS",
            "EwoLcmVnaW9uX2NvZGUYAiABKAkSYgoQYXV4aWxpYXJ5X3RhYmxlcxgDIAMo",
            "CzJILmdvb2dsZS5wcml2YWN5LmRscC52Mi5Qcml2YWN5TWV0cmljLktNYXBF",
            "c3RpbWF0aW9uQ29uZmlnLkF1eGlsaWFyeVRhYmxlGsABCgtUYWdnZWRGaWVs",
            "ZBIyCgVmaWVsZBgBIAEoCzIeLmdvb2dsZS5wcml2YWN5LmRscC52Mi5GaWVs",
            "ZElkQgPgQQISNAoJaW5mb190eXBlGAIgASgLMh8uZ29vZ2xlLnByaXZhY3ku",
            "ZGxwLnYyLkluZm9UeXBlSAASFAoKY3VzdG9tX3RhZxgDIAEoCUgAEioKCGlu",
            "ZmVycmVkGAQgASgLMhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5SABCBQoDdGFn",
            "Gs0CCg5BdXhpbGlhcnlUYWJsZRI4CgV0YWJsZRgDIAEoCzIkLmdvb2dsZS5w",
            "cml2YWN5LmRscC52Mi5CaWdRdWVyeVRhYmxlQgPgQQISbQoJcXVhc2lfaWRz",
            "GAEgAygLMlUuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlByaXZhY3lNZXRyaWMu",
            "S01hcEVzdGltYXRpb25Db25maWcuQXV4aWxpYXJ5VGFibGUuUXVhc2lJZEZp",
            "ZWxkQgPgQQISPwoScmVsYXRpdmVfZnJlcXVlbmN5GAIgASgLMh4uZ29vZ2xl",
            "LnByaXZhY3kuZGxwLnYyLkZpZWxkSWRCA+BBAhpRCgxRdWFzaUlkRmllbGQS",
            "LQoFZmllbGQYASABKAsyHi5nb29nbGUucHJpdmFjeS5kbHAudjIuRmllbGRJ",
            "ZBISCgpjdXN0b21fdGFnGAIgASgJGq8BCh1EZWx0YVByZXNlbmNlRXN0aW1h",
            "dGlvbkNvbmZpZxI2CglxdWFzaV9pZHMYASADKAsyHi5nb29nbGUucHJpdmFj",
            "eS5kbHAudjIuUXVhc2lJZEID4EECEhMKC3JlZ2lvbl9jb2RlGAIgASgJEkEK",
            "EGF1eGlsaWFyeV90YWJsZXMYAyADKAsyJy5nb29nbGUucHJpdmFjeS5kbHAu",
            "djIuU3RhdGlzdGljYWxUYWJsZUIGCgR0eXBlIsEfChxBbmFseXplRGF0YVNv",
            "dXJjZVJpc2tEZXRhaWxzEkYKGHJlcXVlc3RlZF9wcml2YWN5X21ldHJpYxgB",
            "IAEoCzIkLmdvb2dsZS5wcml2YWN5LmRscC52Mi5Qcml2YWN5TWV0cmljEkQK",
            "FnJlcXVlc3RlZF9zb3VyY2VfdGFibGUYAiABKAsyJC5nb29nbGUucHJpdmFj",
            "eS5kbHAudjIuQmlnUXVlcnlUYWJsZRJqChZudW1lcmljYWxfc3RhdHNfcmVz",
            "dWx0GAMgASgLMkguZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkFuYWx5emVEYXRh",
            "U291cmNlUmlza0RldGFpbHMuTnVtZXJpY2FsU3RhdHNSZXN1bHRIABJuChhj",
            "YXRlZ29yaWNhbF9zdGF0c19yZXN1bHQYBCABKAsySi5nb29nbGUucHJpdmFj",
            "eS5kbHAudjIuQW5hbHl6ZURhdGFTb3VyY2VSaXNrRGV0YWlscy5DYXRlZ29y",
            "aWNhbFN0YXRzUmVzdWx0SAASYgoSa19hbm9ueW1pdHlfcmVzdWx0GAUgASgL",
            "MkQuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkFuYWx5emVEYXRhU291cmNlUmlz",
            "a0RldGFpbHMuS0Fub255bWl0eVJlc3VsdEgAEmIKEmxfZGl2ZXJzaXR5X3Jl",
            "c3VsdBgGIAEoCzJELmdvb2dsZS5wcml2YWN5LmRscC52Mi5BbmFseXplRGF0",
            "YVNvdXJjZVJpc2tEZXRhaWxzLkxEaXZlcnNpdHlSZXN1bHRIABJrChdrX21h",
            "cF9lc3RpbWF0aW9uX3Jlc3VsdBgHIAEoCzJILmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5BbmFseXplRGF0YVNvdXJjZVJpc2tEZXRhaWxzLktNYXBFc3RpbWF0",
            "aW9uUmVzdWx0SAASfQogZGVsdGFfcHJlc2VuY2VfZXN0aW1hdGlvbl9yZXN1",
            "bHQYCSABKAsyUS5nb29nbGUucHJpdmFjeS5kbHAudjIuQW5hbHl6ZURhdGFT",
            "b3VyY2VSaXNrRGV0YWlscy5EZWx0YVByZXNlbmNlRXN0aW1hdGlvblJlc3Vs",
            "dEgAEmsKEXJlcXVlc3RlZF9vcHRpb25zGAogASgLMlAuZ29vZ2xlLnByaXZh",
            "Y3kuZGxwLnYyLkFuYWx5emVEYXRhU291cmNlUmlza0RldGFpbHMuUmVxdWVz",
            "dGVkUmlza0FuYWx5c2lzT3B0aW9ucxqvAQoUTnVtZXJpY2FsU3RhdHNSZXN1",
            "bHQSLwoJbWluX3ZhbHVlGAEgASgLMhwuZ29vZ2xlLnByaXZhY3kuZGxwLnYy",
            "LlZhbHVlEi8KCW1heF92YWx1ZRgCIAEoCzIcLmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5WYWx1ZRI1Cg9xdWFudGlsZV92YWx1ZXMYBCADKAsyHC5nb29nbGUu",
            "cHJpdmFjeS5kbHAudjIuVmFsdWUajQMKFkNhdGVnb3JpY2FsU3RhdHNSZXN1",
            "bHQSlQEKIXZhbHVlX2ZyZXF1ZW5jeV9oaXN0b2dyYW1fYnVja2V0cxgFIAMo",
            "CzJqLmdvb2dsZS5wcml2YWN5LmRscC52Mi5BbmFseXplRGF0YVNvdXJjZVJp",
            "c2tEZXRhaWxzLkNhdGVnb3JpY2FsU3RhdHNSZXN1bHQuQ2F0ZWdvcmljYWxT",
            "dGF0c0hpc3RvZ3JhbUJ1Y2tldBraAQofQ2F0ZWdvcmljYWxTdGF0c0hpc3Rv",
            "Z3JhbUJ1Y2tldBIjCht2YWx1ZV9mcmVxdWVuY3lfbG93ZXJfYm91bmQYASAB",
            "KAMSIwobdmFsdWVfZnJlcXVlbmN5X3VwcGVyX2JvdW5kGAIgASgDEhMKC2J1",
            "Y2tldF9zaXplGAMgASgDEjwKDWJ1Y2tldF92YWx1ZXMYBCADKAsyJS5nb29n",
            "bGUucHJpdmFjeS5kbHAudjIuVmFsdWVGcmVxdWVuY3kSGgoSYnVja2V0X3Zh",
            "bHVlX2NvdW50GAUgASgDGrUEChBLQW5vbnltaXR5UmVzdWx0EosBCiNlcXVp",
            "dmFsZW5jZV9jbGFzc19oaXN0b2dyYW1fYnVja2V0cxgFIAMoCzJeLmdvb2ds",
            "ZS5wcml2YWN5LmRscC52Mi5BbmFseXplRGF0YVNvdXJjZVJpc2tEZXRhaWxz",
            "LktBbm9ueW1pdHlSZXN1bHQuS0Fub255bWl0eUhpc3RvZ3JhbUJ1Y2tldBp0",
            "ChpLQW5vbnltaXR5RXF1aXZhbGVuY2VDbGFzcxI2ChBxdWFzaV9pZHNfdmFs",
            "dWVzGAEgAygLMhwuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlZhbHVlEh4KFmVx",
            "dWl2YWxlbmNlX2NsYXNzX3NpemUYAiABKAManAIKGUtBbm9ueW1pdHlIaXN0",
            "b2dyYW1CdWNrZXQSKgoiZXF1aXZhbGVuY2VfY2xhc3Nfc2l6ZV9sb3dlcl9i",
            "b3VuZBgBIAEoAxIqCiJlcXVpdmFsZW5jZV9jbGFzc19zaXplX3VwcGVyX2Jv",
            "dW5kGAIgASgDEhMKC2J1Y2tldF9zaXplGAMgASgDEnYKDWJ1Y2tldF92YWx1",
            "ZXMYBCADKAsyXy5nb29nbGUucHJpdmFjeS5kbHAudjIuQW5hbHl6ZURhdGFT",
            "b3VyY2VSaXNrRGV0YWlscy5LQW5vbnltaXR5UmVzdWx0LktBbm9ueW1pdHlF",
            "cXVpdmFsZW5jZUNsYXNzEhoKEmJ1Y2tldF92YWx1ZV9jb3VudBgFIAEoAxqw",
            "BQoQTERpdmVyc2l0eVJlc3VsdBKTAQorc2Vuc2l0aXZlX3ZhbHVlX2ZyZXF1",
            "ZW5jeV9oaXN0b2dyYW1fYnVja2V0cxgFIAMoCzJeLmdvb2dsZS5wcml2YWN5",
            "LmRscC52Mi5BbmFseXplRGF0YVNvdXJjZVJpc2tEZXRhaWxzLkxEaXZlcnNp",
            "dHlSZXN1bHQuTERpdmVyc2l0eUhpc3RvZ3JhbUJ1Y2tldBrgAQoaTERpdmVy",
            "c2l0eUVxdWl2YWxlbmNlQ2xhc3MSNgoQcXVhc2lfaWRzX3ZhbHVlcxgBIAMo",
            "CzIcLmdvb2dsZS5wcml2YWN5LmRscC52Mi5WYWx1ZRIeChZlcXVpdmFsZW5j",
            "ZV9jbGFzc19zaXplGAIgASgDEiUKHW51bV9kaXN0aW5jdF9zZW5zaXRpdmVf",
            "dmFsdWVzGAMgASgDEkMKFHRvcF9zZW5zaXRpdmVfdmFsdWVzGAQgAygLMiUu",
            "Z29vZ2xlLnByaXZhY3kuZGxwLnYyLlZhbHVlRnJlcXVlbmN5GqICChlMRGl2",
            "ZXJzaXR5SGlzdG9ncmFtQnVja2V0Ei0KJXNlbnNpdGl2ZV92YWx1ZV9mcmVx",
            "dWVuY3lfbG93ZXJfYm91bmQYASABKAMSLQolc2Vuc2l0aXZlX3ZhbHVlX2Zy",
            "ZXF1ZW5jeV91cHBlcl9ib3VuZBgCIAEoAxITCgtidWNrZXRfc2l6ZRgDIAEo",
            "AxJ2Cg1idWNrZXRfdmFsdWVzGAQgAygLMl8uZ29vZ2xlLnByaXZhY3kuZGxw",
            "LnYyLkFuYWx5emVEYXRhU291cmNlUmlza0RldGFpbHMuTERpdmVyc2l0eVJl",
            "c3VsdC5MRGl2ZXJzaXR5RXF1aXZhbGVuY2VDbGFzcxIaChJidWNrZXRfdmFs",
            "dWVfY291bnQYBSABKAMalQQKFEtNYXBFc3RpbWF0aW9uUmVzdWx0EooBChpr",
            "X21hcF9lc3RpbWF0aW9uX2hpc3RvZ3JhbRgBIAMoCzJmLmdvb2dsZS5wcml2",
            "YWN5LmRscC52Mi5BbmFseXplRGF0YVNvdXJjZVJpc2tEZXRhaWxzLktNYXBF",
            "c3RpbWF0aW9uUmVzdWx0LktNYXBFc3RpbWF0aW9uSGlzdG9ncmFtQnVja2V0",
            "GnIKG0tNYXBFc3RpbWF0aW9uUXVhc2lJZFZhbHVlcxI2ChBxdWFzaV9pZHNf",
            "dmFsdWVzGAEgAygLMhwuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlZhbHVlEhsK",
            "E2VzdGltYXRlZF9hbm9ueW1pdHkYAiABKAMa+wEKHUtNYXBFc3RpbWF0aW9u",
            "SGlzdG9ncmFtQnVja2V0EhUKDW1pbl9hbm9ueW1pdHkYASABKAMSFQoNbWF4",
            "X2Fub255bWl0eRgCIAEoAxITCgtidWNrZXRfc2l6ZRgFIAEoAxJ7Cg1idWNr",
            "ZXRfdmFsdWVzGAYgAygLMmQuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkFuYWx5",
            "emVEYXRhU291cmNlUmlza0RldGFpbHMuS01hcEVzdGltYXRpb25SZXN1bHQu",
            "S01hcEVzdGltYXRpb25RdWFzaUlkVmFsdWVzEhoKEmJ1Y2tldF92YWx1ZV9j",
            "b3VudBgHIAEoAxrkBAodRGVsdGFQcmVzZW5jZUVzdGltYXRpb25SZXN1bHQS",
            "pQEKI2RlbHRhX3ByZXNlbmNlX2VzdGltYXRpb25faGlzdG9ncmFtGAEgAygL",
            "MnguZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkFuYWx5emVEYXRhU291cmNlUmlz",
            "a0RldGFpbHMuRGVsdGFQcmVzZW5jZUVzdGltYXRpb25SZXN1bHQuRGVsdGFQ",
            "cmVzZW5jZUVzdGltYXRpb25IaXN0b2dyYW1CdWNrZXQafQokRGVsdGFQcmVz",
            "ZW5jZUVzdGltYXRpb25RdWFzaUlkVmFsdWVzEjYKEHF1YXNpX2lkc192YWx1",
            "ZXMYASADKAsyHC5nb29nbGUucHJpdmFjeS5kbHAudjIuVmFsdWUSHQoVZXN0",
            "aW1hdGVkX3Byb2JhYmlsaXR5GAIgASgBGpsCCiZEZWx0YVByZXNlbmNlRXN0",
            "aW1hdGlvbkhpc3RvZ3JhbUJ1Y2tldBIXCg9taW5fcHJvYmFiaWxpdHkYASAB",
            "KAESFwoPbWF4X3Byb2JhYmlsaXR5GAIgASgBEhMKC2J1Y2tldF9zaXplGAUg",
            "ASgDEo0BCg1idWNrZXRfdmFsdWVzGAYgAygLMnYuZ29vZ2xlLnByaXZhY3ku",
            "ZGxwLnYyLkFuYWx5emVEYXRhU291cmNlUmlza0RldGFpbHMuRGVsdGFQcmVz",
            "ZW5jZUVzdGltYXRpb25SZXN1bHQuRGVsdGFQcmVzZW5jZUVzdGltYXRpb25R",
            "dWFzaUlkVmFsdWVzEhoKEmJ1Y2tldF92YWx1ZV9jb3VudBgHIAEoAxpgChxS",
            "ZXF1ZXN0ZWRSaXNrQW5hbHlzaXNPcHRpb25zEkAKCmpvYl9jb25maWcYASAB",
            "KAsyLC5nb29nbGUucHJpdmFjeS5kbHAudjIuUmlza0FuYWx5c2lzSm9iQ29u",
            "ZmlnQggKBnJlc3VsdCJMCg5WYWx1ZUZyZXF1ZW5jeRIrCgV2YWx1ZRgBIAEo",
            "CzIcLmdvb2dsZS5wcml2YWN5LmRscC52Mi5WYWx1ZRINCgVjb3VudBgCIAEo",
            "AyKzAgoFVmFsdWUSFwoNaW50ZWdlcl92YWx1ZRgBIAEoA0gAEhUKC2Zsb2F0",
            "X3ZhbHVlGAIgASgBSAASFgoMc3RyaW5nX3ZhbHVlGAMgASgJSAASFwoNYm9v",
            "bGVhbl92YWx1ZRgEIAEoCEgAEjUKD3RpbWVzdGFtcF92YWx1ZRgFIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIABIsCgp0aW1lX3ZhbHVlGAYg",
            "ASgLMhYuZ29vZ2xlLnR5cGUuVGltZU9mRGF5SAASJwoKZGF0ZV92YWx1ZRgH",
            "IAEoCzIRLmdvb2dsZS50eXBlLkRhdGVIABIzChFkYXlfb2Zfd2Vla192YWx1",
            "ZRgIIAEoDjIWLmdvb2dsZS50eXBlLkRheU9mV2Vla0gAQgYKBHR5cGUiUQoJ",
            "UXVvdGVJbmZvEjQKCWRhdGVfdGltZRgCIAEoCzIfLmdvb2dsZS5wcml2YWN5",
            "LmRscC52Mi5EYXRlVGltZUgAQg4KDHBhcnNlZF9xdW90ZSLfAQoIRGF0ZVRp",
            "bWUSHwoEZGF0ZRgBIAEoCzIRLmdvb2dsZS50eXBlLkRhdGUSKwoLZGF5X29m",
            "X3dlZWsYAiABKA4yFi5nb29nbGUudHlwZS5EYXlPZldlZWsSJAoEdGltZRgD",
            "IAEoCzIWLmdvb2dsZS50eXBlLlRpbWVPZkRheRI7Cgl0aW1lX3pvbmUYBCAB",
            "KAsyKC5nb29nbGUucHJpdmFjeS5kbHAudjIuRGF0ZVRpbWUuVGltZVpvbmUa",
            "IgoIVGltZVpvbmUSFgoOb2Zmc2V0X21pbnV0ZXMYASABKAUipAIKEERlaWRl",
            "bnRpZnlDb25maWcSUwoZaW5mb190eXBlX3RyYW5zZm9ybWF0aW9ucxgBIAEo",
            "CzIuLmdvb2dsZS5wcml2YWN5LmRscC52Mi5JbmZvVHlwZVRyYW5zZm9ybWF0",
            "aW9uc0gAEk4KFnJlY29yZF90cmFuc2Zvcm1hdGlvbnMYAiABKAsyLC5nb29n",
            "bGUucHJpdmFjeS5kbHAudjIuUmVjb3JkVHJhbnNmb3JtYXRpb25zSAASWQod",
            "dHJhbnNmb3JtYXRpb25fZXJyb3JfaGFuZGxpbmcYAyABKAsyMi5nb29nbGUu",
            "cHJpdmFjeS5kbHAudjIuVHJhbnNmb3JtYXRpb25FcnJvckhhbmRsaW5nQhAK",
            "DnRyYW5zZm9ybWF0aW9uIoUCChtUcmFuc2Zvcm1hdGlvbkVycm9ySGFuZGxp",
            "bmcSVAoLdGhyb3dfZXJyb3IYASABKAsyPS5nb29nbGUucHJpdmFjeS5kbHAu",
            "djIuVHJhbnNmb3JtYXRpb25FcnJvckhhbmRsaW5nLlRocm93RXJyb3JIABJk",
            "ChNsZWF2ZV91bnRyYW5zZm9ybWVkGAIgASgLMkUuZ29vZ2xlLnByaXZhY3ku",
            "ZGxwLnYyLlRyYW5zZm9ybWF0aW9uRXJyb3JIYW5kbGluZy5MZWF2ZVVudHJh",
            "bnNmb3JtZWRIABoMCgpUaHJvd0Vycm9yGhQKEkxlYXZlVW50cmFuc2Zvcm1l",
            "ZEIGCgRtb2RlIvUGChdQcmltaXRpdmVUcmFuc2Zvcm1hdGlvbhJDCg5yZXBs",
            "YWNlX2NvbmZpZxgBIAEoCzIpLmdvb2dsZS5wcml2YWN5LmRscC52Mi5SZXBs",
            "YWNlVmFsdWVDb25maWdIABI8Cg1yZWRhY3RfY29uZmlnGAIgASgLMiMuZ29v",
            "Z2xlLnByaXZhY3kuZGxwLnYyLlJlZGFjdENvbmZpZ0gAEksKFWNoYXJhY3Rl",
            "cl9tYXNrX2NvbmZpZxgDIAEoCzIqLmdvb2dsZS5wcml2YWN5LmRscC52Mi5D",
            "aGFyYWN0ZXJNYXNrQ29uZmlnSAASWQodY3J5cHRvX3JlcGxhY2VfZmZ4X2Zw",
            "ZV9jb25maWcYBCABKAsyMC5nb29nbGUucHJpdmFjeS5kbHAudjIuQ3J5cHRv",
            "UmVwbGFjZUZmeEZwZUNvbmZpZ0gAElYKG2ZpeGVkX3NpemVfYnVja2V0aW5n",
            "X2NvbmZpZxgFIAEoCzIvLmdvb2dsZS5wcml2YWN5LmRscC52Mi5GaXhlZFNp",
            "emVCdWNrZXRpbmdDb25maWdIABJCChBidWNrZXRpbmdfY29uZmlnGAYgASgL",
            "MiYuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkJ1Y2tldGluZ0NvbmZpZ0gAElkK",
            "HXJlcGxhY2Vfd2l0aF9pbmZvX3R5cGVfY29uZmlnGAcgASgLMjAuZ29vZ2xl",
            "LnByaXZhY3kuZGxwLnYyLlJlcGxhY2VXaXRoSW5mb1R5cGVDb25maWdIABJB",
            "ChB0aW1lX3BhcnRfY29uZmlnGAggASgLMiUuZ29vZ2xlLnByaXZhY3kuZGxw",
            "LnYyLlRpbWVQYXJ0Q29uZmlnSAASRQoSY3J5cHRvX2hhc2hfY29uZmlnGAkg",
            "ASgLMicuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkNyeXB0b0hhc2hDb25maWdI",
            "ABJDChFkYXRlX3NoaWZ0X2NvbmZpZxgLIAEoCzImLmdvb2dsZS5wcml2YWN5",
            "LmRscC52Mi5EYXRlU2hpZnRDb25maWdIABJXChtjcnlwdG9fZGV0ZXJtaW5p",
            "c3RpY19jb25maWcYDCABKAsyMC5nb29nbGUucHJpdmFjeS5kbHAudjIuQ3J5",
            "cHRvRGV0ZXJtaW5pc3RpY0NvbmZpZ0gAQhAKDnRyYW5zZm9ybWF0aW9uItwB",
            "Cg5UaW1lUGFydENvbmZpZxJHCg9wYXJ0X3RvX2V4dHJhY3QYASABKA4yLi5n",
            "b29nbGUucHJpdmFjeS5kbHAudjIuVGltZVBhcnRDb25maWcuVGltZVBhcnQi",
            "gAEKCFRpbWVQYXJ0EhkKFVRJTUVfUEFSVF9VTlNQRUNJRklFRBAAEggKBFlF",
            "QVIQARIJCgVNT05USBACEhAKDERBWV9PRl9NT05USBADEg8KC0RBWV9PRl9X",
            "RUVLEAQSEAoMV0VFS19PRl9ZRUFSEAUSDwoLSE9VUl9PRl9EQVkQBiJIChBD",
            "cnlwdG9IYXNoQ29uZmlnEjQKCmNyeXB0b19rZXkYASABKAsyIC5nb29nbGUu",
            "cHJpdmFjeS5kbHAudjIuQ3J5cHRvS2V5IsABChlDcnlwdG9EZXRlcm1pbmlz",
            "dGljQ29uZmlnEjQKCmNyeXB0b19rZXkYASABKAsyIC5nb29nbGUucHJpdmFj",
            "eS5kbHAudjIuQ3J5cHRvS2V5EjwKE3N1cnJvZ2F0ZV9pbmZvX3R5cGUYAiAB",
            "KAsyHy5nb29nbGUucHJpdmFjeS5kbHAudjIuSW5mb1R5cGUSLwoHY29udGV4",
            "dBgDIAEoCzIeLmdvb2dsZS5wcml2YWN5LmRscC52Mi5GaWVsZElkIkUKElJl",
            "cGxhY2VWYWx1ZUNvbmZpZxIvCgluZXdfdmFsdWUYASABKAsyHC5nb29nbGUu",
            "cHJpdmFjeS5kbHAudjIuVmFsdWUiGwoZUmVwbGFjZVdpdGhJbmZvVHlwZUNv",
            "bmZpZyIOCgxSZWRhY3RDb25maWcitgIKDUNoYXJzVG9JZ25vcmUSHAoSY2hh",
            "cmFjdGVyc190b19za2lwGAEgASgJSAASXwobY29tbW9uX2NoYXJhY3RlcnNf",
            "dG9faWdub3JlGAIgASgOMjguZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkNoYXJz",
            "VG9JZ25vcmUuQ29tbW9uQ2hhcnNUb0lnbm9yZUgAIpcBChNDb21tb25DaGFy",
            "c1RvSWdub3JlEiYKIkNPTU1PTl9DSEFSU19UT19JR05PUkVfVU5TUEVDSUZJ",
            "RUQQABILCgdOVU1FUklDEAESFAoQQUxQSEFfVVBQRVJfQ0FTRRACEhQKEEFM",
            "UEhBX0xPV0VSX0NBU0UQAxIPCgtQVU5DVFVBVElPThAEEg4KCldISVRFU1BB",
            "Q0UQBUIMCgpjaGFyYWN0ZXJzIqMBChNDaGFyYWN0ZXJNYXNrQ29uZmlnEhkK",
            "EW1hc2tpbmdfY2hhcmFjdGVyGAEgASgJEhYKDm51bWJlcl90b19tYXNrGAIg",
            "ASgFEhUKDXJldmVyc2Vfb3JkZXIYAyABKAgSQgoUY2hhcmFjdGVyc190b19p",
            "Z25vcmUYBCADKAsyJC5nb29nbGUucHJpdmFjeS5kbHAudjIuQ2hhcnNUb0ln",
            "bm9yZSKkAQoYRml4ZWRTaXplQnVja2V0aW5nQ29uZmlnEjYKC2xvd2VyX2Jv",
            "dW5kGAEgASgLMhwuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlZhbHVlQgPgQQIS",
            "NgoLdXBwZXJfYm91bmQYAiABKAsyHC5nb29nbGUucHJpdmFjeS5kbHAudjIu",
            "VmFsdWVCA+BBAhIYCgtidWNrZXRfc2l6ZRgDIAEoAUID4EECIvABCg9CdWNr",
            "ZXRpbmdDb25maWcSPgoHYnVja2V0cxgBIAMoCzItLmdvb2dsZS5wcml2YWN5",
            "LmRscC52Mi5CdWNrZXRpbmdDb25maWcuQnVja2V0GpwBCgZCdWNrZXQSKQoD",
            "bWluGAEgASgLMhwuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlZhbHVlEikKA21h",
            "eBgCIAEoCzIcLmdvb2dsZS5wcml2YWN5LmRscC52Mi5WYWx1ZRI8ChFyZXBs",
            "YWNlbWVudF92YWx1ZRgDIAEoCzIcLmdvb2dsZS5wcml2YWN5LmRscC52Mi5W",
            "YWx1ZUID4EECIvkDChlDcnlwdG9SZXBsYWNlRmZ4RnBlQ29uZmlnEjkKCmNy",
            "eXB0b19rZXkYASABKAsyIC5nb29nbGUucHJpdmFjeS5kbHAudjIuQ3J5cHRv",
            "S2V5QgPgQQISLwoHY29udGV4dBgCIAEoCzIeLmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5GaWVsZElkEmMKD2NvbW1vbl9hbHBoYWJldBgEIAEoDjJILmdvb2ds",
            "ZS5wcml2YWN5LmRscC52Mi5DcnlwdG9SZXBsYWNlRmZ4RnBlQ29uZmlnLkZm",
            "eENvbW1vbk5hdGl2ZUFscGhhYmV0SAASGQoPY3VzdG9tX2FscGhhYmV0GAUg",
            "ASgJSAASDwoFcmFkaXgYBiABKAVIABI8ChNzdXJyb2dhdGVfaW5mb190eXBl",
            "GAggASgLMh8uZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkluZm9UeXBlIpQBChdG",
            "ZnhDb21tb25OYXRpdmVBbHBoYWJldBIqCiZGRlhfQ09NTU9OX05BVElWRV9B",
            "TFBIQUJFVF9VTlNQRUNJRklFRBAAEgsKB05VTUVSSUMQARIPCgtIRVhBREVD",
            "SU1BTBACEhwKGFVQUEVSX0NBU0VfQUxQSEFfTlVNRVJJQxADEhEKDUFMUEhB",
            "X05VTUVSSUMQBEIKCghhbHBoYWJldCLYAQoJQ3J5cHRvS2V5Ej4KCXRyYW5z",
            "aWVudBgBIAEoCzIpLmdvb2dsZS5wcml2YWN5LmRscC52Mi5UcmFuc2llbnRD",
            "cnlwdG9LZXlIABI+Cgl1bndyYXBwZWQYAiABKAsyKS5nb29nbGUucHJpdmFj",
            "eS5kbHAudjIuVW53cmFwcGVkQ3J5cHRvS2V5SAASQQoLa21zX3dyYXBwZWQY",
            "AyABKAsyKi5nb29nbGUucHJpdmFjeS5kbHAudjIuS21zV3JhcHBlZENyeXB0",
            "b0tleUgAQggKBnNvdXJjZSInChJUcmFuc2llbnRDcnlwdG9LZXkSEQoEbmFt",
            "ZRgBIAEoCUID4EECIiYKElVud3JhcHBlZENyeXB0b0tleRIQCgNrZXkYASAB",
            "KAxCA+BBAiJNChNLbXNXcmFwcGVkQ3J5cHRvS2V5EhgKC3dyYXBwZWRfa2V5",
            "GAEgASgMQgPgQQISHAoPY3J5cHRvX2tleV9uYW1lGAIgASgJQgPgQQIiwgEK",
            "D0RhdGVTaGlmdENvbmZpZxIdChB1cHBlcl9ib3VuZF9kYXlzGAEgASgFQgPg",
            "QQISHQoQbG93ZXJfYm91bmRfZGF5cxgCIAEoBUID4EECEi8KB2NvbnRleHQY",
            "AyABKAsyHi5nb29nbGUucHJpdmFjeS5kbHAudjIuRmllbGRJZBI2Cgpjcnlw",
            "dG9fa2V5GAQgASgLMiAuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkNyeXB0b0tl",
            "eUgAQggKBm1ldGhvZCKlAgoXSW5mb1R5cGVUcmFuc2Zvcm1hdGlvbnMSYwoP",
            "dHJhbnNmb3JtYXRpb25zGAEgAygLMkUuZ29vZ2xlLnByaXZhY3kuZGxwLnYy",
            "LkluZm9UeXBlVHJhbnNmb3JtYXRpb25zLkluZm9UeXBlVHJhbnNmb3JtYXRp",
            "b25CA+BBAhqkAQoWSW5mb1R5cGVUcmFuc2Zvcm1hdGlvbhIzCgppbmZvX3R5",
            "cGVzGAEgAygLMh8uZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkluZm9UeXBlElUK",
            "GHByaW1pdGl2ZV90cmFuc2Zvcm1hdGlvbhgCIAEoCzIuLmdvb2dsZS5wcml2",
            "YWN5LmRscC52Mi5QcmltaXRpdmVUcmFuc2Zvcm1hdGlvbkID4EECIsACChNG",
            "aWVsZFRyYW5zZm9ybWF0aW9uEjMKBmZpZWxkcxgBIAMoCzIeLmdvb2dsZS5w",
            "cml2YWN5LmRscC52Mi5GaWVsZElkQgPgQQISOQoJY29uZGl0aW9uGAMgASgL",
            "MiYuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlJlY29yZENvbmRpdGlvbhJSChhw",
            "cmltaXRpdmVfdHJhbnNmb3JtYXRpb24YBCABKAsyLi5nb29nbGUucHJpdmFj",
            "eS5kbHAudjIuUHJpbWl0aXZlVHJhbnNmb3JtYXRpb25IABJTChlpbmZvX3R5",
            "cGVfdHJhbnNmb3JtYXRpb25zGAUgASgLMi4uZ29vZ2xlLnByaXZhY3kuZGxw",
            "LnYyLkluZm9UeXBlVHJhbnNmb3JtYXRpb25zSABCEAoOdHJhbnNmb3JtYXRp",
            "b24iqQEKFVJlY29yZFRyYW5zZm9ybWF0aW9ucxJJChVmaWVsZF90cmFuc2Zv",
            "cm1hdGlvbnMYASADKAsyKi5nb29nbGUucHJpdmFjeS5kbHAudjIuRmllbGRU",
            "cmFuc2Zvcm1hdGlvbhJFChNyZWNvcmRfc3VwcHJlc3Npb25zGAIgAygLMigu",
            "Z29vZ2xlLnByaXZhY3kuZGxwLnYyLlJlY29yZFN1cHByZXNzaW9uIk4KEVJl",
            "Y29yZFN1cHByZXNzaW9uEjkKCWNvbmRpdGlvbhgBIAEoCzImLmdvb2dsZS5w",
            "cml2YWN5LmRscC52Mi5SZWNvcmRDb25kaXRpb24i3AQKD1JlY29yZENvbmRp",
            "dGlvbhJHCgtleHByZXNzaW9ucxgDIAEoCzIyLmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5SZWNvcmRDb25kaXRpb24uRXhwcmVzc2lvbnMargEKCUNvbmRpdGlv",
            "bhIyCgVmaWVsZBgBIAEoCzIeLmdvb2dsZS5wcml2YWN5LmRscC52Mi5GaWVs",
            "ZElkQgPgQQISQAoIb3BlcmF0b3IYAyABKA4yKS5nb29nbGUucHJpdmFjeS5k",
            "bHAudjIuUmVsYXRpb25hbE9wZXJhdG9yQgPgQQISKwoFdmFsdWUYBCABKAsy",
            "HC5nb29nbGUucHJpdmFjeS5kbHAudjIuVmFsdWUaUgoKQ29uZGl0aW9ucxJE",
            "Cgpjb25kaXRpb25zGAEgAygLMjAuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlJl",
            "Y29yZENvbmRpdGlvbi5Db25kaXRpb24a+gEKC0V4cHJlc3Npb25zElwKEGxv",
            "Z2ljYWxfb3BlcmF0b3IYASABKA4yQi5nb29nbGUucHJpdmFjeS5kbHAudjIu",
            "UmVjb3JkQ29uZGl0aW9uLkV4cHJlc3Npb25zLkxvZ2ljYWxPcGVyYXRvchJH",
            "Cgpjb25kaXRpb25zGAMgASgLMjEuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlJl",
            "Y29yZENvbmRpdGlvbi5Db25kaXRpb25zSAAiPAoPTG9naWNhbE9wZXJhdG9y",
            "EiAKHExPR0lDQUxfT1BFUkFUT1JfVU5TUEVDSUZJRUQQABIHCgNBTkQQAUIG",
            "CgR0eXBlIoMBChZUcmFuc2Zvcm1hdGlvbk92ZXJ2aWV3EhkKEXRyYW5zZm9y",
            "bWVkX2J5dGVzGAIgASgDEk4KGHRyYW5zZm9ybWF0aW9uX3N1bW1hcmllcxgD",
            "IAMoCzIsLmdvb2dsZS5wcml2YWN5LmRscC52Mi5UcmFuc2Zvcm1hdGlvblN1",
            "bW1hcnkinwUKFVRyYW5zZm9ybWF0aW9uU3VtbWFyeRIyCglpbmZvX3R5cGUY",
            "ASABKAsyHy5nb29nbGUucHJpdmFjeS5kbHAudjIuSW5mb1R5cGUSLQoFZmll",
            "bGQYAiABKAsyHi5nb29nbGUucHJpdmFjeS5kbHAudjIuRmllbGRJZBJGCg50",
            "cmFuc2Zvcm1hdGlvbhgDIAEoCzIuLmdvb2dsZS5wcml2YWN5LmRscC52Mi5Q",
            "cmltaXRpdmVUcmFuc2Zvcm1hdGlvbhJJChVmaWVsZF90cmFuc2Zvcm1hdGlv",
            "bnMYBSADKAsyKi5nb29nbGUucHJpdmFjeS5kbHAudjIuRmllbGRUcmFuc2Zv",
            "cm1hdGlvbhJBCg9yZWNvcmRfc3VwcHJlc3MYBiABKAsyKC5nb29nbGUucHJp",
            "dmFjeS5kbHAudjIuUmVjb3JkU3VwcHJlc3Npb24SSwoHcmVzdWx0cxgEIAMo",
            "CzI6Lmdvb2dsZS5wcml2YWN5LmRscC52Mi5UcmFuc2Zvcm1hdGlvblN1bW1h",
            "cnkuU3VtbWFyeVJlc3VsdBIZChF0cmFuc2Zvcm1lZF9ieXRlcxgHIAEoAxqE",
            "AQoNU3VtbWFyeVJlc3VsdBINCgVjb3VudBgBIAEoAxJTCgRjb2RlGAIgASgO",
            "MkUuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlRyYW5zZm9ybWF0aW9uU3VtbWFy",
            "eS5UcmFuc2Zvcm1hdGlvblJlc3VsdENvZGUSDwoHZGV0YWlscxgDIAEoCSJe",
            "ChhUcmFuc2Zvcm1hdGlvblJlc3VsdENvZGUSKgomVFJBTlNGT1JNQVRJT05f",
            "UkVTVUxUX0NPREVfVU5TUEVDSUZJRUQQABILCgdTVUNDRVNTEAESCQoFRVJS",
            "T1IQAiJVCghTY2hlZHVsZRI/ChpyZWN1cnJlbmNlX3BlcmlvZF9kdXJhdGlv",
            "bhgBIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkgAQggKBm9wdGlv",
            "biIICgZNYW51YWwiwgQKD0luc3BlY3RUZW1wbGF0ZRIRCgRuYW1lGAEgASgJ",
            "QgPgQQMSFAoMZGlzcGxheV9uYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMg",
            "ASgJEjQKC2NyZWF0ZV90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGAUgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcEID4EEDEjwKDmluc3BlY3RfY29uZmlnGAYgASgL",
            "MiQuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkluc3BlY3RDb25maWc6xgLqQcIC",
            "CiJkbHAuZ29vZ2xlYXBpcy5jb20vSW5zcGVjdFRlbXBsYXRlEkBvcmdhbml6",
            "YXRpb25zL3tvcmdhbml6YXRpb259L2luc3BlY3RUZW1wbGF0ZXMve2luc3Bl",
            "Y3RfdGVtcGxhdGV9EjZwcm9qZWN0cy97cHJvamVjdH0vaW5zcGVjdFRlbXBs",
            "YXRlcy97aW5zcGVjdF90ZW1wbGF0ZX0SVW9yZ2FuaXphdGlvbnMve29yZ2Fu",
            "aXphdGlvbn0vbG9jYXRpb25zL3tsb2NhdGlvbn0vaW5zcGVjdFRlbXBsYXRl",
            "cy97aW5zcGVjdF90ZW1wbGF0ZX0SS3Byb2plY3RzL3twcm9qZWN0fS9sb2Nh",
            "dGlvbnMve2xvY2F0aW9ufS9pbnNwZWN0VGVtcGxhdGVzL3tpbnNwZWN0X3Rl",
            "bXBsYXRlfSLmBAoSRGVpZGVudGlmeVRlbXBsYXRlEhEKBG5hbWUYASABKAlC",
            "A+BBAxIUCgxkaXNwbGF5X25hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyAB",
            "KAkSNAoLY3JlYXRlX3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYBSABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wQgPgQQMSQgoRZGVpZGVudGlmeV9jb25maWcYBiAB",
            "KAsyJy5nb29nbGUucHJpdmFjeS5kbHAudjIuRGVpZGVudGlmeUNvbmZpZzrh",
            "AupB3QIKJWRscC5nb29nbGVhcGlzLmNvbS9EZWlkZW50aWZ5VGVtcGxhdGUS",
            "Rm9yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbn0vZGVpZGVudGlmeVRlbXBs",
            "YXRlcy97ZGVpZGVudGlmeV90ZW1wbGF0ZX0SPHByb2plY3RzL3twcm9qZWN0",
            "fS9kZWlkZW50aWZ5VGVtcGxhdGVzL3tkZWlkZW50aWZ5X3RlbXBsYXRlfRJb",
            "b3JnYW5pemF0aW9ucy97b3JnYW5pemF0aW9ufS9sb2NhdGlvbnMve2xvY2F0",
            "aW9ufS9kZWlkZW50aWZ5VGVtcGxhdGVzL3tkZWlkZW50aWZ5X3RlbXBsYXRl",
            "fRJRcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2Rl",
            "aWRlbnRpZnlUZW1wbGF0ZXMve2RlaWRlbnRpZnlfdGVtcGxhdGV9IlwKBUVy",
            "cm9yEiMKB2RldGFpbHMYASABKAsyEi5nb29nbGUucnBjLlN0YXR1cxIuCgp0",
            "aW1lc3RhbXBzGAIgAygLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCK8",
            "BgoKSm9iVHJpZ2dlchIMCgRuYW1lGAEgASgJEhQKDGRpc3BsYXlfbmFtZRgC",
            "IAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCRI+CgtpbnNwZWN0X2pvYhgEIAEo",
            "CzInLmdvb2dsZS5wcml2YWN5LmRscC52Mi5JbnNwZWN0Sm9iQ29uZmlnSAAS",
            "OwoIdHJpZ2dlcnMYBSADKAsyKS5nb29nbGUucHJpdmFjeS5kbHAudjIuSm9i",
            "VHJpZ2dlci5UcmlnZ2VyEjEKBmVycm9ycxgGIAMoCzIcLmdvb2dsZS5wcml2",
            "YWN5LmRscC52Mi5FcnJvckID4EEDEjQKC2NyZWF0ZV90aW1lGAcgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90aW1l",
            "GAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjYKDWxh",
            "c3RfcnVuX3RpbWUYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "QgPgQQMSPQoGc3RhdHVzGAogASgOMiguZ29vZ2xlLnByaXZhY3kuZGxwLnYy",
            "LkpvYlRyaWdnZXIuU3RhdHVzQgPgQQIaegoHVHJpZ2dlchIzCghzY2hlZHVs",
            "ZRgBIAEoCzIfLmdvb2dsZS5wcml2YWN5LmRscC52Mi5TY2hlZHVsZUgAEi8K",
            "Bm1hbnVhbBgCIAEoCzIdLmdvb2dsZS5wcml2YWN5LmRscC52Mi5NYW51YWxI",
            "AEIJCgd0cmlnZ2VyIkgKBlN0YXR1cxIWChJTVEFUVVNfVU5TUEVDSUZJRUQQ",
            "ABILCgdIRUFMVEhZEAESCgoGUEFVU0VEEAISDQoJQ0FOQ0VMTEVEEAM6lAHq",
            "QZABCh1kbHAuZ29vZ2xlYXBpcy5jb20vSm9iVHJpZ2dlchIscHJvamVjdHMv",
            "e3Byb2plY3R9L2pvYlRyaWdnZXJzL3tqb2JfdHJpZ2dlcn0SQXByb2plY3Rz",
            "L3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9qb2JUcmlnZ2Vycy97",
            "am9iX3RyaWdnZXJ9QgUKA2pvYiL0BQoGQWN0aW9uEkMKDXNhdmVfZmluZGlu",
            "Z3MYASABKAsyKi5nb29nbGUucHJpdmFjeS5kbHAudjIuQWN0aW9uLlNhdmVG",
            "aW5kaW5nc0gAEkAKB3B1Yl9zdWIYAiABKAsyLS5nb29nbGUucHJpdmFjeS5k",
            "bHAudjIuQWN0aW9uLlB1Ymxpc2hUb1B1YlN1YkgAElUKF3B1Ymxpc2hfc3Vt",
            "bWFyeV90b19jc2NjGAMgASgLMjIuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkFj",
            "dGlvbi5QdWJsaXNoU3VtbWFyeVRvQ3NjY0gAEnEKJnB1Ymxpc2hfZmluZGlu",
            "Z3NfdG9fY2xvdWRfZGF0YV9jYXRhbG9nGAUgASgLMj8uZ29vZ2xlLnByaXZh",
            "Y3kuZGxwLnYyLkFjdGlvbi5QdWJsaXNoRmluZGluZ3NUb0Nsb3VkRGF0YUNh",
            "dGFsb2dIABJWChdqb2Jfbm90aWZpY2F0aW9uX2VtYWlscxgIIAEoCzIzLmdv",
            "b2dsZS5wcml2YWN5LmRscC52Mi5BY3Rpb24uSm9iTm90aWZpY2F0aW9uRW1h",
            "aWxzSAASVAoWcHVibGlzaF90b19zdGFja2RyaXZlchgJIAEoCzIyLmdvb2ds",
            "ZS5wcml2YWN5LmRscC52Mi5BY3Rpb24uUHVibGlzaFRvU3RhY2tkcml2ZXJI",
            "ABpRCgxTYXZlRmluZGluZ3MSQQoNb3V0cHV0X2NvbmZpZxgBIAEoCzIqLmdv",
            "b2dsZS5wcml2YWN5LmRscC52Mi5PdXRwdXRTdG9yYWdlQ29uZmlnGiAKD1B1",
            "Ymxpc2hUb1B1YlN1YhINCgV0b3BpYxgBIAEoCRoWChRQdWJsaXNoU3VtbWFy",
            "eVRvQ3NjYxojCiFQdWJsaXNoRmluZGluZ3NUb0Nsb3VkRGF0YUNhdGFsb2ca",
            "FwoVSm9iTm90aWZpY2F0aW9uRW1haWxzGhYKFFB1Ymxpc2hUb1N0YWNrZHJp",
            "dmVyQggKBmFjdGlvbiLLAQocQ3JlYXRlSW5zcGVjdFRlbXBsYXRlUmVxdWVz",
            "dBI6CgZwYXJlbnQYASABKAlCKuBBAvpBJBIiZGxwLmdvb2dsZWFwaXMuY29t",
            "L0luc3BlY3RUZW1wbGF0ZRJFChBpbnNwZWN0X3RlbXBsYXRlGAIgASgLMiYu",
            "Z29vZ2xlLnByaXZhY3kuZGxwLnYyLkluc3BlY3RUZW1wbGF0ZUID4EECEhMK",
            "C3RlbXBsYXRlX2lkGAMgASgJEhMKC2xvY2F0aW9uX2lkGAQgASgJIssBChxV",
            "cGRhdGVJbnNwZWN0VGVtcGxhdGVSZXF1ZXN0EjgKBG5hbWUYASABKAlCKuBB",
            "AvpBJAoiZGxwLmdvb2dsZWFwaXMuY29tL0luc3BlY3RUZW1wbGF0ZRJAChBp",
            "bnNwZWN0X3RlbXBsYXRlGAIgASgLMiYuZ29vZ2xlLnByaXZhY3kuZGxwLnYy",
            "Lkluc3BlY3RUZW1wbGF0ZRIvCgt1cGRhdGVfbWFzaxgDIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5GaWVsZE1hc2siVQoZR2V0SW5zcGVjdFRlbXBsYXRlUmVx",
            "dWVzdBI4CgRuYW1lGAEgASgJQirgQQL6QSQKImRscC5nb29nbGVhcGlzLmNv",
            "bS9JbnNwZWN0VGVtcGxhdGUipwEKG0xpc3RJbnNwZWN0VGVtcGxhdGVzUmVx",
            "dWVzdBI6CgZwYXJlbnQYASABKAlCKuBBAvpBJBIiZGxwLmdvb2dsZWFwaXMu",
            "Y29tL0luc3BlY3RUZW1wbGF0ZRISCgpwYWdlX3Rva2VuGAIgASgJEhEKCXBh",
            "Z2Vfc2l6ZRgDIAEoBRIQCghvcmRlcl9ieRgEIAEoCRITCgtsb2NhdGlvbl9p",
            "ZBgFIAEoCSJ6ChxMaXN0SW5zcGVjdFRlbXBsYXRlc1Jlc3BvbnNlEkEKEWlu",
            "c3BlY3RfdGVtcGxhdGVzGAEgAygLMiYuZ29vZ2xlLnByaXZhY3kuZGxwLnYy",
            "Lkluc3BlY3RUZW1wbGF0ZRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiWAoc",
            "RGVsZXRlSW5zcGVjdFRlbXBsYXRlUmVxdWVzdBI4CgRuYW1lGAEgASgJQirg",
            "QQL6QSQKImRscC5nb29nbGVhcGlzLmNvbS9JbnNwZWN0VGVtcGxhdGUitgEK",
            "F0NyZWF0ZUpvYlRyaWdnZXJSZXF1ZXN0EjUKBnBhcmVudBgBIAEoCUIl4EEC",
            "+kEfEh1kbHAuZ29vZ2xlYXBpcy5jb20vSm9iVHJpZ2dlchI7Cgtqb2JfdHJp",
            "Z2dlchgCIAEoCzIhLmdvb2dsZS5wcml2YWN5LmRscC52Mi5Kb2JUcmlnZ2Vy",
            "QgPgQQISEgoKdHJpZ2dlcl9pZBgDIAEoCRITCgtsb2NhdGlvbl9pZBgEIAEo",
            "CSJQChlBY3RpdmF0ZUpvYlRyaWdnZXJSZXF1ZXN0EjMKBG5hbWUYASABKAlC",
            "JeBBAvpBHwodZGxwLmdvb2dsZWFwaXMuY29tL0pvYlRyaWdnZXIitwEKF1Vw",
            "ZGF0ZUpvYlRyaWdnZXJSZXF1ZXN0EjMKBG5hbWUYASABKAlCJeBBAvpBHwod",
            "ZGxwLmdvb2dsZWFwaXMuY29tL0pvYlRyaWdnZXISNgoLam9iX3RyaWdnZXIY",
            "AiABKAsyIS5nb29nbGUucHJpdmFjeS5kbHAudjIuSm9iVHJpZ2dlchIvCgt1",
            "cGRhdGVfbWFzaxgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2si",
            "SwoUR2V0Sm9iVHJpZ2dlclJlcXVlc3QSMwoEbmFtZRgBIAEoCUIl4EEC+kEf",
            "Ch1kbHAuZ29vZ2xlYXBpcy5jb20vSm9iVHJpZ2dlciL2AQoTQ3JlYXRlRGxw",
            "Sm9iUmVxdWVzdBIxCgZwYXJlbnQYASABKAlCIeBBAvpBGxIZZGxwLmdvb2ds",
            "ZWFwaXMuY29tL0RscEpvYhI+CgtpbnNwZWN0X2pvYhgCIAEoCzInLmdvb2ds",
            "ZS5wcml2YWN5LmRscC52Mi5JbnNwZWN0Sm9iQ29uZmlnSAASQAoIcmlza19q",
            "b2IYAyABKAsyLC5nb29nbGUucHJpdmFjeS5kbHAudjIuUmlza0FuYWx5c2lz",
            "Sm9iQ29uZmlnSAASDgoGam9iX2lkGAQgASgJEhMKC2xvY2F0aW9uX2lkGAUg",
            "ASgJQgUKA2pvYiKtAQoWTGlzdEpvYlRyaWdnZXJzUmVxdWVzdBI1CgZwYXJl",
            "bnQYASABKAlCJeBBAvpBHxIdZGxwLmdvb2dsZWFwaXMuY29tL0pvYlRyaWdn",
            "ZXISEgoKcGFnZV90b2tlbhgCIAEoCRIRCglwYWdlX3NpemUYAyABKAUSEAoI",
            "b3JkZXJfYnkYBCABKAkSDgoGZmlsdGVyGAUgASgJEhMKC2xvY2F0aW9uX2lk",
            "GAcgASgJImsKF0xpc3RKb2JUcmlnZ2Vyc1Jlc3BvbnNlEjcKDGpvYl90cmln",
            "Z2VycxgBIAMoCzIhLmdvb2dsZS5wcml2YWN5LmRscC52Mi5Kb2JUcmlnZ2Vy",
            "EhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJOChdEZWxldGVKb2JUcmlnZ2Vy",
            "UmVxdWVzdBIzCgRuYW1lGAEgASgJQiXgQQL6QR8KHWRscC5nb29nbGVhcGlz",
            "LmNvbS9Kb2JUcmlnZ2VyIt0BChBJbnNwZWN0Sm9iQ29uZmlnEjwKDnN0b3Jh",
            "Z2VfY29uZmlnGAEgASgLMiQuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlN0b3Jh",
            "Z2VDb25maWcSPAoOaW5zcGVjdF9jb25maWcYAiABKAsyJC5nb29nbGUucHJp",
            "dmFjeS5kbHAudjIuSW5zcGVjdENvbmZpZxIdChVpbnNwZWN0X3RlbXBsYXRl",
            "X25hbWUYAyABKAkSLgoHYWN0aW9ucxgEIAMoCzIdLmdvb2dsZS5wcml2YWN5",
            "LmRscC52Mi5BY3Rpb24i6wUKBkRscEpvYhIMCgRuYW1lGAEgASgJEi8KBHR5",
            "cGUYAiABKA4yIS5nb29nbGUucHJpdmFjeS5kbHAudjIuRGxwSm9iVHlwZRI1",
            "CgVzdGF0ZRgDIAEoDjImLmdvb2dsZS5wcml2YWN5LmRscC52Mi5EbHBKb2Iu",
            "Sm9iU3RhdGUSSwoMcmlza19kZXRhaWxzGAQgASgLMjMuZ29vZ2xlLnByaXZh",
            "Y3kuZGxwLnYyLkFuYWx5emVEYXRhU291cmNlUmlza0RldGFpbHNIABJKCg9p",
            "bnNwZWN0X2RldGFpbHMYBSABKAsyLy5nb29nbGUucHJpdmFjeS5kbHAudjIu",
            "SW5zcGVjdERhdGFTb3VyY2VEZXRhaWxzSAASLwoLY3JlYXRlX3RpbWUYBiAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCnN0YXJ0X3RpbWUY",
            "ByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1l",
            "GAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIYChBqb2JfdHJp",
            "Z2dlcl9uYW1lGAogASgJEiwKBmVycm9ycxgLIAMoCzIcLmdvb2dsZS5wcml2",
            "YWN5LmRscC52Mi5FcnJvciJvCghKb2JTdGF0ZRIZChVKT0JfU1RBVEVfVU5T",
            "UEVDSUZJRUQQABILCgdQRU5ESU5HEAESCwoHUlVOTklORxACEggKBERPTkUQ",
            "AxIMCghDQU5DRUxFRBAEEgoKBkZBSUxFRBAFEgoKBkFDVElWRRAGOn/qQXwK",
            "GWRscC5nb29nbGVhcGlzLmNvbS9EbHBKb2ISJHByb2plY3RzL3twcm9qZWN0",
            "fS9kbHBKb2JzL3tkbHBfam9ifRI5cHJvamVjdHMve3Byb2plY3R9L2xvY2F0",
            "aW9ucy97bG9jYXRpb259L2RscEpvYnMve2RscF9qb2J9QgkKB2RldGFpbHMi",
            "QwoQR2V0RGxwSm9iUmVxdWVzdBIvCgRuYW1lGAEgASgJQiHgQQL6QRsKGWRs",
            "cC5nb29nbGVhcGlzLmNvbS9EbHBKb2Ii1gEKEkxpc3REbHBKb2JzUmVxdWVz",
            "dBIxCgZwYXJlbnQYBCABKAlCIeBBAvpBGxIZZGxwLmdvb2dsZWFwaXMuY29t",
            "L0RscEpvYhIOCgZmaWx0ZXIYASABKAkSEQoJcGFnZV9zaXplGAIgASgFEhIK",
            "CnBhZ2VfdG9rZW4YAyABKAkSLwoEdHlwZRgFIAEoDjIhLmdvb2dsZS5wcml2",
            "YWN5LmRscC52Mi5EbHBKb2JUeXBlEhAKCG9yZGVyX2J5GAYgASgJEhMKC2xv",
            "Y2F0aW9uX2lkGAcgASgJIlsKE0xpc3REbHBKb2JzUmVzcG9uc2USKwoEam9i",
            "cxgBIAMoCzIdLmdvb2dsZS5wcml2YWN5LmRscC52Mi5EbHBKb2ISFwoPbmV4",
            "dF9wYWdlX3Rva2VuGAIgASgJIkYKE0NhbmNlbERscEpvYlJlcXVlc3QSLwoE",
            "bmFtZRgBIAEoCUIh4EEC+kEbChlkbHAuZ29vZ2xlYXBpcy5jb20vRGxwSm9i",
            "IkYKE0ZpbmlzaERscEpvYlJlcXVlc3QSLwoEbmFtZRgBIAEoCUIh4EEC+kEb",
            "ChlkbHAuZ29vZ2xlYXBpcy5jb20vRGxwSm9iIkYKE0RlbGV0ZURscEpvYlJl",
            "cXVlc3QSLwoEbmFtZRgBIAEoCUIh4EEC+kEbChlkbHAuZ29vZ2xlYXBpcy5j",
            "b20vRGxwSm9iItcBCh9DcmVhdGVEZWlkZW50aWZ5VGVtcGxhdGVSZXF1ZXN0",
            "Ej0KBnBhcmVudBgBIAEoCUIt4EEC+kEnEiVkbHAuZ29vZ2xlYXBpcy5jb20v",
            "RGVpZGVudGlmeVRlbXBsYXRlEksKE2RlaWRlbnRpZnlfdGVtcGxhdGUYAiAB",
            "KAsyKS5nb29nbGUucHJpdmFjeS5kbHAudjIuRGVpZGVudGlmeVRlbXBsYXRl",
            "QgPgQQISEwoLdGVtcGxhdGVfaWQYAyABKAkSEwoLbG9jYXRpb25faWQYBCAB",
            "KAki1wEKH1VwZGF0ZURlaWRlbnRpZnlUZW1wbGF0ZVJlcXVlc3QSOwoEbmFt",
            "ZRgBIAEoCUIt4EEC+kEnCiVkbHAuZ29vZ2xlYXBpcy5jb20vRGVpZGVudGlm",
            "eVRlbXBsYXRlEkYKE2RlaWRlbnRpZnlfdGVtcGxhdGUYAiABKAsyKS5nb29n",
            "bGUucHJpdmFjeS5kbHAudjIuRGVpZGVudGlmeVRlbXBsYXRlEi8KC3VwZGF0",
            "ZV9tYXNrGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJbChxH",
            "ZXREZWlkZW50aWZ5VGVtcGxhdGVSZXF1ZXN0EjsKBG5hbWUYASABKAlCLeBB",
            "AvpBJwolZGxwLmdvb2dsZWFwaXMuY29tL0RlaWRlbnRpZnlUZW1wbGF0ZSKt",
            "AQoeTGlzdERlaWRlbnRpZnlUZW1wbGF0ZXNSZXF1ZXN0Ej0KBnBhcmVudBgB",
            "IAEoCUIt4EEC+kEnEiVkbHAuZ29vZ2xlYXBpcy5jb20vRGVpZGVudGlmeVRl",
            "bXBsYXRlEhIKCnBhZ2VfdG9rZW4YAiABKAkSEQoJcGFnZV9zaXplGAMgASgF",
            "EhAKCG9yZGVyX2J5GAQgASgJEhMKC2xvY2F0aW9uX2lkGAUgASgJIoMBCh9M",
            "aXN0RGVpZGVudGlmeVRlbXBsYXRlc1Jlc3BvbnNlEkcKFGRlaWRlbnRpZnlf",
            "dGVtcGxhdGVzGAEgAygLMikuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkRlaWRl",
            "bnRpZnlUZW1wbGF0ZRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiXgofRGVs",
            "ZXRlRGVpZGVudGlmeVRlbXBsYXRlUmVxdWVzdBI7CgRuYW1lGAEgASgJQi3g",
            "QQL6QScKJWRscC5nb29nbGVhcGlzLmNvbS9EZWlkZW50aWZ5VGVtcGxhdGUi",
            "9AEKG0xhcmdlQ3VzdG9tRGljdGlvbmFyeUNvbmZpZxI8CgtvdXRwdXRfcGF0",
            "aBgBIAEoCzInLmdvb2dsZS5wcml2YWN5LmRscC52Mi5DbG91ZFN0b3JhZ2VQ",
            "YXRoEkwKFmNsb3VkX3N0b3JhZ2VfZmlsZV9zZXQYAiABKAsyKi5nb29nbGUu",
            "cHJpdmFjeS5kbHAudjIuQ2xvdWRTdG9yYWdlRmlsZVNldEgAEj8KD2JpZ19x",
            "dWVyeV9maWVsZBgDIAEoCzIkLmdvb2dsZS5wcml2YWN5LmRscC52Mi5CaWdR",
            "dWVyeUZpZWxkSABCCAoGc291cmNlIjgKGkxhcmdlQ3VzdG9tRGljdGlvbmFy",
            "eVN0YXRzEhoKEmFwcHJveF9udW1fcGhyYXNlcxgBIAEoAyKmAgoUU3RvcmVk",
            "SW5mb1R5cGVDb25maWcSFAoMZGlzcGxheV9uYW1lGAEgASgJEhMKC2Rlc2Ny",
            "aXB0aW9uGAIgASgJElUKF2xhcmdlX2N1c3RvbV9kaWN0aW9uYXJ5GAMgASgL",
            "MjIuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkxhcmdlQ3VzdG9tRGljdGlvbmFy",
            "eUNvbmZpZ0gAEkYKCmRpY3Rpb25hcnkYBCABKAsyMC5nb29nbGUucHJpdmFj",
            "eS5kbHAudjIuQ3VzdG9tSW5mb1R5cGUuRGljdGlvbmFyeUgAEjwKBXJlZ2V4",
            "GAUgASgLMisuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkN1c3RvbUluZm9UeXBl",
            "LlJlZ2V4SABCBgoEdHlwZSJzChNTdG9yZWRJbmZvVHlwZVN0YXRzElQKF2xh",
            "cmdlX2N1c3RvbV9kaWN0aW9uYXJ5GAEgASgLMjEuZ29vZ2xlLnByaXZhY3ku",
            "ZGxwLnYyLkxhcmdlQ3VzdG9tRGljdGlvbmFyeVN0YXRzSABCBgoEdHlwZSKp",
            "AgoVU3RvcmVkSW5mb1R5cGVWZXJzaW9uEjsKBmNvbmZpZxgBIAEoCzIrLmdv",
            "b2dsZS5wcml2YWN5LmRscC52Mi5TdG9yZWRJbmZvVHlwZUNvbmZpZxIvCgtj",
            "cmVhdGVfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "OQoFc3RhdGUYAyABKA4yKi5nb29nbGUucHJpdmFjeS5kbHAudjIuU3RvcmVk",
            "SW5mb1R5cGVTdGF0ZRIsCgZlcnJvcnMYBCADKAsyHC5nb29nbGUucHJpdmFj",
            "eS5kbHAudjIuRXJyb3ISOQoFc3RhdHMYBSABKAsyKi5nb29nbGUucHJpdmFj",
            "eS5kbHAudjIuU3RvcmVkSW5mb1R5cGVTdGF0cyLxAwoOU3RvcmVkSW5mb1R5",
            "cGUSDAoEbmFtZRgBIAEoCRJFCg9jdXJyZW50X3ZlcnNpb24YAiABKAsyLC5n",
            "b29nbGUucHJpdmFjeS5kbHAudjIuU3RvcmVkSW5mb1R5cGVWZXJzaW9uEkYK",
            "EHBlbmRpbmdfdmVyc2lvbnMYAyADKAsyLC5nb29nbGUucHJpdmFjeS5kbHAu",
            "djIuU3RvcmVkSW5mb1R5cGVWZXJzaW9uOsEC6kG9AgohZGxwLmdvb2dsZWFw",
            "aXMuY29tL1N0b3JlZEluZm9UeXBlEj9vcmdhbml6YXRpb25zL3tvcmdhbml6",
            "YXRpb259L3N0b3JlZEluZm9UeXBlcy97c3RvcmVkX2luZm9fdHlwZX0SNXBy",
            "b2plY3RzL3twcm9qZWN0fS9zdG9yZWRJbmZvVHlwZXMve3N0b3JlZF9pbmZv",
            "X3R5cGV9ElRvcmdhbml6YXRpb25zL3tvcmdhbml6YXRpb259L2xvY2F0aW9u",
            "cy97bG9jYXRpb259L3N0b3JlZEluZm9UeXBlcy97c3RvcmVkX2luZm9fdHlw",
            "ZX0SSnByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9z",
            "dG9yZWRJbmZvVHlwZXMve3N0b3JlZF9pbmZvX3R5cGV9IswBChtDcmVhdGVT",
            "dG9yZWRJbmZvVHlwZVJlcXVlc3QSOQoGcGFyZW50GAEgASgJQingQQL6QSMS",
            "IWRscC5nb29nbGVhcGlzLmNvbS9TdG9yZWRJbmZvVHlwZRJACgZjb25maWcY",
            "AiABKAsyKy5nb29nbGUucHJpdmFjeS5kbHAudjIuU3RvcmVkSW5mb1R5cGVD",
            "b25maWdCA+BBAhIbChNzdG9yZWRfaW5mb190eXBlX2lkGAMgASgJEhMKC2xv",
            "Y2F0aW9uX2lkGAQgASgJIsQBChtVcGRhdGVTdG9yZWRJbmZvVHlwZVJlcXVl",
            "c3QSNwoEbmFtZRgBIAEoCUIp4EEC+kEjCiFkbHAuZ29vZ2xlYXBpcy5jb20v",
            "U3RvcmVkSW5mb1R5cGUSOwoGY29uZmlnGAIgASgLMisuZ29vZ2xlLnByaXZh",
            "Y3kuZGxwLnYyLlN0b3JlZEluZm9UeXBlQ29uZmlnEi8KC3VwZGF0ZV9tYXNr",
            "GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayJTChhHZXRTdG9y",
            "ZWRJbmZvVHlwZVJlcXVlc3QSNwoEbmFtZRgBIAEoCUIp4EEC+kEjCiFkbHAu",
            "Z29vZ2xlYXBpcy5jb20vU3RvcmVkSW5mb1R5cGUipQEKGkxpc3RTdG9yZWRJ",
            "bmZvVHlwZXNSZXF1ZXN0EjkKBnBhcmVudBgBIAEoCUIp4EEC+kEjEiFkbHAu",
            "Z29vZ2xlYXBpcy5jb20vU3RvcmVkSW5mb1R5cGUSEgoKcGFnZV90b2tlbhgC",
            "IAEoCRIRCglwYWdlX3NpemUYAyABKAUSEAoIb3JkZXJfYnkYBCABKAkSEwoL",
            "bG9jYXRpb25faWQYBSABKAkieAobTGlzdFN0b3JlZEluZm9UeXBlc1Jlc3Bv",
            "bnNlEkAKEXN0b3JlZF9pbmZvX3R5cGVzGAEgAygLMiUuZ29vZ2xlLnByaXZh",
            "Y3kuZGxwLnYyLlN0b3JlZEluZm9UeXBlEhcKD25leHRfcGFnZV90b2tlbhgC",
            "IAEoCSJWChtEZWxldGVTdG9yZWRJbmZvVHlwZVJlcXVlc3QSNwoEbmFtZRgB",
            "IAEoCUIp4EEC+kEjCiFkbHAuZ29vZ2xlYXBpcy5jb20vU3RvcmVkSW5mb1R5",
            "cGUilAEKHkh5YnJpZEluc3BlY3RKb2JUcmlnZ2VyUmVxdWVzdBIzCgRuYW1l",
            "GAEgASgJQiXgQQL6QR8KHWRscC5nb29nbGVhcGlzLmNvbS9Kb2JUcmlnZ2Vy",
            "Ej0KC2h5YnJpZF9pdGVtGAMgASgLMiguZ29vZ2xlLnByaXZhY3kuZGxwLnYy",
            "Lkh5YnJpZENvbnRlbnRJdGVtIowBChpIeWJyaWRJbnNwZWN0RGxwSm9iUmVx",
            "dWVzdBIvCgRuYW1lGAEgASgJQiHgQQL6QRsKGWRscC5nb29nbGVhcGlzLmNv",
            "bS9EbHBKb2ISPQoLaHlicmlkX2l0ZW0YAyABKAsyKC5nb29nbGUucHJpdmFj",
            "eS5kbHAudjIuSHlicmlkQ29udGVudEl0ZW0iiwEKEUh5YnJpZENvbnRlbnRJ",
            "dGVtEjAKBGl0ZW0YASABKAsyIi5nb29nbGUucHJpdmFjeS5kbHAudjIuQ29u",
            "dGVudEl0ZW0SRAoPZmluZGluZ19kZXRhaWxzGAIgASgLMisuZ29vZ2xlLnBy",
            "aXZhY3kuZGxwLnYyLkh5YnJpZEZpbmRpbmdEZXRhaWxzIrACChRIeWJyaWRG",
            "aW5kaW5nRGV0YWlscxI7ChFjb250YWluZXJfZGV0YWlscxgBIAEoCzIgLmdv",
            "b2dsZS5wcml2YWN5LmRscC52Mi5Db250YWluZXISEwoLZmlsZV9vZmZzZXQY",
            "AiABKAMSEgoKcm93X29mZnNldBgDIAEoAxI6Cg10YWJsZV9vcHRpb25zGAQg",
            "ASgLMiMuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlRhYmxlT3B0aW9ucxJHCgZs",
            "YWJlbHMYBSADKAsyNy5nb29nbGUucHJpdmFjeS5kbHAudjIuSHlicmlkRmlu",
            "ZGluZ0RldGFpbHMuTGFiZWxzRW50cnkaLQoLTGFiZWxzRW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIXChVIeWJyaWRJbnNwZWN0UmVz",
            "cG9uc2UquwEKElJlbGF0aW9uYWxPcGVyYXRvchIjCh9SRUxBVElPTkFMX09Q",
            "RVJBVE9SX1VOU1BFQ0lGSUVEEAASDAoIRVFVQUxfVE8QARIQCgxOT1RfRVFV",
            "QUxfVE8QAhIQCgxHUkVBVEVSX1RIQU4QAxINCglMRVNTX1RIQU4QBBIaChZH",
            "UkVBVEVSX1RIQU5fT1JfRVFVQUxTEAUSFwoTTEVTU19USEFOX09SX0VRVUFM",
            "UxAGEgoKBkVYSVNUUxAHKo0BCgxNYXRjaGluZ1R5cGUSHQoZTUFUQ0hJTkdf",
            "VFlQRV9VTlNQRUNJRklFRBAAEhwKGE1BVENISU5HX1RZUEVfRlVMTF9NQVRD",
            "SBABEh8KG01BVENISU5HX1RZUEVfUEFSVElBTF9NQVRDSBACEh8KG01BVENI",
            "SU5HX1RZUEVfSU5WRVJTRV9NQVRDSBADKk0KDUNvbnRlbnRPcHRpb24SFwoT",
            "Q09OVEVOVF9VTlNQRUNJRklFRBAAEhAKDENPTlRFTlRfVEVYVBABEhEKDUNP",
            "TlRFTlRfSU1BR0UQAipCCgxNZXRhZGF0YVR5cGUSHAoYTUVUQURBVEFUWVBF",
            "X1VOU1BFQ0lGSUVEEAASFAoQU1RPUkFHRV9NRVRBREFUQRACKlAKE0luZm9U",
            "eXBlU3VwcG9ydGVkQnkSGQoVRU5VTV9UWVBFX1VOU1BFQ0lGSUVEEAASCwoH",
            "SU5TUEVDVBABEhEKDVJJU0tfQU5BTFlTSVMQAipSCgpEbHBKb2JUeXBlEhwK",
            "GERMUF9KT0JfVFlQRV9VTlNQRUNJRklFRBAAEg8KC0lOU1BFQ1RfSk9CEAES",
            "FQoRUklTS19BTkFMWVNJU19KT0IQAipuChNTdG9yZWRJbmZvVHlwZVN0YXRl",
            "EiYKIlNUT1JFRF9JTkZPX1RZUEVfU1RBVEVfVU5TUEVDSUZJRUQQABILCgdQ",
            "RU5ESU5HEAESCQoFUkVBRFkQAhIKCgZGQUlMRUQQAxILCgdJTlZBTElEEAQy",
            "w0kKCkRscFNlcnZpY2US2wEKDkluc3BlY3RDb250ZW50EiwuZ29vZ2xlLnBy",
            "aXZhY3kuZGxwLnYyLkluc3BlY3RDb250ZW50UmVxdWVzdBotLmdvb2dsZS5w",
            "cml2YWN5LmRscC52Mi5JbnNwZWN0Q29udGVudFJlc3BvbnNlImyC0+STAmYi",
            "Jy92Mi97cGFyZW50PXByb2plY3RzLyp9L2NvbnRlbnQ6aW5zcGVjdDoBKlo4",
            "IjMvdjIve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9jb250ZW50",
            "Omluc3BlY3Q6ASoSzAEKC1JlZGFjdEltYWdlEikuZ29vZ2xlLnByaXZhY3ku",
            "ZGxwLnYyLlJlZGFjdEltYWdlUmVxdWVzdBoqLmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5SZWRhY3RJbWFnZVJlc3BvbnNlImaC0+STAmAiJC92Mi97cGFyZW50",
            "PXByb2plY3RzLyp9L2ltYWdlOnJlZGFjdDoBKlo1IjAvdjIve3BhcmVudD1w",
            "cm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9pbWFnZTpyZWRhY3Q6ASoS6gEKEURl",
            "aWRlbnRpZnlDb250ZW50Ei8uZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkRlaWRl",
            "bnRpZnlDb250ZW50UmVxdWVzdBowLmdvb2dsZS5wcml2YWN5LmRscC52Mi5E",
            "ZWlkZW50aWZ5Q29udGVudFJlc3BvbnNlInKC0+STAmwiKi92Mi97cGFyZW50",
            "PXByb2plY3RzLyp9L2NvbnRlbnQ6ZGVpZGVudGlmeToBKlo7IjYvdjIve3Bh",
            "cmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9jb250ZW50OmRlaWRlbnRp",
            "Znk6ASoS6gEKEVJlaWRlbnRpZnlDb250ZW50Ei8uZ29vZ2xlLnByaXZhY3ku",
            "ZGxwLnYyLlJlaWRlbnRpZnlDb250ZW50UmVxdWVzdBowLmdvb2dsZS5wcml2",
            "YWN5LmRscC52Mi5SZWlkZW50aWZ5Q29udGVudFJlc3BvbnNlInKC0+STAmwi",
            "Ki92Mi97cGFyZW50PXByb2plY3RzLyp9L2NvbnRlbnQ6cmVpZGVudGlmeToB",
            "Klo7IjYvdjIve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9jb250",
            "ZW50OnJlaWRlbnRpZnk6ASoSsAEKDUxpc3RJbmZvVHlwZXMSKy5nb29nbGUu",
            "cHJpdmFjeS5kbHAudjIuTGlzdEluZm9UeXBlc1JlcXVlc3QaLC5nb29nbGUu",
            "cHJpdmFjeS5kbHAudjIuTGlzdEluZm9UeXBlc1Jlc3BvbnNlIkSC0+STAjUS",
            "DS92Mi9pbmZvVHlwZXNaJBIiL3YyL3twYXJlbnQ9bG9jYXRpb25zLyp9L2lu",
            "Zm9UeXBlc9pBBnBhcmVudBL0AgoVQ3JlYXRlSW5zcGVjdFRlbXBsYXRlEjMu",
            "Z29vZ2xlLnByaXZhY3kuZGxwLnYyLkNyZWF0ZUluc3BlY3RUZW1wbGF0ZVJl",
            "cXVlc3QaJi5nb29nbGUucHJpdmFjeS5kbHAudjIuSW5zcGVjdFRlbXBsYXRl",
            "Iv0BgtPkkwLcASItL3YyL3twYXJlbnQ9b3JnYW5pemF0aW9ucy8qfS9pbnNw",
            "ZWN0VGVtcGxhdGVzOgEqWj4iOS92Mi97cGFyZW50PW9yZ2FuaXphdGlvbnMv",
            "Ki9sb2NhdGlvbnMvKn0vaW5zcGVjdFRlbXBsYXRlczoBKlotIigvdjIve3Bh",
            "cmVudD1wcm9qZWN0cy8qfS9pbnNwZWN0VGVtcGxhdGVzOgEqWjkiNC92Mi97",
            "cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2luc3BlY3RUZW1wbGF0",
            "ZXM6ASraQRdwYXJlbnQsaW5zcGVjdF90ZW1wbGF0ZRL+AgoVVXBkYXRlSW5z",
            "cGVjdFRlbXBsYXRlEjMuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlVwZGF0ZUlu",
            "c3BlY3RUZW1wbGF0ZVJlcXVlc3QaJi5nb29nbGUucHJpdmFjeS5kbHAudjIu",
            "SW5zcGVjdFRlbXBsYXRlIocCgtPkkwLcATItL3YyL3tuYW1lPW9yZ2FuaXph",
            "dGlvbnMvKi9pbnNwZWN0VGVtcGxhdGVzLyp9OgEqWj4yOS92Mi97bmFtZT1v",
            "cmdhbml6YXRpb25zLyovbG9jYXRpb25zLyovaW5zcGVjdFRlbXBsYXRlcy8q",
            "fToBKlotMigvdjIve25hbWU9cHJvamVjdHMvKi9pbnNwZWN0VGVtcGxhdGVz",
            "Lyp9OgEqWjkyNC92Mi97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2lu",
            "c3BlY3RUZW1wbGF0ZXMvKn06ASraQSFuYW1lLGluc3BlY3RfdGVtcGxhdGUs",
            "dXBkYXRlX21hc2sSzwIKEkdldEluc3BlY3RUZW1wbGF0ZRIwLmdvb2dsZS5w",
            "cml2YWN5LmRscC52Mi5HZXRJbnNwZWN0VGVtcGxhdGVSZXF1ZXN0GiYuZ29v",
            "Z2xlLnByaXZhY3kuZGxwLnYyLkluc3BlY3RUZW1wbGF0ZSLeAYLT5JMC0AES",
            "LS92Mi97bmFtZT1vcmdhbml6YXRpb25zLyovaW5zcGVjdFRlbXBsYXRlcy8q",
            "fVo7EjkvdjIve25hbWU9b3JnYW5pemF0aW9ucy8qL2xvY2F0aW9ucy8qL2lu",
            "c3BlY3RUZW1wbGF0ZXMvKn1aKhIoL3YyL3tuYW1lPXByb2plY3RzLyovaW5z",
            "cGVjdFRlbXBsYXRlcy8qfVo2EjQvdjIve25hbWU9cHJvamVjdHMvKi9sb2Nh",
            "dGlvbnMvKi9pbnNwZWN0VGVtcGxhdGVzLyp92kEEbmFtZRLiAgoUTGlzdElu",
            "c3BlY3RUZW1wbGF0ZXMSMi5nb29nbGUucHJpdmFjeS5kbHAudjIuTGlzdElu",
            "c3BlY3RUZW1wbGF0ZXNSZXF1ZXN0GjMuZ29vZ2xlLnByaXZhY3kuZGxwLnYy",
            "Lkxpc3RJbnNwZWN0VGVtcGxhdGVzUmVzcG9uc2Ui4AGC0+STAtABEi0vdjIv",
            "e3BhcmVudD1vcmdhbml6YXRpb25zLyp9L2luc3BlY3RUZW1wbGF0ZXNaOxI5",
            "L3YyL3twYXJlbnQ9b3JnYW5pemF0aW9ucy8qL2xvY2F0aW9ucy8qfS9pbnNw",
            "ZWN0VGVtcGxhdGVzWioSKC92Mi97cGFyZW50PXByb2plY3RzLyp9L2luc3Bl",
            "Y3RUZW1wbGF0ZXNaNhI0L3YyL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlv",
            "bnMvKn0vaW5zcGVjdFRlbXBsYXRlc9pBBnBhcmVudBLFAgoVRGVsZXRlSW5z",
            "cGVjdFRlbXBsYXRlEjMuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkRlbGV0ZUlu",
            "c3BlY3RUZW1wbGF0ZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHki",
            "3gGC0+STAtABKi0vdjIve25hbWU9b3JnYW5pemF0aW9ucy8qL2luc3BlY3RU",
            "ZW1wbGF0ZXMvKn1aOyo5L3YyL3tuYW1lPW9yZ2FuaXphdGlvbnMvKi9sb2Nh",
            "dGlvbnMvKi9pbnNwZWN0VGVtcGxhdGVzLyp9WioqKC92Mi97bmFtZT1wcm9q",
            "ZWN0cy8qL2luc3BlY3RUZW1wbGF0ZXMvKn1aNio0L3YyL3tuYW1lPXByb2pl",
            "Y3RzLyovbG9jYXRpb25zLyovaW5zcGVjdFRlbXBsYXRlcy8qfdpBBG5hbWUS",
            "jAMKGENyZWF0ZURlaWRlbnRpZnlUZW1wbGF0ZRI2Lmdvb2dsZS5wcml2YWN5",
            "LmRscC52Mi5DcmVhdGVEZWlkZW50aWZ5VGVtcGxhdGVSZXF1ZXN0GikuZ29v",
            "Z2xlLnByaXZhY3kuZGxwLnYyLkRlaWRlbnRpZnlUZW1wbGF0ZSKMAoLT5JMC",
            "6AEiMC92Mi97cGFyZW50PW9yZ2FuaXphdGlvbnMvKn0vZGVpZGVudGlmeVRl",
            "bXBsYXRlczoBKlpBIjwvdjIve3BhcmVudD1vcmdhbml6YXRpb25zLyovbG9j",
            "YXRpb25zLyp9L2RlaWRlbnRpZnlUZW1wbGF0ZXM6ASpaMCIrL3YyL3twYXJl",
            "bnQ9cHJvamVjdHMvKn0vZGVpZGVudGlmeVRlbXBsYXRlczoBKlo8IjcvdjIv",
            "e3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9kZWlkZW50aWZ5VGVt",
            "cGxhdGVzOgEq2kEacGFyZW50LGRlaWRlbnRpZnlfdGVtcGxhdGUSlgMKGFVw",
            "ZGF0ZURlaWRlbnRpZnlUZW1wbGF0ZRI2Lmdvb2dsZS5wcml2YWN5LmRscC52",
            "Mi5VcGRhdGVEZWlkZW50aWZ5VGVtcGxhdGVSZXF1ZXN0GikuZ29vZ2xlLnBy",
            "aXZhY3kuZGxwLnYyLkRlaWRlbnRpZnlUZW1wbGF0ZSKWAoLT5JMC6AEyMC92",
            "Mi97bmFtZT1vcmdhbml6YXRpb25zLyovZGVpZGVudGlmeVRlbXBsYXRlcy8q",
            "fToBKlpBMjwvdjIve25hbWU9b3JnYW5pemF0aW9ucy8qL2xvY2F0aW9ucy8q",
            "L2RlaWRlbnRpZnlUZW1wbGF0ZXMvKn06ASpaMDIrL3YyL3tuYW1lPXByb2pl",
            "Y3RzLyovZGVpZGVudGlmeVRlbXBsYXRlcy8qfToBKlo8MjcvdjIve25hbWU9",
            "cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9kZWlkZW50aWZ5VGVtcGxhdGVzLyp9",
            "OgEq2kEkbmFtZSxkZWlkZW50aWZ5X3RlbXBsYXRlLHVwZGF0ZV9tYXNrEuQC",
            "ChVHZXREZWlkZW50aWZ5VGVtcGxhdGUSMy5nb29nbGUucHJpdmFjeS5kbHAu",
            "djIuR2V0RGVpZGVudGlmeVRlbXBsYXRlUmVxdWVzdBopLmdvb2dsZS5wcml2",
            "YWN5LmRscC52Mi5EZWlkZW50aWZ5VGVtcGxhdGUi6gGC0+STAtwBEjAvdjIv",
            "e25hbWU9b3JnYW5pemF0aW9ucy8qL2RlaWRlbnRpZnlUZW1wbGF0ZXMvKn1a",
            "PhI8L3YyL3tuYW1lPW9yZ2FuaXphdGlvbnMvKi9sb2NhdGlvbnMvKi9kZWlk",
            "ZW50aWZ5VGVtcGxhdGVzLyp9Wi0SKy92Mi97bmFtZT1wcm9qZWN0cy8qL2Rl",
            "aWRlbnRpZnlUZW1wbGF0ZXMvKn1aORI3L3YyL3tuYW1lPXByb2plY3RzLyov",
            "bG9jYXRpb25zLyovZGVpZGVudGlmeVRlbXBsYXRlcy8qfdpBBG5hbWUS9wIK",
            "F0xpc3REZWlkZW50aWZ5VGVtcGxhdGVzEjUuZ29vZ2xlLnByaXZhY3kuZGxw",
            "LnYyLkxpc3REZWlkZW50aWZ5VGVtcGxhdGVzUmVxdWVzdBo2Lmdvb2dsZS5w",
            "cml2YWN5LmRscC52Mi5MaXN0RGVpZGVudGlmeVRlbXBsYXRlc1Jlc3BvbnNl",
            "IuwBgtPkkwLcARIwL3YyL3twYXJlbnQ9b3JnYW5pemF0aW9ucy8qfS9kZWlk",
            "ZW50aWZ5VGVtcGxhdGVzWj4SPC92Mi97cGFyZW50PW9yZ2FuaXphdGlvbnMv",
            "Ki9sb2NhdGlvbnMvKn0vZGVpZGVudGlmeVRlbXBsYXRlc1otEisvdjIve3Bh",
            "cmVudD1wcm9qZWN0cy8qfS9kZWlkZW50aWZ5VGVtcGxhdGVzWjkSNy92Mi97",
            "cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2RlaWRlbnRpZnlUZW1w",
            "bGF0ZXPaQQZwYXJlbnQS1wIKGERlbGV0ZURlaWRlbnRpZnlUZW1wbGF0ZRI2",
            "Lmdvb2dsZS5wcml2YWN5LmRscC52Mi5EZWxldGVEZWlkZW50aWZ5VGVtcGxh",
            "dGVSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IuoBgtPkkwLcASow",
            "L3YyL3tuYW1lPW9yZ2FuaXphdGlvbnMvKi9kZWlkZW50aWZ5VGVtcGxhdGVz",
            "Lyp9Wj4qPC92Mi97bmFtZT1vcmdhbml6YXRpb25zLyovbG9jYXRpb25zLyov",
            "ZGVpZGVudGlmeVRlbXBsYXRlcy8qfVotKisvdjIve25hbWU9cHJvamVjdHMv",
            "Ki9kZWlkZW50aWZ5VGVtcGxhdGVzLyp9WjkqNy92Mi97bmFtZT1wcm9qZWN0",
            "cy8qL2xvY2F0aW9ucy8qL2RlaWRlbnRpZnlUZW1wbGF0ZXMvKn3aQQRuYW1l",
            "EuABChBDcmVhdGVKb2JUcmlnZ2VyEi4uZ29vZ2xlLnByaXZhY3kuZGxwLnYy",
            "LkNyZWF0ZUpvYlRyaWdnZXJSZXF1ZXN0GiEuZ29vZ2xlLnByaXZhY3kuZGxw",
            "LnYyLkpvYlRyaWdnZXIieYLT5JMCXiIjL3YyL3twYXJlbnQ9cHJvamVjdHMv",
            "Kn0vam9iVHJpZ2dlcnM6ASpaNCIvL3YyL3twYXJlbnQ9cHJvamVjdHMvKi9s",
            "b2NhdGlvbnMvKn0vam9iVHJpZ2dlcnM6ASraQRJwYXJlbnQsam9iX3RyaWdn",
            "ZXIS6wEKEFVwZGF0ZUpvYlRyaWdnZXISLi5nb29nbGUucHJpdmFjeS5kbHAu",
            "djIuVXBkYXRlSm9iVHJpZ2dlclJlcXVlc3QaIS5nb29nbGUucHJpdmFjeS5k",
            "bHAudjIuSm9iVHJpZ2dlciKDAYLT5JMCXjIjL3YyL3tuYW1lPXByb2plY3Rz",
            "Lyovam9iVHJpZ2dlcnMvKn06ASpaNDIvL3YyL3tuYW1lPXByb2plY3RzLyov",
            "bG9jYXRpb25zLyovam9iVHJpZ2dlcnMvKn06ASraQRxuYW1lLGpvYl90cmln",
            "Z2VyLHVwZGF0ZV9tYXNrEs8BChdIeWJyaWRJbnNwZWN0Sm9iVHJpZ2dlchI1",
            "Lmdvb2dsZS5wcml2YWN5LmRscC52Mi5IeWJyaWRJbnNwZWN0Sm9iVHJpZ2dl",
            "clJlcXVlc3QaLC5nb29nbGUucHJpdmFjeS5kbHAudjIuSHlicmlkSW5zcGVj",
            "dFJlc3BvbnNlIk+C0+STAkIiPS92Mi97bmFtZT1wcm9qZWN0cy8qL2xvY2F0",
            "aW9ucy8qL2pvYlRyaWdnZXJzLyp9Omh5YnJpZEluc3BlY3Q6ASraQQRuYW1l",
            "EsYBCg1HZXRKb2JUcmlnZ2VyEisuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkdl",
            "dEpvYlRyaWdnZXJSZXF1ZXN0GiEuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkpv",
            "YlRyaWdnZXIiZYLT5JMCWBIjL3YyL3tuYW1lPXByb2plY3RzLyovam9iVHJp",
            "Z2dlcnMvKn1aMRIvL3YyL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyov",
            "am9iVHJpZ2dlcnMvKn3aQQRuYW1lEtkBCg9MaXN0Sm9iVHJpZ2dlcnMSLS5n",
            "b29nbGUucHJpdmFjeS5kbHAudjIuTGlzdEpvYlRyaWdnZXJzUmVxdWVzdBou",
            "Lmdvb2dsZS5wcml2YWN5LmRscC52Mi5MaXN0Sm9iVHJpZ2dlcnNSZXNwb25z",
            "ZSJngtPkkwJYEiMvdjIve3BhcmVudD1wcm9qZWN0cy8qfS9qb2JUcmlnZ2Vy",
            "c1oxEi8vdjIve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qfS9qb2JU",
            "cmlnZ2Vyc9pBBnBhcmVudBLBAQoQRGVsZXRlSm9iVHJpZ2dlchIuLmdvb2ds",
            "ZS5wcml2YWN5LmRscC52Mi5EZWxldGVKb2JUcmlnZ2VyUmVxdWVzdBoWLmdv",
            "b2dsZS5wcm90b2J1Zi5FbXB0eSJlgtPkkwJYKiMvdjIve25hbWU9cHJvamVj",
            "dHMvKi9qb2JUcmlnZ2Vycy8qfVoxKi8vdjIve25hbWU9cHJvamVjdHMvKi9s",
            "b2NhdGlvbnMvKi9qb2JUcmlnZ2Vycy8qfdpBBG5hbWUS3QEKEkFjdGl2YXRl",
            "Sm9iVHJpZ2dlchIwLmdvb2dsZS5wcml2YWN5LmRscC52Mi5BY3RpdmF0ZUpv",
            "YlRyaWdnZXJSZXF1ZXN0Gh0uZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkRscEpv",
            "YiJ2gtPkkwJwIiwvdjIve25hbWU9cHJvamVjdHMvKi9qb2JUcmlnZ2Vycy8q",
            "fTphY3RpdmF0ZToBKlo9IjgvdjIve25hbWU9cHJvamVjdHMvKi9sb2NhdGlv",
            "bnMvKi9qb2JUcmlnZ2Vycy8qfTphY3RpdmF0ZToBKhLfAQoMQ3JlYXRlRGxw",
            "Sm9iEiouZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkNyZWF0ZURscEpvYlJlcXVl",
            "c3QaHS5nb29nbGUucHJpdmFjeS5kbHAudjIuRGxwSm9iIoMBgtPkkwJWIh8v",
            "djIve3BhcmVudD1wcm9qZWN0cy8qfS9kbHBKb2JzOgEqWjAiKy92Mi97cGFy",
            "ZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2RscEpvYnM6ASraQRJwYXJl",
            "bnQsaW5zcGVjdF9qb2LaQQ9wYXJlbnQscmlza19qb2ISxQEKC0xpc3REbHBK",
            "b2JzEikuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkxpc3REbHBKb2JzUmVxdWVz",
            "dBoqLmdvb2dsZS5wcml2YWN5LmRscC52Mi5MaXN0RGxwSm9ic1Jlc3BvbnNl",
            "Il+C0+STAlASHy92Mi97cGFyZW50PXByb2plY3RzLyp9L2RscEpvYnNaLRIr",
            "L3YyL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vZGxwSm9ic9pB",
            "BnBhcmVudBKyAQoJR2V0RGxwSm9iEicuZ29vZ2xlLnByaXZhY3kuZGxwLnYy",
            "LkdldERscEpvYlJlcXVlc3QaHS5nb29nbGUucHJpdmFjeS5kbHAudjIuRGxw",
            "Sm9iIl2C0+STAlASHy92Mi97bmFtZT1wcm9qZWN0cy8qL2RscEpvYnMvKn1a",
            "LRIrL3YyL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovZGxwSm9icy8q",
            "fdpBBG5hbWUSsQEKDERlbGV0ZURscEpvYhIqLmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5EZWxldGVEbHBKb2JSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5Il2C0+STAlAqHy92Mi97bmFtZT1wcm9qZWN0cy8qL2RscEpvYnMvKn1a",
            "LSorL3YyL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovZGxwSm9icy8q",
            "fdpBBG5hbWUSvgEKDENhbmNlbERscEpvYhIqLmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5DYW5jZWxEbHBKb2JSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5ImqC0+STAmQiJi92Mi97bmFtZT1wcm9qZWN0cy8qL2RscEpvYnMvKn06",
            "Y2FuY2VsOgEqWjciMi92Mi97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8q",
            "L2RscEpvYnMvKn06Y2FuY2VsOgEqEuMCChRDcmVhdGVTdG9yZWRJbmZvVHlw",
            "ZRIyLmdvb2dsZS5wcml2YWN5LmRscC52Mi5DcmVhdGVTdG9yZWRJbmZvVHlw",
            "ZVJlcXVlc3QaJS5nb29nbGUucHJpdmFjeS5kbHAudjIuU3RvcmVkSW5mb1R5",
            "cGUi7wGC0+STAtgBIiwvdjIve3BhcmVudD1vcmdhbml6YXRpb25zLyp9L3N0",
            "b3JlZEluZm9UeXBlczoBKlo9IjgvdjIve3BhcmVudD1vcmdhbml6YXRpb25z",
            "LyovbG9jYXRpb25zLyp9L3N0b3JlZEluZm9UeXBlczoBKlosIicvdjIve3Bh",
            "cmVudD1wcm9qZWN0cy8qfS9zdG9yZWRJbmZvVHlwZXM6ASpaOCIzL3YyL3tw",
            "YXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vc3RvcmVkSW5mb1R5cGVz",
            "OgEq2kENcGFyZW50LGNvbmZpZxLtAgoUVXBkYXRlU3RvcmVkSW5mb1R5cGUS",
            "Mi5nb29nbGUucHJpdmFjeS5kbHAudjIuVXBkYXRlU3RvcmVkSW5mb1R5cGVS",
            "ZXF1ZXN0GiUuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlN0b3JlZEluZm9UeXBl",
            "IvkBgtPkkwLYATIsL3YyL3tuYW1lPW9yZ2FuaXphdGlvbnMvKi9zdG9yZWRJ",
            "bmZvVHlwZXMvKn06ASpaPTI4L3YyL3tuYW1lPW9yZ2FuaXphdGlvbnMvKi9s",
            "b2NhdGlvbnMvKi9zdG9yZWRJbmZvVHlwZXMvKn06ASpaLDInL3YyL3tuYW1l",
            "PXByb2plY3RzLyovc3RvcmVkSW5mb1R5cGVzLyp9OgEqWjgyMy92Mi97bmFt",
            "ZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL3N0b3JlZEluZm9UeXBlcy8qfToB",
            "KtpBF25hbWUsY29uZmlnLHVwZGF0ZV9tYXNrEsgCChFHZXRTdG9yZWRJbmZv",
            "VHlwZRIvLmdvb2dsZS5wcml2YWN5LmRscC52Mi5HZXRTdG9yZWRJbmZvVHlw",
            "ZVJlcXVlc3QaJS5nb29nbGUucHJpdmFjeS5kbHAudjIuU3RvcmVkSW5mb1R5",
            "cGUi2gGC0+STAswBEiwvdjIve25hbWU9b3JnYW5pemF0aW9ucy8qL3N0b3Jl",
            "ZEluZm9UeXBlcy8qfVo6EjgvdjIve25hbWU9b3JnYW5pemF0aW9ucy8qL2xv",
            "Y2F0aW9ucy8qL3N0b3JlZEluZm9UeXBlcy8qfVopEicvdjIve25hbWU9cHJv",
            "amVjdHMvKi9zdG9yZWRJbmZvVHlwZXMvKn1aNRIzL3YyL3tuYW1lPXByb2pl",
            "Y3RzLyovbG9jYXRpb25zLyovc3RvcmVkSW5mb1R5cGVzLyp92kEEbmFtZRLb",
            "AgoTTGlzdFN0b3JlZEluZm9UeXBlcxIxLmdvb2dsZS5wcml2YWN5LmRscC52",
            "Mi5MaXN0U3RvcmVkSW5mb1R5cGVzUmVxdWVzdBoyLmdvb2dsZS5wcml2YWN5",
            "LmRscC52Mi5MaXN0U3RvcmVkSW5mb1R5cGVzUmVzcG9uc2Ui3AGC0+STAswB",
            "EiwvdjIve3BhcmVudD1vcmdhbml6YXRpb25zLyp9L3N0b3JlZEluZm9UeXBl",
            "c1o6EjgvdjIve3BhcmVudD1vcmdhbml6YXRpb25zLyovbG9jYXRpb25zLyp9",
            "L3N0b3JlZEluZm9UeXBlc1opEicvdjIve3BhcmVudD1wcm9qZWN0cy8qfS9z",
            "dG9yZWRJbmZvVHlwZXNaNRIzL3YyL3twYXJlbnQ9cHJvamVjdHMvKi9sb2Nh",
            "dGlvbnMvKn0vc3RvcmVkSW5mb1R5cGVz2kEGcGFyZW50Er8CChREZWxldGVT",
            "dG9yZWRJbmZvVHlwZRIyLmdvb2dsZS5wcml2YWN5LmRscC52Mi5EZWxldGVT",
            "dG9yZWRJbmZvVHlwZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHki",
            "2gGC0+STAswBKiwvdjIve25hbWU9b3JnYW5pemF0aW9ucy8qL3N0b3JlZElu",
            "Zm9UeXBlcy8qfVo6KjgvdjIve25hbWU9b3JnYW5pemF0aW9ucy8qL2xvY2F0",
            "aW9ucy8qL3N0b3JlZEluZm9UeXBlcy8qfVopKicvdjIve25hbWU9cHJvamVj",
            "dHMvKi9zdG9yZWRJbmZvVHlwZXMvKn1aNSozL3YyL3tuYW1lPXByb2plY3Rz",
            "LyovbG9jYXRpb25zLyovc3RvcmVkSW5mb1R5cGVzLyp92kEEbmFtZRLDAQoT",
            "SHlicmlkSW5zcGVjdERscEpvYhIxLmdvb2dsZS5wcml2YWN5LmRscC52Mi5I",
            "eWJyaWRJbnNwZWN0RGxwSm9iUmVxdWVzdBosLmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5IeWJyaWRJbnNwZWN0UmVzcG9uc2UiS4LT5JMCPiI5L3YyL3tuYW1l",
            "PXByb2plY3RzLyovbG9jYXRpb25zLyovZGxwSm9icy8qfTpoeWJyaWRJbnNw",
            "ZWN0OgEq2kEEbmFtZRKRAQoMRmluaXNoRGxwSm9iEiouZ29vZ2xlLnByaXZh",
            "Y3kuZGxwLnYyLkZpbmlzaERscEpvYlJlcXVlc3QaFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkiPYLT5JMCNyIyL3YyL3tuYW1lPXByb2plY3RzLyovbG9jYXRp",
            "b25zLyovZGxwSm9icy8qfTpmaW5pc2g6ASoaRspBEmRscC5nb29nbGVhcGlz",
            "LmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQt",
            "cGxhdGZvcm1C+gIKGWNvbS5nb29nbGUucHJpdmFjeS5kbHAudjJCCERscFBy",
            "b3RvUAFaOGdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMv",
            "cHJpdmFjeS9kbHAvdjI7ZGxwqgITR29vZ2xlLkNsb3VkLkRscC5WMsoCE0dv",
            "b2dsZVxDbG91ZFxEbHBcVjLqAhZHb29nbGU6OkNsb3VkOjpEbHA6OlYy6kFy",
            "Ch1kbHAuZ29vZ2xlYXBpcy5jb20vRGxwQ29udGVudBIdcHJvamVjdHMve3By",
            "b2plY3R9L2RscENvbnRlbnQSMnByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlv",
            "bnMve2xvY2F0aW9ufS9kbHBDb250ZW506kFcCidkbHAuZ29vZ2xlYXBpcy5j",
            "b20vT3JnYW5pemF0aW9uTG9jYXRpb24SMW9yZ2FuaXphdGlvbnMve29yZ2Fu",
            "aXphdGlvbn0vbG9jYXRpb25zL3tsb2NhdGlvbn1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, global::Google.Type.DateReflection.Descriptor, global::Google.Type.DayofweekReflection.Descriptor, global::Google.Type.TimeofdayReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Dlp.V2.RelationalOperator), typeof(global::Google.Cloud.Dlp.V2.MatchingType), typeof(global::Google.Cloud.Dlp.V2.ContentOption), typeof(global::Google.Cloud.Dlp.V2.MetadataType), typeof(global::Google.Cloud.Dlp.V2.InfoTypeSupportedBy), typeof(global::Google.Cloud.Dlp.V2.DlpJobType), typeof(global::Google.Cloud.Dlp.V2.StoredInfoTypeState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ExcludeInfoTypes), global::Google.Cloud.Dlp.V2.ExcludeInfoTypes.Parser, new[]{ "InfoTypes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ExclusionRule), global::Google.Cloud.Dlp.V2.ExclusionRule.Parser, new[]{ "Dictionary", "Regex", "ExcludeInfoTypes", "MatchingType" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectionRule), global::Google.Cloud.Dlp.V2.InspectionRule.Parser, new[]{ "HotwordRule", "ExclusionRule" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectionRuleSet), global::Google.Cloud.Dlp.V2.InspectionRuleSet.Parser, new[]{ "InfoTypes", "Rules" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectConfig), global::Google.Cloud.Dlp.V2.InspectConfig.Parser, new[]{ "InfoTypes", "MinLikelihood", "Limits", "IncludeQuote", "ExcludeInfoTypes", "CustomInfoTypes", "ContentOptions", "RuleSet" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits), global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits.Parser, new[]{ "MaxFindingsPerItem", "MaxFindingsPerRequest", "MaxFindingsPerInfoType" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits.Types.InfoTypeLimit), global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits.Types.InfoTypeLimit.Parser, new[]{ "InfoType", "MaxFindings" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ByteContentItem), global::Google.Cloud.Dlp.V2.ByteContentItem.Parser, new[]{ "Type", "Data" }, null, new[]{ typeof(global::Google.Cloud.Dlp.V2.ByteContentItem.Types.BytesType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ContentItem), global::Google.Cloud.Dlp.V2.ContentItem.Parser, new[]{ "Value", "Table", "ByteItem" }, new[]{ "DataItem" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Table), global::Google.Cloud.Dlp.V2.Table.Parser, new[]{ "Headers", "Rows" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Table.Types.Row), global::Google.Cloud.Dlp.V2.Table.Types.Row.Parser, new[]{ "Values" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectResult), global::Google.Cloud.Dlp.V2.InspectResult.Parser, new[]{ "Findings", "FindingsTruncated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Finding), global::Google.Cloud.Dlp.V2.Finding.Parser, new[]{ "Name", "Quote", "InfoType", "Likelihood", "Location", "CreateTime", "QuoteInfo", "ResourceName", "TriggerName", "Labels", "JobCreateTime", "JobName" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Location), global::Google.Cloud.Dlp.V2.Location.Parser, new[]{ "ByteRange", "CodepointRange", "ContentLocations", "Container" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ContentLocation), global::Google.Cloud.Dlp.V2.ContentLocation.Parser, new[]{ "ContainerName", "RecordLocation", "ImageLocation", "DocumentLocation", "MetadataLocation", "ContainerTimestamp", "ContainerVersion" }, new[]{ "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.MetadataLocation), global::Google.Cloud.Dlp.V2.MetadataLocation.Parser, new[]{ "Type", "StorageLabel" }, new[]{ "Label" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.StorageMetadataLabel), global::Google.Cloud.Dlp.V2.StorageMetadataLabel.Parser, new[]{ "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DocumentLocation), global::Google.Cloud.Dlp.V2.DocumentLocation.Parser, new[]{ "FileOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RecordLocation), global::Google.Cloud.Dlp.V2.RecordLocation.Parser, new[]{ "RecordKey", "FieldId", "TableLocation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.TableLocation), global::Google.Cloud.Dlp.V2.TableLocation.Parser, new[]{ "RowIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Container), global::Google.Cloud.Dlp.V2.Container.Parser, new[]{ "Type", "ProjectId", "FullPath", "RootPath", "RelativePath", "UpdateTime", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Range), global::Google.Cloud.Dlp.V2.Range.Parser, new[]{ "Start", "End" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ImageLocation), global::Google.Cloud.Dlp.V2.ImageLocation.Parser, new[]{ "BoundingBoxes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.BoundingBox), global::Google.Cloud.Dlp.V2.BoundingBox.Parser, new[]{ "Top", "Left", "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RedactImageRequest), global::Google.Cloud.Dlp.V2.RedactImageRequest.Parser, new[]{ "Parent", "LocationId", "InspectConfig", "ImageRedactionConfigs", "IncludeFindings", "ByteItem" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RedactImageRequest.Types.ImageRedactionConfig), global::Google.Cloud.Dlp.V2.RedactImageRequest.Types.ImageRedactionConfig.Parser, new[]{ "InfoType", "RedactAllText", "RedactionColor" }, new[]{ "Target" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Color), global::Google.Cloud.Dlp.V2.Color.Parser, new[]{ "Red", "Green", "Blue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RedactImageResponse), global::Google.Cloud.Dlp.V2.RedactImageResponse.Parser, new[]{ "RedactedImage", "ExtractedText", "InspectResult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DeidentifyContentRequest), global::Google.Cloud.Dlp.V2.DeidentifyContentRequest.Parser, new[]{ "Parent", "DeidentifyConfig", "InspectConfig", "Item", "InspectTemplateName", "DeidentifyTemplateName", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DeidentifyContentResponse), global::Google.Cloud.Dlp.V2.DeidentifyContentResponse.Parser, new[]{ "Item", "Overview" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ReidentifyContentRequest), global::Google.Cloud.Dlp.V2.ReidentifyContentRequest.Parser, new[]{ "Parent", "ReidentifyConfig", "InspectConfig", "Item", "InspectTemplateName", "ReidentifyTemplateName", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ReidentifyContentResponse), global::Google.Cloud.Dlp.V2.ReidentifyContentResponse.Parser, new[]{ "Item", "Overview" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectContentRequest), global::Google.Cloud.Dlp.V2.InspectContentRequest.Parser, new[]{ "Parent", "InspectConfig", "Item", "InspectTemplateName", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectContentResponse), global::Google.Cloud.Dlp.V2.InspectContentResponse.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.OutputStorageConfig), global::Google.Cloud.Dlp.V2.OutputStorageConfig.Parser, new[]{ "Table", "OutputSchema" }, new[]{ "Type" }, new[]{ typeof(global::Google.Cloud.Dlp.V2.OutputStorageConfig.Types.OutputSchema) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InfoTypeStats), global::Google.Cloud.Dlp.V2.InfoTypeStats.Parser, new[]{ "InfoType", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectDataSourceDetails), global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Parser, new[]{ "RequestedOptions", "Result" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.RequestedOptions), global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.RequestedOptions.Parser, new[]{ "SnapshotInspectTemplate", "JobConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.Result), global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.Result.Parser, new[]{ "ProcessedBytes", "TotalEstimatedBytes", "InfoTypeStats", "HybridStats" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.HybridInspectStatistics), global::Google.Cloud.Dlp.V2.HybridInspectStatistics.Parser, new[]{ "ProcessedCount", "AbortedCount", "PendingCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InfoTypeDescription), global::Google.Cloud.Dlp.V2.InfoTypeDescription.Parser, new[]{ "Name", "DisplayName", "SupportedBy", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ListInfoTypesRequest), global::Google.Cloud.Dlp.V2.ListInfoTypesRequest.Parser, new[]{ "Parent", "LanguageCode", "Filter", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ListInfoTypesResponse), global::Google.Cloud.Dlp.V2.ListInfoTypesResponse.Parser, new[]{ "InfoTypes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig), global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig.Parser, new[]{ "PrivacyMetric", "SourceTable", "Actions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.QuasiId), global::Google.Cloud.Dlp.V2.QuasiId.Parser, new[]{ "Field", "InfoType", "CustomTag", "Inferred" }, new[]{ "Tag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.StatisticalTable), global::Google.Cloud.Dlp.V2.StatisticalTable.Parser, new[]{ "Table", "QuasiIds", "RelativeFrequency" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.StatisticalTable.Types.QuasiIdentifierField), global::Google.Cloud.Dlp.V2.StatisticalTable.Types.QuasiIdentifierField.Parser, new[]{ "Field", "CustomTag" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.PrivacyMetric), global::Google.Cloud.Dlp.V2.PrivacyMetric.Parser, new[]{ "NumericalStatsConfig", "CategoricalStatsConfig", "KAnonymityConfig", "LDiversityConfig", "KMapEstimationConfig", "DeltaPresenceEstimationConfig" }, new[]{ "Type" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.NumericalStatsConfig), global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.NumericalStatsConfig.Parser, new[]{ "Field" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.CategoricalStatsConfig), global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.CategoricalStatsConfig.Parser, new[]{ "Field" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KAnonymityConfig), global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KAnonymityConfig.Parser, new[]{ "QuasiIds", "EntityId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.LDiversityConfig), global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.LDiversityConfig.Parser, new[]{ "QuasiIds", "SensitiveAttribute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig), global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Parser, new[]{ "QuasiIds", "RegionCode", "AuxiliaryTables" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.TaggedField), global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.TaggedField.Parser, new[]{ "Field", "InfoType", "CustomTag", "Inferred" }, new[]{ "Tag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable), global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable.Parser, new[]{ "Table", "QuasiIds", "RelativeFrequency" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable.Types.QuasiIdField), global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable.Types.QuasiIdField.Parser, new[]{ "Field", "CustomTag" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.DeltaPresenceEstimationConfig), global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.DeltaPresenceEstimationConfig.Parser, new[]{ "QuasiIds", "RegionCode", "AuxiliaryTables" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Parser, new[]{ "RequestedPrivacyMetric", "RequestedSourceTable", "NumericalStatsResult", "CategoricalStatsResult", "KAnonymityResult", "LDiversityResult", "KMapEstimationResult", "DeltaPresenceEstimationResult", "RequestedOptions" }, new[]{ "Result" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.NumericalStatsResult), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.NumericalStatsResult.Parser, new[]{ "MinValue", "MaxValue", "QuantileValues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult.Parser, new[]{ "ValueFrequencyHistogramBuckets" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult.Types.CategoricalStatsHistogramBucket), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult.Types.CategoricalStatsHistogramBucket.Parser, new[]{ "ValueFrequencyLowerBound", "ValueFrequencyUpperBound", "BucketSize", "BucketValues", "BucketValueCount" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Parser, new[]{ "EquivalenceClassHistogramBuckets" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityEquivalenceClass), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityEquivalenceClass.Parser, new[]{ "QuasiIdsValues", "EquivalenceClassSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityHistogramBucket), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityHistogramBucket.Parser, new[]{ "EquivalenceClassSizeLowerBound", "EquivalenceClassSizeUpperBound", "BucketSize", "BucketValues", "BucketValueCount" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Parser, new[]{ "SensitiveValueFrequencyHistogramBuckets" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityEquivalenceClass), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityEquivalenceClass.Parser, new[]{ "QuasiIdsValues", "EquivalenceClassSize", "NumDistinctSensitiveValues", "TopSensitiveValues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityHistogramBucket), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityHistogramBucket.Parser, new[]{ "SensitiveValueFrequencyLowerBound", "SensitiveValueFrequencyUpperBound", "BucketSize", "BucketValues", "BucketValueCount" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Parser, new[]{ "KMapEstimationHistogram" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationQuasiIdValues), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationQuasiIdValues.Parser, new[]{ "QuasiIdsValues", "EstimatedAnonymity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationHistogramBucket), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationHistogramBucket.Parser, new[]{ "MinAnonymity", "MaxAnonymity", "BucketSize", "BucketValues", "BucketValueCount" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Parser, new[]{ "DeltaPresenceEstimationHistogram" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationQuasiIdValues), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationQuasiIdValues.Parser, new[]{ "QuasiIdsValues", "EstimatedProbability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationHistogramBucket), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationHistogramBucket.Parser, new[]{ "MinProbability", "MaxProbability", "BucketSize", "BucketValues", "BucketValueCount" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.RequestedRiskAnalysisOptions), global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.RequestedRiskAnalysisOptions.Parser, new[]{ "JobConfig" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ValueFrequency), global::Google.Cloud.Dlp.V2.ValueFrequency.Parser, new[]{ "Value", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Value), global::Google.Cloud.Dlp.V2.Value.Parser, new[]{ "IntegerValue", "FloatValue", "StringValue", "BooleanValue", "TimestampValue", "TimeValue", "DateValue", "DayOfWeekValue" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.QuoteInfo), global::Google.Cloud.Dlp.V2.QuoteInfo.Parser, new[]{ "DateTime" }, new[]{ "ParsedQuote" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DateTime), global::Google.Cloud.Dlp.V2.DateTime.Parser, new[]{ "Date", "DayOfWeek", "Time", "TimeZone" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DateTime.Types.TimeZone), global::Google.Cloud.Dlp.V2.DateTime.Types.TimeZone.Parser, new[]{ "OffsetMinutes" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DeidentifyConfig), global::Google.Cloud.Dlp.V2.DeidentifyConfig.Parser, new[]{ "InfoTypeTransformations", "RecordTransformations", "TransformationErrorHandling" }, new[]{ "Transformation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.TransformationErrorHandling), global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Parser, new[]{ "ThrowError", "LeaveUntransformed" }, new[]{ "Mode" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.ThrowError), global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.ThrowError.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.LeaveUntransformed), global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.LeaveUntransformed.Parser, null, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.PrimitiveTransformation), global::Google.Cloud.Dlp.V2.PrimitiveTransformation.Parser, new[]{ "ReplaceConfig", "RedactConfig", "CharacterMaskConfig", "CryptoReplaceFfxFpeConfig", "FixedSizeBucketingConfig", "BucketingConfig", "ReplaceWithInfoTypeConfig", "TimePartConfig", "CryptoHashConfig", "DateShiftConfig", "CryptoDeterministicConfig" }, new[]{ "Transformation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.TimePartConfig), global::Google.Cloud.Dlp.V2.TimePartConfig.Parser, new[]{ "PartToExtract" }, null, new[]{ typeof(global::Google.Cloud.Dlp.V2.TimePartConfig.Types.TimePart) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CryptoHashConfig), global::Google.Cloud.Dlp.V2.CryptoHashConfig.Parser, new[]{ "CryptoKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CryptoDeterministicConfig), global::Google.Cloud.Dlp.V2.CryptoDeterministicConfig.Parser, new[]{ "CryptoKey", "SurrogateInfoType", "Context" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ReplaceValueConfig), global::Google.Cloud.Dlp.V2.ReplaceValueConfig.Parser, new[]{ "NewValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ReplaceWithInfoTypeConfig), global::Google.Cloud.Dlp.V2.ReplaceWithInfoTypeConfig.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RedactConfig), global::Google.Cloud.Dlp.V2.RedactConfig.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CharsToIgnore), global::Google.Cloud.Dlp.V2.CharsToIgnore.Parser, new[]{ "CharactersToSkip", "CommonCharactersToIgnore" }, new[]{ "Characters" }, new[]{ typeof(global::Google.Cloud.Dlp.V2.CharsToIgnore.Types.CommonCharsToIgnore) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CharacterMaskConfig), global::Google.Cloud.Dlp.V2.CharacterMaskConfig.Parser, new[]{ "MaskingCharacter", "NumberToMask", "ReverseOrder", "CharactersToIgnore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.FixedSizeBucketingConfig), global::Google.Cloud.Dlp.V2.FixedSizeBucketingConfig.Parser, new[]{ "LowerBound", "UpperBound", "BucketSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.BucketingConfig), global::Google.Cloud.Dlp.V2.BucketingConfig.Parser, new[]{ "Buckets" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.BucketingConfig.Types.Bucket), global::Google.Cloud.Dlp.V2.BucketingConfig.Types.Bucket.Parser, new[]{ "Min", "Max", "ReplacementValue" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig), global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig.Parser, new[]{ "CryptoKey", "Context", "CommonAlphabet", "CustomAlphabet", "Radix", "SurrogateInfoType" }, new[]{ "Alphabet" }, new[]{ typeof(global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig.Types.FfxCommonNativeAlphabet) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CryptoKey), global::Google.Cloud.Dlp.V2.CryptoKey.Parser, new[]{ "Transient", "Unwrapped", "KmsWrapped" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.TransientCryptoKey), global::Google.Cloud.Dlp.V2.TransientCryptoKey.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.UnwrappedCryptoKey), global::Google.Cloud.Dlp.V2.UnwrappedCryptoKey.Parser, new[]{ "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.KmsWrappedCryptoKey), global::Google.Cloud.Dlp.V2.KmsWrappedCryptoKey.Parser, new[]{ "WrappedKey", "CryptoKeyName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DateShiftConfig), global::Google.Cloud.Dlp.V2.DateShiftConfig.Parser, new[]{ "UpperBoundDays", "LowerBoundDays", "Context", "CryptoKey" }, new[]{ "Method" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InfoTypeTransformations), global::Google.Cloud.Dlp.V2.InfoTypeTransformations.Parser, new[]{ "Transformations" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InfoTypeTransformations.Types.InfoTypeTransformation), global::Google.Cloud.Dlp.V2.InfoTypeTransformations.Types.InfoTypeTransformation.Parser, new[]{ "InfoTypes", "PrimitiveTransformation" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.FieldTransformation), global::Google.Cloud.Dlp.V2.FieldTransformation.Parser, new[]{ "Fields", "Condition", "PrimitiveTransformation", "InfoTypeTransformations" }, new[]{ "Transformation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RecordTransformations), global::Google.Cloud.Dlp.V2.RecordTransformations.Parser, new[]{ "FieldTransformations", "RecordSuppressions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RecordSuppression), global::Google.Cloud.Dlp.V2.RecordSuppression.Parser, new[]{ "Condition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RecordCondition), global::Google.Cloud.Dlp.V2.RecordCondition.Parser, new[]{ "Expressions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RecordCondition.Types.Condition), global::Google.Cloud.Dlp.V2.RecordCondition.Types.Condition.Parser, new[]{ "Field", "Operator", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RecordCondition.Types.Conditions), global::Google.Cloud.Dlp.V2.RecordCondition.Types.Conditions.Parser, new[]{ "Conditions_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions), global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions.Parser, new[]{ "LogicalOperator", "Conditions" }, new[]{ "Type" }, new[]{ typeof(global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions.Types.LogicalOperator) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.TransformationOverview), global::Google.Cloud.Dlp.V2.TransformationOverview.Parser, new[]{ "TransformedBytes", "TransformationSummaries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.TransformationSummary), global::Google.Cloud.Dlp.V2.TransformationSummary.Parser, new[]{ "InfoType", "Field", "Transformation", "FieldTransformations", "RecordSuppress", "Results", "TransformedBytes" }, null, new[]{ typeof(global::Google.Cloud.Dlp.V2.TransformationSummary.Types.TransformationResultCode) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.TransformationSummary.Types.SummaryResult), global::Google.Cloud.Dlp.V2.TransformationSummary.Types.SummaryResult.Parser, new[]{ "Count", "Code", "Details" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Schedule), global::Google.Cloud.Dlp.V2.Schedule.Parser, new[]{ "RecurrencePeriodDuration" }, new[]{ "Option" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Manual), global::Google.Cloud.Dlp.V2.Manual.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectTemplate), global::Google.Cloud.Dlp.V2.InspectTemplate.Parser, new[]{ "Name", "DisplayName", "Description", "CreateTime", "UpdateTime", "InspectConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DeidentifyTemplate), global::Google.Cloud.Dlp.V2.DeidentifyTemplate.Parser, new[]{ "Name", "DisplayName", "Description", "CreateTime", "UpdateTime", "DeidentifyConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Error), global::Google.Cloud.Dlp.V2.Error.Parser, new[]{ "Details", "Timestamps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.JobTrigger), global::Google.Cloud.Dlp.V2.JobTrigger.Parser, new[]{ "Name", "DisplayName", "Description", "InspectJob", "Triggers", "Errors", "CreateTime", "UpdateTime", "LastRunTime", "Status" }, new[]{ "Job" }, new[]{ typeof(global::Google.Cloud.Dlp.V2.JobTrigger.Types.Status) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.JobTrigger.Types.Trigger), global::Google.Cloud.Dlp.V2.JobTrigger.Types.Trigger.Parser, new[]{ "Schedule", "Manual" }, new[]{ "Trigger" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Action), global::Google.Cloud.Dlp.V2.Action.Parser, new[]{ "SaveFindings", "PubSub", "PublishSummaryToCscc", "PublishFindingsToCloudDataCatalog", "JobNotificationEmails", "PublishToStackdriver" }, new[]{ "Action" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Action.Types.SaveFindings), global::Google.Cloud.Dlp.V2.Action.Types.SaveFindings.Parser, new[]{ "OutputConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Action.Types.PublishToPubSub), global::Google.Cloud.Dlp.V2.Action.Types.PublishToPubSub.Parser, new[]{ "Topic" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Action.Types.PublishSummaryToCscc), global::Google.Cloud.Dlp.V2.Action.Types.PublishSummaryToCscc.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Action.Types.PublishFindingsToCloudDataCatalog), global::Google.Cloud.Dlp.V2.Action.Types.PublishFindingsToCloudDataCatalog.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Action.Types.JobNotificationEmails), global::Google.Cloud.Dlp.V2.Action.Types.JobNotificationEmails.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Action.Types.PublishToStackdriver), global::Google.Cloud.Dlp.V2.Action.Types.PublishToStackdriver.Parser, null, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CreateInspectTemplateRequest), global::Google.Cloud.Dlp.V2.CreateInspectTemplateRequest.Parser, new[]{ "Parent", "InspectTemplate", "TemplateId", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.UpdateInspectTemplateRequest), global::Google.Cloud.Dlp.V2.UpdateInspectTemplateRequest.Parser, new[]{ "Name", "InspectTemplate", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.GetInspectTemplateRequest), global::Google.Cloud.Dlp.V2.GetInspectTemplateRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ListInspectTemplatesRequest), global::Google.Cloud.Dlp.V2.ListInspectTemplatesRequest.Parser, new[]{ "Parent", "PageToken", "PageSize", "OrderBy", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ListInspectTemplatesResponse), global::Google.Cloud.Dlp.V2.ListInspectTemplatesResponse.Parser, new[]{ "InspectTemplates", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DeleteInspectTemplateRequest), global::Google.Cloud.Dlp.V2.DeleteInspectTemplateRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CreateJobTriggerRequest), global::Google.Cloud.Dlp.V2.CreateJobTriggerRequest.Parser, new[]{ "Parent", "JobTrigger", "TriggerId", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ActivateJobTriggerRequest), global::Google.Cloud.Dlp.V2.ActivateJobTriggerRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.UpdateJobTriggerRequest), global::Google.Cloud.Dlp.V2.UpdateJobTriggerRequest.Parser, new[]{ "Name", "JobTrigger", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.GetJobTriggerRequest), global::Google.Cloud.Dlp.V2.GetJobTriggerRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CreateDlpJobRequest), global::Google.Cloud.Dlp.V2.CreateDlpJobRequest.Parser, new[]{ "Parent", "InspectJob", "RiskJob", "JobId", "LocationId" }, new[]{ "Job" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ListJobTriggersRequest), global::Google.Cloud.Dlp.V2.ListJobTriggersRequest.Parser, new[]{ "Parent", "PageToken", "PageSize", "OrderBy", "Filter", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ListJobTriggersResponse), global::Google.Cloud.Dlp.V2.ListJobTriggersResponse.Parser, new[]{ "JobTriggers", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DeleteJobTriggerRequest), global::Google.Cloud.Dlp.V2.DeleteJobTriggerRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InspectJobConfig), global::Google.Cloud.Dlp.V2.InspectJobConfig.Parser, new[]{ "StorageConfig", "InspectConfig", "InspectTemplateName", "Actions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DlpJob), global::Google.Cloud.Dlp.V2.DlpJob.Parser, new[]{ "Name", "Type", "State", "RiskDetails", "InspectDetails", "CreateTime", "StartTime", "EndTime", "JobTriggerName", "Errors" }, new[]{ "Details" }, new[]{ typeof(global::Google.Cloud.Dlp.V2.DlpJob.Types.JobState) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.GetDlpJobRequest), global::Google.Cloud.Dlp.V2.GetDlpJobRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ListDlpJobsRequest), global::Google.Cloud.Dlp.V2.ListDlpJobsRequest.Parser, new[]{ "Parent", "Filter", "PageSize", "PageToken", "Type", "OrderBy", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ListDlpJobsResponse), global::Google.Cloud.Dlp.V2.ListDlpJobsResponse.Parser, new[]{ "Jobs", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CancelDlpJobRequest), global::Google.Cloud.Dlp.V2.CancelDlpJobRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.FinishDlpJobRequest), global::Google.Cloud.Dlp.V2.FinishDlpJobRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DeleteDlpJobRequest), global::Google.Cloud.Dlp.V2.DeleteDlpJobRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CreateDeidentifyTemplateRequest), global::Google.Cloud.Dlp.V2.CreateDeidentifyTemplateRequest.Parser, new[]{ "Parent", "DeidentifyTemplate", "TemplateId", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.UpdateDeidentifyTemplateRequest), global::Google.Cloud.Dlp.V2.UpdateDeidentifyTemplateRequest.Parser, new[]{ "Name", "DeidentifyTemplate", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.GetDeidentifyTemplateRequest), global::Google.Cloud.Dlp.V2.GetDeidentifyTemplateRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ListDeidentifyTemplatesRequest), global::Google.Cloud.Dlp.V2.ListDeidentifyTemplatesRequest.Parser, new[]{ "Parent", "PageToken", "PageSize", "OrderBy", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ListDeidentifyTemplatesResponse), global::Google.Cloud.Dlp.V2.ListDeidentifyTemplatesResponse.Parser, new[]{ "DeidentifyTemplates", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DeleteDeidentifyTemplateRequest), global::Google.Cloud.Dlp.V2.DeleteDeidentifyTemplateRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.LargeCustomDictionaryConfig), global::Google.Cloud.Dlp.V2.LargeCustomDictionaryConfig.Parser, new[]{ "OutputPath", "CloudStorageFileSet", "BigQueryField" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.LargeCustomDictionaryStats), global::Google.Cloud.Dlp.V2.LargeCustomDictionaryStats.Parser, new[]{ "ApproxNumPhrases" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig), global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig.Parser, new[]{ "DisplayName", "Description", "LargeCustomDictionary", "Dictionary", "Regex" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.StoredInfoTypeStats), global::Google.Cloud.Dlp.V2.StoredInfoTypeStats.Parser, new[]{ "LargeCustomDictionary" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.StoredInfoTypeVersion), global::Google.Cloud.Dlp.V2.StoredInfoTypeVersion.Parser, new[]{ "Config", "CreateTime", "State", "Errors", "Stats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.StoredInfoType), global::Google.Cloud.Dlp.V2.StoredInfoType.Parser, new[]{ "Name", "CurrentVersion", "PendingVersions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CreateStoredInfoTypeRequest), global::Google.Cloud.Dlp.V2.CreateStoredInfoTypeRequest.Parser, new[]{ "Parent", "Config", "StoredInfoTypeId", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.UpdateStoredInfoTypeRequest), global::Google.Cloud.Dlp.V2.UpdateStoredInfoTypeRequest.Parser, new[]{ "Name", "Config", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.GetStoredInfoTypeRequest), global::Google.Cloud.Dlp.V2.GetStoredInfoTypeRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ListStoredInfoTypesRequest), global::Google.Cloud.Dlp.V2.ListStoredInfoTypesRequest.Parser, new[]{ "Parent", "PageToken", "PageSize", "OrderBy", "LocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.ListStoredInfoTypesResponse), global::Google.Cloud.Dlp.V2.ListStoredInfoTypesResponse.Parser, new[]{ "StoredInfoTypes", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DeleteStoredInfoTypeRequest), global::Google.Cloud.Dlp.V2.DeleteStoredInfoTypeRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.HybridInspectJobTriggerRequest), global::Google.Cloud.Dlp.V2.HybridInspectJobTriggerRequest.Parser, new[]{ "Name", "HybridItem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.HybridInspectDlpJobRequest), global::Google.Cloud.Dlp.V2.HybridInspectDlpJobRequest.Parser, new[]{ "Name", "HybridItem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.HybridContentItem), global::Google.Cloud.Dlp.V2.HybridContentItem.Parser, new[]{ "Item", "FindingDetails" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.HybridFindingDetails), global::Google.Cloud.Dlp.V2.HybridFindingDetails.Parser, new[]{ "ContainerDetails", "FileOffset", "RowOffset", "TableOptions", "Labels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.HybridInspectResponse), global::Google.Cloud.Dlp.V2.HybridInspectResponse.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Operators available for comparing the value of fields.
  /// </summary>
  public enum RelationalOperator {
    /// <summary>
    /// Unused
    /// </summary>
    [pbr::OriginalName("RELATIONAL_OPERATOR_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Equal. Attempts to match even with incompatible types.
    /// </summary>
    [pbr::OriginalName("EQUAL_TO")] EqualTo = 1,
    /// <summary>
    /// Not equal to. Attempts to match even with incompatible types.
    /// </summary>
    [pbr::OriginalName("NOT_EQUAL_TO")] NotEqualTo = 2,
    /// <summary>
    /// Greater than.
    /// </summary>
    [pbr::OriginalName("GREATER_THAN")] GreaterThan = 3,
    /// <summary>
    /// Less than.
    /// </summary>
    [pbr::OriginalName("LESS_THAN")] LessThan = 4,
    /// <summary>
    /// Greater than or equals.
    /// </summary>
    [pbr::OriginalName("GREATER_THAN_OR_EQUALS")] GreaterThanOrEquals = 5,
    /// <summary>
    /// Less than or equals.
    /// </summary>
    [pbr::OriginalName("LESS_THAN_OR_EQUALS")] LessThanOrEquals = 6,
    /// <summary>
    /// Exists
    /// </summary>
    [pbr::OriginalName("EXISTS")] Exists = 7,
  }

  /// <summary>
  /// Type of the match which can be applied to different ways of matching, like
  /// Dictionary, regular expression and intersecting with findings of another
  /// info type.
  /// </summary>
  public enum MatchingType {
    /// <summary>
    /// Invalid.
    /// </summary>
    [pbr::OriginalName("MATCHING_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Full match.
    ///
    /// - Dictionary: join of Dictionary results matched complete finding quote
    /// - Regex: all regex matches fill a finding quote start to end
    /// - Exclude info type: completely inside affecting info types findings
    /// </summary>
    [pbr::OriginalName("MATCHING_TYPE_FULL_MATCH")] FullMatch = 1,
    /// <summary>
    /// Partial match.
    ///
    /// - Dictionary: at least one of the tokens in the finding matches
    /// - Regex: substring of the finding matches
    /// - Exclude info type: intersects with affecting info types findings
    /// </summary>
    [pbr::OriginalName("MATCHING_TYPE_PARTIAL_MATCH")] PartialMatch = 2,
    /// <summary>
    /// Inverse match.
    ///
    /// - Dictionary: no tokens in the finding match the dictionary
    /// - Regex: finding doesn't match the regex
    /// - Exclude info type: no intersection with affecting info types findings
    /// </summary>
    [pbr::OriginalName("MATCHING_TYPE_INVERSE_MATCH")] InverseMatch = 3,
  }

  /// <summary>
  /// Options describing which parts of the provided content should be scanned.
  /// </summary>
  public enum ContentOption {
    /// <summary>
    /// Includes entire content of a file or a data stream.
    /// </summary>
    [pbr::OriginalName("CONTENT_UNSPECIFIED")] ContentUnspecified = 0,
    /// <summary>
    /// Text content within the data, excluding any metadata.
    /// </summary>
    [pbr::OriginalName("CONTENT_TEXT")] ContentText = 1,
    /// <summary>
    /// Images found in the data.
    /// </summary>
    [pbr::OriginalName("CONTENT_IMAGE")] ContentImage = 2,
  }

  /// <summary>
  /// Type of metadata containing the finding.
  /// </summary>
  public enum MetadataType {
    /// <summary>
    /// Unused
    /// </summary>
    [pbr::OriginalName("METADATATYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// General file metadata provided by Cloud Storage.
    /// </summary>
    [pbr::OriginalName("STORAGE_METADATA")] StorageMetadata = 2,
  }

  /// <summary>
  /// Parts of the APIs which use certain infoTypes.
  /// </summary>
  public enum InfoTypeSupportedBy {
    /// <summary>
    /// Unused.
    /// </summary>
    [pbr::OriginalName("ENUM_TYPE_UNSPECIFIED")] EnumTypeUnspecified = 0,
    /// <summary>
    /// Supported by the inspect operations.
    /// </summary>
    [pbr::OriginalName("INSPECT")] Inspect = 1,
    /// <summary>
    /// Supported by the risk analysis operations.
    /// </summary>
    [pbr::OriginalName("RISK_ANALYSIS")] RiskAnalysis = 2,
  }

  /// <summary>
  /// An enum to represent the various types of DLP jobs.
  /// </summary>
  public enum DlpJobType {
    /// <summary>
    /// Unused
    /// </summary>
    [pbr::OriginalName("DLP_JOB_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The job inspected Google Cloud for sensitive data.
    /// </summary>
    [pbr::OriginalName("INSPECT_JOB")] InspectJob = 1,
    /// <summary>
    /// The job executed a Risk Analysis computation.
    /// </summary>
    [pbr::OriginalName("RISK_ANALYSIS_JOB")] RiskAnalysisJob = 2,
  }

  /// <summary>
  /// State of a StoredInfoType version.
  /// </summary>
  public enum StoredInfoTypeState {
    /// <summary>
    /// Unused
    /// </summary>
    [pbr::OriginalName("STORED_INFO_TYPE_STATE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// StoredInfoType version is being created.
    /// </summary>
    [pbr::OriginalName("PENDING")] Pending = 1,
    /// <summary>
    /// StoredInfoType version is ready for use.
    /// </summary>
    [pbr::OriginalName("READY")] Ready = 2,
    /// <summary>
    /// StoredInfoType creation failed. All relevant error messages are returned in
    /// the `StoredInfoTypeVersion` message.
    /// </summary>
    [pbr::OriginalName("FAILED")] Failed = 3,
    /// <summary>
    /// StoredInfoType is no longer valid because artifacts stored in
    /// user-controlled storage were modified. To fix an invalid StoredInfoType,
    /// use the `UpdateStoredInfoType` method to create a new version.
    /// </summary>
    [pbr::OriginalName("INVALID")] Invalid = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// List of exclude infoTypes.
  /// </summary>
  public sealed partial class ExcludeInfoTypes : pb::IMessage<ExcludeInfoTypes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExcludeInfoTypes> _parser = new pb::MessageParser<ExcludeInfoTypes>(() => new ExcludeInfoTypes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExcludeInfoTypes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExcludeInfoTypes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExcludeInfoTypes(ExcludeInfoTypes other) : this() {
      infoTypes_ = other.infoTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExcludeInfoTypes Clone() {
      return new ExcludeInfoTypes(this);
    }

    /// <summary>Field number for the "info_types" field.</summary>
    public const int InfoTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.InfoType> _repeated_infoTypes_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.InfoType.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoType> infoTypes_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoType>();
    /// <summary>
    /// InfoType list in ExclusionRule rule drops a finding when it overlaps or
    /// contained within with a finding of an infoType from this list. For
    /// example, for `InspectionRuleSet.info_types` containing "PHONE_NUMBER"` and
    /// `exclusion_rule` containing `exclude_info_types.info_types` with
    /// "EMAIL_ADDRESS" the phone number findings are dropped if they overlap
    /// with EMAIL_ADDRESS finding.
    /// That leads to "555-222-2222@example.org" to generate only a single
    /// finding, namely email address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoType> InfoTypes {
      get { return infoTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExcludeInfoTypes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExcludeInfoTypes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!infoTypes_.Equals(other.infoTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= infoTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      infoTypes_.WriteTo(output, _repeated_infoTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      infoTypes_.WriteTo(ref output, _repeated_infoTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += infoTypes_.CalculateSize(_repeated_infoTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExcludeInfoTypes other) {
      if (other == null) {
        return;
      }
      infoTypes_.Add(other.infoTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            infoTypes_.AddEntriesFrom(input, _repeated_infoTypes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            infoTypes_.AddEntriesFrom(ref input, _repeated_infoTypes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The rule that specifies conditions when findings of infoTypes specified in
  /// `InspectionRuleSet` are removed from results.
  /// </summary>
  public sealed partial class ExclusionRule : pb::IMessage<ExclusionRule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExclusionRule> _parser = new pb::MessageParser<ExclusionRule>(() => new ExclusionRule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExclusionRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExclusionRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExclusionRule(ExclusionRule other) : this() {
      matchingType_ = other.matchingType_;
      switch (other.TypeCase) {
        case TypeOneofCase.Dictionary:
          Dictionary = other.Dictionary.Clone();
          break;
        case TypeOneofCase.Regex:
          Regex = other.Regex.Clone();
          break;
        case TypeOneofCase.ExcludeInfoTypes:
          ExcludeInfoTypes = other.ExcludeInfoTypes.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExclusionRule Clone() {
      return new ExclusionRule(this);
    }

    /// <summary>Field number for the "dictionary" field.</summary>
    public const int DictionaryFieldNumber = 1;
    /// <summary>
    /// Dictionary which defines the rule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary Dictionary {
      get { return typeCase_ == TypeOneofCase.Dictionary ? (global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Dictionary;
      }
    }

    /// <summary>Field number for the "regex" field.</summary>
    public const int RegexFieldNumber = 2;
    /// <summary>
    /// Regular expression which defines the rule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex Regex {
      get { return typeCase_ == TypeOneofCase.Regex ? (global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Regex;
      }
    }

    /// <summary>Field number for the "exclude_info_types" field.</summary>
    public const int ExcludeInfoTypesFieldNumber = 3;
    /// <summary>
    /// Set of infoTypes for which findings would affect this rule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ExcludeInfoTypes ExcludeInfoTypes {
      get { return typeCase_ == TypeOneofCase.ExcludeInfoTypes ? (global::Google.Cloud.Dlp.V2.ExcludeInfoTypes) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.ExcludeInfoTypes;
      }
    }

    /// <summary>Field number for the "matching_type" field.</summary>
    public const int MatchingTypeFieldNumber = 4;
    private global::Google.Cloud.Dlp.V2.MatchingType matchingType_ = global::Google.Cloud.Dlp.V2.MatchingType.Unspecified;
    /// <summary>
    /// How the rule is applied, see MatchingType documentation for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.MatchingType MatchingType {
      get { return matchingType_; }
      set {
        matchingType_ = value;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Dictionary = 1,
      Regex = 2,
      ExcludeInfoTypes = 3,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExclusionRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExclusionRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Dictionary, other.Dictionary)) return false;
      if (!object.Equals(Regex, other.Regex)) return false;
      if (!object.Equals(ExcludeInfoTypes, other.ExcludeInfoTypes)) return false;
      if (MatchingType != other.MatchingType) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Dictionary) hash ^= Dictionary.GetHashCode();
      if (typeCase_ == TypeOneofCase.Regex) hash ^= Regex.GetHashCode();
      if (typeCase_ == TypeOneofCase.ExcludeInfoTypes) hash ^= ExcludeInfoTypes.GetHashCode();
      if (MatchingType != global::Google.Cloud.Dlp.V2.MatchingType.Unspecified) hash ^= MatchingType.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (typeCase_ == TypeOneofCase.Dictionary) {
        output.WriteRawTag(10);
        output.WriteMessage(Dictionary);
      }
      if (typeCase_ == TypeOneofCase.Regex) {
        output.WriteRawTag(18);
        output.WriteMessage(Regex);
      }
      if (typeCase_ == TypeOneofCase.ExcludeInfoTypes) {
        output.WriteRawTag(26);
        output.WriteMessage(ExcludeInfoTypes);
      }
      if (MatchingType != global::Google.Cloud.Dlp.V2.MatchingType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) MatchingType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (typeCase_ == TypeOneofCase.Dictionary) {
        output.WriteRawTag(10);
        output.WriteMessage(Dictionary);
      }
      if (typeCase_ == TypeOneofCase.Regex) {
        output.WriteRawTag(18);
        output.WriteMessage(Regex);
      }
      if (typeCase_ == TypeOneofCase.ExcludeInfoTypes) {
        output.WriteRawTag(26);
        output.WriteMessage(ExcludeInfoTypes);
      }
      if (MatchingType != global::Google.Cloud.Dlp.V2.MatchingType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) MatchingType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Dictionary) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dictionary);
      }
      if (typeCase_ == TypeOneofCase.Regex) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Regex);
      }
      if (typeCase_ == TypeOneofCase.ExcludeInfoTypes) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExcludeInfoTypes);
      }
      if (MatchingType != global::Google.Cloud.Dlp.V2.MatchingType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchingType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExclusionRule other) {
      if (other == null) {
        return;
      }
      if (other.MatchingType != global::Google.Cloud.Dlp.V2.MatchingType.Unspecified) {
        MatchingType = other.MatchingType;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Dictionary:
          if (Dictionary == null) {
            Dictionary = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary();
          }
          Dictionary.MergeFrom(other.Dictionary);
          break;
        case TypeOneofCase.Regex:
          if (Regex == null) {
            Regex = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex();
          }
          Regex.MergeFrom(other.Regex);
          break;
        case TypeOneofCase.ExcludeInfoTypes:
          if (ExcludeInfoTypes == null) {
            ExcludeInfoTypes = new global::Google.Cloud.Dlp.V2.ExcludeInfoTypes();
          }
          ExcludeInfoTypes.MergeFrom(other.ExcludeInfoTypes);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary();
            if (typeCase_ == TypeOneofCase.Dictionary) {
              subBuilder.MergeFrom(Dictionary);
            }
            input.ReadMessage(subBuilder);
            Dictionary = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex();
            if (typeCase_ == TypeOneofCase.Regex) {
              subBuilder.MergeFrom(Regex);
            }
            input.ReadMessage(subBuilder);
            Regex = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.ExcludeInfoTypes subBuilder = new global::Google.Cloud.Dlp.V2.ExcludeInfoTypes();
            if (typeCase_ == TypeOneofCase.ExcludeInfoTypes) {
              subBuilder.MergeFrom(ExcludeInfoTypes);
            }
            input.ReadMessage(subBuilder);
            ExcludeInfoTypes = subBuilder;
            break;
          }
          case 32: {
            MatchingType = (global::Google.Cloud.Dlp.V2.MatchingType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary();
            if (typeCase_ == TypeOneofCase.Dictionary) {
              subBuilder.MergeFrom(Dictionary);
            }
            input.ReadMessage(subBuilder);
            Dictionary = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex();
            if (typeCase_ == TypeOneofCase.Regex) {
              subBuilder.MergeFrom(Regex);
            }
            input.ReadMessage(subBuilder);
            Regex = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.ExcludeInfoTypes subBuilder = new global::Google.Cloud.Dlp.V2.ExcludeInfoTypes();
            if (typeCase_ == TypeOneofCase.ExcludeInfoTypes) {
              subBuilder.MergeFrom(ExcludeInfoTypes);
            }
            input.ReadMessage(subBuilder);
            ExcludeInfoTypes = subBuilder;
            break;
          }
          case 32: {
            MatchingType = (global::Google.Cloud.Dlp.V2.MatchingType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A single inspection rule to be applied to infoTypes, specified in
  /// `InspectionRuleSet`.
  /// </summary>
  public sealed partial class InspectionRule : pb::IMessage<InspectionRule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InspectionRule> _parser = new pb::MessageParser<InspectionRule>(() => new InspectionRule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InspectionRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectionRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectionRule(InspectionRule other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.HotwordRule:
          HotwordRule = other.HotwordRule.Clone();
          break;
        case TypeOneofCase.ExclusionRule:
          ExclusionRule = other.ExclusionRule.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectionRule Clone() {
      return new InspectionRule(this);
    }

    /// <summary>Field number for the "hotword_rule" field.</summary>
    public const int HotwordRuleFieldNumber = 1;
    /// <summary>
    /// Hotword-based detection rule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule HotwordRule {
      get { return typeCase_ == TypeOneofCase.HotwordRule ? (global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.HotwordRule;
      }
    }

    /// <summary>Field number for the "exclusion_rule" field.</summary>
    public const int ExclusionRuleFieldNumber = 2;
    /// <summary>
    /// Exclusion rule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ExclusionRule ExclusionRule {
      get { return typeCase_ == TypeOneofCase.ExclusionRule ? (global::Google.Cloud.Dlp.V2.ExclusionRule) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.ExclusionRule;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      HotwordRule = 1,
      ExclusionRule = 2,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InspectionRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InspectionRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HotwordRule, other.HotwordRule)) return false;
      if (!object.Equals(ExclusionRule, other.ExclusionRule)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.HotwordRule) hash ^= HotwordRule.GetHashCode();
      if (typeCase_ == TypeOneofCase.ExclusionRule) hash ^= ExclusionRule.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (typeCase_ == TypeOneofCase.HotwordRule) {
        output.WriteRawTag(10);
        output.WriteMessage(HotwordRule);
      }
      if (typeCase_ == TypeOneofCase.ExclusionRule) {
        output.WriteRawTag(18);
        output.WriteMessage(ExclusionRule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (typeCase_ == TypeOneofCase.HotwordRule) {
        output.WriteRawTag(10);
        output.WriteMessage(HotwordRule);
      }
      if (typeCase_ == TypeOneofCase.ExclusionRule) {
        output.WriteRawTag(18);
        output.WriteMessage(ExclusionRule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.HotwordRule) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HotwordRule);
      }
      if (typeCase_ == TypeOneofCase.ExclusionRule) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExclusionRule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InspectionRule other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.HotwordRule:
          if (HotwordRule == null) {
            HotwordRule = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule();
          }
          HotwordRule.MergeFrom(other.HotwordRule);
          break;
        case TypeOneofCase.ExclusionRule:
          if (ExclusionRule == null) {
            ExclusionRule = new global::Google.Cloud.Dlp.V2.ExclusionRule();
          }
          ExclusionRule.MergeFrom(other.ExclusionRule);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule();
            if (typeCase_ == TypeOneofCase.HotwordRule) {
              subBuilder.MergeFrom(HotwordRule);
            }
            input.ReadMessage(subBuilder);
            HotwordRule = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.ExclusionRule subBuilder = new global::Google.Cloud.Dlp.V2.ExclusionRule();
            if (typeCase_ == TypeOneofCase.ExclusionRule) {
              subBuilder.MergeFrom(ExclusionRule);
            }
            input.ReadMessage(subBuilder);
            ExclusionRule = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule();
            if (typeCase_ == TypeOneofCase.HotwordRule) {
              subBuilder.MergeFrom(HotwordRule);
            }
            input.ReadMessage(subBuilder);
            HotwordRule = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.ExclusionRule subBuilder = new global::Google.Cloud.Dlp.V2.ExclusionRule();
            if (typeCase_ == TypeOneofCase.ExclusionRule) {
              subBuilder.MergeFrom(ExclusionRule);
            }
            input.ReadMessage(subBuilder);
            ExclusionRule = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Rule set for modifying a set of infoTypes to alter behavior under certain
  /// circumstances, depending on the specific details of the rules within the set.
  /// </summary>
  public sealed partial class InspectionRuleSet : pb::IMessage<InspectionRuleSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InspectionRuleSet> _parser = new pb::MessageParser<InspectionRuleSet>(() => new InspectionRuleSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InspectionRuleSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectionRuleSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectionRuleSet(InspectionRuleSet other) : this() {
      infoTypes_ = other.infoTypes_.Clone();
      rules_ = other.rules_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectionRuleSet Clone() {
      return new InspectionRuleSet(this);
    }

    /// <summary>Field number for the "info_types" field.</summary>
    public const int InfoTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.InfoType> _repeated_infoTypes_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.InfoType.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoType> infoTypes_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoType>();
    /// <summary>
    /// List of infoTypes this rule set is applied to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoType> InfoTypes {
      get { return infoTypes_; }
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.InspectionRule> _repeated_rules_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Dlp.V2.InspectionRule.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InspectionRule> rules_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InspectionRule>();
    /// <summary>
    /// Set of rules to be applied to infoTypes. The rules are applied in order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InspectionRule> Rules {
      get { return rules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InspectionRuleSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InspectionRuleSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!infoTypes_.Equals(other.infoTypes_)) return false;
      if(!rules_.Equals(other.rules_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= infoTypes_.GetHashCode();
      hash ^= rules_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      infoTypes_.WriteTo(output, _repeated_infoTypes_codec);
      rules_.WriteTo(output, _repeated_rules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      infoTypes_.WriteTo(ref output, _repeated_infoTypes_codec);
      rules_.WriteTo(ref output, _repeated_rules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += infoTypes_.CalculateSize(_repeated_infoTypes_codec);
      size += rules_.CalculateSize(_repeated_rules_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InspectionRuleSet other) {
      if (other == null) {
        return;
      }
      infoTypes_.Add(other.infoTypes_);
      rules_.Add(other.rules_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            infoTypes_.AddEntriesFrom(input, _repeated_infoTypes_codec);
            break;
          }
          case 18: {
            rules_.AddEntriesFrom(input, _repeated_rules_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            infoTypes_.AddEntriesFrom(ref input, _repeated_infoTypes_codec);
            break;
          }
          case 18: {
            rules_.AddEntriesFrom(ref input, _repeated_rules_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Configuration description of the scanning process.
  /// When used with redactContent only info_types and min_likelihood are currently
  /// used.
  /// </summary>
  public sealed partial class InspectConfig : pb::IMessage<InspectConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InspectConfig> _parser = new pb::MessageParser<InspectConfig>(() => new InspectConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InspectConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectConfig(InspectConfig other) : this() {
      infoTypes_ = other.infoTypes_.Clone();
      minLikelihood_ = other.minLikelihood_;
      limits_ = other.limits_ != null ? other.limits_.Clone() : null;
      includeQuote_ = other.includeQuote_;
      excludeInfoTypes_ = other.excludeInfoTypes_;
      customInfoTypes_ = other.customInfoTypes_.Clone();
      contentOptions_ = other.contentOptions_.Clone();
      ruleSet_ = other.ruleSet_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectConfig Clone() {
      return new InspectConfig(this);
    }

    /// <summary>Field number for the "info_types" field.</summary>
    public const int InfoTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.InfoType> _repeated_infoTypes_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.InfoType.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoType> infoTypes_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoType>();
    /// <summary>
    /// Restricts what info_types to look for. The values must correspond to
    /// InfoType values returned by ListInfoTypes or listed at
    /// https://cloud.google.com/dlp/docs/infotypes-reference.
    ///
    /// When no InfoTypes or CustomInfoTypes are specified in a request, the
    /// system may automatically choose what detectors to run. By default this may
    /// be all types, but may change over time as detectors are updated.
    ///
    /// If you need precise control and predictability as to what detectors are
    /// run you should specify specific InfoTypes listed in the reference,
    /// otherwise a default list will be used, which may change over time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoType> InfoTypes {
      get { return infoTypes_; }
    }

    /// <summary>Field number for the "min_likelihood" field.</summary>
    public const int MinLikelihoodFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.Likelihood minLikelihood_ = global::Google.Cloud.Dlp.V2.Likelihood.Unspecified;
    /// <summary>
    /// Only returns findings equal or above this threshold. The default is
    /// POSSIBLE.
    /// See https://cloud.google.com/dlp/docs/likelihood to learn more.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Likelihood MinLikelihood {
      get { return minLikelihood_; }
      set {
        minLikelihood_ = value;
      }
    }

    /// <summary>Field number for the "limits" field.</summary>
    public const int LimitsFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits limits_;
    /// <summary>
    /// Configuration to control the number of findings returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits Limits {
      get { return limits_; }
      set {
        limits_ = value;
      }
    }

    /// <summary>Field number for the "include_quote" field.</summary>
    public const int IncludeQuoteFieldNumber = 4;
    private bool includeQuote_;
    /// <summary>
    /// When true, a contextual quote from the data that triggered a finding is
    /// included in the response; see Finding.quote.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeQuote {
      get { return includeQuote_; }
      set {
        includeQuote_ = value;
      }
    }

    /// <summary>Field number for the "exclude_info_types" field.</summary>
    public const int ExcludeInfoTypesFieldNumber = 5;
    private bool excludeInfoTypes_;
    /// <summary>
    /// When true, excludes type information of the findings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExcludeInfoTypes {
      get { return excludeInfoTypes_; }
      set {
        excludeInfoTypes_ = value;
      }
    }

    /// <summary>Field number for the "custom_info_types" field.</summary>
    public const int CustomInfoTypesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.CustomInfoType> _repeated_customInfoTypes_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Cloud.Dlp.V2.CustomInfoType.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.CustomInfoType> customInfoTypes_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.CustomInfoType>();
    /// <summary>
    /// CustomInfoTypes provided by the user. See
    /// https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.CustomInfoType> CustomInfoTypes {
      get { return customInfoTypes_; }
    }

    /// <summary>Field number for the "content_options" field.</summary>
    public const int ContentOptionsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.ContentOption> _repeated_contentOptions_codec
        = pb::FieldCodec.ForEnum(66, x => (int) x, x => (global::Google.Cloud.Dlp.V2.ContentOption) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.ContentOption> contentOptions_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.ContentOption>();
    /// <summary>
    /// List of options defining data content to scan.
    /// If empty, text, images, and other content will be included.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.ContentOption> ContentOptions {
      get { return contentOptions_; }
    }

    /// <summary>Field number for the "rule_set" field.</summary>
    public const int RuleSetFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.InspectionRuleSet> _repeated_ruleSet_codec
        = pb::FieldCodec.ForMessage(82, global::Google.Cloud.Dlp.V2.InspectionRuleSet.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InspectionRuleSet> ruleSet_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InspectionRuleSet>();
    /// <summary>
    /// Set of rules to apply to the findings for this InspectConfig.
    /// Exclusion rules, contained in the set are executed in the end, other
    /// rules are executed in the order they are specified for each info type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InspectionRuleSet> RuleSet {
      get { return ruleSet_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InspectConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InspectConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!infoTypes_.Equals(other.infoTypes_)) return false;
      if (MinLikelihood != other.MinLikelihood) return false;
      if (!object.Equals(Limits, other.Limits)) return false;
      if (IncludeQuote != other.IncludeQuote) return false;
      if (ExcludeInfoTypes != other.ExcludeInfoTypes) return false;
      if(!customInfoTypes_.Equals(other.customInfoTypes_)) return false;
      if(!contentOptions_.Equals(other.contentOptions_)) return false;
      if(!ruleSet_.Equals(other.ruleSet_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= infoTypes_.GetHashCode();
      if (MinLikelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) hash ^= MinLikelihood.GetHashCode();
      if (limits_ != null) hash ^= Limits.GetHashCode();
      if (IncludeQuote != false) hash ^= IncludeQuote.GetHashCode();
      if (ExcludeInfoTypes != false) hash ^= ExcludeInfoTypes.GetHashCode();
      hash ^= customInfoTypes_.GetHashCode();
      hash ^= contentOptions_.GetHashCode();
      hash ^= ruleSet_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      infoTypes_.WriteTo(output, _repeated_infoTypes_codec);
      if (MinLikelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MinLikelihood);
      }
      if (limits_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Limits);
      }
      if (IncludeQuote != false) {
        output.WriteRawTag(32);
        output.WriteBool(IncludeQuote);
      }
      if (ExcludeInfoTypes != false) {
        output.WriteRawTag(40);
        output.WriteBool(ExcludeInfoTypes);
      }
      customInfoTypes_.WriteTo(output, _repeated_customInfoTypes_codec);
      contentOptions_.WriteTo(output, _repeated_contentOptions_codec);
      ruleSet_.WriteTo(output, _repeated_ruleSet_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      infoTypes_.WriteTo(ref output, _repeated_infoTypes_codec);
      if (MinLikelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MinLikelihood);
      }
      if (limits_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Limits);
      }
      if (IncludeQuote != false) {
        output.WriteRawTag(32);
        output.WriteBool(IncludeQuote);
      }
      if (ExcludeInfoTypes != false) {
        output.WriteRawTag(40);
        output.WriteBool(ExcludeInfoTypes);
      }
      customInfoTypes_.WriteTo(ref output, _repeated_customInfoTypes_codec);
      contentOptions_.WriteTo(ref output, _repeated_contentOptions_codec);
      ruleSet_.WriteTo(ref output, _repeated_ruleSet_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += infoTypes_.CalculateSize(_repeated_infoTypes_codec);
      if (MinLikelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MinLikelihood);
      }
      if (limits_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Limits);
      }
      if (IncludeQuote != false) {
        size += 1 + 1;
      }
      if (ExcludeInfoTypes != false) {
        size += 1 + 1;
      }
      size += customInfoTypes_.CalculateSize(_repeated_customInfoTypes_codec);
      size += contentOptions_.CalculateSize(_repeated_contentOptions_codec);
      size += ruleSet_.CalculateSize(_repeated_ruleSet_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InspectConfig other) {
      if (other == null) {
        return;
      }
      infoTypes_.Add(other.infoTypes_);
      if (other.MinLikelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) {
        MinLikelihood = other.MinLikelihood;
      }
      if (other.limits_ != null) {
        if (limits_ == null) {
          Limits = new global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits();
        }
        Limits.MergeFrom(other.Limits);
      }
      if (other.IncludeQuote != false) {
        IncludeQuote = other.IncludeQuote;
      }
      if (other.ExcludeInfoTypes != false) {
        ExcludeInfoTypes = other.ExcludeInfoTypes;
      }
      customInfoTypes_.Add(other.customInfoTypes_);
      contentOptions_.Add(other.contentOptions_);
      ruleSet_.Add(other.ruleSet_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            infoTypes_.AddEntriesFrom(input, _repeated_infoTypes_codec);
            break;
          }
          case 16: {
            MinLikelihood = (global::Google.Cloud.Dlp.V2.Likelihood) input.ReadEnum();
            break;
          }
          case 26: {
            if (limits_ == null) {
              Limits = new global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits();
            }
            input.ReadMessage(Limits);
            break;
          }
          case 32: {
            IncludeQuote = input.ReadBool();
            break;
          }
          case 40: {
            ExcludeInfoTypes = input.ReadBool();
            break;
          }
          case 50: {
            customInfoTypes_.AddEntriesFrom(input, _repeated_customInfoTypes_codec);
            break;
          }
          case 66:
          case 64: {
            contentOptions_.AddEntriesFrom(input, _repeated_contentOptions_codec);
            break;
          }
          case 82: {
            ruleSet_.AddEntriesFrom(input, _repeated_ruleSet_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            infoTypes_.AddEntriesFrom(ref input, _repeated_infoTypes_codec);
            break;
          }
          case 16: {
            MinLikelihood = (global::Google.Cloud.Dlp.V2.Likelihood) input.ReadEnum();
            break;
          }
          case 26: {
            if (limits_ == null) {
              Limits = new global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits();
            }
            input.ReadMessage(Limits);
            break;
          }
          case 32: {
            IncludeQuote = input.ReadBool();
            break;
          }
          case 40: {
            ExcludeInfoTypes = input.ReadBool();
            break;
          }
          case 50: {
            customInfoTypes_.AddEntriesFrom(ref input, _repeated_customInfoTypes_codec);
            break;
          }
          case 66:
          case 64: {
            contentOptions_.AddEntriesFrom(ref input, _repeated_contentOptions_codec);
            break;
          }
          case 82: {
            ruleSet_.AddEntriesFrom(ref input, _repeated_ruleSet_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the InspectConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Configuration to control the number of findings returned.
      /// </summary>
      public sealed partial class FindingLimits : pb::IMessage<FindingLimits>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FindingLimits> _parser = new pb::MessageParser<FindingLimits>(() => new FindingLimits());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FindingLimits> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.InspectConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FindingLimits() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FindingLimits(FindingLimits other) : this() {
          maxFindingsPerItem_ = other.maxFindingsPerItem_;
          maxFindingsPerRequest_ = other.maxFindingsPerRequest_;
          maxFindingsPerInfoType_ = other.maxFindingsPerInfoType_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FindingLimits Clone() {
          return new FindingLimits(this);
        }

        /// <summary>Field number for the "max_findings_per_item" field.</summary>
        public const int MaxFindingsPerItemFieldNumber = 1;
        private int maxFindingsPerItem_;
        /// <summary>
        /// Max number of findings that will be returned for each item scanned.
        /// When set within `InspectJobConfig`,
        /// the maximum returned is 2000 regardless if this is set higher.
        /// When set within `InspectContentRequest`, this field is ignored.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MaxFindingsPerItem {
          get { return maxFindingsPerItem_; }
          set {
            maxFindingsPerItem_ = value;
          }
        }

        /// <summary>Field number for the "max_findings_per_request" field.</summary>
        public const int MaxFindingsPerRequestFieldNumber = 2;
        private int maxFindingsPerRequest_;
        /// <summary>
        /// Max number of findings that will be returned per request/job.
        /// When set within `InspectContentRequest`, the maximum returned is 2000
        /// regardless if this is set higher.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MaxFindingsPerRequest {
          get { return maxFindingsPerRequest_; }
          set {
            maxFindingsPerRequest_ = value;
          }
        }

        /// <summary>Field number for the "max_findings_per_info_type" field.</summary>
        public const int MaxFindingsPerInfoTypeFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits.Types.InfoTypeLimit> _repeated_maxFindingsPerInfoType_codec
            = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits.Types.InfoTypeLimit.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits.Types.InfoTypeLimit> maxFindingsPerInfoType_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits.Types.InfoTypeLimit>();
        /// <summary>
        /// Configuration of findings limit given for specified infoTypes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits.Types.InfoTypeLimit> MaxFindingsPerInfoType {
          get { return maxFindingsPerInfoType_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FindingLimits);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FindingLimits other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MaxFindingsPerItem != other.MaxFindingsPerItem) return false;
          if (MaxFindingsPerRequest != other.MaxFindingsPerRequest) return false;
          if(!maxFindingsPerInfoType_.Equals(other.maxFindingsPerInfoType_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MaxFindingsPerItem != 0) hash ^= MaxFindingsPerItem.GetHashCode();
          if (MaxFindingsPerRequest != 0) hash ^= MaxFindingsPerRequest.GetHashCode();
          hash ^= maxFindingsPerInfoType_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MaxFindingsPerItem != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(MaxFindingsPerItem);
          }
          if (MaxFindingsPerRequest != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(MaxFindingsPerRequest);
          }
          maxFindingsPerInfoType_.WriteTo(output, _repeated_maxFindingsPerInfoType_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MaxFindingsPerItem != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(MaxFindingsPerItem);
          }
          if (MaxFindingsPerRequest != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(MaxFindingsPerRequest);
          }
          maxFindingsPerInfoType_.WriteTo(ref output, _repeated_maxFindingsPerInfoType_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MaxFindingsPerItem != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxFindingsPerItem);
          }
          if (MaxFindingsPerRequest != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxFindingsPerRequest);
          }
          size += maxFindingsPerInfoType_.CalculateSize(_repeated_maxFindingsPerInfoType_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FindingLimits other) {
          if (other == null) {
            return;
          }
          if (other.MaxFindingsPerItem != 0) {
            MaxFindingsPerItem = other.MaxFindingsPerItem;
          }
          if (other.MaxFindingsPerRequest != 0) {
            MaxFindingsPerRequest = other.MaxFindingsPerRequest;
          }
          maxFindingsPerInfoType_.Add(other.maxFindingsPerInfoType_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MaxFindingsPerItem = input.ReadInt32();
                break;
              }
              case 16: {
                MaxFindingsPerRequest = input.ReadInt32();
                break;
              }
              case 26: {
                maxFindingsPerInfoType_.AddEntriesFrom(input, _repeated_maxFindingsPerInfoType_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                MaxFindingsPerItem = input.ReadInt32();
                break;
              }
              case 16: {
                MaxFindingsPerRequest = input.ReadInt32();
                break;
              }
              case 26: {
                maxFindingsPerInfoType_.AddEntriesFrom(ref input, _repeated_maxFindingsPerInfoType_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the FindingLimits message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Max findings configuration per infoType, per content item or long
          /// running DlpJob.
          /// </summary>
          public sealed partial class InfoTypeLimit : pb::IMessage<InfoTypeLimit>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<InfoTypeLimit> _parser = new pb::MessageParser<InfoTypeLimit>(() => new InfoTypeLimit());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<InfoTypeLimit> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.InspectConfig.Types.FindingLimits.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public InfoTypeLimit() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public InfoTypeLimit(InfoTypeLimit other) : this() {
              infoType_ = other.infoType_ != null ? other.infoType_.Clone() : null;
              maxFindings_ = other.maxFindings_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public InfoTypeLimit Clone() {
              return new InfoTypeLimit(this);
            }

            /// <summary>Field number for the "info_type" field.</summary>
            public const int InfoTypeFieldNumber = 1;
            private global::Google.Cloud.Dlp.V2.InfoType infoType_;
            /// <summary>
            /// Type of information the findings limit applies to. Only one limit per
            /// info_type should be provided. If InfoTypeLimit does not have an
            /// info_type, the DLP API applies the limit against all info_types that
            /// are found but not specified in another InfoTypeLimit.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.Dlp.V2.InfoType InfoType {
              get { return infoType_; }
              set {
                infoType_ = value;
              }
            }

            /// <summary>Field number for the "max_findings" field.</summary>
            public const int MaxFindingsFieldNumber = 2;
            private int maxFindings_;
            /// <summary>
            /// Max findings limit for the given infoType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int MaxFindings {
              get { return maxFindings_; }
              set {
                maxFindings_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as InfoTypeLimit);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(InfoTypeLimit other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(InfoType, other.InfoType)) return false;
              if (MaxFindings != other.MaxFindings) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (infoType_ != null) hash ^= InfoType.GetHashCode();
              if (MaxFindings != 0) hash ^= MaxFindings.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (infoType_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(InfoType);
              }
              if (MaxFindings != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(MaxFindings);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (infoType_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(InfoType);
              }
              if (MaxFindings != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(MaxFindings);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (infoType_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoType);
              }
              if (MaxFindings != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxFindings);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(InfoTypeLimit other) {
              if (other == null) {
                return;
              }
              if (other.infoType_ != null) {
                if (infoType_ == null) {
                  InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
                }
                InfoType.MergeFrom(other.InfoType);
              }
              if (other.MaxFindings != 0) {
                MaxFindings = other.MaxFindings;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (infoType_ == null) {
                      InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
                    }
                    input.ReadMessage(InfoType);
                    break;
                  }
                  case 16: {
                    MaxFindings = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (infoType_ == null) {
                      InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
                    }
                    input.ReadMessage(InfoType);
                    break;
                  }
                  case 16: {
                    MaxFindings = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Container for bytes to inspect or redact.
  /// </summary>
  public sealed partial class ByteContentItem : pb::IMessage<ByteContentItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ByteContentItem> _parser = new pb::MessageParser<ByteContentItem>(() => new ByteContentItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ByteContentItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ByteContentItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ByteContentItem(ByteContentItem other) : this() {
      type_ = other.type_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ByteContentItem Clone() {
      return new ByteContentItem(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.ByteContentItem.Types.BytesType type_ = global::Google.Cloud.Dlp.V2.ByteContentItem.Types.BytesType.Unspecified;
    /// <summary>
    /// The type of data stored in the bytes string. Default will be TEXT_UTF8.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ByteContentItem.Types.BytesType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// Content data to inspect or redact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ByteContentItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ByteContentItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Google.Cloud.Dlp.V2.ByteContentItem.Types.BytesType.Unspecified) hash ^= Type.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Google.Cloud.Dlp.V2.ByteContentItem.Types.BytesType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Google.Cloud.Dlp.V2.ByteContentItem.Types.BytesType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Google.Cloud.Dlp.V2.ByteContentItem.Types.BytesType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ByteContentItem other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Google.Cloud.Dlp.V2.ByteContentItem.Types.BytesType.Unspecified) {
        Type = other.Type;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Google.Cloud.Dlp.V2.ByteContentItem.Types.BytesType) input.ReadEnum();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Google.Cloud.Dlp.V2.ByteContentItem.Types.BytesType) input.ReadEnum();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ByteContentItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The type of data being sent for inspection.
      /// </summary>
      public enum BytesType {
        /// <summary>
        /// Unused
        /// </summary>
        [pbr::OriginalName("BYTES_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Any image type.
        /// </summary>
        [pbr::OriginalName("IMAGE")] Image = 6,
        /// <summary>
        /// jpeg
        /// </summary>
        [pbr::OriginalName("IMAGE_JPEG")] ImageJpeg = 1,
        /// <summary>
        /// bmp
        /// </summary>
        [pbr::OriginalName("IMAGE_BMP")] ImageBmp = 2,
        /// <summary>
        /// png
        /// </summary>
        [pbr::OriginalName("IMAGE_PNG")] ImagePng = 3,
        /// <summary>
        /// svg
        /// </summary>
        [pbr::OriginalName("IMAGE_SVG")] ImageSvg = 4,
        /// <summary>
        /// plain text
        /// </summary>
        [pbr::OriginalName("TEXT_UTF8")] TextUtf8 = 5,
        /// <summary>
        /// docx, docm, dotx, dotm
        /// </summary>
        [pbr::OriginalName("WORD_DOCUMENT")] WordDocument = 7,
        /// <summary>
        /// pdf
        /// </summary>
        [pbr::OriginalName("PDF")] Pdf = 8,
        /// <summary>
        /// avro
        /// </summary>
        [pbr::OriginalName("AVRO")] Avro = 11,
        /// <summary>
        /// csv
        /// </summary>
        [pbr::OriginalName("CSV")] Csv = 12,
        /// <summary>
        /// tsv
        /// </summary>
        [pbr::OriginalName("TSV")] Tsv = 13,
      }

    }
    #endregion

  }

  /// <summary>
  /// Container structure for the content to inspect.
  /// </summary>
  public sealed partial class ContentItem : pb::IMessage<ContentItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContentItem> _parser = new pb::MessageParser<ContentItem>(() => new ContentItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContentItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentItem(ContentItem other) : this() {
      switch (other.DataItemCase) {
        case DataItemOneofCase.Value:
          Value = other.Value;
          break;
        case DataItemOneofCase.Table:
          Table = other.Table.Clone();
          break;
        case DataItemOneofCase.ByteItem:
          ByteItem = other.ByteItem.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentItem Clone() {
      return new ContentItem(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    /// <summary>
    /// String data to inspect or redact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return dataItemCase_ == DataItemOneofCase.Value ? (string) dataItem_ : ""; }
      set {
        dataItem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataItemCase_ = DataItemOneofCase.Value;
      }
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 4;
    /// <summary>
    /// Structured content for inspection. See
    /// https://cloud.google.com/dlp/docs/inspecting-text#inspecting_a_table to
    /// learn more.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Table Table {
      get { return dataItemCase_ == DataItemOneofCase.Table ? (global::Google.Cloud.Dlp.V2.Table) dataItem_ : null; }
      set {
        dataItem_ = value;
        dataItemCase_ = value == null ? DataItemOneofCase.None : DataItemOneofCase.Table;
      }
    }

    /// <summary>Field number for the "byte_item" field.</summary>
    public const int ByteItemFieldNumber = 5;
    /// <summary>
    /// Content data to inspect or redact. Replaces `type` and `data`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ByteContentItem ByteItem {
      get { return dataItemCase_ == DataItemOneofCase.ByteItem ? (global::Google.Cloud.Dlp.V2.ByteContentItem) dataItem_ : null; }
      set {
        dataItem_ = value;
        dataItemCase_ = value == null ? DataItemOneofCase.None : DataItemOneofCase.ByteItem;
      }
    }

    private object dataItem_;
    /// <summary>Enum of possible cases for the "data_item" oneof.</summary>
    public enum DataItemOneofCase {
      None = 0,
      Value = 3,
      Table = 4,
      ByteItem = 5,
    }
    private DataItemOneofCase dataItemCase_ = DataItemOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataItemOneofCase DataItemCase {
      get { return dataItemCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDataItem() {
      dataItemCase_ = DataItemOneofCase.None;
      dataItem_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContentItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContentItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (!object.Equals(Table, other.Table)) return false;
      if (!object.Equals(ByteItem, other.ByteItem)) return false;
      if (DataItemCase != other.DataItemCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataItemCase_ == DataItemOneofCase.Value) hash ^= Value.GetHashCode();
      if (dataItemCase_ == DataItemOneofCase.Table) hash ^= Table.GetHashCode();
      if (dataItemCase_ == DataItemOneofCase.ByteItem) hash ^= ByteItem.GetHashCode();
      hash ^= (int) dataItemCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dataItemCase_ == DataItemOneofCase.Value) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (dataItemCase_ == DataItemOneofCase.Table) {
        output.WriteRawTag(34);
        output.WriteMessage(Table);
      }
      if (dataItemCase_ == DataItemOneofCase.ByteItem) {
        output.WriteRawTag(42);
        output.WriteMessage(ByteItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dataItemCase_ == DataItemOneofCase.Value) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (dataItemCase_ == DataItemOneofCase.Table) {
        output.WriteRawTag(34);
        output.WriteMessage(Table);
      }
      if (dataItemCase_ == DataItemOneofCase.ByteItem) {
        output.WriteRawTag(42);
        output.WriteMessage(ByteItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataItemCase_ == DataItemOneofCase.Value) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (dataItemCase_ == DataItemOneofCase.Table) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      if (dataItemCase_ == DataItemOneofCase.ByteItem) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ByteItem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContentItem other) {
      if (other == null) {
        return;
      }
      switch (other.DataItemCase) {
        case DataItemOneofCase.Value:
          Value = other.Value;
          break;
        case DataItemOneofCase.Table:
          if (Table == null) {
            Table = new global::Google.Cloud.Dlp.V2.Table();
          }
          Table.MergeFrom(other.Table);
          break;
        case DataItemOneofCase.ByteItem:
          if (ByteItem == null) {
            ByteItem = new global::Google.Cloud.Dlp.V2.ByteContentItem();
          }
          ByteItem.MergeFrom(other.ByteItem);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            Value = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.Table subBuilder = new global::Google.Cloud.Dlp.V2.Table();
            if (dataItemCase_ == DataItemOneofCase.Table) {
              subBuilder.MergeFrom(Table);
            }
            input.ReadMessage(subBuilder);
            Table = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.ByteContentItem subBuilder = new global::Google.Cloud.Dlp.V2.ByteContentItem();
            if (dataItemCase_ == DataItemOneofCase.ByteItem) {
              subBuilder.MergeFrom(ByteItem);
            }
            input.ReadMessage(subBuilder);
            ByteItem = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            Value = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.Table subBuilder = new global::Google.Cloud.Dlp.V2.Table();
            if (dataItemCase_ == DataItemOneofCase.Table) {
              subBuilder.MergeFrom(Table);
            }
            input.ReadMessage(subBuilder);
            Table = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.ByteContentItem subBuilder = new global::Google.Cloud.Dlp.V2.ByteContentItem();
            if (dataItemCase_ == DataItemOneofCase.ByteItem) {
              subBuilder.MergeFrom(ByteItem);
            }
            input.ReadMessage(subBuilder);
            ByteItem = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Structured content to inspect. Up to 50,000 `Value`s per request allowed.
  /// See https://cloud.google.com/dlp/docs/inspecting-text#inspecting_a_table to
  /// learn more.
  /// </summary>
  public sealed partial class Table : pb::IMessage<Table>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Table> _parser = new pb::MessageParser<Table>(() => new Table());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Table> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Table() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Table(Table other) : this() {
      headers_ = other.headers_.Clone();
      rows_ = other.rows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Table Clone() {
      return new Table(this);
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.FieldId> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.FieldId.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> headers_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId>();
    /// <summary>
    /// Headers of the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Table.Types.Row> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Dlp.V2.Table.Types.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Table.Types.Row> rows_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Table.Types.Row>();
    /// <summary>
    /// Rows of the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Table.Types.Row> Rows {
      get { return rows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Table);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Table other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!headers_.Equals(other.headers_)) return false;
      if(!rows_.Equals(other.rows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= headers_.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      headers_.WriteTo(output, _repeated_headers_codec);
      rows_.WriteTo(output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      headers_.WriteTo(ref output, _repeated_headers_codec);
      rows_.WriteTo(ref output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += headers_.CalculateSize(_repeated_headers_codec);
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Table other) {
      if (other == null) {
        return;
      }
      headers_.Add(other.headers_);
      rows_.Add(other.rows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            headers_.AddEntriesFrom(ref input, _repeated_headers_codec);
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(ref input, _repeated_rows_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Table message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Values of the row.
      /// </summary>
      public sealed partial class Row : pb::IMessage<Row>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Row> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.Table.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Row() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Row(Row other) : this() {
          values_ = other.values_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Row Clone() {
          return new Row(this);
        }

        /// <summary>Field number for the "values" field.</summary>
        public const int ValuesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Value> _repeated_values_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.Value.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value> values_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value>();
        /// <summary>
        /// Individual cells.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value> Values {
          get { return values_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Row other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!values_.Equals(other.values_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= values_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          values_.WriteTo(output, _repeated_values_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          values_.WriteTo(ref output, _repeated_values_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += values_.CalculateSize(_repeated_values_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Row other) {
          if (other == null) {
            return;
          }
          values_.Add(other.values_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                values_.AddEntriesFrom(input, _repeated_values_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                values_.AddEntriesFrom(ref input, _repeated_values_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// All the findings for a single scanned item.
  /// </summary>
  public sealed partial class InspectResult : pb::IMessage<InspectResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InspectResult> _parser = new pb::MessageParser<InspectResult>(() => new InspectResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InspectResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectResult(InspectResult other) : this() {
      findings_ = other.findings_.Clone();
      findingsTruncated_ = other.findingsTruncated_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectResult Clone() {
      return new InspectResult(this);
    }

    /// <summary>Field number for the "findings" field.</summary>
    public const int FindingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Finding> _repeated_findings_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.Finding.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Finding> findings_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Finding>();
    /// <summary>
    /// List of findings for an item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Finding> Findings {
      get { return findings_; }
    }

    /// <summary>Field number for the "findings_truncated" field.</summary>
    public const int FindingsTruncatedFieldNumber = 2;
    private bool findingsTruncated_;
    /// <summary>
    /// If true, then this item might have more findings than were returned,
    /// and the findings returned are an arbitrary subset of all findings.
    /// The findings list might be truncated because the input items were too
    /// large, or because the server reached the maximum amount of resources
    /// allowed for a single API call. For best results, divide the input into
    /// smaller batches.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FindingsTruncated {
      get { return findingsTruncated_; }
      set {
        findingsTruncated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InspectResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InspectResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!findings_.Equals(other.findings_)) return false;
      if (FindingsTruncated != other.FindingsTruncated) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= findings_.GetHashCode();
      if (FindingsTruncated != false) hash ^= FindingsTruncated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      findings_.WriteTo(output, _repeated_findings_codec);
      if (FindingsTruncated != false) {
        output.WriteRawTag(16);
        output.WriteBool(FindingsTruncated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      findings_.WriteTo(ref output, _repeated_findings_codec);
      if (FindingsTruncated != false) {
        output.WriteRawTag(16);
        output.WriteBool(FindingsTruncated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += findings_.CalculateSize(_repeated_findings_codec);
      if (FindingsTruncated != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InspectResult other) {
      if (other == null) {
        return;
      }
      findings_.Add(other.findings_);
      if (other.FindingsTruncated != false) {
        FindingsTruncated = other.FindingsTruncated;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            findings_.AddEntriesFrom(input, _repeated_findings_codec);
            break;
          }
          case 16: {
            FindingsTruncated = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            findings_.AddEntriesFrom(ref input, _repeated_findings_codec);
            break;
          }
          case 16: {
            FindingsTruncated = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a piece of potentially sensitive content.
  /// </summary>
  public sealed partial class Finding : pb::IMessage<Finding>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Finding> _parser = new pb::MessageParser<Finding>(() => new Finding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Finding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Finding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Finding(Finding other) : this() {
      name_ = other.name_;
      quote_ = other.quote_;
      infoType_ = other.infoType_ != null ? other.infoType_.Clone() : null;
      likelihood_ = other.likelihood_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      quoteInfo_ = other.quoteInfo_ != null ? other.quoteInfo_.Clone() : null;
      resourceName_ = other.resourceName_;
      triggerName_ = other.triggerName_;
      labels_ = other.labels_.Clone();
      jobCreateTime_ = other.jobCreateTime_ != null ? other.jobCreateTime_.Clone() : null;
      jobName_ = other.jobName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Finding Clone() {
      return new Finding(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 14;
    private string name_ = "";
    /// <summary>
    /// Resource name in format
    /// projects/{project}/locations/{location}/findings/{finding} Populated only
    /// when viewing persisted findings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quote" field.</summary>
    public const int QuoteFieldNumber = 1;
    private string quote_ = "";
    /// <summary>
    /// The content that was found. Even if the content is not textual, it
    /// may be converted to a textual representation here.
    /// Provided if `include_quote` is true and the finding is
    /// less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes
    /// in length, the quote may be omitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Quote {
      get { return quote_; }
      set {
        quote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "info_type" field.</summary>
    public const int InfoTypeFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.InfoType infoType_;
    /// <summary>
    /// The type of content that might have been found.
    /// Provided if `excluded_types` is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InfoType InfoType {
      get { return infoType_; }
      set {
        infoType_ = value;
      }
    }

    /// <summary>Field number for the "likelihood" field.</summary>
    public const int LikelihoodFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.Likelihood likelihood_ = global::Google.Cloud.Dlp.V2.Likelihood.Unspecified;
    /// <summary>
    /// Confidence of how likely it is that the `info_type` is correct.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Likelihood Likelihood {
      get { return likelihood_; }
      set {
        likelihood_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 4;
    private global::Google.Cloud.Dlp.V2.Location location_;
    /// <summary>
    /// Where the content was found.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Location Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Timestamp when finding was detected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "quote_info" field.</summary>
    public const int QuoteInfoFieldNumber = 7;
    private global::Google.Cloud.Dlp.V2.QuoteInfo quoteInfo_;
    /// <summary>
    /// Contains data parsed from quotes. Only populated if include_quote was set
    /// to true and a supported infoType was requested. Currently supported
    /// infoTypes: DATE, DATE_OF_BIRTH and TIME.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.QuoteInfo QuoteInfo {
      get { return quoteInfo_; }
      set {
        quoteInfo_ = value;
      }
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 8;
    private string resourceName_ = "";
    /// <summary>
    /// The job that stored the finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_name" field.</summary>
    public const int TriggerNameFieldNumber = 9;
    private string triggerName_ = "";
    /// <summary>
    /// Job trigger name, if applicable, for this finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TriggerName {
      get { return triggerName_; }
      set {
        triggerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 10;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 82);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The labels associated with this `Finding`.
    ///
    /// Label keys must be between 1 and 63 characters long and must conform
    /// to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.
    ///
    /// Label values must be between 0 and 63 characters long and must conform
    /// to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
    ///
    /// No more than 10 labels can be associated with a given finding.
    ///
    /// Examples:
    /// * `"environment" : "production"`
    /// * `"pipeline" : "etl"`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "job_create_time" field.</summary>
    public const int JobCreateTimeFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp jobCreateTime_;
    /// <summary>
    /// Time the job started that produced this finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp JobCreateTime {
      get { return jobCreateTime_; }
      set {
        jobCreateTime_ = value;
      }
    }

    /// <summary>Field number for the "job_name" field.</summary>
    public const int JobNameFieldNumber = 13;
    private string jobName_ = "";
    /// <summary>
    /// The job that stored the finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobName {
      get { return jobName_; }
      set {
        jobName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Finding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Finding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Quote != other.Quote) return false;
      if (!object.Equals(InfoType, other.InfoType)) return false;
      if (Likelihood != other.Likelihood) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(QuoteInfo, other.QuoteInfo)) return false;
      if (ResourceName != other.ResourceName) return false;
      if (TriggerName != other.TriggerName) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(JobCreateTime, other.JobCreateTime)) return false;
      if (JobName != other.JobName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Quote.Length != 0) hash ^= Quote.GetHashCode();
      if (infoType_ != null) hash ^= InfoType.GetHashCode();
      if (Likelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) hash ^= Likelihood.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (quoteInfo_ != null) hash ^= QuoteInfo.GetHashCode();
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (TriggerName.Length != 0) hash ^= TriggerName.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (jobCreateTime_ != null) hash ^= JobCreateTime.GetHashCode();
      if (JobName.Length != 0) hash ^= JobName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Quote.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Quote);
      }
      if (infoType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InfoType);
      }
      if (Likelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Likelihood);
      }
      if (location_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Location);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (quoteInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(QuoteInfo);
      }
      if (ResourceName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ResourceName);
      }
      if (TriggerName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TriggerName);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (jobCreateTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(JobCreateTime);
      }
      if (JobName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(JobName);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Quote.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Quote);
      }
      if (infoType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InfoType);
      }
      if (Likelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Likelihood);
      }
      if (location_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Location);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (quoteInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(QuoteInfo);
      }
      if (ResourceName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ResourceName);
      }
      if (TriggerName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TriggerName);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (jobCreateTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(JobCreateTime);
      }
      if (JobName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(JobName);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Quote.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Quote);
      }
      if (infoType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoType);
      }
      if (Likelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Likelihood);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (quoteInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QuoteInfo);
      }
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (TriggerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerName);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (jobCreateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobCreateTime);
      }
      if (JobName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Finding other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Quote.Length != 0) {
        Quote = other.Quote;
      }
      if (other.infoType_ != null) {
        if (infoType_ == null) {
          InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
        }
        InfoType.MergeFrom(other.InfoType);
      }
      if (other.Likelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) {
        Likelihood = other.Likelihood;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Google.Cloud.Dlp.V2.Location();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.quoteInfo_ != null) {
        if (quoteInfo_ == null) {
          QuoteInfo = new global::Google.Cloud.Dlp.V2.QuoteInfo();
        }
        QuoteInfo.MergeFrom(other.QuoteInfo);
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.TriggerName.Length != 0) {
        TriggerName = other.TriggerName;
      }
      labels_.Add(other.labels_);
      if (other.jobCreateTime_ != null) {
        if (jobCreateTime_ == null) {
          JobCreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        JobCreateTime.MergeFrom(other.JobCreateTime);
      }
      if (other.JobName.Length != 0) {
        JobName = other.JobName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Quote = input.ReadString();
            break;
          }
          case 18: {
            if (infoType_ == null) {
              InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
            }
            input.ReadMessage(InfoType);
            break;
          }
          case 24: {
            Likelihood = (global::Google.Cloud.Dlp.V2.Likelihood) input.ReadEnum();
            break;
          }
          case 34: {
            if (location_ == null) {
              Location = new global::Google.Cloud.Dlp.V2.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (quoteInfo_ == null) {
              QuoteInfo = new global::Google.Cloud.Dlp.V2.QuoteInfo();
            }
            input.ReadMessage(QuoteInfo);
            break;
          }
          case 66: {
            ResourceName = input.ReadString();
            break;
          }
          case 74: {
            TriggerName = input.ReadString();
            break;
          }
          case 82: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 90: {
            if (jobCreateTime_ == null) {
              JobCreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(JobCreateTime);
            break;
          }
          case 106: {
            JobName = input.ReadString();
            break;
          }
          case 114: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Quote = input.ReadString();
            break;
          }
          case 18: {
            if (infoType_ == null) {
              InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
            }
            input.ReadMessage(InfoType);
            break;
          }
          case 24: {
            Likelihood = (global::Google.Cloud.Dlp.V2.Likelihood) input.ReadEnum();
            break;
          }
          case 34: {
            if (location_ == null) {
              Location = new global::Google.Cloud.Dlp.V2.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (quoteInfo_ == null) {
              QuoteInfo = new global::Google.Cloud.Dlp.V2.QuoteInfo();
            }
            input.ReadMessage(QuoteInfo);
            break;
          }
          case 66: {
            ResourceName = input.ReadString();
            break;
          }
          case 74: {
            TriggerName = input.ReadString();
            break;
          }
          case 82: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 90: {
            if (jobCreateTime_ == null) {
              JobCreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(JobCreateTime);
            break;
          }
          case 106: {
            JobName = input.ReadString();
            break;
          }
          case 114: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specifies the location of the finding.
  /// </summary>
  public sealed partial class Location : pb::IMessage<Location>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location(Location other) : this() {
      byteRange_ = other.byteRange_ != null ? other.byteRange_.Clone() : null;
      codepointRange_ = other.codepointRange_ != null ? other.codepointRange_.Clone() : null;
      contentLocations_ = other.contentLocations_.Clone();
      container_ = other.container_ != null ? other.container_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "byte_range" field.</summary>
    public const int ByteRangeFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.Range byteRange_;
    /// <summary>
    /// Zero-based byte offsets delimiting the finding.
    /// These are relative to the finding's containing element.
    /// Note that when the content is not textual, this references
    /// the UTF-8 encoded textual representation of the content.
    /// Omitted if content is an image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Range ByteRange {
      get { return byteRange_; }
      set {
        byteRange_ = value;
      }
    }

    /// <summary>Field number for the "codepoint_range" field.</summary>
    public const int CodepointRangeFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.Range codepointRange_;
    /// <summary>
    /// Unicode character offsets delimiting the finding.
    /// These are relative to the finding's containing element.
    /// Provided when the content is text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Range CodepointRange {
      get { return codepointRange_; }
      set {
        codepointRange_ = value;
      }
    }

    /// <summary>Field number for the "content_locations" field.</summary>
    public const int ContentLocationsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.ContentLocation> _repeated_contentLocations_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Cloud.Dlp.V2.ContentLocation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.ContentLocation> contentLocations_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.ContentLocation>();
    /// <summary>
    /// List of nested objects pointing to the precise location of the finding
    /// within the file or record.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.ContentLocation> ContentLocations {
      get { return contentLocations_; }
    }

    /// <summary>Field number for the "container" field.</summary>
    public const int ContainerFieldNumber = 8;
    private global::Google.Cloud.Dlp.V2.Container container_;
    /// <summary>
    /// Information about the container where this finding occurred, if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Container Container {
      get { return container_; }
      set {
        container_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ByteRange, other.ByteRange)) return false;
      if (!object.Equals(CodepointRange, other.CodepointRange)) return false;
      if(!contentLocations_.Equals(other.contentLocations_)) return false;
      if (!object.Equals(Container, other.Container)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (byteRange_ != null) hash ^= ByteRange.GetHashCode();
      if (codepointRange_ != null) hash ^= CodepointRange.GetHashCode();
      hash ^= contentLocations_.GetHashCode();
      if (container_ != null) hash ^= Container.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (byteRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ByteRange);
      }
      if (codepointRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CodepointRange);
      }
      contentLocations_.WriteTo(output, _repeated_contentLocations_codec);
      if (container_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Container);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (byteRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ByteRange);
      }
      if (codepointRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CodepointRange);
      }
      contentLocations_.WriteTo(ref output, _repeated_contentLocations_codec);
      if (container_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Container);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (byteRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ByteRange);
      }
      if (codepointRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CodepointRange);
      }
      size += contentLocations_.CalculateSize(_repeated_contentLocations_codec);
      if (container_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Container);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.byteRange_ != null) {
        if (byteRange_ == null) {
          ByteRange = new global::Google.Cloud.Dlp.V2.Range();
        }
        ByteRange.MergeFrom(other.ByteRange);
      }
      if (other.codepointRange_ != null) {
        if (codepointRange_ == null) {
          CodepointRange = new global::Google.Cloud.Dlp.V2.Range();
        }
        CodepointRange.MergeFrom(other.CodepointRange);
      }
      contentLocations_.Add(other.contentLocations_);
      if (other.container_ != null) {
        if (container_ == null) {
          Container = new global::Google.Cloud.Dlp.V2.Container();
        }
        Container.MergeFrom(other.Container);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (byteRange_ == null) {
              ByteRange = new global::Google.Cloud.Dlp.V2.Range();
            }
            input.ReadMessage(ByteRange);
            break;
          }
          case 18: {
            if (codepointRange_ == null) {
              CodepointRange = new global::Google.Cloud.Dlp.V2.Range();
            }
            input.ReadMessage(CodepointRange);
            break;
          }
          case 58: {
            contentLocations_.AddEntriesFrom(input, _repeated_contentLocations_codec);
            break;
          }
          case 66: {
            if (container_ == null) {
              Container = new global::Google.Cloud.Dlp.V2.Container();
            }
            input.ReadMessage(Container);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (byteRange_ == null) {
              ByteRange = new global::Google.Cloud.Dlp.V2.Range();
            }
            input.ReadMessage(ByteRange);
            break;
          }
          case 18: {
            if (codepointRange_ == null) {
              CodepointRange = new global::Google.Cloud.Dlp.V2.Range();
            }
            input.ReadMessage(CodepointRange);
            break;
          }
          case 58: {
            contentLocations_.AddEntriesFrom(ref input, _repeated_contentLocations_codec);
            break;
          }
          case 66: {
            if (container_ == null) {
              Container = new global::Google.Cloud.Dlp.V2.Container();
            }
            input.ReadMessage(Container);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Precise location of the finding within a document, record, image, or metadata
  /// container.
  /// </summary>
  public sealed partial class ContentLocation : pb::IMessage<ContentLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContentLocation> _parser = new pb::MessageParser<ContentLocation>(() => new ContentLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContentLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentLocation(ContentLocation other) : this() {
      containerName_ = other.containerName_;
      containerTimestamp_ = other.containerTimestamp_ != null ? other.containerTimestamp_.Clone() : null;
      containerVersion_ = other.containerVersion_;
      switch (other.LocationCase) {
        case LocationOneofCase.RecordLocation:
          RecordLocation = other.RecordLocation.Clone();
          break;
        case LocationOneofCase.ImageLocation:
          ImageLocation = other.ImageLocation.Clone();
          break;
        case LocationOneofCase.DocumentLocation:
          DocumentLocation = other.DocumentLocation.Clone();
          break;
        case LocationOneofCase.MetadataLocation:
          MetadataLocation = other.MetadataLocation.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentLocation Clone() {
      return new ContentLocation(this);
    }

    /// <summary>Field number for the "container_name" field.</summary>
    public const int ContainerNameFieldNumber = 1;
    private string containerName_ = "";
    /// <summary>
    /// Name of the container where the finding is located.
    /// The top level name is the source file name or table name. Names of some
    /// common storage containers are formatted as follows:
    ///
    /// * BigQuery tables:  `{project_id}:{dataset_id}.{table_id}`
    /// * Cloud Storage files: `gs://{bucket}/{path}`
    /// * Datastore namespace: {namespace}
    ///
    /// Nested names could be absent if the embedded object has no string
    /// identifier (for an example an image contained within a document).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContainerName {
      get { return containerName_; }
      set {
        containerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "record_location" field.</summary>
    public const int RecordLocationFieldNumber = 2;
    /// <summary>
    /// Location within a row or record of a database table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.RecordLocation RecordLocation {
      get { return locationCase_ == LocationOneofCase.RecordLocation ? (global::Google.Cloud.Dlp.V2.RecordLocation) location_ : null; }
      set {
        location_ = value;
        locationCase_ = value == null ? LocationOneofCase.None : LocationOneofCase.RecordLocation;
      }
    }

    /// <summary>Field number for the "image_location" field.</summary>
    public const int ImageLocationFieldNumber = 3;
    /// <summary>
    /// Location within an image's pixels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ImageLocation ImageLocation {
      get { return locationCase_ == LocationOneofCase.ImageLocation ? (global::Google.Cloud.Dlp.V2.ImageLocation) location_ : null; }
      set {
        location_ = value;
        locationCase_ = value == null ? LocationOneofCase.None : LocationOneofCase.ImageLocation;
      }
    }

    /// <summary>Field number for the "document_location" field.</summary>
    public const int DocumentLocationFieldNumber = 5;
    /// <summary>
    /// Location data for document files.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DocumentLocation DocumentLocation {
      get { return locationCase_ == LocationOneofCase.DocumentLocation ? (global::Google.Cloud.Dlp.V2.DocumentLocation) location_ : null; }
      set {
        location_ = value;
        locationCase_ = value == null ? LocationOneofCase.None : LocationOneofCase.DocumentLocation;
      }
    }

    /// <summary>Field number for the "metadata_location" field.</summary>
    public const int MetadataLocationFieldNumber = 8;
    /// <summary>
    /// Location within the metadata for inspected content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.MetadataLocation MetadataLocation {
      get { return locationCase_ == LocationOneofCase.MetadataLocation ? (global::Google.Cloud.Dlp.V2.MetadataLocation) location_ : null; }
      set {
        location_ = value;
        locationCase_ = value == null ? LocationOneofCase.None : LocationOneofCase.MetadataLocation;
      }
    }

    /// <summary>Field number for the "container_timestamp" field.</summary>
    public const int ContainerTimestampFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp containerTimestamp_;
    /// <summary>
    /// Findings container modification timestamp, if applicable.
    /// For Google Cloud Storage contains last file modification timestamp.
    /// For BigQuery table contains last_modified_time property.
    /// For Datastore - not populated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ContainerTimestamp {
      get { return containerTimestamp_; }
      set {
        containerTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "container_version" field.</summary>
    public const int ContainerVersionFieldNumber = 7;
    private string containerVersion_ = "";
    /// <summary>
    /// Findings container version, if available
    /// ("generation" for Google Cloud Storage).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContainerVersion {
      get { return containerVersion_; }
      set {
        containerVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object location_;
    /// <summary>Enum of possible cases for the "location" oneof.</summary>
    public enum LocationOneofCase {
      None = 0,
      RecordLocation = 2,
      ImageLocation = 3,
      DocumentLocation = 5,
      MetadataLocation = 8,
    }
    private LocationOneofCase locationCase_ = LocationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationOneofCase LocationCase {
      get { return locationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocation() {
      locationCase_ = LocationOneofCase.None;
      location_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContentLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContentLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContainerName != other.ContainerName) return false;
      if (!object.Equals(RecordLocation, other.RecordLocation)) return false;
      if (!object.Equals(ImageLocation, other.ImageLocation)) return false;
      if (!object.Equals(DocumentLocation, other.DocumentLocation)) return false;
      if (!object.Equals(MetadataLocation, other.MetadataLocation)) return false;
      if (!object.Equals(ContainerTimestamp, other.ContainerTimestamp)) return false;
      if (ContainerVersion != other.ContainerVersion) return false;
      if (LocationCase != other.LocationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContainerName.Length != 0) hash ^= ContainerName.GetHashCode();
      if (locationCase_ == LocationOneofCase.RecordLocation) hash ^= RecordLocation.GetHashCode();
      if (locationCase_ == LocationOneofCase.ImageLocation) hash ^= ImageLocation.GetHashCode();
      if (locationCase_ == LocationOneofCase.DocumentLocation) hash ^= DocumentLocation.GetHashCode();
      if (locationCase_ == LocationOneofCase.MetadataLocation) hash ^= MetadataLocation.GetHashCode();
      if (containerTimestamp_ != null) hash ^= ContainerTimestamp.GetHashCode();
      if (ContainerVersion.Length != 0) hash ^= ContainerVersion.GetHashCode();
      hash ^= (int) locationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ContainerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContainerName);
      }
      if (locationCase_ == LocationOneofCase.RecordLocation) {
        output.WriteRawTag(18);
        output.WriteMessage(RecordLocation);
      }
      if (locationCase_ == LocationOneofCase.ImageLocation) {
        output.WriteRawTag(26);
        output.WriteMessage(ImageLocation);
      }
      if (locationCase_ == LocationOneofCase.DocumentLocation) {
        output.WriteRawTag(42);
        output.WriteMessage(DocumentLocation);
      }
      if (containerTimestamp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ContainerTimestamp);
      }
      if (ContainerVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContainerVersion);
      }
      if (locationCase_ == LocationOneofCase.MetadataLocation) {
        output.WriteRawTag(66);
        output.WriteMessage(MetadataLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ContainerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContainerName);
      }
      if (locationCase_ == LocationOneofCase.RecordLocation) {
        output.WriteRawTag(18);
        output.WriteMessage(RecordLocation);
      }
      if (locationCase_ == LocationOneofCase.ImageLocation) {
        output.WriteRawTag(26);
        output.WriteMessage(ImageLocation);
      }
      if (locationCase_ == LocationOneofCase.DocumentLocation) {
        output.WriteRawTag(42);
        output.WriteMessage(DocumentLocation);
      }
      if (containerTimestamp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ContainerTimestamp);
      }
      if (ContainerVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContainerVersion);
      }
      if (locationCase_ == LocationOneofCase.MetadataLocation) {
        output.WriteRawTag(66);
        output.WriteMessage(MetadataLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContainerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContainerName);
      }
      if (locationCase_ == LocationOneofCase.RecordLocation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecordLocation);
      }
      if (locationCase_ == LocationOneofCase.ImageLocation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageLocation);
      }
      if (locationCase_ == LocationOneofCase.DocumentLocation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocumentLocation);
      }
      if (locationCase_ == LocationOneofCase.MetadataLocation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetadataLocation);
      }
      if (containerTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContainerTimestamp);
      }
      if (ContainerVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContainerVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContentLocation other) {
      if (other == null) {
        return;
      }
      if (other.ContainerName.Length != 0) {
        ContainerName = other.ContainerName;
      }
      if (other.containerTimestamp_ != null) {
        if (containerTimestamp_ == null) {
          ContainerTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ContainerTimestamp.MergeFrom(other.ContainerTimestamp);
      }
      if (other.ContainerVersion.Length != 0) {
        ContainerVersion = other.ContainerVersion;
      }
      switch (other.LocationCase) {
        case LocationOneofCase.RecordLocation:
          if (RecordLocation == null) {
            RecordLocation = new global::Google.Cloud.Dlp.V2.RecordLocation();
          }
          RecordLocation.MergeFrom(other.RecordLocation);
          break;
        case LocationOneofCase.ImageLocation:
          if (ImageLocation == null) {
            ImageLocation = new global::Google.Cloud.Dlp.V2.ImageLocation();
          }
          ImageLocation.MergeFrom(other.ImageLocation);
          break;
        case LocationOneofCase.DocumentLocation:
          if (DocumentLocation == null) {
            DocumentLocation = new global::Google.Cloud.Dlp.V2.DocumentLocation();
          }
          DocumentLocation.MergeFrom(other.DocumentLocation);
          break;
        case LocationOneofCase.MetadataLocation:
          if (MetadataLocation == null) {
            MetadataLocation = new global::Google.Cloud.Dlp.V2.MetadataLocation();
          }
          MetadataLocation.MergeFrom(other.MetadataLocation);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContainerName = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.RecordLocation subBuilder = new global::Google.Cloud.Dlp.V2.RecordLocation();
            if (locationCase_ == LocationOneofCase.RecordLocation) {
              subBuilder.MergeFrom(RecordLocation);
            }
            input.ReadMessage(subBuilder);
            RecordLocation = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.ImageLocation subBuilder = new global::Google.Cloud.Dlp.V2.ImageLocation();
            if (locationCase_ == LocationOneofCase.ImageLocation) {
              subBuilder.MergeFrom(ImageLocation);
            }
            input.ReadMessage(subBuilder);
            ImageLocation = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.DocumentLocation subBuilder = new global::Google.Cloud.Dlp.V2.DocumentLocation();
            if (locationCase_ == LocationOneofCase.DocumentLocation) {
              subBuilder.MergeFrom(DocumentLocation);
            }
            input.ReadMessage(subBuilder);
            DocumentLocation = subBuilder;
            break;
          }
          case 50: {
            if (containerTimestamp_ == null) {
              ContainerTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ContainerTimestamp);
            break;
          }
          case 58: {
            ContainerVersion = input.ReadString();
            break;
          }
          case 66: {
            global::Google.Cloud.Dlp.V2.MetadataLocation subBuilder = new global::Google.Cloud.Dlp.V2.MetadataLocation();
            if (locationCase_ == LocationOneofCase.MetadataLocation) {
              subBuilder.MergeFrom(MetadataLocation);
            }
            input.ReadMessage(subBuilder);
            MetadataLocation = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ContainerName = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.RecordLocation subBuilder = new global::Google.Cloud.Dlp.V2.RecordLocation();
            if (locationCase_ == LocationOneofCase.RecordLocation) {
              subBuilder.MergeFrom(RecordLocation);
            }
            input.ReadMessage(subBuilder);
            RecordLocation = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.ImageLocation subBuilder = new global::Google.Cloud.Dlp.V2.ImageLocation();
            if (locationCase_ == LocationOneofCase.ImageLocation) {
              subBuilder.MergeFrom(ImageLocation);
            }
            input.ReadMessage(subBuilder);
            ImageLocation = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.DocumentLocation subBuilder = new global::Google.Cloud.Dlp.V2.DocumentLocation();
            if (locationCase_ == LocationOneofCase.DocumentLocation) {
              subBuilder.MergeFrom(DocumentLocation);
            }
            input.ReadMessage(subBuilder);
            DocumentLocation = subBuilder;
            break;
          }
          case 50: {
            if (containerTimestamp_ == null) {
              ContainerTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ContainerTimestamp);
            break;
          }
          case 58: {
            ContainerVersion = input.ReadString();
            break;
          }
          case 66: {
            global::Google.Cloud.Dlp.V2.MetadataLocation subBuilder = new global::Google.Cloud.Dlp.V2.MetadataLocation();
            if (locationCase_ == LocationOneofCase.MetadataLocation) {
              subBuilder.MergeFrom(MetadataLocation);
            }
            input.ReadMessage(subBuilder);
            MetadataLocation = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metadata Location
  /// </summary>
  public sealed partial class MetadataLocation : pb::IMessage<MetadataLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetadataLocation> _parser = new pb::MessageParser<MetadataLocation>(() => new MetadataLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetadataLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataLocation(MetadataLocation other) : this() {
      type_ = other.type_;
      switch (other.LabelCase) {
        case LabelOneofCase.StorageLabel:
          StorageLabel = other.StorageLabel.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetadataLocation Clone() {
      return new MetadataLocation(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.MetadataType type_ = global::Google.Cloud.Dlp.V2.MetadataType.Unspecified;
    /// <summary>
    /// Type of metadata containing the finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.MetadataType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "storage_label" field.</summary>
    public const int StorageLabelFieldNumber = 3;
    /// <summary>
    /// Storage metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.StorageMetadataLabel StorageLabel {
      get { return labelCase_ == LabelOneofCase.StorageLabel ? (global::Google.Cloud.Dlp.V2.StorageMetadataLabel) label_ : null; }
      set {
        label_ = value;
        labelCase_ = value == null ? LabelOneofCase.None : LabelOneofCase.StorageLabel;
      }
    }

    private object label_;
    /// <summary>Enum of possible cases for the "label" oneof.</summary>
    public enum LabelOneofCase {
      None = 0,
      StorageLabel = 3,
    }
    private LabelOneofCase labelCase_ = LabelOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelOneofCase LabelCase {
      get { return labelCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabel() {
      labelCase_ = LabelOneofCase.None;
      label_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetadataLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetadataLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(StorageLabel, other.StorageLabel)) return false;
      if (LabelCase != other.LabelCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Google.Cloud.Dlp.V2.MetadataType.Unspecified) hash ^= Type.GetHashCode();
      if (labelCase_ == LabelOneofCase.StorageLabel) hash ^= StorageLabel.GetHashCode();
      hash ^= (int) labelCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Google.Cloud.Dlp.V2.MetadataType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (labelCase_ == LabelOneofCase.StorageLabel) {
        output.WriteRawTag(26);
        output.WriteMessage(StorageLabel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Google.Cloud.Dlp.V2.MetadataType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (labelCase_ == LabelOneofCase.StorageLabel) {
        output.WriteRawTag(26);
        output.WriteMessage(StorageLabel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Google.Cloud.Dlp.V2.MetadataType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (labelCase_ == LabelOneofCase.StorageLabel) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StorageLabel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetadataLocation other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Google.Cloud.Dlp.V2.MetadataType.Unspecified) {
        Type = other.Type;
      }
      switch (other.LabelCase) {
        case LabelOneofCase.StorageLabel:
          if (StorageLabel == null) {
            StorageLabel = new global::Google.Cloud.Dlp.V2.StorageMetadataLabel();
          }
          StorageLabel.MergeFrom(other.StorageLabel);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Google.Cloud.Dlp.V2.MetadataType) input.ReadEnum();
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.StorageMetadataLabel subBuilder = new global::Google.Cloud.Dlp.V2.StorageMetadataLabel();
            if (labelCase_ == LabelOneofCase.StorageLabel) {
              subBuilder.MergeFrom(StorageLabel);
            }
            input.ReadMessage(subBuilder);
            StorageLabel = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Google.Cloud.Dlp.V2.MetadataType) input.ReadEnum();
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.StorageMetadataLabel subBuilder = new global::Google.Cloud.Dlp.V2.StorageMetadataLabel();
            if (labelCase_ == LabelOneofCase.StorageLabel) {
              subBuilder.MergeFrom(StorageLabel);
            }
            input.ReadMessage(subBuilder);
            StorageLabel = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Storage metadata label to indicate which metadata entry contains findings.
  /// </summary>
  public sealed partial class StorageMetadataLabel : pb::IMessage<StorageMetadataLabel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StorageMetadataLabel> _parser = new pb::MessageParser<StorageMetadataLabel>(() => new StorageMetadataLabel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageMetadataLabel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageMetadataLabel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageMetadataLabel(StorageMetadataLabel other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageMetadataLabel Clone() {
      return new StorageMetadataLabel(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageMetadataLabel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageMetadataLabel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageMetadataLabel other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Location of a finding within a document.
  /// </summary>
  public sealed partial class DocumentLocation : pb::IMessage<DocumentLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DocumentLocation> _parser = new pb::MessageParser<DocumentLocation>(() => new DocumentLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentLocation(DocumentLocation other) : this() {
      fileOffset_ = other.fileOffset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentLocation Clone() {
      return new DocumentLocation(this);
    }

    /// <summary>Field number for the "file_offset" field.</summary>
    public const int FileOffsetFieldNumber = 1;
    private long fileOffset_;
    /// <summary>
    /// Offset of the line, from the beginning of the file, where the finding
    /// is located.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FileOffset {
      get { return fileOffset_; }
      set {
        fileOffset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileOffset != other.FileOffset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileOffset != 0L) hash ^= FileOffset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FileOffset != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FileOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FileOffset != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FileOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileOffset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FileOffset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentLocation other) {
      if (other == null) {
        return;
      }
      if (other.FileOffset != 0L) {
        FileOffset = other.FileOffset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FileOffset = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FileOffset = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Location of a finding within a row or record.
  /// </summary>
  public sealed partial class RecordLocation : pb::IMessage<RecordLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecordLocation> _parser = new pb::MessageParser<RecordLocation>(() => new RecordLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecordLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordLocation(RecordLocation other) : this() {
      recordKey_ = other.recordKey_ != null ? other.recordKey_.Clone() : null;
      fieldId_ = other.fieldId_ != null ? other.fieldId_.Clone() : null;
      tableLocation_ = other.tableLocation_ != null ? other.tableLocation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordLocation Clone() {
      return new RecordLocation(this);
    }

    /// <summary>Field number for the "record_key" field.</summary>
    public const int RecordKeyFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.RecordKey recordKey_;
    /// <summary>
    /// Key of the finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.RecordKey RecordKey {
      get { return recordKey_; }
      set {
        recordKey_ = value;
      }
    }

    /// <summary>Field number for the "field_id" field.</summary>
    public const int FieldIdFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.FieldId fieldId_;
    /// <summary>
    /// Field id of the field containing the finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.FieldId FieldId {
      get { return fieldId_; }
      set {
        fieldId_ = value;
      }
    }

    /// <summary>Field number for the "table_location" field.</summary>
    public const int TableLocationFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.TableLocation tableLocation_;
    /// <summary>
    /// Location within a `ContentItem.Table`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.TableLocation TableLocation {
      get { return tableLocation_; }
      set {
        tableLocation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecordLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecordLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RecordKey, other.RecordKey)) return false;
      if (!object.Equals(FieldId, other.FieldId)) return false;
      if (!object.Equals(TableLocation, other.TableLocation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (recordKey_ != null) hash ^= RecordKey.GetHashCode();
      if (fieldId_ != null) hash ^= FieldId.GetHashCode();
      if (tableLocation_ != null) hash ^= TableLocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (recordKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RecordKey);
      }
      if (fieldId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FieldId);
      }
      if (tableLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TableLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (recordKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RecordKey);
      }
      if (fieldId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FieldId);
      }
      if (tableLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TableLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (recordKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecordKey);
      }
      if (fieldId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FieldId);
      }
      if (tableLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableLocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecordLocation other) {
      if (other == null) {
        return;
      }
      if (other.recordKey_ != null) {
        if (recordKey_ == null) {
          RecordKey = new global::Google.Cloud.Dlp.V2.RecordKey();
        }
        RecordKey.MergeFrom(other.RecordKey);
      }
      if (other.fieldId_ != null) {
        if (fieldId_ == null) {
          FieldId = new global::Google.Cloud.Dlp.V2.FieldId();
        }
        FieldId.MergeFrom(other.FieldId);
      }
      if (other.tableLocation_ != null) {
        if (tableLocation_ == null) {
          TableLocation = new global::Google.Cloud.Dlp.V2.TableLocation();
        }
        TableLocation.MergeFrom(other.TableLocation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (recordKey_ == null) {
              RecordKey = new global::Google.Cloud.Dlp.V2.RecordKey();
            }
            input.ReadMessage(RecordKey);
            break;
          }
          case 18: {
            if (fieldId_ == null) {
              FieldId = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(FieldId);
            break;
          }
          case 26: {
            if (tableLocation_ == null) {
              TableLocation = new global::Google.Cloud.Dlp.V2.TableLocation();
            }
            input.ReadMessage(TableLocation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (recordKey_ == null) {
              RecordKey = new global::Google.Cloud.Dlp.V2.RecordKey();
            }
            input.ReadMessage(RecordKey);
            break;
          }
          case 18: {
            if (fieldId_ == null) {
              FieldId = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(FieldId);
            break;
          }
          case 26: {
            if (tableLocation_ == null) {
              TableLocation = new global::Google.Cloud.Dlp.V2.TableLocation();
            }
            input.ReadMessage(TableLocation);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Location of a finding within a table.
  /// </summary>
  public sealed partial class TableLocation : pb::IMessage<TableLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TableLocation> _parser = new pb::MessageParser<TableLocation>(() => new TableLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableLocation(TableLocation other) : this() {
      rowIndex_ = other.rowIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableLocation Clone() {
      return new TableLocation(this);
    }

    /// <summary>Field number for the "row_index" field.</summary>
    public const int RowIndexFieldNumber = 1;
    private long rowIndex_;
    /// <summary>
    /// The zero-based index of the row where the finding is located. Only
    /// populated for resources that have a natural ordering, not BigQuery. In
    /// BigQuery, to identify the row a finding came from, populate
    /// BigQueryOptions.identifying_fields with your primary key column names and
    /// when you store the findings the value of those columns will be stored
    /// inside of Finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RowIndex {
      get { return rowIndex_; }
      set {
        rowIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowIndex != other.RowIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowIndex != 0L) hash ^= RowIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RowIndex != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RowIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RowIndex != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RowIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableLocation other) {
      if (other == null) {
        return;
      }
      if (other.RowIndex != 0L) {
        RowIndex = other.RowIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowIndex = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RowIndex = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a container that may contain DLP findings.
  /// Examples of a container include a file, table, or database record.
  /// </summary>
  public sealed partial class Container : pb::IMessage<Container>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Container> _parser = new pb::MessageParser<Container>(() => new Container());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Container> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Container() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Container(Container other) : this() {
      type_ = other.type_;
      projectId_ = other.projectId_;
      fullPath_ = other.fullPath_;
      rootPath_ = other.rootPath_;
      relativePath_ = other.relativePath_;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Container Clone() {
      return new Container(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    /// <summary>
    /// Container type, for example BigQuery or Google Cloud Storage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 2;
    private string projectId_ = "";
    /// <summary>
    /// Project where the finding was found.
    /// Can be different from the project that owns the finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "full_path" field.</summary>
    public const int FullPathFieldNumber = 3;
    private string fullPath_ = "";
    /// <summary>
    /// A string representation of the full container name.
    /// Examples:
    /// - BigQuery: 'Project:DataSetId.TableId'
    /// - Google Cloud Storage: 'gs://Bucket/folders/filename.txt'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullPath {
      get { return fullPath_; }
      set {
        fullPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "root_path" field.</summary>
    public const int RootPathFieldNumber = 4;
    private string rootPath_ = "";
    /// <summary>
    /// The root of the container.
    /// Examples:
    /// - For BigQuery table `project_id:dataset_id.table_id`, the root is
    ///  `dataset_id`
    /// - For Google Cloud Storage file `gs://bucket/folder/filename.txt`, the root
    ///  is `gs://bucket`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RootPath {
      get { return rootPath_; }
      set {
        rootPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relative_path" field.</summary>
    public const int RelativePathFieldNumber = 5;
    private string relativePath_ = "";
    /// <summary>
    /// The rest of the path after the root.
    /// Examples:
    /// - For BigQuery table `project_id:dataset_id.table_id`, the relative path is
    ///  `table_id`
    /// - Google Cloud Storage file `gs://bucket/folder/filename.txt`, the relative
    ///  path is `folder/filename.txt`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RelativePath {
      get { return relativePath_; }
      set {
        relativePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Findings container modification timestamp, if applicable.
    /// For Google Cloud Storage contains last file modification timestamp.
    /// For BigQuery table contains last_modified_time property.
    /// For Datastore - not populated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 7;
    private string version_ = "";
    /// <summary>
    /// Findings container version, if available
    /// ("generation" for Google Cloud Storage).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Container);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Container other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (ProjectId != other.ProjectId) return false;
      if (FullPath != other.FullPath) return false;
      if (RootPath != other.RootPath) return false;
      if (RelativePath != other.RelativePath) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (FullPath.Length != 0) hash ^= FullPath.GetHashCode();
      if (RootPath.Length != 0) hash ^= RootPath.GetHashCode();
      if (RelativePath.Length != 0) hash ^= RelativePath.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      if (FullPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FullPath);
      }
      if (RootPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RootPath);
      }
      if (RelativePath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RelativePath);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateTime);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      if (FullPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FullPath);
      }
      if (RootPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RootPath);
      }
      if (RelativePath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RelativePath);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateTime);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (FullPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullPath);
      }
      if (RootPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RootPath);
      }
      if (RelativePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelativePath);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Container other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.FullPath.Length != 0) {
        FullPath = other.FullPath;
      }
      if (other.RootPath.Length != 0) {
        RootPath = other.RootPath;
      }
      if (other.RelativePath.Length != 0) {
        RelativePath = other.RelativePath;
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 26: {
            FullPath = input.ReadString();
            break;
          }
          case 34: {
            RootPath = input.ReadString();
            break;
          }
          case 42: {
            RelativePath = input.ReadString();
            break;
          }
          case 50: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 58: {
            Version = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 26: {
            FullPath = input.ReadString();
            break;
          }
          case 34: {
            RootPath = input.ReadString();
            break;
          }
          case 42: {
            RelativePath = input.ReadString();
            break;
          }
          case 50: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 58: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Generic half-open interval [start, end)
  /// </summary>
  public sealed partial class Range : pb::IMessage<Range>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Range> _parser = new pb::MessageParser<Range>(() => new Range());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Range> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Range() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Range(Range other) : this() {
      start_ = other.start_;
      end_ = other.end_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Range Clone() {
      return new Range(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private long start_;
    /// <summary>
    /// Index of the first character of the range (inclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 2;
    private long end_;
    /// <summary>
    /// Index of the last character of the range (exclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Range);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Range other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Start != other.Start) return false;
      if (End != other.End) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Start != 0L) hash ^= Start.GetHashCode();
      if (End != 0L) hash ^= End.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Start != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Start);
      }
      if (End != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(End);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Start != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Start);
      }
      if (End != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(End);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Start != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Start);
      }
      if (End != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(End);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Range other) {
      if (other == null) {
        return;
      }
      if (other.Start != 0L) {
        Start = other.Start;
      }
      if (other.End != 0L) {
        End = other.End;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Start = input.ReadInt64();
            break;
          }
          case 16: {
            End = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Start = input.ReadInt64();
            break;
          }
          case 16: {
            End = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Location of the finding within an image.
  /// </summary>
  public sealed partial class ImageLocation : pb::IMessage<ImageLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImageLocation> _parser = new pb::MessageParser<ImageLocation>(() => new ImageLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageLocation(ImageLocation other) : this() {
      boundingBoxes_ = other.boundingBoxes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageLocation Clone() {
      return new ImageLocation(this);
    }

    /// <summary>Field number for the "bounding_boxes" field.</summary>
    public const int BoundingBoxesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.BoundingBox> _repeated_boundingBoxes_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.BoundingBox.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.BoundingBox> boundingBoxes_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.BoundingBox>();
    /// <summary>
    /// Bounding boxes locating the pixels within the image containing the finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.BoundingBox> BoundingBoxes {
      get { return boundingBoxes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!boundingBoxes_.Equals(other.boundingBoxes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= boundingBoxes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      boundingBoxes_.WriteTo(output, _repeated_boundingBoxes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      boundingBoxes_.WriteTo(ref output, _repeated_boundingBoxes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += boundingBoxes_.CalculateSize(_repeated_boundingBoxes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageLocation other) {
      if (other == null) {
        return;
      }
      boundingBoxes_.Add(other.boundingBoxes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            boundingBoxes_.AddEntriesFrom(input, _repeated_boundingBoxes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            boundingBoxes_.AddEntriesFrom(ref input, _repeated_boundingBoxes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Bounding box encompassing detected text within an image.
  /// </summary>
  public sealed partial class BoundingBox : pb::IMessage<BoundingBox>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BoundingBox> _parser = new pb::MessageParser<BoundingBox>(() => new BoundingBox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoundingBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox(BoundingBox other) : this() {
      top_ = other.top_;
      left_ = other.left_;
      width_ = other.width_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox Clone() {
      return new BoundingBox(this);
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 1;
    private int top_;
    /// <summary>
    /// Top coordinate of the bounding box. (0,0) is upper left.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Top {
      get { return top_; }
      set {
        top_ = value;
      }
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 2;
    private int left_;
    /// <summary>
    /// Left coordinate of the bounding box. (0,0) is upper left.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Left {
      get { return left_; }
      set {
        left_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 3;
    private int width_;
    /// <summary>
    /// Width of the bounding box in pixels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private int height_;
    /// <summary>
    /// Height of the bounding box in pixels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoundingBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoundingBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Top != other.Top) return false;
      if (Left != other.Left) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Top != 0) hash ^= Top.GetHashCode();
      if (Left != 0) hash ^= Left.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Top != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Top);
      }
      if (Left != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Left);
      }
      if (Width != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Top != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Top);
      }
      if (Left != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Left);
      }
      if (Width != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Top != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Top);
      }
      if (Left != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Left);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoundingBox other) {
      if (other == null) {
        return;
      }
      if (other.Top != 0) {
        Top = other.Top;
      }
      if (other.Left != 0) {
        Left = other.Left;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Top = input.ReadInt32();
            break;
          }
          case 16: {
            Left = input.ReadInt32();
            break;
          }
          case 24: {
            Width = input.ReadInt32();
            break;
          }
          case 32: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Top = input.ReadInt32();
            break;
          }
          case 16: {
            Left = input.ReadInt32();
            break;
          }
          case 24: {
            Width = input.ReadInt32();
            break;
          }
          case 32: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to search for potentially sensitive info in an image and redact it
  /// by covering it with a colored rectangle.
  /// </summary>
  public sealed partial class RedactImageRequest : pb::IMessage<RedactImageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RedactImageRequest> _parser = new pb::MessageParser<RedactImageRequest>(() => new RedactImageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedactImageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedactImageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedactImageRequest(RedactImageRequest other) : this() {
      parent_ = other.parent_;
      locationId_ = other.locationId_;
      inspectConfig_ = other.inspectConfig_ != null ? other.inspectConfig_.Clone() : null;
      imageRedactionConfigs_ = other.imageRedactionConfigs_.Clone();
      includeFindings_ = other.includeFindings_;
      byteItem_ = other.byteItem_ != null ? other.byteItem_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedactImageRequest Clone() {
      return new RedactImageRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Parent resource name.
    ///
    /// The format of this value varies depending on whether you have [specified a
    /// processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 8;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inspect_config" field.</summary>
    public const int InspectConfigFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.InspectConfig inspectConfig_;
    /// <summary>
    /// Configuration for the inspector.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectConfig InspectConfig {
      get { return inspectConfig_; }
      set {
        inspectConfig_ = value;
      }
    }

    /// <summary>Field number for the "image_redaction_configs" field.</summary>
    public const int ImageRedactionConfigsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.RedactImageRequest.Types.ImageRedactionConfig> _repeated_imageRedactionConfigs_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Dlp.V2.RedactImageRequest.Types.ImageRedactionConfig.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.RedactImageRequest.Types.ImageRedactionConfig> imageRedactionConfigs_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.RedactImageRequest.Types.ImageRedactionConfig>();
    /// <summary>
    /// The configuration for specifying what content to redact from images.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.RedactImageRequest.Types.ImageRedactionConfig> ImageRedactionConfigs {
      get { return imageRedactionConfigs_; }
    }

    /// <summary>Field number for the "include_findings" field.</summary>
    public const int IncludeFindingsFieldNumber = 6;
    private bool includeFindings_;
    /// <summary>
    /// Whether the response should include findings along with the redacted
    /// image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeFindings {
      get { return includeFindings_; }
      set {
        includeFindings_ = value;
      }
    }

    /// <summary>Field number for the "byte_item" field.</summary>
    public const int ByteItemFieldNumber = 7;
    private global::Google.Cloud.Dlp.V2.ByteContentItem byteItem_;
    /// <summary>
    /// The content must be PNG, JPEG, SVG or BMP.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ByteContentItem ByteItem {
      get { return byteItem_; }
      set {
        byteItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedactImageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedactImageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (LocationId != other.LocationId) return false;
      if (!object.Equals(InspectConfig, other.InspectConfig)) return false;
      if(!imageRedactionConfigs_.Equals(other.imageRedactionConfigs_)) return false;
      if (IncludeFindings != other.IncludeFindings) return false;
      if (!object.Equals(ByteItem, other.ByteItem)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (inspectConfig_ != null) hash ^= InspectConfig.GetHashCode();
      hash ^= imageRedactionConfigs_.GetHashCode();
      if (IncludeFindings != false) hash ^= IncludeFindings.GetHashCode();
      if (byteItem_ != null) hash ^= ByteItem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (inspectConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InspectConfig);
      }
      imageRedactionConfigs_.WriteTo(output, _repeated_imageRedactionConfigs_codec);
      if (IncludeFindings != false) {
        output.WriteRawTag(48);
        output.WriteBool(IncludeFindings);
      }
      if (byteItem_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ByteItem);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (inspectConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InspectConfig);
      }
      imageRedactionConfigs_.WriteTo(ref output, _repeated_imageRedactionConfigs_codec);
      if (IncludeFindings != false) {
        output.WriteRawTag(48);
        output.WriteBool(IncludeFindings);
      }
      if (byteItem_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ByteItem);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (inspectConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InspectConfig);
      }
      size += imageRedactionConfigs_.CalculateSize(_repeated_imageRedactionConfigs_codec);
      if (IncludeFindings != false) {
        size += 1 + 1;
      }
      if (byteItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ByteItem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedactImageRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      if (other.inspectConfig_ != null) {
        if (inspectConfig_ == null) {
          InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
        }
        InspectConfig.MergeFrom(other.InspectConfig);
      }
      imageRedactionConfigs_.Add(other.imageRedactionConfigs_);
      if (other.IncludeFindings != false) {
        IncludeFindings = other.IncludeFindings;
      }
      if (other.byteItem_ != null) {
        if (byteItem_ == null) {
          ByteItem = new global::Google.Cloud.Dlp.V2.ByteContentItem();
        }
        ByteItem.MergeFrom(other.ByteItem);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (inspectConfig_ == null) {
              InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
            }
            input.ReadMessage(InspectConfig);
            break;
          }
          case 42: {
            imageRedactionConfigs_.AddEntriesFrom(input, _repeated_imageRedactionConfigs_codec);
            break;
          }
          case 48: {
            IncludeFindings = input.ReadBool();
            break;
          }
          case 58: {
            if (byteItem_ == null) {
              ByteItem = new global::Google.Cloud.Dlp.V2.ByteContentItem();
            }
            input.ReadMessage(ByteItem);
            break;
          }
          case 66: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (inspectConfig_ == null) {
              InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
            }
            input.ReadMessage(InspectConfig);
            break;
          }
          case 42: {
            imageRedactionConfigs_.AddEntriesFrom(ref input, _repeated_imageRedactionConfigs_codec);
            break;
          }
          case 48: {
            IncludeFindings = input.ReadBool();
            break;
          }
          case 58: {
            if (byteItem_ == null) {
              ByteItem = new global::Google.Cloud.Dlp.V2.ByteContentItem();
            }
            input.ReadMessage(ByteItem);
            break;
          }
          case 66: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RedactImageRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Configuration for determining how redaction of images should occur.
      /// </summary>
      public sealed partial class ImageRedactionConfig : pb::IMessage<ImageRedactionConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ImageRedactionConfig> _parser = new pb::MessageParser<ImageRedactionConfig>(() => new ImageRedactionConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ImageRedactionConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.RedactImageRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageRedactionConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageRedactionConfig(ImageRedactionConfig other) : this() {
          redactionColor_ = other.redactionColor_ != null ? other.redactionColor_.Clone() : null;
          switch (other.TargetCase) {
            case TargetOneofCase.InfoType:
              InfoType = other.InfoType.Clone();
              break;
            case TargetOneofCase.RedactAllText:
              RedactAllText = other.RedactAllText;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImageRedactionConfig Clone() {
          return new ImageRedactionConfig(this);
        }

        /// <summary>Field number for the "info_type" field.</summary>
        public const int InfoTypeFieldNumber = 1;
        /// <summary>
        /// Only one per info_type should be provided per request. If not
        /// specified, and redact_all_text is false, the DLP API will redact all
        /// text that it matches against all info_types that are found, but not
        /// specified in another ImageRedactionConfig.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.InfoType InfoType {
          get { return targetCase_ == TargetOneofCase.InfoType ? (global::Google.Cloud.Dlp.V2.InfoType) target_ : null; }
          set {
            target_ = value;
            targetCase_ = value == null ? TargetOneofCase.None : TargetOneofCase.InfoType;
          }
        }

        /// <summary>Field number for the "redact_all_text" field.</summary>
        public const int RedactAllTextFieldNumber = 2;
        /// <summary>
        /// If true, all text found in the image, regardless whether it matches an
        /// info_type, is redacted. Only one should be provided.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool RedactAllText {
          get { return targetCase_ == TargetOneofCase.RedactAllText ? (bool) target_ : false; }
          set {
            target_ = value;
            targetCase_ = TargetOneofCase.RedactAllText;
          }
        }

        /// <summary>Field number for the "redaction_color" field.</summary>
        public const int RedactionColorFieldNumber = 3;
        private global::Google.Cloud.Dlp.V2.Color redactionColor_;
        /// <summary>
        /// The color to use when redacting content from an image. If not specified,
        /// the default is black.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.Color RedactionColor {
          get { return redactionColor_; }
          set {
            redactionColor_ = value;
          }
        }

        private object target_;
        /// <summary>Enum of possible cases for the "target" oneof.</summary>
        public enum TargetOneofCase {
          None = 0,
          InfoType = 1,
          RedactAllText = 2,
        }
        private TargetOneofCase targetCase_ = TargetOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TargetOneofCase TargetCase {
          get { return targetCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTarget() {
          targetCase_ = TargetOneofCase.None;
          target_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ImageRedactionConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ImageRedactionConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(InfoType, other.InfoType)) return false;
          if (RedactAllText != other.RedactAllText) return false;
          if (!object.Equals(RedactionColor, other.RedactionColor)) return false;
          if (TargetCase != other.TargetCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (targetCase_ == TargetOneofCase.InfoType) hash ^= InfoType.GetHashCode();
          if (targetCase_ == TargetOneofCase.RedactAllText) hash ^= RedactAllText.GetHashCode();
          if (redactionColor_ != null) hash ^= RedactionColor.GetHashCode();
          hash ^= (int) targetCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (targetCase_ == TargetOneofCase.InfoType) {
            output.WriteRawTag(10);
            output.WriteMessage(InfoType);
          }
          if (targetCase_ == TargetOneofCase.RedactAllText) {
            output.WriteRawTag(16);
            output.WriteBool(RedactAllText);
          }
          if (redactionColor_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(RedactionColor);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (targetCase_ == TargetOneofCase.InfoType) {
            output.WriteRawTag(10);
            output.WriteMessage(InfoType);
          }
          if (targetCase_ == TargetOneofCase.RedactAllText) {
            output.WriteRawTag(16);
            output.WriteBool(RedactAllText);
          }
          if (redactionColor_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(RedactionColor);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (targetCase_ == TargetOneofCase.InfoType) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoType);
          }
          if (targetCase_ == TargetOneofCase.RedactAllText) {
            size += 1 + 1;
          }
          if (redactionColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedactionColor);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ImageRedactionConfig other) {
          if (other == null) {
            return;
          }
          if (other.redactionColor_ != null) {
            if (redactionColor_ == null) {
              RedactionColor = new global::Google.Cloud.Dlp.V2.Color();
            }
            RedactionColor.MergeFrom(other.RedactionColor);
          }
          switch (other.TargetCase) {
            case TargetOneofCase.InfoType:
              if (InfoType == null) {
                InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
              }
              InfoType.MergeFrom(other.InfoType);
              break;
            case TargetOneofCase.RedactAllText:
              RedactAllText = other.RedactAllText;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Google.Cloud.Dlp.V2.InfoType subBuilder = new global::Google.Cloud.Dlp.V2.InfoType();
                if (targetCase_ == TargetOneofCase.InfoType) {
                  subBuilder.MergeFrom(InfoType);
                }
                input.ReadMessage(subBuilder);
                InfoType = subBuilder;
                break;
              }
              case 16: {
                RedactAllText = input.ReadBool();
                break;
              }
              case 26: {
                if (redactionColor_ == null) {
                  RedactionColor = new global::Google.Cloud.Dlp.V2.Color();
                }
                input.ReadMessage(RedactionColor);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Google.Cloud.Dlp.V2.InfoType subBuilder = new global::Google.Cloud.Dlp.V2.InfoType();
                if (targetCase_ == TargetOneofCase.InfoType) {
                  subBuilder.MergeFrom(InfoType);
                }
                input.ReadMessage(subBuilder);
                InfoType = subBuilder;
                break;
              }
              case 16: {
                RedactAllText = input.ReadBool();
                break;
              }
              case 26: {
                if (redactionColor_ == null) {
                  RedactionColor = new global::Google.Cloud.Dlp.V2.Color();
                }
                input.ReadMessage(RedactionColor);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Represents a color in the RGB color space.
  /// </summary>
  public sealed partial class Color : pb::IMessage<Color>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Color> _parser = new pb::MessageParser<Color>(() => new Color());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Color> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Color() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Color(Color other) : this() {
      red_ = other.red_;
      green_ = other.green_;
      blue_ = other.blue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Color Clone() {
      return new Color(this);
    }

    /// <summary>Field number for the "red" field.</summary>
    public const int RedFieldNumber = 1;
    private float red_;
    /// <summary>
    /// The amount of red in the color as a value in the interval [0, 1].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Red {
      get { return red_; }
      set {
        red_ = value;
      }
    }

    /// <summary>Field number for the "green" field.</summary>
    public const int GreenFieldNumber = 2;
    private float green_;
    /// <summary>
    /// The amount of green in the color as a value in the interval [0, 1].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Green {
      get { return green_; }
      set {
        green_ = value;
      }
    }

    /// <summary>Field number for the "blue" field.</summary>
    public const int BlueFieldNumber = 3;
    private float blue_;
    /// <summary>
    /// The amount of blue in the color as a value in the interval [0, 1].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Blue {
      get { return blue_; }
      set {
        blue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Color);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Color other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Red, other.Red)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Green, other.Green)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Blue, other.Blue)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Red != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Red);
      if (Green != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Green);
      if (Blue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Blue);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Red != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Red);
      }
      if (Green != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Green);
      }
      if (Blue != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Blue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Red != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Red);
      }
      if (Green != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Green);
      }
      if (Blue != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Blue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Red != 0F) {
        size += 1 + 4;
      }
      if (Green != 0F) {
        size += 1 + 4;
      }
      if (Blue != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Color other) {
      if (other == null) {
        return;
      }
      if (other.Red != 0F) {
        Red = other.Red;
      }
      if (other.Green != 0F) {
        Green = other.Green;
      }
      if (other.Blue != 0F) {
        Blue = other.Blue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Red = input.ReadFloat();
            break;
          }
          case 21: {
            Green = input.ReadFloat();
            break;
          }
          case 29: {
            Blue = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Red = input.ReadFloat();
            break;
          }
          case 21: {
            Green = input.ReadFloat();
            break;
          }
          case 29: {
            Blue = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Results of redacting an image.
  /// </summary>
  public sealed partial class RedactImageResponse : pb::IMessage<RedactImageResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RedactImageResponse> _parser = new pb::MessageParser<RedactImageResponse>(() => new RedactImageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedactImageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedactImageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedactImageResponse(RedactImageResponse other) : this() {
      redactedImage_ = other.redactedImage_;
      extractedText_ = other.extractedText_;
      inspectResult_ = other.inspectResult_ != null ? other.inspectResult_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedactImageResponse Clone() {
      return new RedactImageResponse(this);
    }

    /// <summary>Field number for the "redacted_image" field.</summary>
    public const int RedactedImageFieldNumber = 1;
    private pb::ByteString redactedImage_ = pb::ByteString.Empty;
    /// <summary>
    /// The redacted image. The type will be the same as the original image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RedactedImage {
      get { return redactedImage_; }
      set {
        redactedImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extracted_text" field.</summary>
    public const int ExtractedTextFieldNumber = 2;
    private string extractedText_ = "";
    /// <summary>
    /// If an image was being inspected and the InspectConfig's include_quote was
    /// set to true, then this field will include all text, if any, that was found
    /// in the image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtractedText {
      get { return extractedText_; }
      set {
        extractedText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inspect_result" field.</summary>
    public const int InspectResultFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.InspectResult inspectResult_;
    /// <summary>
    /// The findings. Populated when include_findings in the request is true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectResult InspectResult {
      get { return inspectResult_; }
      set {
        inspectResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedactImageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedactImageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RedactedImage != other.RedactedImage) return false;
      if (ExtractedText != other.ExtractedText) return false;
      if (!object.Equals(InspectResult, other.InspectResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RedactedImage.Length != 0) hash ^= RedactedImage.GetHashCode();
      if (ExtractedText.Length != 0) hash ^= ExtractedText.GetHashCode();
      if (inspectResult_ != null) hash ^= InspectResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RedactedImage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(RedactedImage);
      }
      if (ExtractedText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExtractedText);
      }
      if (inspectResult_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InspectResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RedactedImage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(RedactedImage);
      }
      if (ExtractedText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExtractedText);
      }
      if (inspectResult_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InspectResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RedactedImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RedactedImage);
      }
      if (ExtractedText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtractedText);
      }
      if (inspectResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InspectResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedactImageResponse other) {
      if (other == null) {
        return;
      }
      if (other.RedactedImage.Length != 0) {
        RedactedImage = other.RedactedImage;
      }
      if (other.ExtractedText.Length != 0) {
        ExtractedText = other.ExtractedText;
      }
      if (other.inspectResult_ != null) {
        if (inspectResult_ == null) {
          InspectResult = new global::Google.Cloud.Dlp.V2.InspectResult();
        }
        InspectResult.MergeFrom(other.InspectResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RedactedImage = input.ReadBytes();
            break;
          }
          case 18: {
            ExtractedText = input.ReadString();
            break;
          }
          case 26: {
            if (inspectResult_ == null) {
              InspectResult = new global::Google.Cloud.Dlp.V2.InspectResult();
            }
            input.ReadMessage(InspectResult);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RedactedImage = input.ReadBytes();
            break;
          }
          case 18: {
            ExtractedText = input.ReadString();
            break;
          }
          case 26: {
            if (inspectResult_ == null) {
              InspectResult = new global::Google.Cloud.Dlp.V2.InspectResult();
            }
            input.ReadMessage(InspectResult);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to de-identify a list of items.
  /// </summary>
  public sealed partial class DeidentifyContentRequest : pb::IMessage<DeidentifyContentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeidentifyContentRequest> _parser = new pb::MessageParser<DeidentifyContentRequest>(() => new DeidentifyContentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeidentifyContentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeidentifyContentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeidentifyContentRequest(DeidentifyContentRequest other) : this() {
      parent_ = other.parent_;
      deidentifyConfig_ = other.deidentifyConfig_ != null ? other.deidentifyConfig_.Clone() : null;
      inspectConfig_ = other.inspectConfig_ != null ? other.inspectConfig_.Clone() : null;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      inspectTemplateName_ = other.inspectTemplateName_;
      deidentifyTemplateName_ = other.deidentifyTemplateName_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeidentifyContentRequest Clone() {
      return new DeidentifyContentRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Parent resource name.
    ///
    /// The format of this value varies depending on whether you have [specified a
    /// processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deidentify_config" field.</summary>
    public const int DeidentifyConfigFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.DeidentifyConfig deidentifyConfig_;
    /// <summary>
    /// Configuration for the de-identification of the content item.
    /// Items specified here will override the template referenced by the
    /// deidentify_template_name argument.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DeidentifyConfig DeidentifyConfig {
      get { return deidentifyConfig_; }
      set {
        deidentifyConfig_ = value;
      }
    }

    /// <summary>Field number for the "inspect_config" field.</summary>
    public const int InspectConfigFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.InspectConfig inspectConfig_;
    /// <summary>
    /// Configuration for the inspector.
    /// Items specified here will override the template referenced by the
    /// inspect_template_name argument.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectConfig InspectConfig {
      get { return inspectConfig_; }
      set {
        inspectConfig_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 4;
    private global::Google.Cloud.Dlp.V2.ContentItem item_;
    /// <summary>
    /// The item to de-identify. Will be treated as text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ContentItem Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "inspect_template_name" field.</summary>
    public const int InspectTemplateNameFieldNumber = 5;
    private string inspectTemplateName_ = "";
    /// <summary>
    /// Template to use. Any configuration directly specified in
    /// inspect_config will override those set in the template. Singular fields
    /// that are set in this request will replace their corresponding fields in the
    /// template. Repeated fields are appended. Singular sub-messages and groups
    /// are recursively merged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InspectTemplateName {
      get { return inspectTemplateName_; }
      set {
        inspectTemplateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deidentify_template_name" field.</summary>
    public const int DeidentifyTemplateNameFieldNumber = 6;
    private string deidentifyTemplateName_ = "";
    /// <summary>
    /// Template to use. Any configuration directly specified in
    /// deidentify_config will override those set in the template. Singular fields
    /// that are set in this request will replace their corresponding fields in the
    /// template. Repeated fields are appended. Singular sub-messages and groups
    /// are recursively merged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeidentifyTemplateName {
      get { return deidentifyTemplateName_; }
      set {
        deidentifyTemplateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 7;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeidentifyContentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeidentifyContentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(DeidentifyConfig, other.DeidentifyConfig)) return false;
      if (!object.Equals(InspectConfig, other.InspectConfig)) return false;
      if (!object.Equals(Item, other.Item)) return false;
      if (InspectTemplateName != other.InspectTemplateName) return false;
      if (DeidentifyTemplateName != other.DeidentifyTemplateName) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (deidentifyConfig_ != null) hash ^= DeidentifyConfig.GetHashCode();
      if (inspectConfig_ != null) hash ^= InspectConfig.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (InspectTemplateName.Length != 0) hash ^= InspectTemplateName.GetHashCode();
      if (DeidentifyTemplateName.Length != 0) hash ^= DeidentifyTemplateName.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (deidentifyConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeidentifyConfig);
      }
      if (inspectConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InspectConfig);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (InspectTemplateName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InspectTemplateName);
      }
      if (DeidentifyTemplateName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DeidentifyTemplateName);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (deidentifyConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeidentifyConfig);
      }
      if (inspectConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InspectConfig);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (InspectTemplateName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InspectTemplateName);
      }
      if (DeidentifyTemplateName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DeidentifyTemplateName);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (deidentifyConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeidentifyConfig);
      }
      if (inspectConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InspectConfig);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (InspectTemplateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InspectTemplateName);
      }
      if (DeidentifyTemplateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeidentifyTemplateName);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeidentifyContentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.deidentifyConfig_ != null) {
        if (deidentifyConfig_ == null) {
          DeidentifyConfig = new global::Google.Cloud.Dlp.V2.DeidentifyConfig();
        }
        DeidentifyConfig.MergeFrom(other.DeidentifyConfig);
      }
      if (other.inspectConfig_ != null) {
        if (inspectConfig_ == null) {
          InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
        }
        InspectConfig.MergeFrom(other.InspectConfig);
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Google.Cloud.Dlp.V2.ContentItem();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.InspectTemplateName.Length != 0) {
        InspectTemplateName = other.InspectTemplateName;
      }
      if (other.DeidentifyTemplateName.Length != 0) {
        DeidentifyTemplateName = other.DeidentifyTemplateName;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (deidentifyConfig_ == null) {
              DeidentifyConfig = new global::Google.Cloud.Dlp.V2.DeidentifyConfig();
            }
            input.ReadMessage(DeidentifyConfig);
            break;
          }
          case 26: {
            if (inspectConfig_ == null) {
              InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
            }
            input.ReadMessage(InspectConfig);
            break;
          }
          case 34: {
            if (item_ == null) {
              Item = new global::Google.Cloud.Dlp.V2.ContentItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 42: {
            InspectTemplateName = input.ReadString();
            break;
          }
          case 50: {
            DeidentifyTemplateName = input.ReadString();
            break;
          }
          case 58: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (deidentifyConfig_ == null) {
              DeidentifyConfig = new global::Google.Cloud.Dlp.V2.DeidentifyConfig();
            }
            input.ReadMessage(DeidentifyConfig);
            break;
          }
          case 26: {
            if (inspectConfig_ == null) {
              InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
            }
            input.ReadMessage(InspectConfig);
            break;
          }
          case 34: {
            if (item_ == null) {
              Item = new global::Google.Cloud.Dlp.V2.ContentItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 42: {
            InspectTemplateName = input.ReadString();
            break;
          }
          case 50: {
            DeidentifyTemplateName = input.ReadString();
            break;
          }
          case 58: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Results of de-identifying a ContentItem.
  /// </summary>
  public sealed partial class DeidentifyContentResponse : pb::IMessage<DeidentifyContentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeidentifyContentResponse> _parser = new pb::MessageParser<DeidentifyContentResponse>(() => new DeidentifyContentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeidentifyContentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeidentifyContentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeidentifyContentResponse(DeidentifyContentResponse other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      overview_ = other.overview_ != null ? other.overview_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeidentifyContentResponse Clone() {
      return new DeidentifyContentResponse(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.ContentItem item_;
    /// <summary>
    /// The de-identified item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ContentItem Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "overview" field.</summary>
    public const int OverviewFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.TransformationOverview overview_;
    /// <summary>
    /// An overview of the changes that were made on the `item`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.TransformationOverview Overview {
      get { return overview_; }
      set {
        overview_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeidentifyContentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeidentifyContentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      if (!object.Equals(Overview, other.Overview)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (overview_ != null) hash ^= Overview.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (overview_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Overview);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (overview_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Overview);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (overview_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Overview);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeidentifyContentResponse other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Google.Cloud.Dlp.V2.ContentItem();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.overview_ != null) {
        if (overview_ == null) {
          Overview = new global::Google.Cloud.Dlp.V2.TransformationOverview();
        }
        Overview.MergeFrom(other.Overview);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Google.Cloud.Dlp.V2.ContentItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 18: {
            if (overview_ == null) {
              Overview = new global::Google.Cloud.Dlp.V2.TransformationOverview();
            }
            input.ReadMessage(Overview);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Google.Cloud.Dlp.V2.ContentItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 18: {
            if (overview_ == null) {
              Overview = new global::Google.Cloud.Dlp.V2.TransformationOverview();
            }
            input.ReadMessage(Overview);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to re-identify an item.
  /// </summary>
  public sealed partial class ReidentifyContentRequest : pb::IMessage<ReidentifyContentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReidentifyContentRequest> _parser = new pb::MessageParser<ReidentifyContentRequest>(() => new ReidentifyContentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReidentifyContentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReidentifyContentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReidentifyContentRequest(ReidentifyContentRequest other) : this() {
      parent_ = other.parent_;
      reidentifyConfig_ = other.reidentifyConfig_ != null ? other.reidentifyConfig_.Clone() : null;
      inspectConfig_ = other.inspectConfig_ != null ? other.inspectConfig_.Clone() : null;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      inspectTemplateName_ = other.inspectTemplateName_;
      reidentifyTemplateName_ = other.reidentifyTemplateName_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReidentifyContentRequest Clone() {
      return new ReidentifyContentRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent resource name.
    ///
    /// The format of this value varies depending on whether you have [specified a
    /// processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reidentify_config" field.</summary>
    public const int ReidentifyConfigFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.DeidentifyConfig reidentifyConfig_;
    /// <summary>
    /// Configuration for the re-identification of the content item.
    /// This field shares the same proto message type that is used for
    /// de-identification, however its usage here is for the reversal of the
    /// previous de-identification. Re-identification is performed by examining
    /// the transformations used to de-identify the items and executing the
    /// reverse. This requires that only reversible transformations
    /// be provided here. The reversible transformations are:
    ///
    ///  - `CryptoDeterministicConfig`
    ///  - `CryptoReplaceFfxFpeConfig`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DeidentifyConfig ReidentifyConfig {
      get { return reidentifyConfig_; }
      set {
        reidentifyConfig_ = value;
      }
    }

    /// <summary>Field number for the "inspect_config" field.</summary>
    public const int InspectConfigFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.InspectConfig inspectConfig_;
    /// <summary>
    /// Configuration for the inspector.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectConfig InspectConfig {
      get { return inspectConfig_; }
      set {
        inspectConfig_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 4;
    private global::Google.Cloud.Dlp.V2.ContentItem item_;
    /// <summary>
    /// The item to re-identify. Will be treated as text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ContentItem Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "inspect_template_name" field.</summary>
    public const int InspectTemplateNameFieldNumber = 5;
    private string inspectTemplateName_ = "";
    /// <summary>
    /// Template to use. Any configuration directly specified in
    /// `inspect_config` will override those set in the template. Singular fields
    /// that are set in this request will replace their corresponding fields in the
    /// template. Repeated fields are appended. Singular sub-messages and groups
    /// are recursively merged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InspectTemplateName {
      get { return inspectTemplateName_; }
      set {
        inspectTemplateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reidentify_template_name" field.</summary>
    public const int ReidentifyTemplateNameFieldNumber = 6;
    private string reidentifyTemplateName_ = "";
    /// <summary>
    /// Template to use. References an instance of `DeidentifyTemplate`.
    /// Any configuration directly specified in `reidentify_config` or
    /// `inspect_config` will override those set in the template. The
    /// `DeidentifyTemplate` used must include only reversible transformations.
    /// Singular fields that are set in this request will replace their
    /// corresponding fields in the template. Repeated fields are appended.
    /// Singular sub-messages and groups are recursively merged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReidentifyTemplateName {
      get { return reidentifyTemplateName_; }
      set {
        reidentifyTemplateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 7;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReidentifyContentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReidentifyContentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(ReidentifyConfig, other.ReidentifyConfig)) return false;
      if (!object.Equals(InspectConfig, other.InspectConfig)) return false;
      if (!object.Equals(Item, other.Item)) return false;
      if (InspectTemplateName != other.InspectTemplateName) return false;
      if (ReidentifyTemplateName != other.ReidentifyTemplateName) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (reidentifyConfig_ != null) hash ^= ReidentifyConfig.GetHashCode();
      if (inspectConfig_ != null) hash ^= InspectConfig.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (InspectTemplateName.Length != 0) hash ^= InspectTemplateName.GetHashCode();
      if (ReidentifyTemplateName.Length != 0) hash ^= ReidentifyTemplateName.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (reidentifyConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReidentifyConfig);
      }
      if (inspectConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InspectConfig);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (InspectTemplateName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InspectTemplateName);
      }
      if (ReidentifyTemplateName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ReidentifyTemplateName);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (reidentifyConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReidentifyConfig);
      }
      if (inspectConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InspectConfig);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (InspectTemplateName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InspectTemplateName);
      }
      if (ReidentifyTemplateName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ReidentifyTemplateName);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (reidentifyConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReidentifyConfig);
      }
      if (inspectConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InspectConfig);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (InspectTemplateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InspectTemplateName);
      }
      if (ReidentifyTemplateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReidentifyTemplateName);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReidentifyContentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.reidentifyConfig_ != null) {
        if (reidentifyConfig_ == null) {
          ReidentifyConfig = new global::Google.Cloud.Dlp.V2.DeidentifyConfig();
        }
        ReidentifyConfig.MergeFrom(other.ReidentifyConfig);
      }
      if (other.inspectConfig_ != null) {
        if (inspectConfig_ == null) {
          InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
        }
        InspectConfig.MergeFrom(other.InspectConfig);
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Google.Cloud.Dlp.V2.ContentItem();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.InspectTemplateName.Length != 0) {
        InspectTemplateName = other.InspectTemplateName;
      }
      if (other.ReidentifyTemplateName.Length != 0) {
        ReidentifyTemplateName = other.ReidentifyTemplateName;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (reidentifyConfig_ == null) {
              ReidentifyConfig = new global::Google.Cloud.Dlp.V2.DeidentifyConfig();
            }
            input.ReadMessage(ReidentifyConfig);
            break;
          }
          case 26: {
            if (inspectConfig_ == null) {
              InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
            }
            input.ReadMessage(InspectConfig);
            break;
          }
          case 34: {
            if (item_ == null) {
              Item = new global::Google.Cloud.Dlp.V2.ContentItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 42: {
            InspectTemplateName = input.ReadString();
            break;
          }
          case 50: {
            ReidentifyTemplateName = input.ReadString();
            break;
          }
          case 58: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (reidentifyConfig_ == null) {
              ReidentifyConfig = new global::Google.Cloud.Dlp.V2.DeidentifyConfig();
            }
            input.ReadMessage(ReidentifyConfig);
            break;
          }
          case 26: {
            if (inspectConfig_ == null) {
              InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
            }
            input.ReadMessage(InspectConfig);
            break;
          }
          case 34: {
            if (item_ == null) {
              Item = new global::Google.Cloud.Dlp.V2.ContentItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 42: {
            InspectTemplateName = input.ReadString();
            break;
          }
          case 50: {
            ReidentifyTemplateName = input.ReadString();
            break;
          }
          case 58: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Results of re-identifying a item.
  /// </summary>
  public sealed partial class ReidentifyContentResponse : pb::IMessage<ReidentifyContentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReidentifyContentResponse> _parser = new pb::MessageParser<ReidentifyContentResponse>(() => new ReidentifyContentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReidentifyContentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReidentifyContentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReidentifyContentResponse(ReidentifyContentResponse other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      overview_ = other.overview_ != null ? other.overview_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReidentifyContentResponse Clone() {
      return new ReidentifyContentResponse(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.ContentItem item_;
    /// <summary>
    /// The re-identified item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ContentItem Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "overview" field.</summary>
    public const int OverviewFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.TransformationOverview overview_;
    /// <summary>
    /// An overview of the changes that were made to the `item`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.TransformationOverview Overview {
      get { return overview_; }
      set {
        overview_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReidentifyContentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReidentifyContentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      if (!object.Equals(Overview, other.Overview)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (overview_ != null) hash ^= Overview.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (overview_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Overview);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (overview_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Overview);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (overview_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Overview);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReidentifyContentResponse other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Google.Cloud.Dlp.V2.ContentItem();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.overview_ != null) {
        if (overview_ == null) {
          Overview = new global::Google.Cloud.Dlp.V2.TransformationOverview();
        }
        Overview.MergeFrom(other.Overview);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Google.Cloud.Dlp.V2.ContentItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 18: {
            if (overview_ == null) {
              Overview = new global::Google.Cloud.Dlp.V2.TransformationOverview();
            }
            input.ReadMessage(Overview);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Google.Cloud.Dlp.V2.ContentItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 18: {
            if (overview_ == null) {
              Overview = new global::Google.Cloud.Dlp.V2.TransformationOverview();
            }
            input.ReadMessage(Overview);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to search for potentially sensitive info in a ContentItem.
  /// </summary>
  public sealed partial class InspectContentRequest : pb::IMessage<InspectContentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InspectContentRequest> _parser = new pb::MessageParser<InspectContentRequest>(() => new InspectContentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InspectContentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectContentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectContentRequest(InspectContentRequest other) : this() {
      parent_ = other.parent_;
      inspectConfig_ = other.inspectConfig_ != null ? other.inspectConfig_.Clone() : null;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      inspectTemplateName_ = other.inspectTemplateName_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectContentRequest Clone() {
      return new InspectContentRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Parent resource name.
    ///
    /// The format of this value varies depending on whether you have [specified a
    /// processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inspect_config" field.</summary>
    public const int InspectConfigFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.InspectConfig inspectConfig_;
    /// <summary>
    /// Configuration for the inspector. What specified here will override
    /// the template referenced by the inspect_template_name argument.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectConfig InspectConfig {
      get { return inspectConfig_; }
      set {
        inspectConfig_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.ContentItem item_;
    /// <summary>
    /// The item to inspect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ContentItem Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "inspect_template_name" field.</summary>
    public const int InspectTemplateNameFieldNumber = 4;
    private string inspectTemplateName_ = "";
    /// <summary>
    /// Template to use. Any configuration directly specified in
    /// inspect_config will override those set in the template. Singular fields
    /// that are set in this request will replace their corresponding fields in the
    /// template. Repeated fields are appended. Singular sub-messages and groups
    /// are recursively merged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InspectTemplateName {
      get { return inspectTemplateName_; }
      set {
        inspectTemplateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 5;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InspectContentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InspectContentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(InspectConfig, other.InspectConfig)) return false;
      if (!object.Equals(Item, other.Item)) return false;
      if (InspectTemplateName != other.InspectTemplateName) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (inspectConfig_ != null) hash ^= InspectConfig.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (InspectTemplateName.Length != 0) hash ^= InspectTemplateName.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (inspectConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InspectConfig);
      }
      if (item_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Item);
      }
      if (InspectTemplateName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InspectTemplateName);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (inspectConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InspectConfig);
      }
      if (item_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Item);
      }
      if (InspectTemplateName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InspectTemplateName);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (inspectConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InspectConfig);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (InspectTemplateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InspectTemplateName);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InspectContentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.inspectConfig_ != null) {
        if (inspectConfig_ == null) {
          InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
        }
        InspectConfig.MergeFrom(other.InspectConfig);
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Google.Cloud.Dlp.V2.ContentItem();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.InspectTemplateName.Length != 0) {
        InspectTemplateName = other.InspectTemplateName;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (inspectConfig_ == null) {
              InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
            }
            input.ReadMessage(InspectConfig);
            break;
          }
          case 26: {
            if (item_ == null) {
              Item = new global::Google.Cloud.Dlp.V2.ContentItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 34: {
            InspectTemplateName = input.ReadString();
            break;
          }
          case 42: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (inspectConfig_ == null) {
              InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
            }
            input.ReadMessage(InspectConfig);
            break;
          }
          case 26: {
            if (item_ == null) {
              Item = new global::Google.Cloud.Dlp.V2.ContentItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 34: {
            InspectTemplateName = input.ReadString();
            break;
          }
          case 42: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Results of inspecting an item.
  /// </summary>
  public sealed partial class InspectContentResponse : pb::IMessage<InspectContentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InspectContentResponse> _parser = new pb::MessageParser<InspectContentResponse>(() => new InspectContentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InspectContentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectContentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectContentResponse(InspectContentResponse other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectContentResponse Clone() {
      return new InspectContentResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.InspectResult result_;
    /// <summary>
    /// The findings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InspectContentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InspectContentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InspectContentResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Google.Cloud.Dlp.V2.InspectResult();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::Google.Cloud.Dlp.V2.InspectResult();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::Google.Cloud.Dlp.V2.InspectResult();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Cloud repository for storing output.
  /// </summary>
  public sealed partial class OutputStorageConfig : pb::IMessage<OutputStorageConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OutputStorageConfig> _parser = new pb::MessageParser<OutputStorageConfig>(() => new OutputStorageConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutputStorageConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputStorageConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputStorageConfig(OutputStorageConfig other) : this() {
      outputSchema_ = other.outputSchema_;
      switch (other.TypeCase) {
        case TypeOneofCase.Table:
          Table = other.Table.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputStorageConfig Clone() {
      return new OutputStorageConfig(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    /// <summary>
    /// Store findings in an existing table or a new table in an existing
    /// dataset. If table_id is not set a new one will be generated
    /// for you with the following format:
    /// dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for
    /// generating the date details.
    ///
    /// For Inspect, each column in an existing output table must have the same
    /// name, type, and mode of a field in the `Finding` object.
    ///
    /// For Risk, an existing output table should be the output of a previous
    /// Risk analysis job run on the same source table, with the same privacy
    /// metric and quasi-identifiers. Risk jobs that analyze the same table but
    /// compute a different privacy metric, or use different sets of
    /// quasi-identifiers, cannot store their results in the same table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.BigQueryTable Table {
      get { return typeCase_ == TypeOneofCase.Table ? (global::Google.Cloud.Dlp.V2.BigQueryTable) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Table;
      }
    }

    /// <summary>Field number for the "output_schema" field.</summary>
    public const int OutputSchemaFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.OutputStorageConfig.Types.OutputSchema outputSchema_ = global::Google.Cloud.Dlp.V2.OutputStorageConfig.Types.OutputSchema.Unspecified;
    /// <summary>
    /// Schema used for writing the findings for Inspect jobs. This field is only
    /// used for Inspect and must be unspecified for Risk jobs. Columns are derived
    /// from the `Finding` object. If appending to an existing table, any columns
    /// from the predefined schema that are missing will be added. No columns in
    /// the existing table will be deleted.
    ///
    /// If unspecified, then all available columns will be used for a new table or
    /// an (existing) table with no schema, and no changes will be made to an
    /// existing table that has a schema.
    /// Only for use with external storage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.OutputStorageConfig.Types.OutputSchema OutputSchema {
      get { return outputSchema_; }
      set {
        outputSchema_ = value;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Table = 1,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutputStorageConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutputStorageConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      if (OutputSchema != other.OutputSchema) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Table) hash ^= Table.GetHashCode();
      if (OutputSchema != global::Google.Cloud.Dlp.V2.OutputStorageConfig.Types.OutputSchema.Unspecified) hash ^= OutputSchema.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (typeCase_ == TypeOneofCase.Table) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      if (OutputSchema != global::Google.Cloud.Dlp.V2.OutputStorageConfig.Types.OutputSchema.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OutputSchema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (typeCase_ == TypeOneofCase.Table) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      if (OutputSchema != global::Google.Cloud.Dlp.V2.OutputStorageConfig.Types.OutputSchema.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OutputSchema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Table) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      if (OutputSchema != global::Google.Cloud.Dlp.V2.OutputStorageConfig.Types.OutputSchema.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OutputSchema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutputStorageConfig other) {
      if (other == null) {
        return;
      }
      if (other.OutputSchema != global::Google.Cloud.Dlp.V2.OutputStorageConfig.Types.OutputSchema.Unspecified) {
        OutputSchema = other.OutputSchema;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Table:
          if (Table == null) {
            Table = new global::Google.Cloud.Dlp.V2.BigQueryTable();
          }
          Table.MergeFrom(other.Table);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.BigQueryTable subBuilder = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            if (typeCase_ == TypeOneofCase.Table) {
              subBuilder.MergeFrom(Table);
            }
            input.ReadMessage(subBuilder);
            Table = subBuilder;
            break;
          }
          case 24: {
            OutputSchema = (global::Google.Cloud.Dlp.V2.OutputStorageConfig.Types.OutputSchema) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.BigQueryTable subBuilder = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            if (typeCase_ == TypeOneofCase.Table) {
              subBuilder.MergeFrom(Table);
            }
            input.ReadMessage(subBuilder);
            Table = subBuilder;
            break;
          }
          case 24: {
            OutputSchema = (global::Google.Cloud.Dlp.V2.OutputStorageConfig.Types.OutputSchema) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OutputStorageConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Predefined schemas for storing findings.
      /// Only for use with external storage.
      /// </summary>
      public enum OutputSchema {
        /// <summary>
        /// Unused.
        /// </summary>
        [pbr::OriginalName("OUTPUT_SCHEMA_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Basic schema including only `info_type`, `quote`, `certainty`, and
        /// `timestamp`.
        /// </summary>
        [pbr::OriginalName("BASIC_COLUMNS")] BasicColumns = 1,
        /// <summary>
        /// Schema tailored to findings from scanning Google Cloud Storage.
        /// </summary>
        [pbr::OriginalName("GCS_COLUMNS")] GcsColumns = 2,
        /// <summary>
        /// Schema tailored to findings from scanning Google Datastore.
        /// </summary>
        [pbr::OriginalName("DATASTORE_COLUMNS")] DatastoreColumns = 3,
        /// <summary>
        /// Schema tailored to findings from scanning Google BigQuery.
        /// </summary>
        [pbr::OriginalName("BIG_QUERY_COLUMNS")] BigQueryColumns = 4,
        /// <summary>
        /// Schema containing all columns.
        /// </summary>
        [pbr::OriginalName("ALL_COLUMNS")] AllColumns = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Statistics regarding a specific InfoType.
  /// </summary>
  public sealed partial class InfoTypeStats : pb::IMessage<InfoTypeStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfoTypeStats> _parser = new pb::MessageParser<InfoTypeStats>(() => new InfoTypeStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InfoTypeStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoTypeStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoTypeStats(InfoTypeStats other) : this() {
      infoType_ = other.infoType_ != null ? other.infoType_.Clone() : null;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoTypeStats Clone() {
      return new InfoTypeStats(this);
    }

    /// <summary>Field number for the "info_type" field.</summary>
    public const int InfoTypeFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.InfoType infoType_;
    /// <summary>
    /// The type of finding this stat is for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InfoType InfoType {
      get { return infoType_; }
      set {
        infoType_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private long count_;
    /// <summary>
    /// Number of findings for this infoType.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InfoTypeStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InfoTypeStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InfoType, other.InfoType)) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (infoType_ != null) hash ^= InfoType.GetHashCode();
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (infoType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InfoType);
      }
      if (Count != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (infoType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InfoType);
      }
      if (Count != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (infoType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoType);
      }
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InfoTypeStats other) {
      if (other == null) {
        return;
      }
      if (other.infoType_ != null) {
        if (infoType_ == null) {
          InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
        }
        InfoType.MergeFrom(other.InfoType);
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (infoType_ == null) {
              InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
            }
            input.ReadMessage(InfoType);
            break;
          }
          case 16: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (infoType_ == null) {
              InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
            }
            input.ReadMessage(InfoType);
            break;
          }
          case 16: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The results of an inspect DataSource job.
  /// </summary>
  public sealed partial class InspectDataSourceDetails : pb::IMessage<InspectDataSourceDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InspectDataSourceDetails> _parser = new pb::MessageParser<InspectDataSourceDetails>(() => new InspectDataSourceDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InspectDataSourceDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectDataSourceDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectDataSourceDetails(InspectDataSourceDetails other) : this() {
      requestedOptions_ = other.requestedOptions_ != null ? other.requestedOptions_.Clone() : null;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectDataSourceDetails Clone() {
      return new InspectDataSourceDetails(this);
    }

    /// <summary>Field number for the "requested_options" field.</summary>
    public const int RequestedOptionsFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.RequestedOptions requestedOptions_;
    /// <summary>
    /// The configuration used for this job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.RequestedOptions RequestedOptions {
      get { return requestedOptions_; }
      set {
        requestedOptions_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.Result result_;
    /// <summary>
    /// A summary of the outcome of this inspect job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InspectDataSourceDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InspectDataSourceDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestedOptions, other.RequestedOptions)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestedOptions_ != null) hash ^= RequestedOptions.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (requestedOptions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestedOptions);
      }
      if (result_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (requestedOptions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestedOptions);
      }
      if (result_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestedOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestedOptions);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InspectDataSourceDetails other) {
      if (other == null) {
        return;
      }
      if (other.requestedOptions_ != null) {
        if (requestedOptions_ == null) {
          RequestedOptions = new global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.RequestedOptions();
        }
        RequestedOptions.MergeFrom(other.RequestedOptions);
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.Result();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (requestedOptions_ == null) {
              RequestedOptions = new global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.RequestedOptions();
            }
            input.ReadMessage(RequestedOptions);
            break;
          }
          case 26: {
            if (result_ == null) {
              Result = new global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.Result();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (requestedOptions_ == null) {
              RequestedOptions = new global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.RequestedOptions();
            }
            input.ReadMessage(RequestedOptions);
            break;
          }
          case 26: {
            if (result_ == null) {
              Result = new global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Types.Result();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the InspectDataSourceDetails message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Snapshot of the inspection configuration.
      /// </summary>
      public sealed partial class RequestedOptions : pb::IMessage<RequestedOptions>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RequestedOptions> _parser = new pb::MessageParser<RequestedOptions>(() => new RequestedOptions());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RequestedOptions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestedOptions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestedOptions(RequestedOptions other) : this() {
          snapshotInspectTemplate_ = other.snapshotInspectTemplate_ != null ? other.snapshotInspectTemplate_.Clone() : null;
          jobConfig_ = other.jobConfig_ != null ? other.jobConfig_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestedOptions Clone() {
          return new RequestedOptions(this);
        }

        /// <summary>Field number for the "snapshot_inspect_template" field.</summary>
        public const int SnapshotInspectTemplateFieldNumber = 1;
        private global::Google.Cloud.Dlp.V2.InspectTemplate snapshotInspectTemplate_;
        /// <summary>
        /// If run with an InspectTemplate, a snapshot of its state at the time of
        /// this run.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.InspectTemplate SnapshotInspectTemplate {
          get { return snapshotInspectTemplate_; }
          set {
            snapshotInspectTemplate_ = value;
          }
        }

        /// <summary>Field number for the "job_config" field.</summary>
        public const int JobConfigFieldNumber = 3;
        private global::Google.Cloud.Dlp.V2.InspectJobConfig jobConfig_;
        /// <summary>
        /// Inspect config.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.InspectJobConfig JobConfig {
          get { return jobConfig_; }
          set {
            jobConfig_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RequestedOptions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RequestedOptions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(SnapshotInspectTemplate, other.SnapshotInspectTemplate)) return false;
          if (!object.Equals(JobConfig, other.JobConfig)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (snapshotInspectTemplate_ != null) hash ^= SnapshotInspectTemplate.GetHashCode();
          if (jobConfig_ != null) hash ^= JobConfig.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (snapshotInspectTemplate_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(SnapshotInspectTemplate);
          }
          if (jobConfig_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(JobConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (snapshotInspectTemplate_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(SnapshotInspectTemplate);
          }
          if (jobConfig_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(JobConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (snapshotInspectTemplate_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SnapshotInspectTemplate);
          }
          if (jobConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobConfig);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RequestedOptions other) {
          if (other == null) {
            return;
          }
          if (other.snapshotInspectTemplate_ != null) {
            if (snapshotInspectTemplate_ == null) {
              SnapshotInspectTemplate = new global::Google.Cloud.Dlp.V2.InspectTemplate();
            }
            SnapshotInspectTemplate.MergeFrom(other.SnapshotInspectTemplate);
          }
          if (other.jobConfig_ != null) {
            if (jobConfig_ == null) {
              JobConfig = new global::Google.Cloud.Dlp.V2.InspectJobConfig();
            }
            JobConfig.MergeFrom(other.JobConfig);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (snapshotInspectTemplate_ == null) {
                  SnapshotInspectTemplate = new global::Google.Cloud.Dlp.V2.InspectTemplate();
                }
                input.ReadMessage(SnapshotInspectTemplate);
                break;
              }
              case 26: {
                if (jobConfig_ == null) {
                  JobConfig = new global::Google.Cloud.Dlp.V2.InspectJobConfig();
                }
                input.ReadMessage(JobConfig);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (snapshotInspectTemplate_ == null) {
                  SnapshotInspectTemplate = new global::Google.Cloud.Dlp.V2.InspectTemplate();
                }
                input.ReadMessage(SnapshotInspectTemplate);
                break;
              }
              case 26: {
                if (jobConfig_ == null) {
                  JobConfig = new global::Google.Cloud.Dlp.V2.InspectJobConfig();
                }
                input.ReadMessage(JobConfig);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// All result fields mentioned below are updated while the job is processing.
      /// </summary>
      public sealed partial class Result : pb::IMessage<Result>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Result> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.InspectDataSourceDetails.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result(Result other) : this() {
          processedBytes_ = other.processedBytes_;
          totalEstimatedBytes_ = other.totalEstimatedBytes_;
          infoTypeStats_ = other.infoTypeStats_.Clone();
          hybridStats_ = other.hybridStats_ != null ? other.hybridStats_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result Clone() {
          return new Result(this);
        }

        /// <summary>Field number for the "processed_bytes" field.</summary>
        public const int ProcessedBytesFieldNumber = 1;
        private long processedBytes_;
        /// <summary>
        /// Total size in bytes that were processed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ProcessedBytes {
          get { return processedBytes_; }
          set {
            processedBytes_ = value;
          }
        }

        /// <summary>Field number for the "total_estimated_bytes" field.</summary>
        public const int TotalEstimatedBytesFieldNumber = 2;
        private long totalEstimatedBytes_;
        /// <summary>
        /// Estimate of the number of bytes to process.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TotalEstimatedBytes {
          get { return totalEstimatedBytes_; }
          set {
            totalEstimatedBytes_ = value;
          }
        }

        /// <summary>Field number for the "info_type_stats" field.</summary>
        public const int InfoTypeStatsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.InfoTypeStats> _repeated_infoTypeStats_codec
            = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Dlp.V2.InfoTypeStats.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoTypeStats> infoTypeStats_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoTypeStats>();
        /// <summary>
        /// Statistics of how many instances of each info type were found during
        /// inspect job.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoTypeStats> InfoTypeStats {
          get { return infoTypeStats_; }
        }

        /// <summary>Field number for the "hybrid_stats" field.</summary>
        public const int HybridStatsFieldNumber = 7;
        private global::Google.Cloud.Dlp.V2.HybridInspectStatistics hybridStats_;
        /// <summary>
        /// Statistics related to the processing of hybrid inspect.
        /// Early access feature is in a pre-release state and might change or have
        /// limited support. For more information, see
        /// https://cloud.google.com/products#product-launch-stages.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.HybridInspectStatistics HybridStats {
          get { return hybridStats_; }
          set {
            hybridStats_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Result);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Result other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProcessedBytes != other.ProcessedBytes) return false;
          if (TotalEstimatedBytes != other.TotalEstimatedBytes) return false;
          if(!infoTypeStats_.Equals(other.infoTypeStats_)) return false;
          if (!object.Equals(HybridStats, other.HybridStats)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ProcessedBytes != 0L) hash ^= ProcessedBytes.GetHashCode();
          if (TotalEstimatedBytes != 0L) hash ^= TotalEstimatedBytes.GetHashCode();
          hash ^= infoTypeStats_.GetHashCode();
          if (hybridStats_ != null) hash ^= HybridStats.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ProcessedBytes != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ProcessedBytes);
          }
          if (TotalEstimatedBytes != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(TotalEstimatedBytes);
          }
          infoTypeStats_.WriteTo(output, _repeated_infoTypeStats_codec);
          if (hybridStats_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(HybridStats);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ProcessedBytes != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ProcessedBytes);
          }
          if (TotalEstimatedBytes != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(TotalEstimatedBytes);
          }
          infoTypeStats_.WriteTo(ref output, _repeated_infoTypeStats_codec);
          if (hybridStats_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(HybridStats);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ProcessedBytes != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessedBytes);
          }
          if (TotalEstimatedBytes != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalEstimatedBytes);
          }
          size += infoTypeStats_.CalculateSize(_repeated_infoTypeStats_codec);
          if (hybridStats_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(HybridStats);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Result other) {
          if (other == null) {
            return;
          }
          if (other.ProcessedBytes != 0L) {
            ProcessedBytes = other.ProcessedBytes;
          }
          if (other.TotalEstimatedBytes != 0L) {
            TotalEstimatedBytes = other.TotalEstimatedBytes;
          }
          infoTypeStats_.Add(other.infoTypeStats_);
          if (other.hybridStats_ != null) {
            if (hybridStats_ == null) {
              HybridStats = new global::Google.Cloud.Dlp.V2.HybridInspectStatistics();
            }
            HybridStats.MergeFrom(other.HybridStats);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ProcessedBytes = input.ReadInt64();
                break;
              }
              case 16: {
                TotalEstimatedBytes = input.ReadInt64();
                break;
              }
              case 26: {
                infoTypeStats_.AddEntriesFrom(input, _repeated_infoTypeStats_codec);
                break;
              }
              case 58: {
                if (hybridStats_ == null) {
                  HybridStats = new global::Google.Cloud.Dlp.V2.HybridInspectStatistics();
                }
                input.ReadMessage(HybridStats);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ProcessedBytes = input.ReadInt64();
                break;
              }
              case 16: {
                TotalEstimatedBytes = input.ReadInt64();
                break;
              }
              case 26: {
                infoTypeStats_.AddEntriesFrom(ref input, _repeated_infoTypeStats_codec);
                break;
              }
              case 58: {
                if (hybridStats_ == null) {
                  HybridStats = new global::Google.Cloud.Dlp.V2.HybridInspectStatistics();
                }
                input.ReadMessage(HybridStats);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Statistics related to processing hybrid inspect requests.
  /// </summary>
  public sealed partial class HybridInspectStatistics : pb::IMessage<HybridInspectStatistics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HybridInspectStatistics> _parser = new pb::MessageParser<HybridInspectStatistics>(() => new HybridInspectStatistics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HybridInspectStatistics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridInspectStatistics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridInspectStatistics(HybridInspectStatistics other) : this() {
      processedCount_ = other.processedCount_;
      abortedCount_ = other.abortedCount_;
      pendingCount_ = other.pendingCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridInspectStatistics Clone() {
      return new HybridInspectStatistics(this);
    }

    /// <summary>Field number for the "processed_count" field.</summary>
    public const int ProcessedCountFieldNumber = 1;
    private long processedCount_;
    /// <summary>
    /// The number of hybrid inspection requests processed within this job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProcessedCount {
      get { return processedCount_; }
      set {
        processedCount_ = value;
      }
    }

    /// <summary>Field number for the "aborted_count" field.</summary>
    public const int AbortedCountFieldNumber = 2;
    private long abortedCount_;
    /// <summary>
    /// The number of hybrid inspection requests aborted because the job ran
    /// out of quota or was ended before they could be processed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AbortedCount {
      get { return abortedCount_; }
      set {
        abortedCount_ = value;
      }
    }

    /// <summary>Field number for the "pending_count" field.</summary>
    public const int PendingCountFieldNumber = 3;
    private long pendingCount_;
    /// <summary>
    /// The number of hybrid requests currently being processed. Only populated
    /// when called via method `getDlpJob`.
    /// A burst of traffic may cause hybrid inspect requests to be enqueued.
    /// Processing will take place as quickly as possible, but resource limitations
    /// may impact how long a request is enqueued for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PendingCount {
      get { return pendingCount_; }
      set {
        pendingCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HybridInspectStatistics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HybridInspectStatistics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProcessedCount != other.ProcessedCount) return false;
      if (AbortedCount != other.AbortedCount) return false;
      if (PendingCount != other.PendingCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProcessedCount != 0L) hash ^= ProcessedCount.GetHashCode();
      if (AbortedCount != 0L) hash ^= AbortedCount.GetHashCode();
      if (PendingCount != 0L) hash ^= PendingCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProcessedCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProcessedCount);
      }
      if (AbortedCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AbortedCount);
      }
      if (PendingCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PendingCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProcessedCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProcessedCount);
      }
      if (AbortedCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AbortedCount);
      }
      if (PendingCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PendingCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProcessedCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProcessedCount);
      }
      if (AbortedCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AbortedCount);
      }
      if (PendingCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PendingCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HybridInspectStatistics other) {
      if (other == null) {
        return;
      }
      if (other.ProcessedCount != 0L) {
        ProcessedCount = other.ProcessedCount;
      }
      if (other.AbortedCount != 0L) {
        AbortedCount = other.AbortedCount;
      }
      if (other.PendingCount != 0L) {
        PendingCount = other.PendingCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProcessedCount = input.ReadInt64();
            break;
          }
          case 16: {
            AbortedCount = input.ReadInt64();
            break;
          }
          case 24: {
            PendingCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProcessedCount = input.ReadInt64();
            break;
          }
          case 16: {
            AbortedCount = input.ReadInt64();
            break;
          }
          case 24: {
            PendingCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// InfoType description.
  /// </summary>
  public sealed partial class InfoTypeDescription : pb::IMessage<InfoTypeDescription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfoTypeDescription> _parser = new pb::MessageParser<InfoTypeDescription>(() => new InfoTypeDescription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InfoTypeDescription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoTypeDescription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoTypeDescription(InfoTypeDescription other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      supportedBy_ = other.supportedBy_.Clone();
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoTypeDescription Clone() {
      return new InfoTypeDescription(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Internal name of the infoType.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// Human readable form of the infoType name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "supported_by" field.</summary>
    public const int SupportedByFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.InfoTypeSupportedBy> _repeated_supportedBy_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Google.Cloud.Dlp.V2.InfoTypeSupportedBy) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoTypeSupportedBy> supportedBy_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoTypeSupportedBy>();
    /// <summary>
    /// Which parts of the API supports this InfoType.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoTypeSupportedBy> SupportedBy {
      get { return supportedBy_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// Description of the infotype. Translated when language is provided in the
    /// request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InfoTypeDescription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InfoTypeDescription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if(!supportedBy_.Equals(other.supportedBy_)) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      hash ^= supportedBy_.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      supportedBy_.WriteTo(output, _repeated_supportedBy_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      supportedBy_.WriteTo(ref output, _repeated_supportedBy_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      size += supportedBy_.CalculateSize(_repeated_supportedBy_codec);
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InfoTypeDescription other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      supportedBy_.Add(other.supportedBy_);
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            supportedBy_.AddEntriesFrom(input, _repeated_supportedBy_codec);
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            supportedBy_.AddEntriesFrom(ref input, _repeated_supportedBy_codec);
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the list of infoTypes.
  /// </summary>
  public sealed partial class ListInfoTypesRequest : pb::IMessage<ListInfoTypesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListInfoTypesRequest> _parser = new pb::MessageParser<ListInfoTypesRequest>(() => new ListInfoTypesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListInfoTypesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInfoTypesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInfoTypesRequest(ListInfoTypesRequest other) : this() {
      parent_ = other.parent_;
      languageCode_ = other.languageCode_;
      filter_ = other.filter_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInfoTypesRequest Clone() {
      return new ListInfoTypesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 4;
    private string parent_ = "";
    /// <summary>
    /// The parent resource name.
    ///
    /// The format of this value is as follows:
    ///
    ///     locations/&lt;var>LOCATION_ID&lt;/var>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 1;
    private string languageCode_ = "";
    /// <summary>
    /// BCP-47 language code for localized infoType friendly
    /// names. If omitted, or if localized strings are not available,
    /// en-US strings will be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    /// <summary>
    /// filter to only return infoTypes supported by certain parts of the
    /// API. Defaults to supported_by=INSPECT.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 3;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListInfoTypesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListInfoTypesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (LanguageCode != other.LanguageCode) return false;
      if (Filter != other.Filter) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LanguageCode);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LocationId);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LanguageCode);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LocationId);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListInfoTypesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LanguageCode = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 26: {
            LocationId = input.ReadString();
            break;
          }
          case 34: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LanguageCode = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 26: {
            LocationId = input.ReadString();
            break;
          }
          case 34: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to the ListInfoTypes request.
  /// </summary>
  public sealed partial class ListInfoTypesResponse : pb::IMessage<ListInfoTypesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListInfoTypesResponse> _parser = new pb::MessageParser<ListInfoTypesResponse>(() => new ListInfoTypesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListInfoTypesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInfoTypesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInfoTypesResponse(ListInfoTypesResponse other) : this() {
      infoTypes_ = other.infoTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInfoTypesResponse Clone() {
      return new ListInfoTypesResponse(this);
    }

    /// <summary>Field number for the "info_types" field.</summary>
    public const int InfoTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.InfoTypeDescription> _repeated_infoTypes_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.InfoTypeDescription.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoTypeDescription> infoTypes_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoTypeDescription>();
    /// <summary>
    /// Set of sensitive infoTypes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoTypeDescription> InfoTypes {
      get { return infoTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListInfoTypesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListInfoTypesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!infoTypes_.Equals(other.infoTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= infoTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      infoTypes_.WriteTo(output, _repeated_infoTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      infoTypes_.WriteTo(ref output, _repeated_infoTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += infoTypes_.CalculateSize(_repeated_infoTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListInfoTypesResponse other) {
      if (other == null) {
        return;
      }
      infoTypes_.Add(other.infoTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            infoTypes_.AddEntriesFrom(input, _repeated_infoTypes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            infoTypes_.AddEntriesFrom(ref input, _repeated_infoTypes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Configuration for a risk analysis job. See
  /// https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.
  /// </summary>
  public sealed partial class RiskAnalysisJobConfig : pb::IMessage<RiskAnalysisJobConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RiskAnalysisJobConfig> _parser = new pb::MessageParser<RiskAnalysisJobConfig>(() => new RiskAnalysisJobConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RiskAnalysisJobConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RiskAnalysisJobConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RiskAnalysisJobConfig(RiskAnalysisJobConfig other) : this() {
      privacyMetric_ = other.privacyMetric_ != null ? other.privacyMetric_.Clone() : null;
      sourceTable_ = other.sourceTable_ != null ? other.sourceTable_.Clone() : null;
      actions_ = other.actions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RiskAnalysisJobConfig Clone() {
      return new RiskAnalysisJobConfig(this);
    }

    /// <summary>Field number for the "privacy_metric" field.</summary>
    public const int PrivacyMetricFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.PrivacyMetric privacyMetric_;
    /// <summary>
    /// Privacy metric to compute.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.PrivacyMetric PrivacyMetric {
      get { return privacyMetric_; }
      set {
        privacyMetric_ = value;
      }
    }

    /// <summary>Field number for the "source_table" field.</summary>
    public const int SourceTableFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.BigQueryTable sourceTable_;
    /// <summary>
    /// Input dataset to compute metrics over.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.BigQueryTable SourceTable {
      get { return sourceTable_; }
      set {
        sourceTable_ = value;
      }
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Action> _repeated_actions_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Dlp.V2.Action.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Action> actions_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Action>();
    /// <summary>
    /// Actions to execute at the completion of the job. Are executed in the order
    /// provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Action> Actions {
      get { return actions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RiskAnalysisJobConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RiskAnalysisJobConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PrivacyMetric, other.PrivacyMetric)) return false;
      if (!object.Equals(SourceTable, other.SourceTable)) return false;
      if(!actions_.Equals(other.actions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (privacyMetric_ != null) hash ^= PrivacyMetric.GetHashCode();
      if (sourceTable_ != null) hash ^= SourceTable.GetHashCode();
      hash ^= actions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (privacyMetric_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrivacyMetric);
      }
      if (sourceTable_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SourceTable);
      }
      actions_.WriteTo(output, _repeated_actions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (privacyMetric_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrivacyMetric);
      }
      if (sourceTable_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SourceTable);
      }
      actions_.WriteTo(ref output, _repeated_actions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (privacyMetric_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrivacyMetric);
      }
      if (sourceTable_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourceTable);
      }
      size += actions_.CalculateSize(_repeated_actions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RiskAnalysisJobConfig other) {
      if (other == null) {
        return;
      }
      if (other.privacyMetric_ != null) {
        if (privacyMetric_ == null) {
          PrivacyMetric = new global::Google.Cloud.Dlp.V2.PrivacyMetric();
        }
        PrivacyMetric.MergeFrom(other.PrivacyMetric);
      }
      if (other.sourceTable_ != null) {
        if (sourceTable_ == null) {
          SourceTable = new global::Google.Cloud.Dlp.V2.BigQueryTable();
        }
        SourceTable.MergeFrom(other.SourceTable);
      }
      actions_.Add(other.actions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (privacyMetric_ == null) {
              PrivacyMetric = new global::Google.Cloud.Dlp.V2.PrivacyMetric();
            }
            input.ReadMessage(PrivacyMetric);
            break;
          }
          case 18: {
            if (sourceTable_ == null) {
              SourceTable = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            }
            input.ReadMessage(SourceTable);
            break;
          }
          case 26: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (privacyMetric_ == null) {
              PrivacyMetric = new global::Google.Cloud.Dlp.V2.PrivacyMetric();
            }
            input.ReadMessage(PrivacyMetric);
            break;
          }
          case 18: {
            if (sourceTable_ == null) {
              SourceTable = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            }
            input.ReadMessage(SourceTable);
            break;
          }
          case 26: {
            actions_.AddEntriesFrom(ref input, _repeated_actions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A column with a semantic tag attached.
  /// </summary>
  public sealed partial class QuasiId : pb::IMessage<QuasiId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuasiId> _parser = new pb::MessageParser<QuasiId>(() => new QuasiId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuasiId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuasiId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuasiId(QuasiId other) : this() {
      field_ = other.field_ != null ? other.field_.Clone() : null;
      switch (other.TagCase) {
        case TagOneofCase.InfoType:
          InfoType = other.InfoType.Clone();
          break;
        case TagOneofCase.CustomTag:
          CustomTag = other.CustomTag;
          break;
        case TagOneofCase.Inferred:
          Inferred = other.Inferred.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuasiId Clone() {
      return new QuasiId(this);
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.FieldId field_;
    /// <summary>
    /// Required. Identifies the column.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.FieldId Field {
      get { return field_; }
      set {
        field_ = value;
      }
    }

    /// <summary>Field number for the "info_type" field.</summary>
    public const int InfoTypeFieldNumber = 2;
    /// <summary>
    /// A column can be tagged with a InfoType to use the relevant public
    /// dataset as a statistical model of population, if available. We
    /// currently support US ZIP codes, region codes, ages and genders.
    /// To programmatically obtain the list of supported InfoTypes, use
    /// ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InfoType InfoType {
      get { return tagCase_ == TagOneofCase.InfoType ? (global::Google.Cloud.Dlp.V2.InfoType) tag_ : null; }
      set {
        tag_ = value;
        tagCase_ = value == null ? TagOneofCase.None : TagOneofCase.InfoType;
      }
    }

    /// <summary>Field number for the "custom_tag" field.</summary>
    public const int CustomTagFieldNumber = 3;
    /// <summary>
    /// A column can be tagged with a custom tag. In this case, the user must
    /// indicate an auxiliary table that contains statistical information on
    /// the possible values of this column (below).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomTag {
      get { return tagCase_ == TagOneofCase.CustomTag ? (string) tag_ : ""; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        tagCase_ = TagOneofCase.CustomTag;
      }
    }

    /// <summary>Field number for the "inferred" field.</summary>
    public const int InferredFieldNumber = 4;
    /// <summary>
    /// If no semantic tag is indicated, we infer the statistical model from
    /// the distribution of values in the input data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Empty Inferred {
      get { return tagCase_ == TagOneofCase.Inferred ? (global::Google.Protobuf.WellKnownTypes.Empty) tag_ : null; }
      set {
        tag_ = value;
        tagCase_ = value == null ? TagOneofCase.None : TagOneofCase.Inferred;
      }
    }

    private object tag_;
    /// <summary>Enum of possible cases for the "tag" oneof.</summary>
    public enum TagOneofCase {
      None = 0,
      InfoType = 2,
      CustomTag = 3,
      Inferred = 4,
    }
    private TagOneofCase tagCase_ = TagOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagOneofCase TagCase {
      get { return tagCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTag() {
      tagCase_ = TagOneofCase.None;
      tag_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuasiId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuasiId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Field, other.Field)) return false;
      if (!object.Equals(InfoType, other.InfoType)) return false;
      if (CustomTag != other.CustomTag) return false;
      if (!object.Equals(Inferred, other.Inferred)) return false;
      if (TagCase != other.TagCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (field_ != null) hash ^= Field.GetHashCode();
      if (tagCase_ == TagOneofCase.InfoType) hash ^= InfoType.GetHashCode();
      if (tagCase_ == TagOneofCase.CustomTag) hash ^= CustomTag.GetHashCode();
      if (tagCase_ == TagOneofCase.Inferred) hash ^= Inferred.GetHashCode();
      hash ^= (int) tagCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (field_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Field);
      }
      if (tagCase_ == TagOneofCase.InfoType) {
        output.WriteRawTag(18);
        output.WriteMessage(InfoType);
      }
      if (tagCase_ == TagOneofCase.CustomTag) {
        output.WriteRawTag(26);
        output.WriteString(CustomTag);
      }
      if (tagCase_ == TagOneofCase.Inferred) {
        output.WriteRawTag(34);
        output.WriteMessage(Inferred);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (field_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Field);
      }
      if (tagCase_ == TagOneofCase.InfoType) {
        output.WriteRawTag(18);
        output.WriteMessage(InfoType);
      }
      if (tagCase_ == TagOneofCase.CustomTag) {
        output.WriteRawTag(26);
        output.WriteString(CustomTag);
      }
      if (tagCase_ == TagOneofCase.Inferred) {
        output.WriteRawTag(34);
        output.WriteMessage(Inferred);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (field_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
      }
      if (tagCase_ == TagOneofCase.InfoType) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoType);
      }
      if (tagCase_ == TagOneofCase.CustomTag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomTag);
      }
      if (tagCase_ == TagOneofCase.Inferred) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inferred);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuasiId other) {
      if (other == null) {
        return;
      }
      if (other.field_ != null) {
        if (field_ == null) {
          Field = new global::Google.Cloud.Dlp.V2.FieldId();
        }
        Field.MergeFrom(other.Field);
      }
      switch (other.TagCase) {
        case TagOneofCase.InfoType:
          if (InfoType == null) {
            InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
          }
          InfoType.MergeFrom(other.InfoType);
          break;
        case TagOneofCase.CustomTag:
          CustomTag = other.CustomTag;
          break;
        case TagOneofCase.Inferred:
          if (Inferred == null) {
            Inferred = new global::Google.Protobuf.WellKnownTypes.Empty();
          }
          Inferred.MergeFrom(other.Inferred);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (field_ == null) {
              Field = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Field);
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.InfoType subBuilder = new global::Google.Cloud.Dlp.V2.InfoType();
            if (tagCase_ == TagOneofCase.InfoType) {
              subBuilder.MergeFrom(InfoType);
            }
            input.ReadMessage(subBuilder);
            InfoType = subBuilder;
            break;
          }
          case 26: {
            CustomTag = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (tagCase_ == TagOneofCase.Inferred) {
              subBuilder.MergeFrom(Inferred);
            }
            input.ReadMessage(subBuilder);
            Inferred = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (field_ == null) {
              Field = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Field);
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.InfoType subBuilder = new global::Google.Cloud.Dlp.V2.InfoType();
            if (tagCase_ == TagOneofCase.InfoType) {
              subBuilder.MergeFrom(InfoType);
            }
            input.ReadMessage(subBuilder);
            InfoType = subBuilder;
            break;
          }
          case 26: {
            CustomTag = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (tagCase_ == TagOneofCase.Inferred) {
              subBuilder.MergeFrom(Inferred);
            }
            input.ReadMessage(subBuilder);
            Inferred = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An auxiliary table containing statistical information on the relative
  /// frequency of different quasi-identifiers values. It has one or several
  /// quasi-identifiers columns, and one column that indicates the relative
  /// frequency of each quasi-identifier tuple.
  /// If a tuple is present in the data but not in the auxiliary table, the
  /// corresponding relative frequency is assumed to be zero (and thus, the
  /// tuple is highly reidentifiable).
  /// </summary>
  public sealed partial class StatisticalTable : pb::IMessage<StatisticalTable>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatisticalTable> _parser = new pb::MessageParser<StatisticalTable>(() => new StatisticalTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatisticalTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatisticalTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatisticalTable(StatisticalTable other) : this() {
      table_ = other.table_ != null ? other.table_.Clone() : null;
      quasiIds_ = other.quasiIds_.Clone();
      relativeFrequency_ = other.relativeFrequency_ != null ? other.relativeFrequency_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatisticalTable Clone() {
      return new StatisticalTable(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.BigQueryTable table_;
    /// <summary>
    /// Required. Auxiliary table location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.BigQueryTable Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    /// <summary>Field number for the "quasi_ids" field.</summary>
    public const int QuasiIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.StatisticalTable.Types.QuasiIdentifierField> _repeated_quasiIds_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.StatisticalTable.Types.QuasiIdentifierField.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.StatisticalTable.Types.QuasiIdentifierField> quasiIds_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.StatisticalTable.Types.QuasiIdentifierField>();
    /// <summary>
    /// Required. Quasi-identifier columns.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.StatisticalTable.Types.QuasiIdentifierField> QuasiIds {
      get { return quasiIds_; }
    }

    /// <summary>Field number for the "relative_frequency" field.</summary>
    public const int RelativeFrequencyFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.FieldId relativeFrequency_;
    /// <summary>
    /// Required. The relative frequency column must contain a floating-point number
    /// between 0 and 1 (inclusive). Null values are assumed to be zero.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.FieldId RelativeFrequency {
      get { return relativeFrequency_; }
      set {
        relativeFrequency_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatisticalTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatisticalTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      if(!quasiIds_.Equals(other.quasiIds_)) return false;
      if (!object.Equals(RelativeFrequency, other.RelativeFrequency)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      hash ^= quasiIds_.GetHashCode();
      if (relativeFrequency_ != null) hash ^= RelativeFrequency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      quasiIds_.WriteTo(output, _repeated_quasiIds_codec);
      if (relativeFrequency_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RelativeFrequency);
      }
      if (table_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Table);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      quasiIds_.WriteTo(ref output, _repeated_quasiIds_codec);
      if (relativeFrequency_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RelativeFrequency);
      }
      if (table_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Table);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      size += quasiIds_.CalculateSize(_repeated_quasiIds_codec);
      if (relativeFrequency_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelativeFrequency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatisticalTable other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Google.Cloud.Dlp.V2.BigQueryTable();
        }
        Table.MergeFrom(other.Table);
      }
      quasiIds_.Add(other.quasiIds_);
      if (other.relativeFrequency_ != null) {
        if (relativeFrequency_ == null) {
          RelativeFrequency = new global::Google.Cloud.Dlp.V2.FieldId();
        }
        RelativeFrequency.MergeFrom(other.RelativeFrequency);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            quasiIds_.AddEntriesFrom(input, _repeated_quasiIds_codec);
            break;
          }
          case 18: {
            if (relativeFrequency_ == null) {
              RelativeFrequency = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(RelativeFrequency);
            break;
          }
          case 26: {
            if (table_ == null) {
              Table = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            }
            input.ReadMessage(Table);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            quasiIds_.AddEntriesFrom(ref input, _repeated_quasiIds_codec);
            break;
          }
          case 18: {
            if (relativeFrequency_ == null) {
              RelativeFrequency = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(RelativeFrequency);
            break;
          }
          case 26: {
            if (table_ == null) {
              Table = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            }
            input.ReadMessage(Table);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StatisticalTable message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A quasi-identifier column has a custom_tag, used to know which column
      /// in the data corresponds to which column in the statistical model.
      /// </summary>
      public sealed partial class QuasiIdentifierField : pb::IMessage<QuasiIdentifierField>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QuasiIdentifierField> _parser = new pb::MessageParser<QuasiIdentifierField>(() => new QuasiIdentifierField());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<QuasiIdentifierField> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.StatisticalTable.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QuasiIdentifierField() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QuasiIdentifierField(QuasiIdentifierField other) : this() {
          field_ = other.field_ != null ? other.field_.Clone() : null;
          customTag_ = other.customTag_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QuasiIdentifierField Clone() {
          return new QuasiIdentifierField(this);
        }

        /// <summary>Field number for the "field" field.</summary>
        public const int FieldFieldNumber = 1;
        private global::Google.Cloud.Dlp.V2.FieldId field_;
        /// <summary>
        /// Identifies the column.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.FieldId Field {
          get { return field_; }
          set {
            field_ = value;
          }
        }

        /// <summary>Field number for the "custom_tag" field.</summary>
        public const int CustomTagFieldNumber = 2;
        private string customTag_ = "";
        /// <summary>
        /// A column can be tagged with a custom tag. In this case, the user must
        /// indicate an auxiliary table that contains statistical information on
        /// the possible values of this column (below).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CustomTag {
          get { return customTag_; }
          set {
            customTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as QuasiIdentifierField);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(QuasiIdentifierField other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Field, other.Field)) return false;
          if (CustomTag != other.CustomTag) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (field_ != null) hash ^= Field.GetHashCode();
          if (CustomTag.Length != 0) hash ^= CustomTag.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (field_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Field);
          }
          if (CustomTag.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CustomTag);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (field_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Field);
          }
          if (CustomTag.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CustomTag);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (field_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
          }
          if (CustomTag.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomTag);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(QuasiIdentifierField other) {
          if (other == null) {
            return;
          }
          if (other.field_ != null) {
            if (field_ == null) {
              Field = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            Field.MergeFrom(other.Field);
          }
          if (other.CustomTag.Length != 0) {
            CustomTag = other.CustomTag;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (field_ == null) {
                  Field = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                input.ReadMessage(Field);
                break;
              }
              case 18: {
                CustomTag = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (field_ == null) {
                  Field = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                input.ReadMessage(Field);
                break;
              }
              case 18: {
                CustomTag = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Privacy metric to compute for reidentification risk analysis.
  /// </summary>
  public sealed partial class PrivacyMetric : pb::IMessage<PrivacyMetric>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PrivacyMetric> _parser = new pb::MessageParser<PrivacyMetric>(() => new PrivacyMetric());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrivacyMetric> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivacyMetric() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivacyMetric(PrivacyMetric other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.NumericalStatsConfig:
          NumericalStatsConfig = other.NumericalStatsConfig.Clone();
          break;
        case TypeOneofCase.CategoricalStatsConfig:
          CategoricalStatsConfig = other.CategoricalStatsConfig.Clone();
          break;
        case TypeOneofCase.KAnonymityConfig:
          KAnonymityConfig = other.KAnonymityConfig.Clone();
          break;
        case TypeOneofCase.LDiversityConfig:
          LDiversityConfig = other.LDiversityConfig.Clone();
          break;
        case TypeOneofCase.KMapEstimationConfig:
          KMapEstimationConfig = other.KMapEstimationConfig.Clone();
          break;
        case TypeOneofCase.DeltaPresenceEstimationConfig:
          DeltaPresenceEstimationConfig = other.DeltaPresenceEstimationConfig.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivacyMetric Clone() {
      return new PrivacyMetric(this);
    }

    /// <summary>Field number for the "numerical_stats_config" field.</summary>
    public const int NumericalStatsConfigFieldNumber = 1;
    /// <summary>
    /// Numerical stats
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.NumericalStatsConfig NumericalStatsConfig {
      get { return typeCase_ == TypeOneofCase.NumericalStatsConfig ? (global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.NumericalStatsConfig) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.NumericalStatsConfig;
      }
    }

    /// <summary>Field number for the "categorical_stats_config" field.</summary>
    public const int CategoricalStatsConfigFieldNumber = 2;
    /// <summary>
    /// Categorical stats
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.CategoricalStatsConfig CategoricalStatsConfig {
      get { return typeCase_ == TypeOneofCase.CategoricalStatsConfig ? (global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.CategoricalStatsConfig) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.CategoricalStatsConfig;
      }
    }

    /// <summary>Field number for the "k_anonymity_config" field.</summary>
    public const int KAnonymityConfigFieldNumber = 3;
    /// <summary>
    /// K-anonymity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KAnonymityConfig KAnonymityConfig {
      get { return typeCase_ == TypeOneofCase.KAnonymityConfig ? (global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KAnonymityConfig) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.KAnonymityConfig;
      }
    }

    /// <summary>Field number for the "l_diversity_config" field.</summary>
    public const int LDiversityConfigFieldNumber = 4;
    /// <summary>
    /// l-diversity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.LDiversityConfig LDiversityConfig {
      get { return typeCase_ == TypeOneofCase.LDiversityConfig ? (global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.LDiversityConfig) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.LDiversityConfig;
      }
    }

    /// <summary>Field number for the "k_map_estimation_config" field.</summary>
    public const int KMapEstimationConfigFieldNumber = 5;
    /// <summary>
    /// k-map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig KMapEstimationConfig {
      get { return typeCase_ == TypeOneofCase.KMapEstimationConfig ? (global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.KMapEstimationConfig;
      }
    }

    /// <summary>Field number for the "delta_presence_estimation_config" field.</summary>
    public const int DeltaPresenceEstimationConfigFieldNumber = 6;
    /// <summary>
    /// delta-presence
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.DeltaPresenceEstimationConfig DeltaPresenceEstimationConfig {
      get { return typeCase_ == TypeOneofCase.DeltaPresenceEstimationConfig ? (global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.DeltaPresenceEstimationConfig) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.DeltaPresenceEstimationConfig;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      NumericalStatsConfig = 1,
      CategoricalStatsConfig = 2,
      KAnonymityConfig = 3,
      LDiversityConfig = 4,
      KMapEstimationConfig = 5,
      DeltaPresenceEstimationConfig = 6,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrivacyMetric);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrivacyMetric other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NumericalStatsConfig, other.NumericalStatsConfig)) return false;
      if (!object.Equals(CategoricalStatsConfig, other.CategoricalStatsConfig)) return false;
      if (!object.Equals(KAnonymityConfig, other.KAnonymityConfig)) return false;
      if (!object.Equals(LDiversityConfig, other.LDiversityConfig)) return false;
      if (!object.Equals(KMapEstimationConfig, other.KMapEstimationConfig)) return false;
      if (!object.Equals(DeltaPresenceEstimationConfig, other.DeltaPresenceEstimationConfig)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.NumericalStatsConfig) hash ^= NumericalStatsConfig.GetHashCode();
      if (typeCase_ == TypeOneofCase.CategoricalStatsConfig) hash ^= CategoricalStatsConfig.GetHashCode();
      if (typeCase_ == TypeOneofCase.KAnonymityConfig) hash ^= KAnonymityConfig.GetHashCode();
      if (typeCase_ == TypeOneofCase.LDiversityConfig) hash ^= LDiversityConfig.GetHashCode();
      if (typeCase_ == TypeOneofCase.KMapEstimationConfig) hash ^= KMapEstimationConfig.GetHashCode();
      if (typeCase_ == TypeOneofCase.DeltaPresenceEstimationConfig) hash ^= DeltaPresenceEstimationConfig.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (typeCase_ == TypeOneofCase.NumericalStatsConfig) {
        output.WriteRawTag(10);
        output.WriteMessage(NumericalStatsConfig);
      }
      if (typeCase_ == TypeOneofCase.CategoricalStatsConfig) {
        output.WriteRawTag(18);
        output.WriteMessage(CategoricalStatsConfig);
      }
      if (typeCase_ == TypeOneofCase.KAnonymityConfig) {
        output.WriteRawTag(26);
        output.WriteMessage(KAnonymityConfig);
      }
      if (typeCase_ == TypeOneofCase.LDiversityConfig) {
        output.WriteRawTag(34);
        output.WriteMessage(LDiversityConfig);
      }
      if (typeCase_ == TypeOneofCase.KMapEstimationConfig) {
        output.WriteRawTag(42);
        output.WriteMessage(KMapEstimationConfig);
      }
      if (typeCase_ == TypeOneofCase.DeltaPresenceEstimationConfig) {
        output.WriteRawTag(50);
        output.WriteMessage(DeltaPresenceEstimationConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (typeCase_ == TypeOneofCase.NumericalStatsConfig) {
        output.WriteRawTag(10);
        output.WriteMessage(NumericalStatsConfig);
      }
      if (typeCase_ == TypeOneofCase.CategoricalStatsConfig) {
        output.WriteRawTag(18);
        output.WriteMessage(CategoricalStatsConfig);
      }
      if (typeCase_ == TypeOneofCase.KAnonymityConfig) {
        output.WriteRawTag(26);
        output.WriteMessage(KAnonymityConfig);
      }
      if (typeCase_ == TypeOneofCase.LDiversityConfig) {
        output.WriteRawTag(34);
        output.WriteMessage(LDiversityConfig);
      }
      if (typeCase_ == TypeOneofCase.KMapEstimationConfig) {
        output.WriteRawTag(42);
        output.WriteMessage(KMapEstimationConfig);
      }
      if (typeCase_ == TypeOneofCase.DeltaPresenceEstimationConfig) {
        output.WriteRawTag(50);
        output.WriteMessage(DeltaPresenceEstimationConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.NumericalStatsConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NumericalStatsConfig);
      }
      if (typeCase_ == TypeOneofCase.CategoricalStatsConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CategoricalStatsConfig);
      }
      if (typeCase_ == TypeOneofCase.KAnonymityConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KAnonymityConfig);
      }
      if (typeCase_ == TypeOneofCase.LDiversityConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LDiversityConfig);
      }
      if (typeCase_ == TypeOneofCase.KMapEstimationConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KMapEstimationConfig);
      }
      if (typeCase_ == TypeOneofCase.DeltaPresenceEstimationConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeltaPresenceEstimationConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrivacyMetric other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.NumericalStatsConfig:
          if (NumericalStatsConfig == null) {
            NumericalStatsConfig = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.NumericalStatsConfig();
          }
          NumericalStatsConfig.MergeFrom(other.NumericalStatsConfig);
          break;
        case TypeOneofCase.CategoricalStatsConfig:
          if (CategoricalStatsConfig == null) {
            CategoricalStatsConfig = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.CategoricalStatsConfig();
          }
          CategoricalStatsConfig.MergeFrom(other.CategoricalStatsConfig);
          break;
        case TypeOneofCase.KAnonymityConfig:
          if (KAnonymityConfig == null) {
            KAnonymityConfig = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KAnonymityConfig();
          }
          KAnonymityConfig.MergeFrom(other.KAnonymityConfig);
          break;
        case TypeOneofCase.LDiversityConfig:
          if (LDiversityConfig == null) {
            LDiversityConfig = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.LDiversityConfig();
          }
          LDiversityConfig.MergeFrom(other.LDiversityConfig);
          break;
        case TypeOneofCase.KMapEstimationConfig:
          if (KMapEstimationConfig == null) {
            KMapEstimationConfig = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig();
          }
          KMapEstimationConfig.MergeFrom(other.KMapEstimationConfig);
          break;
        case TypeOneofCase.DeltaPresenceEstimationConfig:
          if (DeltaPresenceEstimationConfig == null) {
            DeltaPresenceEstimationConfig = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.DeltaPresenceEstimationConfig();
          }
          DeltaPresenceEstimationConfig.MergeFrom(other.DeltaPresenceEstimationConfig);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.NumericalStatsConfig subBuilder = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.NumericalStatsConfig();
            if (typeCase_ == TypeOneofCase.NumericalStatsConfig) {
              subBuilder.MergeFrom(NumericalStatsConfig);
            }
            input.ReadMessage(subBuilder);
            NumericalStatsConfig = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.CategoricalStatsConfig subBuilder = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.CategoricalStatsConfig();
            if (typeCase_ == TypeOneofCase.CategoricalStatsConfig) {
              subBuilder.MergeFrom(CategoricalStatsConfig);
            }
            input.ReadMessage(subBuilder);
            CategoricalStatsConfig = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KAnonymityConfig subBuilder = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KAnonymityConfig();
            if (typeCase_ == TypeOneofCase.KAnonymityConfig) {
              subBuilder.MergeFrom(KAnonymityConfig);
            }
            input.ReadMessage(subBuilder);
            KAnonymityConfig = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.LDiversityConfig subBuilder = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.LDiversityConfig();
            if (typeCase_ == TypeOneofCase.LDiversityConfig) {
              subBuilder.MergeFrom(LDiversityConfig);
            }
            input.ReadMessage(subBuilder);
            LDiversityConfig = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig subBuilder = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig();
            if (typeCase_ == TypeOneofCase.KMapEstimationConfig) {
              subBuilder.MergeFrom(KMapEstimationConfig);
            }
            input.ReadMessage(subBuilder);
            KMapEstimationConfig = subBuilder;
            break;
          }
          case 50: {
            global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.DeltaPresenceEstimationConfig subBuilder = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.DeltaPresenceEstimationConfig();
            if (typeCase_ == TypeOneofCase.DeltaPresenceEstimationConfig) {
              subBuilder.MergeFrom(DeltaPresenceEstimationConfig);
            }
            input.ReadMessage(subBuilder);
            DeltaPresenceEstimationConfig = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.NumericalStatsConfig subBuilder = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.NumericalStatsConfig();
            if (typeCase_ == TypeOneofCase.NumericalStatsConfig) {
              subBuilder.MergeFrom(NumericalStatsConfig);
            }
            input.ReadMessage(subBuilder);
            NumericalStatsConfig = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.CategoricalStatsConfig subBuilder = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.CategoricalStatsConfig();
            if (typeCase_ == TypeOneofCase.CategoricalStatsConfig) {
              subBuilder.MergeFrom(CategoricalStatsConfig);
            }
            input.ReadMessage(subBuilder);
            CategoricalStatsConfig = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KAnonymityConfig subBuilder = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KAnonymityConfig();
            if (typeCase_ == TypeOneofCase.KAnonymityConfig) {
              subBuilder.MergeFrom(KAnonymityConfig);
            }
            input.ReadMessage(subBuilder);
            KAnonymityConfig = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.LDiversityConfig subBuilder = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.LDiversityConfig();
            if (typeCase_ == TypeOneofCase.LDiversityConfig) {
              subBuilder.MergeFrom(LDiversityConfig);
            }
            input.ReadMessage(subBuilder);
            LDiversityConfig = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig subBuilder = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig();
            if (typeCase_ == TypeOneofCase.KMapEstimationConfig) {
              subBuilder.MergeFrom(KMapEstimationConfig);
            }
            input.ReadMessage(subBuilder);
            KMapEstimationConfig = subBuilder;
            break;
          }
          case 50: {
            global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.DeltaPresenceEstimationConfig subBuilder = new global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.DeltaPresenceEstimationConfig();
            if (typeCase_ == TypeOneofCase.DeltaPresenceEstimationConfig) {
              subBuilder.MergeFrom(DeltaPresenceEstimationConfig);
            }
            input.ReadMessage(subBuilder);
            DeltaPresenceEstimationConfig = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PrivacyMetric message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Compute numerical stats over an individual column, including
      /// min, max, and quantiles.
      /// </summary>
      public sealed partial class NumericalStatsConfig : pb::IMessage<NumericalStatsConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NumericalStatsConfig> _parser = new pb::MessageParser<NumericalStatsConfig>(() => new NumericalStatsConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NumericalStatsConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.PrivacyMetric.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NumericalStatsConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NumericalStatsConfig(NumericalStatsConfig other) : this() {
          field_ = other.field_ != null ? other.field_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NumericalStatsConfig Clone() {
          return new NumericalStatsConfig(this);
        }

        /// <summary>Field number for the "field" field.</summary>
        public const int FieldFieldNumber = 1;
        private global::Google.Cloud.Dlp.V2.FieldId field_;
        /// <summary>
        /// Field to compute numerical stats on. Supported types are
        /// integer, float, date, datetime, timestamp, time.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.FieldId Field {
          get { return field_; }
          set {
            field_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NumericalStatsConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NumericalStatsConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Field, other.Field)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (field_ != null) hash ^= Field.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (field_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Field);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (field_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Field);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (field_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NumericalStatsConfig other) {
          if (other == null) {
            return;
          }
          if (other.field_ != null) {
            if (field_ == null) {
              Field = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            Field.MergeFrom(other.Field);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (field_ == null) {
                  Field = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                input.ReadMessage(Field);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (field_ == null) {
                  Field = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                input.ReadMessage(Field);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Compute numerical stats over an individual column, including
      /// number of distinct values and value count distribution.
      /// </summary>
      public sealed partial class CategoricalStatsConfig : pb::IMessage<CategoricalStatsConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CategoricalStatsConfig> _parser = new pb::MessageParser<CategoricalStatsConfig>(() => new CategoricalStatsConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CategoricalStatsConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.PrivacyMetric.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CategoricalStatsConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CategoricalStatsConfig(CategoricalStatsConfig other) : this() {
          field_ = other.field_ != null ? other.field_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CategoricalStatsConfig Clone() {
          return new CategoricalStatsConfig(this);
        }

        /// <summary>Field number for the "field" field.</summary>
        public const int FieldFieldNumber = 1;
        private global::Google.Cloud.Dlp.V2.FieldId field_;
        /// <summary>
        /// Field to compute categorical stats on. All column types are
        /// supported except for arrays and structs. However, it may be more
        /// informative to use NumericalStats when the field type is supported,
        /// depending on the data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.FieldId Field {
          get { return field_; }
          set {
            field_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CategoricalStatsConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CategoricalStatsConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Field, other.Field)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (field_ != null) hash ^= Field.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (field_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Field);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (field_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Field);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (field_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CategoricalStatsConfig other) {
          if (other == null) {
            return;
          }
          if (other.field_ != null) {
            if (field_ == null) {
              Field = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            Field.MergeFrom(other.Field);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (field_ == null) {
                  Field = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                input.ReadMessage(Field);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (field_ == null) {
                  Field = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                input.ReadMessage(Field);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// k-anonymity metric, used for analysis of reidentification risk.
      /// </summary>
      public sealed partial class KAnonymityConfig : pb::IMessage<KAnonymityConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<KAnonymityConfig> _parser = new pb::MessageParser<KAnonymityConfig>(() => new KAnonymityConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<KAnonymityConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.PrivacyMetric.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KAnonymityConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KAnonymityConfig(KAnonymityConfig other) : this() {
          quasiIds_ = other.quasiIds_.Clone();
          entityId_ = other.entityId_ != null ? other.entityId_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KAnonymityConfig Clone() {
          return new KAnonymityConfig(this);
        }

        /// <summary>Field number for the "quasi_ids" field.</summary>
        public const int QuasiIdsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.FieldId> _repeated_quasiIds_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.FieldId.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> quasiIds_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId>();
        /// <summary>
        /// Set of fields to compute k-anonymity over. When multiple fields are
        /// specified, they are considered a single composite key. Structs and
        /// repeated data types are not supported; however, nested fields are
        /// supported so long as they are not structs themselves or nested within
        /// a repeated field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> QuasiIds {
          get { return quasiIds_; }
        }

        /// <summary>Field number for the "entity_id" field.</summary>
        public const int EntityIdFieldNumber = 2;
        private global::Google.Cloud.Dlp.V2.EntityId entityId_;
        /// <summary>
        /// Message indicating that multiple rows might be associated to a
        /// single individual. If the same entity_id is associated to multiple
        /// quasi-identifier tuples over distinct rows, we consider the entire
        /// collection of tuples as the composite quasi-identifier. This collection
        /// is a multiset: the order in which the different tuples appear in the
        /// dataset is ignored, but their frequency is taken into account.
        ///
        /// Important note: a maximum of 1000 rows can be associated to a single
        /// entity ID. If more rows are associated with the same entity ID, some
        /// might be ignored.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.EntityId EntityId {
          get { return entityId_; }
          set {
            entityId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as KAnonymityConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(KAnonymityConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!quasiIds_.Equals(other.quasiIds_)) return false;
          if (!object.Equals(EntityId, other.EntityId)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= quasiIds_.GetHashCode();
          if (entityId_ != null) hash ^= EntityId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          quasiIds_.WriteTo(output, _repeated_quasiIds_codec);
          if (entityId_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(EntityId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          quasiIds_.WriteTo(ref output, _repeated_quasiIds_codec);
          if (entityId_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(EntityId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += quasiIds_.CalculateSize(_repeated_quasiIds_codec);
          if (entityId_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(KAnonymityConfig other) {
          if (other == null) {
            return;
          }
          quasiIds_.Add(other.quasiIds_);
          if (other.entityId_ != null) {
            if (entityId_ == null) {
              EntityId = new global::Google.Cloud.Dlp.V2.EntityId();
            }
            EntityId.MergeFrom(other.EntityId);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                quasiIds_.AddEntriesFrom(input, _repeated_quasiIds_codec);
                break;
              }
              case 18: {
                if (entityId_ == null) {
                  EntityId = new global::Google.Cloud.Dlp.V2.EntityId();
                }
                input.ReadMessage(EntityId);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                quasiIds_.AddEntriesFrom(ref input, _repeated_quasiIds_codec);
                break;
              }
              case 18: {
                if (entityId_ == null) {
                  EntityId = new global::Google.Cloud.Dlp.V2.EntityId();
                }
                input.ReadMessage(EntityId);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// l-diversity metric, used for analysis of reidentification risk.
      /// </summary>
      public sealed partial class LDiversityConfig : pb::IMessage<LDiversityConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LDiversityConfig> _parser = new pb::MessageParser<LDiversityConfig>(() => new LDiversityConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LDiversityConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.PrivacyMetric.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LDiversityConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LDiversityConfig(LDiversityConfig other) : this() {
          quasiIds_ = other.quasiIds_.Clone();
          sensitiveAttribute_ = other.sensitiveAttribute_ != null ? other.sensitiveAttribute_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LDiversityConfig Clone() {
          return new LDiversityConfig(this);
        }

        /// <summary>Field number for the "quasi_ids" field.</summary>
        public const int QuasiIdsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.FieldId> _repeated_quasiIds_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.FieldId.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> quasiIds_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId>();
        /// <summary>
        /// Set of quasi-identifiers indicating how equivalence classes are
        /// defined for the l-diversity computation. When multiple fields are
        /// specified, they are considered a single composite key.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> QuasiIds {
          get { return quasiIds_; }
        }

        /// <summary>Field number for the "sensitive_attribute" field.</summary>
        public const int SensitiveAttributeFieldNumber = 2;
        private global::Google.Cloud.Dlp.V2.FieldId sensitiveAttribute_;
        /// <summary>
        /// Sensitive field for computing the l-value.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.FieldId SensitiveAttribute {
          get { return sensitiveAttribute_; }
          set {
            sensitiveAttribute_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LDiversityConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LDiversityConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!quasiIds_.Equals(other.quasiIds_)) return false;
          if (!object.Equals(SensitiveAttribute, other.SensitiveAttribute)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= quasiIds_.GetHashCode();
          if (sensitiveAttribute_ != null) hash ^= SensitiveAttribute.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          quasiIds_.WriteTo(output, _repeated_quasiIds_codec);
          if (sensitiveAttribute_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(SensitiveAttribute);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          quasiIds_.WriteTo(ref output, _repeated_quasiIds_codec);
          if (sensitiveAttribute_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(SensitiveAttribute);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += quasiIds_.CalculateSize(_repeated_quasiIds_codec);
          if (sensitiveAttribute_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SensitiveAttribute);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LDiversityConfig other) {
          if (other == null) {
            return;
          }
          quasiIds_.Add(other.quasiIds_);
          if (other.sensitiveAttribute_ != null) {
            if (sensitiveAttribute_ == null) {
              SensitiveAttribute = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            SensitiveAttribute.MergeFrom(other.SensitiveAttribute);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                quasiIds_.AddEntriesFrom(input, _repeated_quasiIds_codec);
                break;
              }
              case 18: {
                if (sensitiveAttribute_ == null) {
                  SensitiveAttribute = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                input.ReadMessage(SensitiveAttribute);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                quasiIds_.AddEntriesFrom(ref input, _repeated_quasiIds_codec);
                break;
              }
              case 18: {
                if (sensitiveAttribute_ == null) {
                  SensitiveAttribute = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                input.ReadMessage(SensitiveAttribute);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Reidentifiability metric. This corresponds to a risk model similar to what
      /// is called "journalist risk" in the literature, except the attack dataset is
      /// statistically modeled instead of being perfectly known. This can be done
      /// using publicly available data (like the US Census), or using a custom
      /// statistical model (indicated as one or several BigQuery tables), or by
      /// extrapolating from the distribution of values in the input dataset.
      /// </summary>
      public sealed partial class KMapEstimationConfig : pb::IMessage<KMapEstimationConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<KMapEstimationConfig> _parser = new pb::MessageParser<KMapEstimationConfig>(() => new KMapEstimationConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<KMapEstimationConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.PrivacyMetric.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KMapEstimationConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KMapEstimationConfig(KMapEstimationConfig other) : this() {
          quasiIds_ = other.quasiIds_.Clone();
          regionCode_ = other.regionCode_;
          auxiliaryTables_ = other.auxiliaryTables_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KMapEstimationConfig Clone() {
          return new KMapEstimationConfig(this);
        }

        /// <summary>Field number for the "quasi_ids" field.</summary>
        public const int QuasiIdsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.TaggedField> _repeated_quasiIds_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.TaggedField.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.TaggedField> quasiIds_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.TaggedField>();
        /// <summary>
        /// Required. Fields considered to be quasi-identifiers. No two columns can have the
        /// same tag.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.TaggedField> QuasiIds {
          get { return quasiIds_; }
        }

        /// <summary>Field number for the "region_code" field.</summary>
        public const int RegionCodeFieldNumber = 2;
        private string regionCode_ = "";
        /// <summary>
        /// ISO 3166-1 alpha-2 region code to use in the statistical modeling.
        /// Set if no column is tagged with a region-specific InfoType (like
        /// US_ZIP_5) or a region code.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RegionCode {
          get { return regionCode_; }
          set {
            regionCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "auxiliary_tables" field.</summary>
        public const int AuxiliaryTablesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable> _repeated_auxiliaryTables_codec
            = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable> auxiliaryTables_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable>();
        /// <summary>
        /// Several auxiliary tables can be used in the analysis. Each custom_tag
        /// used to tag a quasi-identifiers column must appear in exactly one column
        /// of one auxiliary table.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable> AuxiliaryTables {
          get { return auxiliaryTables_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as KMapEstimationConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(KMapEstimationConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!quasiIds_.Equals(other.quasiIds_)) return false;
          if (RegionCode != other.RegionCode) return false;
          if(!auxiliaryTables_.Equals(other.auxiliaryTables_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= quasiIds_.GetHashCode();
          if (RegionCode.Length != 0) hash ^= RegionCode.GetHashCode();
          hash ^= auxiliaryTables_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          quasiIds_.WriteTo(output, _repeated_quasiIds_codec);
          if (RegionCode.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(RegionCode);
          }
          auxiliaryTables_.WriteTo(output, _repeated_auxiliaryTables_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          quasiIds_.WriteTo(ref output, _repeated_quasiIds_codec);
          if (RegionCode.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(RegionCode);
          }
          auxiliaryTables_.WriteTo(ref output, _repeated_auxiliaryTables_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += quasiIds_.CalculateSize(_repeated_quasiIds_codec);
          if (RegionCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionCode);
          }
          size += auxiliaryTables_.CalculateSize(_repeated_auxiliaryTables_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(KMapEstimationConfig other) {
          if (other == null) {
            return;
          }
          quasiIds_.Add(other.quasiIds_);
          if (other.RegionCode.Length != 0) {
            RegionCode = other.RegionCode;
          }
          auxiliaryTables_.Add(other.auxiliaryTables_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                quasiIds_.AddEntriesFrom(input, _repeated_quasiIds_codec);
                break;
              }
              case 18: {
                RegionCode = input.ReadString();
                break;
              }
              case 26: {
                auxiliaryTables_.AddEntriesFrom(input, _repeated_auxiliaryTables_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                quasiIds_.AddEntriesFrom(ref input, _repeated_quasiIds_codec);
                break;
              }
              case 18: {
                RegionCode = input.ReadString();
                break;
              }
              case 26: {
                auxiliaryTables_.AddEntriesFrom(ref input, _repeated_auxiliaryTables_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the KMapEstimationConfig message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// A column with a semantic tag attached.
          /// </summary>
          public sealed partial class TaggedField : pb::IMessage<TaggedField>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<TaggedField> _parser = new pb::MessageParser<TaggedField>(() => new TaggedField());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<TaggedField> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TaggedField() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TaggedField(TaggedField other) : this() {
              field_ = other.field_ != null ? other.field_.Clone() : null;
              switch (other.TagCase) {
                case TagOneofCase.InfoType:
                  InfoType = other.InfoType.Clone();
                  break;
                case TagOneofCase.CustomTag:
                  CustomTag = other.CustomTag;
                  break;
                case TagOneofCase.Inferred:
                  Inferred = other.Inferred.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TaggedField Clone() {
              return new TaggedField(this);
            }

            /// <summary>Field number for the "field" field.</summary>
            public const int FieldFieldNumber = 1;
            private global::Google.Cloud.Dlp.V2.FieldId field_;
            /// <summary>
            /// Required. Identifies the column.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.Dlp.V2.FieldId Field {
              get { return field_; }
              set {
                field_ = value;
              }
            }

            /// <summary>Field number for the "info_type" field.</summary>
            public const int InfoTypeFieldNumber = 2;
            /// <summary>
            /// A column can be tagged with a InfoType to use the relevant public
            /// dataset as a statistical model of population, if available. We
            /// currently support US ZIP codes, region codes, ages and genders.
            /// To programmatically obtain the list of supported InfoTypes, use
            /// ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.Dlp.V2.InfoType InfoType {
              get { return tagCase_ == TagOneofCase.InfoType ? (global::Google.Cloud.Dlp.V2.InfoType) tag_ : null; }
              set {
                tag_ = value;
                tagCase_ = value == null ? TagOneofCase.None : TagOneofCase.InfoType;
              }
            }

            /// <summary>Field number for the "custom_tag" field.</summary>
            public const int CustomTagFieldNumber = 3;
            /// <summary>
            /// A column can be tagged with a custom tag. In this case, the user must
            /// indicate an auxiliary table that contains statistical information on
            /// the possible values of this column (below).
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string CustomTag {
              get { return tagCase_ == TagOneofCase.CustomTag ? (string) tag_ : ""; }
              set {
                tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                tagCase_ = TagOneofCase.CustomTag;
              }
            }

            /// <summary>Field number for the "inferred" field.</summary>
            public const int InferredFieldNumber = 4;
            /// <summary>
            /// If no semantic tag is indicated, we infer the statistical model from
            /// the distribution of values in the input data
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Protobuf.WellKnownTypes.Empty Inferred {
              get { return tagCase_ == TagOneofCase.Inferred ? (global::Google.Protobuf.WellKnownTypes.Empty) tag_ : null; }
              set {
                tag_ = value;
                tagCase_ = value == null ? TagOneofCase.None : TagOneofCase.Inferred;
              }
            }

            private object tag_;
            /// <summary>Enum of possible cases for the "tag" oneof.</summary>
            public enum TagOneofCase {
              None = 0,
              InfoType = 2,
              CustomTag = 3,
              Inferred = 4,
            }
            private TagOneofCase tagCase_ = TagOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TagOneofCase TagCase {
              get { return tagCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearTag() {
              tagCase_ = TagOneofCase.None;
              tag_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as TaggedField);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(TaggedField other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Field, other.Field)) return false;
              if (!object.Equals(InfoType, other.InfoType)) return false;
              if (CustomTag != other.CustomTag) return false;
              if (!object.Equals(Inferred, other.Inferred)) return false;
              if (TagCase != other.TagCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (field_ != null) hash ^= Field.GetHashCode();
              if (tagCase_ == TagOneofCase.InfoType) hash ^= InfoType.GetHashCode();
              if (tagCase_ == TagOneofCase.CustomTag) hash ^= CustomTag.GetHashCode();
              if (tagCase_ == TagOneofCase.Inferred) hash ^= Inferred.GetHashCode();
              hash ^= (int) tagCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (field_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Field);
              }
              if (tagCase_ == TagOneofCase.InfoType) {
                output.WriteRawTag(18);
                output.WriteMessage(InfoType);
              }
              if (tagCase_ == TagOneofCase.CustomTag) {
                output.WriteRawTag(26);
                output.WriteString(CustomTag);
              }
              if (tagCase_ == TagOneofCase.Inferred) {
                output.WriteRawTag(34);
                output.WriteMessage(Inferred);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (field_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Field);
              }
              if (tagCase_ == TagOneofCase.InfoType) {
                output.WriteRawTag(18);
                output.WriteMessage(InfoType);
              }
              if (tagCase_ == TagOneofCase.CustomTag) {
                output.WriteRawTag(26);
                output.WriteString(CustomTag);
              }
              if (tagCase_ == TagOneofCase.Inferred) {
                output.WriteRawTag(34);
                output.WriteMessage(Inferred);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (field_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
              }
              if (tagCase_ == TagOneofCase.InfoType) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoType);
              }
              if (tagCase_ == TagOneofCase.CustomTag) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomTag);
              }
              if (tagCase_ == TagOneofCase.Inferred) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inferred);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(TaggedField other) {
              if (other == null) {
                return;
              }
              if (other.field_ != null) {
                if (field_ == null) {
                  Field = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                Field.MergeFrom(other.Field);
              }
              switch (other.TagCase) {
                case TagOneofCase.InfoType:
                  if (InfoType == null) {
                    InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
                  }
                  InfoType.MergeFrom(other.InfoType);
                  break;
                case TagOneofCase.CustomTag:
                  CustomTag = other.CustomTag;
                  break;
                case TagOneofCase.Inferred:
                  if (Inferred == null) {
                    Inferred = new global::Google.Protobuf.WellKnownTypes.Empty();
                  }
                  Inferred.MergeFrom(other.Inferred);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (field_ == null) {
                      Field = new global::Google.Cloud.Dlp.V2.FieldId();
                    }
                    input.ReadMessage(Field);
                    break;
                  }
                  case 18: {
                    global::Google.Cloud.Dlp.V2.InfoType subBuilder = new global::Google.Cloud.Dlp.V2.InfoType();
                    if (tagCase_ == TagOneofCase.InfoType) {
                      subBuilder.MergeFrom(InfoType);
                    }
                    input.ReadMessage(subBuilder);
                    InfoType = subBuilder;
                    break;
                  }
                  case 26: {
                    CustomTag = input.ReadString();
                    break;
                  }
                  case 34: {
                    global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
                    if (tagCase_ == TagOneofCase.Inferred) {
                      subBuilder.MergeFrom(Inferred);
                    }
                    input.ReadMessage(subBuilder);
                    Inferred = subBuilder;
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (field_ == null) {
                      Field = new global::Google.Cloud.Dlp.V2.FieldId();
                    }
                    input.ReadMessage(Field);
                    break;
                  }
                  case 18: {
                    global::Google.Cloud.Dlp.V2.InfoType subBuilder = new global::Google.Cloud.Dlp.V2.InfoType();
                    if (tagCase_ == TagOneofCase.InfoType) {
                      subBuilder.MergeFrom(InfoType);
                    }
                    input.ReadMessage(subBuilder);
                    InfoType = subBuilder;
                    break;
                  }
                  case 26: {
                    CustomTag = input.ReadString();
                    break;
                  }
                  case 34: {
                    global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
                    if (tagCase_ == TagOneofCase.Inferred) {
                      subBuilder.MergeFrom(Inferred);
                    }
                    input.ReadMessage(subBuilder);
                    Inferred = subBuilder;
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// An auxiliary table contains statistical information on the relative
          /// frequency of different quasi-identifiers values. It has one or several
          /// quasi-identifiers columns, and one column that indicates the relative
          /// frequency of each quasi-identifier tuple.
          /// If a tuple is present in the data but not in the auxiliary table, the
          /// corresponding relative frequency is assumed to be zero (and thus, the
          /// tuple is highly reidentifiable).
          /// </summary>
          public sealed partial class AuxiliaryTable : pb::IMessage<AuxiliaryTable>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<AuxiliaryTable> _parser = new pb::MessageParser<AuxiliaryTable>(() => new AuxiliaryTable());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<AuxiliaryTable> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AuxiliaryTable() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AuxiliaryTable(AuxiliaryTable other) : this() {
              table_ = other.table_ != null ? other.table_.Clone() : null;
              quasiIds_ = other.quasiIds_.Clone();
              relativeFrequency_ = other.relativeFrequency_ != null ? other.relativeFrequency_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AuxiliaryTable Clone() {
              return new AuxiliaryTable(this);
            }

            /// <summary>Field number for the "table" field.</summary>
            public const int TableFieldNumber = 3;
            private global::Google.Cloud.Dlp.V2.BigQueryTable table_;
            /// <summary>
            /// Required. Auxiliary table location.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.Dlp.V2.BigQueryTable Table {
              get { return table_; }
              set {
                table_ = value;
              }
            }

            /// <summary>Field number for the "quasi_ids" field.</summary>
            public const int QuasiIdsFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable.Types.QuasiIdField> _repeated_quasiIds_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable.Types.QuasiIdField.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable.Types.QuasiIdField> quasiIds_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable.Types.QuasiIdField>();
            /// <summary>
            /// Required. Quasi-identifier columns.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable.Types.QuasiIdField> QuasiIds {
              get { return quasiIds_; }
            }

            /// <summary>Field number for the "relative_frequency" field.</summary>
            public const int RelativeFrequencyFieldNumber = 2;
            private global::Google.Cloud.Dlp.V2.FieldId relativeFrequency_;
            /// <summary>
            /// Required. The relative frequency column must contain a floating-point number
            /// between 0 and 1 (inclusive). Null values are assumed to be zero.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.Dlp.V2.FieldId RelativeFrequency {
              get { return relativeFrequency_; }
              set {
                relativeFrequency_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as AuxiliaryTable);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(AuxiliaryTable other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Table, other.Table)) return false;
              if(!quasiIds_.Equals(other.quasiIds_)) return false;
              if (!object.Equals(RelativeFrequency, other.RelativeFrequency)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (table_ != null) hash ^= Table.GetHashCode();
              hash ^= quasiIds_.GetHashCode();
              if (relativeFrequency_ != null) hash ^= RelativeFrequency.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              quasiIds_.WriteTo(output, _repeated_quasiIds_codec);
              if (relativeFrequency_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(RelativeFrequency);
              }
              if (table_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Table);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              quasiIds_.WriteTo(ref output, _repeated_quasiIds_codec);
              if (relativeFrequency_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(RelativeFrequency);
              }
              if (table_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Table);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (table_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
              }
              size += quasiIds_.CalculateSize(_repeated_quasiIds_codec);
              if (relativeFrequency_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelativeFrequency);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(AuxiliaryTable other) {
              if (other == null) {
                return;
              }
              if (other.table_ != null) {
                if (table_ == null) {
                  Table = new global::Google.Cloud.Dlp.V2.BigQueryTable();
                }
                Table.MergeFrom(other.Table);
              }
              quasiIds_.Add(other.quasiIds_);
              if (other.relativeFrequency_ != null) {
                if (relativeFrequency_ == null) {
                  RelativeFrequency = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                RelativeFrequency.MergeFrom(other.RelativeFrequency);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    quasiIds_.AddEntriesFrom(input, _repeated_quasiIds_codec);
                    break;
                  }
                  case 18: {
                    if (relativeFrequency_ == null) {
                      RelativeFrequency = new global::Google.Cloud.Dlp.V2.FieldId();
                    }
                    input.ReadMessage(RelativeFrequency);
                    break;
                  }
                  case 26: {
                    if (table_ == null) {
                      Table = new global::Google.Cloud.Dlp.V2.BigQueryTable();
                    }
                    input.ReadMessage(Table);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    quasiIds_.AddEntriesFrom(ref input, _repeated_quasiIds_codec);
                    break;
                  }
                  case 18: {
                    if (relativeFrequency_ == null) {
                      RelativeFrequency = new global::Google.Cloud.Dlp.V2.FieldId();
                    }
                    input.ReadMessage(RelativeFrequency);
                    break;
                  }
                  case 26: {
                    if (table_ == null) {
                      Table = new global::Google.Cloud.Dlp.V2.BigQueryTable();
                    }
                    input.ReadMessage(Table);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the AuxiliaryTable message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              /// <summary>
              /// A quasi-identifier column has a custom_tag, used to know which column
              /// in the data corresponds to which column in the statistical model.
              /// </summary>
              public sealed partial class QuasiIdField : pb::IMessage<QuasiIdField>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<QuasiIdField> _parser = new pb::MessageParser<QuasiIdField>(() => new QuasiIdField());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<QuasiIdField> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Google.Cloud.Dlp.V2.PrivacyMetric.Types.KMapEstimationConfig.Types.AuxiliaryTable.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public QuasiIdField() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public QuasiIdField(QuasiIdField other) : this() {
                  field_ = other.field_ != null ? other.field_.Clone() : null;
                  customTag_ = other.customTag_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public QuasiIdField Clone() {
                  return new QuasiIdField(this);
                }

                /// <summary>Field number for the "field" field.</summary>
                public const int FieldFieldNumber = 1;
                private global::Google.Cloud.Dlp.V2.FieldId field_;
                /// <summary>
                /// Identifies the column.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public global::Google.Cloud.Dlp.V2.FieldId Field {
                  get { return field_; }
                  set {
                    field_ = value;
                  }
                }

                /// <summary>Field number for the "custom_tag" field.</summary>
                public const int CustomTagFieldNumber = 2;
                private string customTag_ = "";
                /// <summary>
                /// A auxiliary field.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string CustomTag {
                  get { return customTag_; }
                  set {
                    customTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as QuasiIdField);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(QuasiIdField other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(Field, other.Field)) return false;
                  if (CustomTag != other.CustomTag) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (field_ != null) hash ^= Field.GetHashCode();
                  if (CustomTag.Length != 0) hash ^= CustomTag.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (field_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(Field);
                  }
                  if (CustomTag.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(CustomTag);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (field_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(Field);
                  }
                  if (CustomTag.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(CustomTag);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (field_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
                  }
                  if (CustomTag.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomTag);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(QuasiIdField other) {
                  if (other == null) {
                    return;
                  }
                  if (other.field_ != null) {
                    if (field_ == null) {
                      Field = new global::Google.Cloud.Dlp.V2.FieldId();
                    }
                    Field.MergeFrom(other.Field);
                  }
                  if (other.CustomTag.Length != 0) {
                    CustomTag = other.CustomTag;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (field_ == null) {
                          Field = new global::Google.Cloud.Dlp.V2.FieldId();
                        }
                        input.ReadMessage(Field);
                        break;
                      }
                      case 18: {
                        CustomTag = input.ReadString();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (field_ == null) {
                          Field = new global::Google.Cloud.Dlp.V2.FieldId();
                        }
                        input.ReadMessage(Field);
                        break;
                      }
                      case 18: {
                        CustomTag = input.ReadString();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

        }
        #endregion

      }

      /// <summary>
      /// δ-presence metric, used to estimate how likely it is for an attacker to
      /// figure out that one given individual appears in a de-identified dataset.
      /// Similarly to the k-map metric, we cannot compute δ-presence exactly without
      /// knowing the attack dataset, so we use a statistical model instead.
      /// </summary>
      public sealed partial class DeltaPresenceEstimationConfig : pb::IMessage<DeltaPresenceEstimationConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DeltaPresenceEstimationConfig> _parser = new pb::MessageParser<DeltaPresenceEstimationConfig>(() => new DeltaPresenceEstimationConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeltaPresenceEstimationConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.PrivacyMetric.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeltaPresenceEstimationConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeltaPresenceEstimationConfig(DeltaPresenceEstimationConfig other) : this() {
          quasiIds_ = other.quasiIds_.Clone();
          regionCode_ = other.regionCode_;
          auxiliaryTables_ = other.auxiliaryTables_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeltaPresenceEstimationConfig Clone() {
          return new DeltaPresenceEstimationConfig(this);
        }

        /// <summary>Field number for the "quasi_ids" field.</summary>
        public const int QuasiIdsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.QuasiId> _repeated_quasiIds_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.QuasiId.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.QuasiId> quasiIds_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.QuasiId>();
        /// <summary>
        /// Required. Fields considered to be quasi-identifiers. No two fields can have the
        /// same tag.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.QuasiId> QuasiIds {
          get { return quasiIds_; }
        }

        /// <summary>Field number for the "region_code" field.</summary>
        public const int RegionCodeFieldNumber = 2;
        private string regionCode_ = "";
        /// <summary>
        /// ISO 3166-1 alpha-2 region code to use in the statistical modeling.
        /// Set if no column is tagged with a region-specific InfoType (like
        /// US_ZIP_5) or a region code.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RegionCode {
          get { return regionCode_; }
          set {
            regionCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "auxiliary_tables" field.</summary>
        public const int AuxiliaryTablesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.StatisticalTable> _repeated_auxiliaryTables_codec
            = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Dlp.V2.StatisticalTable.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.StatisticalTable> auxiliaryTables_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.StatisticalTable>();
        /// <summary>
        /// Several auxiliary tables can be used in the analysis. Each custom_tag
        /// used to tag a quasi-identifiers field must appear in exactly one
        /// field of one auxiliary table.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.StatisticalTable> AuxiliaryTables {
          get { return auxiliaryTables_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DeltaPresenceEstimationConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeltaPresenceEstimationConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!quasiIds_.Equals(other.quasiIds_)) return false;
          if (RegionCode != other.RegionCode) return false;
          if(!auxiliaryTables_.Equals(other.auxiliaryTables_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= quasiIds_.GetHashCode();
          if (RegionCode.Length != 0) hash ^= RegionCode.GetHashCode();
          hash ^= auxiliaryTables_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          quasiIds_.WriteTo(output, _repeated_quasiIds_codec);
          if (RegionCode.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(RegionCode);
          }
          auxiliaryTables_.WriteTo(output, _repeated_auxiliaryTables_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          quasiIds_.WriteTo(ref output, _repeated_quasiIds_codec);
          if (RegionCode.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(RegionCode);
          }
          auxiliaryTables_.WriteTo(ref output, _repeated_auxiliaryTables_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += quasiIds_.CalculateSize(_repeated_quasiIds_codec);
          if (RegionCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionCode);
          }
          size += auxiliaryTables_.CalculateSize(_repeated_auxiliaryTables_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeltaPresenceEstimationConfig other) {
          if (other == null) {
            return;
          }
          quasiIds_.Add(other.quasiIds_);
          if (other.RegionCode.Length != 0) {
            RegionCode = other.RegionCode;
          }
          auxiliaryTables_.Add(other.auxiliaryTables_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                quasiIds_.AddEntriesFrom(input, _repeated_quasiIds_codec);
                break;
              }
              case 18: {
                RegionCode = input.ReadString();
                break;
              }
              case 26: {
                auxiliaryTables_.AddEntriesFrom(input, _repeated_auxiliaryTables_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                quasiIds_.AddEntriesFrom(ref input, _repeated_quasiIds_codec);
                break;
              }
              case 18: {
                RegionCode = input.ReadString();
                break;
              }
              case 26: {
                auxiliaryTables_.AddEntriesFrom(ref input, _repeated_auxiliaryTables_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Result of a risk analysis operation request.
  /// </summary>
  public sealed partial class AnalyzeDataSourceRiskDetails : pb::IMessage<AnalyzeDataSourceRiskDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyzeDataSourceRiskDetails> _parser = new pb::MessageParser<AnalyzeDataSourceRiskDetails>(() => new AnalyzeDataSourceRiskDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnalyzeDataSourceRiskDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnalyzeDataSourceRiskDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnalyzeDataSourceRiskDetails(AnalyzeDataSourceRiskDetails other) : this() {
      requestedPrivacyMetric_ = other.requestedPrivacyMetric_ != null ? other.requestedPrivacyMetric_.Clone() : null;
      requestedSourceTable_ = other.requestedSourceTable_ != null ? other.requestedSourceTable_.Clone() : null;
      requestedOptions_ = other.requestedOptions_ != null ? other.requestedOptions_.Clone() : null;
      switch (other.ResultCase) {
        case ResultOneofCase.NumericalStatsResult:
          NumericalStatsResult = other.NumericalStatsResult.Clone();
          break;
        case ResultOneofCase.CategoricalStatsResult:
          CategoricalStatsResult = other.CategoricalStatsResult.Clone();
          break;
        case ResultOneofCase.KAnonymityResult:
          KAnonymityResult = other.KAnonymityResult.Clone();
          break;
        case ResultOneofCase.LDiversityResult:
          LDiversityResult = other.LDiversityResult.Clone();
          break;
        case ResultOneofCase.KMapEstimationResult:
          KMapEstimationResult = other.KMapEstimationResult.Clone();
          break;
        case ResultOneofCase.DeltaPresenceEstimationResult:
          DeltaPresenceEstimationResult = other.DeltaPresenceEstimationResult.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnalyzeDataSourceRiskDetails Clone() {
      return new AnalyzeDataSourceRiskDetails(this);
    }

    /// <summary>Field number for the "requested_privacy_metric" field.</summary>
    public const int RequestedPrivacyMetricFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.PrivacyMetric requestedPrivacyMetric_;
    /// <summary>
    /// Privacy metric to compute.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.PrivacyMetric RequestedPrivacyMetric {
      get { return requestedPrivacyMetric_; }
      set {
        requestedPrivacyMetric_ = value;
      }
    }

    /// <summary>Field number for the "requested_source_table" field.</summary>
    public const int RequestedSourceTableFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.BigQueryTable requestedSourceTable_;
    /// <summary>
    /// Input dataset to compute metrics over.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.BigQueryTable RequestedSourceTable {
      get { return requestedSourceTable_; }
      set {
        requestedSourceTable_ = value;
      }
    }

    /// <summary>Field number for the "numerical_stats_result" field.</summary>
    public const int NumericalStatsResultFieldNumber = 3;
    /// <summary>
    /// Numerical stats result
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.NumericalStatsResult NumericalStatsResult {
      get { return resultCase_ == ResultOneofCase.NumericalStatsResult ? (global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.NumericalStatsResult) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.NumericalStatsResult;
      }
    }

    /// <summary>Field number for the "categorical_stats_result" field.</summary>
    public const int CategoricalStatsResultFieldNumber = 4;
    /// <summary>
    /// Categorical stats result
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult CategoricalStatsResult {
      get { return resultCase_ == ResultOneofCase.CategoricalStatsResult ? (global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.CategoricalStatsResult;
      }
    }

    /// <summary>Field number for the "k_anonymity_result" field.</summary>
    public const int KAnonymityResultFieldNumber = 5;
    /// <summary>
    /// K-anonymity result
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult KAnonymityResult {
      get { return resultCase_ == ResultOneofCase.KAnonymityResult ? (global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.KAnonymityResult;
      }
    }

    /// <summary>Field number for the "l_diversity_result" field.</summary>
    public const int LDiversityResultFieldNumber = 6;
    /// <summary>
    /// L-divesity result
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult LDiversityResult {
      get { return resultCase_ == ResultOneofCase.LDiversityResult ? (global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.LDiversityResult;
      }
    }

    /// <summary>Field number for the "k_map_estimation_result" field.</summary>
    public const int KMapEstimationResultFieldNumber = 7;
    /// <summary>
    /// K-map result
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult KMapEstimationResult {
      get { return resultCase_ == ResultOneofCase.KMapEstimationResult ? (global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.KMapEstimationResult;
      }
    }

    /// <summary>Field number for the "delta_presence_estimation_result" field.</summary>
    public const int DeltaPresenceEstimationResultFieldNumber = 9;
    /// <summary>
    /// Delta-presence result
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult DeltaPresenceEstimationResult {
      get { return resultCase_ == ResultOneofCase.DeltaPresenceEstimationResult ? (global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.DeltaPresenceEstimationResult;
      }
    }

    /// <summary>Field number for the "requested_options" field.</summary>
    public const int RequestedOptionsFieldNumber = 10;
    private global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.RequestedRiskAnalysisOptions requestedOptions_;
    /// <summary>
    /// The configuration used for this job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.RequestedRiskAnalysisOptions RequestedOptions {
      get { return requestedOptions_; }
      set {
        requestedOptions_ = value;
      }
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      NumericalStatsResult = 3,
      CategoricalStatsResult = 4,
      KAnonymityResult = 5,
      LDiversityResult = 6,
      KMapEstimationResult = 7,
      DeltaPresenceEstimationResult = 9,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnalyzeDataSourceRiskDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnalyzeDataSourceRiskDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestedPrivacyMetric, other.RequestedPrivacyMetric)) return false;
      if (!object.Equals(RequestedSourceTable, other.RequestedSourceTable)) return false;
      if (!object.Equals(NumericalStatsResult, other.NumericalStatsResult)) return false;
      if (!object.Equals(CategoricalStatsResult, other.CategoricalStatsResult)) return false;
      if (!object.Equals(KAnonymityResult, other.KAnonymityResult)) return false;
      if (!object.Equals(LDiversityResult, other.LDiversityResult)) return false;
      if (!object.Equals(KMapEstimationResult, other.KMapEstimationResult)) return false;
      if (!object.Equals(DeltaPresenceEstimationResult, other.DeltaPresenceEstimationResult)) return false;
      if (!object.Equals(RequestedOptions, other.RequestedOptions)) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestedPrivacyMetric_ != null) hash ^= RequestedPrivacyMetric.GetHashCode();
      if (requestedSourceTable_ != null) hash ^= RequestedSourceTable.GetHashCode();
      if (resultCase_ == ResultOneofCase.NumericalStatsResult) hash ^= NumericalStatsResult.GetHashCode();
      if (resultCase_ == ResultOneofCase.CategoricalStatsResult) hash ^= CategoricalStatsResult.GetHashCode();
      if (resultCase_ == ResultOneofCase.KAnonymityResult) hash ^= KAnonymityResult.GetHashCode();
      if (resultCase_ == ResultOneofCase.LDiversityResult) hash ^= LDiversityResult.GetHashCode();
      if (resultCase_ == ResultOneofCase.KMapEstimationResult) hash ^= KMapEstimationResult.GetHashCode();
      if (resultCase_ == ResultOneofCase.DeltaPresenceEstimationResult) hash ^= DeltaPresenceEstimationResult.GetHashCode();
      if (requestedOptions_ != null) hash ^= RequestedOptions.GetHashCode();
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (requestedPrivacyMetric_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestedPrivacyMetric);
      }
      if (requestedSourceTable_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestedSourceTable);
      }
      if (resultCase_ == ResultOneofCase.NumericalStatsResult) {
        output.WriteRawTag(26);
        output.WriteMessage(NumericalStatsResult);
      }
      if (resultCase_ == ResultOneofCase.CategoricalStatsResult) {
        output.WriteRawTag(34);
        output.WriteMessage(CategoricalStatsResult);
      }
      if (resultCase_ == ResultOneofCase.KAnonymityResult) {
        output.WriteRawTag(42);
        output.WriteMessage(KAnonymityResult);
      }
      if (resultCase_ == ResultOneofCase.LDiversityResult) {
        output.WriteRawTag(50);
        output.WriteMessage(LDiversityResult);
      }
      if (resultCase_ == ResultOneofCase.KMapEstimationResult) {
        output.WriteRawTag(58);
        output.WriteMessage(KMapEstimationResult);
      }
      if (resultCase_ == ResultOneofCase.DeltaPresenceEstimationResult) {
        output.WriteRawTag(74);
        output.WriteMessage(DeltaPresenceEstimationResult);
      }
      if (requestedOptions_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(RequestedOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (requestedPrivacyMetric_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestedPrivacyMetric);
      }
      if (requestedSourceTable_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestedSourceTable);
      }
      if (resultCase_ == ResultOneofCase.NumericalStatsResult) {
        output.WriteRawTag(26);
        output.WriteMessage(NumericalStatsResult);
      }
      if (resultCase_ == ResultOneofCase.CategoricalStatsResult) {
        output.WriteRawTag(34);
        output.WriteMessage(CategoricalStatsResult);
      }
      if (resultCase_ == ResultOneofCase.KAnonymityResult) {
        output.WriteRawTag(42);
        output.WriteMessage(KAnonymityResult);
      }
      if (resultCase_ == ResultOneofCase.LDiversityResult) {
        output.WriteRawTag(50);
        output.WriteMessage(LDiversityResult);
      }
      if (resultCase_ == ResultOneofCase.KMapEstimationResult) {
        output.WriteRawTag(58);
        output.WriteMessage(KMapEstimationResult);
      }
      if (resultCase_ == ResultOneofCase.DeltaPresenceEstimationResult) {
        output.WriteRawTag(74);
        output.WriteMessage(DeltaPresenceEstimationResult);
      }
      if (requestedOptions_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(RequestedOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestedPrivacyMetric_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestedPrivacyMetric);
      }
      if (requestedSourceTable_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestedSourceTable);
      }
      if (resultCase_ == ResultOneofCase.NumericalStatsResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NumericalStatsResult);
      }
      if (resultCase_ == ResultOneofCase.CategoricalStatsResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CategoricalStatsResult);
      }
      if (resultCase_ == ResultOneofCase.KAnonymityResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KAnonymityResult);
      }
      if (resultCase_ == ResultOneofCase.LDiversityResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LDiversityResult);
      }
      if (resultCase_ == ResultOneofCase.KMapEstimationResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KMapEstimationResult);
      }
      if (resultCase_ == ResultOneofCase.DeltaPresenceEstimationResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeltaPresenceEstimationResult);
      }
      if (requestedOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestedOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnalyzeDataSourceRiskDetails other) {
      if (other == null) {
        return;
      }
      if (other.requestedPrivacyMetric_ != null) {
        if (requestedPrivacyMetric_ == null) {
          RequestedPrivacyMetric = new global::Google.Cloud.Dlp.V2.PrivacyMetric();
        }
        RequestedPrivacyMetric.MergeFrom(other.RequestedPrivacyMetric);
      }
      if (other.requestedSourceTable_ != null) {
        if (requestedSourceTable_ == null) {
          RequestedSourceTable = new global::Google.Cloud.Dlp.V2.BigQueryTable();
        }
        RequestedSourceTable.MergeFrom(other.RequestedSourceTable);
      }
      if (other.requestedOptions_ != null) {
        if (requestedOptions_ == null) {
          RequestedOptions = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.RequestedRiskAnalysisOptions();
        }
        RequestedOptions.MergeFrom(other.RequestedOptions);
      }
      switch (other.ResultCase) {
        case ResultOneofCase.NumericalStatsResult:
          if (NumericalStatsResult == null) {
            NumericalStatsResult = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.NumericalStatsResult();
          }
          NumericalStatsResult.MergeFrom(other.NumericalStatsResult);
          break;
        case ResultOneofCase.CategoricalStatsResult:
          if (CategoricalStatsResult == null) {
            CategoricalStatsResult = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult();
          }
          CategoricalStatsResult.MergeFrom(other.CategoricalStatsResult);
          break;
        case ResultOneofCase.KAnonymityResult:
          if (KAnonymityResult == null) {
            KAnonymityResult = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult();
          }
          KAnonymityResult.MergeFrom(other.KAnonymityResult);
          break;
        case ResultOneofCase.LDiversityResult:
          if (LDiversityResult == null) {
            LDiversityResult = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult();
          }
          LDiversityResult.MergeFrom(other.LDiversityResult);
          break;
        case ResultOneofCase.KMapEstimationResult:
          if (KMapEstimationResult == null) {
            KMapEstimationResult = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult();
          }
          KMapEstimationResult.MergeFrom(other.KMapEstimationResult);
          break;
        case ResultOneofCase.DeltaPresenceEstimationResult:
          if (DeltaPresenceEstimationResult == null) {
            DeltaPresenceEstimationResult = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult();
          }
          DeltaPresenceEstimationResult.MergeFrom(other.DeltaPresenceEstimationResult);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (requestedPrivacyMetric_ == null) {
              RequestedPrivacyMetric = new global::Google.Cloud.Dlp.V2.PrivacyMetric();
            }
            input.ReadMessage(RequestedPrivacyMetric);
            break;
          }
          case 18: {
            if (requestedSourceTable_ == null) {
              RequestedSourceTable = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            }
            input.ReadMessage(RequestedSourceTable);
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.NumericalStatsResult subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.NumericalStatsResult();
            if (resultCase_ == ResultOneofCase.NumericalStatsResult) {
              subBuilder.MergeFrom(NumericalStatsResult);
            }
            input.ReadMessage(subBuilder);
            NumericalStatsResult = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult();
            if (resultCase_ == ResultOneofCase.CategoricalStatsResult) {
              subBuilder.MergeFrom(CategoricalStatsResult);
            }
            input.ReadMessage(subBuilder);
            CategoricalStatsResult = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult();
            if (resultCase_ == ResultOneofCase.KAnonymityResult) {
              subBuilder.MergeFrom(KAnonymityResult);
            }
            input.ReadMessage(subBuilder);
            KAnonymityResult = subBuilder;
            break;
          }
          case 50: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult();
            if (resultCase_ == ResultOneofCase.LDiversityResult) {
              subBuilder.MergeFrom(LDiversityResult);
            }
            input.ReadMessage(subBuilder);
            LDiversityResult = subBuilder;
            break;
          }
          case 58: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult();
            if (resultCase_ == ResultOneofCase.KMapEstimationResult) {
              subBuilder.MergeFrom(KMapEstimationResult);
            }
            input.ReadMessage(subBuilder);
            KMapEstimationResult = subBuilder;
            break;
          }
          case 74: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult();
            if (resultCase_ == ResultOneofCase.DeltaPresenceEstimationResult) {
              subBuilder.MergeFrom(DeltaPresenceEstimationResult);
            }
            input.ReadMessage(subBuilder);
            DeltaPresenceEstimationResult = subBuilder;
            break;
          }
          case 82: {
            if (requestedOptions_ == null) {
              RequestedOptions = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.RequestedRiskAnalysisOptions();
            }
            input.ReadMessage(RequestedOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (requestedPrivacyMetric_ == null) {
              RequestedPrivacyMetric = new global::Google.Cloud.Dlp.V2.PrivacyMetric();
            }
            input.ReadMessage(RequestedPrivacyMetric);
            break;
          }
          case 18: {
            if (requestedSourceTable_ == null) {
              RequestedSourceTable = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            }
            input.ReadMessage(RequestedSourceTable);
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.NumericalStatsResult subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.NumericalStatsResult();
            if (resultCase_ == ResultOneofCase.NumericalStatsResult) {
              subBuilder.MergeFrom(NumericalStatsResult);
            }
            input.ReadMessage(subBuilder);
            NumericalStatsResult = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult();
            if (resultCase_ == ResultOneofCase.CategoricalStatsResult) {
              subBuilder.MergeFrom(CategoricalStatsResult);
            }
            input.ReadMessage(subBuilder);
            CategoricalStatsResult = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult();
            if (resultCase_ == ResultOneofCase.KAnonymityResult) {
              subBuilder.MergeFrom(KAnonymityResult);
            }
            input.ReadMessage(subBuilder);
            KAnonymityResult = subBuilder;
            break;
          }
          case 50: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult();
            if (resultCase_ == ResultOneofCase.LDiversityResult) {
              subBuilder.MergeFrom(LDiversityResult);
            }
            input.ReadMessage(subBuilder);
            LDiversityResult = subBuilder;
            break;
          }
          case 58: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult();
            if (resultCase_ == ResultOneofCase.KMapEstimationResult) {
              subBuilder.MergeFrom(KMapEstimationResult);
            }
            input.ReadMessage(subBuilder);
            KMapEstimationResult = subBuilder;
            break;
          }
          case 74: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult();
            if (resultCase_ == ResultOneofCase.DeltaPresenceEstimationResult) {
              subBuilder.MergeFrom(DeltaPresenceEstimationResult);
            }
            input.ReadMessage(subBuilder);
            DeltaPresenceEstimationResult = subBuilder;
            break;
          }
          case 82: {
            if (requestedOptions_ == null) {
              RequestedOptions = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.RequestedRiskAnalysisOptions();
            }
            input.ReadMessage(RequestedOptions);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AnalyzeDataSourceRiskDetails message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Result of the numerical stats computation.
      /// </summary>
      public sealed partial class NumericalStatsResult : pb::IMessage<NumericalStatsResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NumericalStatsResult> _parser = new pb::MessageParser<NumericalStatsResult>(() => new NumericalStatsResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NumericalStatsResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NumericalStatsResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NumericalStatsResult(NumericalStatsResult other) : this() {
          minValue_ = other.minValue_ != null ? other.minValue_.Clone() : null;
          maxValue_ = other.maxValue_ != null ? other.maxValue_.Clone() : null;
          quantileValues_ = other.quantileValues_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NumericalStatsResult Clone() {
          return new NumericalStatsResult(this);
        }

        /// <summary>Field number for the "min_value" field.</summary>
        public const int MinValueFieldNumber = 1;
        private global::Google.Cloud.Dlp.V2.Value minValue_;
        /// <summary>
        /// Minimum value appearing in the column.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.Value MinValue {
          get { return minValue_; }
          set {
            minValue_ = value;
          }
        }

        /// <summary>Field number for the "max_value" field.</summary>
        public const int MaxValueFieldNumber = 2;
        private global::Google.Cloud.Dlp.V2.Value maxValue_;
        /// <summary>
        /// Maximum value appearing in the column.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.Value MaxValue {
          get { return maxValue_; }
          set {
            maxValue_ = value;
          }
        }

        /// <summary>Field number for the "quantile_values" field.</summary>
        public const int QuantileValuesFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Value> _repeated_quantileValues_codec
            = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Dlp.V2.Value.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value> quantileValues_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value>();
        /// <summary>
        /// List of 99 values that partition the set of field values into 100 equal
        /// sized buckets.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value> QuantileValues {
          get { return quantileValues_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NumericalStatsResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NumericalStatsResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(MinValue, other.MinValue)) return false;
          if (!object.Equals(MaxValue, other.MaxValue)) return false;
          if(!quantileValues_.Equals(other.quantileValues_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (minValue_ != null) hash ^= MinValue.GetHashCode();
          if (maxValue_ != null) hash ^= MaxValue.GetHashCode();
          hash ^= quantileValues_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (minValue_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(MinValue);
          }
          if (maxValue_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(MaxValue);
          }
          quantileValues_.WriteTo(output, _repeated_quantileValues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (minValue_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(MinValue);
          }
          if (maxValue_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(MaxValue);
          }
          quantileValues_.WriteTo(ref output, _repeated_quantileValues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (minValue_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinValue);
          }
          if (maxValue_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxValue);
          }
          size += quantileValues_.CalculateSize(_repeated_quantileValues_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NumericalStatsResult other) {
          if (other == null) {
            return;
          }
          if (other.minValue_ != null) {
            if (minValue_ == null) {
              MinValue = new global::Google.Cloud.Dlp.V2.Value();
            }
            MinValue.MergeFrom(other.MinValue);
          }
          if (other.maxValue_ != null) {
            if (maxValue_ == null) {
              MaxValue = new global::Google.Cloud.Dlp.V2.Value();
            }
            MaxValue.MergeFrom(other.MaxValue);
          }
          quantileValues_.Add(other.quantileValues_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (minValue_ == null) {
                  MinValue = new global::Google.Cloud.Dlp.V2.Value();
                }
                input.ReadMessage(MinValue);
                break;
              }
              case 18: {
                if (maxValue_ == null) {
                  MaxValue = new global::Google.Cloud.Dlp.V2.Value();
                }
                input.ReadMessage(MaxValue);
                break;
              }
              case 34: {
                quantileValues_.AddEntriesFrom(input, _repeated_quantileValues_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (minValue_ == null) {
                  MinValue = new global::Google.Cloud.Dlp.V2.Value();
                }
                input.ReadMessage(MinValue);
                break;
              }
              case 18: {
                if (maxValue_ == null) {
                  MaxValue = new global::Google.Cloud.Dlp.V2.Value();
                }
                input.ReadMessage(MaxValue);
                break;
              }
              case 34: {
                quantileValues_.AddEntriesFrom(ref input, _repeated_quantileValues_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Result of the categorical stats computation.
      /// </summary>
      public sealed partial class CategoricalStatsResult : pb::IMessage<CategoricalStatsResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CategoricalStatsResult> _parser = new pb::MessageParser<CategoricalStatsResult>(() => new CategoricalStatsResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CategoricalStatsResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CategoricalStatsResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CategoricalStatsResult(CategoricalStatsResult other) : this() {
          valueFrequencyHistogramBuckets_ = other.valueFrequencyHistogramBuckets_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CategoricalStatsResult Clone() {
          return new CategoricalStatsResult(this);
        }

        /// <summary>Field number for the "value_frequency_histogram_buckets" field.</summary>
        public const int ValueFrequencyHistogramBucketsFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult.Types.CategoricalStatsHistogramBucket> _repeated_valueFrequencyHistogramBuckets_codec
            = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult.Types.CategoricalStatsHistogramBucket.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult.Types.CategoricalStatsHistogramBucket> valueFrequencyHistogramBuckets_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult.Types.CategoricalStatsHistogramBucket>();
        /// <summary>
        /// Histogram of value frequencies in the column.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult.Types.CategoricalStatsHistogramBucket> ValueFrequencyHistogramBuckets {
          get { return valueFrequencyHistogramBuckets_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CategoricalStatsResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CategoricalStatsResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!valueFrequencyHistogramBuckets_.Equals(other.valueFrequencyHistogramBuckets_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= valueFrequencyHistogramBuckets_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          valueFrequencyHistogramBuckets_.WriteTo(output, _repeated_valueFrequencyHistogramBuckets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          valueFrequencyHistogramBuckets_.WriteTo(ref output, _repeated_valueFrequencyHistogramBuckets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += valueFrequencyHistogramBuckets_.CalculateSize(_repeated_valueFrequencyHistogramBuckets_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CategoricalStatsResult other) {
          if (other == null) {
            return;
          }
          valueFrequencyHistogramBuckets_.Add(other.valueFrequencyHistogramBuckets_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 42: {
                valueFrequencyHistogramBuckets_.AddEntriesFrom(input, _repeated_valueFrequencyHistogramBuckets_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 42: {
                valueFrequencyHistogramBuckets_.AddEntriesFrom(ref input, _repeated_valueFrequencyHistogramBuckets_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the CategoricalStatsResult message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Histogram of value frequencies in the column.
          /// </summary>
          public sealed partial class CategoricalStatsHistogramBucket : pb::IMessage<CategoricalStatsHistogramBucket>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<CategoricalStatsHistogramBucket> _parser = new pb::MessageParser<CategoricalStatsHistogramBucket>(() => new CategoricalStatsHistogramBucket());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<CategoricalStatsHistogramBucket> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.CategoricalStatsResult.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CategoricalStatsHistogramBucket() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CategoricalStatsHistogramBucket(CategoricalStatsHistogramBucket other) : this() {
              valueFrequencyLowerBound_ = other.valueFrequencyLowerBound_;
              valueFrequencyUpperBound_ = other.valueFrequencyUpperBound_;
              bucketSize_ = other.bucketSize_;
              bucketValues_ = other.bucketValues_.Clone();
              bucketValueCount_ = other.bucketValueCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CategoricalStatsHistogramBucket Clone() {
              return new CategoricalStatsHistogramBucket(this);
            }

            /// <summary>Field number for the "value_frequency_lower_bound" field.</summary>
            public const int ValueFrequencyLowerBoundFieldNumber = 1;
            private long valueFrequencyLowerBound_;
            /// <summary>
            /// Lower bound on the value frequency of the values in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long ValueFrequencyLowerBound {
              get { return valueFrequencyLowerBound_; }
              set {
                valueFrequencyLowerBound_ = value;
              }
            }

            /// <summary>Field number for the "value_frequency_upper_bound" field.</summary>
            public const int ValueFrequencyUpperBoundFieldNumber = 2;
            private long valueFrequencyUpperBound_;
            /// <summary>
            /// Upper bound on the value frequency of the values in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long ValueFrequencyUpperBound {
              get { return valueFrequencyUpperBound_; }
              set {
                valueFrequencyUpperBound_ = value;
              }
            }

            /// <summary>Field number for the "bucket_size" field.</summary>
            public const int BucketSizeFieldNumber = 3;
            private long bucketSize_;
            /// <summary>
            /// Total number of values in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long BucketSize {
              get { return bucketSize_; }
              set {
                bucketSize_ = value;
              }
            }

            /// <summary>Field number for the "bucket_values" field.</summary>
            public const int BucketValuesFieldNumber = 4;
            private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.ValueFrequency> _repeated_bucketValues_codec
                = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Dlp.V2.ValueFrequency.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.ValueFrequency> bucketValues_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.ValueFrequency>();
            /// <summary>
            /// Sample of value frequencies in this bucket. The total number of
            /// values returned per bucket is capped at 20.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.ValueFrequency> BucketValues {
              get { return bucketValues_; }
            }

            /// <summary>Field number for the "bucket_value_count" field.</summary>
            public const int BucketValueCountFieldNumber = 5;
            private long bucketValueCount_;
            /// <summary>
            /// Total number of distinct values in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long BucketValueCount {
              get { return bucketValueCount_; }
              set {
                bucketValueCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as CategoricalStatsHistogramBucket);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(CategoricalStatsHistogramBucket other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ValueFrequencyLowerBound != other.ValueFrequencyLowerBound) return false;
              if (ValueFrequencyUpperBound != other.ValueFrequencyUpperBound) return false;
              if (BucketSize != other.BucketSize) return false;
              if(!bucketValues_.Equals(other.bucketValues_)) return false;
              if (BucketValueCount != other.BucketValueCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (ValueFrequencyLowerBound != 0L) hash ^= ValueFrequencyLowerBound.GetHashCode();
              if (ValueFrequencyUpperBound != 0L) hash ^= ValueFrequencyUpperBound.GetHashCode();
              if (BucketSize != 0L) hash ^= BucketSize.GetHashCode();
              hash ^= bucketValues_.GetHashCode();
              if (BucketValueCount != 0L) hash ^= BucketValueCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (ValueFrequencyLowerBound != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ValueFrequencyLowerBound);
              }
              if (ValueFrequencyUpperBound != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(ValueFrequencyUpperBound);
              }
              if (BucketSize != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(BucketSize);
              }
              bucketValues_.WriteTo(output, _repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(BucketValueCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (ValueFrequencyLowerBound != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(ValueFrequencyLowerBound);
              }
              if (ValueFrequencyUpperBound != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(ValueFrequencyUpperBound);
              }
              if (BucketSize != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(BucketSize);
              }
              bucketValues_.WriteTo(ref output, _repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(BucketValueCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (ValueFrequencyLowerBound != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(ValueFrequencyLowerBound);
              }
              if (ValueFrequencyUpperBound != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(ValueFrequencyUpperBound);
              }
              if (BucketSize != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketSize);
              }
              size += bucketValues_.CalculateSize(_repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketValueCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(CategoricalStatsHistogramBucket other) {
              if (other == null) {
                return;
              }
              if (other.ValueFrequencyLowerBound != 0L) {
                ValueFrequencyLowerBound = other.ValueFrequencyLowerBound;
              }
              if (other.ValueFrequencyUpperBound != 0L) {
                ValueFrequencyUpperBound = other.ValueFrequencyUpperBound;
              }
              if (other.BucketSize != 0L) {
                BucketSize = other.BucketSize;
              }
              bucketValues_.Add(other.bucketValues_);
              if (other.BucketValueCount != 0L) {
                BucketValueCount = other.BucketValueCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ValueFrequencyLowerBound = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    ValueFrequencyUpperBound = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    BucketSize = input.ReadInt64();
                    break;
                  }
                  case 34: {
                    bucketValues_.AddEntriesFrom(input, _repeated_bucketValues_codec);
                    break;
                  }
                  case 40: {
                    BucketValueCount = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    ValueFrequencyLowerBound = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    ValueFrequencyUpperBound = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    BucketSize = input.ReadInt64();
                    break;
                  }
                  case 34: {
                    bucketValues_.AddEntriesFrom(ref input, _repeated_bucketValues_codec);
                    break;
                  }
                  case 40: {
                    BucketValueCount = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Result of the k-anonymity computation.
      /// </summary>
      public sealed partial class KAnonymityResult : pb::IMessage<KAnonymityResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<KAnonymityResult> _parser = new pb::MessageParser<KAnonymityResult>(() => new KAnonymityResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<KAnonymityResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KAnonymityResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KAnonymityResult(KAnonymityResult other) : this() {
          equivalenceClassHistogramBuckets_ = other.equivalenceClassHistogramBuckets_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KAnonymityResult Clone() {
          return new KAnonymityResult(this);
        }

        /// <summary>Field number for the "equivalence_class_histogram_buckets" field.</summary>
        public const int EquivalenceClassHistogramBucketsFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityHistogramBucket> _repeated_equivalenceClassHistogramBuckets_codec
            = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityHistogramBucket.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityHistogramBucket> equivalenceClassHistogramBuckets_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityHistogramBucket>();
        /// <summary>
        /// Histogram of k-anonymity equivalence classes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityHistogramBucket> EquivalenceClassHistogramBuckets {
          get { return equivalenceClassHistogramBuckets_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as KAnonymityResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(KAnonymityResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!equivalenceClassHistogramBuckets_.Equals(other.equivalenceClassHistogramBuckets_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= equivalenceClassHistogramBuckets_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          equivalenceClassHistogramBuckets_.WriteTo(output, _repeated_equivalenceClassHistogramBuckets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          equivalenceClassHistogramBuckets_.WriteTo(ref output, _repeated_equivalenceClassHistogramBuckets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += equivalenceClassHistogramBuckets_.CalculateSize(_repeated_equivalenceClassHistogramBuckets_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(KAnonymityResult other) {
          if (other == null) {
            return;
          }
          equivalenceClassHistogramBuckets_.Add(other.equivalenceClassHistogramBuckets_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 42: {
                equivalenceClassHistogramBuckets_.AddEntriesFrom(input, _repeated_equivalenceClassHistogramBuckets_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 42: {
                equivalenceClassHistogramBuckets_.AddEntriesFrom(ref input, _repeated_equivalenceClassHistogramBuckets_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the KAnonymityResult message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// The set of columns' values that share the same ldiversity value
          /// </summary>
          public sealed partial class KAnonymityEquivalenceClass : pb::IMessage<KAnonymityEquivalenceClass>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<KAnonymityEquivalenceClass> _parser = new pb::MessageParser<KAnonymityEquivalenceClass>(() => new KAnonymityEquivalenceClass());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<KAnonymityEquivalenceClass> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public KAnonymityEquivalenceClass() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public KAnonymityEquivalenceClass(KAnonymityEquivalenceClass other) : this() {
              quasiIdsValues_ = other.quasiIdsValues_.Clone();
              equivalenceClassSize_ = other.equivalenceClassSize_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public KAnonymityEquivalenceClass Clone() {
              return new KAnonymityEquivalenceClass(this);
            }

            /// <summary>Field number for the "quasi_ids_values" field.</summary>
            public const int QuasiIdsValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Value> _repeated_quasiIdsValues_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value> quasiIdsValues_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value>();
            /// <summary>
            /// Set of values defining the equivalence class. One value per
            /// quasi-identifier column in the original KAnonymity metric message.
            /// The order is always the same as the original request.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value> QuasiIdsValues {
              get { return quasiIdsValues_; }
            }

            /// <summary>Field number for the "equivalence_class_size" field.</summary>
            public const int EquivalenceClassSizeFieldNumber = 2;
            private long equivalenceClassSize_;
            /// <summary>
            /// Size of the equivalence class, for example number of rows with the
            /// above set of values.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long EquivalenceClassSize {
              get { return equivalenceClassSize_; }
              set {
                equivalenceClassSize_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as KAnonymityEquivalenceClass);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(KAnonymityEquivalenceClass other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!quasiIdsValues_.Equals(other.quasiIdsValues_)) return false;
              if (EquivalenceClassSize != other.EquivalenceClassSize) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= quasiIdsValues_.GetHashCode();
              if (EquivalenceClassSize != 0L) hash ^= EquivalenceClassSize.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              quasiIdsValues_.WriteTo(output, _repeated_quasiIdsValues_codec);
              if (EquivalenceClassSize != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(EquivalenceClassSize);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              quasiIdsValues_.WriteTo(ref output, _repeated_quasiIdsValues_codec);
              if (EquivalenceClassSize != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(EquivalenceClassSize);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += quasiIdsValues_.CalculateSize(_repeated_quasiIdsValues_codec);
              if (EquivalenceClassSize != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(EquivalenceClassSize);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(KAnonymityEquivalenceClass other) {
              if (other == null) {
                return;
              }
              quasiIdsValues_.Add(other.quasiIdsValues_);
              if (other.EquivalenceClassSize != 0L) {
                EquivalenceClassSize = other.EquivalenceClassSize;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    quasiIdsValues_.AddEntriesFrom(input, _repeated_quasiIdsValues_codec);
                    break;
                  }
                  case 16: {
                    EquivalenceClassSize = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    quasiIdsValues_.AddEntriesFrom(ref input, _repeated_quasiIdsValues_codec);
                    break;
                  }
                  case 16: {
                    EquivalenceClassSize = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Histogram of k-anonymity equivalence classes.
          /// </summary>
          public sealed partial class KAnonymityHistogramBucket : pb::IMessage<KAnonymityHistogramBucket>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<KAnonymityHistogramBucket> _parser = new pb::MessageParser<KAnonymityHistogramBucket>(() => new KAnonymityHistogramBucket());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<KAnonymityHistogramBucket> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public KAnonymityHistogramBucket() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public KAnonymityHistogramBucket(KAnonymityHistogramBucket other) : this() {
              equivalenceClassSizeLowerBound_ = other.equivalenceClassSizeLowerBound_;
              equivalenceClassSizeUpperBound_ = other.equivalenceClassSizeUpperBound_;
              bucketSize_ = other.bucketSize_;
              bucketValues_ = other.bucketValues_.Clone();
              bucketValueCount_ = other.bucketValueCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public KAnonymityHistogramBucket Clone() {
              return new KAnonymityHistogramBucket(this);
            }

            /// <summary>Field number for the "equivalence_class_size_lower_bound" field.</summary>
            public const int EquivalenceClassSizeLowerBoundFieldNumber = 1;
            private long equivalenceClassSizeLowerBound_;
            /// <summary>
            /// Lower bound on the size of the equivalence classes in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long EquivalenceClassSizeLowerBound {
              get { return equivalenceClassSizeLowerBound_; }
              set {
                equivalenceClassSizeLowerBound_ = value;
              }
            }

            /// <summary>Field number for the "equivalence_class_size_upper_bound" field.</summary>
            public const int EquivalenceClassSizeUpperBoundFieldNumber = 2;
            private long equivalenceClassSizeUpperBound_;
            /// <summary>
            /// Upper bound on the size of the equivalence classes in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long EquivalenceClassSizeUpperBound {
              get { return equivalenceClassSizeUpperBound_; }
              set {
                equivalenceClassSizeUpperBound_ = value;
              }
            }

            /// <summary>Field number for the "bucket_size" field.</summary>
            public const int BucketSizeFieldNumber = 3;
            private long bucketSize_;
            /// <summary>
            /// Total number of equivalence classes in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long BucketSize {
              get { return bucketSize_; }
              set {
                bucketSize_ = value;
              }
            }

            /// <summary>Field number for the "bucket_values" field.</summary>
            public const int BucketValuesFieldNumber = 4;
            private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityEquivalenceClass> _repeated_bucketValues_codec
                = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityEquivalenceClass.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityEquivalenceClass> bucketValues_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityEquivalenceClass>();
            /// <summary>
            /// Sample of equivalence classes in this bucket. The total number of
            /// classes returned per bucket is capped at 20.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KAnonymityResult.Types.KAnonymityEquivalenceClass> BucketValues {
              get { return bucketValues_; }
            }

            /// <summary>Field number for the "bucket_value_count" field.</summary>
            public const int BucketValueCountFieldNumber = 5;
            private long bucketValueCount_;
            /// <summary>
            /// Total number of distinct equivalence classes in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long BucketValueCount {
              get { return bucketValueCount_; }
              set {
                bucketValueCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as KAnonymityHistogramBucket);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(KAnonymityHistogramBucket other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (EquivalenceClassSizeLowerBound != other.EquivalenceClassSizeLowerBound) return false;
              if (EquivalenceClassSizeUpperBound != other.EquivalenceClassSizeUpperBound) return false;
              if (BucketSize != other.BucketSize) return false;
              if(!bucketValues_.Equals(other.bucketValues_)) return false;
              if (BucketValueCount != other.BucketValueCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (EquivalenceClassSizeLowerBound != 0L) hash ^= EquivalenceClassSizeLowerBound.GetHashCode();
              if (EquivalenceClassSizeUpperBound != 0L) hash ^= EquivalenceClassSizeUpperBound.GetHashCode();
              if (BucketSize != 0L) hash ^= BucketSize.GetHashCode();
              hash ^= bucketValues_.GetHashCode();
              if (BucketValueCount != 0L) hash ^= BucketValueCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (EquivalenceClassSizeLowerBound != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(EquivalenceClassSizeLowerBound);
              }
              if (EquivalenceClassSizeUpperBound != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(EquivalenceClassSizeUpperBound);
              }
              if (BucketSize != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(BucketSize);
              }
              bucketValues_.WriteTo(output, _repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(BucketValueCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (EquivalenceClassSizeLowerBound != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(EquivalenceClassSizeLowerBound);
              }
              if (EquivalenceClassSizeUpperBound != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(EquivalenceClassSizeUpperBound);
              }
              if (BucketSize != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(BucketSize);
              }
              bucketValues_.WriteTo(ref output, _repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(BucketValueCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (EquivalenceClassSizeLowerBound != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(EquivalenceClassSizeLowerBound);
              }
              if (EquivalenceClassSizeUpperBound != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(EquivalenceClassSizeUpperBound);
              }
              if (BucketSize != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketSize);
              }
              size += bucketValues_.CalculateSize(_repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketValueCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(KAnonymityHistogramBucket other) {
              if (other == null) {
                return;
              }
              if (other.EquivalenceClassSizeLowerBound != 0L) {
                EquivalenceClassSizeLowerBound = other.EquivalenceClassSizeLowerBound;
              }
              if (other.EquivalenceClassSizeUpperBound != 0L) {
                EquivalenceClassSizeUpperBound = other.EquivalenceClassSizeUpperBound;
              }
              if (other.BucketSize != 0L) {
                BucketSize = other.BucketSize;
              }
              bucketValues_.Add(other.bucketValues_);
              if (other.BucketValueCount != 0L) {
                BucketValueCount = other.BucketValueCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    EquivalenceClassSizeLowerBound = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    EquivalenceClassSizeUpperBound = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    BucketSize = input.ReadInt64();
                    break;
                  }
                  case 34: {
                    bucketValues_.AddEntriesFrom(input, _repeated_bucketValues_codec);
                    break;
                  }
                  case 40: {
                    BucketValueCount = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    EquivalenceClassSizeLowerBound = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    EquivalenceClassSizeUpperBound = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    BucketSize = input.ReadInt64();
                    break;
                  }
                  case 34: {
                    bucketValues_.AddEntriesFrom(ref input, _repeated_bucketValues_codec);
                    break;
                  }
                  case 40: {
                    BucketValueCount = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Result of the l-diversity computation.
      /// </summary>
      public sealed partial class LDiversityResult : pb::IMessage<LDiversityResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LDiversityResult> _parser = new pb::MessageParser<LDiversityResult>(() => new LDiversityResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LDiversityResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LDiversityResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LDiversityResult(LDiversityResult other) : this() {
          sensitiveValueFrequencyHistogramBuckets_ = other.sensitiveValueFrequencyHistogramBuckets_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LDiversityResult Clone() {
          return new LDiversityResult(this);
        }

        /// <summary>Field number for the "sensitive_value_frequency_histogram_buckets" field.</summary>
        public const int SensitiveValueFrequencyHistogramBucketsFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityHistogramBucket> _repeated_sensitiveValueFrequencyHistogramBuckets_codec
            = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityHistogramBucket.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityHistogramBucket> sensitiveValueFrequencyHistogramBuckets_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityHistogramBucket>();
        /// <summary>
        /// Histogram of l-diversity equivalence class sensitive value frequencies.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityHistogramBucket> SensitiveValueFrequencyHistogramBuckets {
          get { return sensitiveValueFrequencyHistogramBuckets_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LDiversityResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LDiversityResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!sensitiveValueFrequencyHistogramBuckets_.Equals(other.sensitiveValueFrequencyHistogramBuckets_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= sensitiveValueFrequencyHistogramBuckets_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          sensitiveValueFrequencyHistogramBuckets_.WriteTo(output, _repeated_sensitiveValueFrequencyHistogramBuckets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          sensitiveValueFrequencyHistogramBuckets_.WriteTo(ref output, _repeated_sensitiveValueFrequencyHistogramBuckets_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += sensitiveValueFrequencyHistogramBuckets_.CalculateSize(_repeated_sensitiveValueFrequencyHistogramBuckets_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LDiversityResult other) {
          if (other == null) {
            return;
          }
          sensitiveValueFrequencyHistogramBuckets_.Add(other.sensitiveValueFrequencyHistogramBuckets_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 42: {
                sensitiveValueFrequencyHistogramBuckets_.AddEntriesFrom(input, _repeated_sensitiveValueFrequencyHistogramBuckets_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 42: {
                sensitiveValueFrequencyHistogramBuckets_.AddEntriesFrom(ref input, _repeated_sensitiveValueFrequencyHistogramBuckets_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the LDiversityResult message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// The set of columns' values that share the same ldiversity value.
          /// </summary>
          public sealed partial class LDiversityEquivalenceClass : pb::IMessage<LDiversityEquivalenceClass>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<LDiversityEquivalenceClass> _parser = new pb::MessageParser<LDiversityEquivalenceClass>(() => new LDiversityEquivalenceClass());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<LDiversityEquivalenceClass> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LDiversityEquivalenceClass() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LDiversityEquivalenceClass(LDiversityEquivalenceClass other) : this() {
              quasiIdsValues_ = other.quasiIdsValues_.Clone();
              equivalenceClassSize_ = other.equivalenceClassSize_;
              numDistinctSensitiveValues_ = other.numDistinctSensitiveValues_;
              topSensitiveValues_ = other.topSensitiveValues_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LDiversityEquivalenceClass Clone() {
              return new LDiversityEquivalenceClass(this);
            }

            /// <summary>Field number for the "quasi_ids_values" field.</summary>
            public const int QuasiIdsValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Value> _repeated_quasiIdsValues_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value> quasiIdsValues_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value>();
            /// <summary>
            /// Quasi-identifier values defining the k-anonymity equivalence
            /// class. The order is always the same as the original request.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value> QuasiIdsValues {
              get { return quasiIdsValues_; }
            }

            /// <summary>Field number for the "equivalence_class_size" field.</summary>
            public const int EquivalenceClassSizeFieldNumber = 2;
            private long equivalenceClassSize_;
            /// <summary>
            /// Size of the k-anonymity equivalence class.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long EquivalenceClassSize {
              get { return equivalenceClassSize_; }
              set {
                equivalenceClassSize_ = value;
              }
            }

            /// <summary>Field number for the "num_distinct_sensitive_values" field.</summary>
            public const int NumDistinctSensitiveValuesFieldNumber = 3;
            private long numDistinctSensitiveValues_;
            /// <summary>
            /// Number of distinct sensitive values in this equivalence class.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long NumDistinctSensitiveValues {
              get { return numDistinctSensitiveValues_; }
              set {
                numDistinctSensitiveValues_ = value;
              }
            }

            /// <summary>Field number for the "top_sensitive_values" field.</summary>
            public const int TopSensitiveValuesFieldNumber = 4;
            private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.ValueFrequency> _repeated_topSensitiveValues_codec
                = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Dlp.V2.ValueFrequency.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.ValueFrequency> topSensitiveValues_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.ValueFrequency>();
            /// <summary>
            /// Estimated frequencies of top sensitive values.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.ValueFrequency> TopSensitiveValues {
              get { return topSensitiveValues_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as LDiversityEquivalenceClass);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(LDiversityEquivalenceClass other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!quasiIdsValues_.Equals(other.quasiIdsValues_)) return false;
              if (EquivalenceClassSize != other.EquivalenceClassSize) return false;
              if (NumDistinctSensitiveValues != other.NumDistinctSensitiveValues) return false;
              if(!topSensitiveValues_.Equals(other.topSensitiveValues_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= quasiIdsValues_.GetHashCode();
              if (EquivalenceClassSize != 0L) hash ^= EquivalenceClassSize.GetHashCode();
              if (NumDistinctSensitiveValues != 0L) hash ^= NumDistinctSensitiveValues.GetHashCode();
              hash ^= topSensitiveValues_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              quasiIdsValues_.WriteTo(output, _repeated_quasiIdsValues_codec);
              if (EquivalenceClassSize != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(EquivalenceClassSize);
              }
              if (NumDistinctSensitiveValues != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(NumDistinctSensitiveValues);
              }
              topSensitiveValues_.WriteTo(output, _repeated_topSensitiveValues_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              quasiIdsValues_.WriteTo(ref output, _repeated_quasiIdsValues_codec);
              if (EquivalenceClassSize != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(EquivalenceClassSize);
              }
              if (NumDistinctSensitiveValues != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(NumDistinctSensitiveValues);
              }
              topSensitiveValues_.WriteTo(ref output, _repeated_topSensitiveValues_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += quasiIdsValues_.CalculateSize(_repeated_quasiIdsValues_codec);
              if (EquivalenceClassSize != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(EquivalenceClassSize);
              }
              if (NumDistinctSensitiveValues != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumDistinctSensitiveValues);
              }
              size += topSensitiveValues_.CalculateSize(_repeated_topSensitiveValues_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(LDiversityEquivalenceClass other) {
              if (other == null) {
                return;
              }
              quasiIdsValues_.Add(other.quasiIdsValues_);
              if (other.EquivalenceClassSize != 0L) {
                EquivalenceClassSize = other.EquivalenceClassSize;
              }
              if (other.NumDistinctSensitiveValues != 0L) {
                NumDistinctSensitiveValues = other.NumDistinctSensitiveValues;
              }
              topSensitiveValues_.Add(other.topSensitiveValues_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    quasiIdsValues_.AddEntriesFrom(input, _repeated_quasiIdsValues_codec);
                    break;
                  }
                  case 16: {
                    EquivalenceClassSize = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    NumDistinctSensitiveValues = input.ReadInt64();
                    break;
                  }
                  case 34: {
                    topSensitiveValues_.AddEntriesFrom(input, _repeated_topSensitiveValues_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    quasiIdsValues_.AddEntriesFrom(ref input, _repeated_quasiIdsValues_codec);
                    break;
                  }
                  case 16: {
                    EquivalenceClassSize = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    NumDistinctSensitiveValues = input.ReadInt64();
                    break;
                  }
                  case 34: {
                    topSensitiveValues_.AddEntriesFrom(ref input, _repeated_topSensitiveValues_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Histogram of l-diversity equivalence class sensitive value frequencies.
          /// </summary>
          public sealed partial class LDiversityHistogramBucket : pb::IMessage<LDiversityHistogramBucket>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<LDiversityHistogramBucket> _parser = new pb::MessageParser<LDiversityHistogramBucket>(() => new LDiversityHistogramBucket());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<LDiversityHistogramBucket> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LDiversityHistogramBucket() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LDiversityHistogramBucket(LDiversityHistogramBucket other) : this() {
              sensitiveValueFrequencyLowerBound_ = other.sensitiveValueFrequencyLowerBound_;
              sensitiveValueFrequencyUpperBound_ = other.sensitiveValueFrequencyUpperBound_;
              bucketSize_ = other.bucketSize_;
              bucketValues_ = other.bucketValues_.Clone();
              bucketValueCount_ = other.bucketValueCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LDiversityHistogramBucket Clone() {
              return new LDiversityHistogramBucket(this);
            }

            /// <summary>Field number for the "sensitive_value_frequency_lower_bound" field.</summary>
            public const int SensitiveValueFrequencyLowerBoundFieldNumber = 1;
            private long sensitiveValueFrequencyLowerBound_;
            /// <summary>
            /// Lower bound on the sensitive value frequencies of the equivalence
            /// classes in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long SensitiveValueFrequencyLowerBound {
              get { return sensitiveValueFrequencyLowerBound_; }
              set {
                sensitiveValueFrequencyLowerBound_ = value;
              }
            }

            /// <summary>Field number for the "sensitive_value_frequency_upper_bound" field.</summary>
            public const int SensitiveValueFrequencyUpperBoundFieldNumber = 2;
            private long sensitiveValueFrequencyUpperBound_;
            /// <summary>
            /// Upper bound on the sensitive value frequencies of the equivalence
            /// classes in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long SensitiveValueFrequencyUpperBound {
              get { return sensitiveValueFrequencyUpperBound_; }
              set {
                sensitiveValueFrequencyUpperBound_ = value;
              }
            }

            /// <summary>Field number for the "bucket_size" field.</summary>
            public const int BucketSizeFieldNumber = 3;
            private long bucketSize_;
            /// <summary>
            /// Total number of equivalence classes in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long BucketSize {
              get { return bucketSize_; }
              set {
                bucketSize_ = value;
              }
            }

            /// <summary>Field number for the "bucket_values" field.</summary>
            public const int BucketValuesFieldNumber = 4;
            private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityEquivalenceClass> _repeated_bucketValues_codec
                = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityEquivalenceClass.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityEquivalenceClass> bucketValues_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityEquivalenceClass>();
            /// <summary>
            /// Sample of equivalence classes in this bucket. The total number of
            /// classes returned per bucket is capped at 20.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.LDiversityResult.Types.LDiversityEquivalenceClass> BucketValues {
              get { return bucketValues_; }
            }

            /// <summary>Field number for the "bucket_value_count" field.</summary>
            public const int BucketValueCountFieldNumber = 5;
            private long bucketValueCount_;
            /// <summary>
            /// Total number of distinct equivalence classes in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long BucketValueCount {
              get { return bucketValueCount_; }
              set {
                bucketValueCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as LDiversityHistogramBucket);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(LDiversityHistogramBucket other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (SensitiveValueFrequencyLowerBound != other.SensitiveValueFrequencyLowerBound) return false;
              if (SensitiveValueFrequencyUpperBound != other.SensitiveValueFrequencyUpperBound) return false;
              if (BucketSize != other.BucketSize) return false;
              if(!bucketValues_.Equals(other.bucketValues_)) return false;
              if (BucketValueCount != other.BucketValueCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (SensitiveValueFrequencyLowerBound != 0L) hash ^= SensitiveValueFrequencyLowerBound.GetHashCode();
              if (SensitiveValueFrequencyUpperBound != 0L) hash ^= SensitiveValueFrequencyUpperBound.GetHashCode();
              if (BucketSize != 0L) hash ^= BucketSize.GetHashCode();
              hash ^= bucketValues_.GetHashCode();
              if (BucketValueCount != 0L) hash ^= BucketValueCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (SensitiveValueFrequencyLowerBound != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(SensitiveValueFrequencyLowerBound);
              }
              if (SensitiveValueFrequencyUpperBound != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(SensitiveValueFrequencyUpperBound);
              }
              if (BucketSize != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(BucketSize);
              }
              bucketValues_.WriteTo(output, _repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(BucketValueCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (SensitiveValueFrequencyLowerBound != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(SensitiveValueFrequencyLowerBound);
              }
              if (SensitiveValueFrequencyUpperBound != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(SensitiveValueFrequencyUpperBound);
              }
              if (BucketSize != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(BucketSize);
              }
              bucketValues_.WriteTo(ref output, _repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(BucketValueCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (SensitiveValueFrequencyLowerBound != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(SensitiveValueFrequencyLowerBound);
              }
              if (SensitiveValueFrequencyUpperBound != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(SensitiveValueFrequencyUpperBound);
              }
              if (BucketSize != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketSize);
              }
              size += bucketValues_.CalculateSize(_repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketValueCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(LDiversityHistogramBucket other) {
              if (other == null) {
                return;
              }
              if (other.SensitiveValueFrequencyLowerBound != 0L) {
                SensitiveValueFrequencyLowerBound = other.SensitiveValueFrequencyLowerBound;
              }
              if (other.SensitiveValueFrequencyUpperBound != 0L) {
                SensitiveValueFrequencyUpperBound = other.SensitiveValueFrequencyUpperBound;
              }
              if (other.BucketSize != 0L) {
                BucketSize = other.BucketSize;
              }
              bucketValues_.Add(other.bucketValues_);
              if (other.BucketValueCount != 0L) {
                BucketValueCount = other.BucketValueCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    SensitiveValueFrequencyLowerBound = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    SensitiveValueFrequencyUpperBound = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    BucketSize = input.ReadInt64();
                    break;
                  }
                  case 34: {
                    bucketValues_.AddEntriesFrom(input, _repeated_bucketValues_codec);
                    break;
                  }
                  case 40: {
                    BucketValueCount = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    SensitiveValueFrequencyLowerBound = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    SensitiveValueFrequencyUpperBound = input.ReadInt64();
                    break;
                  }
                  case 24: {
                    BucketSize = input.ReadInt64();
                    break;
                  }
                  case 34: {
                    bucketValues_.AddEntriesFrom(ref input, _repeated_bucketValues_codec);
                    break;
                  }
                  case 40: {
                    BucketValueCount = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Result of the reidentifiability analysis. Note that these results are an
      /// estimation, not exact values.
      /// </summary>
      public sealed partial class KMapEstimationResult : pb::IMessage<KMapEstimationResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<KMapEstimationResult> _parser = new pb::MessageParser<KMapEstimationResult>(() => new KMapEstimationResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<KMapEstimationResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KMapEstimationResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KMapEstimationResult(KMapEstimationResult other) : this() {
          kMapEstimationHistogram_ = other.kMapEstimationHistogram_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KMapEstimationResult Clone() {
          return new KMapEstimationResult(this);
        }

        /// <summary>Field number for the "k_map_estimation_histogram" field.</summary>
        public const int KMapEstimationHistogramFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationHistogramBucket> _repeated_kMapEstimationHistogram_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationHistogramBucket.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationHistogramBucket> kMapEstimationHistogram_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationHistogramBucket>();
        /// <summary>
        /// The intervals [min_anonymity, max_anonymity] do not overlap. If a value
        /// doesn't correspond to any such interval, the associated frequency is
        /// zero. For example, the following records:
        ///   {min_anonymity: 1, max_anonymity: 1, frequency: 17}
        ///   {min_anonymity: 2, max_anonymity: 3, frequency: 42}
        ///   {min_anonymity: 5, max_anonymity: 10, frequency: 99}
        /// mean that there are no record with an estimated anonymity of 4, 5, or
        /// larger than 10.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationHistogramBucket> KMapEstimationHistogram {
          get { return kMapEstimationHistogram_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as KMapEstimationResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(KMapEstimationResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!kMapEstimationHistogram_.Equals(other.kMapEstimationHistogram_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= kMapEstimationHistogram_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          kMapEstimationHistogram_.WriteTo(output, _repeated_kMapEstimationHistogram_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          kMapEstimationHistogram_.WriteTo(ref output, _repeated_kMapEstimationHistogram_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += kMapEstimationHistogram_.CalculateSize(_repeated_kMapEstimationHistogram_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(KMapEstimationResult other) {
          if (other == null) {
            return;
          }
          kMapEstimationHistogram_.Add(other.kMapEstimationHistogram_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                kMapEstimationHistogram_.AddEntriesFrom(input, _repeated_kMapEstimationHistogram_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                kMapEstimationHistogram_.AddEntriesFrom(ref input, _repeated_kMapEstimationHistogram_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the KMapEstimationResult message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// A tuple of values for the quasi-identifier columns.
          /// </summary>
          public sealed partial class KMapEstimationQuasiIdValues : pb::IMessage<KMapEstimationQuasiIdValues>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<KMapEstimationQuasiIdValues> _parser = new pb::MessageParser<KMapEstimationQuasiIdValues>(() => new KMapEstimationQuasiIdValues());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<KMapEstimationQuasiIdValues> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public KMapEstimationQuasiIdValues() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public KMapEstimationQuasiIdValues(KMapEstimationQuasiIdValues other) : this() {
              quasiIdsValues_ = other.quasiIdsValues_.Clone();
              estimatedAnonymity_ = other.estimatedAnonymity_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public KMapEstimationQuasiIdValues Clone() {
              return new KMapEstimationQuasiIdValues(this);
            }

            /// <summary>Field number for the "quasi_ids_values" field.</summary>
            public const int QuasiIdsValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Value> _repeated_quasiIdsValues_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value> quasiIdsValues_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value>();
            /// <summary>
            /// The quasi-identifier values.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value> QuasiIdsValues {
              get { return quasiIdsValues_; }
            }

            /// <summary>Field number for the "estimated_anonymity" field.</summary>
            public const int EstimatedAnonymityFieldNumber = 2;
            private long estimatedAnonymity_;
            /// <summary>
            /// The estimated anonymity for these quasi-identifier values.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long EstimatedAnonymity {
              get { return estimatedAnonymity_; }
              set {
                estimatedAnonymity_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as KMapEstimationQuasiIdValues);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(KMapEstimationQuasiIdValues other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!quasiIdsValues_.Equals(other.quasiIdsValues_)) return false;
              if (EstimatedAnonymity != other.EstimatedAnonymity) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= quasiIdsValues_.GetHashCode();
              if (EstimatedAnonymity != 0L) hash ^= EstimatedAnonymity.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              quasiIdsValues_.WriteTo(output, _repeated_quasiIdsValues_codec);
              if (EstimatedAnonymity != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(EstimatedAnonymity);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              quasiIdsValues_.WriteTo(ref output, _repeated_quasiIdsValues_codec);
              if (EstimatedAnonymity != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(EstimatedAnonymity);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += quasiIdsValues_.CalculateSize(_repeated_quasiIdsValues_codec);
              if (EstimatedAnonymity != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(EstimatedAnonymity);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(KMapEstimationQuasiIdValues other) {
              if (other == null) {
                return;
              }
              quasiIdsValues_.Add(other.quasiIdsValues_);
              if (other.EstimatedAnonymity != 0L) {
                EstimatedAnonymity = other.EstimatedAnonymity;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    quasiIdsValues_.AddEntriesFrom(input, _repeated_quasiIdsValues_codec);
                    break;
                  }
                  case 16: {
                    EstimatedAnonymity = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    quasiIdsValues_.AddEntriesFrom(ref input, _repeated_quasiIdsValues_codec);
                    break;
                  }
                  case 16: {
                    EstimatedAnonymity = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A KMapEstimationHistogramBucket message with the following values:
          ///   min_anonymity: 3
          ///   max_anonymity: 5
          ///   frequency: 42
          /// means that there are 42 records whose quasi-identifier values correspond
          /// to 3, 4 or 5 people in the overlying population. An important particular
          /// case is when min_anonymity = max_anonymity = 1: the frequency field then
          /// corresponds to the number of uniquely identifiable records.
          /// </summary>
          public sealed partial class KMapEstimationHistogramBucket : pb::IMessage<KMapEstimationHistogramBucket>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<KMapEstimationHistogramBucket> _parser = new pb::MessageParser<KMapEstimationHistogramBucket>(() => new KMapEstimationHistogramBucket());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<KMapEstimationHistogramBucket> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public KMapEstimationHistogramBucket() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public KMapEstimationHistogramBucket(KMapEstimationHistogramBucket other) : this() {
              minAnonymity_ = other.minAnonymity_;
              maxAnonymity_ = other.maxAnonymity_;
              bucketSize_ = other.bucketSize_;
              bucketValues_ = other.bucketValues_.Clone();
              bucketValueCount_ = other.bucketValueCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public KMapEstimationHistogramBucket Clone() {
              return new KMapEstimationHistogramBucket(this);
            }

            /// <summary>Field number for the "min_anonymity" field.</summary>
            public const int MinAnonymityFieldNumber = 1;
            private long minAnonymity_;
            /// <summary>
            /// Always positive.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long MinAnonymity {
              get { return minAnonymity_; }
              set {
                minAnonymity_ = value;
              }
            }

            /// <summary>Field number for the "max_anonymity" field.</summary>
            public const int MaxAnonymityFieldNumber = 2;
            private long maxAnonymity_;
            /// <summary>
            /// Always greater than or equal to min_anonymity.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long MaxAnonymity {
              get { return maxAnonymity_; }
              set {
                maxAnonymity_ = value;
              }
            }

            /// <summary>Field number for the "bucket_size" field.</summary>
            public const int BucketSizeFieldNumber = 5;
            private long bucketSize_;
            /// <summary>
            /// Number of records within these anonymity bounds.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long BucketSize {
              get { return bucketSize_; }
              set {
                bucketSize_ = value;
              }
            }

            /// <summary>Field number for the "bucket_values" field.</summary>
            public const int BucketValuesFieldNumber = 6;
            private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationQuasiIdValues> _repeated_bucketValues_codec
                = pb::FieldCodec.ForMessage(50, global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationQuasiIdValues.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationQuasiIdValues> bucketValues_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationQuasiIdValues>();
            /// <summary>
            /// Sample of quasi-identifier tuple values in this bucket. The total
            /// number of classes returned per bucket is capped at 20.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.KMapEstimationResult.Types.KMapEstimationQuasiIdValues> BucketValues {
              get { return bucketValues_; }
            }

            /// <summary>Field number for the "bucket_value_count" field.</summary>
            public const int BucketValueCountFieldNumber = 7;
            private long bucketValueCount_;
            /// <summary>
            /// Total number of distinct quasi-identifier tuple values in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long BucketValueCount {
              get { return bucketValueCount_; }
              set {
                bucketValueCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as KMapEstimationHistogramBucket);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(KMapEstimationHistogramBucket other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (MinAnonymity != other.MinAnonymity) return false;
              if (MaxAnonymity != other.MaxAnonymity) return false;
              if (BucketSize != other.BucketSize) return false;
              if(!bucketValues_.Equals(other.bucketValues_)) return false;
              if (BucketValueCount != other.BucketValueCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (MinAnonymity != 0L) hash ^= MinAnonymity.GetHashCode();
              if (MaxAnonymity != 0L) hash ^= MaxAnonymity.GetHashCode();
              if (BucketSize != 0L) hash ^= BucketSize.GetHashCode();
              hash ^= bucketValues_.GetHashCode();
              if (BucketValueCount != 0L) hash ^= BucketValueCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (MinAnonymity != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(MinAnonymity);
              }
              if (MaxAnonymity != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(MaxAnonymity);
              }
              if (BucketSize != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(BucketSize);
              }
              bucketValues_.WriteTo(output, _repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                output.WriteRawTag(56);
                output.WriteInt64(BucketValueCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (MinAnonymity != 0L) {
                output.WriteRawTag(8);
                output.WriteInt64(MinAnonymity);
              }
              if (MaxAnonymity != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(MaxAnonymity);
              }
              if (BucketSize != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(BucketSize);
              }
              bucketValues_.WriteTo(ref output, _repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                output.WriteRawTag(56);
                output.WriteInt64(BucketValueCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (MinAnonymity != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinAnonymity);
              }
              if (MaxAnonymity != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxAnonymity);
              }
              if (BucketSize != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketSize);
              }
              size += bucketValues_.CalculateSize(_repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketValueCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(KMapEstimationHistogramBucket other) {
              if (other == null) {
                return;
              }
              if (other.MinAnonymity != 0L) {
                MinAnonymity = other.MinAnonymity;
              }
              if (other.MaxAnonymity != 0L) {
                MaxAnonymity = other.MaxAnonymity;
              }
              if (other.BucketSize != 0L) {
                BucketSize = other.BucketSize;
              }
              bucketValues_.Add(other.bucketValues_);
              if (other.BucketValueCount != 0L) {
                BucketValueCount = other.BucketValueCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    MinAnonymity = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    MaxAnonymity = input.ReadInt64();
                    break;
                  }
                  case 40: {
                    BucketSize = input.ReadInt64();
                    break;
                  }
                  case 50: {
                    bucketValues_.AddEntriesFrom(input, _repeated_bucketValues_codec);
                    break;
                  }
                  case 56: {
                    BucketValueCount = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    MinAnonymity = input.ReadInt64();
                    break;
                  }
                  case 16: {
                    MaxAnonymity = input.ReadInt64();
                    break;
                  }
                  case 40: {
                    BucketSize = input.ReadInt64();
                    break;
                  }
                  case 50: {
                    bucketValues_.AddEntriesFrom(ref input, _repeated_bucketValues_codec);
                    break;
                  }
                  case 56: {
                    BucketValueCount = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Result of the δ-presence computation. Note that these results are an
      /// estimation, not exact values.
      /// </summary>
      public sealed partial class DeltaPresenceEstimationResult : pb::IMessage<DeltaPresenceEstimationResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DeltaPresenceEstimationResult> _parser = new pb::MessageParser<DeltaPresenceEstimationResult>(() => new DeltaPresenceEstimationResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeltaPresenceEstimationResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeltaPresenceEstimationResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeltaPresenceEstimationResult(DeltaPresenceEstimationResult other) : this() {
          deltaPresenceEstimationHistogram_ = other.deltaPresenceEstimationHistogram_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeltaPresenceEstimationResult Clone() {
          return new DeltaPresenceEstimationResult(this);
        }

        /// <summary>Field number for the "delta_presence_estimation_histogram" field.</summary>
        public const int DeltaPresenceEstimationHistogramFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationHistogramBucket> _repeated_deltaPresenceEstimationHistogram_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationHistogramBucket.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationHistogramBucket> deltaPresenceEstimationHistogram_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationHistogramBucket>();
        /// <summary>
        /// The intervals [min_probability, max_probability) do not overlap. If a
        /// value doesn't correspond to any such interval, the associated frequency
        /// is zero. For example, the following records:
        ///   {min_probability: 0, max_probability: 0.1, frequency: 17}
        ///   {min_probability: 0.2, max_probability: 0.3, frequency: 42}
        ///   {min_probability: 0.3, max_probability: 0.4, frequency: 99}
        /// mean that there are no record with an estimated probability in [0.1, 0.2)
        /// nor larger or equal to 0.4.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationHistogramBucket> DeltaPresenceEstimationHistogram {
          get { return deltaPresenceEstimationHistogram_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DeltaPresenceEstimationResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeltaPresenceEstimationResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!deltaPresenceEstimationHistogram_.Equals(other.deltaPresenceEstimationHistogram_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= deltaPresenceEstimationHistogram_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          deltaPresenceEstimationHistogram_.WriteTo(output, _repeated_deltaPresenceEstimationHistogram_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          deltaPresenceEstimationHistogram_.WriteTo(ref output, _repeated_deltaPresenceEstimationHistogram_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += deltaPresenceEstimationHistogram_.CalculateSize(_repeated_deltaPresenceEstimationHistogram_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeltaPresenceEstimationResult other) {
          if (other == null) {
            return;
          }
          deltaPresenceEstimationHistogram_.Add(other.deltaPresenceEstimationHistogram_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                deltaPresenceEstimationHistogram_.AddEntriesFrom(input, _repeated_deltaPresenceEstimationHistogram_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                deltaPresenceEstimationHistogram_.AddEntriesFrom(ref input, _repeated_deltaPresenceEstimationHistogram_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the DeltaPresenceEstimationResult message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// A tuple of values for the quasi-identifier columns.
          /// </summary>
          public sealed partial class DeltaPresenceEstimationQuasiIdValues : pb::IMessage<DeltaPresenceEstimationQuasiIdValues>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<DeltaPresenceEstimationQuasiIdValues> _parser = new pb::MessageParser<DeltaPresenceEstimationQuasiIdValues>(() => new DeltaPresenceEstimationQuasiIdValues());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<DeltaPresenceEstimationQuasiIdValues> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DeltaPresenceEstimationQuasiIdValues() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DeltaPresenceEstimationQuasiIdValues(DeltaPresenceEstimationQuasiIdValues other) : this() {
              quasiIdsValues_ = other.quasiIdsValues_.Clone();
              estimatedProbability_ = other.estimatedProbability_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DeltaPresenceEstimationQuasiIdValues Clone() {
              return new DeltaPresenceEstimationQuasiIdValues(this);
            }

            /// <summary>Field number for the "quasi_ids_values" field.</summary>
            public const int QuasiIdsValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Value> _repeated_quasiIdsValues_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value> quasiIdsValues_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value>();
            /// <summary>
            /// The quasi-identifier values.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Value> QuasiIdsValues {
              get { return quasiIdsValues_; }
            }

            /// <summary>Field number for the "estimated_probability" field.</summary>
            public const int EstimatedProbabilityFieldNumber = 2;
            private double estimatedProbability_;
            /// <summary>
            /// The estimated probability that a given individual sharing these
            /// quasi-identifier values is in the dataset. This value, typically called
            /// δ, is the ratio between the number of records in the dataset with these
            /// quasi-identifier values, and the total number of individuals (inside
            /// *and* outside the dataset) with these quasi-identifier values.
            /// For example, if there are 15 individuals in the dataset who share the
            /// same quasi-identifier values, and an estimated 100 people in the entire
            /// population with these values, then δ is 0.15.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public double EstimatedProbability {
              get { return estimatedProbability_; }
              set {
                estimatedProbability_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as DeltaPresenceEstimationQuasiIdValues);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(DeltaPresenceEstimationQuasiIdValues other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!quasiIdsValues_.Equals(other.quasiIdsValues_)) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EstimatedProbability, other.EstimatedProbability)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= quasiIdsValues_.GetHashCode();
              if (EstimatedProbability != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EstimatedProbability);
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              quasiIdsValues_.WriteTo(output, _repeated_quasiIdsValues_codec);
              if (EstimatedProbability != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(EstimatedProbability);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              quasiIdsValues_.WriteTo(ref output, _repeated_quasiIdsValues_codec);
              if (EstimatedProbability != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(EstimatedProbability);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += quasiIdsValues_.CalculateSize(_repeated_quasiIdsValues_codec);
              if (EstimatedProbability != 0D) {
                size += 1 + 8;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(DeltaPresenceEstimationQuasiIdValues other) {
              if (other == null) {
                return;
              }
              quasiIdsValues_.Add(other.quasiIdsValues_);
              if (other.EstimatedProbability != 0D) {
                EstimatedProbability = other.EstimatedProbability;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    quasiIdsValues_.AddEntriesFrom(input, _repeated_quasiIdsValues_codec);
                    break;
                  }
                  case 17: {
                    EstimatedProbability = input.ReadDouble();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    quasiIdsValues_.AddEntriesFrom(ref input, _repeated_quasiIdsValues_codec);
                    break;
                  }
                  case 17: {
                    EstimatedProbability = input.ReadDouble();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A DeltaPresenceEstimationHistogramBucket message with the following
          /// values:
          ///   min_probability: 0.1
          ///   max_probability: 0.2
          ///   frequency: 42
          /// means that there are 42 records for which δ is in [0.1, 0.2). An
          /// important particular case is when min_probability = max_probability = 1:
          /// then, every individual who shares this quasi-identifier combination is in
          /// the dataset.
          /// </summary>
          public sealed partial class DeltaPresenceEstimationHistogramBucket : pb::IMessage<DeltaPresenceEstimationHistogramBucket>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<DeltaPresenceEstimationHistogramBucket> _parser = new pb::MessageParser<DeltaPresenceEstimationHistogramBucket>(() => new DeltaPresenceEstimationHistogramBucket());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<DeltaPresenceEstimationHistogramBucket> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DeltaPresenceEstimationHistogramBucket() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DeltaPresenceEstimationHistogramBucket(DeltaPresenceEstimationHistogramBucket other) : this() {
              minProbability_ = other.minProbability_;
              maxProbability_ = other.maxProbability_;
              bucketSize_ = other.bucketSize_;
              bucketValues_ = other.bucketValues_.Clone();
              bucketValueCount_ = other.bucketValueCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DeltaPresenceEstimationHistogramBucket Clone() {
              return new DeltaPresenceEstimationHistogramBucket(this);
            }

            /// <summary>Field number for the "min_probability" field.</summary>
            public const int MinProbabilityFieldNumber = 1;
            private double minProbability_;
            /// <summary>
            /// Between 0 and 1.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public double MinProbability {
              get { return minProbability_; }
              set {
                minProbability_ = value;
              }
            }

            /// <summary>Field number for the "max_probability" field.</summary>
            public const int MaxProbabilityFieldNumber = 2;
            private double maxProbability_;
            /// <summary>
            /// Always greater than or equal to min_probability.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public double MaxProbability {
              get { return maxProbability_; }
              set {
                maxProbability_ = value;
              }
            }

            /// <summary>Field number for the "bucket_size" field.</summary>
            public const int BucketSizeFieldNumber = 5;
            private long bucketSize_;
            /// <summary>
            /// Number of records within these probability bounds.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long BucketSize {
              get { return bucketSize_; }
              set {
                bucketSize_ = value;
              }
            }

            /// <summary>Field number for the "bucket_values" field.</summary>
            public const int BucketValuesFieldNumber = 6;
            private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationQuasiIdValues> _repeated_bucketValues_codec
                = pb::FieldCodec.ForMessage(50, global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationQuasiIdValues.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationQuasiIdValues> bucketValues_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationQuasiIdValues>();
            /// <summary>
            /// Sample of quasi-identifier tuple values in this bucket. The total
            /// number of classes returned per bucket is capped at 20.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Types.DeltaPresenceEstimationResult.Types.DeltaPresenceEstimationQuasiIdValues> BucketValues {
              get { return bucketValues_; }
            }

            /// <summary>Field number for the "bucket_value_count" field.</summary>
            public const int BucketValueCountFieldNumber = 7;
            private long bucketValueCount_;
            /// <summary>
            /// Total number of distinct quasi-identifier tuple values in this bucket.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public long BucketValueCount {
              get { return bucketValueCount_; }
              set {
                bucketValueCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as DeltaPresenceEstimationHistogramBucket);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(DeltaPresenceEstimationHistogramBucket other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinProbability, other.MinProbability)) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxProbability, other.MaxProbability)) return false;
              if (BucketSize != other.BucketSize) return false;
              if(!bucketValues_.Equals(other.bucketValues_)) return false;
              if (BucketValueCount != other.BucketValueCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (MinProbability != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinProbability);
              if (MaxProbability != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxProbability);
              if (BucketSize != 0L) hash ^= BucketSize.GetHashCode();
              hash ^= bucketValues_.GetHashCode();
              if (BucketValueCount != 0L) hash ^= BucketValueCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (MinProbability != 0D) {
                output.WriteRawTag(9);
                output.WriteDouble(MinProbability);
              }
              if (MaxProbability != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(MaxProbability);
              }
              if (BucketSize != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(BucketSize);
              }
              bucketValues_.WriteTo(output, _repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                output.WriteRawTag(56);
                output.WriteInt64(BucketValueCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (MinProbability != 0D) {
                output.WriteRawTag(9);
                output.WriteDouble(MinProbability);
              }
              if (MaxProbability != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(MaxProbability);
              }
              if (BucketSize != 0L) {
                output.WriteRawTag(40);
                output.WriteInt64(BucketSize);
              }
              bucketValues_.WriteTo(ref output, _repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                output.WriteRawTag(56);
                output.WriteInt64(BucketValueCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (MinProbability != 0D) {
                size += 1 + 8;
              }
              if (MaxProbability != 0D) {
                size += 1 + 8;
              }
              if (BucketSize != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketSize);
              }
              size += bucketValues_.CalculateSize(_repeated_bucketValues_codec);
              if (BucketValueCount != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(BucketValueCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(DeltaPresenceEstimationHistogramBucket other) {
              if (other == null) {
                return;
              }
              if (other.MinProbability != 0D) {
                MinProbability = other.MinProbability;
              }
              if (other.MaxProbability != 0D) {
                MaxProbability = other.MaxProbability;
              }
              if (other.BucketSize != 0L) {
                BucketSize = other.BucketSize;
              }
              bucketValues_.Add(other.bucketValues_);
              if (other.BucketValueCount != 0L) {
                BucketValueCount = other.BucketValueCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 9: {
                    MinProbability = input.ReadDouble();
                    break;
                  }
                  case 17: {
                    MaxProbability = input.ReadDouble();
                    break;
                  }
                  case 40: {
                    BucketSize = input.ReadInt64();
                    break;
                  }
                  case 50: {
                    bucketValues_.AddEntriesFrom(input, _repeated_bucketValues_codec);
                    break;
                  }
                  case 56: {
                    BucketValueCount = input.ReadInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 9: {
                    MinProbability = input.ReadDouble();
                    break;
                  }
                  case 17: {
                    MaxProbability = input.ReadDouble();
                    break;
                  }
                  case 40: {
                    BucketSize = input.ReadInt64();
                    break;
                  }
                  case 50: {
                    bucketValues_.AddEntriesFrom(ref input, _repeated_bucketValues_codec);
                    break;
                  }
                  case 56: {
                    BucketValueCount = input.ReadInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Risk analysis options.
      /// </summary>
      public sealed partial class RequestedRiskAnalysisOptions : pb::IMessage<RequestedRiskAnalysisOptions>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RequestedRiskAnalysisOptions> _parser = new pb::MessageParser<RequestedRiskAnalysisOptions>(() => new RequestedRiskAnalysisOptions());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RequestedRiskAnalysisOptions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestedRiskAnalysisOptions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestedRiskAnalysisOptions(RequestedRiskAnalysisOptions other) : this() {
          jobConfig_ = other.jobConfig_ != null ? other.jobConfig_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestedRiskAnalysisOptions Clone() {
          return new RequestedRiskAnalysisOptions(this);
        }

        /// <summary>Field number for the "job_config" field.</summary>
        public const int JobConfigFieldNumber = 1;
        private global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig jobConfig_;
        /// <summary>
        /// The job config for the risk job.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig JobConfig {
          get { return jobConfig_; }
          set {
            jobConfig_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RequestedRiskAnalysisOptions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RequestedRiskAnalysisOptions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(JobConfig, other.JobConfig)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (jobConfig_ != null) hash ^= JobConfig.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (jobConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(JobConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (jobConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(JobConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (jobConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobConfig);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RequestedRiskAnalysisOptions other) {
          if (other == null) {
            return;
          }
          if (other.jobConfig_ != null) {
            if (jobConfig_ == null) {
              JobConfig = new global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig();
            }
            JobConfig.MergeFrom(other.JobConfig);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (jobConfig_ == null) {
                  JobConfig = new global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig();
                }
                input.ReadMessage(JobConfig);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (jobConfig_ == null) {
                  JobConfig = new global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig();
                }
                input.ReadMessage(JobConfig);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// A value of a field, including its frequency.
  /// </summary>
  public sealed partial class ValueFrequency : pb::IMessage<ValueFrequency>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValueFrequency> _parser = new pb::MessageParser<ValueFrequency>(() => new ValueFrequency());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValueFrequency> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueFrequency() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueFrequency(ValueFrequency other) : this() {
      value_ = other.value_ != null ? other.value_.Clone() : null;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueFrequency Clone() {
      return new ValueFrequency(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.Value value_;
    /// <summary>
    /// A value contained in the field in question.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Value Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private long count_;
    /// <summary>
    /// How many times the value is contained in the field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValueFrequency);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValueFrequency other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (Count != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (Count != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValueFrequency other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Google.Cloud.Dlp.V2.Value();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (value_ == null) {
              Value = new global::Google.Cloud.Dlp.V2.Value();
            }
            input.ReadMessage(Value);
            break;
          }
          case 16: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (value_ == null) {
              Value = new global::Google.Cloud.Dlp.V2.Value();
            }
            input.ReadMessage(Value);
            break;
          }
          case 16: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Set of primitive values supported by the system.
  /// Note that for the purposes of inspection or transformation, the number
  /// of bytes considered to comprise a 'Value' is based on its representation
  /// as a UTF-8 encoded string. For example, if 'integer_value' is set to
  /// 123456789, the number of bytes would be counted as 9, even though an
  /// int64 only holds up to 8 bytes of data.
  /// </summary>
  public sealed partial class Value : pb::IMessage<Value>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Value> _parser = new pb::MessageParser<Value>(() => new Value());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Value> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Value() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Value(Value other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.IntegerValue:
          IntegerValue = other.IntegerValue;
          break;
        case TypeOneofCase.FloatValue:
          FloatValue = other.FloatValue;
          break;
        case TypeOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
        case TypeOneofCase.BooleanValue:
          BooleanValue = other.BooleanValue;
          break;
        case TypeOneofCase.TimestampValue:
          TimestampValue = other.TimestampValue.Clone();
          break;
        case TypeOneofCase.TimeValue:
          TimeValue = other.TimeValue.Clone();
          break;
        case TypeOneofCase.DateValue:
          DateValue = other.DateValue.Clone();
          break;
        case TypeOneofCase.DayOfWeekValue:
          DayOfWeekValue = other.DayOfWeekValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Value Clone() {
      return new Value(this);
    }

    /// <summary>Field number for the "integer_value" field.</summary>
    public const int IntegerValueFieldNumber = 1;
    /// <summary>
    /// integer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IntegerValue {
      get { return typeCase_ == TypeOneofCase.IntegerValue ? (long) type_ : 0L; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.IntegerValue;
      }
    }

    /// <summary>Field number for the "float_value" field.</summary>
    public const int FloatValueFieldNumber = 2;
    /// <summary>
    /// float
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FloatValue {
      get { return typeCase_ == TypeOneofCase.FloatValue ? (double) type_ : 0D; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.FloatValue;
      }
    }

    /// <summary>Field number for the "string_value" field.</summary>
    public const int StringValueFieldNumber = 3;
    /// <summary>
    /// string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringValue {
      get { return typeCase_ == TypeOneofCase.StringValue ? (string) type_ : ""; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        typeCase_ = TypeOneofCase.StringValue;
      }
    }

    /// <summary>Field number for the "boolean_value" field.</summary>
    public const int BooleanValueFieldNumber = 4;
    /// <summary>
    /// boolean
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BooleanValue {
      get { return typeCase_ == TypeOneofCase.BooleanValue ? (bool) type_ : false; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.BooleanValue;
      }
    }

    /// <summary>Field number for the "timestamp_value" field.</summary>
    public const int TimestampValueFieldNumber = 5;
    /// <summary>
    /// timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp TimestampValue {
      get { return typeCase_ == TypeOneofCase.TimestampValue ? (global::Google.Protobuf.WellKnownTypes.Timestamp) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.TimestampValue;
      }
    }

    /// <summary>Field number for the "time_value" field.</summary>
    public const int TimeValueFieldNumber = 6;
    /// <summary>
    /// time of day
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.TimeOfDay TimeValue {
      get { return typeCase_ == TypeOneofCase.TimeValue ? (global::Google.Type.TimeOfDay) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.TimeValue;
      }
    }

    /// <summary>Field number for the "date_value" field.</summary>
    public const int DateValueFieldNumber = 7;
    /// <summary>
    /// date
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date DateValue {
      get { return typeCase_ == TypeOneofCase.DateValue ? (global::Google.Type.Date) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.DateValue;
      }
    }

    /// <summary>Field number for the "day_of_week_value" field.</summary>
    public const int DayOfWeekValueFieldNumber = 8;
    /// <summary>
    /// day of week
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.DayOfWeek DayOfWeekValue {
      get { return typeCase_ == TypeOneofCase.DayOfWeekValue ? (global::Google.Type.DayOfWeek) type_ : global::Google.Type.DayOfWeek.Unspecified; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.DayOfWeekValue;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      IntegerValue = 1,
      FloatValue = 2,
      StringValue = 3,
      BooleanValue = 4,
      TimestampValue = 5,
      TimeValue = 6,
      DateValue = 7,
      DayOfWeekValue = 8,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Value);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Value other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IntegerValue != other.IntegerValue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FloatValue, other.FloatValue)) return false;
      if (StringValue != other.StringValue) return false;
      if (BooleanValue != other.BooleanValue) return false;
      if (!object.Equals(TimestampValue, other.TimestampValue)) return false;
      if (!object.Equals(TimeValue, other.TimeValue)) return false;
      if (!object.Equals(DateValue, other.DateValue)) return false;
      if (DayOfWeekValue != other.DayOfWeekValue) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.IntegerValue) hash ^= IntegerValue.GetHashCode();
      if (typeCase_ == TypeOneofCase.FloatValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FloatValue);
      if (typeCase_ == TypeOneofCase.StringValue) hash ^= StringValue.GetHashCode();
      if (typeCase_ == TypeOneofCase.BooleanValue) hash ^= BooleanValue.GetHashCode();
      if (typeCase_ == TypeOneofCase.TimestampValue) hash ^= TimestampValue.GetHashCode();
      if (typeCase_ == TypeOneofCase.TimeValue) hash ^= TimeValue.GetHashCode();
      if (typeCase_ == TypeOneofCase.DateValue) hash ^= DateValue.GetHashCode();
      if (typeCase_ == TypeOneofCase.DayOfWeekValue) hash ^= DayOfWeekValue.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (typeCase_ == TypeOneofCase.IntegerValue) {
        output.WriteRawTag(8);
        output.WriteInt64(IntegerValue);
      }
      if (typeCase_ == TypeOneofCase.FloatValue) {
        output.WriteRawTag(17);
        output.WriteDouble(FloatValue);
      }
      if (typeCase_ == TypeOneofCase.StringValue) {
        output.WriteRawTag(26);
        output.WriteString(StringValue);
      }
      if (typeCase_ == TypeOneofCase.BooleanValue) {
        output.WriteRawTag(32);
        output.WriteBool(BooleanValue);
      }
      if (typeCase_ == TypeOneofCase.TimestampValue) {
        output.WriteRawTag(42);
        output.WriteMessage(TimestampValue);
      }
      if (typeCase_ == TypeOneofCase.TimeValue) {
        output.WriteRawTag(50);
        output.WriteMessage(TimeValue);
      }
      if (typeCase_ == TypeOneofCase.DateValue) {
        output.WriteRawTag(58);
        output.WriteMessage(DateValue);
      }
      if (typeCase_ == TypeOneofCase.DayOfWeekValue) {
        output.WriteRawTag(64);
        output.WriteEnum((int) DayOfWeekValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (typeCase_ == TypeOneofCase.IntegerValue) {
        output.WriteRawTag(8);
        output.WriteInt64(IntegerValue);
      }
      if (typeCase_ == TypeOneofCase.FloatValue) {
        output.WriteRawTag(17);
        output.WriteDouble(FloatValue);
      }
      if (typeCase_ == TypeOneofCase.StringValue) {
        output.WriteRawTag(26);
        output.WriteString(StringValue);
      }
      if (typeCase_ == TypeOneofCase.BooleanValue) {
        output.WriteRawTag(32);
        output.WriteBool(BooleanValue);
      }
      if (typeCase_ == TypeOneofCase.TimestampValue) {
        output.WriteRawTag(42);
        output.WriteMessage(TimestampValue);
      }
      if (typeCase_ == TypeOneofCase.TimeValue) {
        output.WriteRawTag(50);
        output.WriteMessage(TimeValue);
      }
      if (typeCase_ == TypeOneofCase.DateValue) {
        output.WriteRawTag(58);
        output.WriteMessage(DateValue);
      }
      if (typeCase_ == TypeOneofCase.DayOfWeekValue) {
        output.WriteRawTag(64);
        output.WriteEnum((int) DayOfWeekValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.IntegerValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IntegerValue);
      }
      if (typeCase_ == TypeOneofCase.FloatValue) {
        size += 1 + 8;
      }
      if (typeCase_ == TypeOneofCase.StringValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
      }
      if (typeCase_ == TypeOneofCase.BooleanValue) {
        size += 1 + 1;
      }
      if (typeCase_ == TypeOneofCase.TimestampValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimestampValue);
      }
      if (typeCase_ == TypeOneofCase.TimeValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeValue);
      }
      if (typeCase_ == TypeOneofCase.DateValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateValue);
      }
      if (typeCase_ == TypeOneofCase.DayOfWeekValue) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DayOfWeekValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Value other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.IntegerValue:
          IntegerValue = other.IntegerValue;
          break;
        case TypeOneofCase.FloatValue:
          FloatValue = other.FloatValue;
          break;
        case TypeOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
        case TypeOneofCase.BooleanValue:
          BooleanValue = other.BooleanValue;
          break;
        case TypeOneofCase.TimestampValue:
          if (TimestampValue == null) {
            TimestampValue = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          TimestampValue.MergeFrom(other.TimestampValue);
          break;
        case TypeOneofCase.TimeValue:
          if (TimeValue == null) {
            TimeValue = new global::Google.Type.TimeOfDay();
          }
          TimeValue.MergeFrom(other.TimeValue);
          break;
        case TypeOneofCase.DateValue:
          if (DateValue == null) {
            DateValue = new global::Google.Type.Date();
          }
          DateValue.MergeFrom(other.DateValue);
          break;
        case TypeOneofCase.DayOfWeekValue:
          DayOfWeekValue = other.DayOfWeekValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IntegerValue = input.ReadInt64();
            break;
          }
          case 17: {
            FloatValue = input.ReadDouble();
            break;
          }
          case 26: {
            StringValue = input.ReadString();
            break;
          }
          case 32: {
            BooleanValue = input.ReadBool();
            break;
          }
          case 42: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (typeCase_ == TypeOneofCase.TimestampValue) {
              subBuilder.MergeFrom(TimestampValue);
            }
            input.ReadMessage(subBuilder);
            TimestampValue = subBuilder;
            break;
          }
          case 50: {
            global::Google.Type.TimeOfDay subBuilder = new global::Google.Type.TimeOfDay();
            if (typeCase_ == TypeOneofCase.TimeValue) {
              subBuilder.MergeFrom(TimeValue);
            }
            input.ReadMessage(subBuilder);
            TimeValue = subBuilder;
            break;
          }
          case 58: {
            global::Google.Type.Date subBuilder = new global::Google.Type.Date();
            if (typeCase_ == TypeOneofCase.DateValue) {
              subBuilder.MergeFrom(DateValue);
            }
            input.ReadMessage(subBuilder);
            DateValue = subBuilder;
            break;
          }
          case 64: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.DayOfWeekValue;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IntegerValue = input.ReadInt64();
            break;
          }
          case 17: {
            FloatValue = input.ReadDouble();
            break;
          }
          case 26: {
            StringValue = input.ReadString();
            break;
          }
          case 32: {
            BooleanValue = input.ReadBool();
            break;
          }
          case 42: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (typeCase_ == TypeOneofCase.TimestampValue) {
              subBuilder.MergeFrom(TimestampValue);
            }
            input.ReadMessage(subBuilder);
            TimestampValue = subBuilder;
            break;
          }
          case 50: {
            global::Google.Type.TimeOfDay subBuilder = new global::Google.Type.TimeOfDay();
            if (typeCase_ == TypeOneofCase.TimeValue) {
              subBuilder.MergeFrom(TimeValue);
            }
            input.ReadMessage(subBuilder);
            TimeValue = subBuilder;
            break;
          }
          case 58: {
            global::Google.Type.Date subBuilder = new global::Google.Type.Date();
            if (typeCase_ == TypeOneofCase.DateValue) {
              subBuilder.MergeFrom(DateValue);
            }
            input.ReadMessage(subBuilder);
            DateValue = subBuilder;
            break;
          }
          case 64: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.DayOfWeekValue;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message for infoType-dependent details parsed from quote.
  /// </summary>
  public sealed partial class QuoteInfo : pb::IMessage<QuoteInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuoteInfo> _parser = new pb::MessageParser<QuoteInfo>(() => new QuoteInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuoteInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuoteInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuoteInfo(QuoteInfo other) : this() {
      switch (other.ParsedQuoteCase) {
        case ParsedQuoteOneofCase.DateTime:
          DateTime = other.DateTime.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuoteInfo Clone() {
      return new QuoteInfo(this);
    }

    /// <summary>Field number for the "date_time" field.</summary>
    public const int DateTimeFieldNumber = 2;
    /// <summary>
    /// The date time indicated by the quote.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DateTime DateTime {
      get { return parsedQuoteCase_ == ParsedQuoteOneofCase.DateTime ? (global::Google.Cloud.Dlp.V2.DateTime) parsedQuote_ : null; }
      set {
        parsedQuote_ = value;
        parsedQuoteCase_ = value == null ? ParsedQuoteOneofCase.None : ParsedQuoteOneofCase.DateTime;
      }
    }

    private object parsedQuote_;
    /// <summary>Enum of possible cases for the "parsed_quote" oneof.</summary>
    public enum ParsedQuoteOneofCase {
      None = 0,
      DateTime = 2,
    }
    private ParsedQuoteOneofCase parsedQuoteCase_ = ParsedQuoteOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParsedQuoteOneofCase ParsedQuoteCase {
      get { return parsedQuoteCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParsedQuote() {
      parsedQuoteCase_ = ParsedQuoteOneofCase.None;
      parsedQuote_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuoteInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuoteInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DateTime, other.DateTime)) return false;
      if (ParsedQuoteCase != other.ParsedQuoteCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (parsedQuoteCase_ == ParsedQuoteOneofCase.DateTime) hash ^= DateTime.GetHashCode();
      hash ^= (int) parsedQuoteCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (parsedQuoteCase_ == ParsedQuoteOneofCase.DateTime) {
        output.WriteRawTag(18);
        output.WriteMessage(DateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (parsedQuoteCase_ == ParsedQuoteOneofCase.DateTime) {
        output.WriteRawTag(18);
        output.WriteMessage(DateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (parsedQuoteCase_ == ParsedQuoteOneofCase.DateTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuoteInfo other) {
      if (other == null) {
        return;
      }
      switch (other.ParsedQuoteCase) {
        case ParsedQuoteOneofCase.DateTime:
          if (DateTime == null) {
            DateTime = new global::Google.Cloud.Dlp.V2.DateTime();
          }
          DateTime.MergeFrom(other.DateTime);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::Google.Cloud.Dlp.V2.DateTime subBuilder = new global::Google.Cloud.Dlp.V2.DateTime();
            if (parsedQuoteCase_ == ParsedQuoteOneofCase.DateTime) {
              subBuilder.MergeFrom(DateTime);
            }
            input.ReadMessage(subBuilder);
            DateTime = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            global::Google.Cloud.Dlp.V2.DateTime subBuilder = new global::Google.Cloud.Dlp.V2.DateTime();
            if (parsedQuoteCase_ == ParsedQuoteOneofCase.DateTime) {
              subBuilder.MergeFrom(DateTime);
            }
            input.ReadMessage(subBuilder);
            DateTime = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message for a date time object.
  /// e.g. 2018-01-01, 5th August.
  /// </summary>
  public sealed partial class DateTime : pb::IMessage<DateTime>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DateTime> _parser = new pb::MessageParser<DateTime>(() => new DateTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DateTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateTime(DateTime other) : this() {
      date_ = other.date_ != null ? other.date_.Clone() : null;
      dayOfWeek_ = other.dayOfWeek_;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      timeZone_ = other.timeZone_ != null ? other.timeZone_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateTime Clone() {
      return new DateTime(this);
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 1;
    private global::Google.Type.Date date_;
    /// <summary>
    /// One or more of the following must be set.
    /// Must be a valid date or time value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date Date {
      get { return date_; }
      set {
        date_ = value;
      }
    }

    /// <summary>Field number for the "day_of_week" field.</summary>
    public const int DayOfWeekFieldNumber = 2;
    private global::Google.Type.DayOfWeek dayOfWeek_ = global::Google.Type.DayOfWeek.Unspecified;
    /// <summary>
    /// Day of week
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.DayOfWeek DayOfWeek {
      get { return dayOfWeek_; }
      set {
        dayOfWeek_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private global::Google.Type.TimeOfDay time_;
    /// <summary>
    /// Time of day
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.TimeOfDay Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "time_zone" field.</summary>
    public const int TimeZoneFieldNumber = 4;
    private global::Google.Cloud.Dlp.V2.DateTime.Types.TimeZone timeZone_;
    /// <summary>
    /// Time zone
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DateTime.Types.TimeZone TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DateTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DateTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Date, other.Date)) return false;
      if (DayOfWeek != other.DayOfWeek) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (!object.Equals(TimeZone, other.TimeZone)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (date_ != null) hash ^= Date.GetHashCode();
      if (DayOfWeek != global::Google.Type.DayOfWeek.Unspecified) hash ^= DayOfWeek.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (timeZone_ != null) hash ^= TimeZone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (date_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Date);
      }
      if (DayOfWeek != global::Google.Type.DayOfWeek.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DayOfWeek);
      }
      if (time_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Time);
      }
      if (timeZone_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TimeZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (date_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Date);
      }
      if (DayOfWeek != global::Google.Type.DayOfWeek.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DayOfWeek);
      }
      if (time_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Time);
      }
      if (timeZone_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TimeZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (date_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
      }
      if (DayOfWeek != global::Google.Type.DayOfWeek.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DayOfWeek);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (timeZone_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeZone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DateTime other) {
      if (other == null) {
        return;
      }
      if (other.date_ != null) {
        if (date_ == null) {
          Date = new global::Google.Type.Date();
        }
        Date.MergeFrom(other.Date);
      }
      if (other.DayOfWeek != global::Google.Type.DayOfWeek.Unspecified) {
        DayOfWeek = other.DayOfWeek;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Type.TimeOfDay();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.timeZone_ != null) {
        if (timeZone_ == null) {
          TimeZone = new global::Google.Cloud.Dlp.V2.DateTime.Types.TimeZone();
        }
        TimeZone.MergeFrom(other.TimeZone);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (date_ == null) {
              Date = new global::Google.Type.Date();
            }
            input.ReadMessage(Date);
            break;
          }
          case 16: {
            DayOfWeek = (global::Google.Type.DayOfWeek) input.ReadEnum();
            break;
          }
          case 26: {
            if (time_ == null) {
              Time = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(Time);
            break;
          }
          case 34: {
            if (timeZone_ == null) {
              TimeZone = new global::Google.Cloud.Dlp.V2.DateTime.Types.TimeZone();
            }
            input.ReadMessage(TimeZone);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (date_ == null) {
              Date = new global::Google.Type.Date();
            }
            input.ReadMessage(Date);
            break;
          }
          case 16: {
            DayOfWeek = (global::Google.Type.DayOfWeek) input.ReadEnum();
            break;
          }
          case 26: {
            if (time_ == null) {
              Time = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(Time);
            break;
          }
          case 34: {
            if (timeZone_ == null) {
              TimeZone = new global::Google.Cloud.Dlp.V2.DateTime.Types.TimeZone();
            }
            input.ReadMessage(TimeZone);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DateTime message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Time zone of the date time object.
      /// </summary>
      public sealed partial class TimeZone : pb::IMessage<TimeZone>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TimeZone> _parser = new pb::MessageParser<TimeZone>(() => new TimeZone());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TimeZone> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.DateTime.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimeZone() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimeZone(TimeZone other) : this() {
          offsetMinutes_ = other.offsetMinutes_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimeZone Clone() {
          return new TimeZone(this);
        }

        /// <summary>Field number for the "offset_minutes" field.</summary>
        public const int OffsetMinutesFieldNumber = 1;
        private int offsetMinutes_;
        /// <summary>
        /// Set only if the offset can be determined. Positive for time ahead of UTC.
        /// E.g. For "UTC-9", this value is -540.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OffsetMinutes {
          get { return offsetMinutes_; }
          set {
            offsetMinutes_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TimeZone);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TimeZone other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OffsetMinutes != other.OffsetMinutes) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OffsetMinutes != 0) hash ^= OffsetMinutes.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (OffsetMinutes != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OffsetMinutes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (OffsetMinutes != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OffsetMinutes);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OffsetMinutes != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OffsetMinutes);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TimeZone other) {
          if (other == null) {
            return;
          }
          if (other.OffsetMinutes != 0) {
            OffsetMinutes = other.OffsetMinutes;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OffsetMinutes = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                OffsetMinutes = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// The configuration that controls how the data will change.
  /// </summary>
  public sealed partial class DeidentifyConfig : pb::IMessage<DeidentifyConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeidentifyConfig> _parser = new pb::MessageParser<DeidentifyConfig>(() => new DeidentifyConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeidentifyConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeidentifyConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeidentifyConfig(DeidentifyConfig other) : this() {
      transformationErrorHandling_ = other.transformationErrorHandling_ != null ? other.transformationErrorHandling_.Clone() : null;
      switch (other.TransformationCase) {
        case TransformationOneofCase.InfoTypeTransformations:
          InfoTypeTransformations = other.InfoTypeTransformations.Clone();
          break;
        case TransformationOneofCase.RecordTransformations:
          RecordTransformations = other.RecordTransformations.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeidentifyConfig Clone() {
      return new DeidentifyConfig(this);
    }

    /// <summary>Field number for the "info_type_transformations" field.</summary>
    public const int InfoTypeTransformationsFieldNumber = 1;
    /// <summary>
    /// Treat the dataset as free-form text and apply the same free text
    /// transformation everywhere.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InfoTypeTransformations InfoTypeTransformations {
      get { return transformationCase_ == TransformationOneofCase.InfoTypeTransformations ? (global::Google.Cloud.Dlp.V2.InfoTypeTransformations) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.InfoTypeTransformations;
      }
    }

    /// <summary>Field number for the "record_transformations" field.</summary>
    public const int RecordTransformationsFieldNumber = 2;
    /// <summary>
    /// Treat the dataset as structured. Transformations can be applied to
    /// specific locations within structured datasets, such as transforming
    /// a column within a table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.RecordTransformations RecordTransformations {
      get { return transformationCase_ == TransformationOneofCase.RecordTransformations ? (global::Google.Cloud.Dlp.V2.RecordTransformations) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.RecordTransformations;
      }
    }

    /// <summary>Field number for the "transformation_error_handling" field.</summary>
    public const int TransformationErrorHandlingFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.TransformationErrorHandling transformationErrorHandling_;
    /// <summary>
    /// Mode for handling transformation errors. If left unspecified, the default
    /// mode is `TransformationErrorHandling.ThrowError`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.TransformationErrorHandling TransformationErrorHandling {
      get { return transformationErrorHandling_; }
      set {
        transformationErrorHandling_ = value;
      }
    }

    private object transformation_;
    /// <summary>Enum of possible cases for the "transformation" oneof.</summary>
    public enum TransformationOneofCase {
      None = 0,
      InfoTypeTransformations = 1,
      RecordTransformations = 2,
    }
    private TransformationOneofCase transformationCase_ = TransformationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformationOneofCase TransformationCase {
      get { return transformationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransformation() {
      transformationCase_ = TransformationOneofCase.None;
      transformation_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeidentifyConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeidentifyConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InfoTypeTransformations, other.InfoTypeTransformations)) return false;
      if (!object.Equals(RecordTransformations, other.RecordTransformations)) return false;
      if (!object.Equals(TransformationErrorHandling, other.TransformationErrorHandling)) return false;
      if (TransformationCase != other.TransformationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transformationCase_ == TransformationOneofCase.InfoTypeTransformations) hash ^= InfoTypeTransformations.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.RecordTransformations) hash ^= RecordTransformations.GetHashCode();
      if (transformationErrorHandling_ != null) hash ^= TransformationErrorHandling.GetHashCode();
      hash ^= (int) transformationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (transformationCase_ == TransformationOneofCase.InfoTypeTransformations) {
        output.WriteRawTag(10);
        output.WriteMessage(InfoTypeTransformations);
      }
      if (transformationCase_ == TransformationOneofCase.RecordTransformations) {
        output.WriteRawTag(18);
        output.WriteMessage(RecordTransformations);
      }
      if (transformationErrorHandling_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TransformationErrorHandling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (transformationCase_ == TransformationOneofCase.InfoTypeTransformations) {
        output.WriteRawTag(10);
        output.WriteMessage(InfoTypeTransformations);
      }
      if (transformationCase_ == TransformationOneofCase.RecordTransformations) {
        output.WriteRawTag(18);
        output.WriteMessage(RecordTransformations);
      }
      if (transformationErrorHandling_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TransformationErrorHandling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transformationCase_ == TransformationOneofCase.InfoTypeTransformations) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoTypeTransformations);
      }
      if (transformationCase_ == TransformationOneofCase.RecordTransformations) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecordTransformations);
      }
      if (transformationErrorHandling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransformationErrorHandling);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeidentifyConfig other) {
      if (other == null) {
        return;
      }
      if (other.transformationErrorHandling_ != null) {
        if (transformationErrorHandling_ == null) {
          TransformationErrorHandling = new global::Google.Cloud.Dlp.V2.TransformationErrorHandling();
        }
        TransformationErrorHandling.MergeFrom(other.TransformationErrorHandling);
      }
      switch (other.TransformationCase) {
        case TransformationOneofCase.InfoTypeTransformations:
          if (InfoTypeTransformations == null) {
            InfoTypeTransformations = new global::Google.Cloud.Dlp.V2.InfoTypeTransformations();
          }
          InfoTypeTransformations.MergeFrom(other.InfoTypeTransformations);
          break;
        case TransformationOneofCase.RecordTransformations:
          if (RecordTransformations == null) {
            RecordTransformations = new global::Google.Cloud.Dlp.V2.RecordTransformations();
          }
          RecordTransformations.MergeFrom(other.RecordTransformations);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.InfoTypeTransformations subBuilder = new global::Google.Cloud.Dlp.V2.InfoTypeTransformations();
            if (transformationCase_ == TransformationOneofCase.InfoTypeTransformations) {
              subBuilder.MergeFrom(InfoTypeTransformations);
            }
            input.ReadMessage(subBuilder);
            InfoTypeTransformations = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.RecordTransformations subBuilder = new global::Google.Cloud.Dlp.V2.RecordTransformations();
            if (transformationCase_ == TransformationOneofCase.RecordTransformations) {
              subBuilder.MergeFrom(RecordTransformations);
            }
            input.ReadMessage(subBuilder);
            RecordTransformations = subBuilder;
            break;
          }
          case 26: {
            if (transformationErrorHandling_ == null) {
              TransformationErrorHandling = new global::Google.Cloud.Dlp.V2.TransformationErrorHandling();
            }
            input.ReadMessage(TransformationErrorHandling);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.InfoTypeTransformations subBuilder = new global::Google.Cloud.Dlp.V2.InfoTypeTransformations();
            if (transformationCase_ == TransformationOneofCase.InfoTypeTransformations) {
              subBuilder.MergeFrom(InfoTypeTransformations);
            }
            input.ReadMessage(subBuilder);
            InfoTypeTransformations = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.RecordTransformations subBuilder = new global::Google.Cloud.Dlp.V2.RecordTransformations();
            if (transformationCase_ == TransformationOneofCase.RecordTransformations) {
              subBuilder.MergeFrom(RecordTransformations);
            }
            input.ReadMessage(subBuilder);
            RecordTransformations = subBuilder;
            break;
          }
          case 26: {
            if (transformationErrorHandling_ == null) {
              TransformationErrorHandling = new global::Google.Cloud.Dlp.V2.TransformationErrorHandling();
            }
            input.ReadMessage(TransformationErrorHandling);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// How to handle transformation errors during de-identification. A
  /// transformation error occurs when the requested transformation is incompatible
  /// with the data. For example, trying to de-identify an IP address using a
  /// `DateShift` transformation would result in a transformation error, since date
  /// info cannot be extracted from an IP address.
  /// Information about any incompatible transformations, and how they were
  /// handled, is returned in the response as part of the
  /// `TransformationOverviews`.
  /// </summary>
  public sealed partial class TransformationErrorHandling : pb::IMessage<TransformationErrorHandling>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransformationErrorHandling> _parser = new pb::MessageParser<TransformationErrorHandling>(() => new TransformationErrorHandling());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransformationErrorHandling> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformationErrorHandling() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformationErrorHandling(TransformationErrorHandling other) : this() {
      switch (other.ModeCase) {
        case ModeOneofCase.ThrowError:
          ThrowError = other.ThrowError.Clone();
          break;
        case ModeOneofCase.LeaveUntransformed:
          LeaveUntransformed = other.LeaveUntransformed.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformationErrorHandling Clone() {
      return new TransformationErrorHandling(this);
    }

    /// <summary>Field number for the "throw_error" field.</summary>
    public const int ThrowErrorFieldNumber = 1;
    /// <summary>
    /// Throw an error
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.ThrowError ThrowError {
      get { return modeCase_ == ModeOneofCase.ThrowError ? (global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.ThrowError) mode_ : null; }
      set {
        mode_ = value;
        modeCase_ = value == null ? ModeOneofCase.None : ModeOneofCase.ThrowError;
      }
    }

    /// <summary>Field number for the "leave_untransformed" field.</summary>
    public const int LeaveUntransformedFieldNumber = 2;
    /// <summary>
    /// Ignore errors
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.LeaveUntransformed LeaveUntransformed {
      get { return modeCase_ == ModeOneofCase.LeaveUntransformed ? (global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.LeaveUntransformed) mode_ : null; }
      set {
        mode_ = value;
        modeCase_ = value == null ? ModeOneofCase.None : ModeOneofCase.LeaveUntransformed;
      }
    }

    private object mode_;
    /// <summary>Enum of possible cases for the "mode" oneof.</summary>
    public enum ModeOneofCase {
      None = 0,
      ThrowError = 1,
      LeaveUntransformed = 2,
    }
    private ModeOneofCase modeCase_ = ModeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModeOneofCase ModeCase {
      get { return modeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMode() {
      modeCase_ = ModeOneofCase.None;
      mode_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransformationErrorHandling);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransformationErrorHandling other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ThrowError, other.ThrowError)) return false;
      if (!object.Equals(LeaveUntransformed, other.LeaveUntransformed)) return false;
      if (ModeCase != other.ModeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (modeCase_ == ModeOneofCase.ThrowError) hash ^= ThrowError.GetHashCode();
      if (modeCase_ == ModeOneofCase.LeaveUntransformed) hash ^= LeaveUntransformed.GetHashCode();
      hash ^= (int) modeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (modeCase_ == ModeOneofCase.ThrowError) {
        output.WriteRawTag(10);
        output.WriteMessage(ThrowError);
      }
      if (modeCase_ == ModeOneofCase.LeaveUntransformed) {
        output.WriteRawTag(18);
        output.WriteMessage(LeaveUntransformed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (modeCase_ == ModeOneofCase.ThrowError) {
        output.WriteRawTag(10);
        output.WriteMessage(ThrowError);
      }
      if (modeCase_ == ModeOneofCase.LeaveUntransformed) {
        output.WriteRawTag(18);
        output.WriteMessage(LeaveUntransformed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (modeCase_ == ModeOneofCase.ThrowError) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThrowError);
      }
      if (modeCase_ == ModeOneofCase.LeaveUntransformed) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeaveUntransformed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransformationErrorHandling other) {
      if (other == null) {
        return;
      }
      switch (other.ModeCase) {
        case ModeOneofCase.ThrowError:
          if (ThrowError == null) {
            ThrowError = new global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.ThrowError();
          }
          ThrowError.MergeFrom(other.ThrowError);
          break;
        case ModeOneofCase.LeaveUntransformed:
          if (LeaveUntransformed == null) {
            LeaveUntransformed = new global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.LeaveUntransformed();
          }
          LeaveUntransformed.MergeFrom(other.LeaveUntransformed);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.ThrowError subBuilder = new global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.ThrowError();
            if (modeCase_ == ModeOneofCase.ThrowError) {
              subBuilder.MergeFrom(ThrowError);
            }
            input.ReadMessage(subBuilder);
            ThrowError = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.LeaveUntransformed subBuilder = new global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.LeaveUntransformed();
            if (modeCase_ == ModeOneofCase.LeaveUntransformed) {
              subBuilder.MergeFrom(LeaveUntransformed);
            }
            input.ReadMessage(subBuilder);
            LeaveUntransformed = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.ThrowError subBuilder = new global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.ThrowError();
            if (modeCase_ == ModeOneofCase.ThrowError) {
              subBuilder.MergeFrom(ThrowError);
            }
            input.ReadMessage(subBuilder);
            ThrowError = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.LeaveUntransformed subBuilder = new global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Types.LeaveUntransformed();
            if (modeCase_ == ModeOneofCase.LeaveUntransformed) {
              subBuilder.MergeFrom(LeaveUntransformed);
            }
            input.ReadMessage(subBuilder);
            LeaveUntransformed = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TransformationErrorHandling message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Throw an error and fail the request when a transformation error occurs.
      /// </summary>
      public sealed partial class ThrowError : pb::IMessage<ThrowError>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ThrowError> _parser = new pb::MessageParser<ThrowError>(() => new ThrowError());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ThrowError> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ThrowError() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ThrowError(ThrowError other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ThrowError Clone() {
          return new ThrowError(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ThrowError);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ThrowError other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ThrowError other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Skips the data without modifying it if the requested transformation would
      /// cause an error. For example, if a `DateShift` transformation were applied
      /// an an IP address, this mode would leave the IP address unchanged in the
      /// response.
      /// </summary>
      public sealed partial class LeaveUntransformed : pb::IMessage<LeaveUntransformed>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LeaveUntransformed> _parser = new pb::MessageParser<LeaveUntransformed>(() => new LeaveUntransformed());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LeaveUntransformed> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.TransformationErrorHandling.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LeaveUntransformed() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LeaveUntransformed(LeaveUntransformed other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LeaveUntransformed Clone() {
          return new LeaveUntransformed(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LeaveUntransformed);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LeaveUntransformed other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LeaveUntransformed other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// A rule for transforming a value.
  /// </summary>
  public sealed partial class PrimitiveTransformation : pb::IMessage<PrimitiveTransformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PrimitiveTransformation> _parser = new pb::MessageParser<PrimitiveTransformation>(() => new PrimitiveTransformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrimitiveTransformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrimitiveTransformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrimitiveTransformation(PrimitiveTransformation other) : this() {
      switch (other.TransformationCase) {
        case TransformationOneofCase.ReplaceConfig:
          ReplaceConfig = other.ReplaceConfig.Clone();
          break;
        case TransformationOneofCase.RedactConfig:
          RedactConfig = other.RedactConfig.Clone();
          break;
        case TransformationOneofCase.CharacterMaskConfig:
          CharacterMaskConfig = other.CharacterMaskConfig.Clone();
          break;
        case TransformationOneofCase.CryptoReplaceFfxFpeConfig:
          CryptoReplaceFfxFpeConfig = other.CryptoReplaceFfxFpeConfig.Clone();
          break;
        case TransformationOneofCase.FixedSizeBucketingConfig:
          FixedSizeBucketingConfig = other.FixedSizeBucketingConfig.Clone();
          break;
        case TransformationOneofCase.BucketingConfig:
          BucketingConfig = other.BucketingConfig.Clone();
          break;
        case TransformationOneofCase.ReplaceWithInfoTypeConfig:
          ReplaceWithInfoTypeConfig = other.ReplaceWithInfoTypeConfig.Clone();
          break;
        case TransformationOneofCase.TimePartConfig:
          TimePartConfig = other.TimePartConfig.Clone();
          break;
        case TransformationOneofCase.CryptoHashConfig:
          CryptoHashConfig = other.CryptoHashConfig.Clone();
          break;
        case TransformationOneofCase.DateShiftConfig:
          DateShiftConfig = other.DateShiftConfig.Clone();
          break;
        case TransformationOneofCase.CryptoDeterministicConfig:
          CryptoDeterministicConfig = other.CryptoDeterministicConfig.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrimitiveTransformation Clone() {
      return new PrimitiveTransformation(this);
    }

    /// <summary>Field number for the "replace_config" field.</summary>
    public const int ReplaceConfigFieldNumber = 1;
    /// <summary>
    /// Replace
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ReplaceValueConfig ReplaceConfig {
      get { return transformationCase_ == TransformationOneofCase.ReplaceConfig ? (global::Google.Cloud.Dlp.V2.ReplaceValueConfig) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.ReplaceConfig;
      }
    }

    /// <summary>Field number for the "redact_config" field.</summary>
    public const int RedactConfigFieldNumber = 2;
    /// <summary>
    /// Redact
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.RedactConfig RedactConfig {
      get { return transformationCase_ == TransformationOneofCase.RedactConfig ? (global::Google.Cloud.Dlp.V2.RedactConfig) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.RedactConfig;
      }
    }

    /// <summary>Field number for the "character_mask_config" field.</summary>
    public const int CharacterMaskConfigFieldNumber = 3;
    /// <summary>
    /// Mask
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CharacterMaskConfig CharacterMaskConfig {
      get { return transformationCase_ == TransformationOneofCase.CharacterMaskConfig ? (global::Google.Cloud.Dlp.V2.CharacterMaskConfig) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.CharacterMaskConfig;
      }
    }

    /// <summary>Field number for the "crypto_replace_ffx_fpe_config" field.</summary>
    public const int CryptoReplaceFfxFpeConfigFieldNumber = 4;
    /// <summary>
    /// Ffx-Fpe
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig CryptoReplaceFfxFpeConfig {
      get { return transformationCase_ == TransformationOneofCase.CryptoReplaceFfxFpeConfig ? (global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.CryptoReplaceFfxFpeConfig;
      }
    }

    /// <summary>Field number for the "fixed_size_bucketing_config" field.</summary>
    public const int FixedSizeBucketingConfigFieldNumber = 5;
    /// <summary>
    /// Fixed size bucketing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.FixedSizeBucketingConfig FixedSizeBucketingConfig {
      get { return transformationCase_ == TransformationOneofCase.FixedSizeBucketingConfig ? (global::Google.Cloud.Dlp.V2.FixedSizeBucketingConfig) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.FixedSizeBucketingConfig;
      }
    }

    /// <summary>Field number for the "bucketing_config" field.</summary>
    public const int BucketingConfigFieldNumber = 6;
    /// <summary>
    /// Bucketing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.BucketingConfig BucketingConfig {
      get { return transformationCase_ == TransformationOneofCase.BucketingConfig ? (global::Google.Cloud.Dlp.V2.BucketingConfig) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.BucketingConfig;
      }
    }

    /// <summary>Field number for the "replace_with_info_type_config" field.</summary>
    public const int ReplaceWithInfoTypeConfigFieldNumber = 7;
    /// <summary>
    /// Replace with infotype
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ReplaceWithInfoTypeConfig ReplaceWithInfoTypeConfig {
      get { return transformationCase_ == TransformationOneofCase.ReplaceWithInfoTypeConfig ? (global::Google.Cloud.Dlp.V2.ReplaceWithInfoTypeConfig) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.ReplaceWithInfoTypeConfig;
      }
    }

    /// <summary>Field number for the "time_part_config" field.</summary>
    public const int TimePartConfigFieldNumber = 8;
    /// <summary>
    /// Time extraction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.TimePartConfig TimePartConfig {
      get { return transformationCase_ == TransformationOneofCase.TimePartConfig ? (global::Google.Cloud.Dlp.V2.TimePartConfig) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.TimePartConfig;
      }
    }

    /// <summary>Field number for the "crypto_hash_config" field.</summary>
    public const int CryptoHashConfigFieldNumber = 9;
    /// <summary>
    /// Crypto
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CryptoHashConfig CryptoHashConfig {
      get { return transformationCase_ == TransformationOneofCase.CryptoHashConfig ? (global::Google.Cloud.Dlp.V2.CryptoHashConfig) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.CryptoHashConfig;
      }
    }

    /// <summary>Field number for the "date_shift_config" field.</summary>
    public const int DateShiftConfigFieldNumber = 11;
    /// <summary>
    /// Date Shift
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DateShiftConfig DateShiftConfig {
      get { return transformationCase_ == TransformationOneofCase.DateShiftConfig ? (global::Google.Cloud.Dlp.V2.DateShiftConfig) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.DateShiftConfig;
      }
    }

    /// <summary>Field number for the "crypto_deterministic_config" field.</summary>
    public const int CryptoDeterministicConfigFieldNumber = 12;
    /// <summary>
    /// Deterministic Crypto
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CryptoDeterministicConfig CryptoDeterministicConfig {
      get { return transformationCase_ == TransformationOneofCase.CryptoDeterministicConfig ? (global::Google.Cloud.Dlp.V2.CryptoDeterministicConfig) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.CryptoDeterministicConfig;
      }
    }

    private object transformation_;
    /// <summary>Enum of possible cases for the "transformation" oneof.</summary>
    public enum TransformationOneofCase {
      None = 0,
      ReplaceConfig = 1,
      RedactConfig = 2,
      CharacterMaskConfig = 3,
      CryptoReplaceFfxFpeConfig = 4,
      FixedSizeBucketingConfig = 5,
      BucketingConfig = 6,
      ReplaceWithInfoTypeConfig = 7,
      TimePartConfig = 8,
      CryptoHashConfig = 9,
      DateShiftConfig = 11,
      CryptoDeterministicConfig = 12,
    }
    private TransformationOneofCase transformationCase_ = TransformationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformationOneofCase TransformationCase {
      get { return transformationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransformation() {
      transformationCase_ = TransformationOneofCase.None;
      transformation_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrimitiveTransformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrimitiveTransformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReplaceConfig, other.ReplaceConfig)) return false;
      if (!object.Equals(RedactConfig, other.RedactConfig)) return false;
      if (!object.Equals(CharacterMaskConfig, other.CharacterMaskConfig)) return false;
      if (!object.Equals(CryptoReplaceFfxFpeConfig, other.CryptoReplaceFfxFpeConfig)) return false;
      if (!object.Equals(FixedSizeBucketingConfig, other.FixedSizeBucketingConfig)) return false;
      if (!object.Equals(BucketingConfig, other.BucketingConfig)) return false;
      if (!object.Equals(ReplaceWithInfoTypeConfig, other.ReplaceWithInfoTypeConfig)) return false;
      if (!object.Equals(TimePartConfig, other.TimePartConfig)) return false;
      if (!object.Equals(CryptoHashConfig, other.CryptoHashConfig)) return false;
      if (!object.Equals(DateShiftConfig, other.DateShiftConfig)) return false;
      if (!object.Equals(CryptoDeterministicConfig, other.CryptoDeterministicConfig)) return false;
      if (TransformationCase != other.TransformationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transformationCase_ == TransformationOneofCase.ReplaceConfig) hash ^= ReplaceConfig.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.RedactConfig) hash ^= RedactConfig.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.CharacterMaskConfig) hash ^= CharacterMaskConfig.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.CryptoReplaceFfxFpeConfig) hash ^= CryptoReplaceFfxFpeConfig.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.FixedSizeBucketingConfig) hash ^= FixedSizeBucketingConfig.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.BucketingConfig) hash ^= BucketingConfig.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.ReplaceWithInfoTypeConfig) hash ^= ReplaceWithInfoTypeConfig.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.TimePartConfig) hash ^= TimePartConfig.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.CryptoHashConfig) hash ^= CryptoHashConfig.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.DateShiftConfig) hash ^= DateShiftConfig.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.CryptoDeterministicConfig) hash ^= CryptoDeterministicConfig.GetHashCode();
      hash ^= (int) transformationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (transformationCase_ == TransformationOneofCase.ReplaceConfig) {
        output.WriteRawTag(10);
        output.WriteMessage(ReplaceConfig);
      }
      if (transformationCase_ == TransformationOneofCase.RedactConfig) {
        output.WriteRawTag(18);
        output.WriteMessage(RedactConfig);
      }
      if (transformationCase_ == TransformationOneofCase.CharacterMaskConfig) {
        output.WriteRawTag(26);
        output.WriteMessage(CharacterMaskConfig);
      }
      if (transformationCase_ == TransformationOneofCase.CryptoReplaceFfxFpeConfig) {
        output.WriteRawTag(34);
        output.WriteMessage(CryptoReplaceFfxFpeConfig);
      }
      if (transformationCase_ == TransformationOneofCase.FixedSizeBucketingConfig) {
        output.WriteRawTag(42);
        output.WriteMessage(FixedSizeBucketingConfig);
      }
      if (transformationCase_ == TransformationOneofCase.BucketingConfig) {
        output.WriteRawTag(50);
        output.WriteMessage(BucketingConfig);
      }
      if (transformationCase_ == TransformationOneofCase.ReplaceWithInfoTypeConfig) {
        output.WriteRawTag(58);
        output.WriteMessage(ReplaceWithInfoTypeConfig);
      }
      if (transformationCase_ == TransformationOneofCase.TimePartConfig) {
        output.WriteRawTag(66);
        output.WriteMessage(TimePartConfig);
      }
      if (transformationCase_ == TransformationOneofCase.CryptoHashConfig) {
        output.WriteRawTag(74);
        output.WriteMessage(CryptoHashConfig);
      }
      if (transformationCase_ == TransformationOneofCase.DateShiftConfig) {
        output.WriteRawTag(90);
        output.WriteMessage(DateShiftConfig);
      }
      if (transformationCase_ == TransformationOneofCase.CryptoDeterministicConfig) {
        output.WriteRawTag(98);
        output.WriteMessage(CryptoDeterministicConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (transformationCase_ == TransformationOneofCase.ReplaceConfig) {
        output.WriteRawTag(10);
        output.WriteMessage(ReplaceConfig);
      }
      if (transformationCase_ == TransformationOneofCase.RedactConfig) {
        output.WriteRawTag(18);
        output.WriteMessage(RedactConfig);
      }
      if (transformationCase_ == TransformationOneofCase.CharacterMaskConfig) {
        output.WriteRawTag(26);
        output.WriteMessage(CharacterMaskConfig);
      }
      if (transformationCase_ == TransformationOneofCase.CryptoReplaceFfxFpeConfig) {
        output.WriteRawTag(34);
        output.WriteMessage(CryptoReplaceFfxFpeConfig);
      }
      if (transformationCase_ == TransformationOneofCase.FixedSizeBucketingConfig) {
        output.WriteRawTag(42);
        output.WriteMessage(FixedSizeBucketingConfig);
      }
      if (transformationCase_ == TransformationOneofCase.BucketingConfig) {
        output.WriteRawTag(50);
        output.WriteMessage(BucketingConfig);
      }
      if (transformationCase_ == TransformationOneofCase.ReplaceWithInfoTypeConfig) {
        output.WriteRawTag(58);
        output.WriteMessage(ReplaceWithInfoTypeConfig);
      }
      if (transformationCase_ == TransformationOneofCase.TimePartConfig) {
        output.WriteRawTag(66);
        output.WriteMessage(TimePartConfig);
      }
      if (transformationCase_ == TransformationOneofCase.CryptoHashConfig) {
        output.WriteRawTag(74);
        output.WriteMessage(CryptoHashConfig);
      }
      if (transformationCase_ == TransformationOneofCase.DateShiftConfig) {
        output.WriteRawTag(90);
        output.WriteMessage(DateShiftConfig);
      }
      if (transformationCase_ == TransformationOneofCase.CryptoDeterministicConfig) {
        output.WriteRawTag(98);
        output.WriteMessage(CryptoDeterministicConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transformationCase_ == TransformationOneofCase.ReplaceConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReplaceConfig);
      }
      if (transformationCase_ == TransformationOneofCase.RedactConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedactConfig);
      }
      if (transformationCase_ == TransformationOneofCase.CharacterMaskConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CharacterMaskConfig);
      }
      if (transformationCase_ == TransformationOneofCase.CryptoReplaceFfxFpeConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CryptoReplaceFfxFpeConfig);
      }
      if (transformationCase_ == TransformationOneofCase.FixedSizeBucketingConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FixedSizeBucketingConfig);
      }
      if (transformationCase_ == TransformationOneofCase.BucketingConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BucketingConfig);
      }
      if (transformationCase_ == TransformationOneofCase.ReplaceWithInfoTypeConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReplaceWithInfoTypeConfig);
      }
      if (transformationCase_ == TransformationOneofCase.TimePartConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimePartConfig);
      }
      if (transformationCase_ == TransformationOneofCase.CryptoHashConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CryptoHashConfig);
      }
      if (transformationCase_ == TransformationOneofCase.DateShiftConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateShiftConfig);
      }
      if (transformationCase_ == TransformationOneofCase.CryptoDeterministicConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CryptoDeterministicConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrimitiveTransformation other) {
      if (other == null) {
        return;
      }
      switch (other.TransformationCase) {
        case TransformationOneofCase.ReplaceConfig:
          if (ReplaceConfig == null) {
            ReplaceConfig = new global::Google.Cloud.Dlp.V2.ReplaceValueConfig();
          }
          ReplaceConfig.MergeFrom(other.ReplaceConfig);
          break;
        case TransformationOneofCase.RedactConfig:
          if (RedactConfig == null) {
            RedactConfig = new global::Google.Cloud.Dlp.V2.RedactConfig();
          }
          RedactConfig.MergeFrom(other.RedactConfig);
          break;
        case TransformationOneofCase.CharacterMaskConfig:
          if (CharacterMaskConfig == null) {
            CharacterMaskConfig = new global::Google.Cloud.Dlp.V2.CharacterMaskConfig();
          }
          CharacterMaskConfig.MergeFrom(other.CharacterMaskConfig);
          break;
        case TransformationOneofCase.CryptoReplaceFfxFpeConfig:
          if (CryptoReplaceFfxFpeConfig == null) {
            CryptoReplaceFfxFpeConfig = new global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig();
          }
          CryptoReplaceFfxFpeConfig.MergeFrom(other.CryptoReplaceFfxFpeConfig);
          break;
        case TransformationOneofCase.FixedSizeBucketingConfig:
          if (FixedSizeBucketingConfig == null) {
            FixedSizeBucketingConfig = new global::Google.Cloud.Dlp.V2.FixedSizeBucketingConfig();
          }
          FixedSizeBucketingConfig.MergeFrom(other.FixedSizeBucketingConfig);
          break;
        case TransformationOneofCase.BucketingConfig:
          if (BucketingConfig == null) {
            BucketingConfig = new global::Google.Cloud.Dlp.V2.BucketingConfig();
          }
          BucketingConfig.MergeFrom(other.BucketingConfig);
          break;
        case TransformationOneofCase.ReplaceWithInfoTypeConfig:
          if (ReplaceWithInfoTypeConfig == null) {
            ReplaceWithInfoTypeConfig = new global::Google.Cloud.Dlp.V2.ReplaceWithInfoTypeConfig();
          }
          ReplaceWithInfoTypeConfig.MergeFrom(other.ReplaceWithInfoTypeConfig);
          break;
        case TransformationOneofCase.TimePartConfig:
          if (TimePartConfig == null) {
            TimePartConfig = new global::Google.Cloud.Dlp.V2.TimePartConfig();
          }
          TimePartConfig.MergeFrom(other.TimePartConfig);
          break;
        case TransformationOneofCase.CryptoHashConfig:
          if (CryptoHashConfig == null) {
            CryptoHashConfig = new global::Google.Cloud.Dlp.V2.CryptoHashConfig();
          }
          CryptoHashConfig.MergeFrom(other.CryptoHashConfig);
          break;
        case TransformationOneofCase.DateShiftConfig:
          if (DateShiftConfig == null) {
            DateShiftConfig = new global::Google.Cloud.Dlp.V2.DateShiftConfig();
          }
          DateShiftConfig.MergeFrom(other.DateShiftConfig);
          break;
        case TransformationOneofCase.CryptoDeterministicConfig:
          if (CryptoDeterministicConfig == null) {
            CryptoDeterministicConfig = new global::Google.Cloud.Dlp.V2.CryptoDeterministicConfig();
          }
          CryptoDeterministicConfig.MergeFrom(other.CryptoDeterministicConfig);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.ReplaceValueConfig subBuilder = new global::Google.Cloud.Dlp.V2.ReplaceValueConfig();
            if (transformationCase_ == TransformationOneofCase.ReplaceConfig) {
              subBuilder.MergeFrom(ReplaceConfig);
            }
            input.ReadMessage(subBuilder);
            ReplaceConfig = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.RedactConfig subBuilder = new global::Google.Cloud.Dlp.V2.RedactConfig();
            if (transformationCase_ == TransformationOneofCase.RedactConfig) {
              subBuilder.MergeFrom(RedactConfig);
            }
            input.ReadMessage(subBuilder);
            RedactConfig = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.CharacterMaskConfig subBuilder = new global::Google.Cloud.Dlp.V2.CharacterMaskConfig();
            if (transformationCase_ == TransformationOneofCase.CharacterMaskConfig) {
              subBuilder.MergeFrom(CharacterMaskConfig);
            }
            input.ReadMessage(subBuilder);
            CharacterMaskConfig = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig subBuilder = new global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig();
            if (transformationCase_ == TransformationOneofCase.CryptoReplaceFfxFpeConfig) {
              subBuilder.MergeFrom(CryptoReplaceFfxFpeConfig);
            }
            input.ReadMessage(subBuilder);
            CryptoReplaceFfxFpeConfig = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.FixedSizeBucketingConfig subBuilder = new global::Google.Cloud.Dlp.V2.FixedSizeBucketingConfig();
            if (transformationCase_ == TransformationOneofCase.FixedSizeBucketingConfig) {
              subBuilder.MergeFrom(FixedSizeBucketingConfig);
            }
            input.ReadMessage(subBuilder);
            FixedSizeBucketingConfig = subBuilder;
            break;
          }
          case 50: {
            global::Google.Cloud.Dlp.V2.BucketingConfig subBuilder = new global::Google.Cloud.Dlp.V2.BucketingConfig();
            if (transformationCase_ == TransformationOneofCase.BucketingConfig) {
              subBuilder.MergeFrom(BucketingConfig);
            }
            input.ReadMessage(subBuilder);
            BucketingConfig = subBuilder;
            break;
          }
          case 58: {
            global::Google.Cloud.Dlp.V2.ReplaceWithInfoTypeConfig subBuilder = new global::Google.Cloud.Dlp.V2.ReplaceWithInfoTypeConfig();
            if (transformationCase_ == TransformationOneofCase.ReplaceWithInfoTypeConfig) {
              subBuilder.MergeFrom(ReplaceWithInfoTypeConfig);
            }
            input.ReadMessage(subBuilder);
            ReplaceWithInfoTypeConfig = subBuilder;
            break;
          }
          case 66: {
            global::Google.Cloud.Dlp.V2.TimePartConfig subBuilder = new global::Google.Cloud.Dlp.V2.TimePartConfig();
            if (transformationCase_ == TransformationOneofCase.TimePartConfig) {
              subBuilder.MergeFrom(TimePartConfig);
            }
            input.ReadMessage(subBuilder);
            TimePartConfig = subBuilder;
            break;
          }
          case 74: {
            global::Google.Cloud.Dlp.V2.CryptoHashConfig subBuilder = new global::Google.Cloud.Dlp.V2.CryptoHashConfig();
            if (transformationCase_ == TransformationOneofCase.CryptoHashConfig) {
              subBuilder.MergeFrom(CryptoHashConfig);
            }
            input.ReadMessage(subBuilder);
            CryptoHashConfig = subBuilder;
            break;
          }
          case 90: {
            global::Google.Cloud.Dlp.V2.DateShiftConfig subBuilder = new global::Google.Cloud.Dlp.V2.DateShiftConfig();
            if (transformationCase_ == TransformationOneofCase.DateShiftConfig) {
              subBuilder.MergeFrom(DateShiftConfig);
            }
            input.ReadMessage(subBuilder);
            DateShiftConfig = subBuilder;
            break;
          }
          case 98: {
            global::Google.Cloud.Dlp.V2.CryptoDeterministicConfig subBuilder = new global::Google.Cloud.Dlp.V2.CryptoDeterministicConfig();
            if (transformationCase_ == TransformationOneofCase.CryptoDeterministicConfig) {
              subBuilder.MergeFrom(CryptoDeterministicConfig);
            }
            input.ReadMessage(subBuilder);
            CryptoDeterministicConfig = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.ReplaceValueConfig subBuilder = new global::Google.Cloud.Dlp.V2.ReplaceValueConfig();
            if (transformationCase_ == TransformationOneofCase.ReplaceConfig) {
              subBuilder.MergeFrom(ReplaceConfig);
            }
            input.ReadMessage(subBuilder);
            ReplaceConfig = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.RedactConfig subBuilder = new global::Google.Cloud.Dlp.V2.RedactConfig();
            if (transformationCase_ == TransformationOneofCase.RedactConfig) {
              subBuilder.MergeFrom(RedactConfig);
            }
            input.ReadMessage(subBuilder);
            RedactConfig = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.CharacterMaskConfig subBuilder = new global::Google.Cloud.Dlp.V2.CharacterMaskConfig();
            if (transformationCase_ == TransformationOneofCase.CharacterMaskConfig) {
              subBuilder.MergeFrom(CharacterMaskConfig);
            }
            input.ReadMessage(subBuilder);
            CharacterMaskConfig = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig subBuilder = new global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig();
            if (transformationCase_ == TransformationOneofCase.CryptoReplaceFfxFpeConfig) {
              subBuilder.MergeFrom(CryptoReplaceFfxFpeConfig);
            }
            input.ReadMessage(subBuilder);
            CryptoReplaceFfxFpeConfig = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.FixedSizeBucketingConfig subBuilder = new global::Google.Cloud.Dlp.V2.FixedSizeBucketingConfig();
            if (transformationCase_ == TransformationOneofCase.FixedSizeBucketingConfig) {
              subBuilder.MergeFrom(FixedSizeBucketingConfig);
            }
            input.ReadMessage(subBuilder);
            FixedSizeBucketingConfig = subBuilder;
            break;
          }
          case 50: {
            global::Google.Cloud.Dlp.V2.BucketingConfig subBuilder = new global::Google.Cloud.Dlp.V2.BucketingConfig();
            if (transformationCase_ == TransformationOneofCase.BucketingConfig) {
              subBuilder.MergeFrom(BucketingConfig);
            }
            input.ReadMessage(subBuilder);
            BucketingConfig = subBuilder;
            break;
          }
          case 58: {
            global::Google.Cloud.Dlp.V2.ReplaceWithInfoTypeConfig subBuilder = new global::Google.Cloud.Dlp.V2.ReplaceWithInfoTypeConfig();
            if (transformationCase_ == TransformationOneofCase.ReplaceWithInfoTypeConfig) {
              subBuilder.MergeFrom(ReplaceWithInfoTypeConfig);
            }
            input.ReadMessage(subBuilder);
            ReplaceWithInfoTypeConfig = subBuilder;
            break;
          }
          case 66: {
            global::Google.Cloud.Dlp.V2.TimePartConfig subBuilder = new global::Google.Cloud.Dlp.V2.TimePartConfig();
            if (transformationCase_ == TransformationOneofCase.TimePartConfig) {
              subBuilder.MergeFrom(TimePartConfig);
            }
            input.ReadMessage(subBuilder);
            TimePartConfig = subBuilder;
            break;
          }
          case 74: {
            global::Google.Cloud.Dlp.V2.CryptoHashConfig subBuilder = new global::Google.Cloud.Dlp.V2.CryptoHashConfig();
            if (transformationCase_ == TransformationOneofCase.CryptoHashConfig) {
              subBuilder.MergeFrom(CryptoHashConfig);
            }
            input.ReadMessage(subBuilder);
            CryptoHashConfig = subBuilder;
            break;
          }
          case 90: {
            global::Google.Cloud.Dlp.V2.DateShiftConfig subBuilder = new global::Google.Cloud.Dlp.V2.DateShiftConfig();
            if (transformationCase_ == TransformationOneofCase.DateShiftConfig) {
              subBuilder.MergeFrom(DateShiftConfig);
            }
            input.ReadMessage(subBuilder);
            DateShiftConfig = subBuilder;
            break;
          }
          case 98: {
            global::Google.Cloud.Dlp.V2.CryptoDeterministicConfig subBuilder = new global::Google.Cloud.Dlp.V2.CryptoDeterministicConfig();
            if (transformationCase_ == TransformationOneofCase.CryptoDeterministicConfig) {
              subBuilder.MergeFrom(CryptoDeterministicConfig);
            }
            input.ReadMessage(subBuilder);
            CryptoDeterministicConfig = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a
  /// portion of the value.
  /// </summary>
  public sealed partial class TimePartConfig : pb::IMessage<TimePartConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimePartConfig> _parser = new pb::MessageParser<TimePartConfig>(() => new TimePartConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimePartConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePartConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePartConfig(TimePartConfig other) : this() {
      partToExtract_ = other.partToExtract_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePartConfig Clone() {
      return new TimePartConfig(this);
    }

    /// <summary>Field number for the "part_to_extract" field.</summary>
    public const int PartToExtractFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.TimePartConfig.Types.TimePart partToExtract_ = global::Google.Cloud.Dlp.V2.TimePartConfig.Types.TimePart.Unspecified;
    /// <summary>
    /// The part of the time to keep.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.TimePartConfig.Types.TimePart PartToExtract {
      get { return partToExtract_; }
      set {
        partToExtract_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimePartConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimePartConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PartToExtract != other.PartToExtract) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PartToExtract != global::Google.Cloud.Dlp.V2.TimePartConfig.Types.TimePart.Unspecified) hash ^= PartToExtract.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PartToExtract != global::Google.Cloud.Dlp.V2.TimePartConfig.Types.TimePart.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PartToExtract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PartToExtract != global::Google.Cloud.Dlp.V2.TimePartConfig.Types.TimePart.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PartToExtract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PartToExtract != global::Google.Cloud.Dlp.V2.TimePartConfig.Types.TimePart.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PartToExtract);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimePartConfig other) {
      if (other == null) {
        return;
      }
      if (other.PartToExtract != global::Google.Cloud.Dlp.V2.TimePartConfig.Types.TimePart.Unspecified) {
        PartToExtract = other.PartToExtract;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PartToExtract = (global::Google.Cloud.Dlp.V2.TimePartConfig.Types.TimePart) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PartToExtract = (global::Google.Cloud.Dlp.V2.TimePartConfig.Types.TimePart) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TimePartConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Components that make up time.
      /// </summary>
      public enum TimePart {
        /// <summary>
        /// Unused
        /// </summary>
        [pbr::OriginalName("TIME_PART_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// [0-9999]
        /// </summary>
        [pbr::OriginalName("YEAR")] Year = 1,
        /// <summary>
        /// [1-12]
        /// </summary>
        [pbr::OriginalName("MONTH")] Month = 2,
        /// <summary>
        /// [1-31]
        /// </summary>
        [pbr::OriginalName("DAY_OF_MONTH")] DayOfMonth = 3,
        /// <summary>
        /// [1-7]
        /// </summary>
        [pbr::OriginalName("DAY_OF_WEEK")] DayOfWeek = 4,
        /// <summary>
        /// [1-53]
        /// </summary>
        [pbr::OriginalName("WEEK_OF_YEAR")] WeekOfYear = 5,
        /// <summary>
        /// [0-23]
        /// </summary>
        [pbr::OriginalName("HOUR_OF_DAY")] HourOfDay = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// Pseudonymization method that generates surrogates via cryptographic hashing.
  /// Uses SHA-256.
  /// The key size must be either 32 or 64 bytes.
  /// Outputs a base64 encoded representation of the hashed output
  /// (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=).
  /// Currently, only string and integer values can be hashed.
  /// See https://cloud.google.com/dlp/docs/pseudonymization to learn more.
  /// </summary>
  public sealed partial class CryptoHashConfig : pb::IMessage<CryptoHashConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CryptoHashConfig> _parser = new pb::MessageParser<CryptoHashConfig>(() => new CryptoHashConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CryptoHashConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoHashConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoHashConfig(CryptoHashConfig other) : this() {
      cryptoKey_ = other.cryptoKey_ != null ? other.cryptoKey_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoHashConfig Clone() {
      return new CryptoHashConfig(this);
    }

    /// <summary>Field number for the "crypto_key" field.</summary>
    public const int CryptoKeyFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.CryptoKey cryptoKey_;
    /// <summary>
    /// The key used by the hash function.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CryptoKey CryptoKey {
      get { return cryptoKey_; }
      set {
        cryptoKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CryptoHashConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CryptoHashConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CryptoKey, other.CryptoKey)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cryptoKey_ != null) hash ^= CryptoKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cryptoKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CryptoKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cryptoKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CryptoKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cryptoKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CryptoKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CryptoHashConfig other) {
      if (other == null) {
        return;
      }
      if (other.cryptoKey_ != null) {
        if (cryptoKey_ == null) {
          CryptoKey = new global::Google.Cloud.Dlp.V2.CryptoKey();
        }
        CryptoKey.MergeFrom(other.CryptoKey);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cryptoKey_ == null) {
              CryptoKey = new global::Google.Cloud.Dlp.V2.CryptoKey();
            }
            input.ReadMessage(CryptoKey);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cryptoKey_ == null) {
              CryptoKey = new global::Google.Cloud.Dlp.V2.CryptoKey();
            }
            input.ReadMessage(CryptoKey);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Pseudonymization method that generates deterministic encryption for the given
  /// input. Outputs a base64 encoded representation of the encrypted output.
  /// Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
  /// </summary>
  public sealed partial class CryptoDeterministicConfig : pb::IMessage<CryptoDeterministicConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CryptoDeterministicConfig> _parser = new pb::MessageParser<CryptoDeterministicConfig>(() => new CryptoDeterministicConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CryptoDeterministicConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoDeterministicConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoDeterministicConfig(CryptoDeterministicConfig other) : this() {
      cryptoKey_ = other.cryptoKey_ != null ? other.cryptoKey_.Clone() : null;
      surrogateInfoType_ = other.surrogateInfoType_ != null ? other.surrogateInfoType_.Clone() : null;
      context_ = other.context_ != null ? other.context_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoDeterministicConfig Clone() {
      return new CryptoDeterministicConfig(this);
    }

    /// <summary>Field number for the "crypto_key" field.</summary>
    public const int CryptoKeyFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.CryptoKey cryptoKey_;
    /// <summary>
    /// The key used by the encryption function.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CryptoKey CryptoKey {
      get { return cryptoKey_; }
      set {
        cryptoKey_ = value;
      }
    }

    /// <summary>Field number for the "surrogate_info_type" field.</summary>
    public const int SurrogateInfoTypeFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.InfoType surrogateInfoType_;
    /// <summary>
    /// The custom info type to annotate the surrogate with.
    /// This annotation will be applied to the surrogate by prefixing it with
    /// the name of the custom info type followed by the number of
    /// characters comprising the surrogate. The following scheme defines the
    /// format: {info type name}({surrogate character count}):{surrogate}
    ///
    /// For example, if the name of custom info type is 'MY_TOKEN_INFO_TYPE' and
    /// the surrogate is 'abc', the full replacement value
    /// will be: 'MY_TOKEN_INFO_TYPE(3):abc'
    ///
    /// This annotation identifies the surrogate when inspecting content using the
    /// custom info type 'Surrogate'. This facilitates reversal of the
    /// surrogate when it occurs in free text.
    ///
    /// Note: For record transformations where the entire cell in a table is being
    /// transformed, surrogates are not mandatory. Surrogates are used to denote
    /// the location of the token and are necessary for re-identification in free
    /// form text.
    ///
    /// In order for inspection to work properly, the name of this info type must
    /// not occur naturally anywhere in your data; otherwise, inspection may either
    ///
    /// - reverse a surrogate that does not correspond to an actual identifier
    /// - be unable to parse the surrogate and result in an error
    ///
    /// Therefore, choose your custom info type name carefully after considering
    /// what your data looks like. One way to select a name that has a high chance
    /// of yielding reliable detection is to include one or more unicode characters
    /// that are highly improbable to exist in your data.
    /// For example, assuming your data is entered from a regular ASCII keyboard,
    /// the symbol with the hex code point 29DD might be used like so:
    /// ⧝MY_TOKEN_TYPE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InfoType SurrogateInfoType {
      get { return surrogateInfoType_; }
      set {
        surrogateInfoType_ = value;
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.FieldId context_;
    /// <summary>
    /// A context may be used for higher security and maintaining
    /// referential integrity such that the same identifier in two different
    /// contexts will be given a distinct surrogate. The context is appended to
    /// plaintext value being encrypted. On decryption the provided context is
    /// validated against the value used during encryption. If a context was
    /// provided during encryption, same context must be provided during decryption
    /// as well.
    ///
    /// If the context is not set, plaintext would be used as is for encryption.
    /// If the context is set but:
    ///
    /// 1. there is no record present when transforming a given value or
    /// 2. the field is not present when transforming a given value,
    ///
    /// plaintext would be used as is for encryption.
    ///
    /// Note that case (1) is expected when an `InfoTypeTransformation` is
    /// applied to both structured and non-structured `ContentItem`s.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.FieldId Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CryptoDeterministicConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CryptoDeterministicConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CryptoKey, other.CryptoKey)) return false;
      if (!object.Equals(SurrogateInfoType, other.SurrogateInfoType)) return false;
      if (!object.Equals(Context, other.Context)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cryptoKey_ != null) hash ^= CryptoKey.GetHashCode();
      if (surrogateInfoType_ != null) hash ^= SurrogateInfoType.GetHashCode();
      if (context_ != null) hash ^= Context.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cryptoKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CryptoKey);
      }
      if (surrogateInfoType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SurrogateInfoType);
      }
      if (context_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Context);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cryptoKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CryptoKey);
      }
      if (surrogateInfoType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SurrogateInfoType);
      }
      if (context_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Context);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cryptoKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CryptoKey);
      }
      if (surrogateInfoType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SurrogateInfoType);
      }
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CryptoDeterministicConfig other) {
      if (other == null) {
        return;
      }
      if (other.cryptoKey_ != null) {
        if (cryptoKey_ == null) {
          CryptoKey = new global::Google.Cloud.Dlp.V2.CryptoKey();
        }
        CryptoKey.MergeFrom(other.CryptoKey);
      }
      if (other.surrogateInfoType_ != null) {
        if (surrogateInfoType_ == null) {
          SurrogateInfoType = new global::Google.Cloud.Dlp.V2.InfoType();
        }
        SurrogateInfoType.MergeFrom(other.SurrogateInfoType);
      }
      if (other.context_ != null) {
        if (context_ == null) {
          Context = new global::Google.Cloud.Dlp.V2.FieldId();
        }
        Context.MergeFrom(other.Context);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cryptoKey_ == null) {
              CryptoKey = new global::Google.Cloud.Dlp.V2.CryptoKey();
            }
            input.ReadMessage(CryptoKey);
            break;
          }
          case 18: {
            if (surrogateInfoType_ == null) {
              SurrogateInfoType = new global::Google.Cloud.Dlp.V2.InfoType();
            }
            input.ReadMessage(SurrogateInfoType);
            break;
          }
          case 26: {
            if (context_ == null) {
              Context = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Context);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cryptoKey_ == null) {
              CryptoKey = new global::Google.Cloud.Dlp.V2.CryptoKey();
            }
            input.ReadMessage(CryptoKey);
            break;
          }
          case 18: {
            if (surrogateInfoType_ == null) {
              SurrogateInfoType = new global::Google.Cloud.Dlp.V2.InfoType();
            }
            input.ReadMessage(SurrogateInfoType);
            break;
          }
          case 26: {
            if (context_ == null) {
              Context = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Context);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Replace each input value with a given `Value`.
  /// </summary>
  public sealed partial class ReplaceValueConfig : pb::IMessage<ReplaceValueConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReplaceValueConfig> _parser = new pb::MessageParser<ReplaceValueConfig>(() => new ReplaceValueConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReplaceValueConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceValueConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceValueConfig(ReplaceValueConfig other) : this() {
      newValue_ = other.newValue_ != null ? other.newValue_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceValueConfig Clone() {
      return new ReplaceValueConfig(this);
    }

    /// <summary>Field number for the "new_value" field.</summary>
    public const int NewValueFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.Value newValue_;
    /// <summary>
    /// Value to replace it with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Value NewValue {
      get { return newValue_; }
      set {
        newValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReplaceValueConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReplaceValueConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NewValue, other.NewValue)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (newValue_ != null) hash ^= NewValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (newValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NewValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (newValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NewValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (newValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReplaceValueConfig other) {
      if (other == null) {
        return;
      }
      if (other.newValue_ != null) {
        if (newValue_ == null) {
          NewValue = new global::Google.Cloud.Dlp.V2.Value();
        }
        NewValue.MergeFrom(other.NewValue);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (newValue_ == null) {
              NewValue = new global::Google.Cloud.Dlp.V2.Value();
            }
            input.ReadMessage(NewValue);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (newValue_ == null) {
              NewValue = new global::Google.Cloud.Dlp.V2.Value();
            }
            input.ReadMessage(NewValue);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Replace each matching finding with the name of the info_type.
  /// </summary>
  public sealed partial class ReplaceWithInfoTypeConfig : pb::IMessage<ReplaceWithInfoTypeConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReplaceWithInfoTypeConfig> _parser = new pb::MessageParser<ReplaceWithInfoTypeConfig>(() => new ReplaceWithInfoTypeConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReplaceWithInfoTypeConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceWithInfoTypeConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceWithInfoTypeConfig(ReplaceWithInfoTypeConfig other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceWithInfoTypeConfig Clone() {
      return new ReplaceWithInfoTypeConfig(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReplaceWithInfoTypeConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReplaceWithInfoTypeConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReplaceWithInfoTypeConfig other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Redact a given value. For example, if used with an `InfoTypeTransformation`
  /// transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the
  /// output would be 'My phone number is '.
  /// </summary>
  public sealed partial class RedactConfig : pb::IMessage<RedactConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RedactConfig> _parser = new pb::MessageParser<RedactConfig>(() => new RedactConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedactConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedactConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedactConfig(RedactConfig other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedactConfig Clone() {
      return new RedactConfig(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedactConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedactConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedactConfig other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Characters to skip when doing deidentification of a value. These will be left
  /// alone and skipped.
  /// </summary>
  public sealed partial class CharsToIgnore : pb::IMessage<CharsToIgnore>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharsToIgnore> _parser = new pb::MessageParser<CharsToIgnore>(() => new CharsToIgnore());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CharsToIgnore> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharsToIgnore() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharsToIgnore(CharsToIgnore other) : this() {
      switch (other.CharactersCase) {
        case CharactersOneofCase.CharactersToSkip:
          CharactersToSkip = other.CharactersToSkip;
          break;
        case CharactersOneofCase.CommonCharactersToIgnore:
          CommonCharactersToIgnore = other.CommonCharactersToIgnore;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharsToIgnore Clone() {
      return new CharsToIgnore(this);
    }

    /// <summary>Field number for the "characters_to_skip" field.</summary>
    public const int CharactersToSkipFieldNumber = 1;
    /// <summary>
    /// Characters to not transform when masking.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CharactersToSkip {
      get { return charactersCase_ == CharactersOneofCase.CharactersToSkip ? (string) characters_ : ""; }
      set {
        characters_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        charactersCase_ = CharactersOneofCase.CharactersToSkip;
      }
    }

    /// <summary>Field number for the "common_characters_to_ignore" field.</summary>
    public const int CommonCharactersToIgnoreFieldNumber = 2;
    /// <summary>
    /// Common characters to not transform when masking. Useful to avoid removing
    /// punctuation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CharsToIgnore.Types.CommonCharsToIgnore CommonCharactersToIgnore {
      get { return charactersCase_ == CharactersOneofCase.CommonCharactersToIgnore ? (global::Google.Cloud.Dlp.V2.CharsToIgnore.Types.CommonCharsToIgnore) characters_ : global::Google.Cloud.Dlp.V2.CharsToIgnore.Types.CommonCharsToIgnore.Unspecified; }
      set {
        characters_ = value;
        charactersCase_ = CharactersOneofCase.CommonCharactersToIgnore;
      }
    }

    private object characters_;
    /// <summary>Enum of possible cases for the "characters" oneof.</summary>
    public enum CharactersOneofCase {
      None = 0,
      CharactersToSkip = 1,
      CommonCharactersToIgnore = 2,
    }
    private CharactersOneofCase charactersCase_ = CharactersOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharactersOneofCase CharactersCase {
      get { return charactersCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCharacters() {
      charactersCase_ = CharactersOneofCase.None;
      characters_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CharsToIgnore);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CharsToIgnore other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CharactersToSkip != other.CharactersToSkip) return false;
      if (CommonCharactersToIgnore != other.CommonCharactersToIgnore) return false;
      if (CharactersCase != other.CharactersCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (charactersCase_ == CharactersOneofCase.CharactersToSkip) hash ^= CharactersToSkip.GetHashCode();
      if (charactersCase_ == CharactersOneofCase.CommonCharactersToIgnore) hash ^= CommonCharactersToIgnore.GetHashCode();
      hash ^= (int) charactersCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (charactersCase_ == CharactersOneofCase.CharactersToSkip) {
        output.WriteRawTag(10);
        output.WriteString(CharactersToSkip);
      }
      if (charactersCase_ == CharactersOneofCase.CommonCharactersToIgnore) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CommonCharactersToIgnore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (charactersCase_ == CharactersOneofCase.CharactersToSkip) {
        output.WriteRawTag(10);
        output.WriteString(CharactersToSkip);
      }
      if (charactersCase_ == CharactersOneofCase.CommonCharactersToIgnore) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CommonCharactersToIgnore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (charactersCase_ == CharactersOneofCase.CharactersToSkip) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CharactersToSkip);
      }
      if (charactersCase_ == CharactersOneofCase.CommonCharactersToIgnore) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommonCharactersToIgnore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CharsToIgnore other) {
      if (other == null) {
        return;
      }
      switch (other.CharactersCase) {
        case CharactersOneofCase.CharactersToSkip:
          CharactersToSkip = other.CharactersToSkip;
          break;
        case CharactersOneofCase.CommonCharactersToIgnore:
          CommonCharactersToIgnore = other.CommonCharactersToIgnore;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CharactersToSkip = input.ReadString();
            break;
          }
          case 16: {
            characters_ = input.ReadEnum();
            charactersCase_ = CharactersOneofCase.CommonCharactersToIgnore;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CharactersToSkip = input.ReadString();
            break;
          }
          case 16: {
            characters_ = input.ReadEnum();
            charactersCase_ = CharactersOneofCase.CommonCharactersToIgnore;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CharsToIgnore message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Convenience enum for indication common characters to not transform.
      /// </summary>
      public enum CommonCharsToIgnore {
        /// <summary>
        /// Unused.
        /// </summary>
        [pbr::OriginalName("COMMON_CHARS_TO_IGNORE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// 0-9
        /// </summary>
        [pbr::OriginalName("NUMERIC")] Numeric = 1,
        /// <summary>
        /// A-Z
        /// </summary>
        [pbr::OriginalName("ALPHA_UPPER_CASE")] AlphaUpperCase = 2,
        /// <summary>
        /// a-z
        /// </summary>
        [pbr::OriginalName("ALPHA_LOWER_CASE")] AlphaLowerCase = 3,
        /// <summary>
        /// US Punctuation, one of !"#$%&amp;'()*+,-./:;&lt;=>?@[\]^_`{|}~
        /// </summary>
        [pbr::OriginalName("PUNCTUATION")] Punctuation = 4,
        /// <summary>
        /// Whitespace character, one of [ \t\n\x0B\f\r]
        /// </summary>
        [pbr::OriginalName("WHITESPACE")] Whitespace = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Partially mask a string by replacing a given number of characters with a
  /// fixed character. Masking can start from the beginning or end of the string.
  /// This can be used on data of any type (numbers, longs, and so on) and when
  /// de-identifying structured data we'll attempt to preserve the original data's
  /// type. (This allows you to take a long like 123 and modify it to a string like
  /// **3.
  /// </summary>
  public sealed partial class CharacterMaskConfig : pb::IMessage<CharacterMaskConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterMaskConfig> _parser = new pb::MessageParser<CharacterMaskConfig>(() => new CharacterMaskConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CharacterMaskConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterMaskConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterMaskConfig(CharacterMaskConfig other) : this() {
      maskingCharacter_ = other.maskingCharacter_;
      numberToMask_ = other.numberToMask_;
      reverseOrder_ = other.reverseOrder_;
      charactersToIgnore_ = other.charactersToIgnore_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterMaskConfig Clone() {
      return new CharacterMaskConfig(this);
    }

    /// <summary>Field number for the "masking_character" field.</summary>
    public const int MaskingCharacterFieldNumber = 1;
    private string maskingCharacter_ = "";
    /// <summary>
    /// Character to use to mask the sensitive values&amp;mdash;for example, `*` for an
    /// alphabetic string such as a name, or `0` for a numeric string such as ZIP
    /// code or credit card number. This string must have a length of 1. If not
    /// supplied, this value defaults to `*` for strings, and `0` for digits.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskingCharacter {
      get { return maskingCharacter_; }
      set {
        maskingCharacter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "number_to_mask" field.</summary>
    public const int NumberToMaskFieldNumber = 2;
    private int numberToMask_;
    /// <summary>
    /// Number of characters to mask. If not set, all matching chars will be
    /// masked. Skipped characters do not count towards this tally.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberToMask {
      get { return numberToMask_; }
      set {
        numberToMask_ = value;
      }
    }

    /// <summary>Field number for the "reverse_order" field.</summary>
    public const int ReverseOrderFieldNumber = 3;
    private bool reverseOrder_;
    /// <summary>
    /// Mask characters in reverse order. For example, if `masking_character` is
    /// `0`, `number_to_mask` is `14`, and `reverse_order` is `false`, then the
    /// input string `1234-5678-9012-3456` is masked as `00000000000000-3456`.
    /// If `masking_character` is `*`, `number_to_mask` is `3`, and `reverse_order`
    /// is `true`, then the string `12345` is masked as `12***`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReverseOrder {
      get { return reverseOrder_; }
      set {
        reverseOrder_ = value;
      }
    }

    /// <summary>Field number for the "characters_to_ignore" field.</summary>
    public const int CharactersToIgnoreFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.CharsToIgnore> _repeated_charactersToIgnore_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Dlp.V2.CharsToIgnore.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.CharsToIgnore> charactersToIgnore_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.CharsToIgnore>();
    /// <summary>
    /// When masking a string, items in this list will be skipped when replacing
    /// characters. For example, if the input string is `555-555-5555` and you
    /// instruct Cloud DLP to skip `-` and mask 5 characters with `*`, Cloud DLP
    /// returns `***-**5-5555`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.CharsToIgnore> CharactersToIgnore {
      get { return charactersToIgnore_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CharacterMaskConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CharacterMaskConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaskingCharacter != other.MaskingCharacter) return false;
      if (NumberToMask != other.NumberToMask) return false;
      if (ReverseOrder != other.ReverseOrder) return false;
      if(!charactersToIgnore_.Equals(other.charactersToIgnore_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaskingCharacter.Length != 0) hash ^= MaskingCharacter.GetHashCode();
      if (NumberToMask != 0) hash ^= NumberToMask.GetHashCode();
      if (ReverseOrder != false) hash ^= ReverseOrder.GetHashCode();
      hash ^= charactersToIgnore_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MaskingCharacter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MaskingCharacter);
      }
      if (NumberToMask != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumberToMask);
      }
      if (ReverseOrder != false) {
        output.WriteRawTag(24);
        output.WriteBool(ReverseOrder);
      }
      charactersToIgnore_.WriteTo(output, _repeated_charactersToIgnore_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MaskingCharacter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MaskingCharacter);
      }
      if (NumberToMask != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumberToMask);
      }
      if (ReverseOrder != false) {
        output.WriteRawTag(24);
        output.WriteBool(ReverseOrder);
      }
      charactersToIgnore_.WriteTo(ref output, _repeated_charactersToIgnore_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaskingCharacter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskingCharacter);
      }
      if (NumberToMask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberToMask);
      }
      if (ReverseOrder != false) {
        size += 1 + 1;
      }
      size += charactersToIgnore_.CalculateSize(_repeated_charactersToIgnore_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CharacterMaskConfig other) {
      if (other == null) {
        return;
      }
      if (other.MaskingCharacter.Length != 0) {
        MaskingCharacter = other.MaskingCharacter;
      }
      if (other.NumberToMask != 0) {
        NumberToMask = other.NumberToMask;
      }
      if (other.ReverseOrder != false) {
        ReverseOrder = other.ReverseOrder;
      }
      charactersToIgnore_.Add(other.charactersToIgnore_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MaskingCharacter = input.ReadString();
            break;
          }
          case 16: {
            NumberToMask = input.ReadInt32();
            break;
          }
          case 24: {
            ReverseOrder = input.ReadBool();
            break;
          }
          case 34: {
            charactersToIgnore_.AddEntriesFrom(input, _repeated_charactersToIgnore_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MaskingCharacter = input.ReadString();
            break;
          }
          case 16: {
            NumberToMask = input.ReadInt32();
            break;
          }
          case 24: {
            ReverseOrder = input.ReadBool();
            break;
          }
          case 34: {
            charactersToIgnore_.AddEntriesFrom(ref input, _repeated_charactersToIgnore_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Buckets values based on fixed size ranges. The
  /// Bucketing transformation can provide all of this functionality,
  /// but requires more configuration. This message is provided as a convenience to
  /// the user for simple bucketing strategies.
  ///
  /// The transformed value will be a hyphenated string of
  /// {lower_bound}-{upper_bound}, i.e if lower_bound = 10 and upper_bound = 20
  /// all values that are within this bucket will be replaced with "10-20".
  ///
  /// This can be used on data of type: double, long.
  ///
  /// If the bound Value type differs from the type of data
  /// being transformed, we will first attempt converting the type of the data to
  /// be transformed to match the type of the bound before comparing.
  ///
  /// See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
  /// </summary>
  public sealed partial class FixedSizeBucketingConfig : pb::IMessage<FixedSizeBucketingConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FixedSizeBucketingConfig> _parser = new pb::MessageParser<FixedSizeBucketingConfig>(() => new FixedSizeBucketingConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FixedSizeBucketingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FixedSizeBucketingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FixedSizeBucketingConfig(FixedSizeBucketingConfig other) : this() {
      lowerBound_ = other.lowerBound_ != null ? other.lowerBound_.Clone() : null;
      upperBound_ = other.upperBound_ != null ? other.upperBound_.Clone() : null;
      bucketSize_ = other.bucketSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FixedSizeBucketingConfig Clone() {
      return new FixedSizeBucketingConfig(this);
    }

    /// <summary>Field number for the "lower_bound" field.</summary>
    public const int LowerBoundFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.Value lowerBound_;
    /// <summary>
    /// Required. Lower bound value of buckets. All values less than `lower_bound` are
    /// grouped together into a single bucket; for example if `lower_bound` = 10,
    /// then all values less than 10 are replaced with the value "-10".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Value LowerBound {
      get { return lowerBound_; }
      set {
        lowerBound_ = value;
      }
    }

    /// <summary>Field number for the "upper_bound" field.</summary>
    public const int UpperBoundFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.Value upperBound_;
    /// <summary>
    /// Required. Upper bound value of buckets. All values greater than upper_bound are
    /// grouped together into a single bucket; for example if `upper_bound` = 89,
    /// then all values greater than 89 are replaced with the value "89+".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Value UpperBound {
      get { return upperBound_; }
      set {
        upperBound_ = value;
      }
    }

    /// <summary>Field number for the "bucket_size" field.</summary>
    public const int BucketSizeFieldNumber = 3;
    private double bucketSize_;
    /// <summary>
    /// Required. Size of each bucket (except for minimum and maximum buckets). So if
    /// `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the
    /// following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60,
    /// 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BucketSize {
      get { return bucketSize_; }
      set {
        bucketSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FixedSizeBucketingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FixedSizeBucketingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LowerBound, other.LowerBound)) return false;
      if (!object.Equals(UpperBound, other.UpperBound)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BucketSize, other.BucketSize)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lowerBound_ != null) hash ^= LowerBound.GetHashCode();
      if (upperBound_ != null) hash ^= UpperBound.GetHashCode();
      if (BucketSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BucketSize);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (lowerBound_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LowerBound);
      }
      if (upperBound_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpperBound);
      }
      if (BucketSize != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(BucketSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (lowerBound_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LowerBound);
      }
      if (upperBound_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpperBound);
      }
      if (BucketSize != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(BucketSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lowerBound_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LowerBound);
      }
      if (upperBound_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpperBound);
      }
      if (BucketSize != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FixedSizeBucketingConfig other) {
      if (other == null) {
        return;
      }
      if (other.lowerBound_ != null) {
        if (lowerBound_ == null) {
          LowerBound = new global::Google.Cloud.Dlp.V2.Value();
        }
        LowerBound.MergeFrom(other.LowerBound);
      }
      if (other.upperBound_ != null) {
        if (upperBound_ == null) {
          UpperBound = new global::Google.Cloud.Dlp.V2.Value();
        }
        UpperBound.MergeFrom(other.UpperBound);
      }
      if (other.BucketSize != 0D) {
        BucketSize = other.BucketSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lowerBound_ == null) {
              LowerBound = new global::Google.Cloud.Dlp.V2.Value();
            }
            input.ReadMessage(LowerBound);
            break;
          }
          case 18: {
            if (upperBound_ == null) {
              UpperBound = new global::Google.Cloud.Dlp.V2.Value();
            }
            input.ReadMessage(UpperBound);
            break;
          }
          case 25: {
            BucketSize = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (lowerBound_ == null) {
              LowerBound = new global::Google.Cloud.Dlp.V2.Value();
            }
            input.ReadMessage(LowerBound);
            break;
          }
          case 18: {
            if (upperBound_ == null) {
              UpperBound = new global::Google.Cloud.Dlp.V2.Value();
            }
            input.ReadMessage(UpperBound);
            break;
          }
          case 25: {
            BucketSize = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Generalization function that buckets values based on ranges. The ranges and
  /// replacement values are dynamically provided by the user for custom behavior,
  /// such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH
  /// This can be used on
  /// data of type: number, long, string, timestamp.
  /// If the bound `Value` type differs from the type of data being transformed, we
  /// will first attempt converting the type of the data to be transformed to match
  /// the type of the bound before comparing.
  /// See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
  /// </summary>
  public sealed partial class BucketingConfig : pb::IMessage<BucketingConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BucketingConfig> _parser = new pb::MessageParser<BucketingConfig>(() => new BucketingConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BucketingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BucketingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BucketingConfig(BucketingConfig other) : this() {
      buckets_ = other.buckets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BucketingConfig Clone() {
      return new BucketingConfig(this);
    }

    /// <summary>Field number for the "buckets" field.</summary>
    public const int BucketsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.BucketingConfig.Types.Bucket> _repeated_buckets_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.BucketingConfig.Types.Bucket.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.BucketingConfig.Types.Bucket> buckets_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.BucketingConfig.Types.Bucket>();
    /// <summary>
    /// Set of buckets. Ranges must be non-overlapping.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.BucketingConfig.Types.Bucket> Buckets {
      get { return buckets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BucketingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BucketingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!buckets_.Equals(other.buckets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= buckets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      buckets_.WriteTo(output, _repeated_buckets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      buckets_.WriteTo(ref output, _repeated_buckets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += buckets_.CalculateSize(_repeated_buckets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BucketingConfig other) {
      if (other == null) {
        return;
      }
      buckets_.Add(other.buckets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buckets_.AddEntriesFrom(input, _repeated_buckets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            buckets_.AddEntriesFrom(ref input, _repeated_buckets_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BucketingConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Bucket is represented as a range, along with replacement values.
      /// </summary>
      public sealed partial class Bucket : pb::IMessage<Bucket>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Bucket> _parser = new pb::MessageParser<Bucket>(() => new Bucket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Bucket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.BucketingConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Bucket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Bucket(Bucket other) : this() {
          min_ = other.min_ != null ? other.min_.Clone() : null;
          max_ = other.max_ != null ? other.max_.Clone() : null;
          replacementValue_ = other.replacementValue_ != null ? other.replacementValue_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Bucket Clone() {
          return new Bucket(this);
        }

        /// <summary>Field number for the "min" field.</summary>
        public const int MinFieldNumber = 1;
        private global::Google.Cloud.Dlp.V2.Value min_;
        /// <summary>
        /// Lower bound of the range, inclusive. Type should be the same as max if
        /// used.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.Value Min {
          get { return min_; }
          set {
            min_ = value;
          }
        }

        /// <summary>Field number for the "max" field.</summary>
        public const int MaxFieldNumber = 2;
        private global::Google.Cloud.Dlp.V2.Value max_;
        /// <summary>
        /// Upper bound of the range, exclusive; type must match min.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.Value Max {
          get { return max_; }
          set {
            max_ = value;
          }
        }

        /// <summary>Field number for the "replacement_value" field.</summary>
        public const int ReplacementValueFieldNumber = 3;
        private global::Google.Cloud.Dlp.V2.Value replacementValue_;
        /// <summary>
        /// Required. Replacement value for this bucket.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.Value ReplacementValue {
          get { return replacementValue_; }
          set {
            replacementValue_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Bucket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Bucket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Min, other.Min)) return false;
          if (!object.Equals(Max, other.Max)) return false;
          if (!object.Equals(ReplacementValue, other.ReplacementValue)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (min_ != null) hash ^= Min.GetHashCode();
          if (max_ != null) hash ^= Max.GetHashCode();
          if (replacementValue_ != null) hash ^= ReplacementValue.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (min_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Min);
          }
          if (max_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Max);
          }
          if (replacementValue_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ReplacementValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (min_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Min);
          }
          if (max_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Max);
          }
          if (replacementValue_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ReplacementValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (min_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Min);
          }
          if (max_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Max);
          }
          if (replacementValue_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReplacementValue);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Bucket other) {
          if (other == null) {
            return;
          }
          if (other.min_ != null) {
            if (min_ == null) {
              Min = new global::Google.Cloud.Dlp.V2.Value();
            }
            Min.MergeFrom(other.Min);
          }
          if (other.max_ != null) {
            if (max_ == null) {
              Max = new global::Google.Cloud.Dlp.V2.Value();
            }
            Max.MergeFrom(other.Max);
          }
          if (other.replacementValue_ != null) {
            if (replacementValue_ == null) {
              ReplacementValue = new global::Google.Cloud.Dlp.V2.Value();
            }
            ReplacementValue.MergeFrom(other.ReplacementValue);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (min_ == null) {
                  Min = new global::Google.Cloud.Dlp.V2.Value();
                }
                input.ReadMessage(Min);
                break;
              }
              case 18: {
                if (max_ == null) {
                  Max = new global::Google.Cloud.Dlp.V2.Value();
                }
                input.ReadMessage(Max);
                break;
              }
              case 26: {
                if (replacementValue_ == null) {
                  ReplacementValue = new global::Google.Cloud.Dlp.V2.Value();
                }
                input.ReadMessage(ReplacementValue);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (min_ == null) {
                  Min = new global::Google.Cloud.Dlp.V2.Value();
                }
                input.ReadMessage(Min);
                break;
              }
              case 18: {
                if (max_ == null) {
                  Max = new global::Google.Cloud.Dlp.V2.Value();
                }
                input.ReadMessage(Max);
                break;
              }
              case 26: {
                if (replacementValue_ == null) {
                  ReplacementValue = new global::Google.Cloud.Dlp.V2.Value();
                }
                input.ReadMessage(ReplacementValue);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Replaces an identifier with a surrogate using Format Preserving Encryption
  /// (FPE) with the FFX mode of operation; however when used in the
  /// `ReidentifyContent` API method, it serves the opposite function by reversing
  /// the surrogate back into the original identifier. The identifier must be
  /// encoded as ASCII. For a given crypto key and context, the same identifier
  /// will be replaced with the same surrogate. Identifiers must be at least two
  /// characters long. In the case that the identifier is the empty string, it will
  /// be skipped. See https://cloud.google.com/dlp/docs/pseudonymization to learn
  /// more.
  ///
  /// Note: We recommend using  CryptoDeterministicConfig for all use cases which
  /// do not require preserving the input alphabet space and size, plus warrant
  /// referential integrity.
  /// </summary>
  public sealed partial class CryptoReplaceFfxFpeConfig : pb::IMessage<CryptoReplaceFfxFpeConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CryptoReplaceFfxFpeConfig> _parser = new pb::MessageParser<CryptoReplaceFfxFpeConfig>(() => new CryptoReplaceFfxFpeConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CryptoReplaceFfxFpeConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoReplaceFfxFpeConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoReplaceFfxFpeConfig(CryptoReplaceFfxFpeConfig other) : this() {
      cryptoKey_ = other.cryptoKey_ != null ? other.cryptoKey_.Clone() : null;
      context_ = other.context_ != null ? other.context_.Clone() : null;
      surrogateInfoType_ = other.surrogateInfoType_ != null ? other.surrogateInfoType_.Clone() : null;
      switch (other.AlphabetCase) {
        case AlphabetOneofCase.CommonAlphabet:
          CommonAlphabet = other.CommonAlphabet;
          break;
        case AlphabetOneofCase.CustomAlphabet:
          CustomAlphabet = other.CustomAlphabet;
          break;
        case AlphabetOneofCase.Radix:
          Radix = other.Radix;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoReplaceFfxFpeConfig Clone() {
      return new CryptoReplaceFfxFpeConfig(this);
    }

    /// <summary>Field number for the "crypto_key" field.</summary>
    public const int CryptoKeyFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.CryptoKey cryptoKey_;
    /// <summary>
    /// Required. The key used by the encryption algorithm.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CryptoKey CryptoKey {
      get { return cryptoKey_; }
      set {
        cryptoKey_ = value;
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.FieldId context_;
    /// <summary>
    /// The 'tweak', a context may be used for higher security since the same
    /// identifier in two different contexts won't be given the same surrogate. If
    /// the context is not set, a default tweak will be used.
    ///
    /// If the context is set but:
    ///
    /// 1. there is no record present when transforming a given value or
    /// 1. the field is not present when transforming a given value,
    ///
    /// a default tweak will be used.
    ///
    /// Note that case (1) is expected when an `InfoTypeTransformation` is
    /// applied to both structured and non-structured `ContentItem`s.
    /// Currently, the referenced field may be of value type integer or string.
    ///
    /// The tweak is constructed as a sequence of bytes in big endian byte order
    /// such that:
    ///
    /// - a 64 bit integer is encoded followed by a single byte of value 1
    /// - a string is encoded in UTF-8 format followed by a single byte of value 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.FieldId Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    /// <summary>Field number for the "common_alphabet" field.</summary>
    public const int CommonAlphabetFieldNumber = 4;
    /// <summary>
    /// Common alphabets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig.Types.FfxCommonNativeAlphabet CommonAlphabet {
      get { return alphabetCase_ == AlphabetOneofCase.CommonAlphabet ? (global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig.Types.FfxCommonNativeAlphabet) alphabet_ : global::Google.Cloud.Dlp.V2.CryptoReplaceFfxFpeConfig.Types.FfxCommonNativeAlphabet.Unspecified; }
      set {
        alphabet_ = value;
        alphabetCase_ = AlphabetOneofCase.CommonAlphabet;
      }
    }

    /// <summary>Field number for the "custom_alphabet" field.</summary>
    public const int CustomAlphabetFieldNumber = 5;
    /// <summary>
    /// This is supported by mapping these to the alphanumeric characters
    /// that the FFX mode natively supports. This happens before/after
    /// encryption/decryption.
    /// Each character listed must appear only once.
    /// Number of characters must be in the range [2, 95].
    /// This must be encoded as ASCII.
    /// The order of characters does not matter.
    /// The full list of allowed characters is:
    /// &lt;code>0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
    /// ~`!@#$%^&amp;*()_-+={[}]|\:;"'&lt;,>.?/&lt;/code>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomAlphabet {
      get { return alphabetCase_ == AlphabetOneofCase.CustomAlphabet ? (string) alphabet_ : ""; }
      set {
        alphabet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        alphabetCase_ = AlphabetOneofCase.CustomAlphabet;
      }
    }

    /// <summary>Field number for the "radix" field.</summary>
    public const int RadixFieldNumber = 6;
    /// <summary>
    /// The native way to select the alphabet. Must be in the range [2, 95].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Radix {
      get { return alphabetCase_ == AlphabetOneofCase.Radix ? (int) alphabet_ : 0; }
      set {
        alphabet_ = value;
        alphabetCase_ = AlphabetOneofCase.Radix;
      }
    }

    /// <summary>Field number for the "surrogate_info_type" field.</summary>
    public const int SurrogateInfoTypeFieldNumber = 8;
    private global::Google.Cloud.Dlp.V2.InfoType surrogateInfoType_;
    /// <summary>
    /// The custom infoType to annotate the surrogate with.
    /// This annotation will be applied to the surrogate by prefixing it with
    /// the name of the custom infoType followed by the number of
    /// characters comprising the surrogate. The following scheme defines the
    /// format: info_type_name(surrogate_character_count):surrogate
    ///
    /// For example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and
    /// the surrogate is 'abc', the full replacement value
    /// will be: 'MY_TOKEN_INFO_TYPE(3):abc'
    ///
    /// This annotation identifies the surrogate when inspecting content using the
    /// custom infoType
    /// [`SurrogateType`](https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype).
    /// This facilitates reversal of the surrogate when it occurs in free text.
    ///
    /// In order for inspection to work properly, the name of this infoType must
    /// not occur naturally anywhere in your data; otherwise, inspection may
    /// find a surrogate that does not correspond to an actual identifier.
    /// Therefore, choose your custom infoType name carefully after considering
    /// what your data looks like. One way to select a name that has a high chance
    /// of yielding reliable detection is to include one or more unicode characters
    /// that are highly improbable to exist in your data.
    /// For example, assuming your data is entered from a regular ASCII keyboard,
    /// the symbol with the hex code point 29DD might be used like so:
    /// ⧝MY_TOKEN_TYPE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InfoType SurrogateInfoType {
      get { return surrogateInfoType_; }
      set {
        surrogateInfoType_ = value;
      }
    }

    private object alphabet_;
    /// <summary>Enum of possible cases for the "alphabet" oneof.</summary>
    public enum AlphabetOneofCase {
      None = 0,
      CommonAlphabet = 4,
      CustomAlphabet = 5,
      Radix = 6,
    }
    private AlphabetOneofCase alphabetCase_ = AlphabetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlphabetOneofCase AlphabetCase {
      get { return alphabetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAlphabet() {
      alphabetCase_ = AlphabetOneofCase.None;
      alphabet_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CryptoReplaceFfxFpeConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CryptoReplaceFfxFpeConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CryptoKey, other.CryptoKey)) return false;
      if (!object.Equals(Context, other.Context)) return false;
      if (CommonAlphabet != other.CommonAlphabet) return false;
      if (CustomAlphabet != other.CustomAlphabet) return false;
      if (Radix != other.Radix) return false;
      if (!object.Equals(SurrogateInfoType, other.SurrogateInfoType)) return false;
      if (AlphabetCase != other.AlphabetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cryptoKey_ != null) hash ^= CryptoKey.GetHashCode();
      if (context_ != null) hash ^= Context.GetHashCode();
      if (alphabetCase_ == AlphabetOneofCase.CommonAlphabet) hash ^= CommonAlphabet.GetHashCode();
      if (alphabetCase_ == AlphabetOneofCase.CustomAlphabet) hash ^= CustomAlphabet.GetHashCode();
      if (alphabetCase_ == AlphabetOneofCase.Radix) hash ^= Radix.GetHashCode();
      if (surrogateInfoType_ != null) hash ^= SurrogateInfoType.GetHashCode();
      hash ^= (int) alphabetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cryptoKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CryptoKey);
      }
      if (context_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Context);
      }
      if (alphabetCase_ == AlphabetOneofCase.CommonAlphabet) {
        output.WriteRawTag(32);
        output.WriteEnum((int) CommonAlphabet);
      }
      if (alphabetCase_ == AlphabetOneofCase.CustomAlphabet) {
        output.WriteRawTag(42);
        output.WriteString(CustomAlphabet);
      }
      if (alphabetCase_ == AlphabetOneofCase.Radix) {
        output.WriteRawTag(48);
        output.WriteInt32(Radix);
      }
      if (surrogateInfoType_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SurrogateInfoType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cryptoKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CryptoKey);
      }
      if (context_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Context);
      }
      if (alphabetCase_ == AlphabetOneofCase.CommonAlphabet) {
        output.WriteRawTag(32);
        output.WriteEnum((int) CommonAlphabet);
      }
      if (alphabetCase_ == AlphabetOneofCase.CustomAlphabet) {
        output.WriteRawTag(42);
        output.WriteString(CustomAlphabet);
      }
      if (alphabetCase_ == AlphabetOneofCase.Radix) {
        output.WriteRawTag(48);
        output.WriteInt32(Radix);
      }
      if (surrogateInfoType_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SurrogateInfoType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cryptoKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CryptoKey);
      }
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      if (alphabetCase_ == AlphabetOneofCase.CommonAlphabet) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommonAlphabet);
      }
      if (alphabetCase_ == AlphabetOneofCase.CustomAlphabet) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomAlphabet);
      }
      if (alphabetCase_ == AlphabetOneofCase.Radix) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Radix);
      }
      if (surrogateInfoType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SurrogateInfoType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CryptoReplaceFfxFpeConfig other) {
      if (other == null) {
        return;
      }
      if (other.cryptoKey_ != null) {
        if (cryptoKey_ == null) {
          CryptoKey = new global::Google.Cloud.Dlp.V2.CryptoKey();
        }
        CryptoKey.MergeFrom(other.CryptoKey);
      }
      if (other.context_ != null) {
        if (context_ == null) {
          Context = new global::Google.Cloud.Dlp.V2.FieldId();
        }
        Context.MergeFrom(other.Context);
      }
      if (other.surrogateInfoType_ != null) {
        if (surrogateInfoType_ == null) {
          SurrogateInfoType = new global::Google.Cloud.Dlp.V2.InfoType();
        }
        SurrogateInfoType.MergeFrom(other.SurrogateInfoType);
      }
      switch (other.AlphabetCase) {
        case AlphabetOneofCase.CommonAlphabet:
          CommonAlphabet = other.CommonAlphabet;
          break;
        case AlphabetOneofCase.CustomAlphabet:
          CustomAlphabet = other.CustomAlphabet;
          break;
        case AlphabetOneofCase.Radix:
          Radix = other.Radix;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cryptoKey_ == null) {
              CryptoKey = new global::Google.Cloud.Dlp.V2.CryptoKey();
            }
            input.ReadMessage(CryptoKey);
            break;
          }
          case 18: {
            if (context_ == null) {
              Context = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Context);
            break;
          }
          case 32: {
            alphabet_ = input.ReadEnum();
            alphabetCase_ = AlphabetOneofCase.CommonAlphabet;
            break;
          }
          case 42: {
            CustomAlphabet = input.ReadString();
            break;
          }
          case 48: {
            Radix = input.ReadInt32();
            break;
          }
          case 66: {
            if (surrogateInfoType_ == null) {
              SurrogateInfoType = new global::Google.Cloud.Dlp.V2.InfoType();
            }
            input.ReadMessage(SurrogateInfoType);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cryptoKey_ == null) {
              CryptoKey = new global::Google.Cloud.Dlp.V2.CryptoKey();
            }
            input.ReadMessage(CryptoKey);
            break;
          }
          case 18: {
            if (context_ == null) {
              Context = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Context);
            break;
          }
          case 32: {
            alphabet_ = input.ReadEnum();
            alphabetCase_ = AlphabetOneofCase.CommonAlphabet;
            break;
          }
          case 42: {
            CustomAlphabet = input.ReadString();
            break;
          }
          case 48: {
            Radix = input.ReadInt32();
            break;
          }
          case 66: {
            if (surrogateInfoType_ == null) {
              SurrogateInfoType = new global::Google.Cloud.Dlp.V2.InfoType();
            }
            input.ReadMessage(SurrogateInfoType);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CryptoReplaceFfxFpeConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// These are commonly used subsets of the alphabet that the FFX mode
      /// natively supports. In the algorithm, the alphabet is selected using
      /// the "radix". Therefore each corresponds to particular radix.
      /// </summary>
      public enum FfxCommonNativeAlphabet {
        /// <summary>
        /// Unused.
        /// </summary>
        [pbr::OriginalName("FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// `[0-9]` (radix of 10)
        /// </summary>
        [pbr::OriginalName("NUMERIC")] Numeric = 1,
        /// <summary>
        /// `[0-9A-F]` (radix of 16)
        /// </summary>
        [pbr::OriginalName("HEXADECIMAL")] Hexadecimal = 2,
        /// <summary>
        /// `[0-9A-Z]` (radix of 36)
        /// </summary>
        [pbr::OriginalName("UPPER_CASE_ALPHA_NUMERIC")] UpperCaseAlphaNumeric = 3,
        /// <summary>
        /// `[0-9A-Za-z]` (radix of 62)
        /// </summary>
        [pbr::OriginalName("ALPHA_NUMERIC")] AlphaNumeric = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// This is a data encryption key (DEK) (as opposed to
  /// a key encryption key (KEK) stored by KMS).
  /// When using KMS to wrap/unwrap DEKs, be sure to set an appropriate
  /// IAM policy on the KMS CryptoKey (KEK) to ensure an attacker cannot
  /// unwrap the data crypto key.
  /// </summary>
  public sealed partial class CryptoKey : pb::IMessage<CryptoKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CryptoKey> _parser = new pb::MessageParser<CryptoKey>(() => new CryptoKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CryptoKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoKey(CryptoKey other) : this() {
      switch (other.SourceCase) {
        case SourceOneofCase.Transient:
          Transient = other.Transient.Clone();
          break;
        case SourceOneofCase.Unwrapped:
          Unwrapped = other.Unwrapped.Clone();
          break;
        case SourceOneofCase.KmsWrapped:
          KmsWrapped = other.KmsWrapped.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoKey Clone() {
      return new CryptoKey(this);
    }

    /// <summary>Field number for the "transient" field.</summary>
    public const int TransientFieldNumber = 1;
    /// <summary>
    /// Transient crypto key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.TransientCryptoKey Transient {
      get { return sourceCase_ == SourceOneofCase.Transient ? (global::Google.Cloud.Dlp.V2.TransientCryptoKey) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.Transient;
      }
    }

    /// <summary>Field number for the "unwrapped" field.</summary>
    public const int UnwrappedFieldNumber = 2;
    /// <summary>
    /// Unwrapped crypto key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.UnwrappedCryptoKey Unwrapped {
      get { return sourceCase_ == SourceOneofCase.Unwrapped ? (global::Google.Cloud.Dlp.V2.UnwrappedCryptoKey) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.Unwrapped;
      }
    }

    /// <summary>Field number for the "kms_wrapped" field.</summary>
    public const int KmsWrappedFieldNumber = 3;
    /// <summary>
    /// Kms wrapped key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.KmsWrappedCryptoKey KmsWrapped {
      get { return sourceCase_ == SourceOneofCase.KmsWrapped ? (global::Google.Cloud.Dlp.V2.KmsWrappedCryptoKey) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.KmsWrapped;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      Transient = 1,
      Unwrapped = 2,
      KmsWrapped = 3,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CryptoKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CryptoKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transient, other.Transient)) return false;
      if (!object.Equals(Unwrapped, other.Unwrapped)) return false;
      if (!object.Equals(KmsWrapped, other.KmsWrapped)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.Transient) hash ^= Transient.GetHashCode();
      if (sourceCase_ == SourceOneofCase.Unwrapped) hash ^= Unwrapped.GetHashCode();
      if (sourceCase_ == SourceOneofCase.KmsWrapped) hash ^= KmsWrapped.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sourceCase_ == SourceOneofCase.Transient) {
        output.WriteRawTag(10);
        output.WriteMessage(Transient);
      }
      if (sourceCase_ == SourceOneofCase.Unwrapped) {
        output.WriteRawTag(18);
        output.WriteMessage(Unwrapped);
      }
      if (sourceCase_ == SourceOneofCase.KmsWrapped) {
        output.WriteRawTag(26);
        output.WriteMessage(KmsWrapped);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sourceCase_ == SourceOneofCase.Transient) {
        output.WriteRawTag(10);
        output.WriteMessage(Transient);
      }
      if (sourceCase_ == SourceOneofCase.Unwrapped) {
        output.WriteRawTag(18);
        output.WriteMessage(Unwrapped);
      }
      if (sourceCase_ == SourceOneofCase.KmsWrapped) {
        output.WriteRawTag(26);
        output.WriteMessage(KmsWrapped);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.Transient) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transient);
      }
      if (sourceCase_ == SourceOneofCase.Unwrapped) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unwrapped);
      }
      if (sourceCase_ == SourceOneofCase.KmsWrapped) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KmsWrapped);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CryptoKey other) {
      if (other == null) {
        return;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.Transient:
          if (Transient == null) {
            Transient = new global::Google.Cloud.Dlp.V2.TransientCryptoKey();
          }
          Transient.MergeFrom(other.Transient);
          break;
        case SourceOneofCase.Unwrapped:
          if (Unwrapped == null) {
            Unwrapped = new global::Google.Cloud.Dlp.V2.UnwrappedCryptoKey();
          }
          Unwrapped.MergeFrom(other.Unwrapped);
          break;
        case SourceOneofCase.KmsWrapped:
          if (KmsWrapped == null) {
            KmsWrapped = new global::Google.Cloud.Dlp.V2.KmsWrappedCryptoKey();
          }
          KmsWrapped.MergeFrom(other.KmsWrapped);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.TransientCryptoKey subBuilder = new global::Google.Cloud.Dlp.V2.TransientCryptoKey();
            if (sourceCase_ == SourceOneofCase.Transient) {
              subBuilder.MergeFrom(Transient);
            }
            input.ReadMessage(subBuilder);
            Transient = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.UnwrappedCryptoKey subBuilder = new global::Google.Cloud.Dlp.V2.UnwrappedCryptoKey();
            if (sourceCase_ == SourceOneofCase.Unwrapped) {
              subBuilder.MergeFrom(Unwrapped);
            }
            input.ReadMessage(subBuilder);
            Unwrapped = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.KmsWrappedCryptoKey subBuilder = new global::Google.Cloud.Dlp.V2.KmsWrappedCryptoKey();
            if (sourceCase_ == SourceOneofCase.KmsWrapped) {
              subBuilder.MergeFrom(KmsWrapped);
            }
            input.ReadMessage(subBuilder);
            KmsWrapped = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.TransientCryptoKey subBuilder = new global::Google.Cloud.Dlp.V2.TransientCryptoKey();
            if (sourceCase_ == SourceOneofCase.Transient) {
              subBuilder.MergeFrom(Transient);
            }
            input.ReadMessage(subBuilder);
            Transient = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.UnwrappedCryptoKey subBuilder = new global::Google.Cloud.Dlp.V2.UnwrappedCryptoKey();
            if (sourceCase_ == SourceOneofCase.Unwrapped) {
              subBuilder.MergeFrom(Unwrapped);
            }
            input.ReadMessage(subBuilder);
            Unwrapped = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.KmsWrappedCryptoKey subBuilder = new global::Google.Cloud.Dlp.V2.KmsWrappedCryptoKey();
            if (sourceCase_ == SourceOneofCase.KmsWrapped) {
              subBuilder.MergeFrom(KmsWrapped);
            }
            input.ReadMessage(subBuilder);
            KmsWrapped = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Use this to have a random data crypto key generated.
  /// It will be discarded after the request finishes.
  /// </summary>
  public sealed partial class TransientCryptoKey : pb::IMessage<TransientCryptoKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransientCryptoKey> _parser = new pb::MessageParser<TransientCryptoKey>(() => new TransientCryptoKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransientCryptoKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransientCryptoKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransientCryptoKey(TransientCryptoKey other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransientCryptoKey Clone() {
      return new TransientCryptoKey(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Name of the key.
    /// This is an arbitrary string used to differentiate different keys.
    /// A unique key is generated per name: two separate `TransientCryptoKey`
    /// protos share the same generated key if their names are the same.
    /// When the data crypto key is generated, this name is not used in any way
    /// (repeating the api call will result in a different key being generated).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransientCryptoKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransientCryptoKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransientCryptoKey other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Using raw keys is prone to security risks due to accidentally
  /// leaking the key. Choose another type of key if possible.
  /// </summary>
  public sealed partial class UnwrappedCryptoKey : pb::IMessage<UnwrappedCryptoKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnwrappedCryptoKey> _parser = new pb::MessageParser<UnwrappedCryptoKey>(() => new UnwrappedCryptoKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnwrappedCryptoKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnwrappedCryptoKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnwrappedCryptoKey(UnwrappedCryptoKey other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnwrappedCryptoKey Clone() {
      return new UnwrappedCryptoKey(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private pb::ByteString key_ = pb::ByteString.Empty;
    /// <summary>
    /// Required. A 128/192/256 bit key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnwrappedCryptoKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnwrappedCryptoKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnwrappedCryptoKey other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Include to use an existing data crypto key wrapped by KMS.
  /// The wrapped key must be a 128/192/256 bit key.
  /// Authorization requires the following IAM permissions when sending a request
  /// to perform a crypto transformation using a kms-wrapped crypto key:
  /// dlp.kms.encrypt
  /// </summary>
  public sealed partial class KmsWrappedCryptoKey : pb::IMessage<KmsWrappedCryptoKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KmsWrappedCryptoKey> _parser = new pb::MessageParser<KmsWrappedCryptoKey>(() => new KmsWrappedCryptoKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KmsWrappedCryptoKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KmsWrappedCryptoKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KmsWrappedCryptoKey(KmsWrappedCryptoKey other) : this() {
      wrappedKey_ = other.wrappedKey_;
      cryptoKeyName_ = other.cryptoKeyName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KmsWrappedCryptoKey Clone() {
      return new KmsWrappedCryptoKey(this);
    }

    /// <summary>Field number for the "wrapped_key" field.</summary>
    public const int WrappedKeyFieldNumber = 1;
    private pb::ByteString wrappedKey_ = pb::ByteString.Empty;
    /// <summary>
    /// Required. The wrapped data crypto key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString WrappedKey {
      get { return wrappedKey_; }
      set {
        wrappedKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "crypto_key_name" field.</summary>
    public const int CryptoKeyNameFieldNumber = 2;
    private string cryptoKeyName_ = "";
    /// <summary>
    /// Required. The resource name of the KMS CryptoKey to use for unwrapping.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CryptoKeyName {
      get { return cryptoKeyName_; }
      set {
        cryptoKeyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KmsWrappedCryptoKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KmsWrappedCryptoKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WrappedKey != other.WrappedKey) return false;
      if (CryptoKeyName != other.CryptoKeyName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WrappedKey.Length != 0) hash ^= WrappedKey.GetHashCode();
      if (CryptoKeyName.Length != 0) hash ^= CryptoKeyName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WrappedKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(WrappedKey);
      }
      if (CryptoKeyName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CryptoKeyName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WrappedKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(WrappedKey);
      }
      if (CryptoKeyName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CryptoKeyName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WrappedKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(WrappedKey);
      }
      if (CryptoKeyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CryptoKeyName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KmsWrappedCryptoKey other) {
      if (other == null) {
        return;
      }
      if (other.WrappedKey.Length != 0) {
        WrappedKey = other.WrappedKey;
      }
      if (other.CryptoKeyName.Length != 0) {
        CryptoKeyName = other.CryptoKeyName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WrappedKey = input.ReadBytes();
            break;
          }
          case 18: {
            CryptoKeyName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WrappedKey = input.ReadBytes();
            break;
          }
          case 18: {
            CryptoKeyName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Shifts dates by random number of days, with option to be consistent for the
  /// same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting
  /// to learn more.
  /// </summary>
  public sealed partial class DateShiftConfig : pb::IMessage<DateShiftConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DateShiftConfig> _parser = new pb::MessageParser<DateShiftConfig>(() => new DateShiftConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DateShiftConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateShiftConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateShiftConfig(DateShiftConfig other) : this() {
      upperBoundDays_ = other.upperBoundDays_;
      lowerBoundDays_ = other.lowerBoundDays_;
      context_ = other.context_ != null ? other.context_.Clone() : null;
      switch (other.MethodCase) {
        case MethodOneofCase.CryptoKey:
          CryptoKey = other.CryptoKey.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateShiftConfig Clone() {
      return new DateShiftConfig(this);
    }

    /// <summary>Field number for the "upper_bound_days" field.</summary>
    public const int UpperBoundDaysFieldNumber = 1;
    private int upperBoundDays_;
    /// <summary>
    /// Required. Range of shift in days. Actual shift will be selected at random within this
    /// range (inclusive ends). Negative means shift to earlier in time. Must not
    /// be more than 365250 days (1000 years) each direction.
    ///
    /// For example, 3 means shift date to at most 3 days into the future.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UpperBoundDays {
      get { return upperBoundDays_; }
      set {
        upperBoundDays_ = value;
      }
    }

    /// <summary>Field number for the "lower_bound_days" field.</summary>
    public const int LowerBoundDaysFieldNumber = 2;
    private int lowerBoundDays_;
    /// <summary>
    /// Required. For example, -5 means shift date to at most 5 days back in the past.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LowerBoundDays {
      get { return lowerBoundDays_; }
      set {
        lowerBoundDays_ = value;
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.FieldId context_;
    /// <summary>
    /// Points to the field that contains the context, for example, an entity id.
    /// If set, must also set cryptoKey. If set, shift will be consistent for the
    /// given context.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.FieldId Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    /// <summary>Field number for the "crypto_key" field.</summary>
    public const int CryptoKeyFieldNumber = 4;
    /// <summary>
    /// Causes the shift to be computed based on this key and the context. This
    /// results in the same shift for the same context and crypto_key. If
    /// set, must also set context. Can only be applied to table items.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CryptoKey CryptoKey {
      get { return methodCase_ == MethodOneofCase.CryptoKey ? (global::Google.Cloud.Dlp.V2.CryptoKey) method_ : null; }
      set {
        method_ = value;
        methodCase_ = value == null ? MethodOneofCase.None : MethodOneofCase.CryptoKey;
      }
    }

    private object method_;
    /// <summary>Enum of possible cases for the "method" oneof.</summary>
    public enum MethodOneofCase {
      None = 0,
      CryptoKey = 4,
    }
    private MethodOneofCase methodCase_ = MethodOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodOneofCase MethodCase {
      get { return methodCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMethod() {
      methodCase_ = MethodOneofCase.None;
      method_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DateShiftConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DateShiftConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UpperBoundDays != other.UpperBoundDays) return false;
      if (LowerBoundDays != other.LowerBoundDays) return false;
      if (!object.Equals(Context, other.Context)) return false;
      if (!object.Equals(CryptoKey, other.CryptoKey)) return false;
      if (MethodCase != other.MethodCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UpperBoundDays != 0) hash ^= UpperBoundDays.GetHashCode();
      if (LowerBoundDays != 0) hash ^= LowerBoundDays.GetHashCode();
      if (context_ != null) hash ^= Context.GetHashCode();
      if (methodCase_ == MethodOneofCase.CryptoKey) hash ^= CryptoKey.GetHashCode();
      hash ^= (int) methodCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UpperBoundDays != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UpperBoundDays);
      }
      if (LowerBoundDays != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LowerBoundDays);
      }
      if (context_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Context);
      }
      if (methodCase_ == MethodOneofCase.CryptoKey) {
        output.WriteRawTag(34);
        output.WriteMessage(CryptoKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UpperBoundDays != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UpperBoundDays);
      }
      if (LowerBoundDays != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LowerBoundDays);
      }
      if (context_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Context);
      }
      if (methodCase_ == MethodOneofCase.CryptoKey) {
        output.WriteRawTag(34);
        output.WriteMessage(CryptoKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UpperBoundDays != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpperBoundDays);
      }
      if (LowerBoundDays != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LowerBoundDays);
      }
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      if (methodCase_ == MethodOneofCase.CryptoKey) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CryptoKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DateShiftConfig other) {
      if (other == null) {
        return;
      }
      if (other.UpperBoundDays != 0) {
        UpperBoundDays = other.UpperBoundDays;
      }
      if (other.LowerBoundDays != 0) {
        LowerBoundDays = other.LowerBoundDays;
      }
      if (other.context_ != null) {
        if (context_ == null) {
          Context = new global::Google.Cloud.Dlp.V2.FieldId();
        }
        Context.MergeFrom(other.Context);
      }
      switch (other.MethodCase) {
        case MethodOneofCase.CryptoKey:
          if (CryptoKey == null) {
            CryptoKey = new global::Google.Cloud.Dlp.V2.CryptoKey();
          }
          CryptoKey.MergeFrom(other.CryptoKey);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UpperBoundDays = input.ReadInt32();
            break;
          }
          case 16: {
            LowerBoundDays = input.ReadInt32();
            break;
          }
          case 26: {
            if (context_ == null) {
              Context = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Context);
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.CryptoKey subBuilder = new global::Google.Cloud.Dlp.V2.CryptoKey();
            if (methodCase_ == MethodOneofCase.CryptoKey) {
              subBuilder.MergeFrom(CryptoKey);
            }
            input.ReadMessage(subBuilder);
            CryptoKey = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UpperBoundDays = input.ReadInt32();
            break;
          }
          case 16: {
            LowerBoundDays = input.ReadInt32();
            break;
          }
          case 26: {
            if (context_ == null) {
              Context = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Context);
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.CryptoKey subBuilder = new global::Google.Cloud.Dlp.V2.CryptoKey();
            if (methodCase_ == MethodOneofCase.CryptoKey) {
              subBuilder.MergeFrom(CryptoKey);
            }
            input.ReadMessage(subBuilder);
            CryptoKey = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A type of transformation that will scan unstructured text and
  /// apply various `PrimitiveTransformation`s to each finding, where the
  /// transformation is applied to only values that were identified as a specific
  /// info_type.
  /// </summary>
  public sealed partial class InfoTypeTransformations : pb::IMessage<InfoTypeTransformations>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfoTypeTransformations> _parser = new pb::MessageParser<InfoTypeTransformations>(() => new InfoTypeTransformations());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InfoTypeTransformations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoTypeTransformations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoTypeTransformations(InfoTypeTransformations other) : this() {
      transformations_ = other.transformations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoTypeTransformations Clone() {
      return new InfoTypeTransformations(this);
    }

    /// <summary>Field number for the "transformations" field.</summary>
    public const int TransformationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.InfoTypeTransformations.Types.InfoTypeTransformation> _repeated_transformations_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.InfoTypeTransformations.Types.InfoTypeTransformation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoTypeTransformations.Types.InfoTypeTransformation> transformations_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoTypeTransformations.Types.InfoTypeTransformation>();
    /// <summary>
    /// Required. Transformation for each infoType. Cannot specify more than one
    /// for a given infoType.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoTypeTransformations.Types.InfoTypeTransformation> Transformations {
      get { return transformations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InfoTypeTransformations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InfoTypeTransformations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transformations_.Equals(other.transformations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transformations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      transformations_.WriteTo(output, _repeated_transformations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      transformations_.WriteTo(ref output, _repeated_transformations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transformations_.CalculateSize(_repeated_transformations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InfoTypeTransformations other) {
      if (other == null) {
        return;
      }
      transformations_.Add(other.transformations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transformations_.AddEntriesFrom(input, _repeated_transformations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            transformations_.AddEntriesFrom(ref input, _repeated_transformations_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the InfoTypeTransformations message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A transformation to apply to text that is identified as a specific
      /// info_type.
      /// </summary>
      public sealed partial class InfoTypeTransformation : pb::IMessage<InfoTypeTransformation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InfoTypeTransformation> _parser = new pb::MessageParser<InfoTypeTransformation>(() => new InfoTypeTransformation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InfoTypeTransformation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.InfoTypeTransformations.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InfoTypeTransformation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InfoTypeTransformation(InfoTypeTransformation other) : this() {
          infoTypes_ = other.infoTypes_.Clone();
          primitiveTransformation_ = other.primitiveTransformation_ != null ? other.primitiveTransformation_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InfoTypeTransformation Clone() {
          return new InfoTypeTransformation(this);
        }

        /// <summary>Field number for the "info_types" field.</summary>
        public const int InfoTypesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.InfoType> _repeated_infoTypes_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.InfoType.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoType> infoTypes_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoType>();
        /// <summary>
        /// InfoTypes to apply the transformation to. An empty list will cause
        /// this transformation to apply to all findings that correspond to
        /// infoTypes that were requested in `InspectConfig`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InfoType> InfoTypes {
          get { return infoTypes_; }
        }

        /// <summary>Field number for the "primitive_transformation" field.</summary>
        public const int PrimitiveTransformationFieldNumber = 2;
        private global::Google.Cloud.Dlp.V2.PrimitiveTransformation primitiveTransformation_;
        /// <summary>
        /// Required. Primitive transformation to apply to the infoType.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.PrimitiveTransformation PrimitiveTransformation {
          get { return primitiveTransformation_; }
          set {
            primitiveTransformation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InfoTypeTransformation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InfoTypeTransformation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!infoTypes_.Equals(other.infoTypes_)) return false;
          if (!object.Equals(PrimitiveTransformation, other.PrimitiveTransformation)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= infoTypes_.GetHashCode();
          if (primitiveTransformation_ != null) hash ^= PrimitiveTransformation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          infoTypes_.WriteTo(output, _repeated_infoTypes_codec);
          if (primitiveTransformation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PrimitiveTransformation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          infoTypes_.WriteTo(ref output, _repeated_infoTypes_codec);
          if (primitiveTransformation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PrimitiveTransformation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += infoTypes_.CalculateSize(_repeated_infoTypes_codec);
          if (primitiveTransformation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimitiveTransformation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InfoTypeTransformation other) {
          if (other == null) {
            return;
          }
          infoTypes_.Add(other.infoTypes_);
          if (other.primitiveTransformation_ != null) {
            if (primitiveTransformation_ == null) {
              PrimitiveTransformation = new global::Google.Cloud.Dlp.V2.PrimitiveTransformation();
            }
            PrimitiveTransformation.MergeFrom(other.PrimitiveTransformation);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                infoTypes_.AddEntriesFrom(input, _repeated_infoTypes_codec);
                break;
              }
              case 18: {
                if (primitiveTransformation_ == null) {
                  PrimitiveTransformation = new global::Google.Cloud.Dlp.V2.PrimitiveTransformation();
                }
                input.ReadMessage(PrimitiveTransformation);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                infoTypes_.AddEntriesFrom(ref input, _repeated_infoTypes_codec);
                break;
              }
              case 18: {
                if (primitiveTransformation_ == null) {
                  PrimitiveTransformation = new global::Google.Cloud.Dlp.V2.PrimitiveTransformation();
                }
                input.ReadMessage(PrimitiveTransformation);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// The transformation to apply to the field.
  /// </summary>
  public sealed partial class FieldTransformation : pb::IMessage<FieldTransformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FieldTransformation> _parser = new pb::MessageParser<FieldTransformation>(() => new FieldTransformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FieldTransformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldTransformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldTransformation(FieldTransformation other) : this() {
      fields_ = other.fields_.Clone();
      condition_ = other.condition_ != null ? other.condition_.Clone() : null;
      switch (other.TransformationCase) {
        case TransformationOneofCase.PrimitiveTransformation:
          PrimitiveTransformation = other.PrimitiveTransformation.Clone();
          break;
        case TransformationOneofCase.InfoTypeTransformations:
          InfoTypeTransformations = other.InfoTypeTransformations.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldTransformation Clone() {
      return new FieldTransformation(this);
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.FieldId> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.FieldId.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> fields_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId>();
    /// <summary>
    /// Required. Input field(s) to apply the transformation to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> Fields {
      get { return fields_; }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.RecordCondition condition_;
    /// <summary>
    /// Only apply the transformation if the condition evaluates to true for the
    /// given `RecordCondition`. The conditions are allowed to reference fields
    /// that are not used in the actual transformation.
    ///
    /// Example Use Cases:
    ///
    /// - Apply a different bucket transformation to an age column if the zip code
    /// column for the same record is within a specific range.
    /// - Redact a field if the date of birth field is greater than 85.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.RecordCondition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "primitive_transformation" field.</summary>
    public const int PrimitiveTransformationFieldNumber = 4;
    /// <summary>
    /// Apply the transformation to the entire field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.PrimitiveTransformation PrimitiveTransformation {
      get { return transformationCase_ == TransformationOneofCase.PrimitiveTransformation ? (global::Google.Cloud.Dlp.V2.PrimitiveTransformation) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.PrimitiveTransformation;
      }
    }

    /// <summary>Field number for the "info_type_transformations" field.</summary>
    public const int InfoTypeTransformationsFieldNumber = 5;
    /// <summary>
    /// Treat the contents of the field as free text, and selectively
    /// transform content that matches an `InfoType`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InfoTypeTransformations InfoTypeTransformations {
      get { return transformationCase_ == TransformationOneofCase.InfoTypeTransformations ? (global::Google.Cloud.Dlp.V2.InfoTypeTransformations) transformation_ : null; }
      set {
        transformation_ = value;
        transformationCase_ = value == null ? TransformationOneofCase.None : TransformationOneofCase.InfoTypeTransformations;
      }
    }

    private object transformation_;
    /// <summary>Enum of possible cases for the "transformation" oneof.</summary>
    public enum TransformationOneofCase {
      None = 0,
      PrimitiveTransformation = 4,
      InfoTypeTransformations = 5,
    }
    private TransformationOneofCase transformationCase_ = TransformationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformationOneofCase TransformationCase {
      get { return transformationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransformation() {
      transformationCase_ = TransformationOneofCase.None;
      transformation_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FieldTransformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FieldTransformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fields_.Equals(other.fields_)) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      if (!object.Equals(PrimitiveTransformation, other.PrimitiveTransformation)) return false;
      if (!object.Equals(InfoTypeTransformations, other.InfoTypeTransformations)) return false;
      if (TransformationCase != other.TransformationCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fields_.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.PrimitiveTransformation) hash ^= PrimitiveTransformation.GetHashCode();
      if (transformationCase_ == TransformationOneofCase.InfoTypeTransformations) hash ^= InfoTypeTransformations.GetHashCode();
      hash ^= (int) transformationCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fields_.WriteTo(output, _repeated_fields_codec);
      if (condition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Condition);
      }
      if (transformationCase_ == TransformationOneofCase.PrimitiveTransformation) {
        output.WriteRawTag(34);
        output.WriteMessage(PrimitiveTransformation);
      }
      if (transformationCase_ == TransformationOneofCase.InfoTypeTransformations) {
        output.WriteRawTag(42);
        output.WriteMessage(InfoTypeTransformations);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fields_.WriteTo(ref output, _repeated_fields_codec);
      if (condition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Condition);
      }
      if (transformationCase_ == TransformationOneofCase.PrimitiveTransformation) {
        output.WriteRawTag(34);
        output.WriteMessage(PrimitiveTransformation);
      }
      if (transformationCase_ == TransformationOneofCase.InfoTypeTransformations) {
        output.WriteRawTag(42);
        output.WriteMessage(InfoTypeTransformations);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      if (transformationCase_ == TransformationOneofCase.PrimitiveTransformation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimitiveTransformation);
      }
      if (transformationCase_ == TransformationOneofCase.InfoTypeTransformations) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoTypeTransformations);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FieldTransformation other) {
      if (other == null) {
        return;
      }
      fields_.Add(other.fields_);
      if (other.condition_ != null) {
        if (condition_ == null) {
          Condition = new global::Google.Cloud.Dlp.V2.RecordCondition();
        }
        Condition.MergeFrom(other.Condition);
      }
      switch (other.TransformationCase) {
        case TransformationOneofCase.PrimitiveTransformation:
          if (PrimitiveTransformation == null) {
            PrimitiveTransformation = new global::Google.Cloud.Dlp.V2.PrimitiveTransformation();
          }
          PrimitiveTransformation.MergeFrom(other.PrimitiveTransformation);
          break;
        case TransformationOneofCase.InfoTypeTransformations:
          if (InfoTypeTransformations == null) {
            InfoTypeTransformations = new global::Google.Cloud.Dlp.V2.InfoTypeTransformations();
          }
          InfoTypeTransformations.MergeFrom(other.InfoTypeTransformations);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
          case 26: {
            if (condition_ == null) {
              Condition = new global::Google.Cloud.Dlp.V2.RecordCondition();
            }
            input.ReadMessage(Condition);
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.PrimitiveTransformation subBuilder = new global::Google.Cloud.Dlp.V2.PrimitiveTransformation();
            if (transformationCase_ == TransformationOneofCase.PrimitiveTransformation) {
              subBuilder.MergeFrom(PrimitiveTransformation);
            }
            input.ReadMessage(subBuilder);
            PrimitiveTransformation = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.InfoTypeTransformations subBuilder = new global::Google.Cloud.Dlp.V2.InfoTypeTransformations();
            if (transformationCase_ == TransformationOneofCase.InfoTypeTransformations) {
              subBuilder.MergeFrom(InfoTypeTransformations);
            }
            input.ReadMessage(subBuilder);
            InfoTypeTransformations = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fields_.AddEntriesFrom(ref input, _repeated_fields_codec);
            break;
          }
          case 26: {
            if (condition_ == null) {
              Condition = new global::Google.Cloud.Dlp.V2.RecordCondition();
            }
            input.ReadMessage(Condition);
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.PrimitiveTransformation subBuilder = new global::Google.Cloud.Dlp.V2.PrimitiveTransformation();
            if (transformationCase_ == TransformationOneofCase.PrimitiveTransformation) {
              subBuilder.MergeFrom(PrimitiveTransformation);
            }
            input.ReadMessage(subBuilder);
            PrimitiveTransformation = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.InfoTypeTransformations subBuilder = new global::Google.Cloud.Dlp.V2.InfoTypeTransformations();
            if (transformationCase_ == TransformationOneofCase.InfoTypeTransformations) {
              subBuilder.MergeFrom(InfoTypeTransformations);
            }
            input.ReadMessage(subBuilder);
            InfoTypeTransformations = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A type of transformation that is applied over structured data such as a
  /// table.
  /// </summary>
  public sealed partial class RecordTransformations : pb::IMessage<RecordTransformations>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecordTransformations> _parser = new pb::MessageParser<RecordTransformations>(() => new RecordTransformations());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecordTransformations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordTransformations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordTransformations(RecordTransformations other) : this() {
      fieldTransformations_ = other.fieldTransformations_.Clone();
      recordSuppressions_ = other.recordSuppressions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordTransformations Clone() {
      return new RecordTransformations(this);
    }

    /// <summary>Field number for the "field_transformations" field.</summary>
    public const int FieldTransformationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.FieldTransformation> _repeated_fieldTransformations_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.FieldTransformation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldTransformation> fieldTransformations_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldTransformation>();
    /// <summary>
    /// Transform the record by applying various field transformations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldTransformation> FieldTransformations {
      get { return fieldTransformations_; }
    }

    /// <summary>Field number for the "record_suppressions" field.</summary>
    public const int RecordSuppressionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.RecordSuppression> _repeated_recordSuppressions_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Dlp.V2.RecordSuppression.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.RecordSuppression> recordSuppressions_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.RecordSuppression>();
    /// <summary>
    /// Configuration defining which records get suppressed entirely. Records that
    /// match any suppression rule are omitted from the output.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.RecordSuppression> RecordSuppressions {
      get { return recordSuppressions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecordTransformations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecordTransformations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fieldTransformations_.Equals(other.fieldTransformations_)) return false;
      if(!recordSuppressions_.Equals(other.recordSuppressions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fieldTransformations_.GetHashCode();
      hash ^= recordSuppressions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fieldTransformations_.WriteTo(output, _repeated_fieldTransformations_codec);
      recordSuppressions_.WriteTo(output, _repeated_recordSuppressions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fieldTransformations_.WriteTo(ref output, _repeated_fieldTransformations_codec);
      recordSuppressions_.WriteTo(ref output, _repeated_recordSuppressions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fieldTransformations_.CalculateSize(_repeated_fieldTransformations_codec);
      size += recordSuppressions_.CalculateSize(_repeated_recordSuppressions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecordTransformations other) {
      if (other == null) {
        return;
      }
      fieldTransformations_.Add(other.fieldTransformations_);
      recordSuppressions_.Add(other.recordSuppressions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fieldTransformations_.AddEntriesFrom(input, _repeated_fieldTransformations_codec);
            break;
          }
          case 18: {
            recordSuppressions_.AddEntriesFrom(input, _repeated_recordSuppressions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fieldTransformations_.AddEntriesFrom(ref input, _repeated_fieldTransformations_codec);
            break;
          }
          case 18: {
            recordSuppressions_.AddEntriesFrom(ref input, _repeated_recordSuppressions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Configuration to suppress records whose suppression conditions evaluate to
  /// true.
  /// </summary>
  public sealed partial class RecordSuppression : pb::IMessage<RecordSuppression>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecordSuppression> _parser = new pb::MessageParser<RecordSuppression>(() => new RecordSuppression());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecordSuppression> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordSuppression() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordSuppression(RecordSuppression other) : this() {
      condition_ = other.condition_ != null ? other.condition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordSuppression Clone() {
      return new RecordSuppression(this);
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.RecordCondition condition_;
    /// <summary>
    /// A condition that when it evaluates to true will result in the record being
    /// evaluated to be suppressed from the transformed content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.RecordCondition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecordSuppression);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecordSuppression other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Condition, other.Condition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (condition_ != null) hash ^= Condition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (condition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Condition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (condition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Condition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecordSuppression other) {
      if (other == null) {
        return;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          Condition = new global::Google.Cloud.Dlp.V2.RecordCondition();
        }
        Condition.MergeFrom(other.Condition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (condition_ == null) {
              Condition = new global::Google.Cloud.Dlp.V2.RecordCondition();
            }
            input.ReadMessage(Condition);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (condition_ == null) {
              Condition = new global::Google.Cloud.Dlp.V2.RecordCondition();
            }
            input.ReadMessage(Condition);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A condition for determining whether a transformation should be applied to
  /// a field.
  /// </summary>
  public sealed partial class RecordCondition : pb::IMessage<RecordCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecordCondition> _parser = new pb::MessageParser<RecordCondition>(() => new RecordCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecordCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordCondition(RecordCondition other) : this() {
      expressions_ = other.expressions_ != null ? other.expressions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordCondition Clone() {
      return new RecordCondition(this);
    }

    /// <summary>Field number for the "expressions" field.</summary>
    public const int ExpressionsFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions expressions_;
    /// <summary>
    /// An expression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions Expressions {
      get { return expressions_; }
      set {
        expressions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecordCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecordCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Expressions, other.Expressions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (expressions_ != null) hash ^= Expressions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (expressions_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Expressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (expressions_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Expressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (expressions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expressions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecordCondition other) {
      if (other == null) {
        return;
      }
      if (other.expressions_ != null) {
        if (expressions_ == null) {
          Expressions = new global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions();
        }
        Expressions.MergeFrom(other.Expressions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (expressions_ == null) {
              Expressions = new global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions();
            }
            input.ReadMessage(Expressions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            if (expressions_ == null) {
              Expressions = new global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions();
            }
            input.ReadMessage(Expressions);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RecordCondition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The field type of `value` and `field` do not need to match to be
      /// considered equal, but not all comparisons are possible.
      /// EQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types,
      /// but all other comparisons are invalid with incompatible types.
      /// A `value` of type:
      ///
      /// - `string` can be compared against all other types
      /// - `boolean` can only be compared against other booleans
      /// - `integer` can be compared against doubles or a string if the string value
      /// can be parsed as an integer.
      /// - `double` can be compared against integers or a string if the string can
      /// be parsed as a double.
      /// - `Timestamp` can be compared against strings in RFC 3339 date string
      /// format.
      /// - `TimeOfDay` can be compared against timestamps and strings in the format
      /// of 'HH:mm:ss'.
      ///
      /// If we fail to compare do to type mismatch, a warning will be given and
      /// the condition will evaluate to false.
      /// </summary>
      public sealed partial class Condition : pb::IMessage<Condition>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Condition> _parser = new pb::MessageParser<Condition>(() => new Condition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Condition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.RecordCondition.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Condition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Condition(Condition other) : this() {
          field_ = other.field_ != null ? other.field_.Clone() : null;
          operator_ = other.operator_;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Condition Clone() {
          return new Condition(this);
        }

        /// <summary>Field number for the "field" field.</summary>
        public const int FieldFieldNumber = 1;
        private global::Google.Cloud.Dlp.V2.FieldId field_;
        /// <summary>
        /// Required. Field within the record this condition is evaluated against.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.FieldId Field {
          get { return field_; }
          set {
            field_ = value;
          }
        }

        /// <summary>Field number for the "operator" field.</summary>
        public const int OperatorFieldNumber = 3;
        private global::Google.Cloud.Dlp.V2.RelationalOperator operator_ = global::Google.Cloud.Dlp.V2.RelationalOperator.Unspecified;
        /// <summary>
        /// Required. Operator used to compare the field or infoType to the value.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.RelationalOperator Operator {
          get { return operator_; }
          set {
            operator_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 4;
        private global::Google.Cloud.Dlp.V2.Value value_;
        /// <summary>
        /// Value to compare against. [Mandatory, except for `EXISTS` tests.]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.Value Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Condition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Condition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Field, other.Field)) return false;
          if (Operator != other.Operator) return false;
          if (!object.Equals(Value, other.Value)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (field_ != null) hash ^= Field.GetHashCode();
          if (Operator != global::Google.Cloud.Dlp.V2.RelationalOperator.Unspecified) hash ^= Operator.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (field_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Field);
          }
          if (Operator != global::Google.Cloud.Dlp.V2.RelationalOperator.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Operator);
          }
          if (value_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (field_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Field);
          }
          if (Operator != global::Google.Cloud.Dlp.V2.RelationalOperator.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Operator);
          }
          if (value_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (field_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
          }
          if (Operator != global::Google.Cloud.Dlp.V2.RelationalOperator.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operator);
          }
          if (value_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Condition other) {
          if (other == null) {
            return;
          }
          if (other.field_ != null) {
            if (field_ == null) {
              Field = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            Field.MergeFrom(other.Field);
          }
          if (other.Operator != global::Google.Cloud.Dlp.V2.RelationalOperator.Unspecified) {
            Operator = other.Operator;
          }
          if (other.value_ != null) {
            if (value_ == null) {
              Value = new global::Google.Cloud.Dlp.V2.Value();
            }
            Value.MergeFrom(other.Value);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (field_ == null) {
                  Field = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                input.ReadMessage(Field);
                break;
              }
              case 24: {
                Operator = (global::Google.Cloud.Dlp.V2.RelationalOperator) input.ReadEnum();
                break;
              }
              case 34: {
                if (value_ == null) {
                  Value = new global::Google.Cloud.Dlp.V2.Value();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (field_ == null) {
                  Field = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                input.ReadMessage(Field);
                break;
              }
              case 24: {
                Operator = (global::Google.Cloud.Dlp.V2.RelationalOperator) input.ReadEnum();
                break;
              }
              case 34: {
                if (value_ == null) {
                  Value = new global::Google.Cloud.Dlp.V2.Value();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A collection of conditions.
      /// </summary>
      public sealed partial class Conditions : pb::IMessage<Conditions>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Conditions> _parser = new pb::MessageParser<Conditions>(() => new Conditions());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Conditions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.RecordCondition.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Conditions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Conditions(Conditions other) : this() {
          conditions_ = other.conditions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Conditions Clone() {
          return new Conditions(this);
        }

        /// <summary>Field number for the "conditions" field.</summary>
        public const int Conditions_FieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.RecordCondition.Types.Condition> _repeated_conditions_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.RecordCondition.Types.Condition.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.RecordCondition.Types.Condition> conditions_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.RecordCondition.Types.Condition>();
        /// <summary>
        /// A collection of conditions.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.RecordCondition.Types.Condition> Conditions_ {
          get { return conditions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Conditions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Conditions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!conditions_.Equals(other.conditions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= conditions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          conditions_.WriteTo(output, _repeated_conditions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          conditions_.WriteTo(ref output, _repeated_conditions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += conditions_.CalculateSize(_repeated_conditions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Conditions other) {
          if (other == null) {
            return;
          }
          conditions_.Add(other.conditions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// An expression, consisting or an operator and conditions.
      /// </summary>
      public sealed partial class Expressions : pb::IMessage<Expressions>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Expressions> _parser = new pb::MessageParser<Expressions>(() => new Expressions());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Expressions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.RecordCondition.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Expressions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Expressions(Expressions other) : this() {
          logicalOperator_ = other.logicalOperator_;
          switch (other.TypeCase) {
            case TypeOneofCase.Conditions:
              Conditions = other.Conditions.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Expressions Clone() {
          return new Expressions(this);
        }

        /// <summary>Field number for the "logical_operator" field.</summary>
        public const int LogicalOperatorFieldNumber = 1;
        private global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions.Types.LogicalOperator logicalOperator_ = global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions.Types.LogicalOperator.Unspecified;
        /// <summary>
        /// The operator to apply to the result of conditions. Default and currently
        /// only supported value is `AND`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions.Types.LogicalOperator LogicalOperator {
          get { return logicalOperator_; }
          set {
            logicalOperator_ = value;
          }
        }

        /// <summary>Field number for the "conditions" field.</summary>
        public const int ConditionsFieldNumber = 3;
        /// <summary>
        /// Conditions to apply to the expression.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.RecordCondition.Types.Conditions Conditions {
          get { return typeCase_ == TypeOneofCase.Conditions ? (global::Google.Cloud.Dlp.V2.RecordCondition.Types.Conditions) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Conditions;
          }
        }

        private object type_;
        /// <summary>Enum of possible cases for the "type" oneof.</summary>
        public enum TypeOneofCase {
          None = 0,
          Conditions = 3,
        }
        private TypeOneofCase typeCase_ = TypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TypeOneofCase TypeCase {
          get { return typeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearType() {
          typeCase_ = TypeOneofCase.None;
          type_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Expressions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Expressions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (LogicalOperator != other.LogicalOperator) return false;
          if (!object.Equals(Conditions, other.Conditions)) return false;
          if (TypeCase != other.TypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (LogicalOperator != global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions.Types.LogicalOperator.Unspecified) hash ^= LogicalOperator.GetHashCode();
          if (typeCase_ == TypeOneofCase.Conditions) hash ^= Conditions.GetHashCode();
          hash ^= (int) typeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (LogicalOperator != global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions.Types.LogicalOperator.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) LogicalOperator);
          }
          if (typeCase_ == TypeOneofCase.Conditions) {
            output.WriteRawTag(26);
            output.WriteMessage(Conditions);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (LogicalOperator != global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions.Types.LogicalOperator.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) LogicalOperator);
          }
          if (typeCase_ == TypeOneofCase.Conditions) {
            output.WriteRawTag(26);
            output.WriteMessage(Conditions);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (LogicalOperator != global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions.Types.LogicalOperator.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LogicalOperator);
          }
          if (typeCase_ == TypeOneofCase.Conditions) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Conditions);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Expressions other) {
          if (other == null) {
            return;
          }
          if (other.LogicalOperator != global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions.Types.LogicalOperator.Unspecified) {
            LogicalOperator = other.LogicalOperator;
          }
          switch (other.TypeCase) {
            case TypeOneofCase.Conditions:
              if (Conditions == null) {
                Conditions = new global::Google.Cloud.Dlp.V2.RecordCondition.Types.Conditions();
              }
              Conditions.MergeFrom(other.Conditions);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                LogicalOperator = (global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions.Types.LogicalOperator) input.ReadEnum();
                break;
              }
              case 26: {
                global::Google.Cloud.Dlp.V2.RecordCondition.Types.Conditions subBuilder = new global::Google.Cloud.Dlp.V2.RecordCondition.Types.Conditions();
                if (typeCase_ == TypeOneofCase.Conditions) {
                  subBuilder.MergeFrom(Conditions);
                }
                input.ReadMessage(subBuilder);
                Conditions = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                LogicalOperator = (global::Google.Cloud.Dlp.V2.RecordCondition.Types.Expressions.Types.LogicalOperator) input.ReadEnum();
                break;
              }
              case 26: {
                global::Google.Cloud.Dlp.V2.RecordCondition.Types.Conditions subBuilder = new global::Google.Cloud.Dlp.V2.RecordCondition.Types.Conditions();
                if (typeCase_ == TypeOneofCase.Conditions) {
                  subBuilder.MergeFrom(Conditions);
                }
                input.ReadMessage(subBuilder);
                Conditions = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Expressions message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Logical operators for conditional checks.
          /// </summary>
          public enum LogicalOperator {
            /// <summary>
            /// Unused
            /// </summary>
            [pbr::OriginalName("LOGICAL_OPERATOR_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// Conditional AND
            /// </summary>
            [pbr::OriginalName("AND")] And = 1,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Overview of the modifications that occurred.
  /// </summary>
  public sealed partial class TransformationOverview : pb::IMessage<TransformationOverview>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransformationOverview> _parser = new pb::MessageParser<TransformationOverview>(() => new TransformationOverview());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransformationOverview> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformationOverview() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformationOverview(TransformationOverview other) : this() {
      transformedBytes_ = other.transformedBytes_;
      transformationSummaries_ = other.transformationSummaries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformationOverview Clone() {
      return new TransformationOverview(this);
    }

    /// <summary>Field number for the "transformed_bytes" field.</summary>
    public const int TransformedBytesFieldNumber = 2;
    private long transformedBytes_;
    /// <summary>
    /// Total size in bytes that were transformed in some way.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransformedBytes {
      get { return transformedBytes_; }
      set {
        transformedBytes_ = value;
      }
    }

    /// <summary>Field number for the "transformation_summaries" field.</summary>
    public const int TransformationSummariesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.TransformationSummary> _repeated_transformationSummaries_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Dlp.V2.TransformationSummary.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.TransformationSummary> transformationSummaries_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.TransformationSummary>();
    /// <summary>
    /// Transformations applied to the dataset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.TransformationSummary> TransformationSummaries {
      get { return transformationSummaries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransformationOverview);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransformationOverview other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransformedBytes != other.TransformedBytes) return false;
      if(!transformationSummaries_.Equals(other.transformationSummaries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransformedBytes != 0L) hash ^= TransformedBytes.GetHashCode();
      hash ^= transformationSummaries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TransformedBytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TransformedBytes);
      }
      transformationSummaries_.WriteTo(output, _repeated_transformationSummaries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TransformedBytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TransformedBytes);
      }
      transformationSummaries_.WriteTo(ref output, _repeated_transformationSummaries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransformedBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransformedBytes);
      }
      size += transformationSummaries_.CalculateSize(_repeated_transformationSummaries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransformationOverview other) {
      if (other == null) {
        return;
      }
      if (other.TransformedBytes != 0L) {
        TransformedBytes = other.TransformedBytes;
      }
      transformationSummaries_.Add(other.transformationSummaries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            TransformedBytes = input.ReadInt64();
            break;
          }
          case 26: {
            transformationSummaries_.AddEntriesFrom(input, _repeated_transformationSummaries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            TransformedBytes = input.ReadInt64();
            break;
          }
          case 26: {
            transformationSummaries_.AddEntriesFrom(ref input, _repeated_transformationSummaries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Summary of a single transformation.
  /// Only one of 'transformation', 'field_transformation', or 'record_suppress'
  /// will be set.
  /// </summary>
  public sealed partial class TransformationSummary : pb::IMessage<TransformationSummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransformationSummary> _parser = new pb::MessageParser<TransformationSummary>(() => new TransformationSummary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransformationSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformationSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformationSummary(TransformationSummary other) : this() {
      infoType_ = other.infoType_ != null ? other.infoType_.Clone() : null;
      field_ = other.field_ != null ? other.field_.Clone() : null;
      transformation_ = other.transformation_ != null ? other.transformation_.Clone() : null;
      fieldTransformations_ = other.fieldTransformations_.Clone();
      recordSuppress_ = other.recordSuppress_ != null ? other.recordSuppress_.Clone() : null;
      results_ = other.results_.Clone();
      transformedBytes_ = other.transformedBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformationSummary Clone() {
      return new TransformationSummary(this);
    }

    /// <summary>Field number for the "info_type" field.</summary>
    public const int InfoTypeFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.InfoType infoType_;
    /// <summary>
    /// Set if the transformation was limited to a specific InfoType.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InfoType InfoType {
      get { return infoType_; }
      set {
        infoType_ = value;
      }
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.FieldId field_;
    /// <summary>
    /// Set if the transformation was limited to a specific FieldId.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.FieldId Field {
      get { return field_; }
      set {
        field_ = value;
      }
    }

    /// <summary>Field number for the "transformation" field.</summary>
    public const int TransformationFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.PrimitiveTransformation transformation_;
    /// <summary>
    /// The specific transformation these stats apply to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.PrimitiveTransformation Transformation {
      get { return transformation_; }
      set {
        transformation_ = value;
      }
    }

    /// <summary>Field number for the "field_transformations" field.</summary>
    public const int FieldTransformationsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.FieldTransformation> _repeated_fieldTransformations_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Dlp.V2.FieldTransformation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldTransformation> fieldTransformations_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldTransformation>();
    /// <summary>
    /// The field transformation that was applied.
    /// If multiple field transformations are requested for a single field,
    /// this list will contain all of them; otherwise, only one is supplied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldTransformation> FieldTransformations {
      get { return fieldTransformations_; }
    }

    /// <summary>Field number for the "record_suppress" field.</summary>
    public const int RecordSuppressFieldNumber = 6;
    private global::Google.Cloud.Dlp.V2.RecordSuppression recordSuppress_;
    /// <summary>
    /// The specific suppression option these stats apply to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.RecordSuppression RecordSuppress {
      get { return recordSuppress_; }
      set {
        recordSuppress_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.TransformationSummary.Types.SummaryResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Dlp.V2.TransformationSummary.Types.SummaryResult.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.TransformationSummary.Types.SummaryResult> results_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.TransformationSummary.Types.SummaryResult>();
    /// <summary>
    /// Collection of all transformations that took place or had an error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.TransformationSummary.Types.SummaryResult> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "transformed_bytes" field.</summary>
    public const int TransformedBytesFieldNumber = 7;
    private long transformedBytes_;
    /// <summary>
    /// Total size in bytes that were transformed in some way.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransformedBytes {
      get { return transformedBytes_; }
      set {
        transformedBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransformationSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransformationSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InfoType, other.InfoType)) return false;
      if (!object.Equals(Field, other.Field)) return false;
      if (!object.Equals(Transformation, other.Transformation)) return false;
      if(!fieldTransformations_.Equals(other.fieldTransformations_)) return false;
      if (!object.Equals(RecordSuppress, other.RecordSuppress)) return false;
      if(!results_.Equals(other.results_)) return false;
      if (TransformedBytes != other.TransformedBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (infoType_ != null) hash ^= InfoType.GetHashCode();
      if (field_ != null) hash ^= Field.GetHashCode();
      if (transformation_ != null) hash ^= Transformation.GetHashCode();
      hash ^= fieldTransformations_.GetHashCode();
      if (recordSuppress_ != null) hash ^= RecordSuppress.GetHashCode();
      hash ^= results_.GetHashCode();
      if (TransformedBytes != 0L) hash ^= TransformedBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (infoType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InfoType);
      }
      if (field_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Field);
      }
      if (transformation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Transformation);
      }
      results_.WriteTo(output, _repeated_results_codec);
      fieldTransformations_.WriteTo(output, _repeated_fieldTransformations_codec);
      if (recordSuppress_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RecordSuppress);
      }
      if (TransformedBytes != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TransformedBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (infoType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InfoType);
      }
      if (field_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Field);
      }
      if (transformation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Transformation);
      }
      results_.WriteTo(ref output, _repeated_results_codec);
      fieldTransformations_.WriteTo(ref output, _repeated_fieldTransformations_codec);
      if (recordSuppress_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RecordSuppress);
      }
      if (TransformedBytes != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TransformedBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (infoType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoType);
      }
      if (field_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
      }
      if (transformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transformation);
      }
      size += fieldTransformations_.CalculateSize(_repeated_fieldTransformations_codec);
      if (recordSuppress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecordSuppress);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      if (TransformedBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransformedBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransformationSummary other) {
      if (other == null) {
        return;
      }
      if (other.infoType_ != null) {
        if (infoType_ == null) {
          InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
        }
        InfoType.MergeFrom(other.InfoType);
      }
      if (other.field_ != null) {
        if (field_ == null) {
          Field = new global::Google.Cloud.Dlp.V2.FieldId();
        }
        Field.MergeFrom(other.Field);
      }
      if (other.transformation_ != null) {
        if (transformation_ == null) {
          Transformation = new global::Google.Cloud.Dlp.V2.PrimitiveTransformation();
        }
        Transformation.MergeFrom(other.Transformation);
      }
      fieldTransformations_.Add(other.fieldTransformations_);
      if (other.recordSuppress_ != null) {
        if (recordSuppress_ == null) {
          RecordSuppress = new global::Google.Cloud.Dlp.V2.RecordSuppression();
        }
        RecordSuppress.MergeFrom(other.RecordSuppress);
      }
      results_.Add(other.results_);
      if (other.TransformedBytes != 0L) {
        TransformedBytes = other.TransformedBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (infoType_ == null) {
              InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
            }
            input.ReadMessage(InfoType);
            break;
          }
          case 18: {
            if (field_ == null) {
              Field = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Field);
            break;
          }
          case 26: {
            if (transformation_ == null) {
              Transformation = new global::Google.Cloud.Dlp.V2.PrimitiveTransformation();
            }
            input.ReadMessage(Transformation);
            break;
          }
          case 34: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 42: {
            fieldTransformations_.AddEntriesFrom(input, _repeated_fieldTransformations_codec);
            break;
          }
          case 50: {
            if (recordSuppress_ == null) {
              RecordSuppress = new global::Google.Cloud.Dlp.V2.RecordSuppression();
            }
            input.ReadMessage(RecordSuppress);
            break;
          }
          case 56: {
            TransformedBytes = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (infoType_ == null) {
              InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
            }
            input.ReadMessage(InfoType);
            break;
          }
          case 18: {
            if (field_ == null) {
              Field = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Field);
            break;
          }
          case 26: {
            if (transformation_ == null) {
              Transformation = new global::Google.Cloud.Dlp.V2.PrimitiveTransformation();
            }
            input.ReadMessage(Transformation);
            break;
          }
          case 34: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 42: {
            fieldTransformations_.AddEntriesFrom(ref input, _repeated_fieldTransformations_codec);
            break;
          }
          case 50: {
            if (recordSuppress_ == null) {
              RecordSuppress = new global::Google.Cloud.Dlp.V2.RecordSuppression();
            }
            input.ReadMessage(RecordSuppress);
            break;
          }
          case 56: {
            TransformedBytes = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TransformationSummary message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible outcomes of transformations.
      /// </summary>
      public enum TransformationResultCode {
        /// <summary>
        /// Unused
        /// </summary>
        [pbr::OriginalName("TRANSFORMATION_RESULT_CODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Transformation completed without an error.
        /// </summary>
        [pbr::OriginalName("SUCCESS")] Success = 1,
        /// <summary>
        /// Transformation had an error.
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 2,
      }

      /// <summary>
      /// A collection that informs the user the number of times a particular
      /// `TransformationResultCode` and error details occurred.
      /// </summary>
      public sealed partial class SummaryResult : pb::IMessage<SummaryResult>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SummaryResult> _parser = new pb::MessageParser<SummaryResult>(() => new SummaryResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SummaryResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.TransformationSummary.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SummaryResult() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SummaryResult(SummaryResult other) : this() {
          count_ = other.count_;
          code_ = other.code_;
          details_ = other.details_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SummaryResult Clone() {
          return new SummaryResult(this);
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 1;
        private long count_;
        /// <summary>
        /// Number of transformations counted by this result.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 2;
        private global::Google.Cloud.Dlp.V2.TransformationSummary.Types.TransformationResultCode code_ = global::Google.Cloud.Dlp.V2.TransformationSummary.Types.TransformationResultCode.Unspecified;
        /// <summary>
        /// Outcome of the transformation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.TransformationSummary.Types.TransformationResultCode Code {
          get { return code_; }
          set {
            code_ = value;
          }
        }

        /// <summary>Field number for the "details" field.</summary>
        public const int DetailsFieldNumber = 3;
        private string details_ = "";
        /// <summary>
        /// A place for warnings or errors to show up if a transformation didn't
        /// work as expected.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Details {
          get { return details_; }
          set {
            details_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SummaryResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SummaryResult other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Count != other.Count) return false;
          if (Code != other.Code) return false;
          if (Details != other.Details) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Count != 0L) hash ^= Count.GetHashCode();
          if (Code != global::Google.Cloud.Dlp.V2.TransformationSummary.Types.TransformationResultCode.Unspecified) hash ^= Code.GetHashCode();
          if (Details.Length != 0) hash ^= Details.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Count != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Count);
          }
          if (Code != global::Google.Cloud.Dlp.V2.TransformationSummary.Types.TransformationResultCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Code);
          }
          if (Details.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Details);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Count != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Count);
          }
          if (Code != global::Google.Cloud.Dlp.V2.TransformationSummary.Types.TransformationResultCode.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Code);
          }
          if (Details.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Details);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Count != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
          }
          if (Code != global::Google.Cloud.Dlp.V2.TransformationSummary.Types.TransformationResultCode.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
          }
          if (Details.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Details);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SummaryResult other) {
          if (other == null) {
            return;
          }
          if (other.Count != 0L) {
            Count = other.Count;
          }
          if (other.Code != global::Google.Cloud.Dlp.V2.TransformationSummary.Types.TransformationResultCode.Unspecified) {
            Code = other.Code;
          }
          if (other.Details.Length != 0) {
            Details = other.Details;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Count = input.ReadInt64();
                break;
              }
              case 16: {
                Code = (global::Google.Cloud.Dlp.V2.TransformationSummary.Types.TransformationResultCode) input.ReadEnum();
                break;
              }
              case 26: {
                Details = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Count = input.ReadInt64();
                break;
              }
              case 16: {
                Code = (global::Google.Cloud.Dlp.V2.TransformationSummary.Types.TransformationResultCode) input.ReadEnum();
                break;
              }
              case 26: {
                Details = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Schedule for triggeredJobs.
  /// </summary>
  public sealed partial class Schedule : pb::IMessage<Schedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schedule> _parser = new pb::MessageParser<Schedule>(() => new Schedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Schedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule(Schedule other) : this() {
      switch (other.OptionCase) {
        case OptionOneofCase.RecurrencePeriodDuration:
          RecurrencePeriodDuration = other.RecurrencePeriodDuration.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule Clone() {
      return new Schedule(this);
    }

    /// <summary>Field number for the "recurrence_period_duration" field.</summary>
    public const int RecurrencePeriodDurationFieldNumber = 1;
    /// <summary>
    /// With this option a job is started a regular periodic basis. For
    /// example: every day (86400 seconds).
    ///
    /// A scheduled start time will be skipped if the previous
    /// execution has not ended when its scheduled time occurs.
    ///
    /// This value must be set to a time duration greater than or equal
    /// to 1 day and can be no longer than 60 days.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration RecurrencePeriodDuration {
      get { return optionCase_ == OptionOneofCase.RecurrencePeriodDuration ? (global::Google.Protobuf.WellKnownTypes.Duration) option_ : null; }
      set {
        option_ = value;
        optionCase_ = value == null ? OptionOneofCase.None : OptionOneofCase.RecurrencePeriodDuration;
      }
    }

    private object option_;
    /// <summary>Enum of possible cases for the "option" oneof.</summary>
    public enum OptionOneofCase {
      None = 0,
      RecurrencePeriodDuration = 1,
    }
    private OptionOneofCase optionCase_ = OptionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptionOneofCase OptionCase {
      get { return optionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOption() {
      optionCase_ = OptionOneofCase.None;
      option_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Schedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Schedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RecurrencePeriodDuration, other.RecurrencePeriodDuration)) return false;
      if (OptionCase != other.OptionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (optionCase_ == OptionOneofCase.RecurrencePeriodDuration) hash ^= RecurrencePeriodDuration.GetHashCode();
      hash ^= (int) optionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (optionCase_ == OptionOneofCase.RecurrencePeriodDuration) {
        output.WriteRawTag(10);
        output.WriteMessage(RecurrencePeriodDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (optionCase_ == OptionOneofCase.RecurrencePeriodDuration) {
        output.WriteRawTag(10);
        output.WriteMessage(RecurrencePeriodDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (optionCase_ == OptionOneofCase.RecurrencePeriodDuration) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecurrencePeriodDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Schedule other) {
      if (other == null) {
        return;
      }
      switch (other.OptionCase) {
        case OptionOneofCase.RecurrencePeriodDuration:
          if (RecurrencePeriodDuration == null) {
            RecurrencePeriodDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
          }
          RecurrencePeriodDuration.MergeFrom(other.RecurrencePeriodDuration);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
            if (optionCase_ == OptionOneofCase.RecurrencePeriodDuration) {
              subBuilder.MergeFrom(RecurrencePeriodDuration);
            }
            input.ReadMessage(subBuilder);
            RecurrencePeriodDuration = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
            if (optionCase_ == OptionOneofCase.RecurrencePeriodDuration) {
              subBuilder.MergeFrom(RecurrencePeriodDuration);
            }
            input.ReadMessage(subBuilder);
            RecurrencePeriodDuration = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Job trigger option for hybrid jobs. Jobs must be manually created
  /// and finished.
  /// </summary>
  public sealed partial class Manual : pb::IMessage<Manual>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Manual> _parser = new pb::MessageParser<Manual>(() => new Manual());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Manual> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Manual() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Manual(Manual other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Manual Clone() {
      return new Manual(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Manual);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Manual other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Manual other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The inspectTemplate contains a configuration (set of types of sensitive data
  /// to be detected) to be used anywhere you otherwise would normally specify
  /// InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates
  /// to learn more.
  /// </summary>
  public sealed partial class InspectTemplate : pb::IMessage<InspectTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InspectTemplate> _parser = new pb::MessageParser<InspectTemplate>(() => new InspectTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InspectTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectTemplate(InspectTemplate other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      description_ = other.description_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      inspectConfig_ = other.inspectConfig_ != null ? other.inspectConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectTemplate Clone() {
      return new InspectTemplate(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The template name.
    ///
    /// The template will have one of the following formats:
    /// `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR
    /// `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// Display name (max 256 chars).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Short description (max 256 chars).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The creation timestamp of an inspectTemplate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The last update timestamp of an inspectTemplate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "inspect_config" field.</summary>
    public const int InspectConfigFieldNumber = 6;
    private global::Google.Cloud.Dlp.V2.InspectConfig inspectConfig_;
    /// <summary>
    /// The core content of the template. Configuration of the scanning process.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectConfig InspectConfig {
      get { return inspectConfig_; }
      set {
        inspectConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InspectTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InspectTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(InspectConfig, other.InspectConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (inspectConfig_ != null) hash ^= InspectConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateTime);
      }
      if (inspectConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(InspectConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateTime);
      }
      if (inspectConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(InspectConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (inspectConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InspectConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InspectTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.inspectConfig_ != null) {
        if (inspectConfig_ == null) {
          InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
        }
        InspectConfig.MergeFrom(other.InspectConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 50: {
            if (inspectConfig_ == null) {
              InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
            }
            input.ReadMessage(InspectConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 50: {
            if (inspectConfig_ == null) {
              InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
            }
            input.ReadMessage(InspectConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DeidentifyTemplates contains instructions on how to de-identify content.
  /// See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
  /// </summary>
  public sealed partial class DeidentifyTemplate : pb::IMessage<DeidentifyTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeidentifyTemplate> _parser = new pb::MessageParser<DeidentifyTemplate>(() => new DeidentifyTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeidentifyTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeidentifyTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeidentifyTemplate(DeidentifyTemplate other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      description_ = other.description_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      deidentifyConfig_ = other.deidentifyConfig_ != null ? other.deidentifyConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeidentifyTemplate Clone() {
      return new DeidentifyTemplate(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The template name.
    ///
    /// The template will have one of the following formats:
    /// `projects/PROJECT_ID/deidentifyTemplates/TEMPLATE_ID` OR
    /// `organizations/ORGANIZATION_ID/deidentifyTemplates/TEMPLATE_ID`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// Display name (max 256 chars).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Short description (max 256 chars).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The creation timestamp of an inspectTemplate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The last update timestamp of an inspectTemplate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "deidentify_config" field.</summary>
    public const int DeidentifyConfigFieldNumber = 6;
    private global::Google.Cloud.Dlp.V2.DeidentifyConfig deidentifyConfig_;
    /// <summary>
    /// ///////////// // The core content of the template  // ///////////////
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DeidentifyConfig DeidentifyConfig {
      get { return deidentifyConfig_; }
      set {
        deidentifyConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeidentifyTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeidentifyTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(DeidentifyConfig, other.DeidentifyConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (deidentifyConfig_ != null) hash ^= DeidentifyConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateTime);
      }
      if (deidentifyConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DeidentifyConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateTime);
      }
      if (deidentifyConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DeidentifyConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (deidentifyConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeidentifyConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeidentifyTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.deidentifyConfig_ != null) {
        if (deidentifyConfig_ == null) {
          DeidentifyConfig = new global::Google.Cloud.Dlp.V2.DeidentifyConfig();
        }
        DeidentifyConfig.MergeFrom(other.DeidentifyConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 50: {
            if (deidentifyConfig_ == null) {
              DeidentifyConfig = new global::Google.Cloud.Dlp.V2.DeidentifyConfig();
            }
            input.ReadMessage(DeidentifyConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 50: {
            if (deidentifyConfig_ == null) {
              DeidentifyConfig = new global::Google.Cloud.Dlp.V2.DeidentifyConfig();
            }
            input.ReadMessage(DeidentifyConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Details information about an error encountered during job execution or
  /// the results of an unsuccessful activation of the JobTrigger.
  /// </summary>
  public sealed partial class Error : pb::IMessage<Error>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error(Error other) : this() {
      details_ = other.details_ != null ? other.details_.Clone() : null;
      timestamps_ = other.timestamps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 1;
    private global::Google.Rpc.Status details_;
    /// <summary>
    /// Detailed error codes and messages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    /// <summary>Field number for the "timestamps" field.</summary>
    public const int TimestampsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Timestamp> _repeated_timestamps_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Protobuf.WellKnownTypes.Timestamp.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> timestamps_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp>();
    /// <summary>
    /// The times the error occurred.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> Timestamps {
      get { return timestamps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Details, other.Details)) return false;
      if(!timestamps_.Equals(other.timestamps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (details_ != null) hash ^= Details.GetHashCode();
      hash ^= timestamps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (details_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Details);
      }
      timestamps_.WriteTo(output, _repeated_timestamps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (details_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Details);
      }
      timestamps_.WriteTo(ref output, _repeated_timestamps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      size += timestamps_.CalculateSize(_repeated_timestamps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.details_ != null) {
        if (details_ == null) {
          Details = new global::Google.Rpc.Status();
        }
        Details.MergeFrom(other.Details);
      }
      timestamps_.Add(other.timestamps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (details_ == null) {
              Details = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Details);
            break;
          }
          case 18: {
            timestamps_.AddEntriesFrom(input, _repeated_timestamps_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (details_ == null) {
              Details = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Details);
            break;
          }
          case 18: {
            timestamps_.AddEntriesFrom(ref input, _repeated_timestamps_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains a configuration to make dlp api calls on a repeating basis.
  /// See https://cloud.google.com/dlp/docs/concepts-job-triggers to learn more.
  /// </summary>
  public sealed partial class JobTrigger : pb::IMessage<JobTrigger>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JobTrigger> _parser = new pb::MessageParser<JobTrigger>(() => new JobTrigger());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JobTrigger> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobTrigger() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobTrigger(JobTrigger other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      description_ = other.description_;
      triggers_ = other.triggers_.Clone();
      errors_ = other.errors_.Clone();
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      lastRunTime_ = other.lastRunTime_ != null ? other.lastRunTime_.Clone() : null;
      status_ = other.status_;
      switch (other.JobCase) {
        case JobOneofCase.InspectJob:
          InspectJob = other.InspectJob.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobTrigger Clone() {
      return new JobTrigger(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Unique resource name for the triggeredJob, assigned by the service when the
    /// triggeredJob is created, for example
    /// `projects/dlp-test-project/jobTriggers/53234423`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// Display name (max 100 chars)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// User provided description (max 256 chars)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inspect_job" field.</summary>
    public const int InspectJobFieldNumber = 4;
    /// <summary>
    /// For inspect jobs, a snapshot of the configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectJobConfig InspectJob {
      get { return jobCase_ == JobOneofCase.InspectJob ? (global::Google.Cloud.Dlp.V2.InspectJobConfig) job_ : null; }
      set {
        job_ = value;
        jobCase_ = value == null ? JobOneofCase.None : JobOneofCase.InspectJob;
      }
    }

    /// <summary>Field number for the "triggers" field.</summary>
    public const int TriggersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.JobTrigger.Types.Trigger> _repeated_triggers_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Dlp.V2.JobTrigger.Types.Trigger.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.JobTrigger.Types.Trigger> triggers_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.JobTrigger.Types.Trigger>();
    /// <summary>
    /// A list of triggers which will be OR'ed together. Only one in the list
    /// needs to trigger for a job to be started. The list may contain only
    /// a single Schedule trigger and must have at least one object.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.JobTrigger.Types.Trigger> Triggers {
      get { return triggers_; }
    }

    /// <summary>Field number for the "errors" field.</summary>
    public const int ErrorsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Error> _repeated_errors_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Cloud.Dlp.V2.Error.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Error> errors_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Error>();
    /// <summary>
    /// Output only. A stream of errors encountered when the trigger was activated. Repeated
    /// errors may result in the JobTrigger automatically being paused.
    /// Will return the last 100 errors. Whenever the JobTrigger is modified
    /// this list will be cleared.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Error> Errors {
      get { return errors_; }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The creation timestamp of a triggeredJob.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The last update timestamp of a triggeredJob.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "last_run_time" field.</summary>
    public const int LastRunTimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastRunTime_;
    /// <summary>
    /// Output only. The timestamp of the last time this trigger executed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastRunTime {
      get { return lastRunTime_; }
      set {
        lastRunTime_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 10;
    private global::Google.Cloud.Dlp.V2.JobTrigger.Types.Status status_ = global::Google.Cloud.Dlp.V2.JobTrigger.Types.Status.Unspecified;
    /// <summary>
    /// Required. A status for this trigger.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.JobTrigger.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    private object job_;
    /// <summary>Enum of possible cases for the "job" oneof.</summary>
    public enum JobOneofCase {
      None = 0,
      InspectJob = 4,
    }
    private JobOneofCase jobCase_ = JobOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobOneofCase JobCase {
      get { return jobCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJob() {
      jobCase_ = JobOneofCase.None;
      job_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JobTrigger);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JobTrigger other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(InspectJob, other.InspectJob)) return false;
      if(!triggers_.Equals(other.triggers_)) return false;
      if(!errors_.Equals(other.errors_)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(LastRunTime, other.LastRunTime)) return false;
      if (Status != other.Status) return false;
      if (JobCase != other.JobCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (jobCase_ == JobOneofCase.InspectJob) hash ^= InspectJob.GetHashCode();
      hash ^= triggers_.GetHashCode();
      hash ^= errors_.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (lastRunTime_ != null) hash ^= LastRunTime.GetHashCode();
      if (Status != global::Google.Cloud.Dlp.V2.JobTrigger.Types.Status.Unspecified) hash ^= Status.GetHashCode();
      hash ^= (int) jobCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (jobCase_ == JobOneofCase.InspectJob) {
        output.WriteRawTag(34);
        output.WriteMessage(InspectJob);
      }
      triggers_.WriteTo(output, _repeated_triggers_codec);
      errors_.WriteTo(output, _repeated_errors_codec);
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(UpdateTime);
      }
      if (lastRunTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LastRunTime);
      }
      if (Status != global::Google.Cloud.Dlp.V2.JobTrigger.Types.Status.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (jobCase_ == JobOneofCase.InspectJob) {
        output.WriteRawTag(34);
        output.WriteMessage(InspectJob);
      }
      triggers_.WriteTo(ref output, _repeated_triggers_codec);
      errors_.WriteTo(ref output, _repeated_errors_codec);
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(UpdateTime);
      }
      if (lastRunTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LastRunTime);
      }
      if (Status != global::Google.Cloud.Dlp.V2.JobTrigger.Types.Status.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (jobCase_ == JobOneofCase.InspectJob) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InspectJob);
      }
      size += triggers_.CalculateSize(_repeated_triggers_codec);
      size += errors_.CalculateSize(_repeated_errors_codec);
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (lastRunTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastRunTime);
      }
      if (Status != global::Google.Cloud.Dlp.V2.JobTrigger.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JobTrigger other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      triggers_.Add(other.triggers_);
      errors_.Add(other.errors_);
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.lastRunTime_ != null) {
        if (lastRunTime_ == null) {
          LastRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastRunTime.MergeFrom(other.LastRunTime);
      }
      if (other.Status != global::Google.Cloud.Dlp.V2.JobTrigger.Types.Status.Unspecified) {
        Status = other.Status;
      }
      switch (other.JobCase) {
        case JobOneofCase.InspectJob:
          if (InspectJob == null) {
            InspectJob = new global::Google.Cloud.Dlp.V2.InspectJobConfig();
          }
          InspectJob.MergeFrom(other.InspectJob);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.InspectJobConfig subBuilder = new global::Google.Cloud.Dlp.V2.InspectJobConfig();
            if (jobCase_ == JobOneofCase.InspectJob) {
              subBuilder.MergeFrom(InspectJob);
            }
            input.ReadMessage(subBuilder);
            InspectJob = subBuilder;
            break;
          }
          case 42: {
            triggers_.AddEntriesFrom(input, _repeated_triggers_codec);
            break;
          }
          case 50: {
            errors_.AddEntriesFrom(input, _repeated_errors_codec);
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 74: {
            if (lastRunTime_ == null) {
              LastRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastRunTime);
            break;
          }
          case 80: {
            Status = (global::Google.Cloud.Dlp.V2.JobTrigger.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.InspectJobConfig subBuilder = new global::Google.Cloud.Dlp.V2.InspectJobConfig();
            if (jobCase_ == JobOneofCase.InspectJob) {
              subBuilder.MergeFrom(InspectJob);
            }
            input.ReadMessage(subBuilder);
            InspectJob = subBuilder;
            break;
          }
          case 42: {
            triggers_.AddEntriesFrom(ref input, _repeated_triggers_codec);
            break;
          }
          case 50: {
            errors_.AddEntriesFrom(ref input, _repeated_errors_codec);
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 74: {
            if (lastRunTime_ == null) {
              LastRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastRunTime);
            break;
          }
          case 80: {
            Status = (global::Google.Cloud.Dlp.V2.JobTrigger.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the JobTrigger message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Whether the trigger is currently active. If PAUSED or CANCELLED, no jobs
      /// will be created with this configuration. The service may automatically
      /// pause triggers experiencing frequent errors. To restart a job, set the
      /// status to HEALTHY after correcting user errors.
      /// </summary>
      public enum Status {
        /// <summary>
        /// Unused.
        /// </summary>
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Trigger is healthy.
        /// </summary>
        [pbr::OriginalName("HEALTHY")] Healthy = 1,
        /// <summary>
        /// Trigger is temporarily paused.
        /// </summary>
        [pbr::OriginalName("PAUSED")] Paused = 2,
        /// <summary>
        /// Trigger is cancelled and can not be resumed.
        /// </summary>
        [pbr::OriginalName("CANCELLED")] Cancelled = 3,
      }

      /// <summary>
      /// What event needs to occur for a new job to be started.
      /// </summary>
      public sealed partial class Trigger : pb::IMessage<Trigger>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Trigger> _parser = new pb::MessageParser<Trigger>(() => new Trigger());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Trigger> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.JobTrigger.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Trigger() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Trigger(Trigger other) : this() {
          switch (other.TriggerCase) {
            case TriggerOneofCase.Schedule:
              Schedule = other.Schedule.Clone();
              break;
            case TriggerOneofCase.Manual:
              Manual = other.Manual.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Trigger Clone() {
          return new Trigger(this);
        }

        /// <summary>Field number for the "schedule" field.</summary>
        public const int ScheduleFieldNumber = 1;
        /// <summary>
        /// Create a job on a repeating basis based on the elapse of time.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.Schedule Schedule {
          get { return triggerCase_ == TriggerOneofCase.Schedule ? (global::Google.Cloud.Dlp.V2.Schedule) trigger_ : null; }
          set {
            trigger_ = value;
            triggerCase_ = value == null ? TriggerOneofCase.None : TriggerOneofCase.Schedule;
          }
        }

        /// <summary>Field number for the "manual" field.</summary>
        public const int ManualFieldNumber = 2;
        /// <summary>
        /// For use with hybrid jobs. Jobs must be manually created and finished.
        /// Early access feature is in a pre-release state and might change or have
        /// limited support. For more information, see
        /// https://cloud.google.com/products#product-launch-stages.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.Manual Manual {
          get { return triggerCase_ == TriggerOneofCase.Manual ? (global::Google.Cloud.Dlp.V2.Manual) trigger_ : null; }
          set {
            trigger_ = value;
            triggerCase_ = value == null ? TriggerOneofCase.None : TriggerOneofCase.Manual;
          }
        }

        private object trigger_;
        /// <summary>Enum of possible cases for the "trigger" oneof.</summary>
        public enum TriggerOneofCase {
          None = 0,
          Schedule = 1,
          Manual = 2,
        }
        private TriggerOneofCase triggerCase_ = TriggerOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TriggerOneofCase TriggerCase {
          get { return triggerCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTrigger() {
          triggerCase_ = TriggerOneofCase.None;
          trigger_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Trigger);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Trigger other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Schedule, other.Schedule)) return false;
          if (!object.Equals(Manual, other.Manual)) return false;
          if (TriggerCase != other.TriggerCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (triggerCase_ == TriggerOneofCase.Schedule) hash ^= Schedule.GetHashCode();
          if (triggerCase_ == TriggerOneofCase.Manual) hash ^= Manual.GetHashCode();
          hash ^= (int) triggerCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (triggerCase_ == TriggerOneofCase.Schedule) {
            output.WriteRawTag(10);
            output.WriteMessage(Schedule);
          }
          if (triggerCase_ == TriggerOneofCase.Manual) {
            output.WriteRawTag(18);
            output.WriteMessage(Manual);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (triggerCase_ == TriggerOneofCase.Schedule) {
            output.WriteRawTag(10);
            output.WriteMessage(Schedule);
          }
          if (triggerCase_ == TriggerOneofCase.Manual) {
            output.WriteRawTag(18);
            output.WriteMessage(Manual);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (triggerCase_ == TriggerOneofCase.Schedule) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
          }
          if (triggerCase_ == TriggerOneofCase.Manual) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Manual);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Trigger other) {
          if (other == null) {
            return;
          }
          switch (other.TriggerCase) {
            case TriggerOneofCase.Schedule:
              if (Schedule == null) {
                Schedule = new global::Google.Cloud.Dlp.V2.Schedule();
              }
              Schedule.MergeFrom(other.Schedule);
              break;
            case TriggerOneofCase.Manual:
              if (Manual == null) {
                Manual = new global::Google.Cloud.Dlp.V2.Manual();
              }
              Manual.MergeFrom(other.Manual);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Google.Cloud.Dlp.V2.Schedule subBuilder = new global::Google.Cloud.Dlp.V2.Schedule();
                if (triggerCase_ == TriggerOneofCase.Schedule) {
                  subBuilder.MergeFrom(Schedule);
                }
                input.ReadMessage(subBuilder);
                Schedule = subBuilder;
                break;
              }
              case 18: {
                global::Google.Cloud.Dlp.V2.Manual subBuilder = new global::Google.Cloud.Dlp.V2.Manual();
                if (triggerCase_ == TriggerOneofCase.Manual) {
                  subBuilder.MergeFrom(Manual);
                }
                input.ReadMessage(subBuilder);
                Manual = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Google.Cloud.Dlp.V2.Schedule subBuilder = new global::Google.Cloud.Dlp.V2.Schedule();
                if (triggerCase_ == TriggerOneofCase.Schedule) {
                  subBuilder.MergeFrom(Schedule);
                }
                input.ReadMessage(subBuilder);
                Schedule = subBuilder;
                break;
              }
              case 18: {
                global::Google.Cloud.Dlp.V2.Manual subBuilder = new global::Google.Cloud.Dlp.V2.Manual();
                if (triggerCase_ == TriggerOneofCase.Manual) {
                  subBuilder.MergeFrom(Manual);
                }
                input.ReadMessage(subBuilder);
                Manual = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// A task to execute on the completion of a job.
  /// See https://cloud.google.com/dlp/docs/concepts-actions to learn more.
  /// </summary>
  public sealed partial class Action : pb::IMessage<Action>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Action> _parser = new pb::MessageParser<Action>(() => new Action());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Action> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action(Action other) : this() {
      switch (other.ActionCase) {
        case ActionOneofCase.SaveFindings:
          SaveFindings = other.SaveFindings.Clone();
          break;
        case ActionOneofCase.PubSub:
          PubSub = other.PubSub.Clone();
          break;
        case ActionOneofCase.PublishSummaryToCscc:
          PublishSummaryToCscc = other.PublishSummaryToCscc.Clone();
          break;
        case ActionOneofCase.PublishFindingsToCloudDataCatalog:
          PublishFindingsToCloudDataCatalog = other.PublishFindingsToCloudDataCatalog.Clone();
          break;
        case ActionOneofCase.JobNotificationEmails:
          JobNotificationEmails = other.JobNotificationEmails.Clone();
          break;
        case ActionOneofCase.PublishToStackdriver:
          PublishToStackdriver = other.PublishToStackdriver.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action Clone() {
      return new Action(this);
    }

    /// <summary>Field number for the "save_findings" field.</summary>
    public const int SaveFindingsFieldNumber = 1;
    /// <summary>
    /// Save resulting findings in a provided location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Action.Types.SaveFindings SaveFindings {
      get { return actionCase_ == ActionOneofCase.SaveFindings ? (global::Google.Cloud.Dlp.V2.Action.Types.SaveFindings) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.SaveFindings;
      }
    }

    /// <summary>Field number for the "pub_sub" field.</summary>
    public const int PubSubFieldNumber = 2;
    /// <summary>
    /// Publish a notification to a pubsub topic.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Action.Types.PublishToPubSub PubSub {
      get { return actionCase_ == ActionOneofCase.PubSub ? (global::Google.Cloud.Dlp.V2.Action.Types.PublishToPubSub) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.PubSub;
      }
    }

    /// <summary>Field number for the "publish_summary_to_cscc" field.</summary>
    public const int PublishSummaryToCsccFieldNumber = 3;
    /// <summary>
    /// Publish summary to Cloud Security Command Center (Alpha).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Action.Types.PublishSummaryToCscc PublishSummaryToCscc {
      get { return actionCase_ == ActionOneofCase.PublishSummaryToCscc ? (global::Google.Cloud.Dlp.V2.Action.Types.PublishSummaryToCscc) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.PublishSummaryToCscc;
      }
    }

    /// <summary>Field number for the "publish_findings_to_cloud_data_catalog" field.</summary>
    public const int PublishFindingsToCloudDataCatalogFieldNumber = 5;
    /// <summary>
    /// Publish findings to Cloud Datahub.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Action.Types.PublishFindingsToCloudDataCatalog PublishFindingsToCloudDataCatalog {
      get { return actionCase_ == ActionOneofCase.PublishFindingsToCloudDataCatalog ? (global::Google.Cloud.Dlp.V2.Action.Types.PublishFindingsToCloudDataCatalog) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.PublishFindingsToCloudDataCatalog;
      }
    }

    /// <summary>Field number for the "job_notification_emails" field.</summary>
    public const int JobNotificationEmailsFieldNumber = 8;
    /// <summary>
    /// Enable email notification for project owners and editors on job's
    /// completion/failure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Action.Types.JobNotificationEmails JobNotificationEmails {
      get { return actionCase_ == ActionOneofCase.JobNotificationEmails ? (global::Google.Cloud.Dlp.V2.Action.Types.JobNotificationEmails) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.JobNotificationEmails;
      }
    }

    /// <summary>Field number for the "publish_to_stackdriver" field.</summary>
    public const int PublishToStackdriverFieldNumber = 9;
    /// <summary>
    /// Enable Stackdriver metric dlp.googleapis.com/finding_count.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Action.Types.PublishToStackdriver PublishToStackdriver {
      get { return actionCase_ == ActionOneofCase.PublishToStackdriver ? (global::Google.Cloud.Dlp.V2.Action.Types.PublishToStackdriver) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.PublishToStackdriver;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      SaveFindings = 1,
      PubSub = 2,
      PublishSummaryToCscc = 3,
      PublishFindingsToCloudDataCatalog = 5,
      JobNotificationEmails = 8,
      PublishToStackdriver = 9,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Action);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Action other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SaveFindings, other.SaveFindings)) return false;
      if (!object.Equals(PubSub, other.PubSub)) return false;
      if (!object.Equals(PublishSummaryToCscc, other.PublishSummaryToCscc)) return false;
      if (!object.Equals(PublishFindingsToCloudDataCatalog, other.PublishFindingsToCloudDataCatalog)) return false;
      if (!object.Equals(JobNotificationEmails, other.JobNotificationEmails)) return false;
      if (!object.Equals(PublishToStackdriver, other.PublishToStackdriver)) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (actionCase_ == ActionOneofCase.SaveFindings) hash ^= SaveFindings.GetHashCode();
      if (actionCase_ == ActionOneofCase.PubSub) hash ^= PubSub.GetHashCode();
      if (actionCase_ == ActionOneofCase.PublishSummaryToCscc) hash ^= PublishSummaryToCscc.GetHashCode();
      if (actionCase_ == ActionOneofCase.PublishFindingsToCloudDataCatalog) hash ^= PublishFindingsToCloudDataCatalog.GetHashCode();
      if (actionCase_ == ActionOneofCase.JobNotificationEmails) hash ^= JobNotificationEmails.GetHashCode();
      if (actionCase_ == ActionOneofCase.PublishToStackdriver) hash ^= PublishToStackdriver.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (actionCase_ == ActionOneofCase.SaveFindings) {
        output.WriteRawTag(10);
        output.WriteMessage(SaveFindings);
      }
      if (actionCase_ == ActionOneofCase.PubSub) {
        output.WriteRawTag(18);
        output.WriteMessage(PubSub);
      }
      if (actionCase_ == ActionOneofCase.PublishSummaryToCscc) {
        output.WriteRawTag(26);
        output.WriteMessage(PublishSummaryToCscc);
      }
      if (actionCase_ == ActionOneofCase.PublishFindingsToCloudDataCatalog) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishFindingsToCloudDataCatalog);
      }
      if (actionCase_ == ActionOneofCase.JobNotificationEmails) {
        output.WriteRawTag(66);
        output.WriteMessage(JobNotificationEmails);
      }
      if (actionCase_ == ActionOneofCase.PublishToStackdriver) {
        output.WriteRawTag(74);
        output.WriteMessage(PublishToStackdriver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (actionCase_ == ActionOneofCase.SaveFindings) {
        output.WriteRawTag(10);
        output.WriteMessage(SaveFindings);
      }
      if (actionCase_ == ActionOneofCase.PubSub) {
        output.WriteRawTag(18);
        output.WriteMessage(PubSub);
      }
      if (actionCase_ == ActionOneofCase.PublishSummaryToCscc) {
        output.WriteRawTag(26);
        output.WriteMessage(PublishSummaryToCscc);
      }
      if (actionCase_ == ActionOneofCase.PublishFindingsToCloudDataCatalog) {
        output.WriteRawTag(42);
        output.WriteMessage(PublishFindingsToCloudDataCatalog);
      }
      if (actionCase_ == ActionOneofCase.JobNotificationEmails) {
        output.WriteRawTag(66);
        output.WriteMessage(JobNotificationEmails);
      }
      if (actionCase_ == ActionOneofCase.PublishToStackdriver) {
        output.WriteRawTag(74);
        output.WriteMessage(PublishToStackdriver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (actionCase_ == ActionOneofCase.SaveFindings) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SaveFindings);
      }
      if (actionCase_ == ActionOneofCase.PubSub) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PubSub);
      }
      if (actionCase_ == ActionOneofCase.PublishSummaryToCscc) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishSummaryToCscc);
      }
      if (actionCase_ == ActionOneofCase.PublishFindingsToCloudDataCatalog) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishFindingsToCloudDataCatalog);
      }
      if (actionCase_ == ActionOneofCase.JobNotificationEmails) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobNotificationEmails);
      }
      if (actionCase_ == ActionOneofCase.PublishToStackdriver) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishToStackdriver);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Action other) {
      if (other == null) {
        return;
      }
      switch (other.ActionCase) {
        case ActionOneofCase.SaveFindings:
          if (SaveFindings == null) {
            SaveFindings = new global::Google.Cloud.Dlp.V2.Action.Types.SaveFindings();
          }
          SaveFindings.MergeFrom(other.SaveFindings);
          break;
        case ActionOneofCase.PubSub:
          if (PubSub == null) {
            PubSub = new global::Google.Cloud.Dlp.V2.Action.Types.PublishToPubSub();
          }
          PubSub.MergeFrom(other.PubSub);
          break;
        case ActionOneofCase.PublishSummaryToCscc:
          if (PublishSummaryToCscc == null) {
            PublishSummaryToCscc = new global::Google.Cloud.Dlp.V2.Action.Types.PublishSummaryToCscc();
          }
          PublishSummaryToCscc.MergeFrom(other.PublishSummaryToCscc);
          break;
        case ActionOneofCase.PublishFindingsToCloudDataCatalog:
          if (PublishFindingsToCloudDataCatalog == null) {
            PublishFindingsToCloudDataCatalog = new global::Google.Cloud.Dlp.V2.Action.Types.PublishFindingsToCloudDataCatalog();
          }
          PublishFindingsToCloudDataCatalog.MergeFrom(other.PublishFindingsToCloudDataCatalog);
          break;
        case ActionOneofCase.JobNotificationEmails:
          if (JobNotificationEmails == null) {
            JobNotificationEmails = new global::Google.Cloud.Dlp.V2.Action.Types.JobNotificationEmails();
          }
          JobNotificationEmails.MergeFrom(other.JobNotificationEmails);
          break;
        case ActionOneofCase.PublishToStackdriver:
          if (PublishToStackdriver == null) {
            PublishToStackdriver = new global::Google.Cloud.Dlp.V2.Action.Types.PublishToStackdriver();
          }
          PublishToStackdriver.MergeFrom(other.PublishToStackdriver);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.Action.Types.SaveFindings subBuilder = new global::Google.Cloud.Dlp.V2.Action.Types.SaveFindings();
            if (actionCase_ == ActionOneofCase.SaveFindings) {
              subBuilder.MergeFrom(SaveFindings);
            }
            input.ReadMessage(subBuilder);
            SaveFindings = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.Action.Types.PublishToPubSub subBuilder = new global::Google.Cloud.Dlp.V2.Action.Types.PublishToPubSub();
            if (actionCase_ == ActionOneofCase.PubSub) {
              subBuilder.MergeFrom(PubSub);
            }
            input.ReadMessage(subBuilder);
            PubSub = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.Action.Types.PublishSummaryToCscc subBuilder = new global::Google.Cloud.Dlp.V2.Action.Types.PublishSummaryToCscc();
            if (actionCase_ == ActionOneofCase.PublishSummaryToCscc) {
              subBuilder.MergeFrom(PublishSummaryToCscc);
            }
            input.ReadMessage(subBuilder);
            PublishSummaryToCscc = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.Action.Types.PublishFindingsToCloudDataCatalog subBuilder = new global::Google.Cloud.Dlp.V2.Action.Types.PublishFindingsToCloudDataCatalog();
            if (actionCase_ == ActionOneofCase.PublishFindingsToCloudDataCatalog) {
              subBuilder.MergeFrom(PublishFindingsToCloudDataCatalog);
            }
            input.ReadMessage(subBuilder);
            PublishFindingsToCloudDataCatalog = subBuilder;
            break;
          }
          case 66: {
            global::Google.Cloud.Dlp.V2.Action.Types.JobNotificationEmails subBuilder = new global::Google.Cloud.Dlp.V2.Action.Types.JobNotificationEmails();
            if (actionCase_ == ActionOneofCase.JobNotificationEmails) {
              subBuilder.MergeFrom(JobNotificationEmails);
            }
            input.ReadMessage(subBuilder);
            JobNotificationEmails = subBuilder;
            break;
          }
          case 74: {
            global::Google.Cloud.Dlp.V2.Action.Types.PublishToStackdriver subBuilder = new global::Google.Cloud.Dlp.V2.Action.Types.PublishToStackdriver();
            if (actionCase_ == ActionOneofCase.PublishToStackdriver) {
              subBuilder.MergeFrom(PublishToStackdriver);
            }
            input.ReadMessage(subBuilder);
            PublishToStackdriver = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.Action.Types.SaveFindings subBuilder = new global::Google.Cloud.Dlp.V2.Action.Types.SaveFindings();
            if (actionCase_ == ActionOneofCase.SaveFindings) {
              subBuilder.MergeFrom(SaveFindings);
            }
            input.ReadMessage(subBuilder);
            SaveFindings = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.Action.Types.PublishToPubSub subBuilder = new global::Google.Cloud.Dlp.V2.Action.Types.PublishToPubSub();
            if (actionCase_ == ActionOneofCase.PubSub) {
              subBuilder.MergeFrom(PubSub);
            }
            input.ReadMessage(subBuilder);
            PubSub = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.Action.Types.PublishSummaryToCscc subBuilder = new global::Google.Cloud.Dlp.V2.Action.Types.PublishSummaryToCscc();
            if (actionCase_ == ActionOneofCase.PublishSummaryToCscc) {
              subBuilder.MergeFrom(PublishSummaryToCscc);
            }
            input.ReadMessage(subBuilder);
            PublishSummaryToCscc = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.Action.Types.PublishFindingsToCloudDataCatalog subBuilder = new global::Google.Cloud.Dlp.V2.Action.Types.PublishFindingsToCloudDataCatalog();
            if (actionCase_ == ActionOneofCase.PublishFindingsToCloudDataCatalog) {
              subBuilder.MergeFrom(PublishFindingsToCloudDataCatalog);
            }
            input.ReadMessage(subBuilder);
            PublishFindingsToCloudDataCatalog = subBuilder;
            break;
          }
          case 66: {
            global::Google.Cloud.Dlp.V2.Action.Types.JobNotificationEmails subBuilder = new global::Google.Cloud.Dlp.V2.Action.Types.JobNotificationEmails();
            if (actionCase_ == ActionOneofCase.JobNotificationEmails) {
              subBuilder.MergeFrom(JobNotificationEmails);
            }
            input.ReadMessage(subBuilder);
            JobNotificationEmails = subBuilder;
            break;
          }
          case 74: {
            global::Google.Cloud.Dlp.V2.Action.Types.PublishToStackdriver subBuilder = new global::Google.Cloud.Dlp.V2.Action.Types.PublishToStackdriver();
            if (actionCase_ == ActionOneofCase.PublishToStackdriver) {
              subBuilder.MergeFrom(PublishToStackdriver);
            }
            input.ReadMessage(subBuilder);
            PublishToStackdriver = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Action message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// If set, the detailed findings will be persisted to the specified
      /// OutputStorageConfig. Only a single instance of this action can be
      /// specified.
      /// Compatible with: Inspect, Risk
      /// </summary>
      public sealed partial class SaveFindings : pb::IMessage<SaveFindings>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SaveFindings> _parser = new pb::MessageParser<SaveFindings>(() => new SaveFindings());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SaveFindings> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.Action.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SaveFindings() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SaveFindings(SaveFindings other) : this() {
          outputConfig_ = other.outputConfig_ != null ? other.outputConfig_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SaveFindings Clone() {
          return new SaveFindings(this);
        }

        /// <summary>Field number for the "output_config" field.</summary>
        public const int OutputConfigFieldNumber = 1;
        private global::Google.Cloud.Dlp.V2.OutputStorageConfig outputConfig_;
        /// <summary>
        /// Location to store findings outside of DLP.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.OutputStorageConfig OutputConfig {
          get { return outputConfig_; }
          set {
            outputConfig_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SaveFindings);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SaveFindings other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(OutputConfig, other.OutputConfig)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (outputConfig_ != null) hash ^= OutputConfig.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (outputConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(OutputConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (outputConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(OutputConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (outputConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutputConfig);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SaveFindings other) {
          if (other == null) {
            return;
          }
          if (other.outputConfig_ != null) {
            if (outputConfig_ == null) {
              OutputConfig = new global::Google.Cloud.Dlp.V2.OutputStorageConfig();
            }
            OutputConfig.MergeFrom(other.OutputConfig);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (outputConfig_ == null) {
                  OutputConfig = new global::Google.Cloud.Dlp.V2.OutputStorageConfig();
                }
                input.ReadMessage(OutputConfig);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (outputConfig_ == null) {
                  OutputConfig = new global::Google.Cloud.Dlp.V2.OutputStorageConfig();
                }
                input.ReadMessage(OutputConfig);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Publish a message into given Pub/Sub topic when DlpJob has completed. The
      /// message contains a single field, `DlpJobName`, which is equal to the
      /// finished job's
      /// [`DlpJob.name`](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob).
      /// Compatible with: Inspect, Risk
      /// </summary>
      public sealed partial class PublishToPubSub : pb::IMessage<PublishToPubSub>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PublishToPubSub> _parser = new pb::MessageParser<PublishToPubSub>(() => new PublishToPubSub());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PublishToPubSub> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.Action.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublishToPubSub() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublishToPubSub(PublishToPubSub other) : this() {
          topic_ = other.topic_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublishToPubSub Clone() {
          return new PublishToPubSub(this);
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 1;
        private string topic_ = "";
        /// <summary>
        /// Cloud Pub/Sub topic to send notifications to. The topic must have given
        /// publishing access rights to the DLP API service account executing
        /// the long running DlpJob sending the notifications.
        /// Format is projects/{project}/topics/{topic}.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Topic {
          get { return topic_; }
          set {
            topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PublishToPubSub);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PublishToPubSub other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Topic != other.Topic) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Topic.Length != 0) hash ^= Topic.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Topic.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Topic);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Topic.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Topic);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Topic.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PublishToPubSub other) {
          if (other == null) {
            return;
          }
          if (other.Topic.Length != 0) {
            Topic = other.Topic;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Topic = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Topic = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Publish the result summary of a DlpJob to the Cloud Security
      /// Command Center (CSCC Alpha).
      /// This action is only available for projects which are parts of
      /// an organization and whitelisted for the alpha Cloud Security Command
      /// Center.
      /// The action will publish count of finding instances and their info types.
      /// The summary of findings will be persisted in CSCC and are governed by CSCC
      /// service-specific policy, see https://cloud.google.com/terms/service-terms
      /// Only a single instance of this action can be specified.
      /// Compatible with: Inspect
      /// </summary>
      public sealed partial class PublishSummaryToCscc : pb::IMessage<PublishSummaryToCscc>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PublishSummaryToCscc> _parser = new pb::MessageParser<PublishSummaryToCscc>(() => new PublishSummaryToCscc());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PublishSummaryToCscc> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.Action.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublishSummaryToCscc() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublishSummaryToCscc(PublishSummaryToCscc other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublishSummaryToCscc Clone() {
          return new PublishSummaryToCscc(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PublishSummaryToCscc);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PublishSummaryToCscc other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PublishSummaryToCscc other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Publish findings of a DlpJob to Cloud Data Catalog. Labels summarizing the
      /// results of the DlpJob will be applied to the entry for the resource scanned
      /// in Cloud Data Catalog. Any labels previously written by another DlpJob will
      /// be deleted. InfoType naming patterns are strictly enforced when using this
      /// feature. Note that the findings will be persisted in Cloud Data Catalog
      /// storage and are governed by Data Catalog service-specific policy, see
      /// https://cloud.google.com/terms/service-terms
      /// Only a single instance of this action can be specified and only allowed if
      /// all resources being scanned are BigQuery tables.
      /// Compatible with: Inspect
      /// </summary>
      public sealed partial class PublishFindingsToCloudDataCatalog : pb::IMessage<PublishFindingsToCloudDataCatalog>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PublishFindingsToCloudDataCatalog> _parser = new pb::MessageParser<PublishFindingsToCloudDataCatalog>(() => new PublishFindingsToCloudDataCatalog());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PublishFindingsToCloudDataCatalog> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.Action.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublishFindingsToCloudDataCatalog() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublishFindingsToCloudDataCatalog(PublishFindingsToCloudDataCatalog other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublishFindingsToCloudDataCatalog Clone() {
          return new PublishFindingsToCloudDataCatalog(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PublishFindingsToCloudDataCatalog);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PublishFindingsToCloudDataCatalog other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PublishFindingsToCloudDataCatalog other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Enable email notification to project owners and editors on jobs's
      /// completion/failure.
      /// </summary>
      public sealed partial class JobNotificationEmails : pb::IMessage<JobNotificationEmails>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<JobNotificationEmails> _parser = new pb::MessageParser<JobNotificationEmails>(() => new JobNotificationEmails());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<JobNotificationEmails> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.Action.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public JobNotificationEmails() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public JobNotificationEmails(JobNotificationEmails other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public JobNotificationEmails Clone() {
          return new JobNotificationEmails(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as JobNotificationEmails);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(JobNotificationEmails other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(JobNotificationEmails other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Enable Stackdriver metric dlp.googleapis.com/finding_count. This
      /// will publish a metric to stack driver on each infotype requested and
      /// how many findings were found for it. CustomDetectors will be bucketed
      /// as 'Custom' under the Stackdriver label 'info_type'.
      /// </summary>
      public sealed partial class PublishToStackdriver : pb::IMessage<PublishToStackdriver>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PublishToStackdriver> _parser = new pb::MessageParser<PublishToStackdriver>(() => new PublishToStackdriver());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PublishToStackdriver> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.Action.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublishToStackdriver() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublishToStackdriver(PublishToStackdriver other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PublishToStackdriver Clone() {
          return new PublishToStackdriver(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PublishToStackdriver);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PublishToStackdriver other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PublishToStackdriver other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Request message for CreateInspectTemplate.
  /// </summary>
  public sealed partial class CreateInspectTemplateRequest : pb::IMessage<CreateInspectTemplateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateInspectTemplateRequest> _parser = new pb::MessageParser<CreateInspectTemplateRequest>(() => new CreateInspectTemplateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateInspectTemplateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInspectTemplateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInspectTemplateRequest(CreateInspectTemplateRequest other) : this() {
      parent_ = other.parent_;
      inspectTemplate_ = other.inspectTemplate_ != null ? other.inspectTemplate_.Clone() : null;
      templateId_ = other.templateId_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInspectTemplateRequest Clone() {
      return new CreateInspectTemplateRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent resource name.
    ///
    /// The format of this value varies depending on the scope of the request
    /// (project or organization) and whether you have [specified a processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    /// + Organizations scope, location specified:&lt;br/>
    ///   `organizations/`&lt;var>ORG_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Organizations scope, no location specified (defaults to global):&lt;br/>
    ///   `organizations/`&lt;var>ORG_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inspect_template" field.</summary>
    public const int InspectTemplateFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.InspectTemplate inspectTemplate_;
    /// <summary>
    /// Required. The InspectTemplate to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectTemplate InspectTemplate {
      get { return inspectTemplate_; }
      set {
        inspectTemplate_ = value;
      }
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 3;
    private string templateId_ = "";
    /// <summary>
    /// The template id can contain uppercase and lowercase letters,
    /// numbers, and hyphens; that is, it must match the regular
    /// expression: `[a-zA-Z\d-_]+`. The maximum length is 100
    /// characters. Can be empty to allow the system to generate one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemplateId {
      get { return templateId_; }
      set {
        templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 4;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateInspectTemplateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateInspectTemplateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(InspectTemplate, other.InspectTemplate)) return false;
      if (TemplateId != other.TemplateId) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (inspectTemplate_ != null) hash ^= InspectTemplate.GetHashCode();
      if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (inspectTemplate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InspectTemplate);
      }
      if (TemplateId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TemplateId);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (inspectTemplate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InspectTemplate);
      }
      if (TemplateId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TemplateId);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (inspectTemplate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InspectTemplate);
      }
      if (TemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateInspectTemplateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.inspectTemplate_ != null) {
        if (inspectTemplate_ == null) {
          InspectTemplate = new global::Google.Cloud.Dlp.V2.InspectTemplate();
        }
        InspectTemplate.MergeFrom(other.InspectTemplate);
      }
      if (other.TemplateId.Length != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (inspectTemplate_ == null) {
              InspectTemplate = new global::Google.Cloud.Dlp.V2.InspectTemplate();
            }
            input.ReadMessage(InspectTemplate);
            break;
          }
          case 26: {
            TemplateId = input.ReadString();
            break;
          }
          case 34: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (inspectTemplate_ == null) {
              InspectTemplate = new global::Google.Cloud.Dlp.V2.InspectTemplate();
            }
            input.ReadMessage(InspectTemplate);
            break;
          }
          case 26: {
            TemplateId = input.ReadString();
            break;
          }
          case 34: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for UpdateInspectTemplate.
  /// </summary>
  public sealed partial class UpdateInspectTemplateRequest : pb::IMessage<UpdateInspectTemplateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateInspectTemplateRequest> _parser = new pb::MessageParser<UpdateInspectTemplateRequest>(() => new UpdateInspectTemplateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateInspectTemplateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInspectTemplateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInspectTemplateRequest(UpdateInspectTemplateRequest other) : this() {
      name_ = other.name_;
      inspectTemplate_ = other.inspectTemplate_ != null ? other.inspectTemplate_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInspectTemplateRequest Clone() {
      return new UpdateInspectTemplateRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of organization and inspectTemplate to be updated, for
    /// example `organizations/433245324/inspectTemplates/432452342` or
    /// projects/project-id/inspectTemplates/432452342.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inspect_template" field.</summary>
    public const int InspectTemplateFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.InspectTemplate inspectTemplate_;
    /// <summary>
    /// New InspectTemplate value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectTemplate InspectTemplate {
      get { return inspectTemplate_; }
      set {
        inspectTemplate_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Mask to control which fields get updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateInspectTemplateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateInspectTemplateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(InspectTemplate, other.InspectTemplate)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (inspectTemplate_ != null) hash ^= InspectTemplate.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (inspectTemplate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InspectTemplate);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (inspectTemplate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InspectTemplate);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (inspectTemplate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InspectTemplate);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateInspectTemplateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.inspectTemplate_ != null) {
        if (inspectTemplate_ == null) {
          InspectTemplate = new global::Google.Cloud.Dlp.V2.InspectTemplate();
        }
        InspectTemplate.MergeFrom(other.InspectTemplate);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (inspectTemplate_ == null) {
              InspectTemplate = new global::Google.Cloud.Dlp.V2.InspectTemplate();
            }
            input.ReadMessage(InspectTemplate);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (inspectTemplate_ == null) {
              InspectTemplate = new global::Google.Cloud.Dlp.V2.InspectTemplate();
            }
            input.ReadMessage(InspectTemplate);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for GetInspectTemplate.
  /// </summary>
  public sealed partial class GetInspectTemplateRequest : pb::IMessage<GetInspectTemplateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetInspectTemplateRequest> _parser = new pb::MessageParser<GetInspectTemplateRequest>(() => new GetInspectTemplateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInspectTemplateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInspectTemplateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInspectTemplateRequest(GetInspectTemplateRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInspectTemplateRequest Clone() {
      return new GetInspectTemplateRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the organization and inspectTemplate to be read, for
    /// example `organizations/433245324/inspectTemplates/432452342` or
    /// projects/project-id/inspectTemplates/432452342.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInspectTemplateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInspectTemplateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInspectTemplateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for ListInspectTemplates.
  /// </summary>
  public sealed partial class ListInspectTemplatesRequest : pb::IMessage<ListInspectTemplatesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListInspectTemplatesRequest> _parser = new pb::MessageParser<ListInspectTemplatesRequest>(() => new ListInspectTemplatesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListInspectTemplatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInspectTemplatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInspectTemplatesRequest(ListInspectTemplatesRequest other) : this() {
      parent_ = other.parent_;
      pageToken_ = other.pageToken_;
      pageSize_ = other.pageSize_;
      orderBy_ = other.orderBy_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInspectTemplatesRequest Clone() {
      return new ListInspectTemplatesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent resource name.
    ///
    /// The format of this value varies depending on the scope of the request
    /// (project or organization) and whether you have [specified a processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    /// + Organizations scope, location specified:&lt;br/>
    ///   `organizations/`&lt;var>ORG_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Organizations scope, no location specified (defaults to global):&lt;br/>
    ///   `organizations/`&lt;var>ORG_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 2;
    private string pageToken_ = "";
    /// <summary>
    /// Page token to continue retrieval. Comes from previous call
    /// to `ListInspectTemplates`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// Size of the page, can be limited by server. If zero server returns
    /// a page of max size 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 4;
    private string orderBy_ = "";
    /// <summary>
    /// Comma separated list of fields to order by,
    /// followed by `asc` or `desc` postfix. This list is case-insensitive,
    /// default sorting order is ascending, redundant space characters are
    /// insignificant.
    ///
    /// Example: `name asc,update_time, create_time desc`
    ///
    /// Supported fields are:
    ///
    /// - `create_time`: corresponds to time the template was created.
    /// - `update_time`: corresponds to time the template was last updated.
    /// - `name`: corresponds to template's name.
    /// - `display_name`: corresponds to template's display name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 5;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListInspectTemplatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListInspectTemplatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageToken != other.PageToken) return false;
      if (PageSize != other.PageSize) return false;
      if (OrderBy != other.OrderBy) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OrderBy);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OrderBy);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListInspectTemplatesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            OrderBy = input.ReadString();
            break;
          }
          case 42: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            OrderBy = input.ReadString();
            break;
          }
          case 42: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for ListInspectTemplates.
  /// </summary>
  public sealed partial class ListInspectTemplatesResponse : pb::IMessage<ListInspectTemplatesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListInspectTemplatesResponse> _parser = new pb::MessageParser<ListInspectTemplatesResponse>(() => new ListInspectTemplatesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListInspectTemplatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInspectTemplatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInspectTemplatesResponse(ListInspectTemplatesResponse other) : this() {
      inspectTemplates_ = other.inspectTemplates_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInspectTemplatesResponse Clone() {
      return new ListInspectTemplatesResponse(this);
    }

    /// <summary>Field number for the "inspect_templates" field.</summary>
    public const int InspectTemplatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.InspectTemplate> _repeated_inspectTemplates_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.InspectTemplate.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InspectTemplate> inspectTemplates_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InspectTemplate>();
    /// <summary>
    /// List of inspectTemplates, up to page_size in ListInspectTemplatesRequest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.InspectTemplate> InspectTemplates {
      get { return inspectTemplates_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// If the next page is available then the next page token to be used
    /// in following ListInspectTemplates request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListInspectTemplatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListInspectTemplatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inspectTemplates_.Equals(other.inspectTemplates_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inspectTemplates_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      inspectTemplates_.WriteTo(output, _repeated_inspectTemplates_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      inspectTemplates_.WriteTo(ref output, _repeated_inspectTemplates_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inspectTemplates_.CalculateSize(_repeated_inspectTemplates_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListInspectTemplatesResponse other) {
      if (other == null) {
        return;
      }
      inspectTemplates_.Add(other.inspectTemplates_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inspectTemplates_.AddEntriesFrom(input, _repeated_inspectTemplates_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            inspectTemplates_.AddEntriesFrom(ref input, _repeated_inspectTemplates_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for DeleteInspectTemplate.
  /// </summary>
  public sealed partial class DeleteInspectTemplateRequest : pb::IMessage<DeleteInspectTemplateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteInspectTemplateRequest> _parser = new pb::MessageParser<DeleteInspectTemplateRequest>(() => new DeleteInspectTemplateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteInspectTemplateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInspectTemplateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInspectTemplateRequest(DeleteInspectTemplateRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInspectTemplateRequest Clone() {
      return new DeleteInspectTemplateRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the organization and inspectTemplate to be deleted, for
    /// example `organizations/433245324/inspectTemplates/432452342` or
    /// projects/project-id/inspectTemplates/432452342.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteInspectTemplateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteInspectTemplateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteInspectTemplateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for CreateJobTrigger.
  /// </summary>
  public sealed partial class CreateJobTriggerRequest : pb::IMessage<CreateJobTriggerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateJobTriggerRequest> _parser = new pb::MessageParser<CreateJobTriggerRequest>(() => new CreateJobTriggerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateJobTriggerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateJobTriggerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateJobTriggerRequest(CreateJobTriggerRequest other) : this() {
      parent_ = other.parent_;
      jobTrigger_ = other.jobTrigger_ != null ? other.jobTrigger_.Clone() : null;
      triggerId_ = other.triggerId_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateJobTriggerRequest Clone() {
      return new CreateJobTriggerRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent resource name.
    ///
    /// The format of this value varies depending on whether you have [specified a
    /// processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "job_trigger" field.</summary>
    public const int JobTriggerFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.JobTrigger jobTrigger_;
    /// <summary>
    /// Required. The JobTrigger to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.JobTrigger JobTrigger {
      get { return jobTrigger_; }
      set {
        jobTrigger_ = value;
      }
    }

    /// <summary>Field number for the "trigger_id" field.</summary>
    public const int TriggerIdFieldNumber = 3;
    private string triggerId_ = "";
    /// <summary>
    /// The trigger id can contain uppercase and lowercase letters,
    /// numbers, and hyphens; that is, it must match the regular
    /// expression: `[a-zA-Z\d-_]+`. The maximum length is 100
    /// characters. Can be empty to allow the system to generate one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TriggerId {
      get { return triggerId_; }
      set {
        triggerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 4;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateJobTriggerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateJobTriggerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(JobTrigger, other.JobTrigger)) return false;
      if (TriggerId != other.TriggerId) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (jobTrigger_ != null) hash ^= JobTrigger.GetHashCode();
      if (TriggerId.Length != 0) hash ^= TriggerId.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (jobTrigger_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(JobTrigger);
      }
      if (TriggerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TriggerId);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (jobTrigger_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(JobTrigger);
      }
      if (TriggerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TriggerId);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (jobTrigger_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobTrigger);
      }
      if (TriggerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerId);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateJobTriggerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.jobTrigger_ != null) {
        if (jobTrigger_ == null) {
          JobTrigger = new global::Google.Cloud.Dlp.V2.JobTrigger();
        }
        JobTrigger.MergeFrom(other.JobTrigger);
      }
      if (other.TriggerId.Length != 0) {
        TriggerId = other.TriggerId;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (jobTrigger_ == null) {
              JobTrigger = new global::Google.Cloud.Dlp.V2.JobTrigger();
            }
            input.ReadMessage(JobTrigger);
            break;
          }
          case 26: {
            TriggerId = input.ReadString();
            break;
          }
          case 34: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (jobTrigger_ == null) {
              JobTrigger = new global::Google.Cloud.Dlp.V2.JobTrigger();
            }
            input.ReadMessage(JobTrigger);
            break;
          }
          case 26: {
            TriggerId = input.ReadString();
            break;
          }
          case 34: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for ActivateJobTrigger.
  /// </summary>
  public sealed partial class ActivateJobTriggerRequest : pb::IMessage<ActivateJobTriggerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivateJobTriggerRequest> _parser = new pb::MessageParser<ActivateJobTriggerRequest>(() => new ActivateJobTriggerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivateJobTriggerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateJobTriggerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateJobTriggerRequest(ActivateJobTriggerRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateJobTriggerRequest Clone() {
      return new ActivateJobTriggerRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the trigger to activate, for example
    /// `projects/dlp-test-project/jobTriggers/53234423`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivateJobTriggerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivateJobTriggerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivateJobTriggerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for UpdateJobTrigger.
  /// </summary>
  public sealed partial class UpdateJobTriggerRequest : pb::IMessage<UpdateJobTriggerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateJobTriggerRequest> _parser = new pb::MessageParser<UpdateJobTriggerRequest>(() => new UpdateJobTriggerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateJobTriggerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateJobTriggerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateJobTriggerRequest(UpdateJobTriggerRequest other) : this() {
      name_ = other.name_;
      jobTrigger_ = other.jobTrigger_ != null ? other.jobTrigger_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateJobTriggerRequest Clone() {
      return new UpdateJobTriggerRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the project and the triggeredJob, for example
    /// `projects/dlp-test-project/jobTriggers/53234423`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "job_trigger" field.</summary>
    public const int JobTriggerFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.JobTrigger jobTrigger_;
    /// <summary>
    /// New JobTrigger value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.JobTrigger JobTrigger {
      get { return jobTrigger_; }
      set {
        jobTrigger_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Mask to control which fields get updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateJobTriggerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateJobTriggerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(JobTrigger, other.JobTrigger)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (jobTrigger_ != null) hash ^= JobTrigger.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (jobTrigger_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(JobTrigger);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (jobTrigger_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(JobTrigger);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (jobTrigger_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobTrigger);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateJobTriggerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.jobTrigger_ != null) {
        if (jobTrigger_ == null) {
          JobTrigger = new global::Google.Cloud.Dlp.V2.JobTrigger();
        }
        JobTrigger.MergeFrom(other.JobTrigger);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (jobTrigger_ == null) {
              JobTrigger = new global::Google.Cloud.Dlp.V2.JobTrigger();
            }
            input.ReadMessage(JobTrigger);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (jobTrigger_ == null) {
              JobTrigger = new global::Google.Cloud.Dlp.V2.JobTrigger();
            }
            input.ReadMessage(JobTrigger);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for GetJobTrigger.
  /// </summary>
  public sealed partial class GetJobTriggerRequest : pb::IMessage<GetJobTriggerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetJobTriggerRequest> _parser = new pb::MessageParser<GetJobTriggerRequest>(() => new GetJobTriggerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetJobTriggerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJobTriggerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJobTriggerRequest(GetJobTriggerRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetJobTriggerRequest Clone() {
      return new GetJobTriggerRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the project and the triggeredJob, for example
    /// `projects/dlp-test-project/jobTriggers/53234423`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetJobTriggerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetJobTriggerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetJobTriggerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for CreateDlpJobRequest. Used to initiate long running
  /// jobs such as calculating risk metrics or inspecting Google Cloud
  /// Storage.
  /// </summary>
  public sealed partial class CreateDlpJobRequest : pb::IMessage<CreateDlpJobRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDlpJobRequest> _parser = new pb::MessageParser<CreateDlpJobRequest>(() => new CreateDlpJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateDlpJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDlpJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDlpJobRequest(CreateDlpJobRequest other) : this() {
      parent_ = other.parent_;
      jobId_ = other.jobId_;
      locationId_ = other.locationId_;
      switch (other.JobCase) {
        case JobOneofCase.InspectJob:
          InspectJob = other.InspectJob.Clone();
          break;
        case JobOneofCase.RiskJob:
          RiskJob = other.RiskJob.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDlpJobRequest Clone() {
      return new CreateDlpJobRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent resource name.
    ///
    /// The format of this value varies depending on whether you have [specified a
    /// processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inspect_job" field.</summary>
    public const int InspectJobFieldNumber = 2;
    /// <summary>
    /// Set to control what and how to inspect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectJobConfig InspectJob {
      get { return jobCase_ == JobOneofCase.InspectJob ? (global::Google.Cloud.Dlp.V2.InspectJobConfig) job_ : null; }
      set {
        job_ = value;
        jobCase_ = value == null ? JobOneofCase.None : JobOneofCase.InspectJob;
      }
    }

    /// <summary>Field number for the "risk_job" field.</summary>
    public const int RiskJobFieldNumber = 3;
    /// <summary>
    /// Set to choose what metric to calculate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig RiskJob {
      get { return jobCase_ == JobOneofCase.RiskJob ? (global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig) job_ : null; }
      set {
        job_ = value;
        jobCase_ = value == null ? JobOneofCase.None : JobOneofCase.RiskJob;
      }
    }

    /// <summary>Field number for the "job_id" field.</summary>
    public const int JobIdFieldNumber = 4;
    private string jobId_ = "";
    /// <summary>
    /// The job id can contain uppercase and lowercase letters,
    /// numbers, and hyphens; that is, it must match the regular
    /// expression: `[a-zA-Z\d-_]+`. The maximum length is 100
    /// characters. Can be empty to allow the system to generate one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 5;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object job_;
    /// <summary>Enum of possible cases for the "job" oneof.</summary>
    public enum JobOneofCase {
      None = 0,
      InspectJob = 2,
      RiskJob = 3,
    }
    private JobOneofCase jobCase_ = JobOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobOneofCase JobCase {
      get { return jobCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJob() {
      jobCase_ = JobOneofCase.None;
      job_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateDlpJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateDlpJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(InspectJob, other.InspectJob)) return false;
      if (!object.Equals(RiskJob, other.RiskJob)) return false;
      if (JobId != other.JobId) return false;
      if (LocationId != other.LocationId) return false;
      if (JobCase != other.JobCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (jobCase_ == JobOneofCase.InspectJob) hash ^= InspectJob.GetHashCode();
      if (jobCase_ == JobOneofCase.RiskJob) hash ^= RiskJob.GetHashCode();
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      hash ^= (int) jobCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (jobCase_ == JobOneofCase.InspectJob) {
        output.WriteRawTag(18);
        output.WriteMessage(InspectJob);
      }
      if (jobCase_ == JobOneofCase.RiskJob) {
        output.WriteRawTag(26);
        output.WriteMessage(RiskJob);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(JobId);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (jobCase_ == JobOneofCase.InspectJob) {
        output.WriteRawTag(18);
        output.WriteMessage(InspectJob);
      }
      if (jobCase_ == JobOneofCase.RiskJob) {
        output.WriteRawTag(26);
        output.WriteMessage(RiskJob);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(JobId);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (jobCase_ == JobOneofCase.InspectJob) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InspectJob);
      }
      if (jobCase_ == JobOneofCase.RiskJob) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RiskJob);
      }
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobId);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateDlpJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      switch (other.JobCase) {
        case JobOneofCase.InspectJob:
          if (InspectJob == null) {
            InspectJob = new global::Google.Cloud.Dlp.V2.InspectJobConfig();
          }
          InspectJob.MergeFrom(other.InspectJob);
          break;
        case JobOneofCase.RiskJob:
          if (RiskJob == null) {
            RiskJob = new global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig();
          }
          RiskJob.MergeFrom(other.RiskJob);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.InspectJobConfig subBuilder = new global::Google.Cloud.Dlp.V2.InspectJobConfig();
            if (jobCase_ == JobOneofCase.InspectJob) {
              subBuilder.MergeFrom(InspectJob);
            }
            input.ReadMessage(subBuilder);
            InspectJob = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig subBuilder = new global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig();
            if (jobCase_ == JobOneofCase.RiskJob) {
              subBuilder.MergeFrom(RiskJob);
            }
            input.ReadMessage(subBuilder);
            RiskJob = subBuilder;
            break;
          }
          case 34: {
            JobId = input.ReadString();
            break;
          }
          case 42: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.InspectJobConfig subBuilder = new global::Google.Cloud.Dlp.V2.InspectJobConfig();
            if (jobCase_ == JobOneofCase.InspectJob) {
              subBuilder.MergeFrom(InspectJob);
            }
            input.ReadMessage(subBuilder);
            InspectJob = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig subBuilder = new global::Google.Cloud.Dlp.V2.RiskAnalysisJobConfig();
            if (jobCase_ == JobOneofCase.RiskJob) {
              subBuilder.MergeFrom(RiskJob);
            }
            input.ReadMessage(subBuilder);
            RiskJob = subBuilder;
            break;
          }
          case 34: {
            JobId = input.ReadString();
            break;
          }
          case 42: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for ListJobTriggers.
  /// </summary>
  public sealed partial class ListJobTriggersRequest : pb::IMessage<ListJobTriggersRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListJobTriggersRequest> _parser = new pb::MessageParser<ListJobTriggersRequest>(() => new ListJobTriggersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListJobTriggersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobTriggersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobTriggersRequest(ListJobTriggersRequest other) : this() {
      parent_ = other.parent_;
      pageToken_ = other.pageToken_;
      pageSize_ = other.pageSize_;
      orderBy_ = other.orderBy_;
      filter_ = other.filter_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobTriggersRequest Clone() {
      return new ListJobTriggersRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent resource name.
    ///
    /// The format of this value varies depending on whether you have [specified a
    /// processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 2;
    private string pageToken_ = "";
    /// <summary>
    /// Page token to continue retrieval. Comes from previous call
    /// to ListJobTriggers. `order_by` field must not
    /// change for subsequent calls.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// Size of the page, can be limited by a server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 4;
    private string orderBy_ = "";
    /// <summary>
    /// Comma separated list of triggeredJob fields to order by,
    /// followed by `asc` or `desc` postfix. This list is case-insensitive,
    /// default sorting order is ascending, redundant space characters are
    /// insignificant.
    ///
    /// Example: `name asc,update_time, create_time desc`
    ///
    /// Supported fields are:
    ///
    /// - `create_time`: corresponds to time the JobTrigger was created.
    /// - `update_time`: corresponds to time the JobTrigger was last updated.
    /// - `last_run_time`: corresponds to the last time the JobTrigger ran.
    /// - `name`: corresponds to JobTrigger's name.
    /// - `display_name`: corresponds to JobTrigger's display name.
    /// - `status`: corresponds to JobTrigger's status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 5;
    private string filter_ = "";
    /// <summary>
    /// Allows filtering.
    ///
    /// Supported syntax:
    ///
    /// * Filter expressions are made up of one or more restrictions.
    /// * Restrictions can be combined by `AND` or `OR` logical operators. A
    /// sequence of restrictions implicitly uses `AND`.
    /// * A restriction has the form of `{field} {operator} {value}`.
    /// * Supported fields/values for inspect jobs:
    ///     - `status` - HEALTHY|PAUSED|CANCELLED
    ///     - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY
    ///     - 'last_run_time` - RFC 3339 formatted timestamp, surrounded by
    ///     quotation marks. Nanoseconds are ignored.
    ///     - 'error_count' - Number of errors that have occurred while running.
    /// * The operator must be `=` or `!=` for status and inspected_storage.
    ///
    /// Examples:
    ///
    /// * inspected_storage = cloud_storage AND status = HEALTHY
    /// * inspected_storage = cloud_storage OR inspected_storage = bigquery
    /// * inspected_storage = cloud_storage AND (state = PAUSED OR state = HEALTHY)
    /// * last_run_time > \"2017-12-12T00:00:00+00:00\"
    ///
    /// The length of this field should be no more than 500 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 7;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListJobTriggersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListJobTriggersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageToken != other.PageToken) return false;
      if (PageSize != other.PageSize) return false;
      if (OrderBy != other.OrderBy) return false;
      if (Filter != other.Filter) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OrderBy);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Filter);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OrderBy);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Filter);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListJobTriggersRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            OrderBy = input.ReadString();
            break;
          }
          case 42: {
            Filter = input.ReadString();
            break;
          }
          case 58: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            OrderBy = input.ReadString();
            break;
          }
          case 42: {
            Filter = input.ReadString();
            break;
          }
          case 58: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for ListJobTriggers.
  /// </summary>
  public sealed partial class ListJobTriggersResponse : pb::IMessage<ListJobTriggersResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListJobTriggersResponse> _parser = new pb::MessageParser<ListJobTriggersResponse>(() => new ListJobTriggersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListJobTriggersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobTriggersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobTriggersResponse(ListJobTriggersResponse other) : this() {
      jobTriggers_ = other.jobTriggers_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListJobTriggersResponse Clone() {
      return new ListJobTriggersResponse(this);
    }

    /// <summary>Field number for the "job_triggers" field.</summary>
    public const int JobTriggersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.JobTrigger> _repeated_jobTriggers_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.JobTrigger.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.JobTrigger> jobTriggers_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.JobTrigger>();
    /// <summary>
    /// List of triggeredJobs, up to page_size in ListJobTriggersRequest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.JobTrigger> JobTriggers {
      get { return jobTriggers_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// If the next page is available then the next page token to be used
    /// in following ListJobTriggers request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListJobTriggersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListJobTriggersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!jobTriggers_.Equals(other.jobTriggers_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= jobTriggers_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      jobTriggers_.WriteTo(output, _repeated_jobTriggers_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      jobTriggers_.WriteTo(ref output, _repeated_jobTriggers_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += jobTriggers_.CalculateSize(_repeated_jobTriggers_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListJobTriggersResponse other) {
      if (other == null) {
        return;
      }
      jobTriggers_.Add(other.jobTriggers_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            jobTriggers_.AddEntriesFrom(input, _repeated_jobTriggers_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            jobTriggers_.AddEntriesFrom(ref input, _repeated_jobTriggers_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for DeleteJobTrigger.
  /// </summary>
  public sealed partial class DeleteJobTriggerRequest : pb::IMessage<DeleteJobTriggerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteJobTriggerRequest> _parser = new pb::MessageParser<DeleteJobTriggerRequest>(() => new DeleteJobTriggerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteJobTriggerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteJobTriggerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteJobTriggerRequest(DeleteJobTriggerRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteJobTriggerRequest Clone() {
      return new DeleteJobTriggerRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the project and the triggeredJob, for example
    /// `projects/dlp-test-project/jobTriggers/53234423`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteJobTriggerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteJobTriggerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteJobTriggerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Controls what and how to inspect for findings.
  /// </summary>
  public sealed partial class InspectJobConfig : pb::IMessage<InspectJobConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InspectJobConfig> _parser = new pb::MessageParser<InspectJobConfig>(() => new InspectJobConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InspectJobConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectJobConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectJobConfig(InspectJobConfig other) : this() {
      storageConfig_ = other.storageConfig_ != null ? other.storageConfig_.Clone() : null;
      inspectConfig_ = other.inspectConfig_ != null ? other.inspectConfig_.Clone() : null;
      inspectTemplateName_ = other.inspectTemplateName_;
      actions_ = other.actions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InspectJobConfig Clone() {
      return new InspectJobConfig(this);
    }

    /// <summary>Field number for the "storage_config" field.</summary>
    public const int StorageConfigFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.StorageConfig storageConfig_;
    /// <summary>
    /// The data to scan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.StorageConfig StorageConfig {
      get { return storageConfig_; }
      set {
        storageConfig_ = value;
      }
    }

    /// <summary>Field number for the "inspect_config" field.</summary>
    public const int InspectConfigFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.InspectConfig inspectConfig_;
    /// <summary>
    /// How and what to scan for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectConfig InspectConfig {
      get { return inspectConfig_; }
      set {
        inspectConfig_ = value;
      }
    }

    /// <summary>Field number for the "inspect_template_name" field.</summary>
    public const int InspectTemplateNameFieldNumber = 3;
    private string inspectTemplateName_ = "";
    /// <summary>
    /// If provided, will be used as the default for all values in InspectConfig.
    /// `inspect_config` will be merged into the values persisted as part of the
    /// template.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InspectTemplateName {
      get { return inspectTemplateName_; }
      set {
        inspectTemplateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Action> _repeated_actions_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Dlp.V2.Action.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Action> actions_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Action>();
    /// <summary>
    /// Actions to execute at the completion of the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Action> Actions {
      get { return actions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InspectJobConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InspectJobConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StorageConfig, other.StorageConfig)) return false;
      if (!object.Equals(InspectConfig, other.InspectConfig)) return false;
      if (InspectTemplateName != other.InspectTemplateName) return false;
      if(!actions_.Equals(other.actions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (storageConfig_ != null) hash ^= StorageConfig.GetHashCode();
      if (inspectConfig_ != null) hash ^= InspectConfig.GetHashCode();
      if (InspectTemplateName.Length != 0) hash ^= InspectTemplateName.GetHashCode();
      hash ^= actions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (storageConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StorageConfig);
      }
      if (inspectConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InspectConfig);
      }
      if (InspectTemplateName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InspectTemplateName);
      }
      actions_.WriteTo(output, _repeated_actions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (storageConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StorageConfig);
      }
      if (inspectConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InspectConfig);
      }
      if (InspectTemplateName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InspectTemplateName);
      }
      actions_.WriteTo(ref output, _repeated_actions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (storageConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StorageConfig);
      }
      if (inspectConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InspectConfig);
      }
      if (InspectTemplateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InspectTemplateName);
      }
      size += actions_.CalculateSize(_repeated_actions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InspectJobConfig other) {
      if (other == null) {
        return;
      }
      if (other.storageConfig_ != null) {
        if (storageConfig_ == null) {
          StorageConfig = new global::Google.Cloud.Dlp.V2.StorageConfig();
        }
        StorageConfig.MergeFrom(other.StorageConfig);
      }
      if (other.inspectConfig_ != null) {
        if (inspectConfig_ == null) {
          InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
        }
        InspectConfig.MergeFrom(other.InspectConfig);
      }
      if (other.InspectTemplateName.Length != 0) {
        InspectTemplateName = other.InspectTemplateName;
      }
      actions_.Add(other.actions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (storageConfig_ == null) {
              StorageConfig = new global::Google.Cloud.Dlp.V2.StorageConfig();
            }
            input.ReadMessage(StorageConfig);
            break;
          }
          case 18: {
            if (inspectConfig_ == null) {
              InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
            }
            input.ReadMessage(InspectConfig);
            break;
          }
          case 26: {
            InspectTemplateName = input.ReadString();
            break;
          }
          case 34: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (storageConfig_ == null) {
              StorageConfig = new global::Google.Cloud.Dlp.V2.StorageConfig();
            }
            input.ReadMessage(StorageConfig);
            break;
          }
          case 18: {
            if (inspectConfig_ == null) {
              InspectConfig = new global::Google.Cloud.Dlp.V2.InspectConfig();
            }
            input.ReadMessage(InspectConfig);
            break;
          }
          case 26: {
            InspectTemplateName = input.ReadString();
            break;
          }
          case 34: {
            actions_.AddEntriesFrom(ref input, _repeated_actions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Combines all of the information about a DLP job.
  /// </summary>
  public sealed partial class DlpJob : pb::IMessage<DlpJob>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DlpJob> _parser = new pb::MessageParser<DlpJob>(() => new DlpJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DlpJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DlpJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DlpJob(DlpJob other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      state_ = other.state_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      jobTriggerName_ = other.jobTriggerName_;
      errors_ = other.errors_.Clone();
      switch (other.DetailsCase) {
        case DetailsOneofCase.RiskDetails:
          RiskDetails = other.RiskDetails.Clone();
          break;
        case DetailsOneofCase.InspectDetails:
          InspectDetails = other.InspectDetails.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DlpJob Clone() {
      return new DlpJob(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The server-assigned name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.DlpJobType type_ = global::Google.Cloud.Dlp.V2.DlpJobType.Unspecified;
    /// <summary>
    /// The type of job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DlpJobType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.DlpJob.Types.JobState state_ = global::Google.Cloud.Dlp.V2.DlpJob.Types.JobState.Unspecified;
    /// <summary>
    /// State of a job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DlpJob.Types.JobState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "risk_details" field.</summary>
    public const int RiskDetailsFieldNumber = 4;
    /// <summary>
    /// Results from analyzing risk of a data source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails RiskDetails {
      get { return detailsCase_ == DetailsOneofCase.RiskDetails ? (global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.RiskDetails;
      }
    }

    /// <summary>Field number for the "inspect_details" field.</summary>
    public const int InspectDetailsFieldNumber = 5;
    /// <summary>
    /// Results from inspecting a data source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InspectDataSourceDetails InspectDetails {
      get { return detailsCase_ == DetailsOneofCase.InspectDetails ? (global::Google.Cloud.Dlp.V2.InspectDataSourceDetails) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.InspectDetails;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Time when the job was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Time when the job started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Time when the job finished.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "job_trigger_name" field.</summary>
    public const int JobTriggerNameFieldNumber = 10;
    private string jobTriggerName_ = "";
    /// <summary>
    /// If created by a job trigger, the resource name of the trigger that
    /// instantiated the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobTriggerName {
      get { return jobTriggerName_; }
      set {
        jobTriggerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "errors" field.</summary>
    public const int ErrorsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Error> _repeated_errors_codec
        = pb::FieldCodec.ForMessage(90, global::Google.Cloud.Dlp.V2.Error.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Error> errors_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Error>();
    /// <summary>
    /// A stream of errors encountered running the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Error> Errors {
      get { return errors_; }
    }

    private object details_;
    /// <summary>Enum of possible cases for the "details" oneof.</summary>
    public enum DetailsOneofCase {
      None = 0,
      RiskDetails = 4,
      InspectDetails = 5,
    }
    private DetailsOneofCase detailsCase_ = DetailsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailsOneofCase DetailsCase {
      get { return detailsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDetails() {
      detailsCase_ = DetailsOneofCase.None;
      details_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DlpJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DlpJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (State != other.State) return false;
      if (!object.Equals(RiskDetails, other.RiskDetails)) return false;
      if (!object.Equals(InspectDetails, other.InspectDetails)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (JobTriggerName != other.JobTriggerName) return false;
      if(!errors_.Equals(other.errors_)) return false;
      if (DetailsCase != other.DetailsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::Google.Cloud.Dlp.V2.DlpJobType.Unspecified) hash ^= Type.GetHashCode();
      if (State != global::Google.Cloud.Dlp.V2.DlpJob.Types.JobState.Unspecified) hash ^= State.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.RiskDetails) hash ^= RiskDetails.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.InspectDetails) hash ^= InspectDetails.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (JobTriggerName.Length != 0) hash ^= JobTriggerName.GetHashCode();
      hash ^= errors_.GetHashCode();
      hash ^= (int) detailsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Google.Cloud.Dlp.V2.DlpJobType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (State != global::Google.Cloud.Dlp.V2.DlpJob.Types.JobState.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (detailsCase_ == DetailsOneofCase.RiskDetails) {
        output.WriteRawTag(34);
        output.WriteMessage(RiskDetails);
      }
      if (detailsCase_ == DetailsOneofCase.InspectDetails) {
        output.WriteRawTag(42);
        output.WriteMessage(InspectDetails);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EndTime);
      }
      if (JobTriggerName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(JobTriggerName);
      }
      errors_.WriteTo(output, _repeated_errors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Google.Cloud.Dlp.V2.DlpJobType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (State != global::Google.Cloud.Dlp.V2.DlpJob.Types.JobState.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (detailsCase_ == DetailsOneofCase.RiskDetails) {
        output.WriteRawTag(34);
        output.WriteMessage(RiskDetails);
      }
      if (detailsCase_ == DetailsOneofCase.InspectDetails) {
        output.WriteRawTag(42);
        output.WriteMessage(InspectDetails);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EndTime);
      }
      if (JobTriggerName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(JobTriggerName);
      }
      errors_.WriteTo(ref output, _repeated_errors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Google.Cloud.Dlp.V2.DlpJobType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (State != global::Google.Cloud.Dlp.V2.DlpJob.Types.JobState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (detailsCase_ == DetailsOneofCase.RiskDetails) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RiskDetails);
      }
      if (detailsCase_ == DetailsOneofCase.InspectDetails) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InspectDetails);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (JobTriggerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobTriggerName);
      }
      size += errors_.CalculateSize(_repeated_errors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DlpJob other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::Google.Cloud.Dlp.V2.DlpJobType.Unspecified) {
        Type = other.Type;
      }
      if (other.State != global::Google.Cloud.Dlp.V2.DlpJob.Types.JobState.Unspecified) {
        State = other.State;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.JobTriggerName.Length != 0) {
        JobTriggerName = other.JobTriggerName;
      }
      errors_.Add(other.errors_);
      switch (other.DetailsCase) {
        case DetailsOneofCase.RiskDetails:
          if (RiskDetails == null) {
            RiskDetails = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails();
          }
          RiskDetails.MergeFrom(other.RiskDetails);
          break;
        case DetailsOneofCase.InspectDetails:
          if (InspectDetails == null) {
            InspectDetails = new global::Google.Cloud.Dlp.V2.InspectDataSourceDetails();
          }
          InspectDetails.MergeFrom(other.InspectDetails);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Google.Cloud.Dlp.V2.DlpJobType) input.ReadEnum();
            break;
          }
          case 24: {
            State = (global::Google.Cloud.Dlp.V2.DlpJob.Types.JobState) input.ReadEnum();
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails();
            if (detailsCase_ == DetailsOneofCase.RiskDetails) {
              subBuilder.MergeFrom(RiskDetails);
            }
            input.ReadMessage(subBuilder);
            RiskDetails = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.InspectDataSourceDetails subBuilder = new global::Google.Cloud.Dlp.V2.InspectDataSourceDetails();
            if (detailsCase_ == DetailsOneofCase.InspectDetails) {
              subBuilder.MergeFrom(InspectDetails);
            }
            input.ReadMessage(subBuilder);
            InspectDetails = subBuilder;
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 66: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 82: {
            JobTriggerName = input.ReadString();
            break;
          }
          case 90: {
            errors_.AddEntriesFrom(input, _repeated_errors_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Google.Cloud.Dlp.V2.DlpJobType) input.ReadEnum();
            break;
          }
          case 24: {
            State = (global::Google.Cloud.Dlp.V2.DlpJob.Types.JobState) input.ReadEnum();
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails subBuilder = new global::Google.Cloud.Dlp.V2.AnalyzeDataSourceRiskDetails();
            if (detailsCase_ == DetailsOneofCase.RiskDetails) {
              subBuilder.MergeFrom(RiskDetails);
            }
            input.ReadMessage(subBuilder);
            RiskDetails = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.InspectDataSourceDetails subBuilder = new global::Google.Cloud.Dlp.V2.InspectDataSourceDetails();
            if (detailsCase_ == DetailsOneofCase.InspectDetails) {
              subBuilder.MergeFrom(InspectDetails);
            }
            input.ReadMessage(subBuilder);
            InspectDetails = subBuilder;
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 66: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 82: {
            JobTriggerName = input.ReadString();
            break;
          }
          case 90: {
            errors_.AddEntriesFrom(ref input, _repeated_errors_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DlpJob message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible states of a job. New items may be added.
      /// </summary>
      public enum JobState {
        /// <summary>
        /// Unused.
        /// </summary>
        [pbr::OriginalName("JOB_STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The job has not yet started.
        /// </summary>
        [pbr::OriginalName("PENDING")] Pending = 1,
        /// <summary>
        /// The job is currently running. Once a job has finished it will transition
        /// to FAILED or DONE.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// The job is no longer running.
        /// </summary>
        [pbr::OriginalName("DONE")] Done = 3,
        /// <summary>
        /// The job was canceled before it could complete.
        /// </summary>
        [pbr::OriginalName("CANCELED")] Canceled = 4,
        /// <summary>
        /// The job had an error and did not complete.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 5,
        /// <summary>
        /// The job is currently accepting findings via hybridInspect.
        /// A hybrid job in ACTIVE state may continue to have findings added to it
        /// through calling of hybridInspect. After the job has finished no more
        /// calls to hybridInspect may be made. ACTIVE jobs can transition to DONE.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// The request message for [DlpJobs.GetDlpJob][].
  /// </summary>
  public sealed partial class GetDlpJobRequest : pb::IMessage<GetDlpJobRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDlpJobRequest> _parser = new pb::MessageParser<GetDlpJobRequest>(() => new GetDlpJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDlpJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDlpJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDlpJobRequest(GetDlpJobRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDlpJobRequest Clone() {
      return new GetDlpJobRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the DlpJob resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDlpJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDlpJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDlpJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request message for listing DLP jobs.
  /// </summary>
  public sealed partial class ListDlpJobsRequest : pb::IMessage<ListDlpJobsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDlpJobsRequest> _parser = new pb::MessageParser<ListDlpJobsRequest>(() => new ListDlpJobsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDlpJobsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDlpJobsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDlpJobsRequest(ListDlpJobsRequest other) : this() {
      parent_ = other.parent_;
      filter_ = other.filter_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      type_ = other.type_;
      orderBy_ = other.orderBy_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDlpJobsRequest Clone() {
      return new ListDlpJobsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 4;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent resource name.
    ///
    /// The format of this value varies depending on whether you have [specified a
    /// processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    /// <summary>
    /// Allows filtering.
    ///
    /// Supported syntax:
    ///
    /// * Filter expressions are made up of one or more restrictions.
    /// * Restrictions can be combined by `AND` or `OR` logical operators. A
    /// sequence of restrictions implicitly uses `AND`.
    /// * A restriction has the form of `{field} {operator} {value}`.
    /// * Supported fields/values for inspect jobs:
    ///     - `state` - PENDING|RUNNING|CANCELED|FINISHED|FAILED
    ///     - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY
    ///     - `trigger_name` - The resource name of the trigger that created job.
    ///     - 'end_time` - Corresponds to time the job finished.
    ///     - 'start_time` - Corresponds to time the job finished.
    /// * Supported fields for risk analysis jobs:
    ///     - `state` - RUNNING|CANCELED|FINISHED|FAILED
    ///     - 'end_time` - Corresponds to time the job finished.
    ///     - 'start_time` - Corresponds to time the job finished.
    /// * The operator must be `=` or `!=`.
    ///
    /// Examples:
    ///
    /// * inspected_storage = cloud_storage AND state = done
    /// * inspected_storage = cloud_storage OR inspected_storage = bigquery
    /// * inspected_storage = cloud_storage AND (state = done OR state = canceled)
    /// * end_time > \"2017-12-12T00:00:00+00:00\"
    ///
    /// The length of this field should be no more than 500 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The standard list page size.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// The standard list page token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::Google.Cloud.Dlp.V2.DlpJobType type_ = global::Google.Cloud.Dlp.V2.DlpJobType.Unspecified;
    /// <summary>
    /// The type of job. Defaults to `DlpJobType.INSPECT`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DlpJobType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 6;
    private string orderBy_ = "";
    /// <summary>
    /// Comma separated list of fields to order by,
    /// followed by `asc` or `desc` postfix. This list is case-insensitive,
    /// default sorting order is ascending, redundant space characters are
    /// insignificant.
    ///
    /// Example: `name asc, end_time asc, create_time desc`
    ///
    /// Supported fields are:
    ///
    /// - `create_time`: corresponds to time the job was created.
    /// - `end_time`: corresponds to time the job ended.
    /// - `name`: corresponds to job's name.
    /// - `state`: corresponds to `state`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 7;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDlpJobsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDlpJobsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (Filter != other.Filter) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Type != other.Type) return false;
      if (OrderBy != other.OrderBy) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Type != global::Google.Cloud.Dlp.V2.DlpJobType.Unspecified) hash ^= Type.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Parent);
      }
      if (Type != global::Google.Cloud.Dlp.V2.DlpJobType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OrderBy);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Parent);
      }
      if (Type != global::Google.Cloud.Dlp.V2.DlpJobType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OrderBy);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Type != global::Google.Cloud.Dlp.V2.DlpJobType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDlpJobsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Type != global::Google.Cloud.Dlp.V2.DlpJobType.Unspecified) {
        Type = other.Type;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Parent = input.ReadString();
            break;
          }
          case 40: {
            Type = (global::Google.Cloud.Dlp.V2.DlpJobType) input.ReadEnum();
            break;
          }
          case 50: {
            OrderBy = input.ReadString();
            break;
          }
          case 58: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Parent = input.ReadString();
            break;
          }
          case 40: {
            Type = (global::Google.Cloud.Dlp.V2.DlpJobType) input.ReadEnum();
            break;
          }
          case 50: {
            OrderBy = input.ReadString();
            break;
          }
          case 58: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response message for listing DLP jobs.
  /// </summary>
  public sealed partial class ListDlpJobsResponse : pb::IMessage<ListDlpJobsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDlpJobsResponse> _parser = new pb::MessageParser<ListDlpJobsResponse>(() => new ListDlpJobsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDlpJobsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDlpJobsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDlpJobsResponse(ListDlpJobsResponse other) : this() {
      jobs_ = other.jobs_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDlpJobsResponse Clone() {
      return new ListDlpJobsResponse(this);
    }

    /// <summary>Field number for the "jobs" field.</summary>
    public const int JobsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.DlpJob> _repeated_jobs_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.DlpJob.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.DlpJob> jobs_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.DlpJob>();
    /// <summary>
    /// A list of DlpJobs that matches the specified filter in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.DlpJob> Jobs {
      get { return jobs_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// The standard List next-page token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDlpJobsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDlpJobsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!jobs_.Equals(other.jobs_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= jobs_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      jobs_.WriteTo(output, _repeated_jobs_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      jobs_.WriteTo(ref output, _repeated_jobs_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += jobs_.CalculateSize(_repeated_jobs_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDlpJobsResponse other) {
      if (other == null) {
        return;
      }
      jobs_.Add(other.jobs_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            jobs_.AddEntriesFrom(input, _repeated_jobs_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            jobs_.AddEntriesFrom(ref input, _repeated_jobs_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request message for canceling a DLP job.
  /// </summary>
  public sealed partial class CancelDlpJobRequest : pb::IMessage<CancelDlpJobRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelDlpJobRequest> _parser = new pb::MessageParser<CancelDlpJobRequest>(() => new CancelDlpJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelDlpJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelDlpJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelDlpJobRequest(CancelDlpJobRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelDlpJobRequest Clone() {
      return new CancelDlpJobRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the DlpJob resource to be cancelled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelDlpJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelDlpJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelDlpJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request message for finishing a DLP hybrid job.
  /// </summary>
  public sealed partial class FinishDlpJobRequest : pb::IMessage<FinishDlpJobRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FinishDlpJobRequest> _parser = new pb::MessageParser<FinishDlpJobRequest>(() => new FinishDlpJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FinishDlpJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinishDlpJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinishDlpJobRequest(FinishDlpJobRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinishDlpJobRequest Clone() {
      return new FinishDlpJobRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the DlpJob resource to be cancelled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FinishDlpJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FinishDlpJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FinishDlpJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request message for deleting a DLP job.
  /// </summary>
  public sealed partial class DeleteDlpJobRequest : pb::IMessage<DeleteDlpJobRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDlpJobRequest> _parser = new pb::MessageParser<DeleteDlpJobRequest>(() => new DeleteDlpJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDlpJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDlpJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDlpJobRequest(DeleteDlpJobRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDlpJobRequest Clone() {
      return new DeleteDlpJobRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the DlpJob resource to be deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDlpJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDlpJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDlpJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for CreateDeidentifyTemplate.
  /// </summary>
  public sealed partial class CreateDeidentifyTemplateRequest : pb::IMessage<CreateDeidentifyTemplateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDeidentifyTemplateRequest> _parser = new pb::MessageParser<CreateDeidentifyTemplateRequest>(() => new CreateDeidentifyTemplateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateDeidentifyTemplateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDeidentifyTemplateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDeidentifyTemplateRequest(CreateDeidentifyTemplateRequest other) : this() {
      parent_ = other.parent_;
      deidentifyTemplate_ = other.deidentifyTemplate_ != null ? other.deidentifyTemplate_.Clone() : null;
      templateId_ = other.templateId_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDeidentifyTemplateRequest Clone() {
      return new CreateDeidentifyTemplateRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent resource name.
    ///
    /// The format of this value varies depending on the scope of the request
    /// (project or organization) and whether you have [specified a processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    /// + Organizations scope, location specified:&lt;br/>
    ///   `organizations/`&lt;var>ORG_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Organizations scope, no location specified (defaults to global):&lt;br/>
    ///   `organizations/`&lt;var>ORG_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deidentify_template" field.</summary>
    public const int DeidentifyTemplateFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.DeidentifyTemplate deidentifyTemplate_;
    /// <summary>
    /// Required. The DeidentifyTemplate to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DeidentifyTemplate DeidentifyTemplate {
      get { return deidentifyTemplate_; }
      set {
        deidentifyTemplate_ = value;
      }
    }

    /// <summary>Field number for the "template_id" field.</summary>
    public const int TemplateIdFieldNumber = 3;
    private string templateId_ = "";
    /// <summary>
    /// The template id can contain uppercase and lowercase letters,
    /// numbers, and hyphens; that is, it must match the regular
    /// expression: `[a-zA-Z\d-_]+`. The maximum length is 100
    /// characters. Can be empty to allow the system to generate one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemplateId {
      get { return templateId_; }
      set {
        templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 4;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateDeidentifyTemplateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateDeidentifyTemplateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(DeidentifyTemplate, other.DeidentifyTemplate)) return false;
      if (TemplateId != other.TemplateId) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (deidentifyTemplate_ != null) hash ^= DeidentifyTemplate.GetHashCode();
      if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (deidentifyTemplate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeidentifyTemplate);
      }
      if (TemplateId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TemplateId);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (deidentifyTemplate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeidentifyTemplate);
      }
      if (TemplateId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TemplateId);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (deidentifyTemplate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeidentifyTemplate);
      }
      if (TemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateDeidentifyTemplateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.deidentifyTemplate_ != null) {
        if (deidentifyTemplate_ == null) {
          DeidentifyTemplate = new global::Google.Cloud.Dlp.V2.DeidentifyTemplate();
        }
        DeidentifyTemplate.MergeFrom(other.DeidentifyTemplate);
      }
      if (other.TemplateId.Length != 0) {
        TemplateId = other.TemplateId;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (deidentifyTemplate_ == null) {
              DeidentifyTemplate = new global::Google.Cloud.Dlp.V2.DeidentifyTemplate();
            }
            input.ReadMessage(DeidentifyTemplate);
            break;
          }
          case 26: {
            TemplateId = input.ReadString();
            break;
          }
          case 34: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (deidentifyTemplate_ == null) {
              DeidentifyTemplate = new global::Google.Cloud.Dlp.V2.DeidentifyTemplate();
            }
            input.ReadMessage(DeidentifyTemplate);
            break;
          }
          case 26: {
            TemplateId = input.ReadString();
            break;
          }
          case 34: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for UpdateDeidentifyTemplate.
  /// </summary>
  public sealed partial class UpdateDeidentifyTemplateRequest : pb::IMessage<UpdateDeidentifyTemplateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDeidentifyTemplateRequest> _parser = new pb::MessageParser<UpdateDeidentifyTemplateRequest>(() => new UpdateDeidentifyTemplateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateDeidentifyTemplateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDeidentifyTemplateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDeidentifyTemplateRequest(UpdateDeidentifyTemplateRequest other) : this() {
      name_ = other.name_;
      deidentifyTemplate_ = other.deidentifyTemplate_ != null ? other.deidentifyTemplate_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDeidentifyTemplateRequest Clone() {
      return new UpdateDeidentifyTemplateRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of organization and deidentify template to be updated, for
    /// example `organizations/433245324/deidentifyTemplates/432452342` or
    /// projects/project-id/deidentifyTemplates/432452342.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deidentify_template" field.</summary>
    public const int DeidentifyTemplateFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.DeidentifyTemplate deidentifyTemplate_;
    /// <summary>
    /// New DeidentifyTemplate value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DeidentifyTemplate DeidentifyTemplate {
      get { return deidentifyTemplate_; }
      set {
        deidentifyTemplate_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Mask to control which fields get updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateDeidentifyTemplateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateDeidentifyTemplateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(DeidentifyTemplate, other.DeidentifyTemplate)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (deidentifyTemplate_ != null) hash ^= DeidentifyTemplate.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (deidentifyTemplate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeidentifyTemplate);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (deidentifyTemplate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeidentifyTemplate);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (deidentifyTemplate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeidentifyTemplate);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateDeidentifyTemplateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.deidentifyTemplate_ != null) {
        if (deidentifyTemplate_ == null) {
          DeidentifyTemplate = new global::Google.Cloud.Dlp.V2.DeidentifyTemplate();
        }
        DeidentifyTemplate.MergeFrom(other.DeidentifyTemplate);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (deidentifyTemplate_ == null) {
              DeidentifyTemplate = new global::Google.Cloud.Dlp.V2.DeidentifyTemplate();
            }
            input.ReadMessage(DeidentifyTemplate);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (deidentifyTemplate_ == null) {
              DeidentifyTemplate = new global::Google.Cloud.Dlp.V2.DeidentifyTemplate();
            }
            input.ReadMessage(DeidentifyTemplate);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for GetDeidentifyTemplate.
  /// </summary>
  public sealed partial class GetDeidentifyTemplateRequest : pb::IMessage<GetDeidentifyTemplateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDeidentifyTemplateRequest> _parser = new pb::MessageParser<GetDeidentifyTemplateRequest>(() => new GetDeidentifyTemplateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDeidentifyTemplateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeidentifyTemplateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeidentifyTemplateRequest(GetDeidentifyTemplateRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDeidentifyTemplateRequest Clone() {
      return new GetDeidentifyTemplateRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the organization and deidentify template to be read, for
    /// example `organizations/433245324/deidentifyTemplates/432452342` or
    /// projects/project-id/deidentifyTemplates/432452342.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDeidentifyTemplateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDeidentifyTemplateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDeidentifyTemplateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for ListDeidentifyTemplates.
  /// </summary>
  public sealed partial class ListDeidentifyTemplatesRequest : pb::IMessage<ListDeidentifyTemplatesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDeidentifyTemplatesRequest> _parser = new pb::MessageParser<ListDeidentifyTemplatesRequest>(() => new ListDeidentifyTemplatesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDeidentifyTemplatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeidentifyTemplatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeidentifyTemplatesRequest(ListDeidentifyTemplatesRequest other) : this() {
      parent_ = other.parent_;
      pageToken_ = other.pageToken_;
      pageSize_ = other.pageSize_;
      orderBy_ = other.orderBy_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeidentifyTemplatesRequest Clone() {
      return new ListDeidentifyTemplatesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent resource name.
    ///
    /// The format of this value varies depending on the scope of the request
    /// (project or organization) and whether you have [specified a processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    /// + Organizations scope, location specified:&lt;br/>
    ///   `organizations/`&lt;var>ORG_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Organizations scope, no location specified (defaults to global):&lt;br/>
    ///   `organizations/`&lt;var>ORG_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 2;
    private string pageToken_ = "";
    /// <summary>
    /// Page token to continue retrieval. Comes from previous call
    /// to `ListDeidentifyTemplates`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// Size of the page, can be limited by server. If zero server returns
    /// a page of max size 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 4;
    private string orderBy_ = "";
    /// <summary>
    /// Comma separated list of fields to order by,
    /// followed by `asc` or `desc` postfix. This list is case-insensitive,
    /// default sorting order is ascending, redundant space characters are
    /// insignificant.
    ///
    /// Example: `name asc,update_time, create_time desc`
    ///
    /// Supported fields are:
    ///
    /// - `create_time`: corresponds to time the template was created.
    /// - `update_time`: corresponds to time the template was last updated.
    /// - `name`: corresponds to template's name.
    /// - `display_name`: corresponds to template's display name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 5;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDeidentifyTemplatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDeidentifyTemplatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageToken != other.PageToken) return false;
      if (PageSize != other.PageSize) return false;
      if (OrderBy != other.OrderBy) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OrderBy);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OrderBy);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDeidentifyTemplatesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            OrderBy = input.ReadString();
            break;
          }
          case 42: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            OrderBy = input.ReadString();
            break;
          }
          case 42: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for ListDeidentifyTemplates.
  /// </summary>
  public sealed partial class ListDeidentifyTemplatesResponse : pb::IMessage<ListDeidentifyTemplatesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDeidentifyTemplatesResponse> _parser = new pb::MessageParser<ListDeidentifyTemplatesResponse>(() => new ListDeidentifyTemplatesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDeidentifyTemplatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeidentifyTemplatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeidentifyTemplatesResponse(ListDeidentifyTemplatesResponse other) : this() {
      deidentifyTemplates_ = other.deidentifyTemplates_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDeidentifyTemplatesResponse Clone() {
      return new ListDeidentifyTemplatesResponse(this);
    }

    /// <summary>Field number for the "deidentify_templates" field.</summary>
    public const int DeidentifyTemplatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.DeidentifyTemplate> _repeated_deidentifyTemplates_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.DeidentifyTemplate.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.DeidentifyTemplate> deidentifyTemplates_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.DeidentifyTemplate>();
    /// <summary>
    /// List of deidentify templates, up to page_size in
    /// ListDeidentifyTemplatesRequest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.DeidentifyTemplate> DeidentifyTemplates {
      get { return deidentifyTemplates_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// If the next page is available then the next page token to be used
    /// in following ListDeidentifyTemplates request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDeidentifyTemplatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDeidentifyTemplatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!deidentifyTemplates_.Equals(other.deidentifyTemplates_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= deidentifyTemplates_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      deidentifyTemplates_.WriteTo(output, _repeated_deidentifyTemplates_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      deidentifyTemplates_.WriteTo(ref output, _repeated_deidentifyTemplates_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += deidentifyTemplates_.CalculateSize(_repeated_deidentifyTemplates_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDeidentifyTemplatesResponse other) {
      if (other == null) {
        return;
      }
      deidentifyTemplates_.Add(other.deidentifyTemplates_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            deidentifyTemplates_.AddEntriesFrom(input, _repeated_deidentifyTemplates_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            deidentifyTemplates_.AddEntriesFrom(ref input, _repeated_deidentifyTemplates_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for DeleteDeidentifyTemplate.
  /// </summary>
  public sealed partial class DeleteDeidentifyTemplateRequest : pb::IMessage<DeleteDeidentifyTemplateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDeidentifyTemplateRequest> _parser = new pb::MessageParser<DeleteDeidentifyTemplateRequest>(() => new DeleteDeidentifyTemplateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDeidentifyTemplateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDeidentifyTemplateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDeidentifyTemplateRequest(DeleteDeidentifyTemplateRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDeidentifyTemplateRequest Clone() {
      return new DeleteDeidentifyTemplateRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the organization and deidentify template to be deleted,
    /// for example `organizations/433245324/deidentifyTemplates/432452342` or
    /// projects/project-id/deidentifyTemplates/432452342.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDeidentifyTemplateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDeidentifyTemplateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDeidentifyTemplateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Configuration for a custom dictionary created from a data source of any size
  /// up to the maximum size defined in the
  /// [limits](https://cloud.google.com/dlp/limits) page. The artifacts of
  /// dictionary creation are stored in the specified Google Cloud Storage
  /// location. Consider using `CustomInfoType.Dictionary` for smaller dictionaries
  /// that satisfy the size requirements.
  /// </summary>
  public sealed partial class LargeCustomDictionaryConfig : pb::IMessage<LargeCustomDictionaryConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LargeCustomDictionaryConfig> _parser = new pb::MessageParser<LargeCustomDictionaryConfig>(() => new LargeCustomDictionaryConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LargeCustomDictionaryConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LargeCustomDictionaryConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LargeCustomDictionaryConfig(LargeCustomDictionaryConfig other) : this() {
      outputPath_ = other.outputPath_ != null ? other.outputPath_.Clone() : null;
      switch (other.SourceCase) {
        case SourceOneofCase.CloudStorageFileSet:
          CloudStorageFileSet = other.CloudStorageFileSet.Clone();
          break;
        case SourceOneofCase.BigQueryField:
          BigQueryField = other.BigQueryField.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LargeCustomDictionaryConfig Clone() {
      return new LargeCustomDictionaryConfig(this);
    }

    /// <summary>Field number for the "output_path" field.</summary>
    public const int OutputPathFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.CloudStoragePath outputPath_;
    /// <summary>
    /// Location to store dictionary artifacts in Google Cloud Storage. These files
    /// will only be accessible by project owners and the DLP API. If any of these
    /// artifacts are modified, the dictionary is considered invalid and can no
    /// longer be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CloudStoragePath OutputPath {
      get { return outputPath_; }
      set {
        outputPath_ = value;
      }
    }

    /// <summary>Field number for the "cloud_storage_file_set" field.</summary>
    public const int CloudStorageFileSetFieldNumber = 2;
    /// <summary>
    /// Set of files containing newline-delimited lists of dictionary phrases.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CloudStorageFileSet CloudStorageFileSet {
      get { return sourceCase_ == SourceOneofCase.CloudStorageFileSet ? (global::Google.Cloud.Dlp.V2.CloudStorageFileSet) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.CloudStorageFileSet;
      }
    }

    /// <summary>Field number for the "big_query_field" field.</summary>
    public const int BigQueryFieldFieldNumber = 3;
    /// <summary>
    /// Field in a BigQuery table where each cell represents a dictionary phrase.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.BigQueryField BigQueryField {
      get { return sourceCase_ == SourceOneofCase.BigQueryField ? (global::Google.Cloud.Dlp.V2.BigQueryField) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.BigQueryField;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      CloudStorageFileSet = 2,
      BigQueryField = 3,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LargeCustomDictionaryConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LargeCustomDictionaryConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OutputPath, other.OutputPath)) return false;
      if (!object.Equals(CloudStorageFileSet, other.CloudStorageFileSet)) return false;
      if (!object.Equals(BigQueryField, other.BigQueryField)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (outputPath_ != null) hash ^= OutputPath.GetHashCode();
      if (sourceCase_ == SourceOneofCase.CloudStorageFileSet) hash ^= CloudStorageFileSet.GetHashCode();
      if (sourceCase_ == SourceOneofCase.BigQueryField) hash ^= BigQueryField.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (outputPath_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OutputPath);
      }
      if (sourceCase_ == SourceOneofCase.CloudStorageFileSet) {
        output.WriteRawTag(18);
        output.WriteMessage(CloudStorageFileSet);
      }
      if (sourceCase_ == SourceOneofCase.BigQueryField) {
        output.WriteRawTag(26);
        output.WriteMessage(BigQueryField);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (outputPath_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OutputPath);
      }
      if (sourceCase_ == SourceOneofCase.CloudStorageFileSet) {
        output.WriteRawTag(18);
        output.WriteMessage(CloudStorageFileSet);
      }
      if (sourceCase_ == SourceOneofCase.BigQueryField) {
        output.WriteRawTag(26);
        output.WriteMessage(BigQueryField);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (outputPath_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutputPath);
      }
      if (sourceCase_ == SourceOneofCase.CloudStorageFileSet) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloudStorageFileSet);
      }
      if (sourceCase_ == SourceOneofCase.BigQueryField) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BigQueryField);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LargeCustomDictionaryConfig other) {
      if (other == null) {
        return;
      }
      if (other.outputPath_ != null) {
        if (outputPath_ == null) {
          OutputPath = new global::Google.Cloud.Dlp.V2.CloudStoragePath();
        }
        OutputPath.MergeFrom(other.OutputPath);
      }
      switch (other.SourceCase) {
        case SourceOneofCase.CloudStorageFileSet:
          if (CloudStorageFileSet == null) {
            CloudStorageFileSet = new global::Google.Cloud.Dlp.V2.CloudStorageFileSet();
          }
          CloudStorageFileSet.MergeFrom(other.CloudStorageFileSet);
          break;
        case SourceOneofCase.BigQueryField:
          if (BigQueryField == null) {
            BigQueryField = new global::Google.Cloud.Dlp.V2.BigQueryField();
          }
          BigQueryField.MergeFrom(other.BigQueryField);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (outputPath_ == null) {
              OutputPath = new global::Google.Cloud.Dlp.V2.CloudStoragePath();
            }
            input.ReadMessage(OutputPath);
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.CloudStorageFileSet subBuilder = new global::Google.Cloud.Dlp.V2.CloudStorageFileSet();
            if (sourceCase_ == SourceOneofCase.CloudStorageFileSet) {
              subBuilder.MergeFrom(CloudStorageFileSet);
            }
            input.ReadMessage(subBuilder);
            CloudStorageFileSet = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.BigQueryField subBuilder = new global::Google.Cloud.Dlp.V2.BigQueryField();
            if (sourceCase_ == SourceOneofCase.BigQueryField) {
              subBuilder.MergeFrom(BigQueryField);
            }
            input.ReadMessage(subBuilder);
            BigQueryField = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (outputPath_ == null) {
              OutputPath = new global::Google.Cloud.Dlp.V2.CloudStoragePath();
            }
            input.ReadMessage(OutputPath);
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.CloudStorageFileSet subBuilder = new global::Google.Cloud.Dlp.V2.CloudStorageFileSet();
            if (sourceCase_ == SourceOneofCase.CloudStorageFileSet) {
              subBuilder.MergeFrom(CloudStorageFileSet);
            }
            input.ReadMessage(subBuilder);
            CloudStorageFileSet = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.BigQueryField subBuilder = new global::Google.Cloud.Dlp.V2.BigQueryField();
            if (sourceCase_ == SourceOneofCase.BigQueryField) {
              subBuilder.MergeFrom(BigQueryField);
            }
            input.ReadMessage(subBuilder);
            BigQueryField = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Summary statistics of a custom dictionary.
  /// </summary>
  public sealed partial class LargeCustomDictionaryStats : pb::IMessage<LargeCustomDictionaryStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LargeCustomDictionaryStats> _parser = new pb::MessageParser<LargeCustomDictionaryStats>(() => new LargeCustomDictionaryStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LargeCustomDictionaryStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LargeCustomDictionaryStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LargeCustomDictionaryStats(LargeCustomDictionaryStats other) : this() {
      approxNumPhrases_ = other.approxNumPhrases_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LargeCustomDictionaryStats Clone() {
      return new LargeCustomDictionaryStats(this);
    }

    /// <summary>Field number for the "approx_num_phrases" field.</summary>
    public const int ApproxNumPhrasesFieldNumber = 1;
    private long approxNumPhrases_;
    /// <summary>
    /// Approximate number of distinct phrases in the dictionary.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ApproxNumPhrases {
      get { return approxNumPhrases_; }
      set {
        approxNumPhrases_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LargeCustomDictionaryStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LargeCustomDictionaryStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApproxNumPhrases != other.ApproxNumPhrases) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApproxNumPhrases != 0L) hash ^= ApproxNumPhrases.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ApproxNumPhrases != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ApproxNumPhrases);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ApproxNumPhrases != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ApproxNumPhrases);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApproxNumPhrases != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ApproxNumPhrases);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LargeCustomDictionaryStats other) {
      if (other == null) {
        return;
      }
      if (other.ApproxNumPhrases != 0L) {
        ApproxNumPhrases = other.ApproxNumPhrases;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApproxNumPhrases = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ApproxNumPhrases = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Configuration for stored infoTypes. All fields and subfield are provided
  /// by the user. For more information, see
  /// https://cloud.google.com/dlp/docs/creating-custom-infotypes.
  /// </summary>
  public sealed partial class StoredInfoTypeConfig : pb::IMessage<StoredInfoTypeConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StoredInfoTypeConfig> _parser = new pb::MessageParser<StoredInfoTypeConfig>(() => new StoredInfoTypeConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoredInfoTypeConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredInfoTypeConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredInfoTypeConfig(StoredInfoTypeConfig other) : this() {
      displayName_ = other.displayName_;
      description_ = other.description_;
      switch (other.TypeCase) {
        case TypeOneofCase.LargeCustomDictionary:
          LargeCustomDictionary = other.LargeCustomDictionary.Clone();
          break;
        case TypeOneofCase.Dictionary:
          Dictionary = other.Dictionary.Clone();
          break;
        case TypeOneofCase.Regex:
          Regex = other.Regex.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredInfoTypeConfig Clone() {
      return new StoredInfoTypeConfig(this);
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 1;
    private string displayName_ = "";
    /// <summary>
    /// Display name of the StoredInfoType (max 256 characters).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Description of the StoredInfoType (max 256 characters).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "large_custom_dictionary" field.</summary>
    public const int LargeCustomDictionaryFieldNumber = 3;
    /// <summary>
    /// StoredInfoType where findings are defined by a dictionary of phrases.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.LargeCustomDictionaryConfig LargeCustomDictionary {
      get { return typeCase_ == TypeOneofCase.LargeCustomDictionary ? (global::Google.Cloud.Dlp.V2.LargeCustomDictionaryConfig) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.LargeCustomDictionary;
      }
    }

    /// <summary>Field number for the "dictionary" field.</summary>
    public const int DictionaryFieldNumber = 4;
    /// <summary>
    /// Store dictionary-based CustomInfoType.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary Dictionary {
      get { return typeCase_ == TypeOneofCase.Dictionary ? (global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Dictionary;
      }
    }

    /// <summary>Field number for the "regex" field.</summary>
    public const int RegexFieldNumber = 5;
    /// <summary>
    /// Store regular expression-based StoredInfoType.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex Regex {
      get { return typeCase_ == TypeOneofCase.Regex ? (global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Regex;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      LargeCustomDictionary = 3,
      Dictionary = 4,
      Regex = 5,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoredInfoTypeConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoredInfoTypeConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(LargeCustomDictionary, other.LargeCustomDictionary)) return false;
      if (!object.Equals(Dictionary, other.Dictionary)) return false;
      if (!object.Equals(Regex, other.Regex)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (typeCase_ == TypeOneofCase.LargeCustomDictionary) hash ^= LargeCustomDictionary.GetHashCode();
      if (typeCase_ == TypeOneofCase.Dictionary) hash ^= Dictionary.GetHashCode();
      if (typeCase_ == TypeOneofCase.Regex) hash ^= Regex.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (typeCase_ == TypeOneofCase.LargeCustomDictionary) {
        output.WriteRawTag(26);
        output.WriteMessage(LargeCustomDictionary);
      }
      if (typeCase_ == TypeOneofCase.Dictionary) {
        output.WriteRawTag(34);
        output.WriteMessage(Dictionary);
      }
      if (typeCase_ == TypeOneofCase.Regex) {
        output.WriteRawTag(42);
        output.WriteMessage(Regex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (typeCase_ == TypeOneofCase.LargeCustomDictionary) {
        output.WriteRawTag(26);
        output.WriteMessage(LargeCustomDictionary);
      }
      if (typeCase_ == TypeOneofCase.Dictionary) {
        output.WriteRawTag(34);
        output.WriteMessage(Dictionary);
      }
      if (typeCase_ == TypeOneofCase.Regex) {
        output.WriteRawTag(42);
        output.WriteMessage(Regex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (typeCase_ == TypeOneofCase.LargeCustomDictionary) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LargeCustomDictionary);
      }
      if (typeCase_ == TypeOneofCase.Dictionary) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dictionary);
      }
      if (typeCase_ == TypeOneofCase.Regex) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Regex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoredInfoTypeConfig other) {
      if (other == null) {
        return;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.LargeCustomDictionary:
          if (LargeCustomDictionary == null) {
            LargeCustomDictionary = new global::Google.Cloud.Dlp.V2.LargeCustomDictionaryConfig();
          }
          LargeCustomDictionary.MergeFrom(other.LargeCustomDictionary);
          break;
        case TypeOneofCase.Dictionary:
          if (Dictionary == null) {
            Dictionary = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary();
          }
          Dictionary.MergeFrom(other.Dictionary);
          break;
        case TypeOneofCase.Regex:
          if (Regex == null) {
            Regex = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex();
          }
          Regex.MergeFrom(other.Regex);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.LargeCustomDictionaryConfig subBuilder = new global::Google.Cloud.Dlp.V2.LargeCustomDictionaryConfig();
            if (typeCase_ == TypeOneofCase.LargeCustomDictionary) {
              subBuilder.MergeFrom(LargeCustomDictionary);
            }
            input.ReadMessage(subBuilder);
            LargeCustomDictionary = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary();
            if (typeCase_ == TypeOneofCase.Dictionary) {
              subBuilder.MergeFrom(Dictionary);
            }
            input.ReadMessage(subBuilder);
            Dictionary = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex();
            if (typeCase_ == TypeOneofCase.Regex) {
              subBuilder.MergeFrom(Regex);
            }
            input.ReadMessage(subBuilder);
            Regex = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.LargeCustomDictionaryConfig subBuilder = new global::Google.Cloud.Dlp.V2.LargeCustomDictionaryConfig();
            if (typeCase_ == TypeOneofCase.LargeCustomDictionary) {
              subBuilder.MergeFrom(LargeCustomDictionary);
            }
            input.ReadMessage(subBuilder);
            LargeCustomDictionary = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary();
            if (typeCase_ == TypeOneofCase.Dictionary) {
              subBuilder.MergeFrom(Dictionary);
            }
            input.ReadMessage(subBuilder);
            Dictionary = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex();
            if (typeCase_ == TypeOneofCase.Regex) {
              subBuilder.MergeFrom(Regex);
            }
            input.ReadMessage(subBuilder);
            Regex = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Statistics for a StoredInfoType.
  /// </summary>
  public sealed partial class StoredInfoTypeStats : pb::IMessage<StoredInfoTypeStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StoredInfoTypeStats> _parser = new pb::MessageParser<StoredInfoTypeStats>(() => new StoredInfoTypeStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoredInfoTypeStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredInfoTypeStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredInfoTypeStats(StoredInfoTypeStats other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.LargeCustomDictionary:
          LargeCustomDictionary = other.LargeCustomDictionary.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredInfoTypeStats Clone() {
      return new StoredInfoTypeStats(this);
    }

    /// <summary>Field number for the "large_custom_dictionary" field.</summary>
    public const int LargeCustomDictionaryFieldNumber = 1;
    /// <summary>
    /// StoredInfoType where findings are defined by a dictionary of phrases.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.LargeCustomDictionaryStats LargeCustomDictionary {
      get { return typeCase_ == TypeOneofCase.LargeCustomDictionary ? (global::Google.Cloud.Dlp.V2.LargeCustomDictionaryStats) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.LargeCustomDictionary;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      LargeCustomDictionary = 1,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoredInfoTypeStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoredInfoTypeStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LargeCustomDictionary, other.LargeCustomDictionary)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.LargeCustomDictionary) hash ^= LargeCustomDictionary.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (typeCase_ == TypeOneofCase.LargeCustomDictionary) {
        output.WriteRawTag(10);
        output.WriteMessage(LargeCustomDictionary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (typeCase_ == TypeOneofCase.LargeCustomDictionary) {
        output.WriteRawTag(10);
        output.WriteMessage(LargeCustomDictionary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.LargeCustomDictionary) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LargeCustomDictionary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoredInfoTypeStats other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.LargeCustomDictionary:
          if (LargeCustomDictionary == null) {
            LargeCustomDictionary = new global::Google.Cloud.Dlp.V2.LargeCustomDictionaryStats();
          }
          LargeCustomDictionary.MergeFrom(other.LargeCustomDictionary);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.LargeCustomDictionaryStats subBuilder = new global::Google.Cloud.Dlp.V2.LargeCustomDictionaryStats();
            if (typeCase_ == TypeOneofCase.LargeCustomDictionary) {
              subBuilder.MergeFrom(LargeCustomDictionary);
            }
            input.ReadMessage(subBuilder);
            LargeCustomDictionary = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Dlp.V2.LargeCustomDictionaryStats subBuilder = new global::Google.Cloud.Dlp.V2.LargeCustomDictionaryStats();
            if (typeCase_ == TypeOneofCase.LargeCustomDictionary) {
              subBuilder.MergeFrom(LargeCustomDictionary);
            }
            input.ReadMessage(subBuilder);
            LargeCustomDictionary = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Version of a StoredInfoType, including the configuration used to build it,
  /// create timestamp, and current state.
  /// </summary>
  public sealed partial class StoredInfoTypeVersion : pb::IMessage<StoredInfoTypeVersion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StoredInfoTypeVersion> _parser = new pb::MessageParser<StoredInfoTypeVersion>(() => new StoredInfoTypeVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoredInfoTypeVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredInfoTypeVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredInfoTypeVersion(StoredInfoTypeVersion other) : this() {
      config_ = other.config_ != null ? other.config_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      state_ = other.state_;
      errors_ = other.errors_.Clone();
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredInfoTypeVersion Clone() {
      return new StoredInfoTypeVersion(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig config_;
    /// <summary>
    /// StoredInfoType configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Create timestamp of the version. Read-only, determined by the system
    /// when the version is created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.StoredInfoTypeState state_ = global::Google.Cloud.Dlp.V2.StoredInfoTypeState.Unspecified;
    /// <summary>
    /// Stored info type version state. Read-only, updated by the system
    /// during dictionary creation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.StoredInfoTypeState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "errors" field.</summary>
    public const int ErrorsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Error> _repeated_errors_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Dlp.V2.Error.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Error> errors_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Error>();
    /// <summary>
    /// Errors that occurred when creating this storedInfoType version, or
    /// anomalies detected in the storedInfoType data that render it unusable. Only
    /// the five most recent errors will be displayed, with the most recent error
    /// appearing first.
    ///
    /// For example, some of the data for stored custom dictionaries is put in
    /// the user's Google Cloud Storage bucket, and if this data is modified or
    /// deleted by the user or another system, the dictionary becomes invalid.
    ///
    /// If any errors occur, fix the problem indicated by the error message and
    /// use the UpdateStoredInfoType API method to create another version of the
    /// storedInfoType to continue using it, reusing the same `config` if it was
    /// not the source of the error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Error> Errors {
      get { return errors_; }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 5;
    private global::Google.Cloud.Dlp.V2.StoredInfoTypeStats stats_;
    /// <summary>
    /// Statistics about this storedInfoType version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.StoredInfoTypeStats Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoredInfoTypeVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoredInfoTypeVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (State != other.State) return false;
      if(!errors_.Equals(other.errors_)) return false;
      if (!object.Equals(Stats, other.Stats)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (config_ != null) hash ^= Config.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (State != global::Google.Cloud.Dlp.V2.StoredInfoTypeState.Unspecified) hash ^= State.GetHashCode();
      hash ^= errors_.GetHashCode();
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (State != global::Google.Cloud.Dlp.V2.StoredInfoTypeState.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      errors_.WriteTo(output, _repeated_errors_codec);
      if (stats_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Stats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (State != global::Google.Cloud.Dlp.V2.StoredInfoTypeState.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      errors_.WriteTo(ref output, _repeated_errors_codec);
      if (stats_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Stats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (State != global::Google.Cloud.Dlp.V2.StoredInfoTypeState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      size += errors_.CalculateSize(_repeated_errors_codec);
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoredInfoTypeVersion other) {
      if (other == null) {
        return;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.State != global::Google.Cloud.Dlp.V2.StoredInfoTypeState.Unspecified) {
        State = other.State;
      }
      errors_.Add(other.errors_);
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::Google.Cloud.Dlp.V2.StoredInfoTypeStats();
        }
        Stats.MergeFrom(other.Stats);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 24: {
            State = (global::Google.Cloud.Dlp.V2.StoredInfoTypeState) input.ReadEnum();
            break;
          }
          case 34: {
            errors_.AddEntriesFrom(input, _repeated_errors_codec);
            break;
          }
          case 42: {
            if (stats_ == null) {
              Stats = new global::Google.Cloud.Dlp.V2.StoredInfoTypeStats();
            }
            input.ReadMessage(Stats);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 24: {
            State = (global::Google.Cloud.Dlp.V2.StoredInfoTypeState) input.ReadEnum();
            break;
          }
          case 34: {
            errors_.AddEntriesFrom(ref input, _repeated_errors_codec);
            break;
          }
          case 42: {
            if (stats_ == null) {
              Stats = new global::Google.Cloud.Dlp.V2.StoredInfoTypeStats();
            }
            input.ReadMessage(Stats);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// StoredInfoType resource message that contains information about the current
  /// version and any pending updates.
  /// </summary>
  public sealed partial class StoredInfoType : pb::IMessage<StoredInfoType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StoredInfoType> _parser = new pb::MessageParser<StoredInfoType>(() => new StoredInfoType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoredInfoType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredInfoType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredInfoType(StoredInfoType other) : this() {
      name_ = other.name_;
      currentVersion_ = other.currentVersion_ != null ? other.currentVersion_.Clone() : null;
      pendingVersions_ = other.pendingVersions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredInfoType Clone() {
      return new StoredInfoType(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Resource name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_version" field.</summary>
    public const int CurrentVersionFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.StoredInfoTypeVersion currentVersion_;
    /// <summary>
    /// Current version of the stored info type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.StoredInfoTypeVersion CurrentVersion {
      get { return currentVersion_; }
      set {
        currentVersion_ = value;
      }
    }

    /// <summary>Field number for the "pending_versions" field.</summary>
    public const int PendingVersionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.StoredInfoTypeVersion> _repeated_pendingVersions_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Dlp.V2.StoredInfoTypeVersion.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.StoredInfoTypeVersion> pendingVersions_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.StoredInfoTypeVersion>();
    /// <summary>
    /// Pending versions of the stored info type. Empty if no versions are
    /// pending.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.StoredInfoTypeVersion> PendingVersions {
      get { return pendingVersions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoredInfoType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoredInfoType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(CurrentVersion, other.CurrentVersion)) return false;
      if(!pendingVersions_.Equals(other.pendingVersions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (currentVersion_ != null) hash ^= CurrentVersion.GetHashCode();
      hash ^= pendingVersions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (currentVersion_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CurrentVersion);
      }
      pendingVersions_.WriteTo(output, _repeated_pendingVersions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (currentVersion_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CurrentVersion);
      }
      pendingVersions_.WriteTo(ref output, _repeated_pendingVersions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (currentVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentVersion);
      }
      size += pendingVersions_.CalculateSize(_repeated_pendingVersions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoredInfoType other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.currentVersion_ != null) {
        if (currentVersion_ == null) {
          CurrentVersion = new global::Google.Cloud.Dlp.V2.StoredInfoTypeVersion();
        }
        CurrentVersion.MergeFrom(other.CurrentVersion);
      }
      pendingVersions_.Add(other.pendingVersions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (currentVersion_ == null) {
              CurrentVersion = new global::Google.Cloud.Dlp.V2.StoredInfoTypeVersion();
            }
            input.ReadMessage(CurrentVersion);
            break;
          }
          case 26: {
            pendingVersions_.AddEntriesFrom(input, _repeated_pendingVersions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (currentVersion_ == null) {
              CurrentVersion = new global::Google.Cloud.Dlp.V2.StoredInfoTypeVersion();
            }
            input.ReadMessage(CurrentVersion);
            break;
          }
          case 26: {
            pendingVersions_.AddEntriesFrom(ref input, _repeated_pendingVersions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for CreateStoredInfoType.
  /// </summary>
  public sealed partial class CreateStoredInfoTypeRequest : pb::IMessage<CreateStoredInfoTypeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateStoredInfoTypeRequest> _parser = new pb::MessageParser<CreateStoredInfoTypeRequest>(() => new CreateStoredInfoTypeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateStoredInfoTypeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateStoredInfoTypeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateStoredInfoTypeRequest(CreateStoredInfoTypeRequest other) : this() {
      parent_ = other.parent_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      storedInfoTypeId_ = other.storedInfoTypeId_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateStoredInfoTypeRequest Clone() {
      return new CreateStoredInfoTypeRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent resource name.
    ///
    /// The format of this value varies depending on the scope of the request
    /// (project or organization) and whether you have [specified a processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    /// + Organizations scope, location specified:&lt;br/>
    ///   `organizations/`&lt;var>ORG_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Organizations scope, no location specified (defaults to global):&lt;br/>
    ///   `organizations/`&lt;var>ORG_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig config_;
    /// <summary>
    /// Required. Configuration of the storedInfoType to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "stored_info_type_id" field.</summary>
    public const int StoredInfoTypeIdFieldNumber = 3;
    private string storedInfoTypeId_ = "";
    /// <summary>
    /// The storedInfoType ID can contain uppercase and lowercase letters,
    /// numbers, and hyphens; that is, it must match the regular
    /// expression: `[a-zA-Z\d-_]+`. The maximum length is 100
    /// characters. Can be empty to allow the system to generate one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StoredInfoTypeId {
      get { return storedInfoTypeId_; }
      set {
        storedInfoTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 4;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateStoredInfoTypeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateStoredInfoTypeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (StoredInfoTypeId != other.StoredInfoTypeId) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (StoredInfoTypeId.Length != 0) hash ^= StoredInfoTypeId.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (StoredInfoTypeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StoredInfoTypeId);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (StoredInfoTypeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StoredInfoTypeId);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (StoredInfoTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StoredInfoTypeId);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateStoredInfoTypeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.StoredInfoTypeId.Length != 0) {
        StoredInfoTypeId = other.StoredInfoTypeId;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            StoredInfoTypeId = input.ReadString();
            break;
          }
          case 34: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            StoredInfoTypeId = input.ReadString();
            break;
          }
          case 34: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for UpdateStoredInfoType.
  /// </summary>
  public sealed partial class UpdateStoredInfoTypeRequest : pb::IMessage<UpdateStoredInfoTypeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateStoredInfoTypeRequest> _parser = new pb::MessageParser<UpdateStoredInfoTypeRequest>(() => new UpdateStoredInfoTypeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateStoredInfoTypeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStoredInfoTypeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStoredInfoTypeRequest(UpdateStoredInfoTypeRequest other) : this() {
      name_ = other.name_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStoredInfoTypeRequest Clone() {
      return new UpdateStoredInfoTypeRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of organization and storedInfoType to be updated, for
    /// example `organizations/433245324/storedInfoTypes/432452342` or
    /// projects/project-id/storedInfoTypes/432452342.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig config_;
    /// <summary>
    /// Updated configuration for the storedInfoType. If not provided, a new
    /// version of the storedInfoType will be created with the existing
    /// configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Mask to control which fields get updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateStoredInfoTypeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateStoredInfoTypeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateStoredInfoTypeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Google.Cloud.Dlp.V2.StoredInfoTypeConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for GetStoredInfoType.
  /// </summary>
  public sealed partial class GetStoredInfoTypeRequest : pb::IMessage<GetStoredInfoTypeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetStoredInfoTypeRequest> _parser = new pb::MessageParser<GetStoredInfoTypeRequest>(() => new GetStoredInfoTypeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStoredInfoTypeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStoredInfoTypeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStoredInfoTypeRequest(GetStoredInfoTypeRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStoredInfoTypeRequest Clone() {
      return new GetStoredInfoTypeRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the organization and storedInfoType to be read, for
    /// example `organizations/433245324/storedInfoTypes/432452342` or
    /// projects/project-id/storedInfoTypes/432452342.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStoredInfoTypeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStoredInfoTypeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStoredInfoTypeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for ListStoredInfoTypes.
  /// </summary>
  public sealed partial class ListStoredInfoTypesRequest : pb::IMessage<ListStoredInfoTypesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListStoredInfoTypesRequest> _parser = new pb::MessageParser<ListStoredInfoTypesRequest>(() => new ListStoredInfoTypesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListStoredInfoTypesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStoredInfoTypesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStoredInfoTypesRequest(ListStoredInfoTypesRequest other) : this() {
      parent_ = other.parent_;
      pageToken_ = other.pageToken_;
      pageSize_ = other.pageSize_;
      orderBy_ = other.orderBy_;
      locationId_ = other.locationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStoredInfoTypesRequest Clone() {
      return new ListStoredInfoTypesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent resource name.
    ///
    /// The format of this value varies depending on the scope of the request
    /// (project or organization) and whether you have [specified a processing
    /// location](https://cloud.google.com/dlp/docs/specifying-location):
    ///
    /// + Projects scope, location specified:&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Projects scope, no location specified (defaults to global):&lt;br/>
    ///   `projects/`&lt;var>PROJECT_ID&lt;/var>
    /// + Organizations scope, location specified:&lt;br/>
    ///   `organizations/`&lt;var>ORG_ID&lt;/var>`/locations/`&lt;var>LOCATION_ID&lt;/var>
    /// + Organizations scope, no location specified (defaults to global):&lt;br/>
    ///   `organizations/`&lt;var>ORG_ID&lt;/var>
    ///
    /// The following example `parent` string specifies a parent project with the
    /// identifier `example-project`, and specifies the `europe-west3` location
    /// for processing data:
    ///
    ///     parent=projects/example-project/locations/europe-west3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 2;
    private string pageToken_ = "";
    /// <summary>
    /// Page token to continue retrieval. Comes from previous call
    /// to `ListStoredInfoTypes`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// Size of the page, can be limited by server. If zero server returns
    /// a page of max size 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 4;
    private string orderBy_ = "";
    /// <summary>
    /// Comma separated list of fields to order by,
    /// followed by `asc` or `desc` postfix. This list is case-insensitive,
    /// default sorting order is ascending, redundant space characters are
    /// insignificant.
    ///
    /// Example: `name asc, display_name, create_time desc`
    ///
    /// Supported fields are:
    ///
    /// - `create_time`: corresponds to time the most recent version of the
    /// resource was created.
    /// - `state`: corresponds to the state of the resource.
    /// - `name`: corresponds to resource name.
    /// - `display_name`: corresponds to info type's display name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location_id" field.</summary>
    public const int LocationIdFieldNumber = 5;
    private string locationId_ = "";
    /// <summary>
    /// Deprecated. This field has no effect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListStoredInfoTypesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListStoredInfoTypesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageToken != other.PageToken) return false;
      if (PageSize != other.PageSize) return false;
      if (OrderBy != other.OrderBy) return false;
      if (LocationId != other.LocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (LocationId.Length != 0) hash ^= LocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OrderBy);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OrderBy);
      }
      if (LocationId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (LocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListStoredInfoTypesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.LocationId.Length != 0) {
        LocationId = other.LocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            OrderBy = input.ReadString();
            break;
          }
          case 42: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            OrderBy = input.ReadString();
            break;
          }
          case 42: {
            LocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for ListStoredInfoTypes.
  /// </summary>
  public sealed partial class ListStoredInfoTypesResponse : pb::IMessage<ListStoredInfoTypesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListStoredInfoTypesResponse> _parser = new pb::MessageParser<ListStoredInfoTypesResponse>(() => new ListStoredInfoTypesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListStoredInfoTypesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStoredInfoTypesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStoredInfoTypesResponse(ListStoredInfoTypesResponse other) : this() {
      storedInfoTypes_ = other.storedInfoTypes_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStoredInfoTypesResponse Clone() {
      return new ListStoredInfoTypesResponse(this);
    }

    /// <summary>Field number for the "stored_info_types" field.</summary>
    public const int StoredInfoTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.StoredInfoType> _repeated_storedInfoTypes_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.StoredInfoType.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.StoredInfoType> storedInfoTypes_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.StoredInfoType>();
    /// <summary>
    /// List of storedInfoTypes, up to page_size in ListStoredInfoTypesRequest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.StoredInfoType> StoredInfoTypes {
      get { return storedInfoTypes_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// If the next page is available then the next page token to be used
    /// in following ListStoredInfoTypes request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListStoredInfoTypesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListStoredInfoTypesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!storedInfoTypes_.Equals(other.storedInfoTypes_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= storedInfoTypes_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      storedInfoTypes_.WriteTo(output, _repeated_storedInfoTypes_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      storedInfoTypes_.WriteTo(ref output, _repeated_storedInfoTypes_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += storedInfoTypes_.CalculateSize(_repeated_storedInfoTypes_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListStoredInfoTypesResponse other) {
      if (other == null) {
        return;
      }
      storedInfoTypes_.Add(other.storedInfoTypes_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            storedInfoTypes_.AddEntriesFrom(input, _repeated_storedInfoTypes_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            storedInfoTypes_.AddEntriesFrom(ref input, _repeated_storedInfoTypes_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for DeleteStoredInfoType.
  /// </summary>
  public sealed partial class DeleteStoredInfoTypeRequest : pb::IMessage<DeleteStoredInfoTypeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteStoredInfoTypeRequest> _parser = new pb::MessageParser<DeleteStoredInfoTypeRequest>(() => new DeleteStoredInfoTypeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteStoredInfoTypeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteStoredInfoTypeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteStoredInfoTypeRequest(DeleteStoredInfoTypeRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteStoredInfoTypeRequest Clone() {
      return new DeleteStoredInfoTypeRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the organization and storedInfoType to be deleted, for
    /// example `organizations/433245324/storedInfoTypes/432452342` or
    /// projects/project-id/storedInfoTypes/432452342.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteStoredInfoTypeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteStoredInfoTypeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteStoredInfoTypeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to search for potentially sensitive info in a custom location.
  /// </summary>
  public sealed partial class HybridInspectJobTriggerRequest : pb::IMessage<HybridInspectJobTriggerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HybridInspectJobTriggerRequest> _parser = new pb::MessageParser<HybridInspectJobTriggerRequest>(() => new HybridInspectJobTriggerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HybridInspectJobTriggerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridInspectJobTriggerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridInspectJobTriggerRequest(HybridInspectJobTriggerRequest other) : this() {
      name_ = other.name_;
      hybridItem_ = other.hybridItem_ != null ? other.hybridItem_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridInspectJobTriggerRequest Clone() {
      return new HybridInspectJobTriggerRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the trigger to execute a hybrid inspect on, for example
    /// `projects/dlp-test-project/jobTriggers/53234423`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hybrid_item" field.</summary>
    public const int HybridItemFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.HybridContentItem hybridItem_;
    /// <summary>
    /// The item to inspect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.HybridContentItem HybridItem {
      get { return hybridItem_; }
      set {
        hybridItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HybridInspectJobTriggerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HybridInspectJobTriggerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(HybridItem, other.HybridItem)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (hybridItem_ != null) hash ^= HybridItem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (hybridItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HybridItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (hybridItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HybridItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (hybridItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HybridItem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HybridInspectJobTriggerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.hybridItem_ != null) {
        if (hybridItem_ == null) {
          HybridItem = new global::Google.Cloud.Dlp.V2.HybridContentItem();
        }
        HybridItem.MergeFrom(other.HybridItem);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (hybridItem_ == null) {
              HybridItem = new global::Google.Cloud.Dlp.V2.HybridContentItem();
            }
            input.ReadMessage(HybridItem);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (hybridItem_ == null) {
              HybridItem = new global::Google.Cloud.Dlp.V2.HybridContentItem();
            }
            input.ReadMessage(HybridItem);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to search for potentially sensitive info in a custom location.
  /// </summary>
  public sealed partial class HybridInspectDlpJobRequest : pb::IMessage<HybridInspectDlpJobRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HybridInspectDlpJobRequest> _parser = new pb::MessageParser<HybridInspectDlpJobRequest>(() => new HybridInspectDlpJobRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HybridInspectDlpJobRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridInspectDlpJobRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridInspectDlpJobRequest(HybridInspectDlpJobRequest other) : this() {
      name_ = other.name_;
      hybridItem_ = other.hybridItem_ != null ? other.hybridItem_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridInspectDlpJobRequest Clone() {
      return new HybridInspectDlpJobRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name of the job to execute a hybrid inspect on, for example
    /// `projects/dlp-test-project/dlpJob/53234423`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hybrid_item" field.</summary>
    public const int HybridItemFieldNumber = 3;
    private global::Google.Cloud.Dlp.V2.HybridContentItem hybridItem_;
    /// <summary>
    /// The item to inspect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.HybridContentItem HybridItem {
      get { return hybridItem_; }
      set {
        hybridItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HybridInspectDlpJobRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HybridInspectDlpJobRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(HybridItem, other.HybridItem)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (hybridItem_ != null) hash ^= HybridItem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (hybridItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HybridItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (hybridItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HybridItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (hybridItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HybridItem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HybridInspectDlpJobRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.hybridItem_ != null) {
        if (hybridItem_ == null) {
          HybridItem = new global::Google.Cloud.Dlp.V2.HybridContentItem();
        }
        HybridItem.MergeFrom(other.HybridItem);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (hybridItem_ == null) {
              HybridItem = new global::Google.Cloud.Dlp.V2.HybridContentItem();
            }
            input.ReadMessage(HybridItem);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (hybridItem_ == null) {
              HybridItem = new global::Google.Cloud.Dlp.V2.HybridContentItem();
            }
            input.ReadMessage(HybridItem);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An individual hybrid item to inspect. Will be stored temporarily during
  /// processing.
  /// </summary>
  public sealed partial class HybridContentItem : pb::IMessage<HybridContentItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HybridContentItem> _parser = new pb::MessageParser<HybridContentItem>(() => new HybridContentItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HybridContentItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridContentItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridContentItem(HybridContentItem other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      findingDetails_ = other.findingDetails_ != null ? other.findingDetails_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridContentItem Clone() {
      return new HybridContentItem(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.ContentItem item_;
    /// <summary>
    /// The item to inspect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.ContentItem Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "finding_details" field.</summary>
    public const int FindingDetailsFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.HybridFindingDetails findingDetails_;
    /// <summary>
    /// Supplementary information that will be added to each finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.HybridFindingDetails FindingDetails {
      get { return findingDetails_; }
      set {
        findingDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HybridContentItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HybridContentItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      if (!object.Equals(FindingDetails, other.FindingDetails)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (findingDetails_ != null) hash ^= FindingDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (findingDetails_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FindingDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (findingDetails_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FindingDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (findingDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FindingDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HybridContentItem other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Google.Cloud.Dlp.V2.ContentItem();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.findingDetails_ != null) {
        if (findingDetails_ == null) {
          FindingDetails = new global::Google.Cloud.Dlp.V2.HybridFindingDetails();
        }
        FindingDetails.MergeFrom(other.FindingDetails);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Google.Cloud.Dlp.V2.ContentItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 18: {
            if (findingDetails_ == null) {
              FindingDetails = new global::Google.Cloud.Dlp.V2.HybridFindingDetails();
            }
            input.ReadMessage(FindingDetails);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Google.Cloud.Dlp.V2.ContentItem();
            }
            input.ReadMessage(Item);
            break;
          }
          case 18: {
            if (findingDetails_ == null) {
              FindingDetails = new global::Google.Cloud.Dlp.V2.HybridFindingDetails();
            }
            input.ReadMessage(FindingDetails);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Populate to associate additional data with each finding.
  /// </summary>
  public sealed partial class HybridFindingDetails : pb::IMessage<HybridFindingDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HybridFindingDetails> _parser = new pb::MessageParser<HybridFindingDetails>(() => new HybridFindingDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HybridFindingDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridFindingDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridFindingDetails(HybridFindingDetails other) : this() {
      containerDetails_ = other.containerDetails_ != null ? other.containerDetails_.Clone() : null;
      fileOffset_ = other.fileOffset_;
      rowOffset_ = other.rowOffset_;
      tableOptions_ = other.tableOptions_ != null ? other.tableOptions_.Clone() : null;
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridFindingDetails Clone() {
      return new HybridFindingDetails(this);
    }

    /// <summary>Field number for the "container_details" field.</summary>
    public const int ContainerDetailsFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.Container containerDetails_;
    /// <summary>
    /// Details about the container where the content being inspected is from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Container ContainerDetails {
      get { return containerDetails_; }
      set {
        containerDetails_ = value;
      }
    }

    /// <summary>Field number for the "file_offset" field.</summary>
    public const int FileOffsetFieldNumber = 2;
    private long fileOffset_;
    /// <summary>
    /// Offset in bytes of the line, from the beginning of the file, where the
    /// finding  is located. Populate if the item being scanned is only part of a
    /// bigger item, such as a shard of a file and you want to track the absolute
    /// position of the finding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FileOffset {
      get { return fileOffset_; }
      set {
        fileOffset_ = value;
      }
    }

    /// <summary>Field number for the "row_offset" field.</summary>
    public const int RowOffsetFieldNumber = 3;
    private long rowOffset_;
    /// <summary>
    /// Offset of the row for tables. Populate if the row(s) being scanned are
    /// part of a bigger dataset and you want to keep track of their absolute
    /// position.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RowOffset {
      get { return rowOffset_; }
      set {
        rowOffset_ = value;
      }
    }

    /// <summary>Field number for the "table_options" field.</summary>
    public const int TableOptionsFieldNumber = 4;
    private global::Google.Cloud.Dlp.V2.TableOptions tableOptions_;
    /// <summary>
    /// If the container is a table, additional information to make findings
    /// meaningful such as the columns that are primary keys. If not known ahead
    /// of time, can also be set within each inspect hybrid call and the two
    /// will be merged. Note that identifying_fields will only be stored to
    /// BigQuery, and only if the BigQuery action has been included.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.TableOptions TableOptions {
      get { return tableOptions_; }
      set {
        tableOptions_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Labels to represent user provided metadata about the data being inspected.
    /// If configured by the job, some key values may be required.
    /// The labels associated with `Finding`'s produced by hybrid
    /// inspection.
    ///
    /// Label keys must be between 1 and 63 characters long and must conform
    /// to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.
    ///
    /// Label values must be between 0 and 63 characters long and must conform
    /// to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
    ///
    /// No more than 10 labels can be associated with a given finding.
    ///
    /// Examples:
    /// * `"environment" : "production"`
    /// * `"pipeline" : "etl"`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HybridFindingDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HybridFindingDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ContainerDetails, other.ContainerDetails)) return false;
      if (FileOffset != other.FileOffset) return false;
      if (RowOffset != other.RowOffset) return false;
      if (!object.Equals(TableOptions, other.TableOptions)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (containerDetails_ != null) hash ^= ContainerDetails.GetHashCode();
      if (FileOffset != 0L) hash ^= FileOffset.GetHashCode();
      if (RowOffset != 0L) hash ^= RowOffset.GetHashCode();
      if (tableOptions_ != null) hash ^= TableOptions.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (containerDetails_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ContainerDetails);
      }
      if (FileOffset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FileOffset);
      }
      if (RowOffset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RowOffset);
      }
      if (tableOptions_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TableOptions);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (containerDetails_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ContainerDetails);
      }
      if (FileOffset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FileOffset);
      }
      if (RowOffset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RowOffset);
      }
      if (tableOptions_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TableOptions);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (containerDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContainerDetails);
      }
      if (FileOffset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FileOffset);
      }
      if (RowOffset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowOffset);
      }
      if (tableOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableOptions);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HybridFindingDetails other) {
      if (other == null) {
        return;
      }
      if (other.containerDetails_ != null) {
        if (containerDetails_ == null) {
          ContainerDetails = new global::Google.Cloud.Dlp.V2.Container();
        }
        ContainerDetails.MergeFrom(other.ContainerDetails);
      }
      if (other.FileOffset != 0L) {
        FileOffset = other.FileOffset;
      }
      if (other.RowOffset != 0L) {
        RowOffset = other.RowOffset;
      }
      if (other.tableOptions_ != null) {
        if (tableOptions_ == null) {
          TableOptions = new global::Google.Cloud.Dlp.V2.TableOptions();
        }
        TableOptions.MergeFrom(other.TableOptions);
      }
      labels_.Add(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (containerDetails_ == null) {
              ContainerDetails = new global::Google.Cloud.Dlp.V2.Container();
            }
            input.ReadMessage(ContainerDetails);
            break;
          }
          case 16: {
            FileOffset = input.ReadInt64();
            break;
          }
          case 24: {
            RowOffset = input.ReadInt64();
            break;
          }
          case 34: {
            if (tableOptions_ == null) {
              TableOptions = new global::Google.Cloud.Dlp.V2.TableOptions();
            }
            input.ReadMessage(TableOptions);
            break;
          }
          case 42: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (containerDetails_ == null) {
              ContainerDetails = new global::Google.Cloud.Dlp.V2.Container();
            }
            input.ReadMessage(ContainerDetails);
            break;
          }
          case 16: {
            FileOffset = input.ReadInt64();
            break;
          }
          case 24: {
            RowOffset = input.ReadInt64();
            break;
          }
          case 34: {
            if (tableOptions_ == null) {
              TableOptions = new global::Google.Cloud.Dlp.V2.TableOptions();
            }
            input.ReadMessage(TableOptions);
            break;
          }
          case 42: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Quota exceeded errors will be thrown once quota has been met.
  /// </summary>
  public sealed partial class HybridInspectResponse : pb::IMessage<HybridInspectResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HybridInspectResponse> _parser = new pb::MessageParser<HybridInspectResponse>(() => new HybridInspectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HybridInspectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.DlpReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridInspectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridInspectResponse(HybridInspectResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridInspectResponse Clone() {
      return new HybridInspectResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HybridInspectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HybridInspectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HybridInspectResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
