// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/privacy/dlp/v2/storage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Dlp.V2 {

  /// <summary>Holder for reflection information generated from google/privacy/dlp/v2/storage.proto</summary>
  public static partial class StorageReflection {

    #region Descriptor
    /// <summary>File descriptor for google/privacy/dlp/v2/storage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StorageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNnb29nbGUvcHJpdmFjeS9kbHAvdjIvc3RvcmFnZS5wcm90bxIVZ29vZ2xl",
            "LnByaXZhY3kuZGxwLnYyGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGh9n",
            "b29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhxnb29nbGUvYXBpL2Fu",
            "bm90YXRpb25zLnByb3RvIhgKCEluZm9UeXBlEgwKBG5hbWUYASABKAkiSwoK",
            "U3RvcmVkVHlwZRIMCgRuYW1lGAEgASgJEi8KC2NyZWF0ZV90aW1lGAIgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCLICwoOQ3VzdG9tSW5mb1R5",
            "cGUSMgoJaW5mb190eXBlGAEgASgLMh8uZ29vZ2xlLnByaXZhY3kuZGxwLnYy",
            "LkluZm9UeXBlEjUKCmxpa2VsaWhvb2QYBiABKA4yIS5nb29nbGUucHJpdmFj",
            "eS5kbHAudjIuTGlrZWxpaG9vZBJGCgpkaWN0aW9uYXJ5GAIgASgLMjAuZ29v",
            "Z2xlLnByaXZhY3kuZGxwLnYyLkN1c3RvbUluZm9UeXBlLkRpY3Rpb25hcnlI",
            "ABI8CgVyZWdleBgDIAEoCzIrLmdvb2dsZS5wcml2YWN5LmRscC52Mi5DdXN0",
            "b21JbmZvVHlwZS5SZWdleEgAEk0KDnN1cnJvZ2F0ZV90eXBlGAQgASgLMjMu",
            "Z29vZ2xlLnByaXZhY3kuZGxwLnYyLkN1c3RvbUluZm9UeXBlLlN1cnJvZ2F0",
            "ZVR5cGVIABI4CgtzdG9yZWRfdHlwZRgFIAEoCzIhLmdvb2dsZS5wcml2YWN5",
            "LmRscC52Mi5TdG9yZWRUeXBlSAASTAoPZGV0ZWN0aW9uX3J1bGVzGAcgAygL",
            "MjMuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkN1c3RvbUluZm9UeXBlLkRldGVj",
            "dGlvblJ1bGUSSwoOZXhjbHVzaW9uX3R5cGUYCCABKA4yMy5nb29nbGUucHJp",
            "dmFjeS5kbHAudjIuQ3VzdG9tSW5mb1R5cGUuRXhjbHVzaW9uVHlwZRrIAQoK",
            "RGljdGlvbmFyeRJOCgl3b3JkX2xpc3QYASABKAsyOS5nb29nbGUucHJpdmFj",
            "eS5kbHAudjIuQ3VzdG9tSW5mb1R5cGUuRGljdGlvbmFyeS5Xb3JkTGlzdEgA",
            "EkUKEmNsb3VkX3N0b3JhZ2VfcGF0aBgDIAEoCzInLmdvb2dsZS5wcml2YWN5",
            "LmRscC52Mi5DbG91ZFN0b3JhZ2VQYXRoSAAaGQoIV29yZExpc3QSDQoFd29y",
            "ZHMYASADKAlCCAoGc291cmNlGi8KBVJlZ2V4Eg8KB3BhdHRlcm4YASABKAkS",
            "FQoNZ3JvdXBfaW5kZXhlcxgCIAMoBRoPCg1TdXJyb2dhdGVUeXBlGr4ECg1E",
            "ZXRlY3Rpb25SdWxlElcKDGhvdHdvcmRfcnVsZRgBIAEoCzI/Lmdvb2dsZS5w",
            "cml2YWN5LmRscC52Mi5DdXN0b21JbmZvVHlwZS5EZXRlY3Rpb25SdWxlLkhv",
            "dHdvcmRSdWxlSAAaOAoJUHJveGltaXR5EhUKDXdpbmRvd19iZWZvcmUYASAB",
            "KAUSFAoMd2luZG93X2FmdGVyGAIgASgFGoIBChRMaWtlbGlob29kQWRqdXN0",
            "bWVudBI9ChBmaXhlZF9saWtlbGlob29kGAEgASgOMiEuZ29vZ2xlLnByaXZh",
            "Y3kuZGxwLnYyLkxpa2VsaWhvb2RIABIdChNyZWxhdGl2ZV9saWtlbGlob29k",
            "GAIgASgFSABCDAoKYWRqdXN0bWVudBqMAgoLSG90d29yZFJ1bGUSQgoNaG90",
            "d29yZF9yZWdleBgBIAEoCzIrLmdvb2dsZS5wcml2YWN5LmRscC52Mi5DdXN0",
            "b21JbmZvVHlwZS5SZWdleBJQCglwcm94aW1pdHkYAiABKAsyPS5nb29nbGUu",
            "cHJpdmFjeS5kbHAudjIuQ3VzdG9tSW5mb1R5cGUuRGV0ZWN0aW9uUnVsZS5Q",
            "cm94aW1pdHkSZwoVbGlrZWxpaG9vZF9hZGp1c3RtZW50GAMgASgLMkguZ29v",
            "Z2xlLnByaXZhY3kuZGxwLnYyLkN1c3RvbUluZm9UeXBlLkRldGVjdGlvblJ1",
            "bGUuTGlrZWxpaG9vZEFkanVzdG1lbnRCBgoEdHlwZSJLCg1FeGNsdXNpb25U",
            "eXBlEh4KGkVYQ0xVU0lPTl9UWVBFX1VOU1BFQ0lGSUVEEAASGgoWRVhDTFVT",
            "SU9OX1RZUEVfRVhDTFVERRABQgYKBHR5cGUiFwoHRmllbGRJZBIMCgRuYW1l",
            "GAEgASgJIjcKC1BhcnRpdGlvbklkEhIKCnByb2plY3RfaWQYAiABKAkSFAoM",
            "bmFtZXNwYWNlX2lkGAQgASgJIh4KDktpbmRFeHByZXNzaW9uEgwKBG5hbWUY",
            "ASABKAkigQEKEERhdGFzdG9yZU9wdGlvbnMSOAoMcGFydGl0aW9uX2lkGAEg",
            "ASgLMiIuZ29vZ2xlLnByaXZhY3kuZGxwLnYyLlBhcnRpdGlvbklkEjMKBGtp",
            "bmQYAiABKAsyJS5nb29nbGUucHJpdmFjeS5kbHAudjIuS2luZEV4cHJlc3Np",
            "b24iXQoYQ2xvdWRTdG9yYWdlUmVnZXhGaWxlU2V0EhMKC2J1Y2tldF9uYW1l",
            "GAEgASgJEhUKDWluY2x1ZGVfcmVnZXgYAiADKAkSFQoNZXhjbHVkZV9yZWdl",
            "eBgDIAMoCSLsAwoTQ2xvdWRTdG9yYWdlT3B0aW9ucxJECghmaWxlX3NldBgB",
            "IAEoCzIyLmdvb2dsZS5wcml2YWN5LmRscC52Mi5DbG91ZFN0b3JhZ2VPcHRp",
            "b25zLkZpbGVTZXQSHAoUYnl0ZXNfbGltaXRfcGVyX2ZpbGUYBCABKAMSJAoc",
            "Ynl0ZXNfbGltaXRfcGVyX2ZpbGVfcGVyY2VudBgIIAEoBRIzCgpmaWxlX3R5",
            "cGVzGAUgAygOMh8uZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkZpbGVUeXBlEk4K",
            "DXNhbXBsZV9tZXRob2QYBiABKA4yNy5nb29nbGUucHJpdmFjeS5kbHAudjIu",
            "Q2xvdWRTdG9yYWdlT3B0aW9ucy5TYW1wbGVNZXRob2QSGwoTZmlsZXNfbGlt",
            "aXRfcGVyY2VudBgHIAEoBRpfCgdGaWxlU2V0EgsKA3VybBgBIAEoCRJHCg5y",
            "ZWdleF9maWxlX3NldBgCIAEoCzIvLmdvb2dsZS5wcml2YWN5LmRscC52Mi5D",
            "bG91ZFN0b3JhZ2VSZWdleEZpbGVTZXQiSAoMU2FtcGxlTWV0aG9kEh0KGVNB",
            "TVBMRV9NRVRIT0RfVU5TUEVDSUZJRUQQABIHCgNUT1AQARIQCgxSQU5ET01f",
            "U1RBUlQQAiIiChNDbG91ZFN0b3JhZ2VGaWxlU2V0EgsKA3VybBgBIAEoCSIg",
            "ChBDbG91ZFN0b3JhZ2VQYXRoEgwKBHBhdGgYASABKAkiiwMKD0JpZ1F1ZXJ5",
            "T3B0aW9ucxI9Cg90YWJsZV9yZWZlcmVuY2UYASABKAsyJC5nb29nbGUucHJp",
            "dmFjeS5kbHAudjIuQmlnUXVlcnlUYWJsZRI6ChJpZGVudGlmeWluZ19maWVs",
            "ZHMYAiADKAsyHi5nb29nbGUucHJpdmFjeS5kbHAudjIuRmllbGRJZBISCgpy",
            "b3dzX2xpbWl0GAMgASgDEhoKEnJvd3NfbGltaXRfcGVyY2VudBgGIAEoBRJK",
            "Cg1zYW1wbGVfbWV0aG9kGAQgASgOMjMuZ29vZ2xlLnByaXZhY3kuZGxwLnYy",
            "LkJpZ1F1ZXJ5T3B0aW9ucy5TYW1wbGVNZXRob2QSNwoPZXhjbHVkZWRfZmll",
            "bGRzGAUgAygLMh4uZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkZpZWxkSWQiSAoM",
            "U2FtcGxlTWV0aG9kEh0KGVNBTVBMRV9NRVRIT0RfVU5TUEVDSUZJRUQQABIH",
            "CgNUT1AQARIQCgxSQU5ET01fU1RBUlQQAiLaBAoNU3RvcmFnZUNvbmZpZxJE",
            "ChFkYXRhc3RvcmVfb3B0aW9ucxgCIAEoCzInLmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5EYXRhc3RvcmVPcHRpb25zSAASSwoVY2xvdWRfc3RvcmFnZV9vcHRp",
            "b25zGAMgASgLMiouZ29vZ2xlLnByaXZhY3kuZGxwLnYyLkNsb3VkU3RvcmFn",
            "ZU9wdGlvbnNIABJDChFiaWdfcXVlcnlfb3B0aW9ucxgEIAEoCzImLmdvb2ds",
            "ZS5wcml2YWN5LmRscC52Mi5CaWdRdWVyeU9wdGlvbnNIABI+Cg5oeWJyaWRf",
            "b3B0aW9ucxgJIAEoCzIkLmdvb2dsZS5wcml2YWN5LmRscC52Mi5IeWJyaWRP",
            "cHRpb25zSAASTAoPdGltZXNwYW5fY29uZmlnGAYgASgLMjMuZ29vZ2xlLnBy",
            "aXZhY3kuZGxwLnYyLlN0b3JhZ2VDb25maWcuVGltZXNwYW5Db25maWca2gEK",
            "DlRpbWVzcGFuQ29uZmlnEi4KCnN0YXJ0X3RpbWUYASABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAIgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcBI3Cg90aW1lc3RhbXBfZmllbGQYAyABKAsy",
            "Hi5nb29nbGUucHJpdmFjeS5kbHAudjIuRmllbGRJZBIxCillbmFibGVfYXV0",
            "b19wb3B1bGF0aW9uX29mX3RpbWVzcGFuX2NvbmZpZxgEIAEoCEIGCgR0eXBl",
            "IvYBCg1IeWJyaWRPcHRpb25zEhMKC2Rlc2NyaXB0aW9uGAEgASgJEiMKG3Jl",
            "cXVpcmVkX2ZpbmRpbmdfbGFiZWxfa2V5cxgCIAMoCRJACgZsYWJlbHMYAyAD",
            "KAsyMC5nb29nbGUucHJpdmFjeS5kbHAudjIuSHlicmlkT3B0aW9ucy5MYWJl",
            "bHNFbnRyeRI6Cg10YWJsZV9vcHRpb25zGAQgASgLMiMuZ29vZ2xlLnByaXZh",
            "Y3kuZGxwLnYyLlRhYmxlT3B0aW9ucxotCgtMYWJlbHNFbnRyeRILCgNrZXkY",
            "ASABKAkSDQoFdmFsdWUYAiABKAk6AjgBImAKC0JpZ1F1ZXJ5S2V5Ej0KD3Rh",
            "YmxlX3JlZmVyZW5jZRgBIAEoCzIkLmdvb2dsZS5wcml2YWN5LmRscC52Mi5C",
            "aWdRdWVyeVRhYmxlEhIKCnJvd19udW1iZXIYAiABKAMiPgoMRGF0YXN0b3Jl",
            "S2V5Ei4KCmVudGl0eV9rZXkYASABKAsyGi5nb29nbGUucHJpdmFjeS5kbHAu",
            "djIuS2V5IrsBCgNLZXkSOAoMcGFydGl0aW9uX2lkGAEgASgLMiIuZ29vZ2xl",
            "LnByaXZhY3kuZGxwLnYyLlBhcnRpdGlvbklkEjQKBHBhdGgYAiADKAsyJi5n",
            "b29nbGUucHJpdmFjeS5kbHAudjIuS2V5LlBhdGhFbGVtZW50GkQKC1BhdGhF",
            "bGVtZW50EgwKBGtpbmQYASABKAkSDAoCaWQYAiABKANIABIOCgRuYW1lGAMg",
            "ASgJSABCCQoHaWRfdHlwZSKhAQoJUmVjb3JkS2V5EjwKDWRhdGFzdG9yZV9r",
            "ZXkYAiABKAsyIy5nb29nbGUucHJpdmFjeS5kbHAudjIuRGF0YXN0b3JlS2V5",
            "SAASOwoNYmlnX3F1ZXJ5X2tleRgDIAEoCzIiLmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5CaWdRdWVyeUtleUgAEhEKCWlkX3ZhbHVlcxgFIAMoCUIGCgR0eXBl",
            "IkkKDUJpZ1F1ZXJ5VGFibGUSEgoKcHJvamVjdF9pZBgBIAEoCRISCgpkYXRh",
            "c2V0X2lkGAIgASgJEhAKCHRhYmxlX2lkGAMgASgJInMKDUJpZ1F1ZXJ5Rmll",
            "bGQSMwoFdGFibGUYASABKAsyJC5nb29nbGUucHJpdmFjeS5kbHAudjIuQmln",
            "UXVlcnlUYWJsZRItCgVmaWVsZBgCIAEoCzIeLmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5GaWVsZElkIjkKCEVudGl0eUlkEi0KBWZpZWxkGAEgASgLMh4uZ29v",
            "Z2xlLnByaXZhY3kuZGxwLnYyLkZpZWxkSWQiSgoMVGFibGVPcHRpb25zEjoK",
            "EmlkZW50aWZ5aW5nX2ZpZWxkcxgBIAMoCzIeLmdvb2dsZS5wcml2YWN5LmRs",
            "cC52Mi5GaWVsZElkKnQKCkxpa2VsaWhvb2QSGgoWTElLRUxJSE9PRF9VTlNQ",
            "RUNJRklFRBAAEhEKDVZFUllfVU5MSUtFTFkQARIMCghVTkxJS0VMWRACEgwK",
            "CFBPU1NJQkxFEAMSCgoGTElLRUxZEAQSDwoLVkVSWV9MSUtFTFkQBSp/CghG",
            "aWxlVHlwZRIZChVGSUxFX1RZUEVfVU5TUEVDSUZJRUQQABIPCgtCSU5BUllf",
            "RklMRRABEg0KCVRFWFRfRklMRRACEgkKBUlNQUdFEAMSCAoEV09SRBAFEgcK",
            "A1BERhAGEggKBEFWUk8QBxIHCgNDU1YQCBIHCgNUU1YQCUKoAQoZY29tLmdv",
            "b2dsZS5wcml2YWN5LmRscC52MkIKRGxwU3RvcmFnZVABWjhnb29nbGUuZ29s",
            "YW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL3ByaXZhY3kvZGxwL3YyO2Rs",
            "cKoCE0dvb2dsZS5DbG91ZC5EbHAuVjLKAhNHb29nbGVcQ2xvdWRcRGxwXFYy",
            "6gIWR29vZ2xlOjpDbG91ZDo6RGxwOjpWMmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Dlp.V2.Likelihood), typeof(global::Google.Cloud.Dlp.V2.FileType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.InfoType), global::Google.Cloud.Dlp.V2.InfoType.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.StoredType), global::Google.Cloud.Dlp.V2.StoredType.Parser, new[]{ "Name", "CreateTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CustomInfoType), global::Google.Cloud.Dlp.V2.CustomInfoType.Parser, new[]{ "InfoType", "Likelihood", "Dictionary", "Regex", "SurrogateType", "StoredType", "DetectionRules", "ExclusionType" }, new[]{ "Type" }, new[]{ typeof(global::Google.Cloud.Dlp.V2.CustomInfoType.Types.ExclusionType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary), global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary.Parser, new[]{ "WordList", "CloudStoragePath" }, new[]{ "Source" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary.Types.WordList), global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary.Types.WordList.Parser, new[]{ "Words" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex), global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex.Parser, new[]{ "Pattern", "GroupIndexes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CustomInfoType.Types.SurrogateType), global::Google.Cloud.Dlp.V2.CustomInfoType.Types.SurrogateType.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule), global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Parser, new[]{ "HotwordRule" }, new[]{ "Type" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.Proximity), global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.Proximity.Parser, new[]{ "WindowBefore", "WindowAfter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.LikelihoodAdjustment), global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.LikelihoodAdjustment.Parser, new[]{ "FixedLikelihood", "RelativeLikelihood" }, new[]{ "Adjustment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule), global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule.Parser, new[]{ "HotwordRegex", "Proximity", "LikelihoodAdjustment" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.FieldId), global::Google.Cloud.Dlp.V2.FieldId.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.PartitionId), global::Google.Cloud.Dlp.V2.PartitionId.Parser, new[]{ "ProjectId", "NamespaceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.KindExpression), global::Google.Cloud.Dlp.V2.KindExpression.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DatastoreOptions), global::Google.Cloud.Dlp.V2.DatastoreOptions.Parser, new[]{ "PartitionId", "Kind" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CloudStorageRegexFileSet), global::Google.Cloud.Dlp.V2.CloudStorageRegexFileSet.Parser, new[]{ "BucketName", "IncludeRegex", "ExcludeRegex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CloudStorageOptions), global::Google.Cloud.Dlp.V2.CloudStorageOptions.Parser, new[]{ "FileSet", "BytesLimitPerFile", "BytesLimitPerFilePercent", "FileTypes", "SampleMethod", "FilesLimitPercent" }, null, new[]{ typeof(global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.SampleMethod) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.FileSet), global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.FileSet.Parser, new[]{ "Url", "RegexFileSet" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CloudStorageFileSet), global::Google.Cloud.Dlp.V2.CloudStorageFileSet.Parser, new[]{ "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.CloudStoragePath), global::Google.Cloud.Dlp.V2.CloudStoragePath.Parser, new[]{ "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.BigQueryOptions), global::Google.Cloud.Dlp.V2.BigQueryOptions.Parser, new[]{ "TableReference", "IdentifyingFields", "RowsLimit", "RowsLimitPercent", "SampleMethod", "ExcludedFields" }, null, new[]{ typeof(global::Google.Cloud.Dlp.V2.BigQueryOptions.Types.SampleMethod) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.StorageConfig), global::Google.Cloud.Dlp.V2.StorageConfig.Parser, new[]{ "DatastoreOptions", "CloudStorageOptions", "BigQueryOptions", "HybridOptions", "TimespanConfig" }, new[]{ "Type" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.StorageConfig.Types.TimespanConfig), global::Google.Cloud.Dlp.V2.StorageConfig.Types.TimespanConfig.Parser, new[]{ "StartTime", "EndTime", "TimestampField", "EnableAutoPopulationOfTimespanConfig" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.HybridOptions), global::Google.Cloud.Dlp.V2.HybridOptions.Parser, new[]{ "Description", "RequiredFindingLabelKeys", "Labels", "TableOptions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.BigQueryKey), global::Google.Cloud.Dlp.V2.BigQueryKey.Parser, new[]{ "TableReference", "RowNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.DatastoreKey), global::Google.Cloud.Dlp.V2.DatastoreKey.Parser, new[]{ "EntityKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Key), global::Google.Cloud.Dlp.V2.Key.Parser, new[]{ "PartitionId", "Path" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.Key.Types.PathElement), global::Google.Cloud.Dlp.V2.Key.Types.PathElement.Parser, new[]{ "Kind", "Id", "Name" }, new[]{ "IdType" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.RecordKey), global::Google.Cloud.Dlp.V2.RecordKey.Parser, new[]{ "DatastoreKey", "BigQueryKey", "IdValues" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.BigQueryTable), global::Google.Cloud.Dlp.V2.BigQueryTable.Parser, new[]{ "ProjectId", "DatasetId", "TableId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.BigQueryField), global::Google.Cloud.Dlp.V2.BigQueryField.Parser, new[]{ "Table", "Field" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.EntityId), global::Google.Cloud.Dlp.V2.EntityId.Parser, new[]{ "Field" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dlp.V2.TableOptions), global::Google.Cloud.Dlp.V2.TableOptions.Parser, new[]{ "IdentifyingFields" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Categorization of results based on how likely they are to represent a match,
  /// based on the number of elements they contain which imply a match.
  /// </summary>
  public enum Likelihood {
    /// <summary>
    /// Default value; same as POSSIBLE.
    /// </summary>
    [pbr::OriginalName("LIKELIHOOD_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Few matching elements.
    /// </summary>
    [pbr::OriginalName("VERY_UNLIKELY")] VeryUnlikely = 1,
    [pbr::OriginalName("UNLIKELY")] Unlikely = 2,
    /// <summary>
    /// Some matching elements.
    /// </summary>
    [pbr::OriginalName("POSSIBLE")] Possible = 3,
    [pbr::OriginalName("LIKELY")] Likely = 4,
    /// <summary>
    /// Many matching elements.
    /// </summary>
    [pbr::OriginalName("VERY_LIKELY")] VeryLikely = 5,
  }

  /// <summary>
  /// Definitions of file type groups to scan. New types will be added to this
  /// list.
  /// </summary>
  public enum FileType {
    /// <summary>
    /// Includes all files.
    /// </summary>
    [pbr::OriginalName("FILE_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Includes all file extensions not covered by another entry. Binary
    /// scanning attempts to convert the content of the file to utf_8 to scan
    /// the file.
    /// If you wish to avoid this fall back, specify one or more of the other
    /// FileType's in your storage scan.
    /// </summary>
    [pbr::OriginalName("BINARY_FILE")] BinaryFile = 1,
    /// <summary>
    /// Included file extensions:
    ///   asc, brf, c, cc, cpp, csv, cxx, c++, cs, css, dart, eml, go, h, hh, hpp,
    ///   hxx, h++, hs, html, htm, shtml, shtm, xhtml, lhs, ini, java, js, json,
    ///   ocaml, md, mkd, markdown, m, ml, mli, pl, pm, php, phtml, pht, py, pyw,
    ///   rb, rbw, rs, rc, scala, sh, sql, tex, txt, text, tsv, vcard, vcs, wml,
    ///   xml, xsl, xsd, yml, yaml.
    /// </summary>
    [pbr::OriginalName("TEXT_FILE")] TextFile = 2,
    /// <summary>
    /// Included file extensions:
    ///   bmp, gif, jpg, jpeg, jpe, png.
    /// bytes_limit_per_file has no effect on image files.
    /// Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
    /// </summary>
    [pbr::OriginalName("IMAGE")] Image = 3,
    /// <summary>
    /// Word files >30 MB will be scanned as binary files.
    /// Included file extensions:
    ///   docx, dotx, docm, dotm
    /// </summary>
    [pbr::OriginalName("WORD")] Word = 5,
    /// <summary>
    /// PDF files >30 MB will be scanned as binary files.
    /// Included file extensions:
    ///   pdf
    /// </summary>
    [pbr::OriginalName("PDF")] Pdf = 6,
    /// <summary>
    /// Included file extensions:
    ///   avro
    /// </summary>
    [pbr::OriginalName("AVRO")] Avro = 7,
    /// <summary>
    /// Included file extensions:
    ///   csv
    /// </summary>
    [pbr::OriginalName("CSV")] Csv = 8,
    /// <summary>
    /// Included file extensions:
    ///   tsv
    /// </summary>
    [pbr::OriginalName("TSV")] Tsv = 9,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Type of information detected by the API.
  /// </summary>
  public sealed partial class InfoType : pb::IMessage<InfoType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfoType> _parser = new pb::MessageParser<InfoType>(() => new InfoType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InfoType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoType(InfoType other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoType Clone() {
      return new InfoType(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the information type. Either a name of your choosing when
    /// creating a CustomInfoType, or one of the names listed
    /// at https://cloud.google.com/dlp/docs/infotypes-reference when specifying
    /// a built-in type.  When sending Cloud DLP results to Data Catalog, infoType
    /// names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InfoType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InfoType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InfoType other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A reference to a StoredInfoType to use with scanning.
  /// </summary>
  public sealed partial class StoredType : pb::IMessage<StoredType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StoredType> _parser = new pb::MessageParser<StoredType>(() => new StoredType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoredType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredType(StoredType other) : this() {
      name_ = other.name_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoredType Clone() {
      return new StoredType(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Resource name of the requested `StoredInfoType`, for example
    /// `organizations/433245324/storedInfoTypes/432452342` or
    /// `projects/project-id/storedInfoTypes/432452342`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Timestamp indicating when the version of the `StoredInfoType` used for
    /// inspection was created. Output-only field, populated by the system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoredType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoredType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoredType other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Custom information type provided by the user. Used to find domain-specific
  /// sensitive information configurable to the data in question.
  /// </summary>
  public sealed partial class CustomInfoType : pb::IMessage<CustomInfoType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustomInfoType> _parser = new pb::MessageParser<CustomInfoType>(() => new CustomInfoType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomInfoType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomInfoType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomInfoType(CustomInfoType other) : this() {
      infoType_ = other.infoType_ != null ? other.infoType_.Clone() : null;
      likelihood_ = other.likelihood_;
      detectionRules_ = other.detectionRules_.Clone();
      exclusionType_ = other.exclusionType_;
      switch (other.TypeCase) {
        case TypeOneofCase.Dictionary:
          Dictionary = other.Dictionary.Clone();
          break;
        case TypeOneofCase.Regex:
          Regex = other.Regex.Clone();
          break;
        case TypeOneofCase.SurrogateType:
          SurrogateType = other.SurrogateType.Clone();
          break;
        case TypeOneofCase.StoredType:
          StoredType = other.StoredType.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomInfoType Clone() {
      return new CustomInfoType(this);
    }

    /// <summary>Field number for the "info_type" field.</summary>
    public const int InfoTypeFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.InfoType infoType_;
    /// <summary>
    /// CustomInfoType can either be a new infoType, or an extension of built-in
    /// infoType, when the name matches one of existing infoTypes and that infoType
    /// is specified in `InspectContent.info_types` field. Specifying the latter
    /// adds findings to the one detected by the system. If built-in info type is
    /// not specified in `InspectContent.info_types` list then the name is treated
    /// as a custom info type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.InfoType InfoType {
      get { return infoType_; }
      set {
        infoType_ = value;
      }
    }

    /// <summary>Field number for the "likelihood" field.</summary>
    public const int LikelihoodFieldNumber = 6;
    private global::Google.Cloud.Dlp.V2.Likelihood likelihood_ = global::Google.Cloud.Dlp.V2.Likelihood.Unspecified;
    /// <summary>
    /// Likelihood to return for this CustomInfoType. This base value can be
    /// altered by a detection rule if the finding meets the criteria specified by
    /// the rule. Defaults to `VERY_LIKELY` if not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Likelihood Likelihood {
      get { return likelihood_; }
      set {
        likelihood_ = value;
      }
    }

    /// <summary>Field number for the "dictionary" field.</summary>
    public const int DictionaryFieldNumber = 2;
    /// <summary>
    /// A list of phrases to detect as a CustomInfoType.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary Dictionary {
      get { return typeCase_ == TypeOneofCase.Dictionary ? (global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Dictionary;
      }
    }

    /// <summary>Field number for the "regex" field.</summary>
    public const int RegexFieldNumber = 3;
    /// <summary>
    /// Regular expression based CustomInfoType.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex Regex {
      get { return typeCase_ == TypeOneofCase.Regex ? (global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Regex;
      }
    }

    /// <summary>Field number for the "surrogate_type" field.</summary>
    public const int SurrogateTypeFieldNumber = 4;
    /// <summary>
    /// Message for detecting output from deidentification transformations that
    /// support reversing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.SurrogateType SurrogateType {
      get { return typeCase_ == TypeOneofCase.SurrogateType ? (global::Google.Cloud.Dlp.V2.CustomInfoType.Types.SurrogateType) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.SurrogateType;
      }
    }

    /// <summary>Field number for the "stored_type" field.</summary>
    public const int StoredTypeFieldNumber = 5;
    /// <summary>
    /// Load an existing `StoredInfoType` resource for use in
    /// `InspectDataSource`. Not currently supported in `InspectContent`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.StoredType StoredType {
      get { return typeCase_ == TypeOneofCase.StoredType ? (global::Google.Cloud.Dlp.V2.StoredType) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.StoredType;
      }
    }

    /// <summary>Field number for the "detection_rules" field.</summary>
    public const int DetectionRulesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule> _repeated_detectionRules_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule> detectionRules_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule>();
    /// <summary>
    /// Set of detection rules to apply to all findings of this CustomInfoType.
    /// Rules are applied in order that they are specified. Not supported for the
    /// `surrogate_type` CustomInfoType.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule> DetectionRules {
      get { return detectionRules_; }
    }

    /// <summary>Field number for the "exclusion_type" field.</summary>
    public const int ExclusionTypeFieldNumber = 8;
    private global::Google.Cloud.Dlp.V2.CustomInfoType.Types.ExclusionType exclusionType_ = global::Google.Cloud.Dlp.V2.CustomInfoType.Types.ExclusionType.Unspecified;
    /// <summary>
    /// If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding
    /// to be returned. It still can be used for rules matching.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.ExclusionType ExclusionType {
      get { return exclusionType_; }
      set {
        exclusionType_ = value;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Dictionary = 2,
      Regex = 3,
      SurrogateType = 4,
      StoredType = 5,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomInfoType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomInfoType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InfoType, other.InfoType)) return false;
      if (Likelihood != other.Likelihood) return false;
      if (!object.Equals(Dictionary, other.Dictionary)) return false;
      if (!object.Equals(Regex, other.Regex)) return false;
      if (!object.Equals(SurrogateType, other.SurrogateType)) return false;
      if (!object.Equals(StoredType, other.StoredType)) return false;
      if(!detectionRules_.Equals(other.detectionRules_)) return false;
      if (ExclusionType != other.ExclusionType) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (infoType_ != null) hash ^= InfoType.GetHashCode();
      if (Likelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) hash ^= Likelihood.GetHashCode();
      if (typeCase_ == TypeOneofCase.Dictionary) hash ^= Dictionary.GetHashCode();
      if (typeCase_ == TypeOneofCase.Regex) hash ^= Regex.GetHashCode();
      if (typeCase_ == TypeOneofCase.SurrogateType) hash ^= SurrogateType.GetHashCode();
      if (typeCase_ == TypeOneofCase.StoredType) hash ^= StoredType.GetHashCode();
      hash ^= detectionRules_.GetHashCode();
      if (ExclusionType != global::Google.Cloud.Dlp.V2.CustomInfoType.Types.ExclusionType.Unspecified) hash ^= ExclusionType.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (infoType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InfoType);
      }
      if (typeCase_ == TypeOneofCase.Dictionary) {
        output.WriteRawTag(18);
        output.WriteMessage(Dictionary);
      }
      if (typeCase_ == TypeOneofCase.Regex) {
        output.WriteRawTag(26);
        output.WriteMessage(Regex);
      }
      if (typeCase_ == TypeOneofCase.SurrogateType) {
        output.WriteRawTag(34);
        output.WriteMessage(SurrogateType);
      }
      if (typeCase_ == TypeOneofCase.StoredType) {
        output.WriteRawTag(42);
        output.WriteMessage(StoredType);
      }
      if (Likelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Likelihood);
      }
      detectionRules_.WriteTo(output, _repeated_detectionRules_codec);
      if (ExclusionType != global::Google.Cloud.Dlp.V2.CustomInfoType.Types.ExclusionType.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ExclusionType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (infoType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InfoType);
      }
      if (typeCase_ == TypeOneofCase.Dictionary) {
        output.WriteRawTag(18);
        output.WriteMessage(Dictionary);
      }
      if (typeCase_ == TypeOneofCase.Regex) {
        output.WriteRawTag(26);
        output.WriteMessage(Regex);
      }
      if (typeCase_ == TypeOneofCase.SurrogateType) {
        output.WriteRawTag(34);
        output.WriteMessage(SurrogateType);
      }
      if (typeCase_ == TypeOneofCase.StoredType) {
        output.WriteRawTag(42);
        output.WriteMessage(StoredType);
      }
      if (Likelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Likelihood);
      }
      detectionRules_.WriteTo(ref output, _repeated_detectionRules_codec);
      if (ExclusionType != global::Google.Cloud.Dlp.V2.CustomInfoType.Types.ExclusionType.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ExclusionType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (infoType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoType);
      }
      if (Likelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Likelihood);
      }
      if (typeCase_ == TypeOneofCase.Dictionary) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dictionary);
      }
      if (typeCase_ == TypeOneofCase.Regex) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Regex);
      }
      if (typeCase_ == TypeOneofCase.SurrogateType) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SurrogateType);
      }
      if (typeCase_ == TypeOneofCase.StoredType) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StoredType);
      }
      size += detectionRules_.CalculateSize(_repeated_detectionRules_codec);
      if (ExclusionType != global::Google.Cloud.Dlp.V2.CustomInfoType.Types.ExclusionType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ExclusionType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomInfoType other) {
      if (other == null) {
        return;
      }
      if (other.infoType_ != null) {
        if (infoType_ == null) {
          InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
        }
        InfoType.MergeFrom(other.InfoType);
      }
      if (other.Likelihood != global::Google.Cloud.Dlp.V2.Likelihood.Unspecified) {
        Likelihood = other.Likelihood;
      }
      detectionRules_.Add(other.detectionRules_);
      if (other.ExclusionType != global::Google.Cloud.Dlp.V2.CustomInfoType.Types.ExclusionType.Unspecified) {
        ExclusionType = other.ExclusionType;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Dictionary:
          if (Dictionary == null) {
            Dictionary = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary();
          }
          Dictionary.MergeFrom(other.Dictionary);
          break;
        case TypeOneofCase.Regex:
          if (Regex == null) {
            Regex = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex();
          }
          Regex.MergeFrom(other.Regex);
          break;
        case TypeOneofCase.SurrogateType:
          if (SurrogateType == null) {
            SurrogateType = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.SurrogateType();
          }
          SurrogateType.MergeFrom(other.SurrogateType);
          break;
        case TypeOneofCase.StoredType:
          if (StoredType == null) {
            StoredType = new global::Google.Cloud.Dlp.V2.StoredType();
          }
          StoredType.MergeFrom(other.StoredType);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (infoType_ == null) {
              InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
            }
            input.ReadMessage(InfoType);
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary();
            if (typeCase_ == TypeOneofCase.Dictionary) {
              subBuilder.MergeFrom(Dictionary);
            }
            input.ReadMessage(subBuilder);
            Dictionary = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex();
            if (typeCase_ == TypeOneofCase.Regex) {
              subBuilder.MergeFrom(Regex);
            }
            input.ReadMessage(subBuilder);
            Regex = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.SurrogateType subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.SurrogateType();
            if (typeCase_ == TypeOneofCase.SurrogateType) {
              subBuilder.MergeFrom(SurrogateType);
            }
            input.ReadMessage(subBuilder);
            SurrogateType = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.StoredType subBuilder = new global::Google.Cloud.Dlp.V2.StoredType();
            if (typeCase_ == TypeOneofCase.StoredType) {
              subBuilder.MergeFrom(StoredType);
            }
            input.ReadMessage(subBuilder);
            StoredType = subBuilder;
            break;
          }
          case 48: {
            Likelihood = (global::Google.Cloud.Dlp.V2.Likelihood) input.ReadEnum();
            break;
          }
          case 58: {
            detectionRules_.AddEntriesFrom(input, _repeated_detectionRules_codec);
            break;
          }
          case 64: {
            ExclusionType = (global::Google.Cloud.Dlp.V2.CustomInfoType.Types.ExclusionType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (infoType_ == null) {
              InfoType = new global::Google.Cloud.Dlp.V2.InfoType();
            }
            input.ReadMessage(InfoType);
            break;
          }
          case 18: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary();
            if (typeCase_ == TypeOneofCase.Dictionary) {
              subBuilder.MergeFrom(Dictionary);
            }
            input.ReadMessage(subBuilder);
            Dictionary = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex();
            if (typeCase_ == TypeOneofCase.Regex) {
              subBuilder.MergeFrom(Regex);
            }
            input.ReadMessage(subBuilder);
            Regex = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.CustomInfoType.Types.SurrogateType subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.SurrogateType();
            if (typeCase_ == TypeOneofCase.SurrogateType) {
              subBuilder.MergeFrom(SurrogateType);
            }
            input.ReadMessage(subBuilder);
            SurrogateType = subBuilder;
            break;
          }
          case 42: {
            global::Google.Cloud.Dlp.V2.StoredType subBuilder = new global::Google.Cloud.Dlp.V2.StoredType();
            if (typeCase_ == TypeOneofCase.StoredType) {
              subBuilder.MergeFrom(StoredType);
            }
            input.ReadMessage(subBuilder);
            StoredType = subBuilder;
            break;
          }
          case 48: {
            Likelihood = (global::Google.Cloud.Dlp.V2.Likelihood) input.ReadEnum();
            break;
          }
          case 58: {
            detectionRules_.AddEntriesFrom(ref input, _repeated_detectionRules_codec);
            break;
          }
          case 64: {
            ExclusionType = (global::Google.Cloud.Dlp.V2.CustomInfoType.Types.ExclusionType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CustomInfoType message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ExclusionType {
        /// <summary>
        /// A finding of this custom info type will not be excluded from results.
        /// </summary>
        [pbr::OriginalName("EXCLUSION_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A finding of this custom info type will be excluded from final results,
        /// but can still affect rule execution.
        /// </summary>
        [pbr::OriginalName("EXCLUSION_TYPE_EXCLUDE")] Exclude = 1,
      }

      /// <summary>
      /// Custom information type based on a dictionary of words or phrases. This can
      /// be used to match sensitive information specific to the data, such as a list
      /// of employee IDs or job titles.
      ///
      /// Dictionary words are case-insensitive and all characters other than letters
      /// and digits in the unicode [Basic Multilingual
      /// Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)
      /// will be replaced with whitespace when scanning for matches, so the
      /// dictionary phrase "Sam Johnson" will match all three phrases "sam johnson",
      /// "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters
      /// surrounding any match must be of a different type than the adjacent
      /// characters within the word, so letters must be next to non-letters and
      /// digits next to non-digits. For example, the dictionary word "jen" will
      /// match the first three letters of the text "jen123" but will return no
      /// matches for "jennifer".
      ///
      /// Dictionary words containing a large number of characters that are not
      /// letters or digits may result in unexpected findings because such characters
      /// are treated as whitespace. The
      /// [limits](https://cloud.google.com/dlp/limits) page contains details about
      /// the size limits of dictionaries. For dictionaries that do not fit within
      /// these constraints, consider using `LargeCustomDictionaryConfig` in the
      /// `StoredInfoType` API.
      /// </summary>
      public sealed partial class Dictionary : pb::IMessage<Dictionary>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Dictionary> _parser = new pb::MessageParser<Dictionary>(() => new Dictionary());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Dictionary> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.CustomInfoType.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Dictionary() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Dictionary(Dictionary other) : this() {
          switch (other.SourceCase) {
            case SourceOneofCase.WordList:
              WordList = other.WordList.Clone();
              break;
            case SourceOneofCase.CloudStoragePath:
              CloudStoragePath = other.CloudStoragePath.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Dictionary Clone() {
          return new Dictionary(this);
        }

        /// <summary>Field number for the "word_list" field.</summary>
        public const int WordListFieldNumber = 1;
        /// <summary>
        /// List of words or phrases to search for.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary.Types.WordList WordList {
          get { return sourceCase_ == SourceOneofCase.WordList ? (global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary.Types.WordList) source_ : null; }
          set {
            source_ = value;
            sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.WordList;
          }
        }

        /// <summary>Field number for the "cloud_storage_path" field.</summary>
        public const int CloudStoragePathFieldNumber = 3;
        /// <summary>
        /// Newline-delimited file of words in Cloud Storage. Only a single file
        /// is accepted.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.CloudStoragePath CloudStoragePath {
          get { return sourceCase_ == SourceOneofCase.CloudStoragePath ? (global::Google.Cloud.Dlp.V2.CloudStoragePath) source_ : null; }
          set {
            source_ = value;
            sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.CloudStoragePath;
          }
        }

        private object source_;
        /// <summary>Enum of possible cases for the "source" oneof.</summary>
        public enum SourceOneofCase {
          None = 0,
          WordList = 1,
          CloudStoragePath = 3,
        }
        private SourceOneofCase sourceCase_ = SourceOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SourceOneofCase SourceCase {
          get { return sourceCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSource() {
          sourceCase_ = SourceOneofCase.None;
          source_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Dictionary);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Dictionary other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(WordList, other.WordList)) return false;
          if (!object.Equals(CloudStoragePath, other.CloudStoragePath)) return false;
          if (SourceCase != other.SourceCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (sourceCase_ == SourceOneofCase.WordList) hash ^= WordList.GetHashCode();
          if (sourceCase_ == SourceOneofCase.CloudStoragePath) hash ^= CloudStoragePath.GetHashCode();
          hash ^= (int) sourceCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (sourceCase_ == SourceOneofCase.WordList) {
            output.WriteRawTag(10);
            output.WriteMessage(WordList);
          }
          if (sourceCase_ == SourceOneofCase.CloudStoragePath) {
            output.WriteRawTag(26);
            output.WriteMessage(CloudStoragePath);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (sourceCase_ == SourceOneofCase.WordList) {
            output.WriteRawTag(10);
            output.WriteMessage(WordList);
          }
          if (sourceCase_ == SourceOneofCase.CloudStoragePath) {
            output.WriteRawTag(26);
            output.WriteMessage(CloudStoragePath);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (sourceCase_ == SourceOneofCase.WordList) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(WordList);
          }
          if (sourceCase_ == SourceOneofCase.CloudStoragePath) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloudStoragePath);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Dictionary other) {
          if (other == null) {
            return;
          }
          switch (other.SourceCase) {
            case SourceOneofCase.WordList:
              if (WordList == null) {
                WordList = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary.Types.WordList();
              }
              WordList.MergeFrom(other.WordList);
              break;
            case SourceOneofCase.CloudStoragePath:
              if (CloudStoragePath == null) {
                CloudStoragePath = new global::Google.Cloud.Dlp.V2.CloudStoragePath();
              }
              CloudStoragePath.MergeFrom(other.CloudStoragePath);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary.Types.WordList subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary.Types.WordList();
                if (sourceCase_ == SourceOneofCase.WordList) {
                  subBuilder.MergeFrom(WordList);
                }
                input.ReadMessage(subBuilder);
                WordList = subBuilder;
                break;
              }
              case 26: {
                global::Google.Cloud.Dlp.V2.CloudStoragePath subBuilder = new global::Google.Cloud.Dlp.V2.CloudStoragePath();
                if (sourceCase_ == SourceOneofCase.CloudStoragePath) {
                  subBuilder.MergeFrom(CloudStoragePath);
                }
                input.ReadMessage(subBuilder);
                CloudStoragePath = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary.Types.WordList subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary.Types.WordList();
                if (sourceCase_ == SourceOneofCase.WordList) {
                  subBuilder.MergeFrom(WordList);
                }
                input.ReadMessage(subBuilder);
                WordList = subBuilder;
                break;
              }
              case 26: {
                global::Google.Cloud.Dlp.V2.CloudStoragePath subBuilder = new global::Google.Cloud.Dlp.V2.CloudStoragePath();
                if (sourceCase_ == SourceOneofCase.CloudStoragePath) {
                  subBuilder.MergeFrom(CloudStoragePath);
                }
                input.ReadMessage(subBuilder);
                CloudStoragePath = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Dictionary message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Message defining a list of words or phrases to search for in the data.
          /// </summary>
          public sealed partial class WordList : pb::IMessage<WordList>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<WordList> _parser = new pb::MessageParser<WordList>(() => new WordList());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<WordList> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Dictionary.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public WordList() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public WordList(WordList other) : this() {
              words_ = other.words_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public WordList Clone() {
              return new WordList(this);
            }

            /// <summary>Field number for the "words" field.</summary>
            public const int WordsFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_words_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> words_ = new pbc::RepeatedField<string>();
            /// <summary>
            /// Words or phrases defining the dictionary. The dictionary must contain
            /// at least one phrase and every phrase must contain at least 2 characters
            /// that are letters or digits. [required]
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<string> Words {
              get { return words_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as WordList);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(WordList other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!words_.Equals(other.words_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= words_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              words_.WriteTo(output, _repeated_words_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              words_.WriteTo(ref output, _repeated_words_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              size += words_.CalculateSize(_repeated_words_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(WordList other) {
              if (other == null) {
                return;
              }
              words_.Add(other.words_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    words_.AddEntriesFrom(input, _repeated_words_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    words_.AddEntriesFrom(ref input, _repeated_words_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Message defining a custom regular expression.
      /// </summary>
      public sealed partial class Regex : pb::IMessage<Regex>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Regex> _parser = new pb::MessageParser<Regex>(() => new Regex());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Regex> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.CustomInfoType.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Regex() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Regex(Regex other) : this() {
          pattern_ = other.pattern_;
          groupIndexes_ = other.groupIndexes_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Regex Clone() {
          return new Regex(this);
        }

        /// <summary>Field number for the "pattern" field.</summary>
        public const int PatternFieldNumber = 1;
        private string pattern_ = "";
        /// <summary>
        /// Pattern defining the regular expression. Its syntax
        /// (https://github.com/google/re2/wiki/Syntax) can be found under the
        /// google/re2 repository on GitHub.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Pattern {
          get { return pattern_; }
          set {
            pattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "group_indexes" field.</summary>
        public const int GroupIndexesFieldNumber = 2;
        private static readonly pb::FieldCodec<int> _repeated_groupIndexes_codec
            = pb::FieldCodec.ForInt32(18);
        private readonly pbc::RepeatedField<int> groupIndexes_ = new pbc::RepeatedField<int>();
        /// <summary>
        /// The index of the submatch to extract as findings. When not
        /// specified, the entire match is returned. No more than 3 may be included.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> GroupIndexes {
          get { return groupIndexes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Regex);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Regex other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Pattern != other.Pattern) return false;
          if(!groupIndexes_.Equals(other.groupIndexes_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Pattern.Length != 0) hash ^= Pattern.GetHashCode();
          hash ^= groupIndexes_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Pattern.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Pattern);
          }
          groupIndexes_.WriteTo(output, _repeated_groupIndexes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Pattern.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Pattern);
          }
          groupIndexes_.WriteTo(ref output, _repeated_groupIndexes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Pattern.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Pattern);
          }
          size += groupIndexes_.CalculateSize(_repeated_groupIndexes_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Regex other) {
          if (other == null) {
            return;
          }
          if (other.Pattern.Length != 0) {
            Pattern = other.Pattern;
          }
          groupIndexes_.Add(other.groupIndexes_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Pattern = input.ReadString();
                break;
              }
              case 18:
              case 16: {
                groupIndexes_.AddEntriesFrom(input, _repeated_groupIndexes_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Pattern = input.ReadString();
                break;
              }
              case 18:
              case 16: {
                groupIndexes_.AddEntriesFrom(ref input, _repeated_groupIndexes_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message for detecting output from deidentification transformations
      /// such as
      /// [`CryptoReplaceFfxFpeConfig`](https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates#cryptoreplaceffxfpeconfig).
      /// These types of transformations are
      /// those that perform pseudonymization, thereby producing a "surrogate" as
      /// output. This should be used in conjunction with a field on the
      /// transformation such as `surrogate_info_type`. This CustomInfoType does
      /// not support the use of `detection_rules`.
      /// </summary>
      public sealed partial class SurrogateType : pb::IMessage<SurrogateType>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SurrogateType> _parser = new pb::MessageParser<SurrogateType>(() => new SurrogateType());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SurrogateType> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.CustomInfoType.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SurrogateType() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SurrogateType(SurrogateType other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SurrogateType Clone() {
          return new SurrogateType(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SurrogateType);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SurrogateType other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SurrogateType other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Deprecated; use `InspectionRuleSet` instead. Rule for modifying a
      /// `CustomInfoType` to alter behavior under certain circumstances, depending
      /// on the specific details of the rule. Not supported for the `surrogate_type`
      /// custom infoType.
      /// </summary>
      public sealed partial class DetectionRule : pb::IMessage<DetectionRule>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DetectionRule> _parser = new pb::MessageParser<DetectionRule>(() => new DetectionRule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DetectionRule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.CustomInfoType.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DetectionRule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DetectionRule(DetectionRule other) : this() {
          switch (other.TypeCase) {
            case TypeOneofCase.HotwordRule:
              HotwordRule = other.HotwordRule.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DetectionRule Clone() {
          return new DetectionRule(this);
        }

        /// <summary>Field number for the "hotword_rule" field.</summary>
        public const int HotwordRuleFieldNumber = 1;
        /// <summary>
        /// Hotword-based detection rule.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule HotwordRule {
          get { return typeCase_ == TypeOneofCase.HotwordRule ? (global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.HotwordRule;
          }
        }

        private object type_;
        /// <summary>Enum of possible cases for the "type" oneof.</summary>
        public enum TypeOneofCase {
          None = 0,
          HotwordRule = 1,
        }
        private TypeOneofCase typeCase_ = TypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TypeOneofCase TypeCase {
          get { return typeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearType() {
          typeCase_ = TypeOneofCase.None;
          type_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DetectionRule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DetectionRule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(HotwordRule, other.HotwordRule)) return false;
          if (TypeCase != other.TypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (typeCase_ == TypeOneofCase.HotwordRule) hash ^= HotwordRule.GetHashCode();
          hash ^= (int) typeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (typeCase_ == TypeOneofCase.HotwordRule) {
            output.WriteRawTag(10);
            output.WriteMessage(HotwordRule);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (typeCase_ == TypeOneofCase.HotwordRule) {
            output.WriteRawTag(10);
            output.WriteMessage(HotwordRule);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (typeCase_ == TypeOneofCase.HotwordRule) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(HotwordRule);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DetectionRule other) {
          if (other == null) {
            return;
          }
          switch (other.TypeCase) {
            case TypeOneofCase.HotwordRule:
              if (HotwordRule == null) {
                HotwordRule = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule();
              }
              HotwordRule.MergeFrom(other.HotwordRule);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule();
                if (typeCase_ == TypeOneofCase.HotwordRule) {
                  subBuilder.MergeFrom(HotwordRule);
                }
                input.ReadMessage(subBuilder);
                HotwordRule = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule subBuilder = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.HotwordRule();
                if (typeCase_ == TypeOneofCase.HotwordRule) {
                  subBuilder.MergeFrom(HotwordRule);
                }
                input.ReadMessage(subBuilder);
                HotwordRule = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the DetectionRule message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Message for specifying a window around a finding to apply a detection
          /// rule.
          /// </summary>
          public sealed partial class Proximity : pb::IMessage<Proximity>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Proximity> _parser = new pb::MessageParser<Proximity>(() => new Proximity());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Proximity> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Proximity() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Proximity(Proximity other) : this() {
              windowBefore_ = other.windowBefore_;
              windowAfter_ = other.windowAfter_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Proximity Clone() {
              return new Proximity(this);
            }

            /// <summary>Field number for the "window_before" field.</summary>
            public const int WindowBeforeFieldNumber = 1;
            private int windowBefore_;
            /// <summary>
            /// Number of characters before the finding to consider.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int WindowBefore {
              get { return windowBefore_; }
              set {
                windowBefore_ = value;
              }
            }

            /// <summary>Field number for the "window_after" field.</summary>
            public const int WindowAfterFieldNumber = 2;
            private int windowAfter_;
            /// <summary>
            /// Number of characters after the finding to consider.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int WindowAfter {
              get { return windowAfter_; }
              set {
                windowAfter_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Proximity);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Proximity other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (WindowBefore != other.WindowBefore) return false;
              if (WindowAfter != other.WindowAfter) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (WindowBefore != 0) hash ^= WindowBefore.GetHashCode();
              if (WindowAfter != 0) hash ^= WindowAfter.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (WindowBefore != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(WindowBefore);
              }
              if (WindowAfter != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(WindowAfter);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (WindowBefore != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(WindowBefore);
              }
              if (WindowAfter != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(WindowAfter);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (WindowBefore != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(WindowBefore);
              }
              if (WindowAfter != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(WindowAfter);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Proximity other) {
              if (other == null) {
                return;
              }
              if (other.WindowBefore != 0) {
                WindowBefore = other.WindowBefore;
              }
              if (other.WindowAfter != 0) {
                WindowAfter = other.WindowAfter;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    WindowBefore = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    WindowAfter = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    WindowBefore = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    WindowAfter = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Message for specifying an adjustment to the likelihood of a finding as
          /// part of a detection rule.
          /// </summary>
          public sealed partial class LikelihoodAdjustment : pb::IMessage<LikelihoodAdjustment>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<LikelihoodAdjustment> _parser = new pb::MessageParser<LikelihoodAdjustment>(() => new LikelihoodAdjustment());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<LikelihoodAdjustment> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LikelihoodAdjustment() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LikelihoodAdjustment(LikelihoodAdjustment other) : this() {
              switch (other.AdjustmentCase) {
                case AdjustmentOneofCase.FixedLikelihood:
                  FixedLikelihood = other.FixedLikelihood;
                  break;
                case AdjustmentOneofCase.RelativeLikelihood:
                  RelativeLikelihood = other.RelativeLikelihood;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public LikelihoodAdjustment Clone() {
              return new LikelihoodAdjustment(this);
            }

            /// <summary>Field number for the "fixed_likelihood" field.</summary>
            public const int FixedLikelihoodFieldNumber = 1;
            /// <summary>
            /// Set the likelihood of a finding to a fixed value.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.Dlp.V2.Likelihood FixedLikelihood {
              get { return adjustmentCase_ == AdjustmentOneofCase.FixedLikelihood ? (global::Google.Cloud.Dlp.V2.Likelihood) adjustment_ : global::Google.Cloud.Dlp.V2.Likelihood.Unspecified; }
              set {
                adjustment_ = value;
                adjustmentCase_ = AdjustmentOneofCase.FixedLikelihood;
              }
            }

            /// <summary>Field number for the "relative_likelihood" field.</summary>
            public const int RelativeLikelihoodFieldNumber = 2;
            /// <summary>
            /// Increase or decrease the likelihood by the specified number of
            /// levels. For example, if a finding would be `POSSIBLE` without the
            /// detection rule and `relative_likelihood` is 1, then it is upgraded to
            /// `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`.
            /// Likelihood may never drop below `VERY_UNLIKELY` or exceed
            /// `VERY_LIKELY`, so applying an adjustment of 1 followed by an
            /// adjustment of -1 when base likelihood is `VERY_LIKELY` will result in
            /// a final likelihood of `LIKELY`.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int RelativeLikelihood {
              get { return adjustmentCase_ == AdjustmentOneofCase.RelativeLikelihood ? (int) adjustment_ : 0; }
              set {
                adjustment_ = value;
                adjustmentCase_ = AdjustmentOneofCase.RelativeLikelihood;
              }
            }

            private object adjustment_;
            /// <summary>Enum of possible cases for the "adjustment" oneof.</summary>
            public enum AdjustmentOneofCase {
              None = 0,
              FixedLikelihood = 1,
              RelativeLikelihood = 2,
            }
            private AdjustmentOneofCase adjustmentCase_ = AdjustmentOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AdjustmentOneofCase AdjustmentCase {
              get { return adjustmentCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearAdjustment() {
              adjustmentCase_ = AdjustmentOneofCase.None;
              adjustment_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as LikelihoodAdjustment);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(LikelihoodAdjustment other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FixedLikelihood != other.FixedLikelihood) return false;
              if (RelativeLikelihood != other.RelativeLikelihood) return false;
              if (AdjustmentCase != other.AdjustmentCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (adjustmentCase_ == AdjustmentOneofCase.FixedLikelihood) hash ^= FixedLikelihood.GetHashCode();
              if (adjustmentCase_ == AdjustmentOneofCase.RelativeLikelihood) hash ^= RelativeLikelihood.GetHashCode();
              hash ^= (int) adjustmentCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (adjustmentCase_ == AdjustmentOneofCase.FixedLikelihood) {
                output.WriteRawTag(8);
                output.WriteEnum((int) FixedLikelihood);
              }
              if (adjustmentCase_ == AdjustmentOneofCase.RelativeLikelihood) {
                output.WriteRawTag(16);
                output.WriteInt32(RelativeLikelihood);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (adjustmentCase_ == AdjustmentOneofCase.FixedLikelihood) {
                output.WriteRawTag(8);
                output.WriteEnum((int) FixedLikelihood);
              }
              if (adjustmentCase_ == AdjustmentOneofCase.RelativeLikelihood) {
                output.WriteRawTag(16);
                output.WriteInt32(RelativeLikelihood);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (adjustmentCase_ == AdjustmentOneofCase.FixedLikelihood) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FixedLikelihood);
              }
              if (adjustmentCase_ == AdjustmentOneofCase.RelativeLikelihood) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(RelativeLikelihood);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(LikelihoodAdjustment other) {
              if (other == null) {
                return;
              }
              switch (other.AdjustmentCase) {
                case AdjustmentOneofCase.FixedLikelihood:
                  FixedLikelihood = other.FixedLikelihood;
                  break;
                case AdjustmentOneofCase.RelativeLikelihood:
                  RelativeLikelihood = other.RelativeLikelihood;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    adjustment_ = input.ReadEnum();
                    adjustmentCase_ = AdjustmentOneofCase.FixedLikelihood;
                    break;
                  }
                  case 16: {
                    RelativeLikelihood = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    adjustment_ = input.ReadEnum();
                    adjustmentCase_ = AdjustmentOneofCase.FixedLikelihood;
                    break;
                  }
                  case 16: {
                    RelativeLikelihood = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// The rule that adjusts the likelihood of findings within a certain
          /// proximity of hotwords.
          /// </summary>
          public sealed partial class HotwordRule : pb::IMessage<HotwordRule>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<HotwordRule> _parser = new pb::MessageParser<HotwordRule>(() => new HotwordRule());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<HotwordRule> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public HotwordRule() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public HotwordRule(HotwordRule other) : this() {
              hotwordRegex_ = other.hotwordRegex_ != null ? other.hotwordRegex_.Clone() : null;
              proximity_ = other.proximity_ != null ? other.proximity_.Clone() : null;
              likelihoodAdjustment_ = other.likelihoodAdjustment_ != null ? other.likelihoodAdjustment_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public HotwordRule Clone() {
              return new HotwordRule(this);
            }

            /// <summary>Field number for the "hotword_regex" field.</summary>
            public const int HotwordRegexFieldNumber = 1;
            private global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex hotwordRegex_;
            /// <summary>
            /// Regular expression pattern defining what qualifies as a hotword.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex HotwordRegex {
              get { return hotwordRegex_; }
              set {
                hotwordRegex_ = value;
              }
            }

            /// <summary>Field number for the "proximity" field.</summary>
            public const int ProximityFieldNumber = 2;
            private global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.Proximity proximity_;
            /// <summary>
            /// Proximity of the finding within which the entire hotword must reside.
            /// The total length of the window cannot exceed 1000 characters. Note that
            /// the finding itself will be included in the window, so that hotwords may
            /// be used to match substrings of the finding itself. For example, the
            /// certainty of a phone number regex "\(\d{3}\) \d{3}-\d{4}" could be
            /// adjusted upwards if the area code is known to be the local area code of
            /// a company office using the hotword regex "\(xxx\)", where "xxx"
            /// is the area code in question.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.Proximity Proximity {
              get { return proximity_; }
              set {
                proximity_ = value;
              }
            }

            /// <summary>Field number for the "likelihood_adjustment" field.</summary>
            public const int LikelihoodAdjustmentFieldNumber = 3;
            private global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.LikelihoodAdjustment likelihoodAdjustment_;
            /// <summary>
            /// Likelihood adjustment to apply to all matching findings.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.LikelihoodAdjustment LikelihoodAdjustment {
              get { return likelihoodAdjustment_; }
              set {
                likelihoodAdjustment_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as HotwordRule);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(HotwordRule other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(HotwordRegex, other.HotwordRegex)) return false;
              if (!object.Equals(Proximity, other.Proximity)) return false;
              if (!object.Equals(LikelihoodAdjustment, other.LikelihoodAdjustment)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (hotwordRegex_ != null) hash ^= HotwordRegex.GetHashCode();
              if (proximity_ != null) hash ^= Proximity.GetHashCode();
              if (likelihoodAdjustment_ != null) hash ^= LikelihoodAdjustment.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (hotwordRegex_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(HotwordRegex);
              }
              if (proximity_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Proximity);
              }
              if (likelihoodAdjustment_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(LikelihoodAdjustment);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (hotwordRegex_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(HotwordRegex);
              }
              if (proximity_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Proximity);
              }
              if (likelihoodAdjustment_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(LikelihoodAdjustment);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (hotwordRegex_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(HotwordRegex);
              }
              if (proximity_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proximity);
              }
              if (likelihoodAdjustment_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(LikelihoodAdjustment);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(HotwordRule other) {
              if (other == null) {
                return;
              }
              if (other.hotwordRegex_ != null) {
                if (hotwordRegex_ == null) {
                  HotwordRegex = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex();
                }
                HotwordRegex.MergeFrom(other.HotwordRegex);
              }
              if (other.proximity_ != null) {
                if (proximity_ == null) {
                  Proximity = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.Proximity();
                }
                Proximity.MergeFrom(other.Proximity);
              }
              if (other.likelihoodAdjustment_ != null) {
                if (likelihoodAdjustment_ == null) {
                  LikelihoodAdjustment = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.LikelihoodAdjustment();
                }
                LikelihoodAdjustment.MergeFrom(other.LikelihoodAdjustment);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (hotwordRegex_ == null) {
                      HotwordRegex = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex();
                    }
                    input.ReadMessage(HotwordRegex);
                    break;
                  }
                  case 18: {
                    if (proximity_ == null) {
                      Proximity = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.Proximity();
                    }
                    input.ReadMessage(Proximity);
                    break;
                  }
                  case 26: {
                    if (likelihoodAdjustment_ == null) {
                      LikelihoodAdjustment = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.LikelihoodAdjustment();
                    }
                    input.ReadMessage(LikelihoodAdjustment);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (hotwordRegex_ == null) {
                      HotwordRegex = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.Regex();
                    }
                    input.ReadMessage(HotwordRegex);
                    break;
                  }
                  case 18: {
                    if (proximity_ == null) {
                      Proximity = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.Proximity();
                    }
                    input.ReadMessage(Proximity);
                    break;
                  }
                  case 26: {
                    if (likelihoodAdjustment_ == null) {
                      LikelihoodAdjustment = new global::Google.Cloud.Dlp.V2.CustomInfoType.Types.DetectionRule.Types.LikelihoodAdjustment();
                    }
                    input.ReadMessage(LikelihoodAdjustment);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// General identifier of a data field in a storage service.
  /// </summary>
  public sealed partial class FieldId : pb::IMessage<FieldId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FieldId> _parser = new pb::MessageParser<FieldId>(() => new FieldId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FieldId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldId(FieldId other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldId Clone() {
      return new FieldId(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name describing the field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FieldId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FieldId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FieldId other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Datastore partition ID.
  /// A partition ID identifies a grouping of entities. The grouping is always
  /// by project and namespace, however the namespace ID may be empty.
  ///
  /// A partition ID contains several dimensions:
  /// project ID and namespace ID.
  /// </summary>
  public sealed partial class PartitionId : pb::IMessage<PartitionId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PartitionId> _parser = new pb::MessageParser<PartitionId>(() => new PartitionId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PartitionId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionId(PartitionId other) : this() {
      projectId_ = other.projectId_;
      namespaceId_ = other.namespaceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionId Clone() {
      return new PartitionId(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 2;
    private string projectId_ = "";
    /// <summary>
    /// The ID of the project to which the entities belong.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "namespace_id" field.</summary>
    public const int NamespaceIdFieldNumber = 4;
    private string namespaceId_ = "";
    /// <summary>
    /// If not empty, the ID of the namespace to which the entities belong.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NamespaceId {
      get { return namespaceId_; }
      set {
        namespaceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PartitionId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PartitionId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (NamespaceId != other.NamespaceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (NamespaceId.Length != 0) hash ^= NamespaceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      if (NamespaceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NamespaceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      if (NamespaceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NamespaceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (NamespaceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NamespaceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PartitionId other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.NamespaceId.Length != 0) {
        NamespaceId = other.NamespaceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 34: {
            NamespaceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 34: {
            NamespaceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A representation of a Datastore kind.
  /// </summary>
  public sealed partial class KindExpression : pb::IMessage<KindExpression>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KindExpression> _parser = new pb::MessageParser<KindExpression>(() => new KindExpression());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KindExpression> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KindExpression() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KindExpression(KindExpression other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KindExpression Clone() {
      return new KindExpression(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the kind.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KindExpression);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KindExpression other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KindExpression other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Options defining a data set within Google Cloud Datastore.
  /// </summary>
  public sealed partial class DatastoreOptions : pb::IMessage<DatastoreOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatastoreOptions> _parser = new pb::MessageParser<DatastoreOptions>(() => new DatastoreOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatastoreOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatastoreOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatastoreOptions(DatastoreOptions other) : this() {
      partitionId_ = other.partitionId_ != null ? other.partitionId_.Clone() : null;
      kind_ = other.kind_ != null ? other.kind_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatastoreOptions Clone() {
      return new DatastoreOptions(this);
    }

    /// <summary>Field number for the "partition_id" field.</summary>
    public const int PartitionIdFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.PartitionId partitionId_;
    /// <summary>
    /// A partition ID identifies a grouping of entities. The grouping is always
    /// by project and namespace, however the namespace ID may be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.PartitionId PartitionId {
      get { return partitionId_; }
      set {
        partitionId_ = value;
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.KindExpression kind_;
    /// <summary>
    /// The kind to process.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.KindExpression Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatastoreOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatastoreOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PartitionId, other.PartitionId)) return false;
      if (!object.Equals(Kind, other.Kind)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (partitionId_ != null) hash ^= PartitionId.GetHashCode();
      if (kind_ != null) hash ^= Kind.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (partitionId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PartitionId);
      }
      if (kind_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Kind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (partitionId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PartitionId);
      }
      if (kind_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Kind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (partitionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionId);
      }
      if (kind_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Kind);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatastoreOptions other) {
      if (other == null) {
        return;
      }
      if (other.partitionId_ != null) {
        if (partitionId_ == null) {
          PartitionId = new global::Google.Cloud.Dlp.V2.PartitionId();
        }
        PartitionId.MergeFrom(other.PartitionId);
      }
      if (other.kind_ != null) {
        if (kind_ == null) {
          Kind = new global::Google.Cloud.Dlp.V2.KindExpression();
        }
        Kind.MergeFrom(other.Kind);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (partitionId_ == null) {
              PartitionId = new global::Google.Cloud.Dlp.V2.PartitionId();
            }
            input.ReadMessage(PartitionId);
            break;
          }
          case 18: {
            if (kind_ == null) {
              Kind = new global::Google.Cloud.Dlp.V2.KindExpression();
            }
            input.ReadMessage(Kind);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (partitionId_ == null) {
              PartitionId = new global::Google.Cloud.Dlp.V2.PartitionId();
            }
            input.ReadMessage(PartitionId);
            break;
          }
          case 18: {
            if (kind_ == null) {
              Kind = new global::Google.Cloud.Dlp.V2.KindExpression();
            }
            input.ReadMessage(Kind);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message representing a set of files in a Cloud Storage bucket. Regular
  /// expressions are used to allow fine-grained control over which files in the
  /// bucket to include.
  ///
  /// Included files are those that match at least one item in `include_regex` and
  /// do not match any items in `exclude_regex`. Note that a file that matches
  /// items from both lists will _not_ be included. For a match to occur, the
  /// entire file path (i.e., everything in the url after the bucket name) must
  /// match the regular expression.
  ///
  /// For example, given the input `{bucket_name: "mybucket", include_regex:
  /// ["directory1/.*"], exclude_regex:
  /// ["directory1/excluded.*"]}`:
  ///
  /// * `gs://mybucket/directory1/myfile` will be included
  /// * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches
  /// across `/`)
  /// * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the
  /// full path doesn't match any items in `include_regex`)
  /// * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path
  /// matches an item in `exclude_regex`)
  ///
  /// If `include_regex` is left empty, it will match all files by default
  /// (this is equivalent to setting `include_regex: [".*"]`).
  ///
  /// Some other common use cases:
  ///
  /// * `{bucket_name: "mybucket", exclude_regex: [".*\.pdf"]}` will include all
  /// files in `mybucket` except for .pdf files
  /// * `{bucket_name: "mybucket", include_regex: ["directory/[^/]+"]}` will
  /// include all files directly under `gs://mybucket/directory/`, without matching
  /// across `/`
  /// </summary>
  public sealed partial class CloudStorageRegexFileSet : pb::IMessage<CloudStorageRegexFileSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloudStorageRegexFileSet> _parser = new pb::MessageParser<CloudStorageRegexFileSet>(() => new CloudStorageRegexFileSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloudStorageRegexFileSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStorageRegexFileSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStorageRegexFileSet(CloudStorageRegexFileSet other) : this() {
      bucketName_ = other.bucketName_;
      includeRegex_ = other.includeRegex_.Clone();
      excludeRegex_ = other.excludeRegex_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStorageRegexFileSet Clone() {
      return new CloudStorageRegexFileSet(this);
    }

    /// <summary>Field number for the "bucket_name" field.</summary>
    public const int BucketNameFieldNumber = 1;
    private string bucketName_ = "";
    /// <summary>
    /// The name of a Cloud Storage bucket. Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BucketName {
      get { return bucketName_; }
      set {
        bucketName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "include_regex" field.</summary>
    public const int IncludeRegexFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_includeRegex_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> includeRegex_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of regular expressions matching file paths to include. All files in
    /// the bucket that match at least one of these regular expressions will be
    /// included in the set of files, except for those that also match an item in
    /// `exclude_regex`. Leaving this field empty will match all files by default
    /// (this is equivalent to including `.*` in the list).
    ///
    /// Regular expressions use RE2
    /// [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found
    /// under the google/re2 repository on GitHub.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> IncludeRegex {
      get { return includeRegex_; }
    }

    /// <summary>Field number for the "exclude_regex" field.</summary>
    public const int ExcludeRegexFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_excludeRegex_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> excludeRegex_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of regular expressions matching file paths to exclude. All files in
    /// the bucket that match at least one of these regular expressions will be
    /// excluded from the scan.
    ///
    /// Regular expressions use RE2
    /// [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found
    /// under the google/re2 repository on GitHub.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ExcludeRegex {
      get { return excludeRegex_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloudStorageRegexFileSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloudStorageRegexFileSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BucketName != other.BucketName) return false;
      if(!includeRegex_.Equals(other.includeRegex_)) return false;
      if(!excludeRegex_.Equals(other.excludeRegex_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BucketName.Length != 0) hash ^= BucketName.GetHashCode();
      hash ^= includeRegex_.GetHashCode();
      hash ^= excludeRegex_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BucketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BucketName);
      }
      includeRegex_.WriteTo(output, _repeated_includeRegex_codec);
      excludeRegex_.WriteTo(output, _repeated_excludeRegex_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BucketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BucketName);
      }
      includeRegex_.WriteTo(ref output, _repeated_includeRegex_codec);
      excludeRegex_.WriteTo(ref output, _repeated_excludeRegex_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BucketName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BucketName);
      }
      size += includeRegex_.CalculateSize(_repeated_includeRegex_codec);
      size += excludeRegex_.CalculateSize(_repeated_excludeRegex_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloudStorageRegexFileSet other) {
      if (other == null) {
        return;
      }
      if (other.BucketName.Length != 0) {
        BucketName = other.BucketName;
      }
      includeRegex_.Add(other.includeRegex_);
      excludeRegex_.Add(other.excludeRegex_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BucketName = input.ReadString();
            break;
          }
          case 18: {
            includeRegex_.AddEntriesFrom(input, _repeated_includeRegex_codec);
            break;
          }
          case 26: {
            excludeRegex_.AddEntriesFrom(input, _repeated_excludeRegex_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BucketName = input.ReadString();
            break;
          }
          case 18: {
            includeRegex_.AddEntriesFrom(ref input, _repeated_includeRegex_codec);
            break;
          }
          case 26: {
            excludeRegex_.AddEntriesFrom(ref input, _repeated_excludeRegex_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Options defining a file or a set of files within a Google Cloud Storage
  /// bucket.
  /// </summary>
  public sealed partial class CloudStorageOptions : pb::IMessage<CloudStorageOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloudStorageOptions> _parser = new pb::MessageParser<CloudStorageOptions>(() => new CloudStorageOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloudStorageOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStorageOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStorageOptions(CloudStorageOptions other) : this() {
      fileSet_ = other.fileSet_ != null ? other.fileSet_.Clone() : null;
      bytesLimitPerFile_ = other.bytesLimitPerFile_;
      bytesLimitPerFilePercent_ = other.bytesLimitPerFilePercent_;
      fileTypes_ = other.fileTypes_.Clone();
      sampleMethod_ = other.sampleMethod_;
      filesLimitPercent_ = other.filesLimitPercent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStorageOptions Clone() {
      return new CloudStorageOptions(this);
    }

    /// <summary>Field number for the "file_set" field.</summary>
    public const int FileSetFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.FileSet fileSet_;
    /// <summary>
    /// The set of one or more files to scan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.FileSet FileSet {
      get { return fileSet_; }
      set {
        fileSet_ = value;
      }
    }

    /// <summary>Field number for the "bytes_limit_per_file" field.</summary>
    public const int BytesLimitPerFileFieldNumber = 4;
    private long bytesLimitPerFile_;
    /// <summary>
    /// Max number of bytes to scan from a file. If a scanned file's size is bigger
    /// than this value then the rest of the bytes are omitted. Only one
    /// of bytes_limit_per_file and bytes_limit_per_file_percent can be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BytesLimitPerFile {
      get { return bytesLimitPerFile_; }
      set {
        bytesLimitPerFile_ = value;
      }
    }

    /// <summary>Field number for the "bytes_limit_per_file_percent" field.</summary>
    public const int BytesLimitPerFilePercentFieldNumber = 8;
    private int bytesLimitPerFilePercent_;
    /// <summary>
    /// Max percentage of bytes to scan from a file. The rest are omitted. The
    /// number of bytes scanned is rounded down. Must be between 0 and 100,
    /// inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one
    /// of bytes_limit_per_file and bytes_limit_per_file_percent can be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BytesLimitPerFilePercent {
      get { return bytesLimitPerFilePercent_; }
      set {
        bytesLimitPerFilePercent_ = value;
      }
    }

    /// <summary>Field number for the "file_types" field.</summary>
    public const int FileTypesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.FileType> _repeated_fileTypes_codec
        = pb::FieldCodec.ForEnum(42, x => (int) x, x => (global::Google.Cloud.Dlp.V2.FileType) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FileType> fileTypes_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FileType>();
    /// <summary>
    /// List of file type groups to include in the scan.
    /// If empty, all files are scanned and available data format processors
    /// are applied. In addition, the binary content of the selected files
    /// is always scanned as well.
    /// Images are scanned only as binary if the specified region
    /// does not support image inspection and no file_types were specified.
    /// Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FileType> FileTypes {
      get { return fileTypes_; }
    }

    /// <summary>Field number for the "sample_method" field.</summary>
    public const int SampleMethodFieldNumber = 6;
    private global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.SampleMethod sampleMethod_ = global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.SampleMethod.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.SampleMethod SampleMethod {
      get { return sampleMethod_; }
      set {
        sampleMethod_ = value;
      }
    }

    /// <summary>Field number for the "files_limit_percent" field.</summary>
    public const int FilesLimitPercentFieldNumber = 7;
    private int filesLimitPercent_;
    /// <summary>
    /// Limits the number of files to scan to this percentage of the input FileSet.
    /// Number of files scanned is rounded down. Must be between 0 and 100,
    /// inclusively. Both 0 and 100 means no limit. Defaults to 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FilesLimitPercent {
      get { return filesLimitPercent_; }
      set {
        filesLimitPercent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloudStorageOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloudStorageOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FileSet, other.FileSet)) return false;
      if (BytesLimitPerFile != other.BytesLimitPerFile) return false;
      if (BytesLimitPerFilePercent != other.BytesLimitPerFilePercent) return false;
      if(!fileTypes_.Equals(other.fileTypes_)) return false;
      if (SampleMethod != other.SampleMethod) return false;
      if (FilesLimitPercent != other.FilesLimitPercent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fileSet_ != null) hash ^= FileSet.GetHashCode();
      if (BytesLimitPerFile != 0L) hash ^= BytesLimitPerFile.GetHashCode();
      if (BytesLimitPerFilePercent != 0) hash ^= BytesLimitPerFilePercent.GetHashCode();
      hash ^= fileTypes_.GetHashCode();
      if (SampleMethod != global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.SampleMethod.Unspecified) hash ^= SampleMethod.GetHashCode();
      if (FilesLimitPercent != 0) hash ^= FilesLimitPercent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fileSet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FileSet);
      }
      if (BytesLimitPerFile != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BytesLimitPerFile);
      }
      fileTypes_.WriteTo(output, _repeated_fileTypes_codec);
      if (SampleMethod != global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.SampleMethod.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SampleMethod);
      }
      if (FilesLimitPercent != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FilesLimitPercent);
      }
      if (BytesLimitPerFilePercent != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(BytesLimitPerFilePercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fileSet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FileSet);
      }
      if (BytesLimitPerFile != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BytesLimitPerFile);
      }
      fileTypes_.WriteTo(ref output, _repeated_fileTypes_codec);
      if (SampleMethod != global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.SampleMethod.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SampleMethod);
      }
      if (FilesLimitPercent != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FilesLimitPercent);
      }
      if (BytesLimitPerFilePercent != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(BytesLimitPerFilePercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fileSet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FileSet);
      }
      if (BytesLimitPerFile != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesLimitPerFile);
      }
      if (BytesLimitPerFilePercent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BytesLimitPerFilePercent);
      }
      size += fileTypes_.CalculateSize(_repeated_fileTypes_codec);
      if (SampleMethod != global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.SampleMethod.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SampleMethod);
      }
      if (FilesLimitPercent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FilesLimitPercent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloudStorageOptions other) {
      if (other == null) {
        return;
      }
      if (other.fileSet_ != null) {
        if (fileSet_ == null) {
          FileSet = new global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.FileSet();
        }
        FileSet.MergeFrom(other.FileSet);
      }
      if (other.BytesLimitPerFile != 0L) {
        BytesLimitPerFile = other.BytesLimitPerFile;
      }
      if (other.BytesLimitPerFilePercent != 0) {
        BytesLimitPerFilePercent = other.BytesLimitPerFilePercent;
      }
      fileTypes_.Add(other.fileTypes_);
      if (other.SampleMethod != global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.SampleMethod.Unspecified) {
        SampleMethod = other.SampleMethod;
      }
      if (other.FilesLimitPercent != 0) {
        FilesLimitPercent = other.FilesLimitPercent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fileSet_ == null) {
              FileSet = new global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.FileSet();
            }
            input.ReadMessage(FileSet);
            break;
          }
          case 32: {
            BytesLimitPerFile = input.ReadInt64();
            break;
          }
          case 42:
          case 40: {
            fileTypes_.AddEntriesFrom(input, _repeated_fileTypes_codec);
            break;
          }
          case 48: {
            SampleMethod = (global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.SampleMethod) input.ReadEnum();
            break;
          }
          case 56: {
            FilesLimitPercent = input.ReadInt32();
            break;
          }
          case 64: {
            BytesLimitPerFilePercent = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fileSet_ == null) {
              FileSet = new global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.FileSet();
            }
            input.ReadMessage(FileSet);
            break;
          }
          case 32: {
            BytesLimitPerFile = input.ReadInt64();
            break;
          }
          case 42:
          case 40: {
            fileTypes_.AddEntriesFrom(ref input, _repeated_fileTypes_codec);
            break;
          }
          case 48: {
            SampleMethod = (global::Google.Cloud.Dlp.V2.CloudStorageOptions.Types.SampleMethod) input.ReadEnum();
            break;
          }
          case 56: {
            FilesLimitPercent = input.ReadInt32();
            break;
          }
          case 64: {
            BytesLimitPerFilePercent = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CloudStorageOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// How to sample bytes if not all bytes are scanned. Meaningful only when used
      /// in conjunction with bytes_limit_per_file. If not specified, scanning would
      /// start from the top.
      /// </summary>
      public enum SampleMethod {
        [pbr::OriginalName("SAMPLE_METHOD_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Scan from the top (default).
        /// </summary>
        [pbr::OriginalName("TOP")] Top = 1,
        /// <summary>
        /// For each file larger than bytes_limit_per_file, randomly pick the offset
        /// to start scanning. The scanned bytes are contiguous.
        /// </summary>
        [pbr::OriginalName("RANDOM_START")] RandomStart = 2,
      }

      /// <summary>
      /// Set of files to scan.
      /// </summary>
      public sealed partial class FileSet : pb::IMessage<FileSet>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FileSet> _parser = new pb::MessageParser<FileSet>(() => new FileSet());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FileSet> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.CloudStorageOptions.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FileSet() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FileSet(FileSet other) : this() {
          url_ = other.url_;
          regexFileSet_ = other.regexFileSet_ != null ? other.regexFileSet_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FileSet Clone() {
          return new FileSet(this);
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 1;
        private string url_ = "";
        /// <summary>
        /// The Cloud Storage url of the file(s) to scan, in the format
        /// `gs://&lt;bucket>/&lt;path>`. Trailing wildcard in the path is allowed.
        ///
        /// If the url ends in a trailing slash, the bucket or directory represented
        /// by the url will be scanned non-recursively (content in sub-directories
        /// will not be scanned). This means that `gs://mybucket/` is equivalent to
        /// `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to
        /// `gs://mybucket/directory/*`.
        ///
        /// Exactly one of `url` or `regex_file_set` must be set.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "regex_file_set" field.</summary>
        public const int RegexFileSetFieldNumber = 2;
        private global::Google.Cloud.Dlp.V2.CloudStorageRegexFileSet regexFileSet_;
        /// <summary>
        /// The regex-filtered set of files to scan. Exactly one of `url` or
        /// `regex_file_set` must be set.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.CloudStorageRegexFileSet RegexFileSet {
          get { return regexFileSet_; }
          set {
            regexFileSet_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FileSet);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FileSet other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Url != other.Url) return false;
          if (!object.Equals(RegexFileSet, other.RegexFileSet)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (regexFileSet_ != null) hash ^= RegexFileSet.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Url.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Url);
          }
          if (regexFileSet_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(RegexFileSet);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Url.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Url);
          }
          if (regexFileSet_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(RegexFileSet);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (regexFileSet_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegexFileSet);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FileSet other) {
          if (other == null) {
            return;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          if (other.regexFileSet_ != null) {
            if (regexFileSet_ == null) {
              RegexFileSet = new global::Google.Cloud.Dlp.V2.CloudStorageRegexFileSet();
            }
            RegexFileSet.MergeFrom(other.RegexFileSet);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Url = input.ReadString();
                break;
              }
              case 18: {
                if (regexFileSet_ == null) {
                  RegexFileSet = new global::Google.Cloud.Dlp.V2.CloudStorageRegexFileSet();
                }
                input.ReadMessage(RegexFileSet);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Url = input.ReadString();
                break;
              }
              case 18: {
                if (regexFileSet_ == null) {
                  RegexFileSet = new global::Google.Cloud.Dlp.V2.CloudStorageRegexFileSet();
                }
                input.ReadMessage(RegexFileSet);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Message representing a set of files in Cloud Storage.
  /// </summary>
  public sealed partial class CloudStorageFileSet : pb::IMessage<CloudStorageFileSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloudStorageFileSet> _parser = new pb::MessageParser<CloudStorageFileSet>(() => new CloudStorageFileSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloudStorageFileSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStorageFileSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStorageFileSet(CloudStorageFileSet other) : this() {
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStorageFileSet Clone() {
      return new CloudStorageFileSet(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    /// <summary>
    /// The url, in the format `gs://&lt;bucket>/&lt;path>`. Trailing wildcard in the
    /// path is allowed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloudStorageFileSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloudStorageFileSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloudStorageFileSet other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message representing a single file or path in Cloud Storage.
  /// </summary>
  public sealed partial class CloudStoragePath : pb::IMessage<CloudStoragePath>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloudStoragePath> _parser = new pb::MessageParser<CloudStoragePath>(() => new CloudStoragePath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloudStoragePath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStoragePath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStoragePath(CloudStoragePath other) : this() {
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudStoragePath Clone() {
      return new CloudStoragePath(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    /// <summary>
    /// A url representing a file or path (no wildcards) in Cloud Storage.
    /// Example: gs://[BUCKET_NAME]/dictionary.txt
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloudStoragePath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloudStoragePath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloudStoragePath other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Options defining BigQuery table and row identifiers.
  /// </summary>
  public sealed partial class BigQueryOptions : pb::IMessage<BigQueryOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BigQueryOptions> _parser = new pb::MessageParser<BigQueryOptions>(() => new BigQueryOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BigQueryOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryOptions(BigQueryOptions other) : this() {
      tableReference_ = other.tableReference_ != null ? other.tableReference_.Clone() : null;
      identifyingFields_ = other.identifyingFields_.Clone();
      rowsLimit_ = other.rowsLimit_;
      rowsLimitPercent_ = other.rowsLimitPercent_;
      sampleMethod_ = other.sampleMethod_;
      excludedFields_ = other.excludedFields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryOptions Clone() {
      return new BigQueryOptions(this);
    }

    /// <summary>Field number for the "table_reference" field.</summary>
    public const int TableReferenceFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.BigQueryTable tableReference_;
    /// <summary>
    /// Complete BigQuery table reference.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.BigQueryTable TableReference {
      get { return tableReference_; }
      set {
        tableReference_ = value;
      }
    }

    /// <summary>Field number for the "identifying_fields" field.</summary>
    public const int IdentifyingFieldsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.FieldId> _repeated_identifyingFields_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Dlp.V2.FieldId.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> identifyingFields_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId>();
    /// <summary>
    /// Table fields that may uniquely identify a row within the table. When
    /// `actions.saveFindings.outputConfig.table` is specified, the values of
    /// columns specified here are available in the output table under
    /// `location.content_locations.record_location.record_key.id_values`. Nested
    /// fields such as `person.birthdate.year` are allowed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> IdentifyingFields {
      get { return identifyingFields_; }
    }

    /// <summary>Field number for the "rows_limit" field.</summary>
    public const int RowsLimitFieldNumber = 3;
    private long rowsLimit_;
    /// <summary>
    /// Max number of rows to scan. If the table has more rows than this value, the
    /// rest of the rows are omitted. If not set, or if set to 0, all rows will be
    /// scanned. Only one of rows_limit and rows_limit_percent can be specified.
    /// Cannot be used in conjunction with TimespanConfig.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RowsLimit {
      get { return rowsLimit_; }
      set {
        rowsLimit_ = value;
      }
    }

    /// <summary>Field number for the "rows_limit_percent" field.</summary>
    public const int RowsLimitPercentFieldNumber = 6;
    private int rowsLimitPercent_;
    /// <summary>
    /// Max percentage of rows to scan. The rest are omitted. The number of rows
    /// scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and
    /// 100 means no limit. Defaults to 0. Only one of rows_limit and
    /// rows_limit_percent can be specified. Cannot be used in conjunction with
    /// TimespanConfig.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RowsLimitPercent {
      get { return rowsLimitPercent_; }
      set {
        rowsLimitPercent_ = value;
      }
    }

    /// <summary>Field number for the "sample_method" field.</summary>
    public const int SampleMethodFieldNumber = 4;
    private global::Google.Cloud.Dlp.V2.BigQueryOptions.Types.SampleMethod sampleMethod_ = global::Google.Cloud.Dlp.V2.BigQueryOptions.Types.SampleMethod.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.BigQueryOptions.Types.SampleMethod SampleMethod {
      get { return sampleMethod_; }
      set {
        sampleMethod_ = value;
      }
    }

    /// <summary>Field number for the "excluded_fields" field.</summary>
    public const int ExcludedFieldsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.FieldId> _repeated_excludedFields_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Dlp.V2.FieldId.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> excludedFields_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId>();
    /// <summary>
    /// References to fields excluded from scanning. This allows you to skip
    /// inspection of entire columns which you know have no findings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> ExcludedFields {
      get { return excludedFields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BigQueryOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BigQueryOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TableReference, other.TableReference)) return false;
      if(!identifyingFields_.Equals(other.identifyingFields_)) return false;
      if (RowsLimit != other.RowsLimit) return false;
      if (RowsLimitPercent != other.RowsLimitPercent) return false;
      if (SampleMethod != other.SampleMethod) return false;
      if(!excludedFields_.Equals(other.excludedFields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tableReference_ != null) hash ^= TableReference.GetHashCode();
      hash ^= identifyingFields_.GetHashCode();
      if (RowsLimit != 0L) hash ^= RowsLimit.GetHashCode();
      if (RowsLimitPercent != 0) hash ^= RowsLimitPercent.GetHashCode();
      if (SampleMethod != global::Google.Cloud.Dlp.V2.BigQueryOptions.Types.SampleMethod.Unspecified) hash ^= SampleMethod.GetHashCode();
      hash ^= excludedFields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tableReference_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TableReference);
      }
      identifyingFields_.WriteTo(output, _repeated_identifyingFields_codec);
      if (RowsLimit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RowsLimit);
      }
      if (SampleMethod != global::Google.Cloud.Dlp.V2.BigQueryOptions.Types.SampleMethod.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SampleMethod);
      }
      excludedFields_.WriteTo(output, _repeated_excludedFields_codec);
      if (RowsLimitPercent != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RowsLimitPercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tableReference_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TableReference);
      }
      identifyingFields_.WriteTo(ref output, _repeated_identifyingFields_codec);
      if (RowsLimit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RowsLimit);
      }
      if (SampleMethod != global::Google.Cloud.Dlp.V2.BigQueryOptions.Types.SampleMethod.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SampleMethod);
      }
      excludedFields_.WriteTo(ref output, _repeated_excludedFields_codec);
      if (RowsLimitPercent != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RowsLimitPercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tableReference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableReference);
      }
      size += identifyingFields_.CalculateSize(_repeated_identifyingFields_codec);
      if (RowsLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowsLimit);
      }
      if (RowsLimitPercent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowsLimitPercent);
      }
      if (SampleMethod != global::Google.Cloud.Dlp.V2.BigQueryOptions.Types.SampleMethod.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SampleMethod);
      }
      size += excludedFields_.CalculateSize(_repeated_excludedFields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BigQueryOptions other) {
      if (other == null) {
        return;
      }
      if (other.tableReference_ != null) {
        if (tableReference_ == null) {
          TableReference = new global::Google.Cloud.Dlp.V2.BigQueryTable();
        }
        TableReference.MergeFrom(other.TableReference);
      }
      identifyingFields_.Add(other.identifyingFields_);
      if (other.RowsLimit != 0L) {
        RowsLimit = other.RowsLimit;
      }
      if (other.RowsLimitPercent != 0) {
        RowsLimitPercent = other.RowsLimitPercent;
      }
      if (other.SampleMethod != global::Google.Cloud.Dlp.V2.BigQueryOptions.Types.SampleMethod.Unspecified) {
        SampleMethod = other.SampleMethod;
      }
      excludedFields_.Add(other.excludedFields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tableReference_ == null) {
              TableReference = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            }
            input.ReadMessage(TableReference);
            break;
          }
          case 18: {
            identifyingFields_.AddEntriesFrom(input, _repeated_identifyingFields_codec);
            break;
          }
          case 24: {
            RowsLimit = input.ReadInt64();
            break;
          }
          case 32: {
            SampleMethod = (global::Google.Cloud.Dlp.V2.BigQueryOptions.Types.SampleMethod) input.ReadEnum();
            break;
          }
          case 42: {
            excludedFields_.AddEntriesFrom(input, _repeated_excludedFields_codec);
            break;
          }
          case 48: {
            RowsLimitPercent = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tableReference_ == null) {
              TableReference = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            }
            input.ReadMessage(TableReference);
            break;
          }
          case 18: {
            identifyingFields_.AddEntriesFrom(ref input, _repeated_identifyingFields_codec);
            break;
          }
          case 24: {
            RowsLimit = input.ReadInt64();
            break;
          }
          case 32: {
            SampleMethod = (global::Google.Cloud.Dlp.V2.BigQueryOptions.Types.SampleMethod) input.ReadEnum();
            break;
          }
          case 42: {
            excludedFields_.AddEntriesFrom(ref input, _repeated_excludedFields_codec);
            break;
          }
          case 48: {
            RowsLimitPercent = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BigQueryOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// How to sample rows if not all rows are scanned. Meaningful only when used
      /// in conjunction with either rows_limit or rows_limit_percent. If not
      /// specified, rows are scanned in the order BigQuery reads them.
      /// </summary>
      public enum SampleMethod {
        [pbr::OriginalName("SAMPLE_METHOD_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Scan groups of rows in the order BigQuery provides (default). Multiple
        /// groups of rows may be scanned in parallel, so results may not appear in
        /// the same order the rows are read.
        /// </summary>
        [pbr::OriginalName("TOP")] Top = 1,
        /// <summary>
        /// Randomly pick groups of rows to scan.
        /// </summary>
        [pbr::OriginalName("RANDOM_START")] RandomStart = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Shared message indicating Cloud storage type.
  /// </summary>
  public sealed partial class StorageConfig : pb::IMessage<StorageConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StorageConfig> _parser = new pb::MessageParser<StorageConfig>(() => new StorageConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageConfig(StorageConfig other) : this() {
      timespanConfig_ = other.timespanConfig_ != null ? other.timespanConfig_.Clone() : null;
      switch (other.TypeCase) {
        case TypeOneofCase.DatastoreOptions:
          DatastoreOptions = other.DatastoreOptions.Clone();
          break;
        case TypeOneofCase.CloudStorageOptions:
          CloudStorageOptions = other.CloudStorageOptions.Clone();
          break;
        case TypeOneofCase.BigQueryOptions:
          BigQueryOptions = other.BigQueryOptions.Clone();
          break;
        case TypeOneofCase.HybridOptions:
          HybridOptions = other.HybridOptions.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageConfig Clone() {
      return new StorageConfig(this);
    }

    /// <summary>Field number for the "datastore_options" field.</summary>
    public const int DatastoreOptionsFieldNumber = 2;
    /// <summary>
    /// Google Cloud Datastore options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DatastoreOptions DatastoreOptions {
      get { return typeCase_ == TypeOneofCase.DatastoreOptions ? (global::Google.Cloud.Dlp.V2.DatastoreOptions) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.DatastoreOptions;
      }
    }

    /// <summary>Field number for the "cloud_storage_options" field.</summary>
    public const int CloudStorageOptionsFieldNumber = 3;
    /// <summary>
    /// Google Cloud Storage options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.CloudStorageOptions CloudStorageOptions {
      get { return typeCase_ == TypeOneofCase.CloudStorageOptions ? (global::Google.Cloud.Dlp.V2.CloudStorageOptions) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.CloudStorageOptions;
      }
    }

    /// <summary>Field number for the "big_query_options" field.</summary>
    public const int BigQueryOptionsFieldNumber = 4;
    /// <summary>
    /// BigQuery options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.BigQueryOptions BigQueryOptions {
      get { return typeCase_ == TypeOneofCase.BigQueryOptions ? (global::Google.Cloud.Dlp.V2.BigQueryOptions) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.BigQueryOptions;
      }
    }

    /// <summary>Field number for the "hybrid_options" field.</summary>
    public const int HybridOptionsFieldNumber = 9;
    /// <summary>
    /// Hybrid inspection options.
    /// Early access feature is in a pre-release state and might change or have
    /// limited support. For more information, see
    /// https://cloud.google.com/products#product-launch-stages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.HybridOptions HybridOptions {
      get { return typeCase_ == TypeOneofCase.HybridOptions ? (global::Google.Cloud.Dlp.V2.HybridOptions) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.HybridOptions;
      }
    }

    /// <summary>Field number for the "timespan_config" field.</summary>
    public const int TimespanConfigFieldNumber = 6;
    private global::Google.Cloud.Dlp.V2.StorageConfig.Types.TimespanConfig timespanConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.StorageConfig.Types.TimespanConfig TimespanConfig {
      get { return timespanConfig_; }
      set {
        timespanConfig_ = value;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      DatastoreOptions = 2,
      CloudStorageOptions = 3,
      BigQueryOptions = 4,
      HybridOptions = 9,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DatastoreOptions, other.DatastoreOptions)) return false;
      if (!object.Equals(CloudStorageOptions, other.CloudStorageOptions)) return false;
      if (!object.Equals(BigQueryOptions, other.BigQueryOptions)) return false;
      if (!object.Equals(HybridOptions, other.HybridOptions)) return false;
      if (!object.Equals(TimespanConfig, other.TimespanConfig)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.DatastoreOptions) hash ^= DatastoreOptions.GetHashCode();
      if (typeCase_ == TypeOneofCase.CloudStorageOptions) hash ^= CloudStorageOptions.GetHashCode();
      if (typeCase_ == TypeOneofCase.BigQueryOptions) hash ^= BigQueryOptions.GetHashCode();
      if (typeCase_ == TypeOneofCase.HybridOptions) hash ^= HybridOptions.GetHashCode();
      if (timespanConfig_ != null) hash ^= TimespanConfig.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (typeCase_ == TypeOneofCase.DatastoreOptions) {
        output.WriteRawTag(18);
        output.WriteMessage(DatastoreOptions);
      }
      if (typeCase_ == TypeOneofCase.CloudStorageOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(CloudStorageOptions);
      }
      if (typeCase_ == TypeOneofCase.BigQueryOptions) {
        output.WriteRawTag(34);
        output.WriteMessage(BigQueryOptions);
      }
      if (timespanConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TimespanConfig);
      }
      if (typeCase_ == TypeOneofCase.HybridOptions) {
        output.WriteRawTag(74);
        output.WriteMessage(HybridOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (typeCase_ == TypeOneofCase.DatastoreOptions) {
        output.WriteRawTag(18);
        output.WriteMessage(DatastoreOptions);
      }
      if (typeCase_ == TypeOneofCase.CloudStorageOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(CloudStorageOptions);
      }
      if (typeCase_ == TypeOneofCase.BigQueryOptions) {
        output.WriteRawTag(34);
        output.WriteMessage(BigQueryOptions);
      }
      if (timespanConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TimespanConfig);
      }
      if (typeCase_ == TypeOneofCase.HybridOptions) {
        output.WriteRawTag(74);
        output.WriteMessage(HybridOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.DatastoreOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DatastoreOptions);
      }
      if (typeCase_ == TypeOneofCase.CloudStorageOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloudStorageOptions);
      }
      if (typeCase_ == TypeOneofCase.BigQueryOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BigQueryOptions);
      }
      if (typeCase_ == TypeOneofCase.HybridOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HybridOptions);
      }
      if (timespanConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimespanConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageConfig other) {
      if (other == null) {
        return;
      }
      if (other.timespanConfig_ != null) {
        if (timespanConfig_ == null) {
          TimespanConfig = new global::Google.Cloud.Dlp.V2.StorageConfig.Types.TimespanConfig();
        }
        TimespanConfig.MergeFrom(other.TimespanConfig);
      }
      switch (other.TypeCase) {
        case TypeOneofCase.DatastoreOptions:
          if (DatastoreOptions == null) {
            DatastoreOptions = new global::Google.Cloud.Dlp.V2.DatastoreOptions();
          }
          DatastoreOptions.MergeFrom(other.DatastoreOptions);
          break;
        case TypeOneofCase.CloudStorageOptions:
          if (CloudStorageOptions == null) {
            CloudStorageOptions = new global::Google.Cloud.Dlp.V2.CloudStorageOptions();
          }
          CloudStorageOptions.MergeFrom(other.CloudStorageOptions);
          break;
        case TypeOneofCase.BigQueryOptions:
          if (BigQueryOptions == null) {
            BigQueryOptions = new global::Google.Cloud.Dlp.V2.BigQueryOptions();
          }
          BigQueryOptions.MergeFrom(other.BigQueryOptions);
          break;
        case TypeOneofCase.HybridOptions:
          if (HybridOptions == null) {
            HybridOptions = new global::Google.Cloud.Dlp.V2.HybridOptions();
          }
          HybridOptions.MergeFrom(other.HybridOptions);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::Google.Cloud.Dlp.V2.DatastoreOptions subBuilder = new global::Google.Cloud.Dlp.V2.DatastoreOptions();
            if (typeCase_ == TypeOneofCase.DatastoreOptions) {
              subBuilder.MergeFrom(DatastoreOptions);
            }
            input.ReadMessage(subBuilder);
            DatastoreOptions = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.CloudStorageOptions subBuilder = new global::Google.Cloud.Dlp.V2.CloudStorageOptions();
            if (typeCase_ == TypeOneofCase.CloudStorageOptions) {
              subBuilder.MergeFrom(CloudStorageOptions);
            }
            input.ReadMessage(subBuilder);
            CloudStorageOptions = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.BigQueryOptions subBuilder = new global::Google.Cloud.Dlp.V2.BigQueryOptions();
            if (typeCase_ == TypeOneofCase.BigQueryOptions) {
              subBuilder.MergeFrom(BigQueryOptions);
            }
            input.ReadMessage(subBuilder);
            BigQueryOptions = subBuilder;
            break;
          }
          case 50: {
            if (timespanConfig_ == null) {
              TimespanConfig = new global::Google.Cloud.Dlp.V2.StorageConfig.Types.TimespanConfig();
            }
            input.ReadMessage(TimespanConfig);
            break;
          }
          case 74: {
            global::Google.Cloud.Dlp.V2.HybridOptions subBuilder = new global::Google.Cloud.Dlp.V2.HybridOptions();
            if (typeCase_ == TypeOneofCase.HybridOptions) {
              subBuilder.MergeFrom(HybridOptions);
            }
            input.ReadMessage(subBuilder);
            HybridOptions = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            global::Google.Cloud.Dlp.V2.DatastoreOptions subBuilder = new global::Google.Cloud.Dlp.V2.DatastoreOptions();
            if (typeCase_ == TypeOneofCase.DatastoreOptions) {
              subBuilder.MergeFrom(DatastoreOptions);
            }
            input.ReadMessage(subBuilder);
            DatastoreOptions = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.CloudStorageOptions subBuilder = new global::Google.Cloud.Dlp.V2.CloudStorageOptions();
            if (typeCase_ == TypeOneofCase.CloudStorageOptions) {
              subBuilder.MergeFrom(CloudStorageOptions);
            }
            input.ReadMessage(subBuilder);
            CloudStorageOptions = subBuilder;
            break;
          }
          case 34: {
            global::Google.Cloud.Dlp.V2.BigQueryOptions subBuilder = new global::Google.Cloud.Dlp.V2.BigQueryOptions();
            if (typeCase_ == TypeOneofCase.BigQueryOptions) {
              subBuilder.MergeFrom(BigQueryOptions);
            }
            input.ReadMessage(subBuilder);
            BigQueryOptions = subBuilder;
            break;
          }
          case 50: {
            if (timespanConfig_ == null) {
              TimespanConfig = new global::Google.Cloud.Dlp.V2.StorageConfig.Types.TimespanConfig();
            }
            input.ReadMessage(TimespanConfig);
            break;
          }
          case 74: {
            global::Google.Cloud.Dlp.V2.HybridOptions subBuilder = new global::Google.Cloud.Dlp.V2.HybridOptions();
            if (typeCase_ == TypeOneofCase.HybridOptions) {
              subBuilder.MergeFrom(HybridOptions);
            }
            input.ReadMessage(subBuilder);
            HybridOptions = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StorageConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Configuration of the timespan of the items to include in scanning.
      /// Currently only supported when inspecting Google Cloud Storage and BigQuery.
      /// </summary>
      public sealed partial class TimespanConfig : pb::IMessage<TimespanConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TimespanConfig> _parser = new pb::MessageParser<TimespanConfig>(() => new TimespanConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TimespanConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.StorageConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimespanConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimespanConfig(TimespanConfig other) : this() {
          startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
          endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
          timestampField_ = other.timestampField_ != null ? other.timestampField_.Clone() : null;
          enableAutoPopulationOfTimespanConfig_ = other.enableAutoPopulationOfTimespanConfig_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimespanConfig Clone() {
          return new TimespanConfig(this);
        }

        /// <summary>Field number for the "start_time" field.</summary>
        public const int StartTimeFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
        /// <summary>
        /// Exclude files, tables, or rows older than this value.
        /// If not set, no lower time limit is applied.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
          get { return startTime_; }
          set {
            startTime_ = value;
          }
        }

        /// <summary>Field number for the "end_time" field.</summary>
        public const int EndTimeFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
        /// <summary>
        /// Exclude files, tables, or rows newer than this value.
        /// If not set, no upper time limit is applied.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
          get { return endTime_; }
          set {
            endTime_ = value;
          }
        }

        /// <summary>Field number for the "timestamp_field" field.</summary>
        public const int TimestampFieldFieldNumber = 3;
        private global::Google.Cloud.Dlp.V2.FieldId timestampField_;
        /// <summary>
        /// Specification of the field containing the timestamp of scanned items.
        /// Used for data sources like Datastore and BigQuery.
        ///
        /// For BigQuery:
        /// If this value is not specified and the table was modified between the
        /// given start and end times, the entire table will be scanned. If this
        /// value is specified, then rows are filtered based on the given start and
        /// end times. Rows with a `NULL` value in the provided BigQuery column are
        /// skipped.
        /// Valid data types of the provided BigQuery column are: `INTEGER`, `DATE`,
        /// `TIMESTAMP`, and `DATETIME`.
        ///
        /// For Datastore:
        /// If this value is specified, then entities are filtered based on the given
        /// start and end times. If an entity does not contain the provided timestamp
        /// property or contains empty or invalid values, then it is included.
        /// Valid data types of the provided timestamp property are: `TIMESTAMP`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Dlp.V2.FieldId TimestampField {
          get { return timestampField_; }
          set {
            timestampField_ = value;
          }
        }

        /// <summary>Field number for the "enable_auto_population_of_timespan_config" field.</summary>
        public const int EnableAutoPopulationOfTimespanConfigFieldNumber = 4;
        private bool enableAutoPopulationOfTimespanConfig_;
        /// <summary>
        /// When the job is started by a JobTrigger we will automatically figure out
        /// a valid start_time to avoid scanning files that have not been modified
        /// since the last time the JobTrigger executed. This will be based on the
        /// time of the execution of the last run of the JobTrigger.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool EnableAutoPopulationOfTimespanConfig {
          get { return enableAutoPopulationOfTimespanConfig_; }
          set {
            enableAutoPopulationOfTimespanConfig_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TimespanConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TimespanConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(StartTime, other.StartTime)) return false;
          if (!object.Equals(EndTime, other.EndTime)) return false;
          if (!object.Equals(TimestampField, other.TimestampField)) return false;
          if (EnableAutoPopulationOfTimespanConfig != other.EnableAutoPopulationOfTimespanConfig) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (startTime_ != null) hash ^= StartTime.GetHashCode();
          if (endTime_ != null) hash ^= EndTime.GetHashCode();
          if (timestampField_ != null) hash ^= TimestampField.GetHashCode();
          if (EnableAutoPopulationOfTimespanConfig != false) hash ^= EnableAutoPopulationOfTimespanConfig.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (startTime_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(StartTime);
          }
          if (endTime_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(EndTime);
          }
          if (timestampField_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(TimestampField);
          }
          if (EnableAutoPopulationOfTimespanConfig != false) {
            output.WriteRawTag(32);
            output.WriteBool(EnableAutoPopulationOfTimespanConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (startTime_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(StartTime);
          }
          if (endTime_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(EndTime);
          }
          if (timestampField_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(TimestampField);
          }
          if (EnableAutoPopulationOfTimespanConfig != false) {
            output.WriteRawTag(32);
            output.WriteBool(EnableAutoPopulationOfTimespanConfig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (startTime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
          }
          if (endTime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
          }
          if (timestampField_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimestampField);
          }
          if (EnableAutoPopulationOfTimespanConfig != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TimespanConfig other) {
          if (other == null) {
            return;
          }
          if (other.startTime_ != null) {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            StartTime.MergeFrom(other.StartTime);
          }
          if (other.endTime_ != null) {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            EndTime.MergeFrom(other.EndTime);
          }
          if (other.timestampField_ != null) {
            if (timestampField_ == null) {
              TimestampField = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            TimestampField.MergeFrom(other.TimestampField);
          }
          if (other.EnableAutoPopulationOfTimespanConfig != false) {
            EnableAutoPopulationOfTimespanConfig = other.EnableAutoPopulationOfTimespanConfig;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (startTime_ == null) {
                  StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(StartTime);
                break;
              }
              case 18: {
                if (endTime_ == null) {
                  EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(EndTime);
                break;
              }
              case 26: {
                if (timestampField_ == null) {
                  TimestampField = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                input.ReadMessage(TimestampField);
                break;
              }
              case 32: {
                EnableAutoPopulationOfTimespanConfig = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (startTime_ == null) {
                  StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(StartTime);
                break;
              }
              case 18: {
                if (endTime_ == null) {
                  EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(EndTime);
                break;
              }
              case 26: {
                if (timestampField_ == null) {
                  TimestampField = new global::Google.Cloud.Dlp.V2.FieldId();
                }
                input.ReadMessage(TimestampField);
                break;
              }
              case 32: {
                EnableAutoPopulationOfTimespanConfig = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Configuration to control jobs where the content being inspected is outside
  /// of Google Cloud Platform.
  /// </summary>
  public sealed partial class HybridOptions : pb::IMessage<HybridOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HybridOptions> _parser = new pb::MessageParser<HybridOptions>(() => new HybridOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HybridOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridOptions(HybridOptions other) : this() {
      description_ = other.description_;
      requiredFindingLabelKeys_ = other.requiredFindingLabelKeys_.Clone();
      labels_ = other.labels_.Clone();
      tableOptions_ = other.tableOptions_ != null ? other.tableOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridOptions Clone() {
      return new HybridOptions(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    /// <summary>
    /// A short description of where the data is coming from. Will be stored once
    /// in the job. 256 max length.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "required_finding_label_keys" field.</summary>
    public const int RequiredFindingLabelKeysFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_requiredFindingLabelKeys_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> requiredFindingLabelKeys_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// These are labels that each inspection request must include within their
    /// 'finding_labels' map. Request may contain others, but any missing one of
    /// these will be rejected.
    ///
    /// Label keys must be between 1 and 63 characters long and must conform
    /// to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.
    ///
    /// No more than 10 keys can be required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RequiredFindingLabelKeys {
      get { return requiredFindingLabelKeys_; }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 26);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// To organize findings, these labels will be added to each finding.
    ///
    /// Label keys must be between 1 and 63 characters long and must conform
    /// to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.
    ///
    /// Label values must be between 0 and 63 characters long and must conform
    /// to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
    ///
    /// No more than 10 labels can be associated with a given finding.
    ///
    /// Examples:
    /// * `"environment" : "production"`
    /// * `"pipeline" : "etl"`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "table_options" field.</summary>
    public const int TableOptionsFieldNumber = 4;
    private global::Google.Cloud.Dlp.V2.TableOptions tableOptions_;
    /// <summary>
    /// If the container is a table, additional information to make findings
    /// meaningful such as the columns that are primary keys.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.TableOptions TableOptions {
      get { return tableOptions_; }
      set {
        tableOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HybridOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HybridOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if(!requiredFindingLabelKeys_.Equals(other.requiredFindingLabelKeys_)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(TableOptions, other.TableOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= requiredFindingLabelKeys_.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (tableOptions_ != null) hash ^= TableOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      requiredFindingLabelKeys_.WriteTo(output, _repeated_requiredFindingLabelKeys_codec);
      labels_.WriteTo(output, _map_labels_codec);
      if (tableOptions_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TableOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      requiredFindingLabelKeys_.WriteTo(ref output, _repeated_requiredFindingLabelKeys_codec);
      labels_.WriteTo(ref output, _map_labels_codec);
      if (tableOptions_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TableOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += requiredFindingLabelKeys_.CalculateSize(_repeated_requiredFindingLabelKeys_codec);
      size += labels_.CalculateSize(_map_labels_codec);
      if (tableOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HybridOptions other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      requiredFindingLabelKeys_.Add(other.requiredFindingLabelKeys_);
      labels_.Add(other.labels_);
      if (other.tableOptions_ != null) {
        if (tableOptions_ == null) {
          TableOptions = new global::Google.Cloud.Dlp.V2.TableOptions();
        }
        TableOptions.MergeFrom(other.TableOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            requiredFindingLabelKeys_.AddEntriesFrom(input, _repeated_requiredFindingLabelKeys_codec);
            break;
          }
          case 26: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 34: {
            if (tableOptions_ == null) {
              TableOptions = new global::Google.Cloud.Dlp.V2.TableOptions();
            }
            input.ReadMessage(TableOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            requiredFindingLabelKeys_.AddEntriesFrom(ref input, _repeated_requiredFindingLabelKeys_codec);
            break;
          }
          case 26: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 34: {
            if (tableOptions_ == null) {
              TableOptions = new global::Google.Cloud.Dlp.V2.TableOptions();
            }
            input.ReadMessage(TableOptions);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Row key for identifying a record in BigQuery table.
  /// </summary>
  public sealed partial class BigQueryKey : pb::IMessage<BigQueryKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BigQueryKey> _parser = new pb::MessageParser<BigQueryKey>(() => new BigQueryKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BigQueryKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryKey(BigQueryKey other) : this() {
      tableReference_ = other.tableReference_ != null ? other.tableReference_.Clone() : null;
      rowNumber_ = other.rowNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryKey Clone() {
      return new BigQueryKey(this);
    }

    /// <summary>Field number for the "table_reference" field.</summary>
    public const int TableReferenceFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.BigQueryTable tableReference_;
    /// <summary>
    /// Complete BigQuery table reference.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.BigQueryTable TableReference {
      get { return tableReference_; }
      set {
        tableReference_ = value;
      }
    }

    /// <summary>Field number for the "row_number" field.</summary>
    public const int RowNumberFieldNumber = 2;
    private long rowNumber_;
    /// <summary>
    /// Row number inferred at the time the table was scanned. This value is
    /// nondeterministic, cannot be queried, and may be null for inspection
    /// jobs. To locate findings within a table, specify
    /// `inspect_job.storage_config.big_query_options.identifying_fields` in
    /// `CreateDlpJobRequest`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RowNumber {
      get { return rowNumber_; }
      set {
        rowNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BigQueryKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BigQueryKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TableReference, other.TableReference)) return false;
      if (RowNumber != other.RowNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tableReference_ != null) hash ^= TableReference.GetHashCode();
      if (RowNumber != 0L) hash ^= RowNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tableReference_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TableReference);
      }
      if (RowNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RowNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tableReference_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TableReference);
      }
      if (RowNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RowNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tableReference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableReference);
      }
      if (RowNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BigQueryKey other) {
      if (other == null) {
        return;
      }
      if (other.tableReference_ != null) {
        if (tableReference_ == null) {
          TableReference = new global::Google.Cloud.Dlp.V2.BigQueryTable();
        }
        TableReference.MergeFrom(other.TableReference);
      }
      if (other.RowNumber != 0L) {
        RowNumber = other.RowNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tableReference_ == null) {
              TableReference = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            }
            input.ReadMessage(TableReference);
            break;
          }
          case 16: {
            RowNumber = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tableReference_ == null) {
              TableReference = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            }
            input.ReadMessage(TableReference);
            break;
          }
          case 16: {
            RowNumber = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Record key for a finding in Cloud Datastore.
  /// </summary>
  public sealed partial class DatastoreKey : pb::IMessage<DatastoreKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatastoreKey> _parser = new pb::MessageParser<DatastoreKey>(() => new DatastoreKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatastoreKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatastoreKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatastoreKey(DatastoreKey other) : this() {
      entityKey_ = other.entityKey_ != null ? other.entityKey_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatastoreKey Clone() {
      return new DatastoreKey(this);
    }

    /// <summary>Field number for the "entity_key" field.</summary>
    public const int EntityKeyFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.Key entityKey_;
    /// <summary>
    /// Datastore entity key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.Key EntityKey {
      get { return entityKey_; }
      set {
        entityKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatastoreKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatastoreKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityKey, other.EntityKey)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entityKey_ != null) hash ^= EntityKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entityKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entityKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entityKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatastoreKey other) {
      if (other == null) {
        return;
      }
      if (other.entityKey_ != null) {
        if (entityKey_ == null) {
          EntityKey = new global::Google.Cloud.Dlp.V2.Key();
        }
        EntityKey.MergeFrom(other.EntityKey);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entityKey_ == null) {
              EntityKey = new global::Google.Cloud.Dlp.V2.Key();
            }
            input.ReadMessage(EntityKey);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entityKey_ == null) {
              EntityKey = new global::Google.Cloud.Dlp.V2.Key();
            }
            input.ReadMessage(EntityKey);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A unique identifier for a Datastore entity.
  /// If a key's partition ID or any of its path kinds or names are
  /// reserved/read-only, the key is reserved/read-only.
  /// A reserved/read-only key is forbidden in certain documented contexts.
  /// </summary>
  public sealed partial class Key : pb::IMessage<Key>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Key> _parser = new pb::MessageParser<Key>(() => new Key());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Key> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Key() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Key(Key other) : this() {
      partitionId_ = other.partitionId_ != null ? other.partitionId_.Clone() : null;
      path_ = other.path_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Key Clone() {
      return new Key(this);
    }

    /// <summary>Field number for the "partition_id" field.</summary>
    public const int PartitionIdFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.PartitionId partitionId_;
    /// <summary>
    /// Entities are partitioned into subsets, currently identified by a project
    /// ID and namespace ID.
    /// Queries are scoped to a single partition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.PartitionId PartitionId {
      get { return partitionId_; }
      set {
        partitionId_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.Key.Types.PathElement> _repeated_path_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Dlp.V2.Key.Types.PathElement.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Key.Types.PathElement> path_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Key.Types.PathElement>();
    /// <summary>
    /// The entity path.
    /// An entity path consists of one or more elements composed of a kind and a
    /// string or numerical identifier, which identify entities. The first
    /// element identifies a _root entity_, the second element identifies
    /// a _child_ of the root entity, the third element identifies a child of the
    /// second entity, and so forth. The entities identified by all prefixes of
    /// the path are called the element's _ancestors_.
    ///
    /// A path can never be empty, and a path can have at most 100 elements.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.Key.Types.PathElement> Path {
      get { return path_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Key);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Key other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PartitionId, other.PartitionId)) return false;
      if(!path_.Equals(other.path_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (partitionId_ != null) hash ^= PartitionId.GetHashCode();
      hash ^= path_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (partitionId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PartitionId);
      }
      path_.WriteTo(output, _repeated_path_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (partitionId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PartitionId);
      }
      path_.WriteTo(ref output, _repeated_path_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (partitionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionId);
      }
      size += path_.CalculateSize(_repeated_path_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Key other) {
      if (other == null) {
        return;
      }
      if (other.partitionId_ != null) {
        if (partitionId_ == null) {
          PartitionId = new global::Google.Cloud.Dlp.V2.PartitionId();
        }
        PartitionId.MergeFrom(other.PartitionId);
      }
      path_.Add(other.path_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (partitionId_ == null) {
              PartitionId = new global::Google.Cloud.Dlp.V2.PartitionId();
            }
            input.ReadMessage(PartitionId);
            break;
          }
          case 18: {
            path_.AddEntriesFrom(input, _repeated_path_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (partitionId_ == null) {
              PartitionId = new global::Google.Cloud.Dlp.V2.PartitionId();
            }
            input.ReadMessage(PartitionId);
            break;
          }
          case 18: {
            path_.AddEntriesFrom(ref input, _repeated_path_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Key message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A (kind, ID/name) pair used to construct a key path.
      ///
      /// If either name or ID is set, the element is complete.
      /// If neither is set, the element is incomplete.
      /// </summary>
      public sealed partial class PathElement : pb::IMessage<PathElement>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PathElement> _parser = new pb::MessageParser<PathElement>(() => new PathElement());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PathElement> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Dlp.V2.Key.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PathElement() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PathElement(PathElement other) : this() {
          kind_ = other.kind_;
          switch (other.IdTypeCase) {
            case IdTypeOneofCase.Id:
              Id = other.Id;
              break;
            case IdTypeOneofCase.Name:
              Name = other.Name;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PathElement Clone() {
          return new PathElement(this);
        }

        /// <summary>Field number for the "kind" field.</summary>
        public const int KindFieldNumber = 1;
        private string kind_ = "";
        /// <summary>
        /// The kind of the entity.
        /// A kind matching regex `__.*__` is reserved/read-only.
        /// A kind must not contain more than 1500 bytes when UTF-8 encoded.
        /// Cannot be `""`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Kind {
          get { return kind_; }
          set {
            kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 2;
        /// <summary>
        /// The auto-allocated ID of the entity.
        /// Never equal to zero. Values less than zero are discouraged and may not
        /// be supported in the future.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Id {
          get { return idTypeCase_ == IdTypeOneofCase.Id ? (long) idType_ : 0L; }
          set {
            idType_ = value;
            idTypeCase_ = IdTypeOneofCase.Id;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        /// <summary>
        /// The name of the entity.
        /// A name matching regex `__.*__` is reserved/read-only.
        /// A name must not be more than 1500 bytes when UTF-8 encoded.
        /// Cannot be `""`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return idTypeCase_ == IdTypeOneofCase.Name ? (string) idType_ : ""; }
          set {
            idType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            idTypeCase_ = IdTypeOneofCase.Name;
          }
        }

        private object idType_;
        /// <summary>Enum of possible cases for the "id_type" oneof.</summary>
        public enum IdTypeOneofCase {
          None = 0,
          Id = 2,
          Name = 3,
        }
        private IdTypeOneofCase idTypeCase_ = IdTypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IdTypeOneofCase IdTypeCase {
          get { return idTypeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearIdType() {
          idTypeCase_ = IdTypeOneofCase.None;
          idType_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PathElement);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PathElement other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Kind != other.Kind) return false;
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (IdTypeCase != other.IdTypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Kind.Length != 0) hash ^= Kind.GetHashCode();
          if (idTypeCase_ == IdTypeOneofCase.Id) hash ^= Id.GetHashCode();
          if (idTypeCase_ == IdTypeOneofCase.Name) hash ^= Name.GetHashCode();
          hash ^= (int) idTypeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Kind.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Kind);
          }
          if (idTypeCase_ == IdTypeOneofCase.Id) {
            output.WriteRawTag(16);
            output.WriteInt64(Id);
          }
          if (idTypeCase_ == IdTypeOneofCase.Name) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Kind.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Kind);
          }
          if (idTypeCase_ == IdTypeOneofCase.Id) {
            output.WriteRawTag(16);
            output.WriteInt64(Id);
          }
          if (idTypeCase_ == IdTypeOneofCase.Name) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Kind.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
          }
          if (idTypeCase_ == IdTypeOneofCase.Id) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
          }
          if (idTypeCase_ == IdTypeOneofCase.Name) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PathElement other) {
          if (other == null) {
            return;
          }
          if (other.Kind.Length != 0) {
            Kind = other.Kind;
          }
          switch (other.IdTypeCase) {
            case IdTypeOneofCase.Id:
              Id = other.Id;
              break;
            case IdTypeOneofCase.Name:
              Name = other.Name;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Kind = input.ReadString();
                break;
              }
              case 16: {
                Id = input.ReadInt64();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Kind = input.ReadString();
                break;
              }
              case 16: {
                Id = input.ReadInt64();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Message for a unique key indicating a record that contains a finding.
  /// </summary>
  public sealed partial class RecordKey : pb::IMessage<RecordKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecordKey> _parser = new pb::MessageParser<RecordKey>(() => new RecordKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecordKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordKey(RecordKey other) : this() {
      idValues_ = other.idValues_.Clone();
      switch (other.TypeCase) {
        case TypeOneofCase.DatastoreKey:
          DatastoreKey = other.DatastoreKey.Clone();
          break;
        case TypeOneofCase.BigQueryKey:
          BigQueryKey = other.BigQueryKey.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordKey Clone() {
      return new RecordKey(this);
    }

    /// <summary>Field number for the "datastore_key" field.</summary>
    public const int DatastoreKeyFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.DatastoreKey DatastoreKey {
      get { return typeCase_ == TypeOneofCase.DatastoreKey ? (global::Google.Cloud.Dlp.V2.DatastoreKey) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.DatastoreKey;
      }
    }

    /// <summary>Field number for the "big_query_key" field.</summary>
    public const int BigQueryKeyFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.BigQueryKey BigQueryKey {
      get { return typeCase_ == TypeOneofCase.BigQueryKey ? (global::Google.Cloud.Dlp.V2.BigQueryKey) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.BigQueryKey;
      }
    }

    /// <summary>Field number for the "id_values" field.</summary>
    public const int IdValuesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_idValues_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> idValues_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Values of identifying columns in the given row. Order of values matches
    /// the order of `identifying_fields` specified in the scanning request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> IdValues {
      get { return idValues_; }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      DatastoreKey = 2,
      BigQueryKey = 3,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecordKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecordKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DatastoreKey, other.DatastoreKey)) return false;
      if (!object.Equals(BigQueryKey, other.BigQueryKey)) return false;
      if(!idValues_.Equals(other.idValues_)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.DatastoreKey) hash ^= DatastoreKey.GetHashCode();
      if (typeCase_ == TypeOneofCase.BigQueryKey) hash ^= BigQueryKey.GetHashCode();
      hash ^= idValues_.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (typeCase_ == TypeOneofCase.DatastoreKey) {
        output.WriteRawTag(18);
        output.WriteMessage(DatastoreKey);
      }
      if (typeCase_ == TypeOneofCase.BigQueryKey) {
        output.WriteRawTag(26);
        output.WriteMessage(BigQueryKey);
      }
      idValues_.WriteTo(output, _repeated_idValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (typeCase_ == TypeOneofCase.DatastoreKey) {
        output.WriteRawTag(18);
        output.WriteMessage(DatastoreKey);
      }
      if (typeCase_ == TypeOneofCase.BigQueryKey) {
        output.WriteRawTag(26);
        output.WriteMessage(BigQueryKey);
      }
      idValues_.WriteTo(ref output, _repeated_idValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.DatastoreKey) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DatastoreKey);
      }
      if (typeCase_ == TypeOneofCase.BigQueryKey) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BigQueryKey);
      }
      size += idValues_.CalculateSize(_repeated_idValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecordKey other) {
      if (other == null) {
        return;
      }
      idValues_.Add(other.idValues_);
      switch (other.TypeCase) {
        case TypeOneofCase.DatastoreKey:
          if (DatastoreKey == null) {
            DatastoreKey = new global::Google.Cloud.Dlp.V2.DatastoreKey();
          }
          DatastoreKey.MergeFrom(other.DatastoreKey);
          break;
        case TypeOneofCase.BigQueryKey:
          if (BigQueryKey == null) {
            BigQueryKey = new global::Google.Cloud.Dlp.V2.BigQueryKey();
          }
          BigQueryKey.MergeFrom(other.BigQueryKey);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::Google.Cloud.Dlp.V2.DatastoreKey subBuilder = new global::Google.Cloud.Dlp.V2.DatastoreKey();
            if (typeCase_ == TypeOneofCase.DatastoreKey) {
              subBuilder.MergeFrom(DatastoreKey);
            }
            input.ReadMessage(subBuilder);
            DatastoreKey = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.BigQueryKey subBuilder = new global::Google.Cloud.Dlp.V2.BigQueryKey();
            if (typeCase_ == TypeOneofCase.BigQueryKey) {
              subBuilder.MergeFrom(BigQueryKey);
            }
            input.ReadMessage(subBuilder);
            BigQueryKey = subBuilder;
            break;
          }
          case 42: {
            idValues_.AddEntriesFrom(input, _repeated_idValues_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            global::Google.Cloud.Dlp.V2.DatastoreKey subBuilder = new global::Google.Cloud.Dlp.V2.DatastoreKey();
            if (typeCase_ == TypeOneofCase.DatastoreKey) {
              subBuilder.MergeFrom(DatastoreKey);
            }
            input.ReadMessage(subBuilder);
            DatastoreKey = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Dlp.V2.BigQueryKey subBuilder = new global::Google.Cloud.Dlp.V2.BigQueryKey();
            if (typeCase_ == TypeOneofCase.BigQueryKey) {
              subBuilder.MergeFrom(BigQueryKey);
            }
            input.ReadMessage(subBuilder);
            BigQueryKey = subBuilder;
            break;
          }
          case 42: {
            idValues_.AddEntriesFrom(ref input, _repeated_idValues_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message defining the location of a BigQuery table. A table is uniquely
  /// identified  by its project_id, dataset_id, and table_name. Within a query
  /// a table is often referenced with a string in the format of:
  /// `&lt;project_id>:&lt;dataset_id>.&lt;table_id>` or
  /// `&lt;project_id>.&lt;dataset_id>.&lt;table_id>`.
  /// </summary>
  public sealed partial class BigQueryTable : pb::IMessage<BigQueryTable>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BigQueryTable> _parser = new pb::MessageParser<BigQueryTable>(() => new BigQueryTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BigQueryTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryTable(BigQueryTable other) : this() {
      projectId_ = other.projectId_;
      datasetId_ = other.datasetId_;
      tableId_ = other.tableId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryTable Clone() {
      return new BigQueryTable(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// The Google Cloud Platform project ID of the project containing the table.
    /// If omitted, project ID is inferred from the API call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset_id" field.</summary>
    public const int DatasetIdFieldNumber = 2;
    private string datasetId_ = "";
    /// <summary>
    /// Dataset ID of the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetId {
      get { return datasetId_; }
      set {
        datasetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 3;
    private string tableId_ = "";
    /// <summary>
    /// Name of the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableId {
      get { return tableId_; }
      set {
        tableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BigQueryTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BigQueryTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (DatasetId != other.DatasetId) return false;
      if (TableId != other.TableId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (DatasetId.Length != 0) hash ^= DatasetId.GetHashCode();
      if (TableId.Length != 0) hash ^= TableId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (DatasetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DatasetId);
      }
      if (TableId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (DatasetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DatasetId);
      }
      if (TableId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (DatasetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetId);
      }
      if (TableId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BigQueryTable other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.DatasetId.Length != 0) {
        DatasetId = other.DatasetId;
      }
      if (other.TableId.Length != 0) {
        TableId = other.TableId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            DatasetId = input.ReadString();
            break;
          }
          case 26: {
            TableId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            DatasetId = input.ReadString();
            break;
          }
          case 26: {
            TableId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message defining a field of a BigQuery table.
  /// </summary>
  public sealed partial class BigQueryField : pb::IMessage<BigQueryField>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BigQueryField> _parser = new pb::MessageParser<BigQueryField>(() => new BigQueryField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BigQueryField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryField(BigQueryField other) : this() {
      table_ = other.table_ != null ? other.table_.Clone() : null;
      field_ = other.field_ != null ? other.field_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryField Clone() {
      return new BigQueryField(this);
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.BigQueryTable table_;
    /// <summary>
    /// Source table of the field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.BigQueryTable Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 2;
    private global::Google.Cloud.Dlp.V2.FieldId field_;
    /// <summary>
    /// Designated field in the BigQuery table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.FieldId Field {
      get { return field_; }
      set {
        field_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BigQueryField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BigQueryField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Table, other.Table)) return false;
      if (!object.Equals(Field, other.Field)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (table_ != null) hash ^= Table.GetHashCode();
      if (field_ != null) hash ^= Field.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      if (field_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Field);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (table_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Table);
      }
      if (field_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Field);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      if (field_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BigQueryField other) {
      if (other == null) {
        return;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Google.Cloud.Dlp.V2.BigQueryTable();
        }
        Table.MergeFrom(other.Table);
      }
      if (other.field_ != null) {
        if (field_ == null) {
          Field = new global::Google.Cloud.Dlp.V2.FieldId();
        }
        Field.MergeFrom(other.Field);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (table_ == null) {
              Table = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            }
            input.ReadMessage(Table);
            break;
          }
          case 18: {
            if (field_ == null) {
              Field = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Field);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (table_ == null) {
              Table = new global::Google.Cloud.Dlp.V2.BigQueryTable();
            }
            input.ReadMessage(Table);
            break;
          }
          case 18: {
            if (field_ == null) {
              Field = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Field);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An entity in a dataset is a field or set of fields that correspond to a
  /// single person. For example, in medical records the `EntityId` might be a
  /// patient identifier, or for financial records it might be an account
  /// identifier. This message is used when generalizations or analysis must take
  /// into account that multiple rows correspond to the same entity.
  /// </summary>
  public sealed partial class EntityId : pb::IMessage<EntityId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityId> _parser = new pb::MessageParser<EntityId>(() => new EntityId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityId(EntityId other) : this() {
      field_ = other.field_ != null ? other.field_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityId Clone() {
      return new EntityId(this);
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 1;
    private global::Google.Cloud.Dlp.V2.FieldId field_;
    /// <summary>
    /// Composite key indicating which field contains the entity identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Dlp.V2.FieldId Field {
      get { return field_; }
      set {
        field_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Field, other.Field)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (field_ != null) hash ^= Field.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (field_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Field);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (field_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Field);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (field_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityId other) {
      if (other == null) {
        return;
      }
      if (other.field_ != null) {
        if (field_ == null) {
          Field = new global::Google.Cloud.Dlp.V2.FieldId();
        }
        Field.MergeFrom(other.Field);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (field_ == null) {
              Field = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Field);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (field_ == null) {
              Field = new global::Google.Cloud.Dlp.V2.FieldId();
            }
            input.ReadMessage(Field);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Instructions regarding the table content being inspected.
  /// </summary>
  public sealed partial class TableOptions : pb::IMessage<TableOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TableOptions> _parser = new pb::MessageParser<TableOptions>(() => new TableOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dlp.V2.StorageReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableOptions(TableOptions other) : this() {
      identifyingFields_ = other.identifyingFields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableOptions Clone() {
      return new TableOptions(this);
    }

    /// <summary>Field number for the "identifying_fields" field.</summary>
    public const int IdentifyingFieldsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dlp.V2.FieldId> _repeated_identifyingFields_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Dlp.V2.FieldId.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> identifyingFields_ = new pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId>();
    /// <summary>
    /// The columns that are the primary keys for table objects included in
    /// ContentItem. A copy of this cell's value will stored alongside alongside
    /// each finding so that the finding can be traced to the specific row it came
    /// from. No more than 3 may be provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Dlp.V2.FieldId> IdentifyingFields {
      get { return identifyingFields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!identifyingFields_.Equals(other.identifyingFields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= identifyingFields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      identifyingFields_.WriteTo(output, _repeated_identifyingFields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      identifyingFields_.WriteTo(ref output, _repeated_identifyingFields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += identifyingFields_.CalculateSize(_repeated_identifyingFields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableOptions other) {
      if (other == null) {
        return;
      }
      identifyingFields_.Add(other.identifyingFields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            identifyingFields_.AddEntriesFrom(input, _repeated_identifyingFields_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            identifyingFields_.AddEntriesFrom(ref input, _repeated_identifyingFields_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
