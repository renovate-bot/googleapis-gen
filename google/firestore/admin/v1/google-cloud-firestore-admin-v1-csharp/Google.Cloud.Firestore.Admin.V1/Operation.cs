// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/firestore/admin/v1/operation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Firestore.Admin.V1 {

  /// <summary>Holder for reflection information generated from google/firestore/admin/v1/operation.proto</summary>
  public static partial class OperationReflection {

    #region Descriptor
    /// <summary>File descriptor for google/firestore/admin/v1/operation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OperationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvZmlyZXN0b3JlL2FkbWluL3YxL29wZXJhdGlvbi5wcm90bxIZ",
            "Z29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MRolZ29vZ2xlL2ZpcmVzdG9yZS9h",
            "ZG1pbi92MS9pbmRleC5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFt",
            "cC5wcm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90byK9AgoWSW5k",
            "ZXhPcGVyYXRpb25NZXRhZGF0YRIuCgpzdGFydF90aW1lGAEgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDQoFaW5kZXgYAyABKAkSOAoFc3Rh",
            "dGUYBCABKA4yKS5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxLk9wZXJhdGlv",
            "blN0YXRlEj8KEnByb2dyZXNzX2RvY3VtZW50cxgFIAEoCzIjLmdvb2dsZS5m",
            "aXJlc3RvcmUuYWRtaW4udjEuUHJvZ3Jlc3MSOwoOcHJvZ3Jlc3NfYnl0ZXMY",
            "BiABKAsyIy5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxLlByb2dyZXNzIogF",
            "ChZGaWVsZE9wZXJhdGlvbk1ldGFkYXRhEi4KCnN0YXJ0X3RpbWUYASABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAIgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBINCgVmaWVsZBgDIAEoCRJf",
            "ChNpbmRleF9jb25maWdfZGVsdGFzGAQgAygLMkIuZ29vZ2xlLmZpcmVzdG9y",
            "ZS5hZG1pbi52MS5GaWVsZE9wZXJhdGlvbk1ldGFkYXRhLkluZGV4Q29uZmln",
            "RGVsdGESOAoFc3RhdGUYBSABKA4yKS5nb29nbGUuZmlyZXN0b3JlLmFkbWlu",
            "LnYxLk9wZXJhdGlvblN0YXRlEj8KEnByb2dyZXNzX2RvY3VtZW50cxgGIAEo",
            "CzIjLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjEuUHJvZ3Jlc3MSOwoOcHJv",
            "Z3Jlc3NfYnl0ZXMYByABKAsyIy5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYx",
            "LlByb2dyZXNzGucBChBJbmRleENvbmZpZ0RlbHRhEmIKC2NoYW5nZV90eXBl",
            "GAEgASgOMk0uZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MS5GaWVsZE9wZXJh",
            "dGlvbk1ldGFkYXRhLkluZGV4Q29uZmlnRGVsdGEuQ2hhbmdlVHlwZRIvCgVp",
            "bmRleBgCIAEoCzIgLmdvb2dsZS5maXJlc3RvcmUuYWRtaW4udjEuSW5kZXgi",
            "PgoKQ2hhbmdlVHlwZRIbChdDSEFOR0VfVFlQRV9VTlNQRUNJRklFRBAAEgcK",
            "A0FERBABEgoKBlJFTU9WRRACIuwCChdFeHBvcnREb2N1bWVudHNNZXRhZGF0",
            "YRIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXASQgoPb3BlcmF0aW9uX3N0YXRlGAMgASgOMikuZ29vZ2xlLmZpcmVz",
            "dG9yZS5hZG1pbi52MS5PcGVyYXRpb25TdGF0ZRI/ChJwcm9ncmVzc19kb2N1",
            "bWVudHMYBCABKAsyIy5nb29nbGUuZmlyZXN0b3JlLmFkbWluLnYxLlByb2dy",
            "ZXNzEjsKDnByb2dyZXNzX2J5dGVzGAUgASgLMiMuZ29vZ2xlLmZpcmVzdG9y",
            "ZS5hZG1pbi52MS5Qcm9ncmVzcxIWCg5jb2xsZWN0aW9uX2lkcxgGIAMoCRIZ",
            "ChFvdXRwdXRfdXJpX3ByZWZpeBgHIAEoCSLrAgoXSW1wb3J0RG9jdW1lbnRz",
            "TWV0YWRhdGESLgoKc3RhcnRfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASLAoIZW5kX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEkIKD29wZXJhdGlvbl9zdGF0ZRgDIAEoDjIpLmdvb2ds",
            "ZS5maXJlc3RvcmUuYWRtaW4udjEuT3BlcmF0aW9uU3RhdGUSPwoScHJvZ3Jl",
            "c3NfZG9jdW1lbnRzGAQgASgLMiMuZ29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52",
            "MS5Qcm9ncmVzcxI7Cg5wcm9ncmVzc19ieXRlcxgFIAEoCzIjLmdvb2dsZS5m",
            "aXJlc3RvcmUuYWRtaW4udjEuUHJvZ3Jlc3MSFgoOY29sbGVjdGlvbl9pZHMY",
            "BiADKAkSGAoQaW5wdXRfdXJpX3ByZWZpeBgHIAEoCSI0ChdFeHBvcnREb2N1",
            "bWVudHNSZXNwb25zZRIZChFvdXRwdXRfdXJpX3ByZWZpeBgBIAEoCSI6CghQ",
            "cm9ncmVzcxIWCg5lc3RpbWF0ZWRfd29yaxgBIAEoAxIWCg5jb21wbGV0ZWRf",
            "d29yaxgCIAEoAyqeAQoOT3BlcmF0aW9uU3RhdGUSHwobT1BFUkFUSU9OX1NU",
            "QVRFX1VOU1BFQ0lGSUVEEAASEAoMSU5JVElBTElaSU5HEAESDgoKUFJPQ0VT",
            "U0lORxACEg4KCkNBTkNFTExJTkcQAxIOCgpGSU5BTElaSU5HEAQSDgoKU1VD",
            "Q0VTU0ZVTBAFEgoKBkZBSUxFRBAGEg0KCUNBTkNFTExFRBAHQuIBCh1jb20u",
            "Z29vZ2xlLmZpcmVzdG9yZS5hZG1pbi52MUIOT3BlcmF0aW9uUHJvdG9QAVo+",
            "Z29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9maXJlc3Rv",
            "cmUvYWRtaW4vdjE7YWRtaW6iAgRHQ0ZTqgIfR29vZ2xlLkNsb3VkLkZpcmVz",
            "dG9yZS5BZG1pbi5WMcoCH0dvb2dsZVxDbG91ZFxGaXJlc3RvcmVcQWRtaW5c",
            "VjHqAiNHb29nbGU6OkNsb3VkOjpGaXJlc3RvcmU6OkFkbWluOjpWMWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Cloud.Firestore.Admin.V1.IndexReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Firestore.Admin.V1.OperationState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata), global::Google.Cloud.Firestore.Admin.V1.IndexOperationMetadata.Parser, new[]{ "StartTime", "EndTime", "Index", "State", "ProgressDocuments", "ProgressBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata), global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Parser, new[]{ "StartTime", "EndTime", "Field", "IndexConfigDeltas", "State", "ProgressDocuments", "ProgressBytes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta), global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Parser, new[]{ "ChangeType", "Index" }, null, new[]{ typeof(global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata), global::Google.Cloud.Firestore.Admin.V1.ExportDocumentsMetadata.Parser, new[]{ "StartTime", "EndTime", "OperationState", "ProgressDocuments", "ProgressBytes", "CollectionIds", "OutputUriPrefix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata), global::Google.Cloud.Firestore.Admin.V1.ImportDocumentsMetadata.Parser, new[]{ "StartTime", "EndTime", "OperationState", "ProgressDocuments", "ProgressBytes", "CollectionIds", "InputUriPrefix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Firestore.Admin.V1.ExportDocumentsResponse), global::Google.Cloud.Firestore.Admin.V1.ExportDocumentsResponse.Parser, new[]{ "OutputUriPrefix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Firestore.Admin.V1.Progress), global::Google.Cloud.Firestore.Admin.V1.Progress.Parser, new[]{ "EstimatedWork", "CompletedWork" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Describes the state of the operation.
  /// </summary>
  public enum OperationState {
    /// <summary>
    /// Unspecified.
    /// </summary>
    [pbr::OriginalName("OPERATION_STATE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Request is being prepared for processing.
    /// </summary>
    [pbr::OriginalName("INITIALIZING")] Initializing = 1,
    /// <summary>
    /// Request is actively being processed.
    /// </summary>
    [pbr::OriginalName("PROCESSING")] Processing = 2,
    /// <summary>
    /// Request is in the process of being cancelled after user called
    /// google.longrunning.Operations.CancelOperation on the operation.
    /// </summary>
    [pbr::OriginalName("CANCELLING")] Cancelling = 3,
    /// <summary>
    /// Request has been processed and is in its finalization stage.
    /// </summary>
    [pbr::OriginalName("FINALIZING")] Finalizing = 4,
    /// <summary>
    /// Request has completed successfully.
    /// </summary>
    [pbr::OriginalName("SUCCESSFUL")] Successful = 5,
    /// <summary>
    /// Request has finished being processed, but encountered an error.
    /// </summary>
    [pbr::OriginalName("FAILED")] Failed = 6,
    /// <summary>
    /// Request has finished being cancelled after user called
    /// google.longrunning.Operations.CancelOperation.
    /// </summary>
    [pbr::OriginalName("CANCELLED")] Cancelled = 7,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Metadata for [google.longrunning.Operation][google.longrunning.Operation] results from
  /// [FirestoreAdmin.CreateIndex][google.firestore.admin.v1.FirestoreAdmin.CreateIndex].
  /// </summary>
  public sealed partial class IndexOperationMetadata : pb::IMessage<IndexOperationMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IndexOperationMetadata> _parser = new pb::MessageParser<IndexOperationMetadata>(() => new IndexOperationMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndexOperationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Firestore.Admin.V1.OperationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexOperationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexOperationMetadata(IndexOperationMetadata other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      index_ = other.index_;
      state_ = other.state_;
      progressDocuments_ = other.progressDocuments_ != null ? other.progressDocuments_.Clone() : null;
      progressBytes_ = other.progressBytes_ != null ? other.progressBytes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexOperationMetadata Clone() {
      return new IndexOperationMetadata(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The time this operation started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The time this operation completed. Will be unset if operation still in
    /// progress.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private string index_ = "";
    /// <summary>
    /// The index resource that this operation is acting on. For example:
    /// `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Index {
      get { return index_; }
      set {
        index_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private global::Google.Cloud.Firestore.Admin.V1.OperationState state_ = global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified;
    /// <summary>
    /// The state of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.Admin.V1.OperationState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "progress_documents" field.</summary>
    public const int ProgressDocumentsFieldNumber = 5;
    private global::Google.Cloud.Firestore.Admin.V1.Progress progressDocuments_;
    /// <summary>
    /// The progress, in documents, of this operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.Admin.V1.Progress ProgressDocuments {
      get { return progressDocuments_; }
      set {
        progressDocuments_ = value;
      }
    }

    /// <summary>Field number for the "progress_bytes" field.</summary>
    public const int ProgressBytesFieldNumber = 6;
    private global::Google.Cloud.Firestore.Admin.V1.Progress progressBytes_;
    /// <summary>
    /// The progress, in bytes, of this operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.Admin.V1.Progress ProgressBytes {
      get { return progressBytes_; }
      set {
        progressBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndexOperationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndexOperationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Index != other.Index) return false;
      if (State != other.State) return false;
      if (!object.Equals(ProgressDocuments, other.ProgressDocuments)) return false;
      if (!object.Equals(ProgressBytes, other.ProgressBytes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Index.Length != 0) hash ^= Index.GetHashCode();
      if (State != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) hash ^= State.GetHashCode();
      if (progressDocuments_ != null) hash ^= ProgressDocuments.GetHashCode();
      if (progressBytes_ != null) hash ^= ProgressBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Index.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Index);
      }
      if (State != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (progressDocuments_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProgressDocuments);
      }
      if (progressBytes_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ProgressBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Index.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Index);
      }
      if (State != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (progressDocuments_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProgressDocuments);
      }
      if (progressBytes_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ProgressBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Index.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Index);
      }
      if (State != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (progressDocuments_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgressDocuments);
      }
      if (progressBytes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgressBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndexOperationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Index.Length != 0) {
        Index = other.Index;
      }
      if (other.State != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        State = other.State;
      }
      if (other.progressDocuments_ != null) {
        if (progressDocuments_ == null) {
          ProgressDocuments = new global::Google.Cloud.Firestore.Admin.V1.Progress();
        }
        ProgressDocuments.MergeFrom(other.ProgressDocuments);
      }
      if (other.progressBytes_ != null) {
        if (progressBytes_ == null) {
          ProgressBytes = new global::Google.Cloud.Firestore.Admin.V1.Progress();
        }
        ProgressBytes.MergeFrom(other.ProgressBytes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Index = input.ReadString();
            break;
          }
          case 32: {
            State = (global::Google.Cloud.Firestore.Admin.V1.OperationState) input.ReadEnum();
            break;
          }
          case 42: {
            if (progressDocuments_ == null) {
              ProgressDocuments = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressDocuments);
            break;
          }
          case 50: {
            if (progressBytes_ == null) {
              ProgressBytes = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressBytes);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Index = input.ReadString();
            break;
          }
          case 32: {
            State = (global::Google.Cloud.Firestore.Admin.V1.OperationState) input.ReadEnum();
            break;
          }
          case 42: {
            if (progressDocuments_ == null) {
              ProgressDocuments = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressDocuments);
            break;
          }
          case 50: {
            if (progressBytes_ == null) {
              ProgressBytes = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressBytes);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metadata for [google.longrunning.Operation][google.longrunning.Operation] results from
  /// [FirestoreAdmin.UpdateField][google.firestore.admin.v1.FirestoreAdmin.UpdateField].
  /// </summary>
  public sealed partial class FieldOperationMetadata : pb::IMessage<FieldOperationMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FieldOperationMetadata> _parser = new pb::MessageParser<FieldOperationMetadata>(() => new FieldOperationMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FieldOperationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Firestore.Admin.V1.OperationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldOperationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldOperationMetadata(FieldOperationMetadata other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      field_ = other.field_;
      indexConfigDeltas_ = other.indexConfigDeltas_.Clone();
      state_ = other.state_;
      progressDocuments_ = other.progressDocuments_ != null ? other.progressDocuments_.Clone() : null;
      progressBytes_ = other.progressBytes_ != null ? other.progressBytes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldOperationMetadata Clone() {
      return new FieldOperationMetadata(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The time this operation started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The time this operation completed. Will be unset if operation still in
    /// progress.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 3;
    private string field_ = "";
    /// <summary>
    /// The field resource that this operation is acting on. For example:
    /// `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Field {
      get { return field_; }
      set {
        field_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index_config_deltas" field.</summary>
    public const int IndexConfigDeltasFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta> _repeated_indexConfigDeltas_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta> indexConfigDeltas_ = new pbc::RepeatedField<global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta>();
    /// <summary>
    /// A list of [IndexConfigDelta][google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta], which describe the intent of this
    /// operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta> IndexConfigDeltas {
      get { return indexConfigDeltas_; }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private global::Google.Cloud.Firestore.Admin.V1.OperationState state_ = global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified;
    /// <summary>
    /// The state of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.Admin.V1.OperationState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "progress_documents" field.</summary>
    public const int ProgressDocumentsFieldNumber = 6;
    private global::Google.Cloud.Firestore.Admin.V1.Progress progressDocuments_;
    /// <summary>
    /// The progress, in documents, of this operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.Admin.V1.Progress ProgressDocuments {
      get { return progressDocuments_; }
      set {
        progressDocuments_ = value;
      }
    }

    /// <summary>Field number for the "progress_bytes" field.</summary>
    public const int ProgressBytesFieldNumber = 7;
    private global::Google.Cloud.Firestore.Admin.V1.Progress progressBytes_;
    /// <summary>
    /// The progress, in bytes, of this operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.Admin.V1.Progress ProgressBytes {
      get { return progressBytes_; }
      set {
        progressBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FieldOperationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FieldOperationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Field != other.Field) return false;
      if(!indexConfigDeltas_.Equals(other.indexConfigDeltas_)) return false;
      if (State != other.State) return false;
      if (!object.Equals(ProgressDocuments, other.ProgressDocuments)) return false;
      if (!object.Equals(ProgressBytes, other.ProgressBytes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Field.Length != 0) hash ^= Field.GetHashCode();
      hash ^= indexConfigDeltas_.GetHashCode();
      if (State != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) hash ^= State.GetHashCode();
      if (progressDocuments_ != null) hash ^= ProgressDocuments.GetHashCode();
      if (progressBytes_ != null) hash ^= ProgressBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Field.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Field);
      }
      indexConfigDeltas_.WriteTo(output, _repeated_indexConfigDeltas_codec);
      if (State != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) State);
      }
      if (progressDocuments_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ProgressDocuments);
      }
      if (progressBytes_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ProgressBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Field.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Field);
      }
      indexConfigDeltas_.WriteTo(ref output, _repeated_indexConfigDeltas_codec);
      if (State != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) State);
      }
      if (progressDocuments_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ProgressDocuments);
      }
      if (progressBytes_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ProgressBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Field.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Field);
      }
      size += indexConfigDeltas_.CalculateSize(_repeated_indexConfigDeltas_codec);
      if (State != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (progressDocuments_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgressDocuments);
      }
      if (progressBytes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgressBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FieldOperationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Field.Length != 0) {
        Field = other.Field;
      }
      indexConfigDeltas_.Add(other.indexConfigDeltas_);
      if (other.State != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        State = other.State;
      }
      if (other.progressDocuments_ != null) {
        if (progressDocuments_ == null) {
          ProgressDocuments = new global::Google.Cloud.Firestore.Admin.V1.Progress();
        }
        ProgressDocuments.MergeFrom(other.ProgressDocuments);
      }
      if (other.progressBytes_ != null) {
        if (progressBytes_ == null) {
          ProgressBytes = new global::Google.Cloud.Firestore.Admin.V1.Progress();
        }
        ProgressBytes.MergeFrom(other.ProgressBytes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Field = input.ReadString();
            break;
          }
          case 34: {
            indexConfigDeltas_.AddEntriesFrom(input, _repeated_indexConfigDeltas_codec);
            break;
          }
          case 40: {
            State = (global::Google.Cloud.Firestore.Admin.V1.OperationState) input.ReadEnum();
            break;
          }
          case 50: {
            if (progressDocuments_ == null) {
              ProgressDocuments = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressDocuments);
            break;
          }
          case 58: {
            if (progressBytes_ == null) {
              ProgressBytes = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressBytes);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 26: {
            Field = input.ReadString();
            break;
          }
          case 34: {
            indexConfigDeltas_.AddEntriesFrom(ref input, _repeated_indexConfigDeltas_codec);
            break;
          }
          case 40: {
            State = (global::Google.Cloud.Firestore.Admin.V1.OperationState) input.ReadEnum();
            break;
          }
          case 50: {
            if (progressDocuments_ == null) {
              ProgressDocuments = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressDocuments);
            break;
          }
          case 58: {
            if (progressBytes_ == null) {
              ProgressBytes = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressBytes);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FieldOperationMetadata message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Information about an index configuration change.
      /// </summary>
      public sealed partial class IndexConfigDelta : pb::IMessage<IndexConfigDelta>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<IndexConfigDelta> _parser = new pb::MessageParser<IndexConfigDelta>(() => new IndexConfigDelta());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<IndexConfigDelta> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IndexConfigDelta() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IndexConfigDelta(IndexConfigDelta other) : this() {
          changeType_ = other.changeType_;
          index_ = other.index_ != null ? other.index_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IndexConfigDelta Clone() {
          return new IndexConfigDelta(this);
        }

        /// <summary>Field number for the "change_type" field.</summary>
        public const int ChangeTypeFieldNumber = 1;
        private global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType changeType_ = global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType.Unspecified;
        /// <summary>
        /// Specifies how the index is changing.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType ChangeType {
          get { return changeType_; }
          set {
            changeType_ = value;
          }
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 2;
        private global::Google.Cloud.Firestore.Admin.V1.Index index_;
        /// <summary>
        /// The index being changed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Firestore.Admin.V1.Index Index {
          get { return index_; }
          set {
            index_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as IndexConfigDelta);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(IndexConfigDelta other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ChangeType != other.ChangeType) return false;
          if (!object.Equals(Index, other.Index)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ChangeType != global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType.Unspecified) hash ^= ChangeType.GetHashCode();
          if (index_ != null) hash ^= Index.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ChangeType != global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ChangeType);
          }
          if (index_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Index);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ChangeType != global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ChangeType);
          }
          if (index_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Index);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ChangeType != global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChangeType);
          }
          if (index_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Index);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(IndexConfigDelta other) {
          if (other == null) {
            return;
          }
          if (other.ChangeType != global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType.Unspecified) {
            ChangeType = other.ChangeType;
          }
          if (other.index_ != null) {
            if (index_ == null) {
              Index = new global::Google.Cloud.Firestore.Admin.V1.Index();
            }
            Index.MergeFrom(other.Index);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ChangeType = (global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType) input.ReadEnum();
                break;
              }
              case 18: {
                if (index_ == null) {
                  Index = new global::Google.Cloud.Firestore.Admin.V1.Index();
                }
                input.ReadMessage(Index);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ChangeType = (global::Google.Cloud.Firestore.Admin.V1.FieldOperationMetadata.Types.IndexConfigDelta.Types.ChangeType) input.ReadEnum();
                break;
              }
              case 18: {
                if (index_ == null) {
                  Index = new global::Google.Cloud.Firestore.Admin.V1.Index();
                }
                input.ReadMessage(Index);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the IndexConfigDelta message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Specifies how the index is changing.
          /// </summary>
          public enum ChangeType {
            /// <summary>
            /// The type of change is not specified or known.
            /// </summary>
            [pbr::OriginalName("CHANGE_TYPE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The single field index is being added.
            /// </summary>
            [pbr::OriginalName("ADD")] Add = 1,
            /// <summary>
            /// The single field index is being removed.
            /// </summary>
            [pbr::OriginalName("REMOVE")] Remove = 2,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Metadata for [google.longrunning.Operation][google.longrunning.Operation] results from
  /// [FirestoreAdmin.ExportDocuments][google.firestore.admin.v1.FirestoreAdmin.ExportDocuments].
  /// </summary>
  public sealed partial class ExportDocumentsMetadata : pb::IMessage<ExportDocumentsMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExportDocumentsMetadata> _parser = new pb::MessageParser<ExportDocumentsMetadata>(() => new ExportDocumentsMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExportDocumentsMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Firestore.Admin.V1.OperationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportDocumentsMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportDocumentsMetadata(ExportDocumentsMetadata other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      operationState_ = other.operationState_;
      progressDocuments_ = other.progressDocuments_ != null ? other.progressDocuments_.Clone() : null;
      progressBytes_ = other.progressBytes_ != null ? other.progressBytes_.Clone() : null;
      collectionIds_ = other.collectionIds_.Clone();
      outputUriPrefix_ = other.outputUriPrefix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportDocumentsMetadata Clone() {
      return new ExportDocumentsMetadata(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The time this operation started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The time this operation completed. Will be unset if operation still in
    /// progress.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "operation_state" field.</summary>
    public const int OperationStateFieldNumber = 3;
    private global::Google.Cloud.Firestore.Admin.V1.OperationState operationState_ = global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified;
    /// <summary>
    /// The state of the export operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.Admin.V1.OperationState OperationState {
      get { return operationState_; }
      set {
        operationState_ = value;
      }
    }

    /// <summary>Field number for the "progress_documents" field.</summary>
    public const int ProgressDocumentsFieldNumber = 4;
    private global::Google.Cloud.Firestore.Admin.V1.Progress progressDocuments_;
    /// <summary>
    /// The progress, in documents, of this operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.Admin.V1.Progress ProgressDocuments {
      get { return progressDocuments_; }
      set {
        progressDocuments_ = value;
      }
    }

    /// <summary>Field number for the "progress_bytes" field.</summary>
    public const int ProgressBytesFieldNumber = 5;
    private global::Google.Cloud.Firestore.Admin.V1.Progress progressBytes_;
    /// <summary>
    /// The progress, in bytes, of this operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.Admin.V1.Progress ProgressBytes {
      get { return progressBytes_; }
      set {
        progressBytes_ = value;
      }
    }

    /// <summary>Field number for the "collection_ids" field.</summary>
    public const int CollectionIdsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_collectionIds_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> collectionIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Which collection ids are being exported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CollectionIds {
      get { return collectionIds_; }
    }

    /// <summary>Field number for the "output_uri_prefix" field.</summary>
    public const int OutputUriPrefixFieldNumber = 7;
    private string outputUriPrefix_ = "";
    /// <summary>
    /// Where the entities are being exported to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputUriPrefix {
      get { return outputUriPrefix_; }
      set {
        outputUriPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExportDocumentsMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExportDocumentsMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (OperationState != other.OperationState) return false;
      if (!object.Equals(ProgressDocuments, other.ProgressDocuments)) return false;
      if (!object.Equals(ProgressBytes, other.ProgressBytes)) return false;
      if(!collectionIds_.Equals(other.collectionIds_)) return false;
      if (OutputUriPrefix != other.OutputUriPrefix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (OperationState != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) hash ^= OperationState.GetHashCode();
      if (progressDocuments_ != null) hash ^= ProgressDocuments.GetHashCode();
      if (progressBytes_ != null) hash ^= ProgressBytes.GetHashCode();
      hash ^= collectionIds_.GetHashCode();
      if (OutputUriPrefix.Length != 0) hash ^= OutputUriPrefix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (OperationState != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OperationState);
      }
      if (progressDocuments_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ProgressDocuments);
      }
      if (progressBytes_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProgressBytes);
      }
      collectionIds_.WriteTo(output, _repeated_collectionIds_codec);
      if (OutputUriPrefix.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OutputUriPrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (OperationState != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OperationState);
      }
      if (progressDocuments_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ProgressDocuments);
      }
      if (progressBytes_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProgressBytes);
      }
      collectionIds_.WriteTo(ref output, _repeated_collectionIds_codec);
      if (OutputUriPrefix.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OutputUriPrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (OperationState != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperationState);
      }
      if (progressDocuments_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgressDocuments);
      }
      if (progressBytes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgressBytes);
      }
      size += collectionIds_.CalculateSize(_repeated_collectionIds_codec);
      if (OutputUriPrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputUriPrefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExportDocumentsMetadata other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.OperationState != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        OperationState = other.OperationState;
      }
      if (other.progressDocuments_ != null) {
        if (progressDocuments_ == null) {
          ProgressDocuments = new global::Google.Cloud.Firestore.Admin.V1.Progress();
        }
        ProgressDocuments.MergeFrom(other.ProgressDocuments);
      }
      if (other.progressBytes_ != null) {
        if (progressBytes_ == null) {
          ProgressBytes = new global::Google.Cloud.Firestore.Admin.V1.Progress();
        }
        ProgressBytes.MergeFrom(other.ProgressBytes);
      }
      collectionIds_.Add(other.collectionIds_);
      if (other.OutputUriPrefix.Length != 0) {
        OutputUriPrefix = other.OutputUriPrefix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 24: {
            OperationState = (global::Google.Cloud.Firestore.Admin.V1.OperationState) input.ReadEnum();
            break;
          }
          case 34: {
            if (progressDocuments_ == null) {
              ProgressDocuments = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressDocuments);
            break;
          }
          case 42: {
            if (progressBytes_ == null) {
              ProgressBytes = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressBytes);
            break;
          }
          case 50: {
            collectionIds_.AddEntriesFrom(input, _repeated_collectionIds_codec);
            break;
          }
          case 58: {
            OutputUriPrefix = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 24: {
            OperationState = (global::Google.Cloud.Firestore.Admin.V1.OperationState) input.ReadEnum();
            break;
          }
          case 34: {
            if (progressDocuments_ == null) {
              ProgressDocuments = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressDocuments);
            break;
          }
          case 42: {
            if (progressBytes_ == null) {
              ProgressBytes = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressBytes);
            break;
          }
          case 50: {
            collectionIds_.AddEntriesFrom(ref input, _repeated_collectionIds_codec);
            break;
          }
          case 58: {
            OutputUriPrefix = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metadata for [google.longrunning.Operation][google.longrunning.Operation] results from
  /// [FirestoreAdmin.ImportDocuments][google.firestore.admin.v1.FirestoreAdmin.ImportDocuments].
  /// </summary>
  public sealed partial class ImportDocumentsMetadata : pb::IMessage<ImportDocumentsMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImportDocumentsMetadata> _parser = new pb::MessageParser<ImportDocumentsMetadata>(() => new ImportDocumentsMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImportDocumentsMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Firestore.Admin.V1.OperationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportDocumentsMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportDocumentsMetadata(ImportDocumentsMetadata other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      operationState_ = other.operationState_;
      progressDocuments_ = other.progressDocuments_ != null ? other.progressDocuments_.Clone() : null;
      progressBytes_ = other.progressBytes_ != null ? other.progressBytes_.Clone() : null;
      collectionIds_ = other.collectionIds_.Clone();
      inputUriPrefix_ = other.inputUriPrefix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportDocumentsMetadata Clone() {
      return new ImportDocumentsMetadata(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The time this operation started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The time this operation completed. Will be unset if operation still in
    /// progress.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "operation_state" field.</summary>
    public const int OperationStateFieldNumber = 3;
    private global::Google.Cloud.Firestore.Admin.V1.OperationState operationState_ = global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified;
    /// <summary>
    /// The state of the import operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.Admin.V1.OperationState OperationState {
      get { return operationState_; }
      set {
        operationState_ = value;
      }
    }

    /// <summary>Field number for the "progress_documents" field.</summary>
    public const int ProgressDocumentsFieldNumber = 4;
    private global::Google.Cloud.Firestore.Admin.V1.Progress progressDocuments_;
    /// <summary>
    /// The progress, in documents, of this operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.Admin.V1.Progress ProgressDocuments {
      get { return progressDocuments_; }
      set {
        progressDocuments_ = value;
      }
    }

    /// <summary>Field number for the "progress_bytes" field.</summary>
    public const int ProgressBytesFieldNumber = 5;
    private global::Google.Cloud.Firestore.Admin.V1.Progress progressBytes_;
    /// <summary>
    /// The progress, in bytes, of this operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.Admin.V1.Progress ProgressBytes {
      get { return progressBytes_; }
      set {
        progressBytes_ = value;
      }
    }

    /// <summary>Field number for the "collection_ids" field.</summary>
    public const int CollectionIdsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_collectionIds_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> collectionIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Which collection ids are being imported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CollectionIds {
      get { return collectionIds_; }
    }

    /// <summary>Field number for the "input_uri_prefix" field.</summary>
    public const int InputUriPrefixFieldNumber = 7;
    private string inputUriPrefix_ = "";
    /// <summary>
    /// The location of the documents being imported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputUriPrefix {
      get { return inputUriPrefix_; }
      set {
        inputUriPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImportDocumentsMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImportDocumentsMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (OperationState != other.OperationState) return false;
      if (!object.Equals(ProgressDocuments, other.ProgressDocuments)) return false;
      if (!object.Equals(ProgressBytes, other.ProgressBytes)) return false;
      if(!collectionIds_.Equals(other.collectionIds_)) return false;
      if (InputUriPrefix != other.InputUriPrefix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (OperationState != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) hash ^= OperationState.GetHashCode();
      if (progressDocuments_ != null) hash ^= ProgressDocuments.GetHashCode();
      if (progressBytes_ != null) hash ^= ProgressBytes.GetHashCode();
      hash ^= collectionIds_.GetHashCode();
      if (InputUriPrefix.Length != 0) hash ^= InputUriPrefix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (OperationState != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OperationState);
      }
      if (progressDocuments_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ProgressDocuments);
      }
      if (progressBytes_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProgressBytes);
      }
      collectionIds_.WriteTo(output, _repeated_collectionIds_codec);
      if (InputUriPrefix.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(InputUriPrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (OperationState != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OperationState);
      }
      if (progressDocuments_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ProgressDocuments);
      }
      if (progressBytes_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProgressBytes);
      }
      collectionIds_.WriteTo(ref output, _repeated_collectionIds_codec);
      if (InputUriPrefix.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(InputUriPrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (OperationState != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperationState);
      }
      if (progressDocuments_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgressDocuments);
      }
      if (progressBytes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgressBytes);
      }
      size += collectionIds_.CalculateSize(_repeated_collectionIds_codec);
      if (InputUriPrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputUriPrefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImportDocumentsMetadata other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.OperationState != global::Google.Cloud.Firestore.Admin.V1.OperationState.Unspecified) {
        OperationState = other.OperationState;
      }
      if (other.progressDocuments_ != null) {
        if (progressDocuments_ == null) {
          ProgressDocuments = new global::Google.Cloud.Firestore.Admin.V1.Progress();
        }
        ProgressDocuments.MergeFrom(other.ProgressDocuments);
      }
      if (other.progressBytes_ != null) {
        if (progressBytes_ == null) {
          ProgressBytes = new global::Google.Cloud.Firestore.Admin.V1.Progress();
        }
        ProgressBytes.MergeFrom(other.ProgressBytes);
      }
      collectionIds_.Add(other.collectionIds_);
      if (other.InputUriPrefix.Length != 0) {
        InputUriPrefix = other.InputUriPrefix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 24: {
            OperationState = (global::Google.Cloud.Firestore.Admin.V1.OperationState) input.ReadEnum();
            break;
          }
          case 34: {
            if (progressDocuments_ == null) {
              ProgressDocuments = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressDocuments);
            break;
          }
          case 42: {
            if (progressBytes_ == null) {
              ProgressBytes = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressBytes);
            break;
          }
          case 50: {
            collectionIds_.AddEntriesFrom(input, _repeated_collectionIds_codec);
            break;
          }
          case 58: {
            InputUriPrefix = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 24: {
            OperationState = (global::Google.Cloud.Firestore.Admin.V1.OperationState) input.ReadEnum();
            break;
          }
          case 34: {
            if (progressDocuments_ == null) {
              ProgressDocuments = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressDocuments);
            break;
          }
          case 42: {
            if (progressBytes_ == null) {
              ProgressBytes = new global::Google.Cloud.Firestore.Admin.V1.Progress();
            }
            input.ReadMessage(ProgressBytes);
            break;
          }
          case 50: {
            collectionIds_.AddEntriesFrom(ref input, _repeated_collectionIds_codec);
            break;
          }
          case 58: {
            InputUriPrefix = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Returned in the [google.longrunning.Operation][google.longrunning.Operation] response field.
  /// </summary>
  public sealed partial class ExportDocumentsResponse : pb::IMessage<ExportDocumentsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExportDocumentsResponse> _parser = new pb::MessageParser<ExportDocumentsResponse>(() => new ExportDocumentsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExportDocumentsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Firestore.Admin.V1.OperationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportDocumentsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportDocumentsResponse(ExportDocumentsResponse other) : this() {
      outputUriPrefix_ = other.outputUriPrefix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExportDocumentsResponse Clone() {
      return new ExportDocumentsResponse(this);
    }

    /// <summary>Field number for the "output_uri_prefix" field.</summary>
    public const int OutputUriPrefixFieldNumber = 1;
    private string outputUriPrefix_ = "";
    /// <summary>
    /// Location of the output files. This can be used to begin an import
    /// into Cloud Firestore (this project or another project) after the operation
    /// completes successfully.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputUriPrefix {
      get { return outputUriPrefix_; }
      set {
        outputUriPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExportDocumentsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExportDocumentsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OutputUriPrefix != other.OutputUriPrefix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OutputUriPrefix.Length != 0) hash ^= OutputUriPrefix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OutputUriPrefix.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OutputUriPrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OutputUriPrefix.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OutputUriPrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OutputUriPrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputUriPrefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExportDocumentsResponse other) {
      if (other == null) {
        return;
      }
      if (other.OutputUriPrefix.Length != 0) {
        OutputUriPrefix = other.OutputUriPrefix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OutputUriPrefix = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OutputUriPrefix = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes the progress of the operation.
  /// Unit of work is generic and must be interpreted based on where [Progress][google.firestore.admin.v1.Progress]
  /// is used.
  /// </summary>
  public sealed partial class Progress : pb::IMessage<Progress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Progress> _parser = new pb::MessageParser<Progress>(() => new Progress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Progress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Firestore.Admin.V1.OperationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Progress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Progress(Progress other) : this() {
      estimatedWork_ = other.estimatedWork_;
      completedWork_ = other.completedWork_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Progress Clone() {
      return new Progress(this);
    }

    /// <summary>Field number for the "estimated_work" field.</summary>
    public const int EstimatedWorkFieldNumber = 1;
    private long estimatedWork_;
    /// <summary>
    /// The amount of work estimated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EstimatedWork {
      get { return estimatedWork_; }
      set {
        estimatedWork_ = value;
      }
    }

    /// <summary>Field number for the "completed_work" field.</summary>
    public const int CompletedWorkFieldNumber = 2;
    private long completedWork_;
    /// <summary>
    /// The amount of work completed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CompletedWork {
      get { return completedWork_; }
      set {
        completedWork_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Progress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Progress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EstimatedWork != other.EstimatedWork) return false;
      if (CompletedWork != other.CompletedWork) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EstimatedWork != 0L) hash ^= EstimatedWork.GetHashCode();
      if (CompletedWork != 0L) hash ^= CompletedWork.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EstimatedWork != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EstimatedWork);
      }
      if (CompletedWork != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CompletedWork);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EstimatedWork != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EstimatedWork);
      }
      if (CompletedWork != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CompletedWork);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EstimatedWork != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EstimatedWork);
      }
      if (CompletedWork != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CompletedWork);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Progress other) {
      if (other == null) {
        return;
      }
      if (other.EstimatedWork != 0L) {
        EstimatedWork = other.EstimatedWork;
      }
      if (other.CompletedWork != 0L) {
        CompletedWork = other.CompletedWork;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EstimatedWork = input.ReadInt64();
            break;
          }
          case 16: {
            CompletedWork = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EstimatedWork = input.ReadInt64();
            break;
          }
          case 16: {
            CompletedWork = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
