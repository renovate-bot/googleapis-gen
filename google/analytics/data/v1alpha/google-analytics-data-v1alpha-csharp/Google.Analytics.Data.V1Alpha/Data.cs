// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/analytics/data/v1alpha/data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Analytics.Data.V1Alpha {

  /// <summary>Holder for reflection information generated from google/analytics/data/v1alpha/data.proto</summary>
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for google/analytics/data/v1alpha/data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihnb29nbGUvYW5hbHl0aWNzL2RhdGEvdjFhbHBoYS9kYXRhLnByb3RvEh1n",
            "b29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBoYSI/CglEYXRlUmFuZ2USEgoK",
            "c3RhcnRfZGF0ZRgBIAEoCRIQCghlbmRfZGF0ZRgCIAEoCRIMCgRuYW1lGAMg",
            "ASgJIh0KBkVudGl0eRITCgtwcm9wZXJ0eV9pZBgBIAEoCSJrCglEaW1lbnNp",
            "b24SDAoEbmFtZRgBIAEoCRJQChRkaW1lbnNpb25fZXhwcmVzc2lvbhgCIAEo",
            "CzIyLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLkRpbWVuc2lvbkV4",
            "cHJlc3Npb24iqQMKE0RpbWVuc2lvbkV4cHJlc3Npb24SVwoKbG93ZXJfY2Fz",
            "ZRgEIAEoCzJBLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLkRpbWVu",
            "c2lvbkV4cHJlc3Npb24uQ2FzZUV4cHJlc3Npb25IABJXCgp1cHBlcl9jYXNl",
            "GAUgASgLMkEuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuRGltZW5z",
            "aW9uRXhwcmVzc2lvbi5DYXNlRXhwcmVzc2lvbkgAEl8KC2NvbmNhdGVuYXRl",
            "GAYgASgLMkguZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuRGltZW5z",
            "aW9uRXhwcmVzc2lvbi5Db25jYXRlbmF0ZUV4cHJlc3Npb25IABooCg5DYXNl",
            "RXhwcmVzc2lvbhIWCg5kaW1lbnNpb25fbmFtZRgBIAEoCRpDChVDb25jYXRl",
            "bmF0ZUV4cHJlc3Npb24SFwoPZGltZW5zaW9uX25hbWVzGAEgAygJEhEKCWRl",
            "bGltaXRlchgCIAEoCUIQCg5vbmVfZXhwcmVzc2lvbiI9CgZNZXRyaWMSDAoE",
            "bmFtZRgBIAEoCRISCgpleHByZXNzaW9uGAIgASgJEhEKCWludmlzaWJsZRgD",
            "IAEoCCKxAgoQRmlsdGVyRXhwcmVzc2lvbhJICglhbmRfZ3JvdXAYASABKAsy",
            "My5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBoYS5GaWx0ZXJFeHByZXNz",
            "aW9uTGlzdEgAEkcKCG9yX2dyb3VwGAIgASgLMjMuZ29vZ2xlLmFuYWx5dGlj",
            "cy5kYXRhLnYxYWxwaGEuRmlsdGVyRXhwcmVzc2lvbkxpc3RIABJJCg5ub3Rf",
            "ZXhwcmVzc2lvbhgDIAEoCzIvLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFs",
            "cGhhLkZpbHRlckV4cHJlc3Npb25IABI3CgZmaWx0ZXIYBCABKAsyJS5nb29n",
            "bGUuYW5hbHl0aWNzLmRhdGEudjFhbHBoYS5GaWx0ZXJIAEIGCgRleHByIlwK",
            "FEZpbHRlckV4cHJlc3Npb25MaXN0EkQKC2V4cHJlc3Npb25zGAEgAygLMi8u",
            "Z29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuRmlsdGVyRXhwcmVzc2lv",
            "biL+CAoGRmlsdGVyEhIKCmZpZWxkX25hbWUYASABKAkSFQoLbnVsbF9maWx0",
            "ZXIYAiABKAhIABJLCg1zdHJpbmdfZmlsdGVyGAMgASgLMjIuZ29vZ2xlLmFu",
            "YWx5dGljcy5kYXRhLnYxYWxwaGEuRmlsdGVyLlN0cmluZ0ZpbHRlckgAEkwK",
            "DmluX2xpc3RfZmlsdGVyGAQgASgLMjIuZ29vZ2xlLmFuYWx5dGljcy5kYXRh",
            "LnYxYWxwaGEuRmlsdGVyLkluTGlzdEZpbHRlckgAEk0KDm51bWVyaWNfZmls",
            "dGVyGAUgASgLMjMuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuRmls",
            "dGVyLk51bWVyaWNGaWx0ZXJIABJNCg5iZXR3ZWVuX2ZpbHRlchgGIAEoCzIz",
            "Lmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLkZpbHRlci5CZXR3ZWVu",
            "RmlsdGVySAAajwIKDFN0cmluZ0ZpbHRlchJQCgptYXRjaF90eXBlGAEgASgO",
            "MjwuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuRmlsdGVyLlN0cmlu",
            "Z0ZpbHRlci5NYXRjaFR5cGUSDQoFdmFsdWUYAiABKAkSFgoOY2FzZV9zZW5z",
            "aXRpdmUYAyABKAgihQEKCU1hdGNoVHlwZRIaChZNQVRDSF9UWVBFX1VOU1BF",
            "Q0lGSUVEEAASCQoFRVhBQ1QQARIPCgtCRUdJTlNfV0lUSBACEg0KCUVORFNf",
            "V0lUSBADEgwKCENPTlRBSU5TEAQSDwoLRlVMTF9SRUdFWFAQBRISCg5QQVJU",
            "SUFMX1JFR0VYUBAGGjYKDEluTGlzdEZpbHRlchIOCgZ2YWx1ZXMYASADKAkS",
            "FgoOY2FzZV9zZW5zaXRpdmUYAiABKAgapQIKDU51bWVyaWNGaWx0ZXISUAoJ",
            "b3BlcmF0aW9uGAEgASgOMj0uZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxw",
            "aGEuRmlsdGVyLk51bWVyaWNGaWx0ZXIuT3BlcmF0aW9uEjoKBXZhbHVlGAIg",
            "ASgLMisuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuTnVtZXJpY1Zh",
            "bHVlIoUBCglPcGVyYXRpb24SGQoVT1BFUkFUSU9OX1VOU1BFQ0lGSUVEEAAS",
            "CQoFRVFVQUwQARINCglMRVNTX1RIQU4QAhIWChJMRVNTX1RIQU5fT1JfRVFV",
            "QUwQAxIQCgxHUkVBVEVSX1RIQU4QBBIZChVHUkVBVEVSX1RIQU5fT1JfRVFV",
            "QUwQBRqPAQoNQmV0d2VlbkZpbHRlchI/Cgpmcm9tX3ZhbHVlGAEgASgLMisu",
            "Z29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuTnVtZXJpY1ZhbHVlEj0K",
            "CHRvX3ZhbHVlGAIgASgLMisuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxw",
            "aGEuTnVtZXJpY1ZhbHVlQgwKCm9uZV9maWx0ZXIi3wUKB09yZGVyQnkSRgoG",
            "bWV0cmljGAEgASgLMjQuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEu",
            "T3JkZXJCeS5NZXRyaWNPcmRlckJ5SAASTAoJZGltZW5zaW9uGAIgASgLMjcu",
            "Z29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuT3JkZXJCeS5EaW1lbnNp",
            "b25PcmRlckJ5SAASRAoFcGl2b3QYAyABKAsyMy5nb29nbGUuYW5hbHl0aWNz",
            "LmRhdGEudjFhbHBoYS5PcmRlckJ5LlBpdm90T3JkZXJCeUgAEgwKBGRlc2MY",
            "BCABKAgaJAoNTWV0cmljT3JkZXJCeRITCgttZXRyaWNfbmFtZRgBIAEoCRrs",
            "AQoQRGltZW5zaW9uT3JkZXJCeRIWCg5kaW1lbnNpb25fbmFtZRgBIAEoCRJV",
            "CgpvcmRlcl90eXBlGAIgASgOMkEuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYx",
            "YWxwaGEuT3JkZXJCeS5EaW1lbnNpb25PcmRlckJ5Lk9yZGVyVHlwZSJpCglP",
            "cmRlclR5cGUSGgoWT1JERVJfVFlQRV9VTlNQRUNJRklFRBAAEhAKDEFMUEhB",
            "TlVNRVJJQxABEiEKHUNBU0VfSU5TRU5TSVRJVkVfQUxQSEFOVU1FUklDEAIS",
            "CwoHTlVNRVJJQxADGsQBCgxQaXZvdE9yZGVyQnkSEwoLbWV0cmljX25hbWUY",
            "ASABKAkSXAoQcGl2b3Rfc2VsZWN0aW9ucxgCIAMoCzJCLmdvb2dsZS5hbmFs",
            "eXRpY3MuZGF0YS52MWFscGhhLk9yZGVyQnkuUGl2b3RPcmRlckJ5LlBpdm90",
            "U2VsZWN0aW9uGkEKDlBpdm90U2VsZWN0aW9uEhYKDmRpbWVuc2lvbl9uYW1l",
            "GAEgASgJEhcKD2RpbWVuc2lvbl92YWx1ZRgCIAEoCUIOCgxvbmVfb3JkZXJf",
            "YnkixQEKBVBpdm90EhMKC2ZpZWxkX25hbWVzGAEgAygJEjkKCW9yZGVyX2J5",
            "cxgCIAMoCzImLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLk9yZGVy",
            "QnkSDgoGb2Zmc2V0GAMgASgDEg0KBWxpbWl0GAQgASgDEk0KE21ldHJpY19h",
            "Z2dyZWdhdGlvbnMYBSADKA4yMC5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFh",
            "bHBoYS5NZXRyaWNBZ2dyZWdhdGlvbiLdAQoKQ29ob3J0U3BlYxI2Cgdjb2hv",
            "cnRzGAEgAygLMiUuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuQ29o",
            "b3J0EkIKDWNvaG9ydHNfcmFuZ2UYAiABKAsyKy5nb29nbGUuYW5hbHl0aWNz",
            "LmRhdGEudjFhbHBoYS5Db2hvcnRzUmFuZ2USUwoWY29ob3J0X3JlcG9ydF9z",
            "ZXR0aW5ncxgDIAEoCzIzLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhh",
            "LkNvaG9ydFJlcG9ydFNldHRpbmdzImcKBkNvaG9ydBIMCgRuYW1lGAEgASgJ",
            "EhEKCWRpbWVuc2lvbhgCIAEoCRI8CgpkYXRlX3JhbmdlGAMgASgLMiguZ29v",
            "Z2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuRGF0ZVJhbmdlItYBCgxDb2hv",
            "cnRzUmFuZ2USTAoLZ3JhbnVsYXJpdHkYASABKA4yNy5nb29nbGUuYW5hbHl0",
            "aWNzLmRhdGEudjFhbHBoYS5Db2hvcnRzUmFuZ2UuR3JhbnVsYXJpdHkSFAoM",
            "c3RhcnRfb2Zmc2V0GAIgASgFEhIKCmVuZF9vZmZzZXQYAyABKAUiTgoLR3Jh",
            "bnVsYXJpdHkSGwoXR1JBTlVMQVJJVFlfVU5TUEVDSUZJRUQQABIJCgVEQUlM",
            "WRABEgoKBldFRUtMWRACEgsKB01PTlRITFkQAyIqChRDb2hvcnRSZXBvcnRT",
            "ZXR0aW5ncxISCgphY2N1bXVsYXRlGAEgASgIIjQKEFJlc3BvbnNlTWV0YURh",
            "dGESIAoYZGF0YV9sb3NzX2Zyb21fb3RoZXJfcm93GAMgASgIIh8KD0RpbWVu",
            "c2lvbkhlYWRlchIMCgRuYW1lGAEgASgJIlUKDE1ldHJpY0hlYWRlchIMCgRu",
            "YW1lGAEgASgJEjcKBHR5cGUYAiABKA4yKS5nb29nbGUuYW5hbHl0aWNzLmRh",
            "dGEudjFhbHBoYS5NZXRyaWNUeXBlInYKC1Bpdm90SGVhZGVyElQKF3Bpdm90",
            "X2RpbWVuc2lvbl9oZWFkZXJzGAEgAygLMjMuZ29vZ2xlLmFuYWx5dGljcy5k",
            "YXRhLnYxYWxwaGEuUGl2b3REaW1lbnNpb25IZWFkZXISEQoJcm93X2NvdW50",
            "GAIgASgFIl8KFFBpdm90RGltZW5zaW9uSGVhZGVyEkcKEGRpbWVuc2lvbl92",
            "YWx1ZXMYASADKAsyLS5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBoYS5E",
            "aW1lbnNpb25WYWx1ZSKRAQoDUm93EkcKEGRpbWVuc2lvbl92YWx1ZXMYASAD",
            "KAsyLS5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBoYS5EaW1lbnNpb25W",
            "YWx1ZRJBCg1tZXRyaWNfdmFsdWVzGAIgAygLMiouZ29vZ2xlLmFuYWx5dGlj",
            "cy5kYXRhLnYxYWxwaGEuTWV0cmljVmFsdWUiLgoORGltZW5zaW9uVmFsdWUS",
            "DwoFdmFsdWUYASABKAlIAEILCglvbmVfdmFsdWUiKwoLTWV0cmljVmFsdWUS",
            "DwoFdmFsdWUYBCABKAlIAEILCglvbmVfdmFsdWUiSgoMTnVtZXJpY1ZhbHVl",
            "EhUKC2ludDY0X3ZhbHVlGAEgASgDSAASFgoMZG91YmxlX3ZhbHVlGAIgASgB",
            "SABCCwoJb25lX3ZhbHVlIrkCCg1Qcm9wZXJ0eVF1b3RhEkIKDnRva2Vuc19w",
            "ZXJfZGF5GAEgASgLMiouZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEu",
            "UXVvdGFTdGF0dXMSQwoPdG9rZW5zX3Blcl9ob3VyGAIgASgLMiouZ29vZ2xl",
            "LmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuUXVvdGFTdGF0dXMSRwoTY29uY3Vy",
            "cmVudF9yZXF1ZXN0cxgDIAEoCzIqLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52",
            "MWFscGhhLlF1b3RhU3RhdHVzElYKInNlcnZlcl9lcnJvcnNfcGVyX3Byb2pl",
            "Y3RfcGVyX2hvdXIYBCABKAsyKi5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFh",
            "bHBoYS5RdW90YVN0YXR1cyIyCgtRdW90YVN0YXR1cxIQCghjb25zdW1lZBgB",
            "IAEoBRIRCglyZW1haW5pbmcYAiABKAUihAEKEURpbWVuc2lvbk1ldGFkYXRh",
            "EhAKCGFwaV9uYW1lGAEgASgJEg8KB3VpX25hbWUYAiABKAkSEwoLZGVzY3Jp",
            "cHRpb24YAyABKAkSHAoUZGVwcmVjYXRlZF9hcGlfbmFtZXMYBCADKAkSGQoR",
            "Y3VzdG9tX2RlZmluaXRpb24YBSABKAgizgEKDk1ldHJpY01ldGFkYXRhEhAK",
            "CGFwaV9uYW1lGAEgASgJEg8KB3VpX25hbWUYAiABKAkSEwoLZGVzY3JpcHRp",
            "b24YAyABKAkSHAoUZGVwcmVjYXRlZF9hcGlfbmFtZXMYBCADKAkSNwoEdHlw",
            "ZRgFIAEoDjIpLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLk1ldHJp",
            "Y1R5cGUSEgoKZXhwcmVzc2lvbhgGIAEoCRIZChFjdXN0b21fZGVmaW5pdGlv",
            "bhgHIAEoCCpnChFNZXRyaWNBZ2dyZWdhdGlvbhIiCh5NRVRSSUNfQUdHUkVH",
            "QVRJT05fVU5TUEVDSUZJRUQQABIJCgVUT1RBTBABEgsKB01JTklNVU0QBRIL",
            "CgdNQVhJTVVNEAYSCQoFQ09VTlQQBCqBAgoKTWV0cmljVHlwZRIbChdNRVRS",
            "SUNfVFlQRV9VTlNQRUNJRklFRBAAEhAKDFRZUEVfSU5URUdFUhABEg4KClRZ",
            "UEVfRkxPQVQQAhIQCgxUWVBFX1NFQ09ORFMQBBIVChFUWVBFX01JTExJU0VD",
            "T05EUxAFEhAKDFRZUEVfTUlOVVRFUxAGEg4KClRZUEVfSE9VUlMQBxIRCg1U",
            "WVBFX1NUQU5EQVJEEAgSEQoNVFlQRV9DVVJSRU5DWRAJEg0KCVRZUEVfRkVF",
            "VBAKEg4KClRZUEVfTUlMRVMQCxIPCgtUWVBFX01FVEVSUxAMEhMKD1RZUEVf",
            "S0lMT01FVEVSUxANQnsKIWNvbS5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFh",
            "bHBoYUIRUmVwb3J0aW5nQXBpUHJvdG9QAVpBZ29vZ2xlLmdvbGFuZy5vcmcv",
            "Z2VucHJvdG8vZ29vZ2xlYXBpcy9hbmFseXRpY3MvZGF0YS92MWFscGhhO2Rh",
            "dGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Analytics.Data.V1Alpha.MetricAggregation), typeof(global::Google.Analytics.Data.V1Alpha.MetricType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.DateRange), global::Google.Analytics.Data.V1Alpha.DateRange.Parser, new[]{ "StartDate", "EndDate", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.Entity), global::Google.Analytics.Data.V1Alpha.Entity.Parser, new[]{ "PropertyId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.Dimension), global::Google.Analytics.Data.V1Alpha.Dimension.Parser, new[]{ "Name", "DimensionExpression" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.DimensionExpression), global::Google.Analytics.Data.V1Alpha.DimensionExpression.Parser, new[]{ "LowerCase", "UpperCase", "Concatenate" }, new[]{ "OneExpression" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression), global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression.Parser, new[]{ "DimensionName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.ConcatenateExpression), global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.ConcatenateExpression.Parser, new[]{ "DimensionNames", "Delimiter" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.Metric), global::Google.Analytics.Data.V1Alpha.Metric.Parser, new[]{ "Name", "Expression", "Invisible" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.FilterExpression), global::Google.Analytics.Data.V1Alpha.FilterExpression.Parser, new[]{ "AndGroup", "OrGroup", "NotExpression", "Filter" }, new[]{ "Expr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.FilterExpressionList), global::Google.Analytics.Data.V1Alpha.FilterExpressionList.Parser, new[]{ "Expressions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.Filter), global::Google.Analytics.Data.V1Alpha.Filter.Parser, new[]{ "FieldName", "NullFilter", "StringFilter", "InListFilter", "NumericFilter", "BetweenFilter" }, new[]{ "OneFilter" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter), global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter.Parser, new[]{ "MatchType", "Value", "CaseSensitive" }, null, new[]{ typeof(global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter.Types.MatchType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.Filter.Types.InListFilter), global::Google.Analytics.Data.V1Alpha.Filter.Types.InListFilter.Parser, new[]{ "Values", "CaseSensitive" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter), global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter.Parser, new[]{ "Operation", "Value" }, null, new[]{ typeof(global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter.Types.Operation) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.Filter.Types.BetweenFilter), global::Google.Analytics.Data.V1Alpha.Filter.Types.BetweenFilter.Parser, new[]{ "FromValue", "ToValue" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.OrderBy), global::Google.Analytics.Data.V1Alpha.OrderBy.Parser, new[]{ "Metric", "Dimension", "Pivot", "Desc" }, new[]{ "OneOrderBy" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.OrderBy.Types.MetricOrderBy), global::Google.Analytics.Data.V1Alpha.OrderBy.Types.MetricOrderBy.Parser, new[]{ "MetricName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy), global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy.Parser, new[]{ "DimensionName", "OrderType" }, null, new[]{ typeof(global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy.Types.OrderType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy), global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy.Parser, new[]{ "MetricName", "PivotSelections" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy.Types.PivotSelection), global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy.Types.PivotSelection.Parser, new[]{ "DimensionName", "DimensionValue" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.Pivot), global::Google.Analytics.Data.V1Alpha.Pivot.Parser, new[]{ "FieldNames", "OrderBys", "Offset", "Limit", "MetricAggregations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.CohortSpec), global::Google.Analytics.Data.V1Alpha.CohortSpec.Parser, new[]{ "Cohorts", "CohortsRange", "CohortReportSettings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.Cohort), global::Google.Analytics.Data.V1Alpha.Cohort.Parser, new[]{ "Name", "Dimension", "DateRange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.CohortsRange), global::Google.Analytics.Data.V1Alpha.CohortsRange.Parser, new[]{ "Granularity", "StartOffset", "EndOffset" }, null, new[]{ typeof(global::Google.Analytics.Data.V1Alpha.CohortsRange.Types.Granularity) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.CohortReportSettings), global::Google.Analytics.Data.V1Alpha.CohortReportSettings.Parser, new[]{ "Accumulate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.ResponseMetaData), global::Google.Analytics.Data.V1Alpha.ResponseMetaData.Parser, new[]{ "DataLossFromOtherRow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.DimensionHeader), global::Google.Analytics.Data.V1Alpha.DimensionHeader.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.MetricHeader), global::Google.Analytics.Data.V1Alpha.MetricHeader.Parser, new[]{ "Name", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.PivotHeader), global::Google.Analytics.Data.V1Alpha.PivotHeader.Parser, new[]{ "PivotDimensionHeaders", "RowCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.PivotDimensionHeader), global::Google.Analytics.Data.V1Alpha.PivotDimensionHeader.Parser, new[]{ "DimensionValues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.Row), global::Google.Analytics.Data.V1Alpha.Row.Parser, new[]{ "DimensionValues", "MetricValues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.DimensionValue), global::Google.Analytics.Data.V1Alpha.DimensionValue.Parser, new[]{ "Value" }, new[]{ "OneValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.MetricValue), global::Google.Analytics.Data.V1Alpha.MetricValue.Parser, new[]{ "Value" }, new[]{ "OneValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.NumericValue), global::Google.Analytics.Data.V1Alpha.NumericValue.Parser, new[]{ "Int64Value", "DoubleValue" }, new[]{ "OneValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.PropertyQuota), global::Google.Analytics.Data.V1Alpha.PropertyQuota.Parser, new[]{ "TokensPerDay", "TokensPerHour", "ConcurrentRequests", "ServerErrorsPerProjectPerHour" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.QuotaStatus), global::Google.Analytics.Data.V1Alpha.QuotaStatus.Parser, new[]{ "Consumed", "Remaining" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.DimensionMetadata), global::Google.Analytics.Data.V1Alpha.DimensionMetadata.Parser, new[]{ "ApiName", "UiName", "Description", "DeprecatedApiNames", "CustomDefinition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.MetricMetadata), global::Google.Analytics.Data.V1Alpha.MetricMetadata.Parser, new[]{ "ApiName", "UiName", "Description", "DeprecatedApiNames", "Type", "Expression", "CustomDefinition" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Represents aggregation of metrics.
  /// </summary>
  public enum MetricAggregation {
    /// <summary>
    /// Unspecified operator.
    /// </summary>
    [pbr::OriginalName("METRIC_AGGREGATION_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// SUM operator.
    /// </summary>
    [pbr::OriginalName("TOTAL")] Total = 1,
    /// <summary>
    /// Minimum operator.
    /// </summary>
    [pbr::OriginalName("MINIMUM")] Minimum = 5,
    /// <summary>
    /// Maximum operator.
    /// </summary>
    [pbr::OriginalName("MAXIMUM")] Maximum = 6,
    /// <summary>
    /// Count operator.
    /// </summary>
    [pbr::OriginalName("COUNT")] Count = 4,
  }

  /// <summary>
  /// A metric's value type.
  /// </summary>
  public enum MetricType {
    /// <summary>
    /// Unspecified type.
    /// </summary>
    [pbr::OriginalName("METRIC_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Integer type.
    /// </summary>
    [pbr::OriginalName("TYPE_INTEGER")] TypeInteger = 1,
    /// <summary>
    /// Floating point type.
    /// </summary>
    [pbr::OriginalName("TYPE_FLOAT")] TypeFloat = 2,
    /// <summary>
    /// A duration of seconds; a special floating point type.
    /// </summary>
    [pbr::OriginalName("TYPE_SECONDS")] TypeSeconds = 4,
    /// <summary>
    /// A duration in milliseconds; a special floating point type.
    /// </summary>
    [pbr::OriginalName("TYPE_MILLISECONDS")] TypeMilliseconds = 5,
    /// <summary>
    /// A duration in minutes; a special floating point type.
    /// </summary>
    [pbr::OriginalName("TYPE_MINUTES")] TypeMinutes = 6,
    /// <summary>
    /// A duration in hours; a special floating point type.
    /// </summary>
    [pbr::OriginalName("TYPE_HOURS")] TypeHours = 7,
    /// <summary>
    /// A custom metric of standard type; a special floating point type.
    /// </summary>
    [pbr::OriginalName("TYPE_STANDARD")] TypeStandard = 8,
    /// <summary>
    /// An amount of money; a special floating point type.
    /// </summary>
    [pbr::OriginalName("TYPE_CURRENCY")] TypeCurrency = 9,
    /// <summary>
    /// A length in feet; a special floating point type.
    /// </summary>
    [pbr::OriginalName("TYPE_FEET")] TypeFeet = 10,
    /// <summary>
    /// A length in miles; a special floating point type.
    /// </summary>
    [pbr::OriginalName("TYPE_MILES")] TypeMiles = 11,
    /// <summary>
    /// A length in meters; a special floating point type.
    /// </summary>
    [pbr::OriginalName("TYPE_METERS")] TypeMeters = 12,
    /// <summary>
    /// A length in kilometers; a special floating point type.
    /// </summary>
    [pbr::OriginalName("TYPE_KILOMETERS")] TypeKilometers = 13,
  }

  #endregion

  #region Messages
  /// <summary>
  /// A contiguous set of days: startDate, startDate + 1, ..., endDate. Requests
  /// are allowed up to 4 date ranges.
  /// </summary>
  public sealed partial class DateRange : pb::IMessage<DateRange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DateRange> _parser = new pb::MessageParser<DateRange>(() => new DateRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DateRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateRange(DateRange other) : this() {
      startDate_ = other.startDate_;
      endDate_ = other.endDate_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateRange Clone() {
      return new DateRange(this);
    }

    /// <summary>Field number for the "start_date" field.</summary>
    public const int StartDateFieldNumber = 1;
    private string startDate_ = "";
    /// <summary>
    /// The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot
    /// be after `end_date`. The format `NdaysAgo`, `yesterday`, or `today` is also
    /// accepted, and in that case, the date is inferred based on the property's
    /// reporting time zone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_date" field.</summary>
    public const int EndDateFieldNumber = 2;
    private string endDate_ = "";
    /// <summary>
    /// The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot
    /// be before `start_date`. The format `NdaysAgo`, `yesterday`, or `today` is
    /// also accepted, and in that case, the date is inferred based on the
    /// property's reporting time zone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndDate {
      get { return endDate_; }
      set {
        endDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// Assigns a name to this date range. The dimension `dateRange` is valued to
    /// this name in a report response. If set, cannot begin with `date_range_` or
    /// `RESERVED_`. If not set, date ranges are named by their zero based index in
    /// the request: `date_range_0`, `date_range_1`, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DateRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DateRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartDate != other.StartDate) return false;
      if (EndDate != other.EndDate) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (EndDate.Length != 0) hash ^= EndDate.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartDate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StartDate);
      }
      if (EndDate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EndDate);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartDate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StartDate);
      }
      if (EndDate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EndDate);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (EndDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndDate);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DateRange other) {
      if (other == null) {
        return;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.EndDate.Length != 0) {
        EndDate = other.EndDate;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StartDate = input.ReadString();
            break;
          }
          case 18: {
            EndDate = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StartDate = input.ReadString();
            break;
          }
          case 18: {
            EndDate = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The unique identifier of the property whose events are tracked.
  /// </summary>
  public sealed partial class Entity : pb::IMessage<Entity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Entity> _parser = new pb::MessageParser<Entity>(() => new Entity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Entity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity(Entity other) : this() {
      propertyId_ = other.propertyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity Clone() {
      return new Entity(this);
    }

    /// <summary>Field number for the "property_id" field.</summary>
    public const int PropertyIdFieldNumber = 1;
    private string propertyId_ = "";
    /// <summary>
    /// A Google Analytics GA4 property id. To learn more, see [where to find your
    /// Property
    /// ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PropertyId {
      get { return propertyId_; }
      set {
        propertyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Entity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Entity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropertyId != other.PropertyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PropertyId.Length != 0) hash ^= PropertyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropertyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PropertyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropertyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PropertyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PropertyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PropertyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Entity other) {
      if (other == null) {
        return;
      }
      if (other.PropertyId.Length != 0) {
        PropertyId = other.PropertyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PropertyId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PropertyId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Dimensions are attributes of your data. For example, the dimension city
  /// indicates the city from which an event originates. Dimension values in report
  /// responses are strings; for example, city could be "Paris" or "New York".
  /// Requests are allowed up to 8 dimensions.
  /// </summary>
  public sealed partial class Dimension : pb::IMessage<Dimension>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Dimension> _parser = new pb::MessageParser<Dimension>(() => new Dimension());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dimension> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dimension() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dimension(Dimension other) : this() {
      name_ = other.name_;
      dimensionExpression_ = other.dimensionExpression_ != null ? other.dimensionExpression_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dimension Clone() {
      return new Dimension(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the dimension. See the [API
    /// Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#dimensions)
    /// for the list of dimension names.
    ///
    /// If `dimensionExpression` is specified, `name` can be any string that you
    /// would like. For example if a `dimensionExpression` concatenates `country`
    /// and `city`, you could call that dimension `countryAndCity`.
    ///
    /// Dimensions are referenced by `name` in `dimensionFilter`, `orderBys`,
    /// `dimensionExpression`, and `pivots`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dimension_expression" field.</summary>
    public const int DimensionExpressionFieldNumber = 2;
    private global::Google.Analytics.Data.V1Alpha.DimensionExpression dimensionExpression_;
    /// <summary>
    /// One dimension can be the result of an expression of multiple dimensions.
    /// For example, dimension "country, city": concatenate(country, ", ", city).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.DimensionExpression DimensionExpression {
      get { return dimensionExpression_; }
      set {
        dimensionExpression_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dimension);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dimension other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(DimensionExpression, other.DimensionExpression)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (dimensionExpression_ != null) hash ^= DimensionExpression.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (dimensionExpression_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DimensionExpression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (dimensionExpression_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DimensionExpression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (dimensionExpression_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DimensionExpression);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dimension other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.dimensionExpression_ != null) {
        if (dimensionExpression_ == null) {
          DimensionExpression = new global::Google.Analytics.Data.V1Alpha.DimensionExpression();
        }
        DimensionExpression.MergeFrom(other.DimensionExpression);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (dimensionExpression_ == null) {
              DimensionExpression = new global::Google.Analytics.Data.V1Alpha.DimensionExpression();
            }
            input.ReadMessage(DimensionExpression);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (dimensionExpression_ == null) {
              DimensionExpression = new global::Google.Analytics.Data.V1Alpha.DimensionExpression();
            }
            input.ReadMessage(DimensionExpression);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used to express a dimension which is the result of a formula of multiple
  /// dimensions. Example usages:
  /// 1) lower_case(dimension)
  /// 2) concatenate(dimension1, symbol, dimension2).
  /// </summary>
  public sealed partial class DimensionExpression : pb::IMessage<DimensionExpression>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DimensionExpression> _parser = new pb::MessageParser<DimensionExpression>(() => new DimensionExpression());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DimensionExpression> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DimensionExpression() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DimensionExpression(DimensionExpression other) : this() {
      switch (other.OneExpressionCase) {
        case OneExpressionOneofCase.LowerCase:
          LowerCase = other.LowerCase.Clone();
          break;
        case OneExpressionOneofCase.UpperCase:
          UpperCase = other.UpperCase.Clone();
          break;
        case OneExpressionOneofCase.Concatenate:
          Concatenate = other.Concatenate.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DimensionExpression Clone() {
      return new DimensionExpression(this);
    }

    /// <summary>Field number for the "lower_case" field.</summary>
    public const int LowerCaseFieldNumber = 4;
    /// <summary>
    /// Used to convert a dimension value to lower case.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression LowerCase {
      get { return oneExpressionCase_ == OneExpressionOneofCase.LowerCase ? (global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression) oneExpression_ : null; }
      set {
        oneExpression_ = value;
        oneExpressionCase_ = value == null ? OneExpressionOneofCase.None : OneExpressionOneofCase.LowerCase;
      }
    }

    /// <summary>Field number for the "upper_case" field.</summary>
    public const int UpperCaseFieldNumber = 5;
    /// <summary>
    /// Used to convert a dimension value to upper case.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression UpperCase {
      get { return oneExpressionCase_ == OneExpressionOneofCase.UpperCase ? (global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression) oneExpression_ : null; }
      set {
        oneExpression_ = value;
        oneExpressionCase_ = value == null ? OneExpressionOneofCase.None : OneExpressionOneofCase.UpperCase;
      }
    }

    /// <summary>Field number for the "concatenate" field.</summary>
    public const int ConcatenateFieldNumber = 6;
    /// <summary>
    /// Used to combine dimension values to a single dimension.
    /// For example, dimension "country, city": concatenate(country, ", ", city).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.ConcatenateExpression Concatenate {
      get { return oneExpressionCase_ == OneExpressionOneofCase.Concatenate ? (global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.ConcatenateExpression) oneExpression_ : null; }
      set {
        oneExpression_ = value;
        oneExpressionCase_ = value == null ? OneExpressionOneofCase.None : OneExpressionOneofCase.Concatenate;
      }
    }

    private object oneExpression_;
    /// <summary>Enum of possible cases for the "one_expression" oneof.</summary>
    public enum OneExpressionOneofCase {
      None = 0,
      LowerCase = 4,
      UpperCase = 5,
      Concatenate = 6,
    }
    private OneExpressionOneofCase oneExpressionCase_ = OneExpressionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneExpressionOneofCase OneExpressionCase {
      get { return oneExpressionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneExpression() {
      oneExpressionCase_ = OneExpressionOneofCase.None;
      oneExpression_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DimensionExpression);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DimensionExpression other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LowerCase, other.LowerCase)) return false;
      if (!object.Equals(UpperCase, other.UpperCase)) return false;
      if (!object.Equals(Concatenate, other.Concatenate)) return false;
      if (OneExpressionCase != other.OneExpressionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oneExpressionCase_ == OneExpressionOneofCase.LowerCase) hash ^= LowerCase.GetHashCode();
      if (oneExpressionCase_ == OneExpressionOneofCase.UpperCase) hash ^= UpperCase.GetHashCode();
      if (oneExpressionCase_ == OneExpressionOneofCase.Concatenate) hash ^= Concatenate.GetHashCode();
      hash ^= (int) oneExpressionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (oneExpressionCase_ == OneExpressionOneofCase.LowerCase) {
        output.WriteRawTag(34);
        output.WriteMessage(LowerCase);
      }
      if (oneExpressionCase_ == OneExpressionOneofCase.UpperCase) {
        output.WriteRawTag(42);
        output.WriteMessage(UpperCase);
      }
      if (oneExpressionCase_ == OneExpressionOneofCase.Concatenate) {
        output.WriteRawTag(50);
        output.WriteMessage(Concatenate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (oneExpressionCase_ == OneExpressionOneofCase.LowerCase) {
        output.WriteRawTag(34);
        output.WriteMessage(LowerCase);
      }
      if (oneExpressionCase_ == OneExpressionOneofCase.UpperCase) {
        output.WriteRawTag(42);
        output.WriteMessage(UpperCase);
      }
      if (oneExpressionCase_ == OneExpressionOneofCase.Concatenate) {
        output.WriteRawTag(50);
        output.WriteMessage(Concatenate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oneExpressionCase_ == OneExpressionOneofCase.LowerCase) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LowerCase);
      }
      if (oneExpressionCase_ == OneExpressionOneofCase.UpperCase) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpperCase);
      }
      if (oneExpressionCase_ == OneExpressionOneofCase.Concatenate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Concatenate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DimensionExpression other) {
      if (other == null) {
        return;
      }
      switch (other.OneExpressionCase) {
        case OneExpressionOneofCase.LowerCase:
          if (LowerCase == null) {
            LowerCase = new global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression();
          }
          LowerCase.MergeFrom(other.LowerCase);
          break;
        case OneExpressionOneofCase.UpperCase:
          if (UpperCase == null) {
            UpperCase = new global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression();
          }
          UpperCase.MergeFrom(other.UpperCase);
          break;
        case OneExpressionOneofCase.Concatenate:
          if (Concatenate == null) {
            Concatenate = new global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.ConcatenateExpression();
          }
          Concatenate.MergeFrom(other.Concatenate);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression subBuilder = new global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression();
            if (oneExpressionCase_ == OneExpressionOneofCase.LowerCase) {
              subBuilder.MergeFrom(LowerCase);
            }
            input.ReadMessage(subBuilder);
            LowerCase = subBuilder;
            break;
          }
          case 42: {
            global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression subBuilder = new global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression();
            if (oneExpressionCase_ == OneExpressionOneofCase.UpperCase) {
              subBuilder.MergeFrom(UpperCase);
            }
            input.ReadMessage(subBuilder);
            UpperCase = subBuilder;
            break;
          }
          case 50: {
            global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.ConcatenateExpression subBuilder = new global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.ConcatenateExpression();
            if (oneExpressionCase_ == OneExpressionOneofCase.Concatenate) {
              subBuilder.MergeFrom(Concatenate);
            }
            input.ReadMessage(subBuilder);
            Concatenate = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 34: {
            global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression subBuilder = new global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression();
            if (oneExpressionCase_ == OneExpressionOneofCase.LowerCase) {
              subBuilder.MergeFrom(LowerCase);
            }
            input.ReadMessage(subBuilder);
            LowerCase = subBuilder;
            break;
          }
          case 42: {
            global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression subBuilder = new global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.CaseExpression();
            if (oneExpressionCase_ == OneExpressionOneofCase.UpperCase) {
              subBuilder.MergeFrom(UpperCase);
            }
            input.ReadMessage(subBuilder);
            UpperCase = subBuilder;
            break;
          }
          case 50: {
            global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.ConcatenateExpression subBuilder = new global::Google.Analytics.Data.V1Alpha.DimensionExpression.Types.ConcatenateExpression();
            if (oneExpressionCase_ == OneExpressionOneofCase.Concatenate) {
              subBuilder.MergeFrom(Concatenate);
            }
            input.ReadMessage(subBuilder);
            Concatenate = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DimensionExpression message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Used to convert a dimension value to a single case.
      /// </summary>
      public sealed partial class CaseExpression : pb::IMessage<CaseExpression>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CaseExpression> _parser = new pb::MessageParser<CaseExpression>(() => new CaseExpression());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CaseExpression> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Analytics.Data.V1Alpha.DimensionExpression.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CaseExpression() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CaseExpression(CaseExpression other) : this() {
          dimensionName_ = other.dimensionName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CaseExpression Clone() {
          return new CaseExpression(this);
        }

        /// <summary>Field number for the "dimension_name" field.</summary>
        public const int DimensionNameFieldNumber = 1;
        private string dimensionName_ = "";
        /// <summary>
        /// Name of a dimension. The name must refer back to a name in dimensions
        /// field of the request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DimensionName {
          get { return dimensionName_; }
          set {
            dimensionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CaseExpression);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CaseExpression other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DimensionName != other.DimensionName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DimensionName.Length != 0) hash ^= DimensionName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (DimensionName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DimensionName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (DimensionName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DimensionName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DimensionName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DimensionName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CaseExpression other) {
          if (other == null) {
            return;
          }
          if (other.DimensionName.Length != 0) {
            DimensionName = other.DimensionName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DimensionName = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                DimensionName = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Used to combine dimension values to a single dimension.
      /// </summary>
      public sealed partial class ConcatenateExpression : pb::IMessage<ConcatenateExpression>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ConcatenateExpression> _parser = new pb::MessageParser<ConcatenateExpression>(() => new ConcatenateExpression());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ConcatenateExpression> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Analytics.Data.V1Alpha.DimensionExpression.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConcatenateExpression() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConcatenateExpression(ConcatenateExpression other) : this() {
          dimensionNames_ = other.dimensionNames_.Clone();
          delimiter_ = other.delimiter_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConcatenateExpression Clone() {
          return new ConcatenateExpression(this);
        }

        /// <summary>Field number for the "dimension_names" field.</summary>
        public const int DimensionNamesFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_dimensionNames_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> dimensionNames_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Names of dimensions. The names must refer back to names in the dimensions
        /// field of the request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> DimensionNames {
          get { return dimensionNames_; }
        }

        /// <summary>Field number for the "delimiter" field.</summary>
        public const int DelimiterFieldNumber = 2;
        private string delimiter_ = "";
        /// <summary>
        /// The delimiter placed between dimension names.
        ///
        /// Delimiters are often single characters such as "|" or "," but can be
        /// longer strings. If a dimension value contains the delimiter, both will be
        /// present in response with no distinction. For example if dimension 1 value
        /// = "US,FR", dimension 2 value = "JP", and delimiter = ",", then the
        /// response will contain "US,FR,JP".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Delimiter {
          get { return delimiter_; }
          set {
            delimiter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ConcatenateExpression);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ConcatenateExpression other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!dimensionNames_.Equals(other.dimensionNames_)) return false;
          if (Delimiter != other.Delimiter) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= dimensionNames_.GetHashCode();
          if (Delimiter.Length != 0) hash ^= Delimiter.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          dimensionNames_.WriteTo(output, _repeated_dimensionNames_codec);
          if (Delimiter.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Delimiter);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          dimensionNames_.WriteTo(ref output, _repeated_dimensionNames_codec);
          if (Delimiter.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Delimiter);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += dimensionNames_.CalculateSize(_repeated_dimensionNames_codec);
          if (Delimiter.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Delimiter);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ConcatenateExpression other) {
          if (other == null) {
            return;
          }
          dimensionNames_.Add(other.dimensionNames_);
          if (other.Delimiter.Length != 0) {
            Delimiter = other.Delimiter;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                dimensionNames_.AddEntriesFrom(input, _repeated_dimensionNames_codec);
                break;
              }
              case 18: {
                Delimiter = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                dimensionNames_.AddEntriesFrom(ref input, _repeated_dimensionNames_codec);
                break;
              }
              case 18: {
                Delimiter = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// The quantitative measurements of a report. For example, the metric
  /// `eventCount` is the total number of events. Requests are allowed up to 10
  /// metrics.
  /// </summary>
  public sealed partial class Metric : pb::IMessage<Metric>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Metric> _parser = new pb::MessageParser<Metric>(() => new Metric());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Metric> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metric() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metric(Metric other) : this() {
      name_ = other.name_;
      expression_ = other.expression_;
      invisible_ = other.invisible_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metric Clone() {
      return new Metric(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the metric. See the [API
    /// Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#metrics)
    /// for the list of metric names.
    ///
    /// If `expression` is specified, `name` can be any string that you would like.
    /// For example if `expression` is `screenPageViews/sessions`, you could call
    /// that metric's name = `viewsPerSession`.
    ///
    /// Metrics are referenced by `name` in `metricFilter`, `orderBys`, and metric
    /// `expression`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 2;
    private string expression_ = "";
    /// <summary>
    /// A mathematical expression for derived metrics. For example, the metric
    /// Event count per user is `eventCount/totalUsers`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "invisible" field.</summary>
    public const int InvisibleFieldNumber = 3;
    private bool invisible_;
    /// <summary>
    /// Indicates if a metric is invisible in the report response. If a metric is
    /// invisible, the metric will not produce a column in the response, but can be
    /// used in `metricFilter`, `orderBys`, or a metric `expression`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Invisible {
      get { return invisible_; }
      set {
        invisible_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Metric);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Metric other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Expression != other.Expression) return false;
      if (Invisible != other.Invisible) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (Invisible != false) hash ^= Invisible.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Expression);
      }
      if (Invisible != false) {
        output.WriteRawTag(24);
        output.WriteBool(Invisible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Expression);
      }
      if (Invisible != false) {
        output.WriteRawTag(24);
        output.WriteBool(Invisible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (Invisible != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Metric other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      if (other.Invisible != false) {
        Invisible = other.Invisible;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Expression = input.ReadString();
            break;
          }
          case 24: {
            Invisible = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Expression = input.ReadString();
            break;
          }
          case 24: {
            Invisible = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// To express dimension or metric filters.
  /// The fields in the same FilterExpression need to be either all dimensions or
  /// all metrics.
  /// </summary>
  public sealed partial class FilterExpression : pb::IMessage<FilterExpression>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FilterExpression> _parser = new pb::MessageParser<FilterExpression>(() => new FilterExpression());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilterExpression> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterExpression() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterExpression(FilterExpression other) : this() {
      switch (other.ExprCase) {
        case ExprOneofCase.AndGroup:
          AndGroup = other.AndGroup.Clone();
          break;
        case ExprOneofCase.OrGroup:
          OrGroup = other.OrGroup.Clone();
          break;
        case ExprOneofCase.NotExpression:
          NotExpression = other.NotExpression.Clone();
          break;
        case ExprOneofCase.Filter:
          Filter = other.Filter.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterExpression Clone() {
      return new FilterExpression(this);
    }

    /// <summary>Field number for the "and_group" field.</summary>
    public const int AndGroupFieldNumber = 1;
    /// <summary>
    /// The FilterExpressions in and_group have an AND relationship.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.FilterExpressionList AndGroup {
      get { return exprCase_ == ExprOneofCase.AndGroup ? (global::Google.Analytics.Data.V1Alpha.FilterExpressionList) expr_ : null; }
      set {
        expr_ = value;
        exprCase_ = value == null ? ExprOneofCase.None : ExprOneofCase.AndGroup;
      }
    }

    /// <summary>Field number for the "or_group" field.</summary>
    public const int OrGroupFieldNumber = 2;
    /// <summary>
    /// The FilterExpressions in or_group have an OR relationship.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.FilterExpressionList OrGroup {
      get { return exprCase_ == ExprOneofCase.OrGroup ? (global::Google.Analytics.Data.V1Alpha.FilterExpressionList) expr_ : null; }
      set {
        expr_ = value;
        exprCase_ = value == null ? ExprOneofCase.None : ExprOneofCase.OrGroup;
      }
    }

    /// <summary>Field number for the "not_expression" field.</summary>
    public const int NotExpressionFieldNumber = 3;
    /// <summary>
    /// The FilterExpression is NOT of not_expression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.FilterExpression NotExpression {
      get { return exprCase_ == ExprOneofCase.NotExpression ? (global::Google.Analytics.Data.V1Alpha.FilterExpression) expr_ : null; }
      set {
        expr_ = value;
        exprCase_ = value == null ? ExprOneofCase.None : ExprOneofCase.NotExpression;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    /// <summary>
    /// A primitive filter.
    /// All fields in filter in same FilterExpression needs to be either all
    /// dimensions or metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.Filter Filter {
      get { return exprCase_ == ExprOneofCase.Filter ? (global::Google.Analytics.Data.V1Alpha.Filter) expr_ : null; }
      set {
        expr_ = value;
        exprCase_ = value == null ? ExprOneofCase.None : ExprOneofCase.Filter;
      }
    }

    private object expr_;
    /// <summary>Enum of possible cases for the "expr" oneof.</summary>
    public enum ExprOneofCase {
      None = 0,
      AndGroup = 1,
      OrGroup = 2,
      NotExpression = 3,
      Filter = 4,
    }
    private ExprOneofCase exprCase_ = ExprOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExprOneofCase ExprCase {
      get { return exprCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpr() {
      exprCase_ = ExprOneofCase.None;
      expr_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilterExpression);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilterExpression other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AndGroup, other.AndGroup)) return false;
      if (!object.Equals(OrGroup, other.OrGroup)) return false;
      if (!object.Equals(NotExpression, other.NotExpression)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (ExprCase != other.ExprCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exprCase_ == ExprOneofCase.AndGroup) hash ^= AndGroup.GetHashCode();
      if (exprCase_ == ExprOneofCase.OrGroup) hash ^= OrGroup.GetHashCode();
      if (exprCase_ == ExprOneofCase.NotExpression) hash ^= NotExpression.GetHashCode();
      if (exprCase_ == ExprOneofCase.Filter) hash ^= Filter.GetHashCode();
      hash ^= (int) exprCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (exprCase_ == ExprOneofCase.AndGroup) {
        output.WriteRawTag(10);
        output.WriteMessage(AndGroup);
      }
      if (exprCase_ == ExprOneofCase.OrGroup) {
        output.WriteRawTag(18);
        output.WriteMessage(OrGroup);
      }
      if (exprCase_ == ExprOneofCase.NotExpression) {
        output.WriteRawTag(26);
        output.WriteMessage(NotExpression);
      }
      if (exprCase_ == ExprOneofCase.Filter) {
        output.WriteRawTag(34);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (exprCase_ == ExprOneofCase.AndGroup) {
        output.WriteRawTag(10);
        output.WriteMessage(AndGroup);
      }
      if (exprCase_ == ExprOneofCase.OrGroup) {
        output.WriteRawTag(18);
        output.WriteMessage(OrGroup);
      }
      if (exprCase_ == ExprOneofCase.NotExpression) {
        output.WriteRawTag(26);
        output.WriteMessage(NotExpression);
      }
      if (exprCase_ == ExprOneofCase.Filter) {
        output.WriteRawTag(34);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exprCase_ == ExprOneofCase.AndGroup) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AndGroup);
      }
      if (exprCase_ == ExprOneofCase.OrGroup) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrGroup);
      }
      if (exprCase_ == ExprOneofCase.NotExpression) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotExpression);
      }
      if (exprCase_ == ExprOneofCase.Filter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilterExpression other) {
      if (other == null) {
        return;
      }
      switch (other.ExprCase) {
        case ExprOneofCase.AndGroup:
          if (AndGroup == null) {
            AndGroup = new global::Google.Analytics.Data.V1Alpha.FilterExpressionList();
          }
          AndGroup.MergeFrom(other.AndGroup);
          break;
        case ExprOneofCase.OrGroup:
          if (OrGroup == null) {
            OrGroup = new global::Google.Analytics.Data.V1Alpha.FilterExpressionList();
          }
          OrGroup.MergeFrom(other.OrGroup);
          break;
        case ExprOneofCase.NotExpression:
          if (NotExpression == null) {
            NotExpression = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
          }
          NotExpression.MergeFrom(other.NotExpression);
          break;
        case ExprOneofCase.Filter:
          if (Filter == null) {
            Filter = new global::Google.Analytics.Data.V1Alpha.Filter();
          }
          Filter.MergeFrom(other.Filter);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Analytics.Data.V1Alpha.FilterExpressionList subBuilder = new global::Google.Analytics.Data.V1Alpha.FilterExpressionList();
            if (exprCase_ == ExprOneofCase.AndGroup) {
              subBuilder.MergeFrom(AndGroup);
            }
            input.ReadMessage(subBuilder);
            AndGroup = subBuilder;
            break;
          }
          case 18: {
            global::Google.Analytics.Data.V1Alpha.FilterExpressionList subBuilder = new global::Google.Analytics.Data.V1Alpha.FilterExpressionList();
            if (exprCase_ == ExprOneofCase.OrGroup) {
              subBuilder.MergeFrom(OrGroup);
            }
            input.ReadMessage(subBuilder);
            OrGroup = subBuilder;
            break;
          }
          case 26: {
            global::Google.Analytics.Data.V1Alpha.FilterExpression subBuilder = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            if (exprCase_ == ExprOneofCase.NotExpression) {
              subBuilder.MergeFrom(NotExpression);
            }
            input.ReadMessage(subBuilder);
            NotExpression = subBuilder;
            break;
          }
          case 34: {
            global::Google.Analytics.Data.V1Alpha.Filter subBuilder = new global::Google.Analytics.Data.V1Alpha.Filter();
            if (exprCase_ == ExprOneofCase.Filter) {
              subBuilder.MergeFrom(Filter);
            }
            input.ReadMessage(subBuilder);
            Filter = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Analytics.Data.V1Alpha.FilterExpressionList subBuilder = new global::Google.Analytics.Data.V1Alpha.FilterExpressionList();
            if (exprCase_ == ExprOneofCase.AndGroup) {
              subBuilder.MergeFrom(AndGroup);
            }
            input.ReadMessage(subBuilder);
            AndGroup = subBuilder;
            break;
          }
          case 18: {
            global::Google.Analytics.Data.V1Alpha.FilterExpressionList subBuilder = new global::Google.Analytics.Data.V1Alpha.FilterExpressionList();
            if (exprCase_ == ExprOneofCase.OrGroup) {
              subBuilder.MergeFrom(OrGroup);
            }
            input.ReadMessage(subBuilder);
            OrGroup = subBuilder;
            break;
          }
          case 26: {
            global::Google.Analytics.Data.V1Alpha.FilterExpression subBuilder = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            if (exprCase_ == ExprOneofCase.NotExpression) {
              subBuilder.MergeFrom(NotExpression);
            }
            input.ReadMessage(subBuilder);
            NotExpression = subBuilder;
            break;
          }
          case 34: {
            global::Google.Analytics.Data.V1Alpha.Filter subBuilder = new global::Google.Analytics.Data.V1Alpha.Filter();
            if (exprCase_ == ExprOneofCase.Filter) {
              subBuilder.MergeFrom(Filter);
            }
            input.ReadMessage(subBuilder);
            Filter = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A list of filter expressions.
  /// </summary>
  public sealed partial class FilterExpressionList : pb::IMessage<FilterExpressionList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FilterExpressionList> _parser = new pb::MessageParser<FilterExpressionList>(() => new FilterExpressionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilterExpressionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterExpressionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterExpressionList(FilterExpressionList other) : this() {
      expressions_ = other.expressions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterExpressionList Clone() {
      return new FilterExpressionList(this);
    }

    /// <summary>Field number for the "expressions" field.</summary>
    public const int ExpressionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.FilterExpression> _repeated_expressions_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Analytics.Data.V1Alpha.FilterExpression.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.FilterExpression> expressions_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.FilterExpression>();
    /// <summary>
    /// A list of filter expressions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.FilterExpression> Expressions {
      get { return expressions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilterExpressionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilterExpressionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!expressions_.Equals(other.expressions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= expressions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      expressions_.WriteTo(output, _repeated_expressions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      expressions_.WriteTo(ref output, _repeated_expressions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += expressions_.CalculateSize(_repeated_expressions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilterExpressionList other) {
      if (other == null) {
        return;
      }
      expressions_.Add(other.expressions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            expressions_.AddEntriesFrom(input, _repeated_expressions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            expressions_.AddEntriesFrom(ref input, _repeated_expressions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An expression to filter dimension or metric values.
  /// </summary>
  public sealed partial class Filter : pb::IMessage<Filter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Filter> _parser = new pb::MessageParser<Filter>(() => new Filter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Filter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter(Filter other) : this() {
      fieldName_ = other.fieldName_;
      switch (other.OneFilterCase) {
        case OneFilterOneofCase.NullFilter:
          NullFilter = other.NullFilter;
          break;
        case OneFilterOneofCase.StringFilter:
          StringFilter = other.StringFilter.Clone();
          break;
        case OneFilterOneofCase.InListFilter:
          InListFilter = other.InListFilter.Clone();
          break;
        case OneFilterOneofCase.NumericFilter:
          NumericFilter = other.NumericFilter.Clone();
          break;
        case OneFilterOneofCase.BetweenFilter:
          BetweenFilter = other.BetweenFilter.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter Clone() {
      return new Filter(this);
    }

    /// <summary>Field number for the "field_name" field.</summary>
    public const int FieldNameFieldNumber = 1;
    private string fieldName_ = "";
    /// <summary>
    /// The dimension name or metric name. Must be a name defined in dimensions
    /// or metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "null_filter" field.</summary>
    public const int NullFilterFieldNumber = 2;
    /// <summary>
    /// A filter for null values. If True, a null dimension value is matched by
    /// this filter. Null filter is commonly used inside a NOT filter
    /// expression. For example, a NOT expression of a null filter removes rows
    /// when a dimension is null.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NullFilter {
      get { return oneFilterCase_ == OneFilterOneofCase.NullFilter ? (bool) oneFilter_ : false; }
      set {
        oneFilter_ = value;
        oneFilterCase_ = OneFilterOneofCase.NullFilter;
      }
    }

    /// <summary>Field number for the "string_filter" field.</summary>
    public const int StringFilterFieldNumber = 3;
    /// <summary>
    /// Strings related filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter StringFilter {
      get { return oneFilterCase_ == OneFilterOneofCase.StringFilter ? (global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter) oneFilter_ : null; }
      set {
        oneFilter_ = value;
        oneFilterCase_ = value == null ? OneFilterOneofCase.None : OneFilterOneofCase.StringFilter;
      }
    }

    /// <summary>Field number for the "in_list_filter" field.</summary>
    public const int InListFilterFieldNumber = 4;
    /// <summary>
    /// A filter for in list values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.Filter.Types.InListFilter InListFilter {
      get { return oneFilterCase_ == OneFilterOneofCase.InListFilter ? (global::Google.Analytics.Data.V1Alpha.Filter.Types.InListFilter) oneFilter_ : null; }
      set {
        oneFilter_ = value;
        oneFilterCase_ = value == null ? OneFilterOneofCase.None : OneFilterOneofCase.InListFilter;
      }
    }

    /// <summary>Field number for the "numeric_filter" field.</summary>
    public const int NumericFilterFieldNumber = 5;
    /// <summary>
    /// A filter for numeric or date values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter NumericFilter {
      get { return oneFilterCase_ == OneFilterOneofCase.NumericFilter ? (global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter) oneFilter_ : null; }
      set {
        oneFilter_ = value;
        oneFilterCase_ = value == null ? OneFilterOneofCase.None : OneFilterOneofCase.NumericFilter;
      }
    }

    /// <summary>Field number for the "between_filter" field.</summary>
    public const int BetweenFilterFieldNumber = 6;
    /// <summary>
    /// A filter for two values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.Filter.Types.BetweenFilter BetweenFilter {
      get { return oneFilterCase_ == OneFilterOneofCase.BetweenFilter ? (global::Google.Analytics.Data.V1Alpha.Filter.Types.BetweenFilter) oneFilter_ : null; }
      set {
        oneFilter_ = value;
        oneFilterCase_ = value == null ? OneFilterOneofCase.None : OneFilterOneofCase.BetweenFilter;
      }
    }

    private object oneFilter_;
    /// <summary>Enum of possible cases for the "one_filter" oneof.</summary>
    public enum OneFilterOneofCase {
      None = 0,
      NullFilter = 2,
      StringFilter = 3,
      InListFilter = 4,
      NumericFilter = 5,
      BetweenFilter = 6,
    }
    private OneFilterOneofCase oneFilterCase_ = OneFilterOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneFilterOneofCase OneFilterCase {
      get { return oneFilterCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneFilter() {
      oneFilterCase_ = OneFilterOneofCase.None;
      oneFilter_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Filter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Filter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldName != other.FieldName) return false;
      if (NullFilter != other.NullFilter) return false;
      if (!object.Equals(StringFilter, other.StringFilter)) return false;
      if (!object.Equals(InListFilter, other.InListFilter)) return false;
      if (!object.Equals(NumericFilter, other.NumericFilter)) return false;
      if (!object.Equals(BetweenFilter, other.BetweenFilter)) return false;
      if (OneFilterCase != other.OneFilterCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (oneFilterCase_ == OneFilterOneofCase.NullFilter) hash ^= NullFilter.GetHashCode();
      if (oneFilterCase_ == OneFilterOneofCase.StringFilter) hash ^= StringFilter.GetHashCode();
      if (oneFilterCase_ == OneFilterOneofCase.InListFilter) hash ^= InListFilter.GetHashCode();
      if (oneFilterCase_ == OneFilterOneofCase.NumericFilter) hash ^= NumericFilter.GetHashCode();
      if (oneFilterCase_ == OneFilterOneofCase.BetweenFilter) hash ^= BetweenFilter.GetHashCode();
      hash ^= (int) oneFilterCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FieldName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldName);
      }
      if (oneFilterCase_ == OneFilterOneofCase.NullFilter) {
        output.WriteRawTag(16);
        output.WriteBool(NullFilter);
      }
      if (oneFilterCase_ == OneFilterOneofCase.StringFilter) {
        output.WriteRawTag(26);
        output.WriteMessage(StringFilter);
      }
      if (oneFilterCase_ == OneFilterOneofCase.InListFilter) {
        output.WriteRawTag(34);
        output.WriteMessage(InListFilter);
      }
      if (oneFilterCase_ == OneFilterOneofCase.NumericFilter) {
        output.WriteRawTag(42);
        output.WriteMessage(NumericFilter);
      }
      if (oneFilterCase_ == OneFilterOneofCase.BetweenFilter) {
        output.WriteRawTag(50);
        output.WriteMessage(BetweenFilter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FieldName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldName);
      }
      if (oneFilterCase_ == OneFilterOneofCase.NullFilter) {
        output.WriteRawTag(16);
        output.WriteBool(NullFilter);
      }
      if (oneFilterCase_ == OneFilterOneofCase.StringFilter) {
        output.WriteRawTag(26);
        output.WriteMessage(StringFilter);
      }
      if (oneFilterCase_ == OneFilterOneofCase.InListFilter) {
        output.WriteRawTag(34);
        output.WriteMessage(InListFilter);
      }
      if (oneFilterCase_ == OneFilterOneofCase.NumericFilter) {
        output.WriteRawTag(42);
        output.WriteMessage(NumericFilter);
      }
      if (oneFilterCase_ == OneFilterOneofCase.BetweenFilter) {
        output.WriteRawTag(50);
        output.WriteMessage(BetweenFilter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (oneFilterCase_ == OneFilterOneofCase.NullFilter) {
        size += 1 + 1;
      }
      if (oneFilterCase_ == OneFilterOneofCase.StringFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StringFilter);
      }
      if (oneFilterCase_ == OneFilterOneofCase.InListFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InListFilter);
      }
      if (oneFilterCase_ == OneFilterOneofCase.NumericFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NumericFilter);
      }
      if (oneFilterCase_ == OneFilterOneofCase.BetweenFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BetweenFilter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Filter other) {
      if (other == null) {
        return;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      switch (other.OneFilterCase) {
        case OneFilterOneofCase.NullFilter:
          NullFilter = other.NullFilter;
          break;
        case OneFilterOneofCase.StringFilter:
          if (StringFilter == null) {
            StringFilter = new global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter();
          }
          StringFilter.MergeFrom(other.StringFilter);
          break;
        case OneFilterOneofCase.InListFilter:
          if (InListFilter == null) {
            InListFilter = new global::Google.Analytics.Data.V1Alpha.Filter.Types.InListFilter();
          }
          InListFilter.MergeFrom(other.InListFilter);
          break;
        case OneFilterOneofCase.NumericFilter:
          if (NumericFilter == null) {
            NumericFilter = new global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter();
          }
          NumericFilter.MergeFrom(other.NumericFilter);
          break;
        case OneFilterOneofCase.BetweenFilter:
          if (BetweenFilter == null) {
            BetweenFilter = new global::Google.Analytics.Data.V1Alpha.Filter.Types.BetweenFilter();
          }
          BetweenFilter.MergeFrom(other.BetweenFilter);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldName = input.ReadString();
            break;
          }
          case 16: {
            NullFilter = input.ReadBool();
            break;
          }
          case 26: {
            global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter subBuilder = new global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter();
            if (oneFilterCase_ == OneFilterOneofCase.StringFilter) {
              subBuilder.MergeFrom(StringFilter);
            }
            input.ReadMessage(subBuilder);
            StringFilter = subBuilder;
            break;
          }
          case 34: {
            global::Google.Analytics.Data.V1Alpha.Filter.Types.InListFilter subBuilder = new global::Google.Analytics.Data.V1Alpha.Filter.Types.InListFilter();
            if (oneFilterCase_ == OneFilterOneofCase.InListFilter) {
              subBuilder.MergeFrom(InListFilter);
            }
            input.ReadMessage(subBuilder);
            InListFilter = subBuilder;
            break;
          }
          case 42: {
            global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter subBuilder = new global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter();
            if (oneFilterCase_ == OneFilterOneofCase.NumericFilter) {
              subBuilder.MergeFrom(NumericFilter);
            }
            input.ReadMessage(subBuilder);
            NumericFilter = subBuilder;
            break;
          }
          case 50: {
            global::Google.Analytics.Data.V1Alpha.Filter.Types.BetweenFilter subBuilder = new global::Google.Analytics.Data.V1Alpha.Filter.Types.BetweenFilter();
            if (oneFilterCase_ == OneFilterOneofCase.BetweenFilter) {
              subBuilder.MergeFrom(BetweenFilter);
            }
            input.ReadMessage(subBuilder);
            BetweenFilter = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FieldName = input.ReadString();
            break;
          }
          case 16: {
            NullFilter = input.ReadBool();
            break;
          }
          case 26: {
            global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter subBuilder = new global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter();
            if (oneFilterCase_ == OneFilterOneofCase.StringFilter) {
              subBuilder.MergeFrom(StringFilter);
            }
            input.ReadMessage(subBuilder);
            StringFilter = subBuilder;
            break;
          }
          case 34: {
            global::Google.Analytics.Data.V1Alpha.Filter.Types.InListFilter subBuilder = new global::Google.Analytics.Data.V1Alpha.Filter.Types.InListFilter();
            if (oneFilterCase_ == OneFilterOneofCase.InListFilter) {
              subBuilder.MergeFrom(InListFilter);
            }
            input.ReadMessage(subBuilder);
            InListFilter = subBuilder;
            break;
          }
          case 42: {
            global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter subBuilder = new global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter();
            if (oneFilterCase_ == OneFilterOneofCase.NumericFilter) {
              subBuilder.MergeFrom(NumericFilter);
            }
            input.ReadMessage(subBuilder);
            NumericFilter = subBuilder;
            break;
          }
          case 50: {
            global::Google.Analytics.Data.V1Alpha.Filter.Types.BetweenFilter subBuilder = new global::Google.Analytics.Data.V1Alpha.Filter.Types.BetweenFilter();
            if (oneFilterCase_ == OneFilterOneofCase.BetweenFilter) {
              subBuilder.MergeFrom(BetweenFilter);
            }
            input.ReadMessage(subBuilder);
            BetweenFilter = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Filter message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The filter for string
      /// </summary>
      public sealed partial class StringFilter : pb::IMessage<StringFilter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<StringFilter> _parser = new pb::MessageParser<StringFilter>(() => new StringFilter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StringFilter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Analytics.Data.V1Alpha.Filter.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringFilter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringFilter(StringFilter other) : this() {
          matchType_ = other.matchType_;
          value_ = other.value_;
          caseSensitive_ = other.caseSensitive_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringFilter Clone() {
          return new StringFilter(this);
        }

        /// <summary>Field number for the "match_type" field.</summary>
        public const int MatchTypeFieldNumber = 1;
        private global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter.Types.MatchType matchType_ = global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter.Types.MatchType.Unspecified;
        /// <summary>
        /// The match type for this filter.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter.Types.MatchType MatchType {
          get { return matchType_; }
          set {
            matchType_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private string value_ = "";
        /// <summary>
        /// The string value used for the matching.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "case_sensitive" field.</summary>
        public const int CaseSensitiveFieldNumber = 3;
        private bool caseSensitive_;
        /// <summary>
        /// If true, the string value is case sensitive.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool CaseSensitive {
          get { return caseSensitive_; }
          set {
            caseSensitive_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StringFilter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StringFilter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MatchType != other.MatchType) return false;
          if (Value != other.Value) return false;
          if (CaseSensitive != other.CaseSensitive) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MatchType != global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter.Types.MatchType.Unspecified) hash ^= MatchType.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (CaseSensitive != false) hash ^= CaseSensitive.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MatchType != global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter.Types.MatchType.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) MatchType);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Value);
          }
          if (CaseSensitive != false) {
            output.WriteRawTag(24);
            output.WriteBool(CaseSensitive);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MatchType != global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter.Types.MatchType.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) MatchType);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Value);
          }
          if (CaseSensitive != false) {
            output.WriteRawTag(24);
            output.WriteBool(CaseSensitive);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MatchType != global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter.Types.MatchType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchType);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (CaseSensitive != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StringFilter other) {
          if (other == null) {
            return;
          }
          if (other.MatchType != global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter.Types.MatchType.Unspecified) {
            MatchType = other.MatchType;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          if (other.CaseSensitive != false) {
            CaseSensitive = other.CaseSensitive;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MatchType = (global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter.Types.MatchType) input.ReadEnum();
                break;
              }
              case 18: {
                Value = input.ReadString();
                break;
              }
              case 24: {
                CaseSensitive = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                MatchType = (global::Google.Analytics.Data.V1Alpha.Filter.Types.StringFilter.Types.MatchType) input.ReadEnum();
                break;
              }
              case 18: {
                Value = input.ReadString();
                break;
              }
              case 24: {
                CaseSensitive = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the StringFilter message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// The match type of a string filter
          /// </summary>
          public enum MatchType {
            /// <summary>
            /// Unspecified
            /// </summary>
            [pbr::OriginalName("MATCH_TYPE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// Exact match of the string value.
            /// </summary>
            [pbr::OriginalName("EXACT")] Exact = 1,
            /// <summary>
            /// Begins with the string value.
            /// </summary>
            [pbr::OriginalName("BEGINS_WITH")] BeginsWith = 2,
            /// <summary>
            /// Ends with the string value.
            /// </summary>
            [pbr::OriginalName("ENDS_WITH")] EndsWith = 3,
            /// <summary>
            /// Contains the string value.
            /// </summary>
            [pbr::OriginalName("CONTAINS")] Contains = 4,
            /// <summary>
            /// Full regular expression match with the string value.
            /// </summary>
            [pbr::OriginalName("FULL_REGEXP")] FullRegexp = 5,
            /// <summary>
            /// Partial regular expression match with the string value.
            /// </summary>
            [pbr::OriginalName("PARTIAL_REGEXP")] PartialRegexp = 6,
          }

        }
        #endregion

      }

      /// <summary>
      /// The result needs to be in a list of string values.
      /// </summary>
      public sealed partial class InListFilter : pb::IMessage<InListFilter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InListFilter> _parser = new pb::MessageParser<InListFilter>(() => new InListFilter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InListFilter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Analytics.Data.V1Alpha.Filter.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InListFilter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InListFilter(InListFilter other) : this() {
          values_ = other.values_.Clone();
          caseSensitive_ = other.caseSensitive_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InListFilter Clone() {
          return new InListFilter(this);
        }

        /// <summary>Field number for the "values" field.</summary>
        public const int ValuesFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_values_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> values_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// The list of string values.
        /// Must be non-empty.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Values {
          get { return values_; }
        }

        /// <summary>Field number for the "case_sensitive" field.</summary>
        public const int CaseSensitiveFieldNumber = 2;
        private bool caseSensitive_;
        /// <summary>
        /// If true, the string value is case sensitive.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool CaseSensitive {
          get { return caseSensitive_; }
          set {
            caseSensitive_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InListFilter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InListFilter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!values_.Equals(other.values_)) return false;
          if (CaseSensitive != other.CaseSensitive) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= values_.GetHashCode();
          if (CaseSensitive != false) hash ^= CaseSensitive.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          values_.WriteTo(output, _repeated_values_codec);
          if (CaseSensitive != false) {
            output.WriteRawTag(16);
            output.WriteBool(CaseSensitive);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          values_.WriteTo(ref output, _repeated_values_codec);
          if (CaseSensitive != false) {
            output.WriteRawTag(16);
            output.WriteBool(CaseSensitive);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += values_.CalculateSize(_repeated_values_codec);
          if (CaseSensitive != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InListFilter other) {
          if (other == null) {
            return;
          }
          values_.Add(other.values_);
          if (other.CaseSensitive != false) {
            CaseSensitive = other.CaseSensitive;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                values_.AddEntriesFrom(input, _repeated_values_codec);
                break;
              }
              case 16: {
                CaseSensitive = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                values_.AddEntriesFrom(ref input, _repeated_values_codec);
                break;
              }
              case 16: {
                CaseSensitive = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Filters for numeric or date values.
      /// </summary>
      public sealed partial class NumericFilter : pb::IMessage<NumericFilter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NumericFilter> _parser = new pb::MessageParser<NumericFilter>(() => new NumericFilter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NumericFilter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Analytics.Data.V1Alpha.Filter.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NumericFilter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NumericFilter(NumericFilter other) : this() {
          operation_ = other.operation_;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NumericFilter Clone() {
          return new NumericFilter(this);
        }

        /// <summary>Field number for the "operation" field.</summary>
        public const int OperationFieldNumber = 1;
        private global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter.Types.Operation operation_ = global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter.Types.Operation.Unspecified;
        /// <summary>
        /// The operation type for this filter.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter.Types.Operation Operation {
          get { return operation_; }
          set {
            operation_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::Google.Analytics.Data.V1Alpha.NumericValue value_;
        /// <summary>
        /// A numeric value or a date value.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Analytics.Data.V1Alpha.NumericValue Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NumericFilter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NumericFilter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Operation != other.Operation) return false;
          if (!object.Equals(Value, other.Value)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Operation != global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter.Types.Operation.Unspecified) hash ^= Operation.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Operation != global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter.Types.Operation.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Operation);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Operation != global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter.Types.Operation.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Operation);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Operation != global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter.Types.Operation.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
          }
          if (value_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NumericFilter other) {
          if (other == null) {
            return;
          }
          if (other.Operation != global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter.Types.Operation.Unspecified) {
            Operation = other.Operation;
          }
          if (other.value_ != null) {
            if (value_ == null) {
              Value = new global::Google.Analytics.Data.V1Alpha.NumericValue();
            }
            Value.MergeFrom(other.Value);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Operation = (global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter.Types.Operation) input.ReadEnum();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Google.Analytics.Data.V1Alpha.NumericValue();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Operation = (global::Google.Analytics.Data.V1Alpha.Filter.Types.NumericFilter.Types.Operation) input.ReadEnum();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Google.Analytics.Data.V1Alpha.NumericValue();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the NumericFilter message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// The operation applied to a numeric filter
          /// </summary>
          public enum Operation {
            /// <summary>
            /// Unspecified.
            /// </summary>
            [pbr::OriginalName("OPERATION_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// Equal
            /// </summary>
            [pbr::OriginalName("EQUAL")] Equal = 1,
            /// <summary>
            /// Less than
            /// </summary>
            [pbr::OriginalName("LESS_THAN")] LessThan = 2,
            /// <summary>
            /// Less than or equal
            /// </summary>
            [pbr::OriginalName("LESS_THAN_OR_EQUAL")] LessThanOrEqual = 3,
            /// <summary>
            /// Greater than
            /// </summary>
            [pbr::OriginalName("GREATER_THAN")] GreaterThan = 4,
            /// <summary>
            /// Greater than or equal
            /// </summary>
            [pbr::OriginalName("GREATER_THAN_OR_EQUAL")] GreaterThanOrEqual = 5,
          }

        }
        #endregion

      }

      /// <summary>
      /// To express that the result needs to be between two numbers (inclusive).
      /// </summary>
      public sealed partial class BetweenFilter : pb::IMessage<BetweenFilter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<BetweenFilter> _parser = new pb::MessageParser<BetweenFilter>(() => new BetweenFilter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BetweenFilter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Analytics.Data.V1Alpha.Filter.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BetweenFilter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BetweenFilter(BetweenFilter other) : this() {
          fromValue_ = other.fromValue_ != null ? other.fromValue_.Clone() : null;
          toValue_ = other.toValue_ != null ? other.toValue_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BetweenFilter Clone() {
          return new BetweenFilter(this);
        }

        /// <summary>Field number for the "from_value" field.</summary>
        public const int FromValueFieldNumber = 1;
        private global::Google.Analytics.Data.V1Alpha.NumericValue fromValue_;
        /// <summary>
        /// Begins with this number.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Analytics.Data.V1Alpha.NumericValue FromValue {
          get { return fromValue_; }
          set {
            fromValue_ = value;
          }
        }

        /// <summary>Field number for the "to_value" field.</summary>
        public const int ToValueFieldNumber = 2;
        private global::Google.Analytics.Data.V1Alpha.NumericValue toValue_;
        /// <summary>
        /// Ends with this number.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Analytics.Data.V1Alpha.NumericValue ToValue {
          get { return toValue_; }
          set {
            toValue_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BetweenFilter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BetweenFilter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(FromValue, other.FromValue)) return false;
          if (!object.Equals(ToValue, other.ToValue)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (fromValue_ != null) hash ^= FromValue.GetHashCode();
          if (toValue_ != null) hash ^= ToValue.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (fromValue_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(FromValue);
          }
          if (toValue_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ToValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (fromValue_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(FromValue);
          }
          if (toValue_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(ToValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (fromValue_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromValue);
          }
          if (toValue_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToValue);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BetweenFilter other) {
          if (other == null) {
            return;
          }
          if (other.fromValue_ != null) {
            if (fromValue_ == null) {
              FromValue = new global::Google.Analytics.Data.V1Alpha.NumericValue();
            }
            FromValue.MergeFrom(other.FromValue);
          }
          if (other.toValue_ != null) {
            if (toValue_ == null) {
              ToValue = new global::Google.Analytics.Data.V1Alpha.NumericValue();
            }
            ToValue.MergeFrom(other.ToValue);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (fromValue_ == null) {
                  FromValue = new global::Google.Analytics.Data.V1Alpha.NumericValue();
                }
                input.ReadMessage(FromValue);
                break;
              }
              case 18: {
                if (toValue_ == null) {
                  ToValue = new global::Google.Analytics.Data.V1Alpha.NumericValue();
                }
                input.ReadMessage(ToValue);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (fromValue_ == null) {
                  FromValue = new global::Google.Analytics.Data.V1Alpha.NumericValue();
                }
                input.ReadMessage(FromValue);
                break;
              }
              case 18: {
                if (toValue_ == null) {
                  ToValue = new global::Google.Analytics.Data.V1Alpha.NumericValue();
                }
                input.ReadMessage(ToValue);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// The sort options.
  /// </summary>
  public sealed partial class OrderBy : pb::IMessage<OrderBy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderBy> _parser = new pb::MessageParser<OrderBy>(() => new OrderBy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderBy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBy(OrderBy other) : this() {
      desc_ = other.desc_;
      switch (other.OneOrderByCase) {
        case OneOrderByOneofCase.Metric:
          Metric = other.Metric.Clone();
          break;
        case OneOrderByOneofCase.Dimension:
          Dimension = other.Dimension.Clone();
          break;
        case OneOrderByOneofCase.Pivot:
          Pivot = other.Pivot.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBy Clone() {
      return new OrderBy(this);
    }

    /// <summary>Field number for the "metric" field.</summary>
    public const int MetricFieldNumber = 1;
    /// <summary>
    /// Sorts results by a metric's values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.OrderBy.Types.MetricOrderBy Metric {
      get { return oneOrderByCase_ == OneOrderByOneofCase.Metric ? (global::Google.Analytics.Data.V1Alpha.OrderBy.Types.MetricOrderBy) oneOrderBy_ : null; }
      set {
        oneOrderBy_ = value;
        oneOrderByCase_ = value == null ? OneOrderByOneofCase.None : OneOrderByOneofCase.Metric;
      }
    }

    /// <summary>Field number for the "dimension" field.</summary>
    public const int DimensionFieldNumber = 2;
    /// <summary>
    /// Sorts results by a dimension's values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy Dimension {
      get { return oneOrderByCase_ == OneOrderByOneofCase.Dimension ? (global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy) oneOrderBy_ : null; }
      set {
        oneOrderBy_ = value;
        oneOrderByCase_ = value == null ? OneOrderByOneofCase.None : OneOrderByOneofCase.Dimension;
      }
    }

    /// <summary>Field number for the "pivot" field.</summary>
    public const int PivotFieldNumber = 3;
    /// <summary>
    /// Sorts results by a metric's values within a pivot column group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy Pivot {
      get { return oneOrderByCase_ == OneOrderByOneofCase.Pivot ? (global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy) oneOrderBy_ : null; }
      set {
        oneOrderBy_ = value;
        oneOrderByCase_ = value == null ? OneOrderByOneofCase.None : OneOrderByOneofCase.Pivot;
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 4;
    private bool desc_;
    /// <summary>
    /// If true, sorts by descending order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Desc {
      get { return desc_; }
      set {
        desc_ = value;
      }
    }

    private object oneOrderBy_;
    /// <summary>Enum of possible cases for the "one_order_by" oneof.</summary>
    public enum OneOrderByOneofCase {
      None = 0,
      Metric = 1,
      Dimension = 2,
      Pivot = 3,
    }
    private OneOrderByOneofCase oneOrderByCase_ = OneOrderByOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneOrderByOneofCase OneOrderByCase {
      get { return oneOrderByCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneOrderBy() {
      oneOrderByCase_ = OneOrderByOneofCase.None;
      oneOrderBy_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderBy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderBy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metric, other.Metric)) return false;
      if (!object.Equals(Dimension, other.Dimension)) return false;
      if (!object.Equals(Pivot, other.Pivot)) return false;
      if (Desc != other.Desc) return false;
      if (OneOrderByCase != other.OneOrderByCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oneOrderByCase_ == OneOrderByOneofCase.Metric) hash ^= Metric.GetHashCode();
      if (oneOrderByCase_ == OneOrderByOneofCase.Dimension) hash ^= Dimension.GetHashCode();
      if (oneOrderByCase_ == OneOrderByOneofCase.Pivot) hash ^= Pivot.GetHashCode();
      if (Desc != false) hash ^= Desc.GetHashCode();
      hash ^= (int) oneOrderByCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (oneOrderByCase_ == OneOrderByOneofCase.Metric) {
        output.WriteRawTag(10);
        output.WriteMessage(Metric);
      }
      if (oneOrderByCase_ == OneOrderByOneofCase.Dimension) {
        output.WriteRawTag(18);
        output.WriteMessage(Dimension);
      }
      if (oneOrderByCase_ == OneOrderByOneofCase.Pivot) {
        output.WriteRawTag(26);
        output.WriteMessage(Pivot);
      }
      if (Desc != false) {
        output.WriteRawTag(32);
        output.WriteBool(Desc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (oneOrderByCase_ == OneOrderByOneofCase.Metric) {
        output.WriteRawTag(10);
        output.WriteMessage(Metric);
      }
      if (oneOrderByCase_ == OneOrderByOneofCase.Dimension) {
        output.WriteRawTag(18);
        output.WriteMessage(Dimension);
      }
      if (oneOrderByCase_ == OneOrderByOneofCase.Pivot) {
        output.WriteRawTag(26);
        output.WriteMessage(Pivot);
      }
      if (Desc != false) {
        output.WriteRawTag(32);
        output.WriteBool(Desc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oneOrderByCase_ == OneOrderByOneofCase.Metric) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metric);
      }
      if (oneOrderByCase_ == OneOrderByOneofCase.Dimension) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dimension);
      }
      if (oneOrderByCase_ == OneOrderByOneofCase.Pivot) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pivot);
      }
      if (Desc != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderBy other) {
      if (other == null) {
        return;
      }
      if (other.Desc != false) {
        Desc = other.Desc;
      }
      switch (other.OneOrderByCase) {
        case OneOrderByOneofCase.Metric:
          if (Metric == null) {
            Metric = new global::Google.Analytics.Data.V1Alpha.OrderBy.Types.MetricOrderBy();
          }
          Metric.MergeFrom(other.Metric);
          break;
        case OneOrderByOneofCase.Dimension:
          if (Dimension == null) {
            Dimension = new global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy();
          }
          Dimension.MergeFrom(other.Dimension);
          break;
        case OneOrderByOneofCase.Pivot:
          if (Pivot == null) {
            Pivot = new global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy();
          }
          Pivot.MergeFrom(other.Pivot);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Analytics.Data.V1Alpha.OrderBy.Types.MetricOrderBy subBuilder = new global::Google.Analytics.Data.V1Alpha.OrderBy.Types.MetricOrderBy();
            if (oneOrderByCase_ == OneOrderByOneofCase.Metric) {
              subBuilder.MergeFrom(Metric);
            }
            input.ReadMessage(subBuilder);
            Metric = subBuilder;
            break;
          }
          case 18: {
            global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy subBuilder = new global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy();
            if (oneOrderByCase_ == OneOrderByOneofCase.Dimension) {
              subBuilder.MergeFrom(Dimension);
            }
            input.ReadMessage(subBuilder);
            Dimension = subBuilder;
            break;
          }
          case 26: {
            global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy subBuilder = new global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy();
            if (oneOrderByCase_ == OneOrderByOneofCase.Pivot) {
              subBuilder.MergeFrom(Pivot);
            }
            input.ReadMessage(subBuilder);
            Pivot = subBuilder;
            break;
          }
          case 32: {
            Desc = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Analytics.Data.V1Alpha.OrderBy.Types.MetricOrderBy subBuilder = new global::Google.Analytics.Data.V1Alpha.OrderBy.Types.MetricOrderBy();
            if (oneOrderByCase_ == OneOrderByOneofCase.Metric) {
              subBuilder.MergeFrom(Metric);
            }
            input.ReadMessage(subBuilder);
            Metric = subBuilder;
            break;
          }
          case 18: {
            global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy subBuilder = new global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy();
            if (oneOrderByCase_ == OneOrderByOneofCase.Dimension) {
              subBuilder.MergeFrom(Dimension);
            }
            input.ReadMessage(subBuilder);
            Dimension = subBuilder;
            break;
          }
          case 26: {
            global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy subBuilder = new global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy();
            if (oneOrderByCase_ == OneOrderByOneofCase.Pivot) {
              subBuilder.MergeFrom(Pivot);
            }
            input.ReadMessage(subBuilder);
            Pivot = subBuilder;
            break;
          }
          case 32: {
            Desc = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OrderBy message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Sorts by metric values.
      /// </summary>
      public sealed partial class MetricOrderBy : pb::IMessage<MetricOrderBy>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MetricOrderBy> _parser = new pb::MessageParser<MetricOrderBy>(() => new MetricOrderBy());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MetricOrderBy> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Analytics.Data.V1Alpha.OrderBy.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetricOrderBy() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetricOrderBy(MetricOrderBy other) : this() {
          metricName_ = other.metricName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetricOrderBy Clone() {
          return new MetricOrderBy(this);
        }

        /// <summary>Field number for the "metric_name" field.</summary>
        public const int MetricNameFieldNumber = 1;
        private string metricName_ = "";
        /// <summary>
        /// A metric name in the request to order by.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MetricName {
          get { return metricName_; }
          set {
            metricName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MetricOrderBy);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MetricOrderBy other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MetricName != other.MetricName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MetricName.Length != 0) hash ^= MetricName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MetricName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MetricName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MetricName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MetricName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MetricName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MetricName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MetricOrderBy other) {
          if (other == null) {
            return;
          }
          if (other.MetricName.Length != 0) {
            MetricName = other.MetricName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MetricName = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                MetricName = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Sorts by dimension values.
      /// </summary>
      public sealed partial class DimensionOrderBy : pb::IMessage<DimensionOrderBy>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DimensionOrderBy> _parser = new pb::MessageParser<DimensionOrderBy>(() => new DimensionOrderBy());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DimensionOrderBy> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Analytics.Data.V1Alpha.OrderBy.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DimensionOrderBy() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DimensionOrderBy(DimensionOrderBy other) : this() {
          dimensionName_ = other.dimensionName_;
          orderType_ = other.orderType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DimensionOrderBy Clone() {
          return new DimensionOrderBy(this);
        }

        /// <summary>Field number for the "dimension_name" field.</summary>
        public const int DimensionNameFieldNumber = 1;
        private string dimensionName_ = "";
        /// <summary>
        /// A dimension name in the request to order by.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DimensionName {
          get { return dimensionName_; }
          set {
            dimensionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "order_type" field.</summary>
        public const int OrderTypeFieldNumber = 2;
        private global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy.Types.OrderType orderType_ = global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy.Types.OrderType.Unspecified;
        /// <summary>
        /// Controls the rule for dimension value ordering.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy.Types.OrderType OrderType {
          get { return orderType_; }
          set {
            orderType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DimensionOrderBy);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DimensionOrderBy other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DimensionName != other.DimensionName) return false;
          if (OrderType != other.OrderType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DimensionName.Length != 0) hash ^= DimensionName.GetHashCode();
          if (OrderType != global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy.Types.OrderType.Unspecified) hash ^= OrderType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (DimensionName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DimensionName);
          }
          if (OrderType != global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy.Types.OrderType.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) OrderType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (DimensionName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DimensionName);
          }
          if (OrderType != global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy.Types.OrderType.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) OrderType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DimensionName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DimensionName);
          }
          if (OrderType != global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy.Types.OrderType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DimensionOrderBy other) {
          if (other == null) {
            return;
          }
          if (other.DimensionName.Length != 0) {
            DimensionName = other.DimensionName;
          }
          if (other.OrderType != global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy.Types.OrderType.Unspecified) {
            OrderType = other.OrderType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DimensionName = input.ReadString();
                break;
              }
              case 16: {
                OrderType = (global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy.Types.OrderType) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                DimensionName = input.ReadString();
                break;
              }
              case 16: {
                OrderType = (global::Google.Analytics.Data.V1Alpha.OrderBy.Types.DimensionOrderBy.Types.OrderType) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the DimensionOrderBy message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Rule to order the string dimension values by.
          /// </summary>
          public enum OrderType {
            /// <summary>
            /// Unspecified.
            /// </summary>
            [pbr::OriginalName("ORDER_TYPE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// Alphanumeric sort by Unicode code point. For example, "2" &lt; "A" &lt; "X" &lt;
            /// "b" &lt; "z".
            /// </summary>
            [pbr::OriginalName("ALPHANUMERIC")] Alphanumeric = 1,
            /// <summary>
            /// Case insensitive alphanumeric sort by lower case Unicode code point.
            /// For example, "2" &lt; "A" &lt; "b" &lt; "X" &lt; "z".
            /// </summary>
            [pbr::OriginalName("CASE_INSENSITIVE_ALPHANUMERIC")] CaseInsensitiveAlphanumeric = 2,
            /// <summary>
            /// Dimension values are converted to numbers before sorting. For example
            /// in NUMERIC sort, "25" &lt; "100", and in `ALPHANUMERIC` sort, "100" &lt;
            /// "25". Non-numeric dimension values all have equal ordering value below
            /// all numeric values.
            /// </summary>
            [pbr::OriginalName("NUMERIC")] Numeric = 3,
          }

        }
        #endregion

      }

      /// <summary>
      /// Sorts by a pivot column group.
      /// </summary>
      public sealed partial class PivotOrderBy : pb::IMessage<PivotOrderBy>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PivotOrderBy> _parser = new pb::MessageParser<PivotOrderBy>(() => new PivotOrderBy());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PivotOrderBy> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Analytics.Data.V1Alpha.OrderBy.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PivotOrderBy() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PivotOrderBy(PivotOrderBy other) : this() {
          metricName_ = other.metricName_;
          pivotSelections_ = other.pivotSelections_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PivotOrderBy Clone() {
          return new PivotOrderBy(this);
        }

        /// <summary>Field number for the "metric_name" field.</summary>
        public const int MetricNameFieldNumber = 1;
        private string metricName_ = "";
        /// <summary>
        /// In the response to order by, order rows by this column. Must be a metric
        /// name from the request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MetricName {
          get { return metricName_; }
          set {
            metricName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pivot_selections" field.</summary>
        public const int PivotSelectionsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy.Types.PivotSelection> _repeated_pivotSelections_codec
            = pb::FieldCodec.ForMessage(18, global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy.Types.PivotSelection.Parser);
        private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy.Types.PivotSelection> pivotSelections_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy.Types.PivotSelection>();
        /// <summary>
        /// Used to select a dimension name and value pivot. If multiple pivot
        /// selections are given, the sort occurs on rows where all pivot selection
        /// dimension name and value pairs match the row's dimension name and value
        /// pair.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy.Types.PivotSelection> PivotSelections {
          get { return pivotSelections_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PivotOrderBy);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PivotOrderBy other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MetricName != other.MetricName) return false;
          if(!pivotSelections_.Equals(other.pivotSelections_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MetricName.Length != 0) hash ^= MetricName.GetHashCode();
          hash ^= pivotSelections_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MetricName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MetricName);
          }
          pivotSelections_.WriteTo(output, _repeated_pivotSelections_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MetricName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MetricName);
          }
          pivotSelections_.WriteTo(ref output, _repeated_pivotSelections_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MetricName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MetricName);
          }
          size += pivotSelections_.CalculateSize(_repeated_pivotSelections_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PivotOrderBy other) {
          if (other == null) {
            return;
          }
          if (other.MetricName.Length != 0) {
            MetricName = other.MetricName;
          }
          pivotSelections_.Add(other.pivotSelections_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MetricName = input.ReadString();
                break;
              }
              case 18: {
                pivotSelections_.AddEntriesFrom(input, _repeated_pivotSelections_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                MetricName = input.ReadString();
                break;
              }
              case 18: {
                pivotSelections_.AddEntriesFrom(ref input, _repeated_pivotSelections_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the PivotOrderBy message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// A pair of dimension names and values. Rows with this dimension pivot pair
          /// are ordered by the metric's value.
          ///
          /// For example if pivots = {{"browser", "Chrome"}} and
          /// metric_name = "Sessions",
          /// then the rows will be sorted based on Sessions in Chrome.
          ///
          ///     ---------|----------|----------------|----------|----------------
          ///              |  Chrome  |    Chrome      |  Safari  |     Safari
          ///     ---------|----------|----------------|----------|----------------
          ///      Country | Sessions | Pages/Sessions | Sessions | Pages/Sessions
          ///     ---------|----------|----------------|----------|----------------
          ///         US   |    2     |       2        |     3    |        1
          ///     ---------|----------|----------------|----------|----------------
          ///       Canada |    3     |       1        |     4    |        1
          ///     ---------|----------|----------------|----------|----------------
          /// </summary>
          public sealed partial class PivotSelection : pb::IMessage<PivotSelection>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<PivotSelection> _parser = new pb::MessageParser<PivotSelection>(() => new PivotSelection());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PivotSelection> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Analytics.Data.V1Alpha.OrderBy.Types.PivotOrderBy.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PivotSelection() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PivotSelection(PivotSelection other) : this() {
              dimensionName_ = other.dimensionName_;
              dimensionValue_ = other.dimensionValue_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PivotSelection Clone() {
              return new PivotSelection(this);
            }

            /// <summary>Field number for the "dimension_name" field.</summary>
            public const int DimensionNameFieldNumber = 1;
            private string dimensionName_ = "";
            /// <summary>
            /// Must be a dimension name from the request.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DimensionName {
              get { return dimensionName_; }
              set {
                dimensionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "dimension_value" field.</summary>
            public const int DimensionValueFieldNumber = 2;
            private string dimensionValue_ = "";
            /// <summary>
            /// Order by only when the named dimension is this value.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string DimensionValue {
              get { return dimensionValue_; }
              set {
                dimensionValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PivotSelection);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PivotSelection other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (DimensionName != other.DimensionName) return false;
              if (DimensionValue != other.DimensionValue) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (DimensionName.Length != 0) hash ^= DimensionName.GetHashCode();
              if (DimensionValue.Length != 0) hash ^= DimensionValue.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (DimensionName.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(DimensionName);
              }
              if (DimensionValue.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(DimensionValue);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (DimensionName.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(DimensionName);
              }
              if (DimensionValue.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(DimensionValue);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (DimensionName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DimensionName);
              }
              if (DimensionValue.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DimensionValue);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PivotSelection other) {
              if (other == null) {
                return;
              }
              if (other.DimensionName.Length != 0) {
                DimensionName = other.DimensionName;
              }
              if (other.DimensionValue.Length != 0) {
                DimensionValue = other.DimensionValue;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    DimensionName = input.ReadString();
                    break;
                  }
                  case 18: {
                    DimensionValue = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    DimensionName = input.ReadString();
                    break;
                  }
                  case 18: {
                    DimensionValue = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Describes the visible dimension columns and rows in the report response.
  /// </summary>
  public sealed partial class Pivot : pb::IMessage<Pivot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Pivot> _parser = new pb::MessageParser<Pivot>(() => new Pivot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pivot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pivot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pivot(Pivot other) : this() {
      fieldNames_ = other.fieldNames_.Clone();
      orderBys_ = other.orderBys_.Clone();
      offset_ = other.offset_;
      limit_ = other.limit_;
      metricAggregations_ = other.metricAggregations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pivot Clone() {
      return new Pivot(this);
    }

    /// <summary>Field number for the "field_names" field.</summary>
    public const int FieldNamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_fieldNames_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> fieldNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Dimension names for visible columns in the report response. Including
    /// "dateRange" produces a date range column; for each row in the response,
    /// dimension values in the date range column will indicate the corresponding
    /// date range from the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FieldNames {
      get { return fieldNames_; }
    }

    /// <summary>Field number for the "order_bys" field.</summary>
    public const int OrderBysFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.OrderBy> _repeated_orderBys_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Analytics.Data.V1Alpha.OrderBy.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.OrderBy> orderBys_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.OrderBy>();
    /// <summary>
    /// Specifies how dimensions are ordered in the pivot. In the first Pivot, the
    /// OrderBys determine Row and PivotDimensionHeader ordering; in subsequent
    /// Pivots, the OrderBys determine only PivotDimensionHeader ordering.
    /// Dimensions specified in these OrderBys must be a subset of
    /// Pivot.field_names.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.OrderBy> OrderBys {
      get { return orderBys_; }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 3;
    private long offset_;
    /// <summary>
    /// The row count of the start row. The first row is counted as row 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 4;
    private long limit_;
    /// <summary>
    /// The number of rows to return in this pivot. If unspecified, 10 rows are
    /// returned. If -1, all rows are returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "metric_aggregations" field.</summary>
    public const int MetricAggregationsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.MetricAggregation> _repeated_metricAggregations_codec
        = pb::FieldCodec.ForEnum(42, x => (int) x, x => (global::Google.Analytics.Data.V1Alpha.MetricAggregation) x);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricAggregation> metricAggregations_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricAggregation>();
    /// <summary>
    /// Aggregate the metrics by dimensions in this pivot using the specified
    /// metric_aggregations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricAggregation> MetricAggregations {
      get { return metricAggregations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pivot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pivot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fieldNames_.Equals(other.fieldNames_)) return false;
      if(!orderBys_.Equals(other.orderBys_)) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if(!metricAggregations_.Equals(other.metricAggregations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fieldNames_.GetHashCode();
      hash ^= orderBys_.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      hash ^= metricAggregations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fieldNames_.WriteTo(output, _repeated_fieldNames_codec);
      orderBys_.WriteTo(output, _repeated_orderBys_codec);
      if (Offset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Limit);
      }
      metricAggregations_.WriteTo(output, _repeated_metricAggregations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fieldNames_.WriteTo(ref output, _repeated_fieldNames_codec);
      orderBys_.WriteTo(ref output, _repeated_orderBys_codec);
      if (Offset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Limit);
      }
      metricAggregations_.WriteTo(ref output, _repeated_metricAggregations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fieldNames_.CalculateSize(_repeated_fieldNames_codec);
      size += orderBys_.CalculateSize(_repeated_orderBys_codec);
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      size += metricAggregations_.CalculateSize(_repeated_metricAggregations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pivot other) {
      if (other == null) {
        return;
      }
      fieldNames_.Add(other.fieldNames_);
      orderBys_.Add(other.orderBys_);
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      metricAggregations_.Add(other.metricAggregations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fieldNames_.AddEntriesFrom(input, _repeated_fieldNames_codec);
            break;
          }
          case 18: {
            orderBys_.AddEntriesFrom(input, _repeated_orderBys_codec);
            break;
          }
          case 24: {
            Offset = input.ReadInt64();
            break;
          }
          case 32: {
            Limit = input.ReadInt64();
            break;
          }
          case 42:
          case 40: {
            metricAggregations_.AddEntriesFrom(input, _repeated_metricAggregations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fieldNames_.AddEntriesFrom(ref input, _repeated_fieldNames_codec);
            break;
          }
          case 18: {
            orderBys_.AddEntriesFrom(ref input, _repeated_orderBys_codec);
            break;
          }
          case 24: {
            Offset = input.ReadInt64();
            break;
          }
          case 32: {
            Limit = input.ReadInt64();
            break;
          }
          case 42:
          case 40: {
            metricAggregations_.AddEntriesFrom(ref input, _repeated_metricAggregations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specification of cohorts for a cohort report.
  /// Cohort reports can be used for example to create a time series of user
  /// retention for the cohort. For example, you could select the cohort of users
  /// that were acquired in the first week of September and follow that cohort for
  /// the next six weeks. Selecting the users acquired in the first week of
  /// September cohort is specified in the `cohort` object. Following that
  /// cohort for the next six weeks is specified in the `cohortsRange` object.
  ///
  /// The report response could show a weekly time series where say your app has
  /// retained 60% of this cohort after three weeks and 25% of this cohort after
  /// six weeks. These two percentages can be calculated by the metric
  /// `cohortActiveUsers/cohortTotalUsers` and will be separate rows in the report.
  /// </summary>
  public sealed partial class CohortSpec : pb::IMessage<CohortSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CohortSpec> _parser = new pb::MessageParser<CohortSpec>(() => new CohortSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CohortSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CohortSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CohortSpec(CohortSpec other) : this() {
      cohorts_ = other.cohorts_.Clone();
      cohortsRange_ = other.cohortsRange_ != null ? other.cohortsRange_.Clone() : null;
      cohortReportSettings_ = other.cohortReportSettings_ != null ? other.cohortReportSettings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CohortSpec Clone() {
      return new CohortSpec(this);
    }

    /// <summary>Field number for the "cohorts" field.</summary>
    public const int CohortsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Cohort> _repeated_cohorts_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Analytics.Data.V1Alpha.Cohort.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Cohort> cohorts_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Cohort>();
    /// <summary>
    /// Defines the selection criteria to group users into cohorts.
    ///
    /// Most cohort reports define only a single cohort. If multiple cohorts are
    /// specified, each cohort can be recognized in the report by their name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Cohort> Cohorts {
      get { return cohorts_; }
    }

    /// <summary>Field number for the "cohorts_range" field.</summary>
    public const int CohortsRangeFieldNumber = 2;
    private global::Google.Analytics.Data.V1Alpha.CohortsRange cohortsRange_;
    /// <summary>
    /// Cohort reports follow cohorts over an extended reporting date range. This
    /// range specifies an offset duration to follow the cohorts over.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.CohortsRange CohortsRange {
      get { return cohortsRange_; }
      set {
        cohortsRange_ = value;
      }
    }

    /// <summary>Field number for the "cohort_report_settings" field.</summary>
    public const int CohortReportSettingsFieldNumber = 3;
    private global::Google.Analytics.Data.V1Alpha.CohortReportSettings cohortReportSettings_;
    /// <summary>
    /// Optional settings for a cohort report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.CohortReportSettings CohortReportSettings {
      get { return cohortReportSettings_; }
      set {
        cohortReportSettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CohortSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CohortSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cohorts_.Equals(other.cohorts_)) return false;
      if (!object.Equals(CohortsRange, other.CohortsRange)) return false;
      if (!object.Equals(CohortReportSettings, other.CohortReportSettings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cohorts_.GetHashCode();
      if (cohortsRange_ != null) hash ^= CohortsRange.GetHashCode();
      if (cohortReportSettings_ != null) hash ^= CohortReportSettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      cohorts_.WriteTo(output, _repeated_cohorts_codec);
      if (cohortsRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CohortsRange);
      }
      if (cohortReportSettings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CohortReportSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      cohorts_.WriteTo(ref output, _repeated_cohorts_codec);
      if (cohortsRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CohortsRange);
      }
      if (cohortReportSettings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CohortReportSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cohorts_.CalculateSize(_repeated_cohorts_codec);
      if (cohortsRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CohortsRange);
      }
      if (cohortReportSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CohortReportSettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CohortSpec other) {
      if (other == null) {
        return;
      }
      cohorts_.Add(other.cohorts_);
      if (other.cohortsRange_ != null) {
        if (cohortsRange_ == null) {
          CohortsRange = new global::Google.Analytics.Data.V1Alpha.CohortsRange();
        }
        CohortsRange.MergeFrom(other.CohortsRange);
      }
      if (other.cohortReportSettings_ != null) {
        if (cohortReportSettings_ == null) {
          CohortReportSettings = new global::Google.Analytics.Data.V1Alpha.CohortReportSettings();
        }
        CohortReportSettings.MergeFrom(other.CohortReportSettings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cohorts_.AddEntriesFrom(input, _repeated_cohorts_codec);
            break;
          }
          case 18: {
            if (cohortsRange_ == null) {
              CohortsRange = new global::Google.Analytics.Data.V1Alpha.CohortsRange();
            }
            input.ReadMessage(CohortsRange);
            break;
          }
          case 26: {
            if (cohortReportSettings_ == null) {
              CohortReportSettings = new global::Google.Analytics.Data.V1Alpha.CohortReportSettings();
            }
            input.ReadMessage(CohortReportSettings);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            cohorts_.AddEntriesFrom(ref input, _repeated_cohorts_codec);
            break;
          }
          case 18: {
            if (cohortsRange_ == null) {
              CohortsRange = new global::Google.Analytics.Data.V1Alpha.CohortsRange();
            }
            input.ReadMessage(CohortsRange);
            break;
          }
          case 26: {
            if (cohortReportSettings_ == null) {
              CohortReportSettings = new global::Google.Analytics.Data.V1Alpha.CohortReportSettings();
            }
            input.ReadMessage(CohortReportSettings);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines a cohort selection criteria. A cohort is a group of users who share
  /// a common characteristic. For example, users with the same `firstTouchDate`
  /// belong to the same cohort.
  /// </summary>
  public sealed partial class Cohort : pb::IMessage<Cohort>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cohort> _parser = new pb::MessageParser<Cohort>(() => new Cohort());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cohort> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cohort() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cohort(Cohort other) : this() {
      name_ = other.name_;
      dimension_ = other.dimension_;
      dateRange_ = other.dateRange_ != null ? other.dateRange_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cohort Clone() {
      return new Cohort(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Assigns a name to this cohort. The dimension `cohort` is valued to this
    /// name in a report response. If set, cannot begin with `cohort_` or
    /// `RESERVED_`. If not set, cohorts are named by their zero based index
    /// `cohort_0`, `cohort_1`, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dimension" field.</summary>
    public const int DimensionFieldNumber = 2;
    private string dimension_ = "";
    /// <summary>
    /// Dimension used by the cohort. Required and only supports `firstTouchDate`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dimension {
      get { return dimension_; }
      set {
        dimension_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 3;
    private global::Google.Analytics.Data.V1Alpha.DateRange dateRange_;
    /// <summary>
    /// The cohort selects users whose first touch date is between start date and
    /// end date defined in the `dateRange`. This `dateRange` does not specify the
    /// full date range of event data that is present in a cohort report. In a
    /// cohort report, this `dateRange` is extended by the granularity and offset
    /// present in the `cohortsRange`; event data for the extended reporting date
    /// range is present in a cohort report.
    ///
    /// In a cohort request, this `dateRange` is required and the `dateRanges` in
    /// the `RunReportRequest` or `RunPivotReportRequest` must be unspecified.
    ///
    /// This `dateRange` should generally be aligned with the cohort's granularity.
    /// If `CohortsRange` uses daily granularity, this `dateRange` can be a single
    /// day. If `CohortsRange` uses weekly granularity, this `dateRange` can be
    /// aligned to a week boundary, starting at Sunday and ending Saturday. If
    /// `CohortsRange` uses monthly granularity, this `dateRange` can be aligned to
    /// a month, starting at the first and ending on the last day of the month.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.DateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cohort);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cohort other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Dimension != other.Dimension) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Dimension.Length != 0) hash ^= Dimension.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Dimension.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Dimension);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DateRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Dimension.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Dimension);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DateRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Dimension.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dimension);
      }
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cohort other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Dimension.Length != 0) {
        Dimension = other.Dimension;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          DateRange = new global::Google.Analytics.Data.V1Alpha.DateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Dimension = input.ReadString();
            break;
          }
          case 26: {
            if (dateRange_ == null) {
              DateRange = new global::Google.Analytics.Data.V1Alpha.DateRange();
            }
            input.ReadMessage(DateRange);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Dimension = input.ReadString();
            break;
          }
          case 26: {
            if (dateRange_ == null) {
              DateRange = new global::Google.Analytics.Data.V1Alpha.DateRange();
            }
            input.ReadMessage(DateRange);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Configures the extended reporting date range for a cohort report. Specifies
  /// an offset duration to follow the cohorts over.
  /// </summary>
  public sealed partial class CohortsRange : pb::IMessage<CohortsRange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CohortsRange> _parser = new pb::MessageParser<CohortsRange>(() => new CohortsRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CohortsRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CohortsRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CohortsRange(CohortsRange other) : this() {
      granularity_ = other.granularity_;
      startOffset_ = other.startOffset_;
      endOffset_ = other.endOffset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CohortsRange Clone() {
      return new CohortsRange(this);
    }

    /// <summary>Field number for the "granularity" field.</summary>
    public const int GranularityFieldNumber = 1;
    private global::Google.Analytics.Data.V1Alpha.CohortsRange.Types.Granularity granularity_ = global::Google.Analytics.Data.V1Alpha.CohortsRange.Types.Granularity.Unspecified;
    /// <summary>
    /// The granularity used to interpret the `startOffset` and `endOffset` for the
    /// extended reporting date range for a cohort report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.CohortsRange.Types.Granularity Granularity {
      get { return granularity_; }
      set {
        granularity_ = value;
      }
    }

    /// <summary>Field number for the "start_offset" field.</summary>
    public const int StartOffsetFieldNumber = 2;
    private int startOffset_;
    /// <summary>
    /// `startOffset` specifies the start date of the extended reporting date range
    /// for a cohort report. `startOffset` is commonly set to 0 so that reports
    /// contain data from the acquisition of the cohort forward.
    ///
    /// If `granularity` is `DAILY`, the `startDate` of the extended reporting date
    /// range is `startDate` of the cohort plus `startOffset` days.
    ///
    /// If `granularity` is `WEEKLY`, the `startDate` of the extended reporting
    /// date range is `startDate` of the cohort plus `startOffset * 7` days.
    ///
    /// If `granularity` is `MONTHLY`, the `startDate` of the extended reporting
    /// date range is `startDate` of the cohort plus `startOffset * 30` days.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartOffset {
      get { return startOffset_; }
      set {
        startOffset_ = value;
      }
    }

    /// <summary>Field number for the "end_offset" field.</summary>
    public const int EndOffsetFieldNumber = 3;
    private int endOffset_;
    /// <summary>
    /// `endOffset` specifies the end date of the extended reporting date range
    /// for a cohort report. `endOffset` can be any positive integer but is
    /// commonly set to 5 to 10 so that reports contain data on the cohort for the
    /// next several granularity time periods.
    ///
    /// If `granularity` is `DAILY`, the `endDate` of the extended reporting date
    /// range is `endDate` of the cohort plus `endOffset` days.
    ///
    /// If `granularity` is `WEEKLY`, the `endDate` of the extended reporting date
    /// range is `endDate` of the cohort plus `endOffset * 7` days.
    ///
    /// If `granularity` is `MONTHLY`, the `endDate` of the extended reporting date
    /// range is `endDate` of the cohort plus `endOffset * 30` days.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndOffset {
      get { return endOffset_; }
      set {
        endOffset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CohortsRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CohortsRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Granularity != other.Granularity) return false;
      if (StartOffset != other.StartOffset) return false;
      if (EndOffset != other.EndOffset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Granularity != global::Google.Analytics.Data.V1Alpha.CohortsRange.Types.Granularity.Unspecified) hash ^= Granularity.GetHashCode();
      if (StartOffset != 0) hash ^= StartOffset.GetHashCode();
      if (EndOffset != 0) hash ^= EndOffset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Granularity != global::Google.Analytics.Data.V1Alpha.CohortsRange.Types.Granularity.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Granularity);
      }
      if (StartOffset != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartOffset);
      }
      if (EndOffset != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EndOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Granularity != global::Google.Analytics.Data.V1Alpha.CohortsRange.Types.Granularity.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Granularity);
      }
      if (StartOffset != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartOffset);
      }
      if (EndOffset != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EndOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Granularity != global::Google.Analytics.Data.V1Alpha.CohortsRange.Types.Granularity.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Granularity);
      }
      if (StartOffset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartOffset);
      }
      if (EndOffset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndOffset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CohortsRange other) {
      if (other == null) {
        return;
      }
      if (other.Granularity != global::Google.Analytics.Data.V1Alpha.CohortsRange.Types.Granularity.Unspecified) {
        Granularity = other.Granularity;
      }
      if (other.StartOffset != 0) {
        StartOffset = other.StartOffset;
      }
      if (other.EndOffset != 0) {
        EndOffset = other.EndOffset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Granularity = (global::Google.Analytics.Data.V1Alpha.CohortsRange.Types.Granularity) input.ReadEnum();
            break;
          }
          case 16: {
            StartOffset = input.ReadInt32();
            break;
          }
          case 24: {
            EndOffset = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Granularity = (global::Google.Analytics.Data.V1Alpha.CohortsRange.Types.Granularity) input.ReadEnum();
            break;
          }
          case 16: {
            StartOffset = input.ReadInt32();
            break;
          }
          case 24: {
            EndOffset = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CohortsRange message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The granularity used to interpret the `startOffset` and `endOffset` for the
      /// extended reporting date range for a cohort report.
      /// </summary>
      public enum Granularity {
        /// <summary>
        /// Should never be specified.
        /// </summary>
        [pbr::OriginalName("GRANULARITY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Daily granularity. Commonly used if the cohort's `dateRange` is a single
        /// day and the request contains `cohortNthDay`.
        /// </summary>
        [pbr::OriginalName("DAILY")] Daily = 1,
        /// <summary>
        /// Weekly granularity. Commonly used if the cohort's `dateRange` is a week
        /// in duration (starting on Sunday and ending on Saturday) and the request
        /// contains `cohortNthWeek`.
        /// </summary>
        [pbr::OriginalName("WEEKLY")] Weekly = 2,
        /// <summary>
        /// Monthly granularity. Commonly used if the cohort's `dateRange` is a month
        /// in duration and the request contains `cohortNthMonth`.
        /// </summary>
        [pbr::OriginalName("MONTHLY")] Monthly = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// Optional settings of a cohort report.
  /// </summary>
  public sealed partial class CohortReportSettings : pb::IMessage<CohortReportSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CohortReportSettings> _parser = new pb::MessageParser<CohortReportSettings>(() => new CohortReportSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CohortReportSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CohortReportSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CohortReportSettings(CohortReportSettings other) : this() {
      accumulate_ = other.accumulate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CohortReportSettings Clone() {
      return new CohortReportSettings(this);
    }

    /// <summary>Field number for the "accumulate" field.</summary>
    public const int AccumulateFieldNumber = 1;
    private bool accumulate_;
    /// <summary>
    /// If true, accumulates the result from first touch day to the end day. Not
    /// supported in `RunReportRequest`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accumulate {
      get { return accumulate_; }
      set {
        accumulate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CohortReportSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CohortReportSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accumulate != other.Accumulate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Accumulate != false) hash ^= Accumulate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Accumulate != false) {
        output.WriteRawTag(8);
        output.WriteBool(Accumulate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Accumulate != false) {
        output.WriteRawTag(8);
        output.WriteBool(Accumulate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Accumulate != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CohortReportSettings other) {
      if (other == null) {
        return;
      }
      if (other.Accumulate != false) {
        Accumulate = other.Accumulate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Accumulate = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Accumulate = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response's metadata carrying additional information about the report content.
  /// </summary>
  public sealed partial class ResponseMetaData : pb::IMessage<ResponseMetaData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResponseMetaData> _parser = new pb::MessageParser<ResponseMetaData>(() => new ResponseMetaData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseMetaData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMetaData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMetaData(ResponseMetaData other) : this() {
      dataLossFromOtherRow_ = other.dataLossFromOtherRow_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseMetaData Clone() {
      return new ResponseMetaData(this);
    }

    /// <summary>Field number for the "data_loss_from_other_row" field.</summary>
    public const int DataLossFromOtherRowFieldNumber = 3;
    private bool dataLossFromOtherRow_;
    /// <summary>
    /// If true, indicates some buckets of dimension combinations are rolled into
    /// "(other)" row. This can happen for high cardinality reports.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DataLossFromOtherRow {
      get { return dataLossFromOtherRow_; }
      set {
        dataLossFromOtherRow_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseMetaData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseMetaData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataLossFromOtherRow != other.DataLossFromOtherRow) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataLossFromOtherRow != false) hash ^= DataLossFromOtherRow.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DataLossFromOtherRow != false) {
        output.WriteRawTag(24);
        output.WriteBool(DataLossFromOtherRow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DataLossFromOtherRow != false) {
        output.WriteRawTag(24);
        output.WriteBool(DataLossFromOtherRow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataLossFromOtherRow != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseMetaData other) {
      if (other == null) {
        return;
      }
      if (other.DataLossFromOtherRow != false) {
        DataLossFromOtherRow = other.DataLossFromOtherRow;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            DataLossFromOtherRow = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            DataLossFromOtherRow = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes a dimension column in the report. Dimensions requested in a report
  /// produce column entries within rows and DimensionHeaders. However, dimensions
  /// used exclusively within filters or expressions do not produce columns in a
  /// report; correspondingly, those dimensions do not produce headers.
  /// </summary>
  public sealed partial class DimensionHeader : pb::IMessage<DimensionHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DimensionHeader> _parser = new pb::MessageParser<DimensionHeader>(() => new DimensionHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DimensionHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DimensionHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DimensionHeader(DimensionHeader other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DimensionHeader Clone() {
      return new DimensionHeader(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The dimension's name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DimensionHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DimensionHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DimensionHeader other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes a metric column in the report. Visible metrics requested in a
  /// report produce column entries within rows and MetricHeaders. However,
  /// metrics used exclusively within filters or expressions do not produce columns
  /// in a report; correspondingly, those metrics do not produce headers.
  /// </summary>
  public sealed partial class MetricHeader : pb::IMessage<MetricHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetricHeader> _parser = new pb::MessageParser<MetricHeader>(() => new MetricHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetricHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricHeader(MetricHeader other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricHeader Clone() {
      return new MetricHeader(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The metric's name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Google.Analytics.Data.V1Alpha.MetricType type_ = global::Google.Analytics.Data.V1Alpha.MetricType.Unspecified;
    /// <summary>
    /// The metric's data type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.MetricType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetricHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetricHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::Google.Analytics.Data.V1Alpha.MetricType.Unspecified) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Google.Analytics.Data.V1Alpha.MetricType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Google.Analytics.Data.V1Alpha.MetricType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Google.Analytics.Data.V1Alpha.MetricType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetricHeader other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::Google.Analytics.Data.V1Alpha.MetricType.Unspecified) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Google.Analytics.Data.V1Alpha.MetricType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Google.Analytics.Data.V1Alpha.MetricType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Dimensions' values in a single pivot.
  /// </summary>
  public sealed partial class PivotHeader : pb::IMessage<PivotHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PivotHeader> _parser = new pb::MessageParser<PivotHeader>(() => new PivotHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PivotHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PivotHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PivotHeader(PivotHeader other) : this() {
      pivotDimensionHeaders_ = other.pivotDimensionHeaders_.Clone();
      rowCount_ = other.rowCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PivotHeader Clone() {
      return new PivotHeader(this);
    }

    /// <summary>Field number for the "pivot_dimension_headers" field.</summary>
    public const int PivotDimensionHeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.PivotDimensionHeader> _repeated_pivotDimensionHeaders_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Analytics.Data.V1Alpha.PivotDimensionHeader.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.PivotDimensionHeader> pivotDimensionHeaders_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.PivotDimensionHeader>();
    /// <summary>
    /// The size is the same as the cardinality of the corresponding dimension
    /// combinations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.PivotDimensionHeader> PivotDimensionHeaders {
      get { return pivotDimensionHeaders_; }
    }

    /// <summary>Field number for the "row_count" field.</summary>
    public const int RowCountFieldNumber = 2;
    private int rowCount_;
    /// <summary>
    /// The cardinality of the pivot as if offset = 0 and limit = -1. The total
    /// number of rows for this pivot's fields regardless of how the parameters
    /// offset and limit are specified in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RowCount {
      get { return rowCount_; }
      set {
        rowCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PivotHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PivotHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pivotDimensionHeaders_.Equals(other.pivotDimensionHeaders_)) return false;
      if (RowCount != other.RowCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pivotDimensionHeaders_.GetHashCode();
      if (RowCount != 0) hash ^= RowCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      pivotDimensionHeaders_.WriteTo(output, _repeated_pivotDimensionHeaders_codec);
      if (RowCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RowCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      pivotDimensionHeaders_.WriteTo(ref output, _repeated_pivotDimensionHeaders_codec);
      if (RowCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RowCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pivotDimensionHeaders_.CalculateSize(_repeated_pivotDimensionHeaders_codec);
      if (RowCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PivotHeader other) {
      if (other == null) {
        return;
      }
      pivotDimensionHeaders_.Add(other.pivotDimensionHeaders_);
      if (other.RowCount != 0) {
        RowCount = other.RowCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pivotDimensionHeaders_.AddEntriesFrom(input, _repeated_pivotDimensionHeaders_codec);
            break;
          }
          case 16: {
            RowCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            pivotDimensionHeaders_.AddEntriesFrom(ref input, _repeated_pivotDimensionHeaders_codec);
            break;
          }
          case 16: {
            RowCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Summarizes dimension values from a row for this pivot.
  /// </summary>
  public sealed partial class PivotDimensionHeader : pb::IMessage<PivotDimensionHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PivotDimensionHeader> _parser = new pb::MessageParser<PivotDimensionHeader>(() => new PivotDimensionHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PivotDimensionHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PivotDimensionHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PivotDimensionHeader(PivotDimensionHeader other) : this() {
      dimensionValues_ = other.dimensionValues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PivotDimensionHeader Clone() {
      return new PivotDimensionHeader(this);
    }

    /// <summary>Field number for the "dimension_values" field.</summary>
    public const int DimensionValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.DimensionValue> _repeated_dimensionValues_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Analytics.Data.V1Alpha.DimensionValue.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionValue> dimensionValues_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionValue>();
    /// <summary>
    /// Values of multiple dimensions in a pivot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionValue> DimensionValues {
      get { return dimensionValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PivotDimensionHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PivotDimensionHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dimensionValues_.Equals(other.dimensionValues_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dimensionValues_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dimensionValues_.WriteTo(output, _repeated_dimensionValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dimensionValues_.WriteTo(ref output, _repeated_dimensionValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dimensionValues_.CalculateSize(_repeated_dimensionValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PivotDimensionHeader other) {
      if (other == null) {
        return;
      }
      dimensionValues_.Add(other.dimensionValues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dimensionValues_.AddEntriesFrom(input, _repeated_dimensionValues_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dimensionValues_.AddEntriesFrom(ref input, _repeated_dimensionValues_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Report data for each row.
  /// For example if RunReportRequest contains:
  ///
  /// ```none
  /// "dimensions": [
  ///   {
  ///     "name": "eventName"
  ///   },
  ///   {
  ///     "name": "countryId"
  ///   }
  /// ],
  /// "metrics": [
  ///   {
  ///     "name": "eventCount"
  ///   }
  /// ]
  /// ```
  ///
  /// One row with 'in_app_purchase' as the eventName, 'JP' as the countryId, and
  /// 15 as the eventCount, would be:
  ///
  /// ```none
  /// "dimensionValues": [
  ///   {
  ///     "value": "in_app_purchase"
  ///   },
  ///   {
  ///     "value": "JP"
  ///   }
  /// ],
  /// "metricValues": [
  ///   {
  ///     "value": "15"
  ///   }
  /// ]
  /// ```
  /// </summary>
  public sealed partial class Row : pb::IMessage<Row>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Row> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Row() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Row(Row other) : this() {
      dimensionValues_ = other.dimensionValues_.Clone();
      metricValues_ = other.metricValues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Row Clone() {
      return new Row(this);
    }

    /// <summary>Field number for the "dimension_values" field.</summary>
    public const int DimensionValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.DimensionValue> _repeated_dimensionValues_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Analytics.Data.V1Alpha.DimensionValue.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionValue> dimensionValues_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionValue>();
    /// <summary>
    /// List of requested dimension values. In a PivotReport, dimension_values
    /// are only listed for dimensions included in a pivot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionValue> DimensionValues {
      get { return dimensionValues_; }
    }

    /// <summary>Field number for the "metric_values" field.</summary>
    public const int MetricValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.MetricValue> _repeated_metricValues_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Analytics.Data.V1Alpha.MetricValue.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricValue> metricValues_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricValue>();
    /// <summary>
    /// List of requested visible metric values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricValue> MetricValues {
      get { return metricValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Row);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Row other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dimensionValues_.Equals(other.dimensionValues_)) return false;
      if(!metricValues_.Equals(other.metricValues_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dimensionValues_.GetHashCode();
      hash ^= metricValues_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dimensionValues_.WriteTo(output, _repeated_dimensionValues_codec);
      metricValues_.WriteTo(output, _repeated_metricValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dimensionValues_.WriteTo(ref output, _repeated_dimensionValues_codec);
      metricValues_.WriteTo(ref output, _repeated_metricValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dimensionValues_.CalculateSize(_repeated_dimensionValues_codec);
      size += metricValues_.CalculateSize(_repeated_metricValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Row other) {
      if (other == null) {
        return;
      }
      dimensionValues_.Add(other.dimensionValues_);
      metricValues_.Add(other.metricValues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dimensionValues_.AddEntriesFrom(input, _repeated_dimensionValues_codec);
            break;
          }
          case 18: {
            metricValues_.AddEntriesFrom(input, _repeated_metricValues_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dimensionValues_.AddEntriesFrom(ref input, _repeated_dimensionValues_codec);
            break;
          }
          case 18: {
            metricValues_.AddEntriesFrom(ref input, _repeated_metricValues_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The value of a dimension.
  /// </summary>
  public sealed partial class DimensionValue : pb::IMessage<DimensionValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DimensionValue> _parser = new pb::MessageParser<DimensionValue>(() => new DimensionValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DimensionValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DimensionValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DimensionValue(DimensionValue other) : this() {
      switch (other.OneValueCase) {
        case OneValueOneofCase.Value:
          Value = other.Value;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DimensionValue Clone() {
      return new DimensionValue(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    /// <summary>
    /// Value as a string if the dimension type is a string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return oneValueCase_ == OneValueOneofCase.Value ? (string) oneValue_ : ""; }
      set {
        oneValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        oneValueCase_ = OneValueOneofCase.Value;
      }
    }

    private object oneValue_;
    /// <summary>Enum of possible cases for the "one_value" oneof.</summary>
    public enum OneValueOneofCase {
      None = 0,
      Value = 1,
    }
    private OneValueOneofCase oneValueCase_ = OneValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneValueOneofCase OneValueCase {
      get { return oneValueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneValue() {
      oneValueCase_ = OneValueOneofCase.None;
      oneValue_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DimensionValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DimensionValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (OneValueCase != other.OneValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oneValueCase_ == OneValueOneofCase.Value) hash ^= Value.GetHashCode();
      hash ^= (int) oneValueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (oneValueCase_ == OneValueOneofCase.Value) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (oneValueCase_ == OneValueOneofCase.Value) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oneValueCase_ == OneValueOneofCase.Value) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DimensionValue other) {
      if (other == null) {
        return;
      }
      switch (other.OneValueCase) {
        case OneValueOneofCase.Value:
          Value = other.Value;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The value of a metric.
  /// </summary>
  public sealed partial class MetricValue : pb::IMessage<MetricValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetricValue> _parser = new pb::MessageParser<MetricValue>(() => new MetricValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetricValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricValue(MetricValue other) : this() {
      switch (other.OneValueCase) {
        case OneValueOneofCase.Value:
          Value = other.Value;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricValue Clone() {
      return new MetricValue(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 4;
    /// <summary>
    /// Measurement value. See MetricHeader for type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return oneValueCase_ == OneValueOneofCase.Value ? (string) oneValue_ : ""; }
      set {
        oneValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        oneValueCase_ = OneValueOneofCase.Value;
      }
    }

    private object oneValue_;
    /// <summary>Enum of possible cases for the "one_value" oneof.</summary>
    public enum OneValueOneofCase {
      None = 0,
      Value = 4,
    }
    private OneValueOneofCase oneValueCase_ = OneValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneValueOneofCase OneValueCase {
      get { return oneValueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneValue() {
      oneValueCase_ = OneValueOneofCase.None;
      oneValue_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetricValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetricValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (OneValueCase != other.OneValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oneValueCase_ == OneValueOneofCase.Value) hash ^= Value.GetHashCode();
      hash ^= (int) oneValueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (oneValueCase_ == OneValueOneofCase.Value) {
        output.WriteRawTag(34);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (oneValueCase_ == OneValueOneofCase.Value) {
        output.WriteRawTag(34);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oneValueCase_ == OneValueOneofCase.Value) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetricValue other) {
      if (other == null) {
        return;
      }
      switch (other.OneValueCase) {
        case OneValueOneofCase.Value:
          Value = other.Value;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 34: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// To represent a number.
  /// </summary>
  public sealed partial class NumericValue : pb::IMessage<NumericValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NumericValue> _parser = new pb::MessageParser<NumericValue>(() => new NumericValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NumericValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumericValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumericValue(NumericValue other) : this() {
      switch (other.OneValueCase) {
        case OneValueOneofCase.Int64Value:
          Int64Value = other.Int64Value;
          break;
        case OneValueOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumericValue Clone() {
      return new NumericValue(this);
    }

    /// <summary>Field number for the "int64_value" field.</summary>
    public const int Int64ValueFieldNumber = 1;
    /// <summary>
    /// Integer value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Int64Value {
      get { return oneValueCase_ == OneValueOneofCase.Int64Value ? (long) oneValue_ : 0L; }
      set {
        oneValue_ = value;
        oneValueCase_ = OneValueOneofCase.Int64Value;
      }
    }

    /// <summary>Field number for the "double_value" field.</summary>
    public const int DoubleValueFieldNumber = 2;
    /// <summary>
    /// Double value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DoubleValue {
      get { return oneValueCase_ == OneValueOneofCase.DoubleValue ? (double) oneValue_ : 0D; }
      set {
        oneValue_ = value;
        oneValueCase_ = OneValueOneofCase.DoubleValue;
      }
    }

    private object oneValue_;
    /// <summary>Enum of possible cases for the "one_value" oneof.</summary>
    public enum OneValueOneofCase {
      None = 0,
      Int64Value = 1,
      DoubleValue = 2,
    }
    private OneValueOneofCase oneValueCase_ = OneValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneValueOneofCase OneValueCase {
      get { return oneValueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneValue() {
      oneValueCase_ = OneValueOneofCase.None;
      oneValue_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NumericValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NumericValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Int64Value != other.Int64Value) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
      if (OneValueCase != other.OneValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (oneValueCase_ == OneValueOneofCase.Int64Value) hash ^= Int64Value.GetHashCode();
      if (oneValueCase_ == OneValueOneofCase.DoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
      hash ^= (int) oneValueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (oneValueCase_ == OneValueOneofCase.Int64Value) {
        output.WriteRawTag(8);
        output.WriteInt64(Int64Value);
      }
      if (oneValueCase_ == OneValueOneofCase.DoubleValue) {
        output.WriteRawTag(17);
        output.WriteDouble(DoubleValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (oneValueCase_ == OneValueOneofCase.Int64Value) {
        output.WriteRawTag(8);
        output.WriteInt64(Int64Value);
      }
      if (oneValueCase_ == OneValueOneofCase.DoubleValue) {
        output.WriteRawTag(17);
        output.WriteDouble(DoubleValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (oneValueCase_ == OneValueOneofCase.Int64Value) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Int64Value);
      }
      if (oneValueCase_ == OneValueOneofCase.DoubleValue) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NumericValue other) {
      if (other == null) {
        return;
      }
      switch (other.OneValueCase) {
        case OneValueOneofCase.Int64Value:
          Int64Value = other.Int64Value;
          break;
        case OneValueOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Int64Value = input.ReadInt64();
            break;
          }
          case 17: {
            DoubleValue = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Int64Value = input.ReadInt64();
            break;
          }
          case 17: {
            DoubleValue = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Current state of all quotas for this Analytics Property. If any quota for a
  /// property is exhausted, all requests to that property will return Resource
  /// Exhausted errors.
  /// </summary>
  public sealed partial class PropertyQuota : pb::IMessage<PropertyQuota>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropertyQuota> _parser = new pb::MessageParser<PropertyQuota>(() => new PropertyQuota());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertyQuota> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyQuota() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyQuota(PropertyQuota other) : this() {
      tokensPerDay_ = other.tokensPerDay_ != null ? other.tokensPerDay_.Clone() : null;
      tokensPerHour_ = other.tokensPerHour_ != null ? other.tokensPerHour_.Clone() : null;
      concurrentRequests_ = other.concurrentRequests_ != null ? other.concurrentRequests_.Clone() : null;
      serverErrorsPerProjectPerHour_ = other.serverErrorsPerProjectPerHour_ != null ? other.serverErrorsPerProjectPerHour_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyQuota Clone() {
      return new PropertyQuota(this);
    }

    /// <summary>Field number for the "tokens_per_day" field.</summary>
    public const int TokensPerDayFieldNumber = 1;
    private global::Google.Analytics.Data.V1Alpha.QuotaStatus tokensPerDay_;
    /// <summary>
    /// Standard Analytics Properties can use up to 25,000 tokens per day;
    /// Analytics 360 Properties can use 250,000 tokens per day. Most requests
    /// consume fewer than 10 tokens.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.QuotaStatus TokensPerDay {
      get { return tokensPerDay_; }
      set {
        tokensPerDay_ = value;
      }
    }

    /// <summary>Field number for the "tokens_per_hour" field.</summary>
    public const int TokensPerHourFieldNumber = 2;
    private global::Google.Analytics.Data.V1Alpha.QuotaStatus tokensPerHour_;
    /// <summary>
    /// Standard Analytics Properties can use up to 5,000 tokens per day; Analytics
    /// 360 Properties can use 50,000 tokens per day. An API request consumes a
    /// single number of tokens, and that number is deducted from both the hourly
    /// and daily quotas.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.QuotaStatus TokensPerHour {
      get { return tokensPerHour_; }
      set {
        tokensPerHour_ = value;
      }
    }

    /// <summary>Field number for the "concurrent_requests" field.</summary>
    public const int ConcurrentRequestsFieldNumber = 3;
    private global::Google.Analytics.Data.V1Alpha.QuotaStatus concurrentRequests_;
    /// <summary>
    /// Standard Analytics Properties can send up to 10 concurrent requests;
    /// Analytics 360 Properties can use up to 50 concurrent requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.QuotaStatus ConcurrentRequests {
      get { return concurrentRequests_; }
      set {
        concurrentRequests_ = value;
      }
    }

    /// <summary>Field number for the "server_errors_per_project_per_hour" field.</summary>
    public const int ServerErrorsPerProjectPerHourFieldNumber = 4;
    private global::Google.Analytics.Data.V1Alpha.QuotaStatus serverErrorsPerProjectPerHour_;
    /// <summary>
    /// Standard Analytics Properties and cloud project pairs can have up to 10
    /// server errors per hour; Analytics 360 Properties and cloud project pairs
    /// can have up to 50 server errors per hour.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.QuotaStatus ServerErrorsPerProjectPerHour {
      get { return serverErrorsPerProjectPerHour_; }
      set {
        serverErrorsPerProjectPerHour_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertyQuota);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertyQuota other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TokensPerDay, other.TokensPerDay)) return false;
      if (!object.Equals(TokensPerHour, other.TokensPerHour)) return false;
      if (!object.Equals(ConcurrentRequests, other.ConcurrentRequests)) return false;
      if (!object.Equals(ServerErrorsPerProjectPerHour, other.ServerErrorsPerProjectPerHour)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tokensPerDay_ != null) hash ^= TokensPerDay.GetHashCode();
      if (tokensPerHour_ != null) hash ^= TokensPerHour.GetHashCode();
      if (concurrentRequests_ != null) hash ^= ConcurrentRequests.GetHashCode();
      if (serverErrorsPerProjectPerHour_ != null) hash ^= ServerErrorsPerProjectPerHour.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tokensPerDay_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TokensPerDay);
      }
      if (tokensPerHour_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TokensPerHour);
      }
      if (concurrentRequests_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ConcurrentRequests);
      }
      if (serverErrorsPerProjectPerHour_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ServerErrorsPerProjectPerHour);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tokensPerDay_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TokensPerDay);
      }
      if (tokensPerHour_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TokensPerHour);
      }
      if (concurrentRequests_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ConcurrentRequests);
      }
      if (serverErrorsPerProjectPerHour_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ServerErrorsPerProjectPerHour);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tokensPerDay_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokensPerDay);
      }
      if (tokensPerHour_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokensPerHour);
      }
      if (concurrentRequests_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConcurrentRequests);
      }
      if (serverErrorsPerProjectPerHour_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerErrorsPerProjectPerHour);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertyQuota other) {
      if (other == null) {
        return;
      }
      if (other.tokensPerDay_ != null) {
        if (tokensPerDay_ == null) {
          TokensPerDay = new global::Google.Analytics.Data.V1Alpha.QuotaStatus();
        }
        TokensPerDay.MergeFrom(other.TokensPerDay);
      }
      if (other.tokensPerHour_ != null) {
        if (tokensPerHour_ == null) {
          TokensPerHour = new global::Google.Analytics.Data.V1Alpha.QuotaStatus();
        }
        TokensPerHour.MergeFrom(other.TokensPerHour);
      }
      if (other.concurrentRequests_ != null) {
        if (concurrentRequests_ == null) {
          ConcurrentRequests = new global::Google.Analytics.Data.V1Alpha.QuotaStatus();
        }
        ConcurrentRequests.MergeFrom(other.ConcurrentRequests);
      }
      if (other.serverErrorsPerProjectPerHour_ != null) {
        if (serverErrorsPerProjectPerHour_ == null) {
          ServerErrorsPerProjectPerHour = new global::Google.Analytics.Data.V1Alpha.QuotaStatus();
        }
        ServerErrorsPerProjectPerHour.MergeFrom(other.ServerErrorsPerProjectPerHour);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tokensPerDay_ == null) {
              TokensPerDay = new global::Google.Analytics.Data.V1Alpha.QuotaStatus();
            }
            input.ReadMessage(TokensPerDay);
            break;
          }
          case 18: {
            if (tokensPerHour_ == null) {
              TokensPerHour = new global::Google.Analytics.Data.V1Alpha.QuotaStatus();
            }
            input.ReadMessage(TokensPerHour);
            break;
          }
          case 26: {
            if (concurrentRequests_ == null) {
              ConcurrentRequests = new global::Google.Analytics.Data.V1Alpha.QuotaStatus();
            }
            input.ReadMessage(ConcurrentRequests);
            break;
          }
          case 34: {
            if (serverErrorsPerProjectPerHour_ == null) {
              ServerErrorsPerProjectPerHour = new global::Google.Analytics.Data.V1Alpha.QuotaStatus();
            }
            input.ReadMessage(ServerErrorsPerProjectPerHour);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tokensPerDay_ == null) {
              TokensPerDay = new global::Google.Analytics.Data.V1Alpha.QuotaStatus();
            }
            input.ReadMessage(TokensPerDay);
            break;
          }
          case 18: {
            if (tokensPerHour_ == null) {
              TokensPerHour = new global::Google.Analytics.Data.V1Alpha.QuotaStatus();
            }
            input.ReadMessage(TokensPerHour);
            break;
          }
          case 26: {
            if (concurrentRequests_ == null) {
              ConcurrentRequests = new global::Google.Analytics.Data.V1Alpha.QuotaStatus();
            }
            input.ReadMessage(ConcurrentRequests);
            break;
          }
          case 34: {
            if (serverErrorsPerProjectPerHour_ == null) {
              ServerErrorsPerProjectPerHour = new global::Google.Analytics.Data.V1Alpha.QuotaStatus();
            }
            input.ReadMessage(ServerErrorsPerProjectPerHour);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Current state for a particular quota group.
  /// </summary>
  public sealed partial class QuotaStatus : pb::IMessage<QuotaStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuotaStatus> _parser = new pb::MessageParser<QuotaStatus>(() => new QuotaStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuotaStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuotaStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuotaStatus(QuotaStatus other) : this() {
      consumed_ = other.consumed_;
      remaining_ = other.remaining_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuotaStatus Clone() {
      return new QuotaStatus(this);
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 1;
    private int consumed_;
    /// <summary>
    /// Quota consumed by this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    /// <summary>Field number for the "remaining" field.</summary>
    public const int RemainingFieldNumber = 2;
    private int remaining_;
    /// <summary>
    /// Quota remaining after this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Remaining {
      get { return remaining_; }
      set {
        remaining_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuotaStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuotaStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Consumed != other.Consumed) return false;
      if (Remaining != other.Remaining) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Consumed != 0) hash ^= Consumed.GetHashCode();
      if (Remaining != 0) hash ^= Remaining.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Consumed != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Consumed);
      }
      if (Remaining != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Remaining);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Consumed != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Consumed);
      }
      if (Remaining != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Remaining);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Consumed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Consumed);
      }
      if (Remaining != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Remaining);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuotaStatus other) {
      if (other == null) {
        return;
      }
      if (other.Consumed != 0) {
        Consumed = other.Consumed;
      }
      if (other.Remaining != 0) {
        Remaining = other.Remaining;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Consumed = input.ReadInt32();
            break;
          }
          case 16: {
            Remaining = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Consumed = input.ReadInt32();
            break;
          }
          case 16: {
            Remaining = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Explains a dimension.
  /// </summary>
  public sealed partial class DimensionMetadata : pb::IMessage<DimensionMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DimensionMetadata> _parser = new pb::MessageParser<DimensionMetadata>(() => new DimensionMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DimensionMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DimensionMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DimensionMetadata(DimensionMetadata other) : this() {
      apiName_ = other.apiName_;
      uiName_ = other.uiName_;
      description_ = other.description_;
      deprecatedApiNames_ = other.deprecatedApiNames_.Clone();
      customDefinition_ = other.customDefinition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DimensionMetadata Clone() {
      return new DimensionMetadata(this);
    }

    /// <summary>Field number for the "api_name" field.</summary>
    public const int ApiNameFieldNumber = 1;
    private string apiName_ = "";
    /// <summary>
    /// This dimension's name. Useable in [Dimension](#Dimension)'s `name`. For
    /// example, `eventName`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApiName {
      get { return apiName_; }
      set {
        apiName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ui_name" field.</summary>
    public const int UiNameFieldNumber = 2;
    private string uiName_ = "";
    /// <summary>
    /// This dimension's name within the Google Analytics user interface. For
    /// example, `Event name`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UiName {
      get { return uiName_; }
      set {
        uiName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Description of how this dimension is used and calculated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deprecated_api_names" field.</summary>
    public const int DeprecatedApiNamesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_deprecatedApiNames_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> deprecatedApiNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Still usable but deprecated names for this dimension. If populated, this
    /// dimension is available by either `apiName` or one of `deprecatedApiNames`
    /// for a period of time. After the deprecation period, the dimension will be
    /// available only by `apiName`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DeprecatedApiNames {
      get { return deprecatedApiNames_; }
    }

    /// <summary>Field number for the "custom_definition" field.</summary>
    public const int CustomDefinitionFieldNumber = 5;
    private bool customDefinition_;
    /// <summary>
    /// True if the dimension is a custom dimension for this property.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CustomDefinition {
      get { return customDefinition_; }
      set {
        customDefinition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DimensionMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DimensionMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApiName != other.ApiName) return false;
      if (UiName != other.UiName) return false;
      if (Description != other.Description) return false;
      if(!deprecatedApiNames_.Equals(other.deprecatedApiNames_)) return false;
      if (CustomDefinition != other.CustomDefinition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApiName.Length != 0) hash ^= ApiName.GetHashCode();
      if (UiName.Length != 0) hash ^= UiName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= deprecatedApiNames_.GetHashCode();
      if (CustomDefinition != false) hash ^= CustomDefinition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ApiName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ApiName);
      }
      if (UiName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UiName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      deprecatedApiNames_.WriteTo(output, _repeated_deprecatedApiNames_codec);
      if (CustomDefinition != false) {
        output.WriteRawTag(40);
        output.WriteBool(CustomDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ApiName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ApiName);
      }
      if (UiName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UiName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      deprecatedApiNames_.WriteTo(ref output, _repeated_deprecatedApiNames_codec);
      if (CustomDefinition != false) {
        output.WriteRawTag(40);
        output.WriteBool(CustomDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApiName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiName);
      }
      if (UiName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UiName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += deprecatedApiNames_.CalculateSize(_repeated_deprecatedApiNames_codec);
      if (CustomDefinition != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DimensionMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ApiName.Length != 0) {
        ApiName = other.ApiName;
      }
      if (other.UiName.Length != 0) {
        UiName = other.UiName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      deprecatedApiNames_.Add(other.deprecatedApiNames_);
      if (other.CustomDefinition != false) {
        CustomDefinition = other.CustomDefinition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ApiName = input.ReadString();
            break;
          }
          case 18: {
            UiName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            deprecatedApiNames_.AddEntriesFrom(input, _repeated_deprecatedApiNames_codec);
            break;
          }
          case 40: {
            CustomDefinition = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ApiName = input.ReadString();
            break;
          }
          case 18: {
            UiName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            deprecatedApiNames_.AddEntriesFrom(ref input, _repeated_deprecatedApiNames_codec);
            break;
          }
          case 40: {
            CustomDefinition = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Explains a metric.
  /// </summary>
  public sealed partial class MetricMetadata : pb::IMessage<MetricMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetricMetadata> _parser = new pb::MessageParser<MetricMetadata>(() => new MetricMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetricMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricMetadata(MetricMetadata other) : this() {
      apiName_ = other.apiName_;
      uiName_ = other.uiName_;
      description_ = other.description_;
      deprecatedApiNames_ = other.deprecatedApiNames_.Clone();
      type_ = other.type_;
      expression_ = other.expression_;
      customDefinition_ = other.customDefinition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetricMetadata Clone() {
      return new MetricMetadata(this);
    }

    /// <summary>Field number for the "api_name" field.</summary>
    public const int ApiNameFieldNumber = 1;
    private string apiName_ = "";
    /// <summary>
    /// A metric name. Useable in [Metric](#Metric)'s `name`. For example,
    /// `eventCount`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApiName {
      get { return apiName_; }
      set {
        apiName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ui_name" field.</summary>
    public const int UiNameFieldNumber = 2;
    private string uiName_ = "";
    /// <summary>
    /// This metric's name within the Google Analytics user interface. For example,
    /// `Event count`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UiName {
      get { return uiName_; }
      set {
        uiName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Description of how this metric is used and calculated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deprecated_api_names" field.</summary>
    public const int DeprecatedApiNamesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_deprecatedApiNames_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> deprecatedApiNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Still usable but deprecated names for this metric. If populated, this
    /// metric is available by either `apiName` or one of `deprecatedApiNames`
    /// for a period of time. After the deprecation period, the metric will be
    /// available only by `apiName`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DeprecatedApiNames {
      get { return deprecatedApiNames_; }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::Google.Analytics.Data.V1Alpha.MetricType type_ = global::Google.Analytics.Data.V1Alpha.MetricType.Unspecified;
    /// <summary>
    /// The type of this metric.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.MetricType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 6;
    private string expression_ = "";
    /// <summary>
    /// The mathematical expression for this derived metric. Can be used in
    /// [Metric](#Metric)'s `expression` field for equivalent reports. Most metrics
    /// are not expressions, and for non-expressions, this field is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "custom_definition" field.</summary>
    public const int CustomDefinitionFieldNumber = 7;
    private bool customDefinition_;
    /// <summary>
    /// True if the metric is a custom metric for this property.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CustomDefinition {
      get { return customDefinition_; }
      set {
        customDefinition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetricMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetricMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApiName != other.ApiName) return false;
      if (UiName != other.UiName) return false;
      if (Description != other.Description) return false;
      if(!deprecatedApiNames_.Equals(other.deprecatedApiNames_)) return false;
      if (Type != other.Type) return false;
      if (Expression != other.Expression) return false;
      if (CustomDefinition != other.CustomDefinition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApiName.Length != 0) hash ^= ApiName.GetHashCode();
      if (UiName.Length != 0) hash ^= UiName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= deprecatedApiNames_.GetHashCode();
      if (Type != global::Google.Analytics.Data.V1Alpha.MetricType.Unspecified) hash ^= Type.GetHashCode();
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (CustomDefinition != false) hash ^= CustomDefinition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ApiName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ApiName);
      }
      if (UiName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UiName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      deprecatedApiNames_.WriteTo(output, _repeated_deprecatedApiNames_codec);
      if (Type != global::Google.Analytics.Data.V1Alpha.MetricType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Expression);
      }
      if (CustomDefinition != false) {
        output.WriteRawTag(56);
        output.WriteBool(CustomDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ApiName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ApiName);
      }
      if (UiName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UiName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      deprecatedApiNames_.WriteTo(ref output, _repeated_deprecatedApiNames_codec);
      if (Type != global::Google.Analytics.Data.V1Alpha.MetricType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Expression);
      }
      if (CustomDefinition != false) {
        output.WriteRawTag(56);
        output.WriteBool(CustomDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApiName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiName);
      }
      if (UiName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UiName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += deprecatedApiNames_.CalculateSize(_repeated_deprecatedApiNames_codec);
      if (Type != global::Google.Analytics.Data.V1Alpha.MetricType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (CustomDefinition != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetricMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ApiName.Length != 0) {
        ApiName = other.ApiName;
      }
      if (other.UiName.Length != 0) {
        UiName = other.UiName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      deprecatedApiNames_.Add(other.deprecatedApiNames_);
      if (other.Type != global::Google.Analytics.Data.V1Alpha.MetricType.Unspecified) {
        Type = other.Type;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      if (other.CustomDefinition != false) {
        CustomDefinition = other.CustomDefinition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ApiName = input.ReadString();
            break;
          }
          case 18: {
            UiName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            deprecatedApiNames_.AddEntriesFrom(input, _repeated_deprecatedApiNames_codec);
            break;
          }
          case 40: {
            Type = (global::Google.Analytics.Data.V1Alpha.MetricType) input.ReadEnum();
            break;
          }
          case 50: {
            Expression = input.ReadString();
            break;
          }
          case 56: {
            CustomDefinition = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ApiName = input.ReadString();
            break;
          }
          case 18: {
            UiName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            deprecatedApiNames_.AddEntriesFrom(ref input, _repeated_deprecatedApiNames_codec);
            break;
          }
          case 40: {
            Type = (global::Google.Analytics.Data.V1Alpha.MetricType) input.ReadEnum();
            break;
          }
          case 50: {
            Expression = input.ReadString();
            break;
          }
          case 56: {
            CustomDefinition = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
