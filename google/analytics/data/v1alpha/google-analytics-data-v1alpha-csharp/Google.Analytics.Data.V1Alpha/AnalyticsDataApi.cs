// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/analytics/data/v1alpha/analytics_data_api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Analytics.Data.V1Alpha {

  /// <summary>Holder for reflection information generated from google/analytics/data/v1alpha/analytics_data_api.proto</summary>
  public static partial class AnalyticsDataApiReflection {

    #region Descriptor
    /// <summary>File descriptor for google/analytics/data/v1alpha/analytics_data_api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AnalyticsDataApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZnb29nbGUvYW5hbHl0aWNzL2RhdGEvdjFhbHBoYS9hbmFseXRpY3NfZGF0",
            "YV9hcGkucHJvdG8SHWdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhGihn",
            "b29nbGUvYW5hbHl0aWNzL2RhdGEvdjFhbHBoYS9kYXRhLnByb3RvGhxnb29n",
            "bGUvYXBpL2Fubm90YXRpb25zLnByb3RvGhdnb29nbGUvYXBpL2NsaWVudC5w",
            "cm90bxofZ29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xl",
            "L2FwaS9yZXNvdXJjZS5wcm90byLqAQoITWV0YWRhdGESDAoEbmFtZRgDIAEo",
            "CRJECgpkaW1lbnNpb25zGAEgAygLMjAuZ29vZ2xlLmFuYWx5dGljcy5kYXRh",
            "LnYxYWxwaGEuRGltZW5zaW9uTWV0YWRhdGESPgoHbWV0cmljcxgCIAMoCzIt",
            "Lmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLk1ldHJpY01ldGFkYXRh",
            "OkrqQUcKJWFuYWx5dGljc2RhdGEuZ29vZ2xlYXBpcy5jb20vTWV0YWRhdGES",
            "HnByb3BlcnRpZXMve3Byb3BlcnR5fS9tZXRhZGF0YSLJBQoQUnVuUmVwb3J0",
            "UmVxdWVzdBI1CgZlbnRpdHkYASABKAsyJS5nb29nbGUuYW5hbHl0aWNzLmRh",
            "dGEudjFhbHBoYS5FbnRpdHkSPAoKZGltZW5zaW9ucxgCIAMoCzIoLmdvb2ds",
            "ZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLkRpbWVuc2lvbhI2CgdtZXRyaWNz",
            "GAMgAygLMiUuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuTWV0cmlj",
            "Ej0KC2RhdGVfcmFuZ2VzGAQgAygLMiguZ29vZ2xlLmFuYWx5dGljcy5kYXRh",
            "LnYxYWxwaGEuRGF0ZVJhbmdlEg4KBm9mZnNldBgFIAEoAxINCgVsaW1pdBgG",
            "IAEoAxJNChNtZXRyaWNfYWdncmVnYXRpb25zGAcgAygOMjAuZ29vZ2xlLmFu",
            "YWx5dGljcy5kYXRhLnYxYWxwaGEuTWV0cmljQWdncmVnYXRpb24SSQoQZGlt",
            "ZW5zaW9uX2ZpbHRlchgIIAEoCzIvLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52",
            "MWFscGhhLkZpbHRlckV4cHJlc3Npb24SRgoNbWV0cmljX2ZpbHRlchgJIAEo",
            "CzIvLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLkZpbHRlckV4cHJl",
            "c3Npb24SOQoJb3JkZXJfYnlzGAogAygLMiYuZ29vZ2xlLmFuYWx5dGljcy5k",
            "YXRhLnYxYWxwaGEuT3JkZXJCeRIVCg1jdXJyZW5jeV9jb2RlGAsgASgJEj4K",
            "C2NvaG9ydF9zcGVjGAwgASgLMikuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYx",
            "YWxwaGEuQ29ob3J0U3BlYxIXCg9rZWVwX2VtcHR5X3Jvd3MYDSABKAgSHQoV",
            "cmV0dXJuX3Byb3BlcnR5X3F1b3RhGA4gASgIIpEEChFSdW5SZXBvcnRSZXNw",
            "b25zZRJJChFkaW1lbnNpb25faGVhZGVycxgLIAMoCzIuLmdvb2dsZS5hbmFs",
            "eXRpY3MuZGF0YS52MWFscGhhLkRpbWVuc2lvbkhlYWRlchJDCg5tZXRyaWNf",
            "aGVhZGVycxgBIAMoCzIrLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhh",
            "Lk1ldHJpY0hlYWRlchIwCgRyb3dzGAIgAygLMiIuZ29vZ2xlLmFuYWx5dGlj",
            "cy5kYXRhLnYxYWxwaGEuUm93EjIKBnRvdGFscxgIIAMoCzIiLmdvb2dsZS5h",
            "bmFseXRpY3MuZGF0YS52MWFscGhhLlJvdxI0CghtYXhpbXVtcxgJIAMoCzIi",
            "Lmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLlJvdxI0CghtaW5pbXVt",
            "cxgKIAMoCzIiLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLlJvdxIR",
            "Cglyb3dfY291bnQYDCABKAUSQQoIbWV0YWRhdGEYBiABKAsyLy5nb29nbGUu",
            "YW5hbHl0aWNzLmRhdGEudjFhbHBoYS5SZXNwb25zZU1ldGFEYXRhEkQKDnBy",
            "b3BlcnR5X3F1b3RhGAcgASgLMiwuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYx",
            "YWxwaGEuUHJvcGVydHlRdW90YSLbBAoVUnVuUGl2b3RSZXBvcnRSZXF1ZXN0",
            "EjUKBmVudGl0eRgBIAEoCzIlLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFs",
            "cGhhLkVudGl0eRI8CgpkaW1lbnNpb25zGAIgAygLMiguZ29vZ2xlLmFuYWx5",
            "dGljcy5kYXRhLnYxYWxwaGEuRGltZW5zaW9uEjYKB21ldHJpY3MYAyADKAsy",
            "JS5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBoYS5NZXRyaWMSSQoQZGlt",
            "ZW5zaW9uX2ZpbHRlchgEIAEoCzIvLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52",
            "MWFscGhhLkZpbHRlckV4cHJlc3Npb24SRgoNbWV0cmljX2ZpbHRlchgFIAEo",
            "CzIvLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLkZpbHRlckV4cHJl",
            "c3Npb24SNAoGcGl2b3RzGAYgAygLMiQuZ29vZ2xlLmFuYWx5dGljcy5kYXRh",
            "LnYxYWxwaGEuUGl2b3QSPQoLZGF0ZV9yYW5nZXMYByADKAsyKC5nb29nbGUu",
            "YW5hbHl0aWNzLmRhdGEudjFhbHBoYS5EYXRlUmFuZ2USFQoNY3VycmVuY3lf",
            "Y29kZRgIIAEoCRI+Cgtjb2hvcnRfc3BlYxgJIAEoCzIpLmdvb2dsZS5hbmFs",
            "eXRpY3MuZGF0YS52MWFscGhhLkNvaG9ydFNwZWMSFwoPa2VlcF9lbXB0eV9y",
            "b3dzGAogASgIEh0KFXJldHVybl9wcm9wZXJ0eV9xdW90YRgLIAEoCCLeAwoW",
            "UnVuUGl2b3RSZXBvcnRSZXNwb25zZRJBCg1waXZvdF9oZWFkZXJzGAEgAygL",
            "MiouZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuUGl2b3RIZWFkZXIS",
            "SQoRZGltZW5zaW9uX2hlYWRlcnMYByADKAsyLi5nb29nbGUuYW5hbHl0aWNz",
            "LmRhdGEudjFhbHBoYS5EaW1lbnNpb25IZWFkZXISQwoObWV0cmljX2hlYWRl",
            "cnMYAiADKAsyKy5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBoYS5NZXRy",
            "aWNIZWFkZXISMAoEcm93cxgDIAMoCzIiLmdvb2dsZS5hbmFseXRpY3MuZGF0",
            "YS52MWFscGhhLlJvdxI2CgphZ2dyZWdhdGVzGAQgAygLMiIuZ29vZ2xlLmFu",
            "YWx5dGljcy5kYXRhLnYxYWxwaGEuUm93EkEKCG1ldGFkYXRhGAUgASgLMi8u",
            "Z29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuUmVzcG9uc2VNZXRhRGF0",
            "YRJECg5wcm9wZXJ0eV9xdW90YRgGIAEoCzIsLmdvb2dsZS5hbmFseXRpY3Mu",
            "ZGF0YS52MWFscGhhLlByb3BlcnR5UXVvdGEikgEKFkJhdGNoUnVuUmVwb3J0",
            "c1JlcXVlc3QSNQoGZW50aXR5GAEgASgLMiUuZ29vZ2xlLmFuYWx5dGljcy5k",
            "YXRhLnYxYWxwaGEuRW50aXR5EkEKCHJlcXVlc3RzGAIgAygLMi8uZ29vZ2xl",
            "LmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuUnVuUmVwb3J0UmVxdWVzdCJcChdC",
            "YXRjaFJ1blJlcG9ydHNSZXNwb25zZRJBCgdyZXBvcnRzGAEgAygLMjAuZ29v",
            "Z2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuUnVuUmVwb3J0UmVzcG9uc2Ui",
            "nAEKG0JhdGNoUnVuUGl2b3RSZXBvcnRzUmVxdWVzdBI1CgZlbnRpdHkYASAB",
            "KAsyJS5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBoYS5FbnRpdHkSRgoI",
            "cmVxdWVzdHMYAiADKAsyNC5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBo",
            "YS5SdW5QaXZvdFJlcG9ydFJlcXVlc3QibAocQmF0Y2hSdW5QaXZvdFJlcG9y",
            "dHNSZXNwb25zZRJMCg1waXZvdF9yZXBvcnRzGAEgAygLMjUuZ29vZ2xlLmFu",
            "YWx5dGljcy5kYXRhLnYxYWxwaGEuUnVuUGl2b3RSZXBvcnRSZXNwb25zZSJR",
            "ChJHZXRNZXRhZGF0YVJlcXVlc3QSOwoEbmFtZRgBIAEoCUIt4EEC+kEnCiVh",
            "bmFseXRpY3NkYXRhLmdvb2dsZWFwaXMuY29tL01ldGFkYXRhIu0DChhSdW5S",
            "ZWFsdGltZVJlcG9ydFJlcXVlc3QSEAoIcHJvcGVydHkYASABKAkSPAoKZGlt",
            "ZW5zaW9ucxgCIAMoCzIoLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhh",
            "LkRpbWVuc2lvbhI2CgdtZXRyaWNzGAMgAygLMiUuZ29vZ2xlLmFuYWx5dGlj",
            "cy5kYXRhLnYxYWxwaGEuTWV0cmljEg0KBWxpbWl0GAQgASgDEkkKEGRpbWVu",
            "c2lvbl9maWx0ZXIYBSABKAsyLy5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFh",
            "bHBoYS5GaWx0ZXJFeHByZXNzaW9uEkYKDW1ldHJpY19maWx0ZXIYBiABKAsy",
            "Ly5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBoYS5GaWx0ZXJFeHByZXNz",
            "aW9uEk0KE21ldHJpY19hZ2dyZWdhdGlvbnMYByADKA4yMC5nb29nbGUuYW5h",
            "bHl0aWNzLmRhdGEudjFhbHBoYS5NZXRyaWNBZ2dyZWdhdGlvbhI5CglvcmRl",
            "cl9ieXMYCCADKAsyJi5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBoYS5P",
            "cmRlckJ5Eh0KFXJldHVybl9wcm9wZXJ0eV9xdW90YRgJIAEoCCLWAwoZUnVu",
            "UmVhbHRpbWVSZXBvcnRSZXNwb25zZRJJChFkaW1lbnNpb25faGVhZGVycxgB",
            "IAMoCzIuLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLkRpbWVuc2lv",
            "bkhlYWRlchJDCg5tZXRyaWNfaGVhZGVycxgCIAMoCzIrLmdvb2dsZS5hbmFs",
            "eXRpY3MuZGF0YS52MWFscGhhLk1ldHJpY0hlYWRlchIwCgRyb3dzGAMgAygL",
            "MiIuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuUm93EjIKBnRvdGFs",
            "cxgEIAMoCzIiLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLlJvdxI0",
            "CghtYXhpbXVtcxgFIAMoCzIiLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFs",
            "cGhhLlJvdxI0CghtaW5pbXVtcxgGIAMoCzIiLmdvb2dsZS5hbmFseXRpY3Mu",
            "ZGF0YS52MWFscGhhLlJvdxIRCglyb3dfY291bnQYByABKAUSRAoOcHJvcGVy",
            "dHlfcXVvdGEYCCABKAsyLC5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBo",
            "YS5Qcm9wZXJ0eVF1b3RhMpYJChJBbHBoYUFuYWx5dGljc0RhdGESjQEKCVJ1",
            "blJlcG9ydBIvLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLlJ1blJl",
            "cG9ydFJlcXVlc3QaMC5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBoYS5S",
            "dW5SZXBvcnRSZXNwb25zZSIdgtPkkwIXIhIvdjFhbHBoYTpydW5SZXBvcnQ6",
            "ASoSoQEKDlJ1blBpdm90UmVwb3J0EjQuZ29vZ2xlLmFuYWx5dGljcy5kYXRh",
            "LnYxYWxwaGEuUnVuUGl2b3RSZXBvcnRSZXF1ZXN0GjUuZ29vZ2xlLmFuYWx5",
            "dGljcy5kYXRhLnYxYWxwaGEuUnVuUGl2b3RSZXBvcnRSZXNwb25zZSIigtPk",
            "kwIcIhcvdjFhbHBoYTpydW5QaXZvdFJlcG9ydDoBKhKlAQoPQmF0Y2hSdW5S",
            "ZXBvcnRzEjUuZ29vZ2xlLmFuYWx5dGljcy5kYXRhLnYxYWxwaGEuQmF0Y2hS",
            "dW5SZXBvcnRzUmVxdWVzdBo2Lmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFs",
            "cGhhLkJhdGNoUnVuUmVwb3J0c1Jlc3BvbnNlIiOC0+STAh0iGC92MWFscGhh",
            "OmJhdGNoUnVuUmVwb3J0czoBKhK5AQoUQmF0Y2hSdW5QaXZvdFJlcG9ydHMS",
            "Oi5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBoYS5CYXRjaFJ1blBpdm90",
            "UmVwb3J0c1JlcXVlc3QaOy5nb29nbGUuYW5hbHl0aWNzLmRhdGEudjFhbHBo",
            "YS5CYXRjaFJ1blBpdm90UmVwb3J0c1Jlc3BvbnNlIiiC0+STAiIiHS92MWFs",
            "cGhhOmJhdGNoUnVuUGl2b3RSZXBvcnRzOgEqEp8BCgtHZXRNZXRhZGF0YRIx",
            "Lmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLkdldE1ldGFkYXRhUmVx",
            "dWVzdBonLmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLk1ldGFkYXRh",
            "IjSC0+STAicSJS92MWFscGhhL3tuYW1lPXByb3BlcnRpZXMvKi9tZXRhZGF0",
            "YX3aQQRuYW1lEsUBChFSdW5SZWFsdGltZVJlcG9ydBI3Lmdvb2dsZS5hbmFs",
            "eXRpY3MuZGF0YS52MWFscGhhLlJ1blJlYWx0aW1lUmVwb3J0UmVxdWVzdBo4",
            "Lmdvb2dsZS5hbmFseXRpY3MuZGF0YS52MWFscGhhLlJ1blJlYWx0aW1lUmVw",
            "b3J0UmVzcG9uc2UiPYLT5JMCNyIyL3YxYWxwaGEve3Byb3BlcnR5PXByb3Bl",
            "cnRpZXMvKn06cnVuUmVhbHRpbWVSZXBvcnQ6ASoafspBHGFuYWx5dGljc2Rh",
            "dGEuZ29vZ2xlYXBpcy5jb23SQVxodHRwczovL3d3dy5nb29nbGVhcGlzLmNv",
            "bS9hdXRoL2FuYWx5dGljcyxodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9h",
            "dXRoL2FuYWx5dGljcy5yZWFkb25seUJ/CiFjb20uZ29vZ2xlLmFuYWx5dGlj",
            "cy5kYXRhLnYxYWxwaGFCFUFuYWx5dGljc0RhdGFBcGlQcm90b1ABWkFnb29n",
            "bGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2FuYWx5dGljcy9k",
            "YXRhL3YxYWxwaGE7ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Analytics.Data.V1Alpha.DataReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.Metadata), global::Google.Analytics.Data.V1Alpha.Metadata.Parser, new[]{ "Name", "Dimensions", "Metrics" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.RunReportRequest), global::Google.Analytics.Data.V1Alpha.RunReportRequest.Parser, new[]{ "Entity", "Dimensions", "Metrics", "DateRanges", "Offset", "Limit", "MetricAggregations", "DimensionFilter", "MetricFilter", "OrderBys", "CurrencyCode", "CohortSpec", "KeepEmptyRows", "ReturnPropertyQuota" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.RunReportResponse), global::Google.Analytics.Data.V1Alpha.RunReportResponse.Parser, new[]{ "DimensionHeaders", "MetricHeaders", "Rows", "Totals", "Maximums", "Minimums", "RowCount", "Metadata", "PropertyQuota" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.RunPivotReportRequest), global::Google.Analytics.Data.V1Alpha.RunPivotReportRequest.Parser, new[]{ "Entity", "Dimensions", "Metrics", "DimensionFilter", "MetricFilter", "Pivots", "DateRanges", "CurrencyCode", "CohortSpec", "KeepEmptyRows", "ReturnPropertyQuota" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.RunPivotReportResponse), global::Google.Analytics.Data.V1Alpha.RunPivotReportResponse.Parser, new[]{ "PivotHeaders", "DimensionHeaders", "MetricHeaders", "Rows", "Aggregates", "Metadata", "PropertyQuota" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.BatchRunReportsRequest), global::Google.Analytics.Data.V1Alpha.BatchRunReportsRequest.Parser, new[]{ "Entity", "Requests" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.BatchRunReportsResponse), global::Google.Analytics.Data.V1Alpha.BatchRunReportsResponse.Parser, new[]{ "Reports" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.BatchRunPivotReportsRequest), global::Google.Analytics.Data.V1Alpha.BatchRunPivotReportsRequest.Parser, new[]{ "Entity", "Requests" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.BatchRunPivotReportsResponse), global::Google.Analytics.Data.V1Alpha.BatchRunPivotReportsResponse.Parser, new[]{ "PivotReports" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.GetMetadataRequest), global::Google.Analytics.Data.V1Alpha.GetMetadataRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.RunRealtimeReportRequest), global::Google.Analytics.Data.V1Alpha.RunRealtimeReportRequest.Parser, new[]{ "Property", "Dimensions", "Metrics", "Limit", "DimensionFilter", "MetricFilter", "MetricAggregations", "OrderBys", "ReturnPropertyQuota" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Analytics.Data.V1Alpha.RunRealtimeReportResponse), global::Google.Analytics.Data.V1Alpha.RunRealtimeReportResponse.Parser, new[]{ "DimensionHeaders", "MetricHeaders", "Rows", "Totals", "Maximums", "Minimums", "RowCount", "PropertyQuota" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The dimensions and metrics currently accepted in reporting methods.
  /// </summary>
  public sealed partial class Metadata : pb::IMessage<Metadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Metadata> _parser = new pb::MessageParser<Metadata>(() => new Metadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Metadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.AnalyticsDataApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata(Metadata other) : this() {
      name_ = other.name_;
      dimensions_ = other.dimensions_.Clone();
      metrics_ = other.metrics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata Clone() {
      return new Metadata(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// Resource name of this metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dimensions" field.</summary>
    public const int DimensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.DimensionMetadata> _repeated_dimensions_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Analytics.Data.V1Alpha.DimensionMetadata.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionMetadata> dimensions_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionMetadata>();
    /// <summary>
    /// The dimension descriptions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionMetadata> Dimensions {
      get { return dimensions_; }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.MetricMetadata> _repeated_metrics_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Analytics.Data.V1Alpha.MetricMetadata.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricMetadata> metrics_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricMetadata>();
    /// <summary>
    /// The metric descriptions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricMetadata> Metrics {
      get { return metrics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Metadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Metadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!dimensions_.Equals(other.dimensions_)) return false;
      if(!metrics_.Equals(other.metrics_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= dimensions_.GetHashCode();
      hash ^= metrics_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dimensions_.WriteTo(output, _repeated_dimensions_codec);
      metrics_.WriteTo(output, _repeated_metrics_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dimensions_.WriteTo(ref output, _repeated_dimensions_codec);
      metrics_.WriteTo(ref output, _repeated_metrics_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += dimensions_.CalculateSize(_repeated_dimensions_codec);
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Metadata other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      dimensions_.Add(other.dimensions_);
      metrics_.Add(other.metrics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dimensions_.AddEntriesFrom(input, _repeated_dimensions_codec);
            break;
          }
          case 18: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dimensions_.AddEntriesFrom(ref input, _repeated_dimensions_codec);
            break;
          }
          case 18: {
            metrics_.AddEntriesFrom(ref input, _repeated_metrics_codec);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request to generate a report.
  /// </summary>
  public sealed partial class RunReportRequest : pb::IMessage<RunReportRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RunReportRequest> _parser = new pb::MessageParser<RunReportRequest>(() => new RunReportRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunReportRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.AnalyticsDataApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunReportRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunReportRequest(RunReportRequest other) : this() {
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      dimensions_ = other.dimensions_.Clone();
      metrics_ = other.metrics_.Clone();
      dateRanges_ = other.dateRanges_.Clone();
      offset_ = other.offset_;
      limit_ = other.limit_;
      metricAggregations_ = other.metricAggregations_.Clone();
      dimensionFilter_ = other.dimensionFilter_ != null ? other.dimensionFilter_.Clone() : null;
      metricFilter_ = other.metricFilter_ != null ? other.metricFilter_.Clone() : null;
      orderBys_ = other.orderBys_.Clone();
      currencyCode_ = other.currencyCode_;
      cohortSpec_ = other.cohortSpec_ != null ? other.cohortSpec_.Clone() : null;
      keepEmptyRows_ = other.keepEmptyRows_;
      returnPropertyQuota_ = other.returnPropertyQuota_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunReportRequest Clone() {
      return new RunReportRequest(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::Google.Analytics.Data.V1Alpha.Entity entity_;
    /// <summary>
    /// A property whose events are tracked. Within a batch request, this entity
    /// should either be unspecified or consistent with the batch-level entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.Entity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "dimensions" field.</summary>
    public const int DimensionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Dimension> _repeated_dimensions_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Analytics.Data.V1Alpha.Dimension.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Dimension> dimensions_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Dimension>();
    /// <summary>
    /// The dimensions requested and displayed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Dimension> Dimensions {
      get { return dimensions_; }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Metric> _repeated_metrics_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Analytics.Data.V1Alpha.Metric.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Metric> metrics_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Metric>();
    /// <summary>
    /// The metrics requested and displayed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Metric> Metrics {
      get { return metrics_; }
    }

    /// <summary>Field number for the "date_ranges" field.</summary>
    public const int DateRangesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.DateRange> _repeated_dateRanges_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Analytics.Data.V1Alpha.DateRange.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DateRange> dateRanges_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DateRange>();
    /// <summary>
    /// Date ranges of data to read. If multiple date ranges are requested, each
    /// response row will contain a zero based date range index. If two date
    /// ranges overlap, the event data for the overlapping days is included in the
    /// response rows for both date ranges. In a cohort request, this `dateRanges`
    /// must be unspecified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DateRange> DateRanges {
      get { return dateRanges_; }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 5;
    private long offset_;
    /// <summary>
    /// The row count of the start row. The first row is counted as row 0.
    ///
    /// To learn more about this pagination parameter, see
    /// [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 6;
    private long limit_;
    /// <summary>
    /// The number of rows to return. If unspecified, 10 rows are returned. If
    /// -1, all rows are returned.
    ///
    /// To learn more about this pagination parameter, see
    /// [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "metric_aggregations" field.</summary>
    public const int MetricAggregationsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.MetricAggregation> _repeated_metricAggregations_codec
        = pb::FieldCodec.ForEnum(58, x => (int) x, x => (global::Google.Analytics.Data.V1Alpha.MetricAggregation) x);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricAggregation> metricAggregations_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricAggregation>();
    /// <summary>
    /// Aggregation of metrics. Aggregated metric values will be shown in rows
    /// where the dimension_values are set to "RESERVED_(MetricAggregation)".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricAggregation> MetricAggregations {
      get { return metricAggregations_; }
    }

    /// <summary>Field number for the "dimension_filter" field.</summary>
    public const int DimensionFilterFieldNumber = 8;
    private global::Google.Analytics.Data.V1Alpha.FilterExpression dimensionFilter_;
    /// <summary>
    /// The filter clause of dimensions. Dimensions must be requested to be used in
    /// this filter. Metrics cannot be used in this filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.FilterExpression DimensionFilter {
      get { return dimensionFilter_; }
      set {
        dimensionFilter_ = value;
      }
    }

    /// <summary>Field number for the "metric_filter" field.</summary>
    public const int MetricFilterFieldNumber = 9;
    private global::Google.Analytics.Data.V1Alpha.FilterExpression metricFilter_;
    /// <summary>
    /// The filter clause of metrics. Applied at post aggregation phase, similar to
    /// SQL having-clause. Metrics must be requested to be used in this filter.
    /// Dimensions cannot be used in this filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.FilterExpression MetricFilter {
      get { return metricFilter_; }
      set {
        metricFilter_ = value;
      }
    }

    /// <summary>Field number for the "order_bys" field.</summary>
    public const int OrderBysFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.OrderBy> _repeated_orderBys_codec
        = pb::FieldCodec.ForMessage(82, global::Google.Analytics.Data.V1Alpha.OrderBy.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.OrderBy> orderBys_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.OrderBy>();
    /// <summary>
    /// Specifies how rows are ordered in the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.OrderBy> OrderBys {
      get { return orderBys_; }
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 11;
    private string currencyCode_ = "";
    /// <summary>
    /// A currency code in ISO4217 format, such as "AED", "USD", "JPY".
    /// If the field is empty, the report uses the entity's default currency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cohort_spec" field.</summary>
    public const int CohortSpecFieldNumber = 12;
    private global::Google.Analytics.Data.V1Alpha.CohortSpec cohortSpec_;
    /// <summary>
    /// Cohort group associated with this request. If there is a cohort group
    /// in the request the 'cohort' dimension must be present.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.CohortSpec CohortSpec {
      get { return cohortSpec_; }
      set {
        cohortSpec_ = value;
      }
    }

    /// <summary>Field number for the "keep_empty_rows" field.</summary>
    public const int KeepEmptyRowsFieldNumber = 13;
    private bool keepEmptyRows_;
    /// <summary>
    /// If false or unspecified, each row with all metrics equal to 0 will not be
    /// returned. If true, these rows will be returned if they are not separately
    /// removed by a filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool KeepEmptyRows {
      get { return keepEmptyRows_; }
      set {
        keepEmptyRows_ = value;
      }
    }

    /// <summary>Field number for the "return_property_quota" field.</summary>
    public const int ReturnPropertyQuotaFieldNumber = 14;
    private bool returnPropertyQuota_;
    /// <summary>
    /// Toggles whether to return the current state of this Analytics Property's
    /// quota. Quota is returned in [PropertyQuota](#PropertyQuota).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReturnPropertyQuota {
      get { return returnPropertyQuota_; }
      set {
        returnPropertyQuota_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunReportRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunReportRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if(!dimensions_.Equals(other.dimensions_)) return false;
      if(!metrics_.Equals(other.metrics_)) return false;
      if(!dateRanges_.Equals(other.dateRanges_)) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if(!metricAggregations_.Equals(other.metricAggregations_)) return false;
      if (!object.Equals(DimensionFilter, other.DimensionFilter)) return false;
      if (!object.Equals(MetricFilter, other.MetricFilter)) return false;
      if(!orderBys_.Equals(other.orderBys_)) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (!object.Equals(CohortSpec, other.CohortSpec)) return false;
      if (KeepEmptyRows != other.KeepEmptyRows) return false;
      if (ReturnPropertyQuota != other.ReturnPropertyQuota) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      hash ^= dimensions_.GetHashCode();
      hash ^= metrics_.GetHashCode();
      hash ^= dateRanges_.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      hash ^= metricAggregations_.GetHashCode();
      if (dimensionFilter_ != null) hash ^= DimensionFilter.GetHashCode();
      if (metricFilter_ != null) hash ^= MetricFilter.GetHashCode();
      hash ^= orderBys_.GetHashCode();
      if (CurrencyCode.Length != 0) hash ^= CurrencyCode.GetHashCode();
      if (cohortSpec_ != null) hash ^= CohortSpec.GetHashCode();
      if (KeepEmptyRows != false) hash ^= KeepEmptyRows.GetHashCode();
      if (ReturnPropertyQuota != false) hash ^= ReturnPropertyQuota.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      dimensions_.WriteTo(output, _repeated_dimensions_codec);
      metrics_.WriteTo(output, _repeated_metrics_codec);
      dateRanges_.WriteTo(output, _repeated_dateRanges_codec);
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Limit);
      }
      metricAggregations_.WriteTo(output, _repeated_metricAggregations_codec);
      if (dimensionFilter_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DimensionFilter);
      }
      if (metricFilter_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MetricFilter);
      }
      orderBys_.WriteTo(output, _repeated_orderBys_codec);
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CurrencyCode);
      }
      if (cohortSpec_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(CohortSpec);
      }
      if (KeepEmptyRows != false) {
        output.WriteRawTag(104);
        output.WriteBool(KeepEmptyRows);
      }
      if (ReturnPropertyQuota != false) {
        output.WriteRawTag(112);
        output.WriteBool(ReturnPropertyQuota);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      dimensions_.WriteTo(ref output, _repeated_dimensions_codec);
      metrics_.WriteTo(ref output, _repeated_metrics_codec);
      dateRanges_.WriteTo(ref output, _repeated_dateRanges_codec);
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Limit);
      }
      metricAggregations_.WriteTo(ref output, _repeated_metricAggregations_codec);
      if (dimensionFilter_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DimensionFilter);
      }
      if (metricFilter_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MetricFilter);
      }
      orderBys_.WriteTo(ref output, _repeated_orderBys_codec);
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CurrencyCode);
      }
      if (cohortSpec_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(CohortSpec);
      }
      if (KeepEmptyRows != false) {
        output.WriteRawTag(104);
        output.WriteBool(KeepEmptyRows);
      }
      if (ReturnPropertyQuota != false) {
        output.WriteRawTag(112);
        output.WriteBool(ReturnPropertyQuota);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      size += dimensions_.CalculateSize(_repeated_dimensions_codec);
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      size += dateRanges_.CalculateSize(_repeated_dateRanges_codec);
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      size += metricAggregations_.CalculateSize(_repeated_metricAggregations_codec);
      if (dimensionFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DimensionFilter);
      }
      if (metricFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetricFilter);
      }
      size += orderBys_.CalculateSize(_repeated_orderBys_codec);
      if (CurrencyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (cohortSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CohortSpec);
      }
      if (KeepEmptyRows != false) {
        size += 1 + 1;
      }
      if (ReturnPropertyQuota != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunReportRequest other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::Google.Analytics.Data.V1Alpha.Entity();
        }
        Entity.MergeFrom(other.Entity);
      }
      dimensions_.Add(other.dimensions_);
      metrics_.Add(other.metrics_);
      dateRanges_.Add(other.dateRanges_);
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      metricAggregations_.Add(other.metricAggregations_);
      if (other.dimensionFilter_ != null) {
        if (dimensionFilter_ == null) {
          DimensionFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
        }
        DimensionFilter.MergeFrom(other.DimensionFilter);
      }
      if (other.metricFilter_ != null) {
        if (metricFilter_ == null) {
          MetricFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
        }
        MetricFilter.MergeFrom(other.MetricFilter);
      }
      orderBys_.Add(other.orderBys_);
      if (other.CurrencyCode.Length != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.cohortSpec_ != null) {
        if (cohortSpec_ == null) {
          CohortSpec = new global::Google.Analytics.Data.V1Alpha.CohortSpec();
        }
        CohortSpec.MergeFrom(other.CohortSpec);
      }
      if (other.KeepEmptyRows != false) {
        KeepEmptyRows = other.KeepEmptyRows;
      }
      if (other.ReturnPropertyQuota != false) {
        ReturnPropertyQuota = other.ReturnPropertyQuota;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::Google.Analytics.Data.V1Alpha.Entity();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 18: {
            dimensions_.AddEntriesFrom(input, _repeated_dimensions_codec);
            break;
          }
          case 26: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
          case 34: {
            dateRanges_.AddEntriesFrom(input, _repeated_dateRanges_codec);
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
          case 48: {
            Limit = input.ReadInt64();
            break;
          }
          case 58:
          case 56: {
            metricAggregations_.AddEntriesFrom(input, _repeated_metricAggregations_codec);
            break;
          }
          case 66: {
            if (dimensionFilter_ == null) {
              DimensionFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            }
            input.ReadMessage(DimensionFilter);
            break;
          }
          case 74: {
            if (metricFilter_ == null) {
              MetricFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            }
            input.ReadMessage(MetricFilter);
            break;
          }
          case 82: {
            orderBys_.AddEntriesFrom(input, _repeated_orderBys_codec);
            break;
          }
          case 90: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 98: {
            if (cohortSpec_ == null) {
              CohortSpec = new global::Google.Analytics.Data.V1Alpha.CohortSpec();
            }
            input.ReadMessage(CohortSpec);
            break;
          }
          case 104: {
            KeepEmptyRows = input.ReadBool();
            break;
          }
          case 112: {
            ReturnPropertyQuota = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::Google.Analytics.Data.V1Alpha.Entity();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 18: {
            dimensions_.AddEntriesFrom(ref input, _repeated_dimensions_codec);
            break;
          }
          case 26: {
            metrics_.AddEntriesFrom(ref input, _repeated_metrics_codec);
            break;
          }
          case 34: {
            dateRanges_.AddEntriesFrom(ref input, _repeated_dateRanges_codec);
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
          case 48: {
            Limit = input.ReadInt64();
            break;
          }
          case 58:
          case 56: {
            metricAggregations_.AddEntriesFrom(ref input, _repeated_metricAggregations_codec);
            break;
          }
          case 66: {
            if (dimensionFilter_ == null) {
              DimensionFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            }
            input.ReadMessage(DimensionFilter);
            break;
          }
          case 74: {
            if (metricFilter_ == null) {
              MetricFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            }
            input.ReadMessage(MetricFilter);
            break;
          }
          case 82: {
            orderBys_.AddEntriesFrom(ref input, _repeated_orderBys_codec);
            break;
          }
          case 90: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 98: {
            if (cohortSpec_ == null) {
              CohortSpec = new global::Google.Analytics.Data.V1Alpha.CohortSpec();
            }
            input.ReadMessage(CohortSpec);
            break;
          }
          case 104: {
            KeepEmptyRows = input.ReadBool();
            break;
          }
          case 112: {
            ReturnPropertyQuota = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response report table corresponding to a request.
  /// </summary>
  public sealed partial class RunReportResponse : pb::IMessage<RunReportResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RunReportResponse> _parser = new pb::MessageParser<RunReportResponse>(() => new RunReportResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunReportResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.AnalyticsDataApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunReportResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunReportResponse(RunReportResponse other) : this() {
      dimensionHeaders_ = other.dimensionHeaders_.Clone();
      metricHeaders_ = other.metricHeaders_.Clone();
      rows_ = other.rows_.Clone();
      totals_ = other.totals_.Clone();
      maximums_ = other.maximums_.Clone();
      minimums_ = other.minimums_.Clone();
      rowCount_ = other.rowCount_;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      propertyQuota_ = other.propertyQuota_ != null ? other.propertyQuota_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunReportResponse Clone() {
      return new RunReportResponse(this);
    }

    /// <summary>Field number for the "dimension_headers" field.</summary>
    public const int DimensionHeadersFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.DimensionHeader> _repeated_dimensionHeaders_codec
        = pb::FieldCodec.ForMessage(90, global::Google.Analytics.Data.V1Alpha.DimensionHeader.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionHeader> dimensionHeaders_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionHeader>();
    /// <summary>
    /// Describes dimension columns. The number of DimensionHeaders and ordering of
    /// DimensionHeaders matches the dimensions present in rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionHeader> DimensionHeaders {
      get { return dimensionHeaders_; }
    }

    /// <summary>Field number for the "metric_headers" field.</summary>
    public const int MetricHeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.MetricHeader> _repeated_metricHeaders_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Analytics.Data.V1Alpha.MetricHeader.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricHeader> metricHeaders_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricHeader>();
    /// <summary>
    /// Describes metric columns. The number of MetricHeaders and ordering of
    /// MetricHeaders matches the metrics present in rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricHeader> MetricHeaders {
      get { return metricHeaders_; }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Row> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Analytics.Data.V1Alpha.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> rows_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row>();
    /// <summary>
    /// Rows of dimension value combinations and metric values in the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> Rows {
      get { return rows_; }
    }

    /// <summary>Field number for the "totals" field.</summary>
    public const int TotalsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Row> _repeated_totals_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Analytics.Data.V1Alpha.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> totals_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row>();
    /// <summary>
    /// If requested, the totaled values of metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> Totals {
      get { return totals_; }
    }

    /// <summary>Field number for the "maximums" field.</summary>
    public const int MaximumsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Row> _repeated_maximums_codec
        = pb::FieldCodec.ForMessage(74, global::Google.Analytics.Data.V1Alpha.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> maximums_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row>();
    /// <summary>
    /// If requested, the maximum values of metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> Maximums {
      get { return maximums_; }
    }

    /// <summary>Field number for the "minimums" field.</summary>
    public const int MinimumsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Row> _repeated_minimums_codec
        = pb::FieldCodec.ForMessage(82, global::Google.Analytics.Data.V1Alpha.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> minimums_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row>();
    /// <summary>
    /// If requested, the minimum values of metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> Minimums {
      get { return minimums_; }
    }

    /// <summary>Field number for the "row_count" field.</summary>
    public const int RowCountFieldNumber = 12;
    private int rowCount_;
    /// <summary>
    /// The total number of rows in the query result, regardless of the number of
    /// rows returned in the response. For example if a query returns 175 rows and
    /// includes limit = 50 in the API request, the response will contain row_count
    /// = 175 but only 50 rows.
    ///
    /// To learn more about this pagination parameter, see
    /// [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RowCount {
      get { return rowCount_; }
      set {
        rowCount_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 6;
    private global::Google.Analytics.Data.V1Alpha.ResponseMetaData metadata_;
    /// <summary>
    /// Metadata for the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.ResponseMetaData Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "property_quota" field.</summary>
    public const int PropertyQuotaFieldNumber = 7;
    private global::Google.Analytics.Data.V1Alpha.PropertyQuota propertyQuota_;
    /// <summary>
    /// This Analytics Property's quota state including this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.PropertyQuota PropertyQuota {
      get { return propertyQuota_; }
      set {
        propertyQuota_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunReportResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunReportResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dimensionHeaders_.Equals(other.dimensionHeaders_)) return false;
      if(!metricHeaders_.Equals(other.metricHeaders_)) return false;
      if(!rows_.Equals(other.rows_)) return false;
      if(!totals_.Equals(other.totals_)) return false;
      if(!maximums_.Equals(other.maximums_)) return false;
      if(!minimums_.Equals(other.minimums_)) return false;
      if (RowCount != other.RowCount) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(PropertyQuota, other.PropertyQuota)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dimensionHeaders_.GetHashCode();
      hash ^= metricHeaders_.GetHashCode();
      hash ^= rows_.GetHashCode();
      hash ^= totals_.GetHashCode();
      hash ^= maximums_.GetHashCode();
      hash ^= minimums_.GetHashCode();
      if (RowCount != 0) hash ^= RowCount.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (propertyQuota_ != null) hash ^= PropertyQuota.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      metricHeaders_.WriteTo(output, _repeated_metricHeaders_codec);
      rows_.WriteTo(output, _repeated_rows_codec);
      if (metadata_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Metadata);
      }
      if (propertyQuota_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PropertyQuota);
      }
      totals_.WriteTo(output, _repeated_totals_codec);
      maximums_.WriteTo(output, _repeated_maximums_codec);
      minimums_.WriteTo(output, _repeated_minimums_codec);
      dimensionHeaders_.WriteTo(output, _repeated_dimensionHeaders_codec);
      if (RowCount != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RowCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      metricHeaders_.WriteTo(ref output, _repeated_metricHeaders_codec);
      rows_.WriteTo(ref output, _repeated_rows_codec);
      if (metadata_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Metadata);
      }
      if (propertyQuota_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PropertyQuota);
      }
      totals_.WriteTo(ref output, _repeated_totals_codec);
      maximums_.WriteTo(ref output, _repeated_maximums_codec);
      minimums_.WriteTo(ref output, _repeated_minimums_codec);
      dimensionHeaders_.WriteTo(ref output, _repeated_dimensionHeaders_codec);
      if (RowCount != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RowCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dimensionHeaders_.CalculateSize(_repeated_dimensionHeaders_codec);
      size += metricHeaders_.CalculateSize(_repeated_metricHeaders_codec);
      size += rows_.CalculateSize(_repeated_rows_codec);
      size += totals_.CalculateSize(_repeated_totals_codec);
      size += maximums_.CalculateSize(_repeated_maximums_codec);
      size += minimums_.CalculateSize(_repeated_minimums_codec);
      if (RowCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowCount);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (propertyQuota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PropertyQuota);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunReportResponse other) {
      if (other == null) {
        return;
      }
      dimensionHeaders_.Add(other.dimensionHeaders_);
      metricHeaders_.Add(other.metricHeaders_);
      rows_.Add(other.rows_);
      totals_.Add(other.totals_);
      maximums_.Add(other.maximums_);
      minimums_.Add(other.minimums_);
      if (other.RowCount != 0) {
        RowCount = other.RowCount;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Google.Analytics.Data.V1Alpha.ResponseMetaData();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.propertyQuota_ != null) {
        if (propertyQuota_ == null) {
          PropertyQuota = new global::Google.Analytics.Data.V1Alpha.PropertyQuota();
        }
        PropertyQuota.MergeFrom(other.PropertyQuota);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            metricHeaders_.AddEntriesFrom(input, _repeated_metricHeaders_codec);
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
          case 50: {
            if (metadata_ == null) {
              Metadata = new global::Google.Analytics.Data.V1Alpha.ResponseMetaData();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 58: {
            if (propertyQuota_ == null) {
              PropertyQuota = new global::Google.Analytics.Data.V1Alpha.PropertyQuota();
            }
            input.ReadMessage(PropertyQuota);
            break;
          }
          case 66: {
            totals_.AddEntriesFrom(input, _repeated_totals_codec);
            break;
          }
          case 74: {
            maximums_.AddEntriesFrom(input, _repeated_maximums_codec);
            break;
          }
          case 82: {
            minimums_.AddEntriesFrom(input, _repeated_minimums_codec);
            break;
          }
          case 90: {
            dimensionHeaders_.AddEntriesFrom(input, _repeated_dimensionHeaders_codec);
            break;
          }
          case 96: {
            RowCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            metricHeaders_.AddEntriesFrom(ref input, _repeated_metricHeaders_codec);
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(ref input, _repeated_rows_codec);
            break;
          }
          case 50: {
            if (metadata_ == null) {
              Metadata = new global::Google.Analytics.Data.V1Alpha.ResponseMetaData();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 58: {
            if (propertyQuota_ == null) {
              PropertyQuota = new global::Google.Analytics.Data.V1Alpha.PropertyQuota();
            }
            input.ReadMessage(PropertyQuota);
            break;
          }
          case 66: {
            totals_.AddEntriesFrom(ref input, _repeated_totals_codec);
            break;
          }
          case 74: {
            maximums_.AddEntriesFrom(ref input, _repeated_maximums_codec);
            break;
          }
          case 82: {
            minimums_.AddEntriesFrom(ref input, _repeated_minimums_codec);
            break;
          }
          case 90: {
            dimensionHeaders_.AddEntriesFrom(ref input, _repeated_dimensionHeaders_codec);
            break;
          }
          case 96: {
            RowCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request to generate a pivot report.
  /// </summary>
  public sealed partial class RunPivotReportRequest : pb::IMessage<RunPivotReportRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RunPivotReportRequest> _parser = new pb::MessageParser<RunPivotReportRequest>(() => new RunPivotReportRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunPivotReportRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.AnalyticsDataApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunPivotReportRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunPivotReportRequest(RunPivotReportRequest other) : this() {
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      dimensions_ = other.dimensions_.Clone();
      metrics_ = other.metrics_.Clone();
      dimensionFilter_ = other.dimensionFilter_ != null ? other.dimensionFilter_.Clone() : null;
      metricFilter_ = other.metricFilter_ != null ? other.metricFilter_.Clone() : null;
      pivots_ = other.pivots_.Clone();
      dateRanges_ = other.dateRanges_.Clone();
      currencyCode_ = other.currencyCode_;
      cohortSpec_ = other.cohortSpec_ != null ? other.cohortSpec_.Clone() : null;
      keepEmptyRows_ = other.keepEmptyRows_;
      returnPropertyQuota_ = other.returnPropertyQuota_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunPivotReportRequest Clone() {
      return new RunPivotReportRequest(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::Google.Analytics.Data.V1Alpha.Entity entity_;
    /// <summary>
    /// A property whose events are tracked. Within a batch request, this entity
    /// should either be unspecified or consistent with the batch-level entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.Entity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "dimensions" field.</summary>
    public const int DimensionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Dimension> _repeated_dimensions_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Analytics.Data.V1Alpha.Dimension.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Dimension> dimensions_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Dimension>();
    /// <summary>
    /// The dimensions requested. All defined dimensions must be used by one of the
    /// following: dimension_expression, dimension_filter, pivots, order_bys.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Dimension> Dimensions {
      get { return dimensions_; }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Metric> _repeated_metrics_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Analytics.Data.V1Alpha.Metric.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Metric> metrics_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Metric>();
    /// <summary>
    /// The metrics requested, at least one metric needs to be specified. All
    /// defined metrics must be used by one of the following: metric_expression,
    /// metric_filter, order_bys.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Metric> Metrics {
      get { return metrics_; }
    }

    /// <summary>Field number for the "dimension_filter" field.</summary>
    public const int DimensionFilterFieldNumber = 4;
    private global::Google.Analytics.Data.V1Alpha.FilterExpression dimensionFilter_;
    /// <summary>
    /// The filter clause of dimensions. Dimensions must be requested to be used in
    /// this filter. Metrics cannot be used in this filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.FilterExpression DimensionFilter {
      get { return dimensionFilter_; }
      set {
        dimensionFilter_ = value;
      }
    }

    /// <summary>Field number for the "metric_filter" field.</summary>
    public const int MetricFilterFieldNumber = 5;
    private global::Google.Analytics.Data.V1Alpha.FilterExpression metricFilter_;
    /// <summary>
    /// The filter clause of metrics. Applied at post aggregation phase, similar to
    /// SQL having-clause. Metrics must be requested to be used in this filter.
    /// Dimensions cannot be used in this filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.FilterExpression MetricFilter {
      get { return metricFilter_; }
      set {
        metricFilter_ = value;
      }
    }

    /// <summary>Field number for the "pivots" field.</summary>
    public const int PivotsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Pivot> _repeated_pivots_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Analytics.Data.V1Alpha.Pivot.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Pivot> pivots_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Pivot>();
    /// <summary>
    /// Describes the visual format of the report's dimensions in columns or rows.
    /// The union of the fieldNames (dimension names) in all pivots must be a
    /// subset of dimension names defined in Dimensions. No two pivots can share a
    /// dimension. A dimension is only visible if it appears in a pivot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Pivot> Pivots {
      get { return pivots_; }
    }

    /// <summary>Field number for the "date_ranges" field.</summary>
    public const int DateRangesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.DateRange> _repeated_dateRanges_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Analytics.Data.V1Alpha.DateRange.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DateRange> dateRanges_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DateRange>();
    /// <summary>
    /// The date range to retrieve event data for the report. If multiple date
    /// ranges are specified, event data from each date range is used in the
    /// report. A special dimension with field name "dateRange" can be included in
    /// a Pivot's field names; if included, the report compares between date
    /// ranges. In a cohort request, this `dateRanges` must be unspecified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DateRange> DateRanges {
      get { return dateRanges_; }
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 8;
    private string currencyCode_ = "";
    /// <summary>
    /// A currency code in ISO4217 format, such as "AED", "USD", "JPY".
    /// If the field is empty, the report uses the entity's default currency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cohort_spec" field.</summary>
    public const int CohortSpecFieldNumber = 9;
    private global::Google.Analytics.Data.V1Alpha.CohortSpec cohortSpec_;
    /// <summary>
    /// Cohort group associated with this request. If there is a cohort group
    /// in the request the 'cohort' dimension must be present.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.CohortSpec CohortSpec {
      get { return cohortSpec_; }
      set {
        cohortSpec_ = value;
      }
    }

    /// <summary>Field number for the "keep_empty_rows" field.</summary>
    public const int KeepEmptyRowsFieldNumber = 10;
    private bool keepEmptyRows_;
    /// <summary>
    /// If false or unspecified, each row with all metrics equal to 0 will not be
    /// returned. If true, these rows will be returned if they are not separately
    /// removed by a filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool KeepEmptyRows {
      get { return keepEmptyRows_; }
      set {
        keepEmptyRows_ = value;
      }
    }

    /// <summary>Field number for the "return_property_quota" field.</summary>
    public const int ReturnPropertyQuotaFieldNumber = 11;
    private bool returnPropertyQuota_;
    /// <summary>
    /// Toggles whether to return the current state of this Analytics Property's
    /// quota. Quota is returned in [PropertyQuota](#PropertyQuota).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReturnPropertyQuota {
      get { return returnPropertyQuota_; }
      set {
        returnPropertyQuota_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunPivotReportRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunPivotReportRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if(!dimensions_.Equals(other.dimensions_)) return false;
      if(!metrics_.Equals(other.metrics_)) return false;
      if (!object.Equals(DimensionFilter, other.DimensionFilter)) return false;
      if (!object.Equals(MetricFilter, other.MetricFilter)) return false;
      if(!pivots_.Equals(other.pivots_)) return false;
      if(!dateRanges_.Equals(other.dateRanges_)) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (!object.Equals(CohortSpec, other.CohortSpec)) return false;
      if (KeepEmptyRows != other.KeepEmptyRows) return false;
      if (ReturnPropertyQuota != other.ReturnPropertyQuota) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      hash ^= dimensions_.GetHashCode();
      hash ^= metrics_.GetHashCode();
      if (dimensionFilter_ != null) hash ^= DimensionFilter.GetHashCode();
      if (metricFilter_ != null) hash ^= MetricFilter.GetHashCode();
      hash ^= pivots_.GetHashCode();
      hash ^= dateRanges_.GetHashCode();
      if (CurrencyCode.Length != 0) hash ^= CurrencyCode.GetHashCode();
      if (cohortSpec_ != null) hash ^= CohortSpec.GetHashCode();
      if (KeepEmptyRows != false) hash ^= KeepEmptyRows.GetHashCode();
      if (ReturnPropertyQuota != false) hash ^= ReturnPropertyQuota.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      dimensions_.WriteTo(output, _repeated_dimensions_codec);
      metrics_.WriteTo(output, _repeated_metrics_codec);
      if (dimensionFilter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DimensionFilter);
      }
      if (metricFilter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MetricFilter);
      }
      pivots_.WriteTo(output, _repeated_pivots_codec);
      dateRanges_.WriteTo(output, _repeated_dateRanges_codec);
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CurrencyCode);
      }
      if (cohortSpec_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CohortSpec);
      }
      if (KeepEmptyRows != false) {
        output.WriteRawTag(80);
        output.WriteBool(KeepEmptyRows);
      }
      if (ReturnPropertyQuota != false) {
        output.WriteRawTag(88);
        output.WriteBool(ReturnPropertyQuota);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      dimensions_.WriteTo(ref output, _repeated_dimensions_codec);
      metrics_.WriteTo(ref output, _repeated_metrics_codec);
      if (dimensionFilter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DimensionFilter);
      }
      if (metricFilter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MetricFilter);
      }
      pivots_.WriteTo(ref output, _repeated_pivots_codec);
      dateRanges_.WriteTo(ref output, _repeated_dateRanges_codec);
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CurrencyCode);
      }
      if (cohortSpec_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CohortSpec);
      }
      if (KeepEmptyRows != false) {
        output.WriteRawTag(80);
        output.WriteBool(KeepEmptyRows);
      }
      if (ReturnPropertyQuota != false) {
        output.WriteRawTag(88);
        output.WriteBool(ReturnPropertyQuota);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      size += dimensions_.CalculateSize(_repeated_dimensions_codec);
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      if (dimensionFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DimensionFilter);
      }
      if (metricFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetricFilter);
      }
      size += pivots_.CalculateSize(_repeated_pivots_codec);
      size += dateRanges_.CalculateSize(_repeated_dateRanges_codec);
      if (CurrencyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (cohortSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CohortSpec);
      }
      if (KeepEmptyRows != false) {
        size += 1 + 1;
      }
      if (ReturnPropertyQuota != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunPivotReportRequest other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::Google.Analytics.Data.V1Alpha.Entity();
        }
        Entity.MergeFrom(other.Entity);
      }
      dimensions_.Add(other.dimensions_);
      metrics_.Add(other.metrics_);
      if (other.dimensionFilter_ != null) {
        if (dimensionFilter_ == null) {
          DimensionFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
        }
        DimensionFilter.MergeFrom(other.DimensionFilter);
      }
      if (other.metricFilter_ != null) {
        if (metricFilter_ == null) {
          MetricFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
        }
        MetricFilter.MergeFrom(other.MetricFilter);
      }
      pivots_.Add(other.pivots_);
      dateRanges_.Add(other.dateRanges_);
      if (other.CurrencyCode.Length != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.cohortSpec_ != null) {
        if (cohortSpec_ == null) {
          CohortSpec = new global::Google.Analytics.Data.V1Alpha.CohortSpec();
        }
        CohortSpec.MergeFrom(other.CohortSpec);
      }
      if (other.KeepEmptyRows != false) {
        KeepEmptyRows = other.KeepEmptyRows;
      }
      if (other.ReturnPropertyQuota != false) {
        ReturnPropertyQuota = other.ReturnPropertyQuota;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::Google.Analytics.Data.V1Alpha.Entity();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 18: {
            dimensions_.AddEntriesFrom(input, _repeated_dimensions_codec);
            break;
          }
          case 26: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
          case 34: {
            if (dimensionFilter_ == null) {
              DimensionFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            }
            input.ReadMessage(DimensionFilter);
            break;
          }
          case 42: {
            if (metricFilter_ == null) {
              MetricFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            }
            input.ReadMessage(MetricFilter);
            break;
          }
          case 50: {
            pivots_.AddEntriesFrom(input, _repeated_pivots_codec);
            break;
          }
          case 58: {
            dateRanges_.AddEntriesFrom(input, _repeated_dateRanges_codec);
            break;
          }
          case 66: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 74: {
            if (cohortSpec_ == null) {
              CohortSpec = new global::Google.Analytics.Data.V1Alpha.CohortSpec();
            }
            input.ReadMessage(CohortSpec);
            break;
          }
          case 80: {
            KeepEmptyRows = input.ReadBool();
            break;
          }
          case 88: {
            ReturnPropertyQuota = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::Google.Analytics.Data.V1Alpha.Entity();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 18: {
            dimensions_.AddEntriesFrom(ref input, _repeated_dimensions_codec);
            break;
          }
          case 26: {
            metrics_.AddEntriesFrom(ref input, _repeated_metrics_codec);
            break;
          }
          case 34: {
            if (dimensionFilter_ == null) {
              DimensionFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            }
            input.ReadMessage(DimensionFilter);
            break;
          }
          case 42: {
            if (metricFilter_ == null) {
              MetricFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            }
            input.ReadMessage(MetricFilter);
            break;
          }
          case 50: {
            pivots_.AddEntriesFrom(ref input, _repeated_pivots_codec);
            break;
          }
          case 58: {
            dateRanges_.AddEntriesFrom(ref input, _repeated_dateRanges_codec);
            break;
          }
          case 66: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 74: {
            if (cohortSpec_ == null) {
              CohortSpec = new global::Google.Analytics.Data.V1Alpha.CohortSpec();
            }
            input.ReadMessage(CohortSpec);
            break;
          }
          case 80: {
            KeepEmptyRows = input.ReadBool();
            break;
          }
          case 88: {
            ReturnPropertyQuota = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response pivot report table corresponding to a pivot request.
  /// </summary>
  public sealed partial class RunPivotReportResponse : pb::IMessage<RunPivotReportResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RunPivotReportResponse> _parser = new pb::MessageParser<RunPivotReportResponse>(() => new RunPivotReportResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunPivotReportResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.AnalyticsDataApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunPivotReportResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunPivotReportResponse(RunPivotReportResponse other) : this() {
      pivotHeaders_ = other.pivotHeaders_.Clone();
      dimensionHeaders_ = other.dimensionHeaders_.Clone();
      metricHeaders_ = other.metricHeaders_.Clone();
      rows_ = other.rows_.Clone();
      aggregates_ = other.aggregates_.Clone();
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      propertyQuota_ = other.propertyQuota_ != null ? other.propertyQuota_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunPivotReportResponse Clone() {
      return new RunPivotReportResponse(this);
    }

    /// <summary>Field number for the "pivot_headers" field.</summary>
    public const int PivotHeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.PivotHeader> _repeated_pivotHeaders_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Analytics.Data.V1Alpha.PivotHeader.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.PivotHeader> pivotHeaders_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.PivotHeader>();
    /// <summary>
    /// Summarizes the columns and rows created by a pivot. Each pivot in the
    /// request produces one header in the response. If we have a request like
    /// this:
    ///
    ///     "pivots": [{
    ///       "fieldNames": ["country",
    ///         "city"]
    ///     },
    ///     {
    ///       "fieldNames": "eventName"
    ///     }]
    ///
    /// We will have the following `pivotHeaders` in the response:
    ///
    ///     "pivotHeaders" : [{
    ///       "dimensionHeaders": [{
    ///         "dimensionValues": [
    ///            { "value": "United Kingdom" },
    ///            { "value": "London" }
    ///          ]
    ///       },
    ///       {
    ///         "dimensionValues": [
    ///         { "value": "Japan" },
    ///         { "value": "Osaka" }
    ///         ]
    ///       }]
    ///     },
    ///     {
    ///       "dimensionHeaders": [{
    ///         "dimensionValues": [{ "value": "session_start" }]
    ///       },
    ///       {
    ///         "dimensionValues": [{ "value": "scroll" }]
    ///       }]
    ///     }]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.PivotHeader> PivotHeaders {
      get { return pivotHeaders_; }
    }

    /// <summary>Field number for the "dimension_headers" field.</summary>
    public const int DimensionHeadersFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.DimensionHeader> _repeated_dimensionHeaders_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Analytics.Data.V1Alpha.DimensionHeader.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionHeader> dimensionHeaders_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionHeader>();
    /// <summary>
    /// Describes dimension columns. The number of DimensionHeaders and ordering of
    /// DimensionHeaders matches the dimensions present in rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionHeader> DimensionHeaders {
      get { return dimensionHeaders_; }
    }

    /// <summary>Field number for the "metric_headers" field.</summary>
    public const int MetricHeadersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.MetricHeader> _repeated_metricHeaders_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Analytics.Data.V1Alpha.MetricHeader.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricHeader> metricHeaders_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricHeader>();
    /// <summary>
    /// Describes metric columns. The number of MetricHeaders and ordering of
    /// MetricHeaders matches the metrics present in rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricHeader> MetricHeaders {
      get { return metricHeaders_; }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Row> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Analytics.Data.V1Alpha.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> rows_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row>();
    /// <summary>
    /// Rows of dimension value combinations and metric values in the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> Rows {
      get { return rows_; }
    }

    /// <summary>Field number for the "aggregates" field.</summary>
    public const int AggregatesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Row> _repeated_aggregates_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Analytics.Data.V1Alpha.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> aggregates_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row>();
    /// <summary>
    /// Aggregation of metric values. Can be totals, minimums, or maximums. The
    /// returned aggregations are controlled by the metric_aggregations in the
    /// pivot. The type of aggregation returned in each row is shown by the
    /// dimension_values which are set to "RESERVED_&lt;MetricAggregation>".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> Aggregates {
      get { return aggregates_; }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 5;
    private global::Google.Analytics.Data.V1Alpha.ResponseMetaData metadata_;
    /// <summary>
    /// Metadata for the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.ResponseMetaData Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "property_quota" field.</summary>
    public const int PropertyQuotaFieldNumber = 6;
    private global::Google.Analytics.Data.V1Alpha.PropertyQuota propertyQuota_;
    /// <summary>
    /// This Analytics Property's quota state including this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.PropertyQuota PropertyQuota {
      get { return propertyQuota_; }
      set {
        propertyQuota_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunPivotReportResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunPivotReportResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pivotHeaders_.Equals(other.pivotHeaders_)) return false;
      if(!dimensionHeaders_.Equals(other.dimensionHeaders_)) return false;
      if(!metricHeaders_.Equals(other.metricHeaders_)) return false;
      if(!rows_.Equals(other.rows_)) return false;
      if(!aggregates_.Equals(other.aggregates_)) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(PropertyQuota, other.PropertyQuota)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pivotHeaders_.GetHashCode();
      hash ^= dimensionHeaders_.GetHashCode();
      hash ^= metricHeaders_.GetHashCode();
      hash ^= rows_.GetHashCode();
      hash ^= aggregates_.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (propertyQuota_ != null) hash ^= PropertyQuota.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      pivotHeaders_.WriteTo(output, _repeated_pivotHeaders_codec);
      metricHeaders_.WriteTo(output, _repeated_metricHeaders_codec);
      rows_.WriteTo(output, _repeated_rows_codec);
      aggregates_.WriteTo(output, _repeated_aggregates_codec);
      if (metadata_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Metadata);
      }
      if (propertyQuota_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PropertyQuota);
      }
      dimensionHeaders_.WriteTo(output, _repeated_dimensionHeaders_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      pivotHeaders_.WriteTo(ref output, _repeated_pivotHeaders_codec);
      metricHeaders_.WriteTo(ref output, _repeated_metricHeaders_codec);
      rows_.WriteTo(ref output, _repeated_rows_codec);
      aggregates_.WriteTo(ref output, _repeated_aggregates_codec);
      if (metadata_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Metadata);
      }
      if (propertyQuota_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PropertyQuota);
      }
      dimensionHeaders_.WriteTo(ref output, _repeated_dimensionHeaders_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pivotHeaders_.CalculateSize(_repeated_pivotHeaders_codec);
      size += dimensionHeaders_.CalculateSize(_repeated_dimensionHeaders_codec);
      size += metricHeaders_.CalculateSize(_repeated_metricHeaders_codec);
      size += rows_.CalculateSize(_repeated_rows_codec);
      size += aggregates_.CalculateSize(_repeated_aggregates_codec);
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (propertyQuota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PropertyQuota);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunPivotReportResponse other) {
      if (other == null) {
        return;
      }
      pivotHeaders_.Add(other.pivotHeaders_);
      dimensionHeaders_.Add(other.dimensionHeaders_);
      metricHeaders_.Add(other.metricHeaders_);
      rows_.Add(other.rows_);
      aggregates_.Add(other.aggregates_);
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Google.Analytics.Data.V1Alpha.ResponseMetaData();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.propertyQuota_ != null) {
        if (propertyQuota_ == null) {
          PropertyQuota = new global::Google.Analytics.Data.V1Alpha.PropertyQuota();
        }
        PropertyQuota.MergeFrom(other.PropertyQuota);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pivotHeaders_.AddEntriesFrom(input, _repeated_pivotHeaders_codec);
            break;
          }
          case 18: {
            metricHeaders_.AddEntriesFrom(input, _repeated_metricHeaders_codec);
            break;
          }
          case 26: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
          case 34: {
            aggregates_.AddEntriesFrom(input, _repeated_aggregates_codec);
            break;
          }
          case 42: {
            if (metadata_ == null) {
              Metadata = new global::Google.Analytics.Data.V1Alpha.ResponseMetaData();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 50: {
            if (propertyQuota_ == null) {
              PropertyQuota = new global::Google.Analytics.Data.V1Alpha.PropertyQuota();
            }
            input.ReadMessage(PropertyQuota);
            break;
          }
          case 58: {
            dimensionHeaders_.AddEntriesFrom(input, _repeated_dimensionHeaders_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            pivotHeaders_.AddEntriesFrom(ref input, _repeated_pivotHeaders_codec);
            break;
          }
          case 18: {
            metricHeaders_.AddEntriesFrom(ref input, _repeated_metricHeaders_codec);
            break;
          }
          case 26: {
            rows_.AddEntriesFrom(ref input, _repeated_rows_codec);
            break;
          }
          case 34: {
            aggregates_.AddEntriesFrom(ref input, _repeated_aggregates_codec);
            break;
          }
          case 42: {
            if (metadata_ == null) {
              Metadata = new global::Google.Analytics.Data.V1Alpha.ResponseMetaData();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 50: {
            if (propertyQuota_ == null) {
              PropertyQuota = new global::Google.Analytics.Data.V1Alpha.PropertyQuota();
            }
            input.ReadMessage(PropertyQuota);
            break;
          }
          case 58: {
            dimensionHeaders_.AddEntriesFrom(ref input, _repeated_dimensionHeaders_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The batch request containing multiple report requests.
  /// </summary>
  public sealed partial class BatchRunReportsRequest : pb::IMessage<BatchRunReportsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchRunReportsRequest> _parser = new pb::MessageParser<BatchRunReportsRequest>(() => new BatchRunReportsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchRunReportsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.AnalyticsDataApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchRunReportsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchRunReportsRequest(BatchRunReportsRequest other) : this() {
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      requests_ = other.requests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchRunReportsRequest Clone() {
      return new BatchRunReportsRequest(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::Google.Analytics.Data.V1Alpha.Entity entity_;
    /// <summary>
    /// A property whose events are tracked. This entity must be specified for the
    /// batch. The entity within RunReportRequest may either be unspecified or
    /// consistent with this entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.Entity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "requests" field.</summary>
    public const int RequestsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.RunReportRequest> _repeated_requests_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Analytics.Data.V1Alpha.RunReportRequest.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.RunReportRequest> requests_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.RunReportRequest>();
    /// <summary>
    /// Individual requests. Each request has a separate report response. Each
    /// batch request is allowed up to 5 requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.RunReportRequest> Requests {
      get { return requests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchRunReportsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchRunReportsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if(!requests_.Equals(other.requests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      hash ^= requests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      requests_.WriteTo(output, _repeated_requests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      requests_.WriteTo(ref output, _repeated_requests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      size += requests_.CalculateSize(_repeated_requests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchRunReportsRequest other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::Google.Analytics.Data.V1Alpha.Entity();
        }
        Entity.MergeFrom(other.Entity);
      }
      requests_.Add(other.requests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::Google.Analytics.Data.V1Alpha.Entity();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 18: {
            requests_.AddEntriesFrom(input, _repeated_requests_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::Google.Analytics.Data.V1Alpha.Entity();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 18: {
            requests_.AddEntriesFrom(ref input, _repeated_requests_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The batch response containing multiple reports.
  /// </summary>
  public sealed partial class BatchRunReportsResponse : pb::IMessage<BatchRunReportsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchRunReportsResponse> _parser = new pb::MessageParser<BatchRunReportsResponse>(() => new BatchRunReportsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchRunReportsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.AnalyticsDataApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchRunReportsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchRunReportsResponse(BatchRunReportsResponse other) : this() {
      reports_ = other.reports_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchRunReportsResponse Clone() {
      return new BatchRunReportsResponse(this);
    }

    /// <summary>Field number for the "reports" field.</summary>
    public const int ReportsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.RunReportResponse> _repeated_reports_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Analytics.Data.V1Alpha.RunReportResponse.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.RunReportResponse> reports_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.RunReportResponse>();
    /// <summary>
    /// Individual responses. Each response has a separate report request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.RunReportResponse> Reports {
      get { return reports_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchRunReportsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchRunReportsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reports_.Equals(other.reports_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reports_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      reports_.WriteTo(output, _repeated_reports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      reports_.WriteTo(ref output, _repeated_reports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reports_.CalculateSize(_repeated_reports_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchRunReportsResponse other) {
      if (other == null) {
        return;
      }
      reports_.Add(other.reports_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reports_.AddEntriesFrom(input, _repeated_reports_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            reports_.AddEntriesFrom(ref input, _repeated_reports_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The batch request containing multiple pivot report requests.
  /// </summary>
  public sealed partial class BatchRunPivotReportsRequest : pb::IMessage<BatchRunPivotReportsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchRunPivotReportsRequest> _parser = new pb::MessageParser<BatchRunPivotReportsRequest>(() => new BatchRunPivotReportsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchRunPivotReportsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.AnalyticsDataApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchRunPivotReportsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchRunPivotReportsRequest(BatchRunPivotReportsRequest other) : this() {
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      requests_ = other.requests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchRunPivotReportsRequest Clone() {
      return new BatchRunPivotReportsRequest(this);
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 1;
    private global::Google.Analytics.Data.V1Alpha.Entity entity_;
    /// <summary>
    /// A property whose events are tracked. This entity must be specified for the
    /// batch. The entity within RunPivotReportRequest may either be unspecified or
    /// consistent with this entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.Entity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "requests" field.</summary>
    public const int RequestsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.RunPivotReportRequest> _repeated_requests_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Analytics.Data.V1Alpha.RunPivotReportRequest.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.RunPivotReportRequest> requests_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.RunPivotReportRequest>();
    /// <summary>
    /// Individual requests. Each request has a separate pivot report response.
    /// Each batch request is allowed up to 5 requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.RunPivotReportRequest> Requests {
      get { return requests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchRunPivotReportsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchRunPivotReportsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entity, other.Entity)) return false;
      if(!requests_.Equals(other.requests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entity_ != null) hash ^= Entity.GetHashCode();
      hash ^= requests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      requests_.WriteTo(output, _repeated_requests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (entity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entity);
      }
      requests_.WriteTo(ref output, _repeated_requests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      size += requests_.CalculateSize(_repeated_requests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchRunPivotReportsRequest other) {
      if (other == null) {
        return;
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::Google.Analytics.Data.V1Alpha.Entity();
        }
        Entity.MergeFrom(other.Entity);
      }
      requests_.Add(other.requests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::Google.Analytics.Data.V1Alpha.Entity();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 18: {
            requests_.AddEntriesFrom(input, _repeated_requests_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (entity_ == null) {
              Entity = new global::Google.Analytics.Data.V1Alpha.Entity();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 18: {
            requests_.AddEntriesFrom(ref input, _repeated_requests_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The batch response containing multiple pivot reports.
  /// </summary>
  public sealed partial class BatchRunPivotReportsResponse : pb::IMessage<BatchRunPivotReportsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchRunPivotReportsResponse> _parser = new pb::MessageParser<BatchRunPivotReportsResponse>(() => new BatchRunPivotReportsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchRunPivotReportsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.AnalyticsDataApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchRunPivotReportsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchRunPivotReportsResponse(BatchRunPivotReportsResponse other) : this() {
      pivotReports_ = other.pivotReports_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchRunPivotReportsResponse Clone() {
      return new BatchRunPivotReportsResponse(this);
    }

    /// <summary>Field number for the "pivot_reports" field.</summary>
    public const int PivotReportsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.RunPivotReportResponse> _repeated_pivotReports_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Analytics.Data.V1Alpha.RunPivotReportResponse.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.RunPivotReportResponse> pivotReports_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.RunPivotReportResponse>();
    /// <summary>
    /// Individual responses. Each response has a separate pivot report request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.RunPivotReportResponse> PivotReports {
      get { return pivotReports_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchRunPivotReportsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchRunPivotReportsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pivotReports_.Equals(other.pivotReports_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pivotReports_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      pivotReports_.WriteTo(output, _repeated_pivotReports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      pivotReports_.WriteTo(ref output, _repeated_pivotReports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pivotReports_.CalculateSize(_repeated_pivotReports_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchRunPivotReportsResponse other) {
      if (other == null) {
        return;
      }
      pivotReports_.Add(other.pivotReports_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pivotReports_.AddEntriesFrom(input, _repeated_pivotReports_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            pivotReports_.AddEntriesFrom(ref input, _repeated_pivotReports_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for a property's dimension and metric metadata.
  /// </summary>
  public sealed partial class GetMetadataRequest : pb::IMessage<GetMetadataRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMetadataRequest> _parser = new pb::MessageParser<GetMetadataRequest>(() => new GetMetadataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMetadataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.AnalyticsDataApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetadataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetadataRequest(GetMetadataRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetadataRequest Clone() {
      return new GetMetadataRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name of the metadata to retrieve. This name field is
    /// specified in the URL path and not URL parameters. Property is a numeric
    /// Google Analytics GA4 Property identifier. To learn more, see [where to find
    /// your Property
    /// ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id).
    ///
    /// Example: properties/1234/metadata
    ///
    /// Set the Property ID to 0 for dimensions and metrics common to all
    /// properties. In this special mode, this method will not return custom
    /// dimensions and metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMetadataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMetadataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMetadataRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request to generate a realtime report.
  /// </summary>
  public sealed partial class RunRealtimeReportRequest : pb::IMessage<RunRealtimeReportRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RunRealtimeReportRequest> _parser = new pb::MessageParser<RunRealtimeReportRequest>(() => new RunRealtimeReportRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunRealtimeReportRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.AnalyticsDataApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunRealtimeReportRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunRealtimeReportRequest(RunRealtimeReportRequest other) : this() {
      property_ = other.property_;
      dimensions_ = other.dimensions_.Clone();
      metrics_ = other.metrics_.Clone();
      limit_ = other.limit_;
      dimensionFilter_ = other.dimensionFilter_ != null ? other.dimensionFilter_.Clone() : null;
      metricFilter_ = other.metricFilter_ != null ? other.metricFilter_.Clone() : null;
      metricAggregations_ = other.metricAggregations_.Clone();
      orderBys_ = other.orderBys_.Clone();
      returnPropertyQuota_ = other.returnPropertyQuota_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunRealtimeReportRequest Clone() {
      return new RunRealtimeReportRequest(this);
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 1;
    private string property_ = "";
    /// <summary>
    /// A Google Analytics GA4 property identifier whose events are tracked.
    /// Specified in the URL path and not the body. To learn more, see [where to
    /// find your Property
    /// ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id).
    ///
    /// Example: properties/1234
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Property {
      get { return property_; }
      set {
        property_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dimensions" field.</summary>
    public const int DimensionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Dimension> _repeated_dimensions_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Analytics.Data.V1Alpha.Dimension.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Dimension> dimensions_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Dimension>();
    /// <summary>
    /// The dimensions requested and displayed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Dimension> Dimensions {
      get { return dimensions_; }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Metric> _repeated_metrics_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Analytics.Data.V1Alpha.Metric.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Metric> metrics_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Metric>();
    /// <summary>
    /// The metrics requested and displayed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Metric> Metrics {
      get { return metrics_; }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 4;
    private long limit_;
    /// <summary>
    /// The number of rows to return. If unspecified, 10 rows are returned. If
    /// -1, all rows are returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "dimension_filter" field.</summary>
    public const int DimensionFilterFieldNumber = 5;
    private global::Google.Analytics.Data.V1Alpha.FilterExpression dimensionFilter_;
    /// <summary>
    /// The filter clause of dimensions. Dimensions must be requested to be used in
    /// this filter. Metrics cannot be used in this filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.FilterExpression DimensionFilter {
      get { return dimensionFilter_; }
      set {
        dimensionFilter_ = value;
      }
    }

    /// <summary>Field number for the "metric_filter" field.</summary>
    public const int MetricFilterFieldNumber = 6;
    private global::Google.Analytics.Data.V1Alpha.FilterExpression metricFilter_;
    /// <summary>
    /// The filter clause of metrics. Applied at post aggregation phase, similar to
    /// SQL having-clause. Metrics must be requested to be used in this filter.
    /// Dimensions cannot be used in this filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.FilterExpression MetricFilter {
      get { return metricFilter_; }
      set {
        metricFilter_ = value;
      }
    }

    /// <summary>Field number for the "metric_aggregations" field.</summary>
    public const int MetricAggregationsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.MetricAggregation> _repeated_metricAggregations_codec
        = pb::FieldCodec.ForEnum(58, x => (int) x, x => (global::Google.Analytics.Data.V1Alpha.MetricAggregation) x);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricAggregation> metricAggregations_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricAggregation>();
    /// <summary>
    /// Aggregation of metrics. Aggregated metric values will be shown in rows
    /// where the dimension_values are set to "RESERVED_(MetricAggregation)".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricAggregation> MetricAggregations {
      get { return metricAggregations_; }
    }

    /// <summary>Field number for the "order_bys" field.</summary>
    public const int OrderBysFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.OrderBy> _repeated_orderBys_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Analytics.Data.V1Alpha.OrderBy.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.OrderBy> orderBys_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.OrderBy>();
    /// <summary>
    /// Specifies how rows are ordered in the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.OrderBy> OrderBys {
      get { return orderBys_; }
    }

    /// <summary>Field number for the "return_property_quota" field.</summary>
    public const int ReturnPropertyQuotaFieldNumber = 9;
    private bool returnPropertyQuota_;
    /// <summary>
    /// Toggles whether to return the current state of this Analytics Property's
    /// Realtime quota. Quota is returned in [PropertyQuota](#PropertyQuota).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReturnPropertyQuota {
      get { return returnPropertyQuota_; }
      set {
        returnPropertyQuota_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunRealtimeReportRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunRealtimeReportRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Property != other.Property) return false;
      if(!dimensions_.Equals(other.dimensions_)) return false;
      if(!metrics_.Equals(other.metrics_)) return false;
      if (Limit != other.Limit) return false;
      if (!object.Equals(DimensionFilter, other.DimensionFilter)) return false;
      if (!object.Equals(MetricFilter, other.MetricFilter)) return false;
      if(!metricAggregations_.Equals(other.metricAggregations_)) return false;
      if(!orderBys_.Equals(other.orderBys_)) return false;
      if (ReturnPropertyQuota != other.ReturnPropertyQuota) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Property.Length != 0) hash ^= Property.GetHashCode();
      hash ^= dimensions_.GetHashCode();
      hash ^= metrics_.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (dimensionFilter_ != null) hash ^= DimensionFilter.GetHashCode();
      if (metricFilter_ != null) hash ^= MetricFilter.GetHashCode();
      hash ^= metricAggregations_.GetHashCode();
      hash ^= orderBys_.GetHashCode();
      if (ReturnPropertyQuota != false) hash ^= ReturnPropertyQuota.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Property.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Property);
      }
      dimensions_.WriteTo(output, _repeated_dimensions_codec);
      metrics_.WriteTo(output, _repeated_metrics_codec);
      if (Limit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Limit);
      }
      if (dimensionFilter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DimensionFilter);
      }
      if (metricFilter_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(MetricFilter);
      }
      metricAggregations_.WriteTo(output, _repeated_metricAggregations_codec);
      orderBys_.WriteTo(output, _repeated_orderBys_codec);
      if (ReturnPropertyQuota != false) {
        output.WriteRawTag(72);
        output.WriteBool(ReturnPropertyQuota);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Property.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Property);
      }
      dimensions_.WriteTo(ref output, _repeated_dimensions_codec);
      metrics_.WriteTo(ref output, _repeated_metrics_codec);
      if (Limit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Limit);
      }
      if (dimensionFilter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DimensionFilter);
      }
      if (metricFilter_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(MetricFilter);
      }
      metricAggregations_.WriteTo(ref output, _repeated_metricAggregations_codec);
      orderBys_.WriteTo(ref output, _repeated_orderBys_codec);
      if (ReturnPropertyQuota != false) {
        output.WriteRawTag(72);
        output.WriteBool(ReturnPropertyQuota);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Property.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Property);
      }
      size += dimensions_.CalculateSize(_repeated_dimensions_codec);
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (dimensionFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DimensionFilter);
      }
      if (metricFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetricFilter);
      }
      size += metricAggregations_.CalculateSize(_repeated_metricAggregations_codec);
      size += orderBys_.CalculateSize(_repeated_orderBys_codec);
      if (ReturnPropertyQuota != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunRealtimeReportRequest other) {
      if (other == null) {
        return;
      }
      if (other.Property.Length != 0) {
        Property = other.Property;
      }
      dimensions_.Add(other.dimensions_);
      metrics_.Add(other.metrics_);
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.dimensionFilter_ != null) {
        if (dimensionFilter_ == null) {
          DimensionFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
        }
        DimensionFilter.MergeFrom(other.DimensionFilter);
      }
      if (other.metricFilter_ != null) {
        if (metricFilter_ == null) {
          MetricFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
        }
        MetricFilter.MergeFrom(other.MetricFilter);
      }
      metricAggregations_.Add(other.metricAggregations_);
      orderBys_.Add(other.orderBys_);
      if (other.ReturnPropertyQuota != false) {
        ReturnPropertyQuota = other.ReturnPropertyQuota;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Property = input.ReadString();
            break;
          }
          case 18: {
            dimensions_.AddEntriesFrom(input, _repeated_dimensions_codec);
            break;
          }
          case 26: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
          case 32: {
            Limit = input.ReadInt64();
            break;
          }
          case 42: {
            if (dimensionFilter_ == null) {
              DimensionFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            }
            input.ReadMessage(DimensionFilter);
            break;
          }
          case 50: {
            if (metricFilter_ == null) {
              MetricFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            }
            input.ReadMessage(MetricFilter);
            break;
          }
          case 58:
          case 56: {
            metricAggregations_.AddEntriesFrom(input, _repeated_metricAggregations_codec);
            break;
          }
          case 66: {
            orderBys_.AddEntriesFrom(input, _repeated_orderBys_codec);
            break;
          }
          case 72: {
            ReturnPropertyQuota = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Property = input.ReadString();
            break;
          }
          case 18: {
            dimensions_.AddEntriesFrom(ref input, _repeated_dimensions_codec);
            break;
          }
          case 26: {
            metrics_.AddEntriesFrom(ref input, _repeated_metrics_codec);
            break;
          }
          case 32: {
            Limit = input.ReadInt64();
            break;
          }
          case 42: {
            if (dimensionFilter_ == null) {
              DimensionFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            }
            input.ReadMessage(DimensionFilter);
            break;
          }
          case 50: {
            if (metricFilter_ == null) {
              MetricFilter = new global::Google.Analytics.Data.V1Alpha.FilterExpression();
            }
            input.ReadMessage(MetricFilter);
            break;
          }
          case 58:
          case 56: {
            metricAggregations_.AddEntriesFrom(ref input, _repeated_metricAggregations_codec);
            break;
          }
          case 66: {
            orderBys_.AddEntriesFrom(ref input, _repeated_orderBys_codec);
            break;
          }
          case 72: {
            ReturnPropertyQuota = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response realtime report table corresponding to a request.
  /// </summary>
  public sealed partial class RunRealtimeReportResponse : pb::IMessage<RunRealtimeReportResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RunRealtimeReportResponse> _parser = new pb::MessageParser<RunRealtimeReportResponse>(() => new RunRealtimeReportResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RunRealtimeReportResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Analytics.Data.V1Alpha.AnalyticsDataApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunRealtimeReportResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunRealtimeReportResponse(RunRealtimeReportResponse other) : this() {
      dimensionHeaders_ = other.dimensionHeaders_.Clone();
      metricHeaders_ = other.metricHeaders_.Clone();
      rows_ = other.rows_.Clone();
      totals_ = other.totals_.Clone();
      maximums_ = other.maximums_.Clone();
      minimums_ = other.minimums_.Clone();
      rowCount_ = other.rowCount_;
      propertyQuota_ = other.propertyQuota_ != null ? other.propertyQuota_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RunRealtimeReportResponse Clone() {
      return new RunRealtimeReportResponse(this);
    }

    /// <summary>Field number for the "dimension_headers" field.</summary>
    public const int DimensionHeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.DimensionHeader> _repeated_dimensionHeaders_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Analytics.Data.V1Alpha.DimensionHeader.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionHeader> dimensionHeaders_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionHeader>();
    /// <summary>
    /// Describes dimension columns. The number of DimensionHeaders and ordering of
    /// DimensionHeaders matches the dimensions present in rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.DimensionHeader> DimensionHeaders {
      get { return dimensionHeaders_; }
    }

    /// <summary>Field number for the "metric_headers" field.</summary>
    public const int MetricHeadersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.MetricHeader> _repeated_metricHeaders_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Analytics.Data.V1Alpha.MetricHeader.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricHeader> metricHeaders_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricHeader>();
    /// <summary>
    /// Describes metric columns. The number of MetricHeaders and ordering of
    /// MetricHeaders matches the metrics present in rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.MetricHeader> MetricHeaders {
      get { return metricHeaders_; }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Row> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Analytics.Data.V1Alpha.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> rows_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row>();
    /// <summary>
    /// Rows of dimension value combinations and metric values in the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> Rows {
      get { return rows_; }
    }

    /// <summary>Field number for the "totals" field.</summary>
    public const int TotalsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Row> _repeated_totals_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Analytics.Data.V1Alpha.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> totals_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row>();
    /// <summary>
    /// If requested, the totaled values of metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> Totals {
      get { return totals_; }
    }

    /// <summary>Field number for the "maximums" field.</summary>
    public const int MaximumsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Row> _repeated_maximums_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Analytics.Data.V1Alpha.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> maximums_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row>();
    /// <summary>
    /// If requested, the maximum values of metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> Maximums {
      get { return maximums_; }
    }

    /// <summary>Field number for the "minimums" field.</summary>
    public const int MinimumsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Analytics.Data.V1Alpha.Row> _repeated_minimums_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Analytics.Data.V1Alpha.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> minimums_ = new pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row>();
    /// <summary>
    /// If requested, the minimum values of metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Analytics.Data.V1Alpha.Row> Minimums {
      get { return minimums_; }
    }

    /// <summary>Field number for the "row_count" field.</summary>
    public const int RowCountFieldNumber = 7;
    private int rowCount_;
    /// <summary>
    /// The total number of rows in the query result, regardless of the number of
    /// rows returned in the response. For example if a query returns 175 rows and
    /// includes limit = 50 in the API request, the response will contain row_count
    /// = 175 but only 50 rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RowCount {
      get { return rowCount_; }
      set {
        rowCount_ = value;
      }
    }

    /// <summary>Field number for the "property_quota" field.</summary>
    public const int PropertyQuotaFieldNumber = 8;
    private global::Google.Analytics.Data.V1Alpha.PropertyQuota propertyQuota_;
    /// <summary>
    /// This Analytics Property's Realtime quota state including this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Analytics.Data.V1Alpha.PropertyQuota PropertyQuota {
      get { return propertyQuota_; }
      set {
        propertyQuota_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RunRealtimeReportResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RunRealtimeReportResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dimensionHeaders_.Equals(other.dimensionHeaders_)) return false;
      if(!metricHeaders_.Equals(other.metricHeaders_)) return false;
      if(!rows_.Equals(other.rows_)) return false;
      if(!totals_.Equals(other.totals_)) return false;
      if(!maximums_.Equals(other.maximums_)) return false;
      if(!minimums_.Equals(other.minimums_)) return false;
      if (RowCount != other.RowCount) return false;
      if (!object.Equals(PropertyQuota, other.PropertyQuota)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dimensionHeaders_.GetHashCode();
      hash ^= metricHeaders_.GetHashCode();
      hash ^= rows_.GetHashCode();
      hash ^= totals_.GetHashCode();
      hash ^= maximums_.GetHashCode();
      hash ^= minimums_.GetHashCode();
      if (RowCount != 0) hash ^= RowCount.GetHashCode();
      if (propertyQuota_ != null) hash ^= PropertyQuota.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dimensionHeaders_.WriteTo(output, _repeated_dimensionHeaders_codec);
      metricHeaders_.WriteTo(output, _repeated_metricHeaders_codec);
      rows_.WriteTo(output, _repeated_rows_codec);
      totals_.WriteTo(output, _repeated_totals_codec);
      maximums_.WriteTo(output, _repeated_maximums_codec);
      minimums_.WriteTo(output, _repeated_minimums_codec);
      if (RowCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RowCount);
      }
      if (propertyQuota_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PropertyQuota);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dimensionHeaders_.WriteTo(ref output, _repeated_dimensionHeaders_codec);
      metricHeaders_.WriteTo(ref output, _repeated_metricHeaders_codec);
      rows_.WriteTo(ref output, _repeated_rows_codec);
      totals_.WriteTo(ref output, _repeated_totals_codec);
      maximums_.WriteTo(ref output, _repeated_maximums_codec);
      minimums_.WriteTo(ref output, _repeated_minimums_codec);
      if (RowCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RowCount);
      }
      if (propertyQuota_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PropertyQuota);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dimensionHeaders_.CalculateSize(_repeated_dimensionHeaders_codec);
      size += metricHeaders_.CalculateSize(_repeated_metricHeaders_codec);
      size += rows_.CalculateSize(_repeated_rows_codec);
      size += totals_.CalculateSize(_repeated_totals_codec);
      size += maximums_.CalculateSize(_repeated_maximums_codec);
      size += minimums_.CalculateSize(_repeated_minimums_codec);
      if (RowCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowCount);
      }
      if (propertyQuota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PropertyQuota);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RunRealtimeReportResponse other) {
      if (other == null) {
        return;
      }
      dimensionHeaders_.Add(other.dimensionHeaders_);
      metricHeaders_.Add(other.metricHeaders_);
      rows_.Add(other.rows_);
      totals_.Add(other.totals_);
      maximums_.Add(other.maximums_);
      minimums_.Add(other.minimums_);
      if (other.RowCount != 0) {
        RowCount = other.RowCount;
      }
      if (other.propertyQuota_ != null) {
        if (propertyQuota_ == null) {
          PropertyQuota = new global::Google.Analytics.Data.V1Alpha.PropertyQuota();
        }
        PropertyQuota.MergeFrom(other.PropertyQuota);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dimensionHeaders_.AddEntriesFrom(input, _repeated_dimensionHeaders_codec);
            break;
          }
          case 18: {
            metricHeaders_.AddEntriesFrom(input, _repeated_metricHeaders_codec);
            break;
          }
          case 26: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
          case 34: {
            totals_.AddEntriesFrom(input, _repeated_totals_codec);
            break;
          }
          case 42: {
            maximums_.AddEntriesFrom(input, _repeated_maximums_codec);
            break;
          }
          case 50: {
            minimums_.AddEntriesFrom(input, _repeated_minimums_codec);
            break;
          }
          case 56: {
            RowCount = input.ReadInt32();
            break;
          }
          case 66: {
            if (propertyQuota_ == null) {
              PropertyQuota = new global::Google.Analytics.Data.V1Alpha.PropertyQuota();
            }
            input.ReadMessage(PropertyQuota);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dimensionHeaders_.AddEntriesFrom(ref input, _repeated_dimensionHeaders_codec);
            break;
          }
          case 18: {
            metricHeaders_.AddEntriesFrom(ref input, _repeated_metricHeaders_codec);
            break;
          }
          case 26: {
            rows_.AddEntriesFrom(ref input, _repeated_rows_codec);
            break;
          }
          case 34: {
            totals_.AddEntriesFrom(ref input, _repeated_totals_codec);
            break;
          }
          case 42: {
            maximums_.AddEntriesFrom(ref input, _repeated_maximums_codec);
            break;
          }
          case 50: {
            minimums_.AddEntriesFrom(ref input, _repeated_minimums_codec);
            break;
          }
          case 56: {
            RowCount = input.ReadInt32();
            break;
          }
          case 66: {
            if (propertyQuota_ == null) {
              PropertyQuota = new global::Google.Analytics.Data.V1Alpha.PropertyQuota();
            }
            input.ReadMessage(PropertyQuota);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
