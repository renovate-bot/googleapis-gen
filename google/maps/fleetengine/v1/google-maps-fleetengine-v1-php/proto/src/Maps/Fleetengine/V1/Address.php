<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/fleetengine/v1/fleetengine.proto

namespace Maps\Fleetengine\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Address of a place.
 *
 * Generated from protobuf message <code>maps.fleetengine.v1.Address</code>
 */
class Address extends \Google\Protobuf\Internal\Message
{
    /**
     * A full, human-readable address for this place.
     *
     * Generated from protobuf field <code>.maps.fleetengine.v1.FormattedAddress formatted_address = 1;</code>
     */
    protected $formatted_address = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Maps\Fleetengine\V1\FormattedAddress $formatted_address
     *           A full, human-readable address for this place.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Maps\Fleetengine\V1\Fleetengine::initOnce();
        parent::__construct($data);
    }

    /**
     * A full, human-readable address for this place.
     *
     * Generated from protobuf field <code>.maps.fleetengine.v1.FormattedAddress formatted_address = 1;</code>
     * @return \Maps\Fleetengine\V1\FormattedAddress|null
     */
    public function getFormattedAddress()
    {
        return $this->formatted_address;
    }

    public function hasFormattedAddress()
    {
        return isset($this->formatted_address);
    }

    public function clearFormattedAddress()
    {
        unset($this->formatted_address);
    }

    /**
     * A full, human-readable address for this place.
     *
     * Generated from protobuf field <code>.maps.fleetengine.v1.FormattedAddress formatted_address = 1;</code>
     * @param \Maps\Fleetengine\V1\FormattedAddress $var
     * @return $this
     */
    public function setFormattedAddress($var)
    {
        GPBUtil::checkMessage($var, \Maps\Fleetengine\V1\FormattedAddress::class);
        $this->formatted_address = $var;

        return $this;
    }

}

