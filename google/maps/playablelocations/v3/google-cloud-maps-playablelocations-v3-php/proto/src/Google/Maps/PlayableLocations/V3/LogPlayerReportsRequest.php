<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/playablelocations/v3/playablelocations.proto

namespace Google\Maps\PlayableLocations\V3;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A request for logging your player's bad location reports.
 *
 * Generated from protobuf message <code>google.maps.playablelocations.v3.LogPlayerReportsRequest</code>
 */
class LogPlayerReportsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Player reports. The maximum number of player reports that you can
     * log at once is 50.
     *
     * Generated from protobuf field <code>repeated .google.maps.playablelocations.v3.PlayerReport player_reports = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $player_reports;
    /**
     * Required. A string that uniquely identifies the log player reports request.
     * This allows you to detect duplicate requests. We recommend that you use
     * UUIDs for this value. The value must not exceed 50 characters.
     * You should reuse the `request_id` only when retrying a request in the case
     * of a failure. In that case, the request must be identical to the one that
     * failed.
     *
     * Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $request_id = '';
    /**
     * Required. Information about the client device (for example, device model
     * and operating system).
     *
     * Generated from protobuf field <code>.google.maps.unity.ClientInfo client_info = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $client_info = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Maps\PlayableLocations\V3\PlayerReport[]|\Google\Protobuf\Internal\RepeatedField $player_reports
     *           Required. Player reports. The maximum number of player reports that you can
     *           log at once is 50.
     *     @type string $request_id
     *           Required. A string that uniquely identifies the log player reports request.
     *           This allows you to detect duplicate requests. We recommend that you use
     *           UUIDs for this value. The value must not exceed 50 characters.
     *           You should reuse the `request_id` only when retrying a request in the case
     *           of a failure. In that case, the request must be identical to the one that
     *           failed.
     *     @type \Google\Maps\Unity\ClientInfo $client_info
     *           Required. Information about the client device (for example, device model
     *           and operating system).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Maps\Playablelocations\V3\Playablelocations::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Player reports. The maximum number of player reports that you can
     * log at once is 50.
     *
     * Generated from protobuf field <code>repeated .google.maps.playablelocations.v3.PlayerReport player_reports = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPlayerReports()
    {
        return $this->player_reports;
    }

    /**
     * Required. Player reports. The maximum number of player reports that you can
     * log at once is 50.
     *
     * Generated from protobuf field <code>repeated .google.maps.playablelocations.v3.PlayerReport player_reports = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Maps\PlayableLocations\V3\PlayerReport[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPlayerReports($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Maps\PlayableLocations\V3\PlayerReport::class);
        $this->player_reports = $arr;

        return $this;
    }

    /**
     * Required. A string that uniquely identifies the log player reports request.
     * This allows you to detect duplicate requests. We recommend that you use
     * UUIDs for this value. The value must not exceed 50 characters.
     * You should reuse the `request_id` only when retrying a request in the case
     * of a failure. In that case, the request must be identical to the one that
     * failed.
     *
     * Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Required. A string that uniquely identifies the log player reports request.
     * This allows you to detect duplicate requests. We recommend that you use
     * UUIDs for this value. The value must not exceed 50 characters.
     * You should reuse the `request_id` only when retrying a request in the case
     * of a failure. In that case, the request must be identical to the one that
     * failed.
     *
     * Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

    /**
     * Required. Information about the client device (for example, device model
     * and operating system).
     *
     * Generated from protobuf field <code>.google.maps.unity.ClientInfo client_info = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Maps\Unity\ClientInfo|null
     */
    public function getClientInfo()
    {
        return $this->client_info;
    }

    public function hasClientInfo()
    {
        return isset($this->client_info);
    }

    public function clearClientInfo()
    {
        unset($this->client_info);
    }

    /**
     * Required. Information about the client device (for example, device model
     * and operating system).
     *
     * Generated from protobuf field <code>.google.maps.unity.ClientInfo client_info = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Maps\Unity\ClientInfo $var
     * @return $this
     */
    public function setClientInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Maps\Unity\ClientInfo::class);
        $this->client_info = $var;

        return $this;
    }

}

