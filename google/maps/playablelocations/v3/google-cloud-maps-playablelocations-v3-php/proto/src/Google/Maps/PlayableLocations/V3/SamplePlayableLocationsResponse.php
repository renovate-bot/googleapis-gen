<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/playablelocations/v3/playablelocations.proto

namespace Google\Maps\PlayableLocations\V3;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Response for the
 * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
 * method.
 *
 * Generated from protobuf message <code>google.maps.playablelocations.v3.SamplePlayableLocationsResponse</code>
 */
class SamplePlayableLocationsResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Each PlayableLocation object corresponds to a game_object_type specified
     * in the request.
     *
     * Generated from protobuf field <code>map<int32, .google.maps.playablelocations.v3.sample.PlayableLocationList> locations_per_game_object_type = 1;</code>
     */
    private $locations_per_game_object_type;
    /**
     * Required. Specifies the "time-to-live" for the set of playable locations.
     * You can use this value to determine how long to cache the set of playable
     * locations. After this length of time, your back-end game server should
     * issue a new
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * request to get a fresh set of playable locations (because for example, they
     * might have been removed, a park might have closed for the day, a
     * business might have closed permanently).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration ttl = 9;</code>
     */
    protected $ttl = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array|\Google\Protobuf\Internal\MapField $locations_per_game_object_type
     *           Each PlayableLocation object corresponds to a game_object_type specified
     *           in the request.
     *     @type \Google\Protobuf\Duration $ttl
     *           Required. Specifies the "time-to-live" for the set of playable locations.
     *           You can use this value to determine how long to cache the set of playable
     *           locations. After this length of time, your back-end game server should
     *           issue a new
     *           [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     *           request to get a fresh set of playable locations (because for example, they
     *           might have been removed, a park might have closed for the day, a
     *           business might have closed permanently).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Maps\Playablelocations\V3\Playablelocations::initOnce();
        parent::__construct($data);
    }

    /**
     * Each PlayableLocation object corresponds to a game_object_type specified
     * in the request.
     *
     * Generated from protobuf field <code>map<int32, .google.maps.playablelocations.v3.sample.PlayableLocationList> locations_per_game_object_type = 1;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getLocationsPerGameObjectType()
    {
        return $this->locations_per_game_object_type;
    }

    /**
     * Each PlayableLocation object corresponds to a game_object_type specified
     * in the request.
     *
     * Generated from protobuf field <code>map<int32, .google.maps.playablelocations.v3.sample.PlayableLocationList> locations_per_game_object_type = 1;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setLocationsPerGameObjectType($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::INT32, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Maps\Playablelocations\V3\Sample\PlayableLocationList::class);
        $this->locations_per_game_object_type = $arr;

        return $this;
    }

    /**
     * Required. Specifies the "time-to-live" for the set of playable locations.
     * You can use this value to determine how long to cache the set of playable
     * locations. After this length of time, your back-end game server should
     * issue a new
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * request to get a fresh set of playable locations (because for example, they
     * might have been removed, a park might have closed for the day, a
     * business might have closed permanently).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration ttl = 9;</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getTtl()
    {
        return $this->ttl;
    }

    public function hasTtl()
    {
        return isset($this->ttl);
    }

    public function clearTtl()
    {
        unset($this->ttl);
    }

    /**
     * Required. Specifies the "time-to-live" for the set of playable locations.
     * You can use this value to determine how long to cache the set of playable
     * locations. After this length of time, your back-end game server should
     * issue a new
     * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
     * request to get a fresh set of playable locations (because for example, they
     * might have been removed, a park might have closed for the day, a
     * business might have closed permanently).
     *
     * Generated from protobuf field <code>.google.protobuf.Duration ttl = 9;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setTtl($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->ttl = $var;

        return $this;
    }

}

