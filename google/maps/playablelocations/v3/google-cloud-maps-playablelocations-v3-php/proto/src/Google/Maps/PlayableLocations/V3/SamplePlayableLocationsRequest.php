<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/playablelocations/v3/playablelocations.proto

namespace Google\Maps\PlayableLocations\V3;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Life of a query:
 * - When a game starts in a new location, your game server issues a
 * [SamplePlayableLocations][google.maps.playablelocations.v3.PlayableLocations.SamplePlayableLocations]
 * request. The request specifies the S2 cell, and contains one or more
 * "criteria" for filtering:
 * - Criterion 0: i locations for long-lived bases, or level 0 monsters, or...
 * - Criterion 1: j locations for short-lived bases, or level 1 monsters, ...
 * - Criterion 2: k locations for random objects.
 * - etc (up to 5 criterion may be specified).
 * `PlayableLocationList` will then contain mutually
 * exclusive lists of `PlayableLocation` objects that satisfy each of
 * the criteria. Think of it as a collection of real-world locations that you
 * can then associate with your game state.
 * Note: These points are impermanent in nature. E.g, parks can close, and
 * places can be removed.
 * The response specifies how long you can expect the playable locations to
 * last. Once they expire, you should query the `samplePlayableLocations` API
 * again to get a fresh view of the real world.
 *
 * Generated from protobuf message <code>google.maps.playablelocations.v3.SamplePlayableLocationsRequest</code>
 */
class SamplePlayableLocationsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Specifies the area to search within for playable locations.
     *
     * Generated from protobuf field <code>.google.maps.playablelocations.v3.sample.AreaFilter area_filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $area_filter = null;
    /**
     * Required. Specifies one or more (up to 5) criteria for filtering the
     * returned playable locations.
     *
     * Generated from protobuf field <code>repeated .google.maps.playablelocations.v3.sample.Criterion criteria = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $criteria;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Maps\Playablelocations\V3\Sample\AreaFilter $area_filter
     *           Required. Specifies the area to search within for playable locations.
     *     @type \Google\Maps\Playablelocations\V3\Sample\Criterion[]|\Google\Protobuf\Internal\RepeatedField $criteria
     *           Required. Specifies one or more (up to 5) criteria for filtering the
     *           returned playable locations.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Maps\Playablelocations\V3\Playablelocations::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Specifies the area to search within for playable locations.
     *
     * Generated from protobuf field <code>.google.maps.playablelocations.v3.sample.AreaFilter area_filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Maps\Playablelocations\V3\Sample\AreaFilter|null
     */
    public function getAreaFilter()
    {
        return $this->area_filter;
    }

    public function hasAreaFilter()
    {
        return isset($this->area_filter);
    }

    public function clearAreaFilter()
    {
        unset($this->area_filter);
    }

    /**
     * Required. Specifies the area to search within for playable locations.
     *
     * Generated from protobuf field <code>.google.maps.playablelocations.v3.sample.AreaFilter area_filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Maps\Playablelocations\V3\Sample\AreaFilter $var
     * @return $this
     */
    public function setAreaFilter($var)
    {
        GPBUtil::checkMessage($var, \Google\Maps\Playablelocations\V3\Sample\AreaFilter::class);
        $this->area_filter = $var;

        return $this;
    }

    /**
     * Required. Specifies one or more (up to 5) criteria for filtering the
     * returned playable locations.
     *
     * Generated from protobuf field <code>repeated .google.maps.playablelocations.v3.sample.Criterion criteria = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCriteria()
    {
        return $this->criteria;
    }

    /**
     * Required. Specifies one or more (up to 5) criteria for filtering the
     * returned playable locations.
     *
     * Generated from protobuf field <code>repeated .google.maps.playablelocations.v3.sample.Criterion criteria = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Maps\Playablelocations\V3\Sample\Criterion[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setCriteria($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Maps\Playablelocations\V3\Sample\Criterion::class);
        $this->criteria = $arr;

        return $this;
    }

}

