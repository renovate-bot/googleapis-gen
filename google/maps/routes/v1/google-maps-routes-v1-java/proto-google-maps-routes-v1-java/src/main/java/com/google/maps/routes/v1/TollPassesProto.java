// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/routes/v1/toll_passes.proto

package com.google.maps.routes.v1;

public final class TollPassesProto {
  private TollPassesProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'google/maps/routes/v1/toll_passes.prot" +
      "o\022\025google.maps.routes.v1*\274\002\n\010TollPass\022\031\n" +
      "\025TOLL_PASS_UNSPECIFIED\020\000\022\014\n\010AU_LINKT\020\002\022\017" +
      "\n\013AR_TELEPASE\020\003\022\020\n\014BR_CONECTCAR\020\007\022\020\n\014BR_" +
      "MOVE_MAIS\020\010\022\020\n\014BR_SEM_PARAR\020\t\022\014\n\010BR_TAGG" +
      "Y\020\n\022\014\n\010BR_VELOE\020\013\022\r\n\tID_E_TOLL\020\020\022\017\n\013MX_T" +
      "AG_IAVE\020\014\022\022\n\016MX_TAG_TELEVIA\020\r\022\016\n\nMX_VIAP" +
      "ASS\020\016\022\021\n\rUS_CA_FASTRAK\020\004\022\017\n\013US_IL_IPASS\020" +
      "\005\022\022\n\016US_MA_EZPASSMA\020\006\022\022\n\016US_NY_EZPASSNY\020" +
      "\017\022\024\n\020US_WA_GOOD_TO_GO\020\001B\245\001\n\031com.google.m" +
      "aps.routes.v1B\017TollPassesProtoP\001Z;google" +
      ".golang.org/genproto/googleapis/maps/rou" +
      "tes/v1;routes\370\001\001\242\002\004GMRS\252\002\025Google.Maps.Ro" +
      "utes.V1\312\002\025Google\\Maps\\Routes\\V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
