// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/spanner/v1/spanner.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Spanner.V1 {

  /// <summary>Holder for reflection information generated from google/spanner/v1/spanner.proto</summary>
  public static partial class SpannerReflection {

    #region Descriptor
    /// <summary>File descriptor for google/spanner/v1/spanner.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpannerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9nb29nbGUvc3Bhbm5lci92MS9zcGFubmVyLnByb3RvEhFnb29nbGUuc3Bh",
            "bm5lci52MRonZ29vZ2xlL3NwYW5uZXIvdjEvY29tbWl0X3Jlc3BvbnNlLnBy",
            "b3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGhdnb29nbGUvYXBp",
            "L2NsaWVudC5wcm90bxofZ29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90",
            "bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxobZ29vZ2xlL3Byb3RvYnVm",
            "L2VtcHR5LnByb3RvGhxnb29nbGUvcHJvdG9idWYvc3RydWN0LnByb3RvGh9n",
            "b29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhdnb29nbGUvcnBjL3N0",
            "YXR1cy5wcm90bxocZ29vZ2xlL3NwYW5uZXIvdjEva2V5cy5wcm90bxogZ29v",
            "Z2xlL3NwYW5uZXIvdjEvbXV0YXRpb24ucHJvdG8aImdvb2dsZS9zcGFubmVy",
            "L3YxL3Jlc3VsdF9zZXQucHJvdG8aI2dvb2dsZS9zcGFubmVyL3YxL3RyYW5z",
            "YWN0aW9uLnByb3RvGhxnb29nbGUvc3Bhbm5lci92MS90eXBlLnByb3RvIn4K",
            "FENyZWF0ZVNlc3Npb25SZXF1ZXN0EjkKCGRhdGFiYXNlGAEgASgJQifgQQL6",
            "QSEKH3NwYW5uZXIuZ29vZ2xlYXBpcy5jb20vRGF0YWJhc2USKwoHc2Vzc2lv",
            "bhgCIAEoCzIaLmdvb2dsZS5zcGFubmVyLnYxLlNlc3Npb24iqQEKGkJhdGNo",
            "Q3JlYXRlU2Vzc2lvbnNSZXF1ZXN0EjkKCGRhdGFiYXNlGAEgASgJQifgQQL6",
            "QSEKH3NwYW5uZXIuZ29vZ2xlYXBpcy5jb20vRGF0YWJhc2USNAoQc2Vzc2lv",
            "bl90ZW1wbGF0ZRgCIAEoCzIaLmdvb2dsZS5zcGFubmVyLnYxLlNlc3Npb24S",
            "GgoNc2Vzc2lvbl9jb3VudBgDIAEoBUID4EECIkoKG0JhdGNoQ3JlYXRlU2Vz",
            "c2lvbnNSZXNwb25zZRIrCgdzZXNzaW9uGAEgAygLMhouZ29vZ2xlLnNwYW5u",
            "ZXIudjEuU2Vzc2lvbiLzAgoHU2Vzc2lvbhIRCgRuYW1lGAEgASgJQgPgQQMS",
            "NgoGbGFiZWxzGAIgAygLMiYuZ29vZ2xlLnNwYW5uZXIudjEuU2Vzc2lvbi5M",
            "YWJlbHNFbnRyeRI0CgtjcmVhdGVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXBCA+BBAxJCChlhcHByb3hpbWF0ZV9sYXN0X3VzZV90",
            "aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDGi0K",
            "C0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAE6",
            "dOpBcQoec3Bhbm5lci5nb29nbGVhcGlzLmNvbS9TZXNzaW9uEk9wcm9qZWN0",
            "cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0vZGF0YWJhc2VzL3tk",
            "YXRhYmFzZX0vc2Vzc2lvbnMve3Nlc3Npb259IkkKEUdldFNlc3Npb25SZXF1",
            "ZXN0EjQKBG5hbWUYASABKAlCJuBBAvpBIAoec3Bhbm5lci5nb29nbGVhcGlz",
            "LmNvbS9TZXNzaW9uIocBChNMaXN0U2Vzc2lvbnNSZXF1ZXN0EjkKCGRhdGFi",
            "YXNlGAEgASgJQifgQQL6QSEKH3NwYW5uZXIuZ29vZ2xlYXBpcy5jb20vRGF0",
            "YWJhc2USEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2VfdG9rZW4YAyABKAkS",
            "DgoGZmlsdGVyGAQgASgJIl0KFExpc3RTZXNzaW9uc1Jlc3BvbnNlEiwKCHNl",
            "c3Npb25zGAEgAygLMhouZ29vZ2xlLnNwYW5uZXIudjEuU2Vzc2lvbhIXCg9u",
            "ZXh0X3BhZ2VfdG9rZW4YAiABKAkiTAoURGVsZXRlU2Vzc2lvblJlcXVlc3QS",
            "NAoEbmFtZRgBIAEoCUIm4EEC+kEgCh5zcGFubmVyLmdvb2dsZWFwaXMuY29t",
            "L1Nlc3Npb24i3AEKDlJlcXVlc3RPcHRpb25zEjwKCHByaW9yaXR5GAEgASgO",
            "MiouZ29vZ2xlLnNwYW5uZXIudjEuUmVxdWVzdE9wdGlvbnMuUHJpb3JpdHkS",
            "EwoLcmVxdWVzdF90YWcYAiABKAkSFwoPdHJhbnNhY3Rpb25fdGFnGAMgASgJ",
            "Il4KCFByaW9yaXR5EhgKFFBSSU9SSVRZX1VOU1BFQ0lGSUVEEAASEAoMUFJJ",
            "T1JJVFlfTE9XEAESEwoPUFJJT1JJVFlfTUVESVVNEAISEQoNUFJJT1JJVFlf",
            "SElHSBADIuQFChFFeGVjdXRlU3FsUmVxdWVzdBI3CgdzZXNzaW9uGAEgASgJ",
            "QibgQQL6QSAKHnNwYW5uZXIuZ29vZ2xlYXBpcy5jb20vU2Vzc2lvbhI7Cgt0",
            "cmFuc2FjdGlvbhgCIAEoCzImLmdvb2dsZS5zcGFubmVyLnYxLlRyYW5zYWN0",
            "aW9uU2VsZWN0b3ISEAoDc3FsGAMgASgJQgPgQQISJwoGcGFyYW1zGAQgASgL",
            "MhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBJJCgtwYXJhbV90eXBlcxgFIAMo",
            "CzI0Lmdvb2dsZS5zcGFubmVyLnYxLkV4ZWN1dGVTcWxSZXF1ZXN0LlBhcmFt",
            "VHlwZXNFbnRyeRIUCgxyZXN1bWVfdG9rZW4YBiABKAwSQgoKcXVlcnlfbW9k",
            "ZRgHIAEoDjIuLmdvb2dsZS5zcGFubmVyLnYxLkV4ZWN1dGVTcWxSZXF1ZXN0",
            "LlF1ZXJ5TW9kZRIXCg9wYXJ0aXRpb25fdG9rZW4YCCABKAwSDQoFc2Vxbm8Y",
            "CSABKAMSSAoNcXVlcnlfb3B0aW9ucxgKIAEoCzIxLmdvb2dsZS5zcGFubmVy",
            "LnYxLkV4ZWN1dGVTcWxSZXF1ZXN0LlF1ZXJ5T3B0aW9ucxI6Cg9yZXF1ZXN0",
            "X29wdGlvbnMYCyABKAsyIS5nb29nbGUuc3Bhbm5lci52MS5SZXF1ZXN0T3B0",
            "aW9ucxpPCgxRdWVyeU9wdGlvbnMSGQoRb3B0aW1pemVyX3ZlcnNpb24YASAB",
            "KAkSJAocb3B0aW1pemVyX3N0YXRpc3RpY3NfcGFja2FnZRgCIAEoCRpKCg9Q",
            "YXJhbVR5cGVzRW50cnkSCwoDa2V5GAEgASgJEiYKBXZhbHVlGAIgASgLMhcu",
            "Z29vZ2xlLnNwYW5uZXIudjEuVHlwZToCOAEiLgoJUXVlcnlNb2RlEgoKBk5P",
            "Uk1BTBAAEggKBFBMQU4QARILCgdQUk9GSUxFEAIimwQKFkV4ZWN1dGVCYXRj",
            "aERtbFJlcXVlc3QSNwoHc2Vzc2lvbhgBIAEoCUIm4EEC+kEgCh5zcGFubmVy",
            "Lmdvb2dsZWFwaXMuY29tL1Nlc3Npb24SQAoLdHJhbnNhY3Rpb24YAiABKAsy",
            "Ji5nb29nbGUuc3Bhbm5lci52MS5UcmFuc2FjdGlvblNlbGVjdG9yQgPgQQIS",
            "TAoKc3RhdGVtZW50cxgDIAMoCzIzLmdvb2dsZS5zcGFubmVyLnYxLkV4ZWN1",
            "dGVCYXRjaERtbFJlcXVlc3QuU3RhdGVtZW50QgPgQQISEgoFc2Vxbm8YBCAB",
            "KANCA+BBAhI6Cg9yZXF1ZXN0X29wdGlvbnMYBSABKAsyIS5nb29nbGUuc3Bh",
            "bm5lci52MS5SZXF1ZXN0T3B0aW9ucxrnAQoJU3RhdGVtZW50EgsKA3NxbBgB",
            "IAEoCRInCgZwYXJhbXMYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0",
            "ElgKC3BhcmFtX3R5cGVzGAMgAygLMkMuZ29vZ2xlLnNwYW5uZXIudjEuRXhl",
            "Y3V0ZUJhdGNoRG1sUmVxdWVzdC5TdGF0ZW1lbnQuUGFyYW1UeXBlc0VudHJ5",
            "GkoKD1BhcmFtVHlwZXNFbnRyeRILCgNrZXkYASABKAkSJgoFdmFsdWUYAiAB",
            "KAsyFy5nb29nbGUuc3Bhbm5lci52MS5UeXBlOgI4ASJwChdFeGVjdXRlQmF0",
            "Y2hEbWxSZXNwb25zZRIxCgtyZXN1bHRfc2V0cxgBIAMoCzIcLmdvb2dsZS5z",
            "cGFubmVyLnYxLlJlc3VsdFNldBIiCgZzdGF0dXMYAiABKAsyEi5nb29nbGUu",
            "cnBjLlN0YXR1cyJIChBQYXJ0aXRpb25PcHRpb25zEhwKFHBhcnRpdGlvbl9z",
            "aXplX2J5dGVzGAEgASgDEhYKDm1heF9wYXJ0aXRpb25zGAIgASgDIqMDChVQ",
            "YXJ0aXRpb25RdWVyeVJlcXVlc3QSNwoHc2Vzc2lvbhgBIAEoCUIm4EEC+kEg",
            "Ch5zcGFubmVyLmdvb2dsZWFwaXMuY29tL1Nlc3Npb24SOwoLdHJhbnNhY3Rp",
            "b24YAiABKAsyJi5nb29nbGUuc3Bhbm5lci52MS5UcmFuc2FjdGlvblNlbGVj",
            "dG9yEhAKA3NxbBgDIAEoCUID4EECEicKBnBhcmFtcxgEIAEoCzIXLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJ1Y3QSTQoLcGFyYW1fdHlwZXMYBSADKAsyOC5nb29n",
            "bGUuc3Bhbm5lci52MS5QYXJ0aXRpb25RdWVyeVJlcXVlc3QuUGFyYW1UeXBl",
            "c0VudHJ5Ej4KEXBhcnRpdGlvbl9vcHRpb25zGAYgASgLMiMuZ29vZ2xlLnNw",
            "YW5uZXIudjEuUGFydGl0aW9uT3B0aW9ucxpKCg9QYXJhbVR5cGVzRW50cnkS",
            "CwoDa2V5GAEgASgJEiYKBXZhbHVlGAIgASgLMhcuZ29vZ2xlLnNwYW5uZXIu",
            "djEuVHlwZToCOAEisQIKFFBhcnRpdGlvblJlYWRSZXF1ZXN0EjcKB3Nlc3Np",
            "b24YASABKAlCJuBBAvpBIAoec3Bhbm5lci5nb29nbGVhcGlzLmNvbS9TZXNz",
            "aW9uEjsKC3RyYW5zYWN0aW9uGAIgASgLMiYuZ29vZ2xlLnNwYW5uZXIudjEu",
            "VHJhbnNhY3Rpb25TZWxlY3RvchISCgV0YWJsZRgDIAEoCUID4EECEg0KBWlu",
            "ZGV4GAQgASgJEg8KB2NvbHVtbnMYBSADKAkSLwoHa2V5X3NldBgGIAEoCzIZ",
            "Lmdvb2dsZS5zcGFubmVyLnYxLktleVNldEID4EECEj4KEXBhcnRpdGlvbl9v",
            "cHRpb25zGAkgASgLMiMuZ29vZ2xlLnNwYW5uZXIudjEuUGFydGl0aW9uT3B0",
            "aW9ucyIkCglQYXJ0aXRpb24SFwoPcGFydGl0aW9uX3Rva2VuGAEgASgMInoK",
            "EVBhcnRpdGlvblJlc3BvbnNlEjAKCnBhcnRpdGlvbnMYASADKAsyHC5nb29n",
            "bGUuc3Bhbm5lci52MS5QYXJ0aXRpb24SMwoLdHJhbnNhY3Rpb24YAiABKAsy",
            "Hi5nb29nbGUuc3Bhbm5lci52MS5UcmFuc2FjdGlvbiLnAgoLUmVhZFJlcXVl",
            "c3QSNwoHc2Vzc2lvbhgBIAEoCUIm4EEC+kEgCh5zcGFubmVyLmdvb2dsZWFw",
            "aXMuY29tL1Nlc3Npb24SOwoLdHJhbnNhY3Rpb24YAiABKAsyJi5nb29nbGUu",
            "c3Bhbm5lci52MS5UcmFuc2FjdGlvblNlbGVjdG9yEhIKBXRhYmxlGAMgASgJ",
            "QgPgQQISDQoFaW5kZXgYBCABKAkSFAoHY29sdW1ucxgFIAMoCUID4EECEi8K",
            "B2tleV9zZXQYBiABKAsyGS5nb29nbGUuc3Bhbm5lci52MS5LZXlTZXRCA+BB",
            "AhINCgVsaW1pdBgIIAEoAxIUCgxyZXN1bWVfdG9rZW4YCSABKAwSFwoPcGFy",
            "dGl0aW9uX3Rva2VuGAogASgMEjoKD3JlcXVlc3Rfb3B0aW9ucxgLIAEoCzIh",
            "Lmdvb2dsZS5zcGFubmVyLnYxLlJlcXVlc3RPcHRpb25zIssBChdCZWdpblRy",
            "YW5zYWN0aW9uUmVxdWVzdBI3CgdzZXNzaW9uGAEgASgJQibgQQL6QSAKHnNw",
            "YW5uZXIuZ29vZ2xlYXBpcy5jb20vU2Vzc2lvbhI7CgdvcHRpb25zGAIgASgL",
            "MiUuZ29vZ2xlLnNwYW5uZXIudjEuVHJhbnNhY3Rpb25PcHRpb25zQgPgQQIS",
            "OgoPcmVxdWVzdF9vcHRpb25zGAMgASgLMiEuZ29vZ2xlLnNwYW5uZXIudjEu",
            "UmVxdWVzdE9wdGlvbnMiwwIKDUNvbW1pdFJlcXVlc3QSNwoHc2Vzc2lvbhgB",
            "IAEoCUIm4EEC+kEgCh5zcGFubmVyLmdvb2dsZWFwaXMuY29tL1Nlc3Npb24S",
            "GAoOdHJhbnNhY3Rpb25faWQYAiABKAxIABJHChZzaW5nbGVfdXNlX3RyYW5z",
            "YWN0aW9uGAMgASgLMiUuZ29vZ2xlLnNwYW5uZXIudjEuVHJhbnNhY3Rpb25P",
            "cHRpb25zSAASLgoJbXV0YXRpb25zGAQgAygLMhsuZ29vZ2xlLnNwYW5uZXIu",
            "djEuTXV0YXRpb24SGwoTcmV0dXJuX2NvbW1pdF9zdGF0cxgFIAEoCBI6Cg9y",
            "ZXF1ZXN0X29wdGlvbnMYBiABKAsyIS5nb29nbGUuc3Bhbm5lci52MS5SZXF1",
            "ZXN0T3B0aW9uc0INCgt0cmFuc2FjdGlvbiJnCg9Sb2xsYmFja1JlcXVlc3QS",
            "NwoHc2Vzc2lvbhgBIAEoCUIm4EEC+kEgCh5zcGFubmVyLmdvb2dsZWFwaXMu",
            "Y29tL1Nlc3Npb24SGwoOdHJhbnNhY3Rpb25faWQYAiABKAxCA+BBAjLAFgoH",
            "U3Bhbm5lchKmAQoNQ3JlYXRlU2Vzc2lvbhInLmdvb2dsZS5zcGFubmVyLnYx",
            "LkNyZWF0ZVNlc3Npb25SZXF1ZXN0GhouZ29vZ2xlLnNwYW5uZXIudjEuU2Vz",
            "c2lvbiJQgtPkkwI/IjovdjEve2RhdGFiYXNlPXByb2plY3RzLyovaW5zdGFu",
            "Y2VzLyovZGF0YWJhc2VzLyp9L3Nlc3Npb25zOgEq2kEIZGF0YWJhc2US4AEK",
            "E0JhdGNoQ3JlYXRlU2Vzc2lvbnMSLS5nb29nbGUuc3Bhbm5lci52MS5CYXRj",
            "aENyZWF0ZVNlc3Npb25zUmVxdWVzdBouLmdvb2dsZS5zcGFubmVyLnYxLkJh",
            "dGNoQ3JlYXRlU2Vzc2lvbnNSZXNwb25zZSJqgtPkkwJLIkYvdjEve2RhdGFi",
            "YXNlPXByb2plY3RzLyovaW5zdGFuY2VzLyovZGF0YWJhc2VzLyp9L3Nlc3Np",
            "b25zOmJhdGNoQ3JlYXRlOgEq2kEWZGF0YWJhc2Usc2Vzc2lvbl9jb3VudBKX",
            "AQoKR2V0U2Vzc2lvbhIkLmdvb2dsZS5zcGFubmVyLnYxLkdldFNlc3Npb25S",
            "ZXF1ZXN0GhouZ29vZ2xlLnNwYW5uZXIudjEuU2Vzc2lvbiJHgtPkkwI6Ejgv",
            "djEve25hbWU9cHJvamVjdHMvKi9pbnN0YW5jZXMvKi9kYXRhYmFzZXMvKi9z",
            "ZXNzaW9ucy8qfdpBBG5hbWUSrgEKDExpc3RTZXNzaW9ucxImLmdvb2dsZS5z",
            "cGFubmVyLnYxLkxpc3RTZXNzaW9uc1JlcXVlc3QaJy5nb29nbGUuc3Bhbm5l",
            "ci52MS5MaXN0U2Vzc2lvbnNSZXNwb25zZSJNgtPkkwI8EjovdjEve2RhdGFi",
            "YXNlPXByb2plY3RzLyovaW5zdGFuY2VzLyovZGF0YWJhc2VzLyp9L3Nlc3Np",
            "b25z2kEIZGF0YWJhc2USmQEKDURlbGV0ZVNlc3Npb24SJy5nb29nbGUuc3Bh",
            "bm5lci52MS5EZWxldGVTZXNzaW9uUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1",
            "Zi5FbXB0eSJHgtPkkwI6KjgvdjEve25hbWU9cHJvamVjdHMvKi9pbnN0YW5j",
            "ZXMvKi9kYXRhYmFzZXMvKi9zZXNzaW9ucy8qfdpBBG5hbWUSowEKCkV4ZWN1",
            "dGVTcWwSJC5nb29nbGUuc3Bhbm5lci52MS5FeGVjdXRlU3FsUmVxdWVzdBoc",
            "Lmdvb2dsZS5zcGFubmVyLnYxLlJlc3VsdFNldCJRgtPkkwJLIkYvdjEve3Nl",
            "c3Npb249cHJvamVjdHMvKi9pbnN0YW5jZXMvKi9kYXRhYmFzZXMvKi9zZXNz",
            "aW9ucy8qfTpleGVjdXRlU3FsOgEqEr4BChNFeGVjdXRlU3RyZWFtaW5nU3Fs",
            "EiQuZ29vZ2xlLnNwYW5uZXIudjEuRXhlY3V0ZVNxbFJlcXVlc3QaIy5nb29n",
            "bGUuc3Bhbm5lci52MS5QYXJ0aWFsUmVzdWx0U2V0IlqC0+STAlQiTy92MS97",
            "c2Vzc2lvbj1wcm9qZWN0cy8qL2luc3RhbmNlcy8qL2RhdGFiYXNlcy8qL3Nl",
            "c3Npb25zLyp9OmV4ZWN1dGVTdHJlYW1pbmdTcWw6ASowARLAAQoPRXhlY3V0",
            "ZUJhdGNoRG1sEikuZ29vZ2xlLnNwYW5uZXIudjEuRXhlY3V0ZUJhdGNoRG1s",
            "UmVxdWVzdBoqLmdvb2dsZS5zcGFubmVyLnYxLkV4ZWN1dGVCYXRjaERtbFJl",
            "c3BvbnNlIlaC0+STAlAiSy92MS97c2Vzc2lvbj1wcm9qZWN0cy8qL2luc3Rh",
            "bmNlcy8qL2RhdGFiYXNlcy8qL3Nlc3Npb25zLyp9OmV4ZWN1dGVCYXRjaERt",
            "bDoBKhKRAQoEUmVhZBIeLmdvb2dsZS5zcGFubmVyLnYxLlJlYWRSZXF1ZXN0",
            "GhwuZ29vZ2xlLnNwYW5uZXIudjEuUmVzdWx0U2V0IkuC0+STAkUiQC92MS97",
            "c2Vzc2lvbj1wcm9qZWN0cy8qL2luc3RhbmNlcy8qL2RhdGFiYXNlcy8qL3Nl",
            "c3Npb25zLyp9OnJlYWQ6ASoSrAEKDVN0cmVhbWluZ1JlYWQSHi5nb29nbGUu",
            "c3Bhbm5lci52MS5SZWFkUmVxdWVzdBojLmdvb2dsZS5zcGFubmVyLnYxLlBh",
            "cnRpYWxSZXN1bHRTZXQiVILT5JMCTiJJL3YxL3tzZXNzaW9uPXByb2plY3Rz",
            "LyovaW5zdGFuY2VzLyovZGF0YWJhc2VzLyovc2Vzc2lvbnMvKn06c3RyZWFt",
            "aW5nUmVhZDoBKjABEskBChBCZWdpblRyYW5zYWN0aW9uEiouZ29vZ2xlLnNw",
            "YW5uZXIudjEuQmVnaW5UcmFuc2FjdGlvblJlcXVlc3QaHi5nb29nbGUuc3Bh",
            "bm5lci52MS5UcmFuc2FjdGlvbiJpgtPkkwJRIkwvdjEve3Nlc3Npb249cHJv",
            "amVjdHMvKi9pbnN0YW5jZXMvKi9kYXRhYmFzZXMvKi9zZXNzaW9ucy8qfTpi",
            "ZWdpblRyYW5zYWN0aW9uOgEq2kEPc2Vzc2lvbixvcHRpb25zEusBCgZDb21t",
            "aXQSIC5nb29nbGUuc3Bhbm5lci52MS5Db21taXRSZXF1ZXN0GiEuZ29vZ2xl",
            "LnNwYW5uZXIudjEuQ29tbWl0UmVzcG9uc2UimwGC0+STAkciQi92MS97c2Vz",
            "c2lvbj1wcm9qZWN0cy8qL2luc3RhbmNlcy8qL2RhdGFiYXNlcy8qL3Nlc3Np",
            "b25zLyp9OmNvbW1pdDoBKtpBIHNlc3Npb24sdHJhbnNhY3Rpb25faWQsbXV0",
            "YXRpb25z2kEoc2Vzc2lvbixzaW5nbGVfdXNlX3RyYW5zYWN0aW9uLG11dGF0",
            "aW9ucxKwAQoIUm9sbGJhY2sSIi5nb29nbGUuc3Bhbm5lci52MS5Sb2xsYmFj",
            "a1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiaILT5JMCSSJEL3Yx",
            "L3tzZXNzaW9uPXByb2plY3RzLyovaW5zdGFuY2VzLyovZGF0YWJhc2VzLyov",
            "c2Vzc2lvbnMvKn06cm9sbGJhY2s6ASraQRZzZXNzaW9uLHRyYW5zYWN0aW9u",
            "X2lkErcBCg5QYXJ0aXRpb25RdWVyeRIoLmdvb2dsZS5zcGFubmVyLnYxLlBh",
            "cnRpdGlvblF1ZXJ5UmVxdWVzdBokLmdvb2dsZS5zcGFubmVyLnYxLlBhcnRp",
            "dGlvblJlc3BvbnNlIlWC0+STAk8iSi92MS97c2Vzc2lvbj1wcm9qZWN0cy8q",
            "L2luc3RhbmNlcy8qL2RhdGFiYXNlcy8qL3Nlc3Npb25zLyp9OnBhcnRpdGlv",
            "blF1ZXJ5OgEqErQBCg1QYXJ0aXRpb25SZWFkEicuZ29vZ2xlLnNwYW5uZXIu",
            "djEuUGFydGl0aW9uUmVhZFJlcXVlc3QaJC5nb29nbGUuc3Bhbm5lci52MS5Q",
            "YXJ0aXRpb25SZXNwb25zZSJUgtPkkwJOIkkvdjEve3Nlc3Npb249cHJvamVj",
            "dHMvKi9pbnN0YW5jZXMvKi9kYXRhYmFzZXMvKi9zZXNzaW9ucy8qfTpwYXJ0",
            "aXRpb25SZWFkOgEqGnfKQRZzcGFubmVyLmdvb2dsZWFwaXMuY29t0kFbaHR0",
            "cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxo",
            "dHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL3NwYW5uZXIuZGF0YUKU",
            "AgoVY29tLmdvb2dsZS5zcGFubmVyLnYxQgxTcGFubmVyUHJvdG9QAVo4Z29v",
            "Z2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9zcGFubmVyL3Yx",
            "O3NwYW5uZXKqAhdHb29nbGUuQ2xvdWQuU3Bhbm5lci5WMcoCF0dvb2dsZVxD",
            "bG91ZFxTcGFubmVyXFYx6gIaR29vZ2xlOjpDbG91ZDo6U3Bhbm5lcjo6VjHq",
            "QV8KH3NwYW5uZXIuZ29vZ2xlYXBpcy5jb20vRGF0YWJhc2USPHByb2plY3Rz",
            "L3twcm9qZWN0fS9pbnN0YW5jZXMve2luc3RhbmNlfS9kYXRhYmFzZXMve2Rh",
            "dGFiYXNlfVAAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Cloud.Spanner.V1.CommitResponseReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, global::Google.Cloud.Spanner.V1.KeysReflection.Descriptor, global::Google.Cloud.Spanner.V1.MutationReflection.Descriptor, global::Google.Cloud.Spanner.V1.ResultSetReflection.Descriptor, global::Google.Cloud.Spanner.V1.TransactionReflection.Descriptor, global::Google.Cloud.Spanner.V1.TypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.CreateSessionRequest), global::Google.Cloud.Spanner.V1.CreateSessionRequest.Parser, new[]{ "Database", "Session" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.BatchCreateSessionsRequest), global::Google.Cloud.Spanner.V1.BatchCreateSessionsRequest.Parser, new[]{ "Database", "SessionTemplate", "SessionCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.BatchCreateSessionsResponse), global::Google.Cloud.Spanner.V1.BatchCreateSessionsResponse.Parser, new[]{ "Session" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.Session), global::Google.Cloud.Spanner.V1.Session.Parser, new[]{ "Name", "Labels", "CreateTime", "ApproximateLastUseTime" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.GetSessionRequest), global::Google.Cloud.Spanner.V1.GetSessionRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.ListSessionsRequest), global::Google.Cloud.Spanner.V1.ListSessionsRequest.Parser, new[]{ "Database", "PageSize", "PageToken", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.ListSessionsResponse), global::Google.Cloud.Spanner.V1.ListSessionsResponse.Parser, new[]{ "Sessions", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.DeleteSessionRequest), global::Google.Cloud.Spanner.V1.DeleteSessionRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.RequestOptions), global::Google.Cloud.Spanner.V1.RequestOptions.Parser, new[]{ "Priority", "RequestTag", "TransactionTag" }, null, new[]{ typeof(global::Google.Cloud.Spanner.V1.RequestOptions.Types.Priority) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.ExecuteSqlRequest), global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Parser, new[]{ "Session", "Transaction", "Sql", "Params", "ParamTypes", "ResumeToken", "QueryMode", "PartitionToken", "Seqno", "QueryOptions", "RequestOptions" }, null, new[]{ typeof(global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryOptions), global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryOptions.Parser, new[]{ "OptimizerVersion", "OptimizerStatisticsPackage" }, null, null, null, null),
            null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest), global::Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Parser, new[]{ "Session", "Transaction", "Statements", "Seqno", "RequestOptions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement), global::Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Parser, new[]{ "Sql", "Params", "ParamTypes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse), global::Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.Parser, new[]{ "ResultSets", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.PartitionOptions), global::Google.Cloud.Spanner.V1.PartitionOptions.Parser, new[]{ "PartitionSizeBytes", "MaxPartitions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.PartitionQueryRequest), global::Google.Cloud.Spanner.V1.PartitionQueryRequest.Parser, new[]{ "Session", "Transaction", "Sql", "Params", "ParamTypes", "PartitionOptions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.PartitionReadRequest), global::Google.Cloud.Spanner.V1.PartitionReadRequest.Parser, new[]{ "Session", "Transaction", "Table", "Index", "Columns", "KeySet", "PartitionOptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.Partition), global::Google.Cloud.Spanner.V1.Partition.Parser, new[]{ "PartitionToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.PartitionResponse), global::Google.Cloud.Spanner.V1.PartitionResponse.Parser, new[]{ "Partitions", "Transaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.ReadRequest), global::Google.Cloud.Spanner.V1.ReadRequest.Parser, new[]{ "Session", "Transaction", "Table", "Index", "Columns", "KeySet", "Limit", "ResumeToken", "PartitionToken", "RequestOptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.BeginTransactionRequest), global::Google.Cloud.Spanner.V1.BeginTransactionRequest.Parser, new[]{ "Session", "Options", "RequestOptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.CommitRequest), global::Google.Cloud.Spanner.V1.CommitRequest.Parser, new[]{ "Session", "TransactionId", "SingleUseTransaction", "Mutations", "ReturnCommitStats", "RequestOptions" }, new[]{ "Transaction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.RollbackRequest), global::Google.Cloud.Spanner.V1.RollbackRequest.Parser, new[]{ "Session", "TransactionId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The request for [CreateSession][google.spanner.v1.Spanner.CreateSession].
  /// </summary>
  public sealed partial class CreateSessionRequest : pb::IMessage<CreateSessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateSessionRequest> _parser = new pb::MessageParser<CreateSessionRequest>(() => new CreateSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionRequest(CreateSessionRequest other) : this() {
      database_ = other.database_;
      session_ = other.session_ != null ? other.session_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionRequest Clone() {
      return new CreateSessionRequest(this);
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 1;
    private string database_ = "";
    /// <summary>
    /// Required. The database in which the new session is created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 2;
    private global::Google.Cloud.Spanner.V1.Session session_;
    /// <summary>
    /// The session to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.Session Session {
      get { return session_; }
      set {
        session_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Database != other.Database) return false;
      if (!object.Equals(Session, other.Session)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (session_ != null) hash ^= Session.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (session_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Session);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (session_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Session);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (session_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Session);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.session_ != null) {
        if (session_ == null) {
          Session = new global::Google.Cloud.Spanner.V1.Session();
        }
        Session.MergeFrom(other.Session);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
          case 18: {
            if (session_ == null) {
              Session = new global::Google.Cloud.Spanner.V1.Session();
            }
            input.ReadMessage(Session);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
          case 18: {
            if (session_ == null) {
              Session = new global::Google.Cloud.Spanner.V1.Session();
            }
            input.ReadMessage(Session);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [BatchCreateSessions][google.spanner.v1.Spanner.BatchCreateSessions].
  /// </summary>
  public sealed partial class BatchCreateSessionsRequest : pb::IMessage<BatchCreateSessionsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchCreateSessionsRequest> _parser = new pb::MessageParser<BatchCreateSessionsRequest>(() => new BatchCreateSessionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchCreateSessionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCreateSessionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCreateSessionsRequest(BatchCreateSessionsRequest other) : this() {
      database_ = other.database_;
      sessionTemplate_ = other.sessionTemplate_ != null ? other.sessionTemplate_.Clone() : null;
      sessionCount_ = other.sessionCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCreateSessionsRequest Clone() {
      return new BatchCreateSessionsRequest(this);
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 1;
    private string database_ = "";
    /// <summary>
    /// Required. The database in which the new sessions are created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_template" field.</summary>
    public const int SessionTemplateFieldNumber = 2;
    private global::Google.Cloud.Spanner.V1.Session sessionTemplate_;
    /// <summary>
    /// Parameters to be applied to each created session.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.Session SessionTemplate {
      get { return sessionTemplate_; }
      set {
        sessionTemplate_ = value;
      }
    }

    /// <summary>Field number for the "session_count" field.</summary>
    public const int SessionCountFieldNumber = 3;
    private int sessionCount_;
    /// <summary>
    /// Required. The number of sessions to be created in this batch call.
    /// The API may return fewer than the requested number of sessions. If a
    /// specific number of sessions are desired, the client can make additional
    /// calls to BatchCreateSessions (adjusting
    /// [session_count][google.spanner.v1.BatchCreateSessionsRequest.session_count] as necessary).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionCount {
      get { return sessionCount_; }
      set {
        sessionCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchCreateSessionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchCreateSessionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Database != other.Database) return false;
      if (!object.Equals(SessionTemplate, other.SessionTemplate)) return false;
      if (SessionCount != other.SessionCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (sessionTemplate_ != null) hash ^= SessionTemplate.GetHashCode();
      if (SessionCount != 0) hash ^= SessionCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (sessionTemplate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SessionTemplate);
      }
      if (SessionCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SessionCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (sessionTemplate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SessionTemplate);
      }
      if (SessionCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SessionCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (sessionTemplate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionTemplate);
      }
      if (SessionCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchCreateSessionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.sessionTemplate_ != null) {
        if (sessionTemplate_ == null) {
          SessionTemplate = new global::Google.Cloud.Spanner.V1.Session();
        }
        SessionTemplate.MergeFrom(other.SessionTemplate);
      }
      if (other.SessionCount != 0) {
        SessionCount = other.SessionCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
          case 18: {
            if (sessionTemplate_ == null) {
              SessionTemplate = new global::Google.Cloud.Spanner.V1.Session();
            }
            input.ReadMessage(SessionTemplate);
            break;
          }
          case 24: {
            SessionCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
          case 18: {
            if (sessionTemplate_ == null) {
              SessionTemplate = new global::Google.Cloud.Spanner.V1.Session();
            }
            input.ReadMessage(SessionTemplate);
            break;
          }
          case 24: {
            SessionCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response for [BatchCreateSessions][google.spanner.v1.Spanner.BatchCreateSessions].
  /// </summary>
  public sealed partial class BatchCreateSessionsResponse : pb::IMessage<BatchCreateSessionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BatchCreateSessionsResponse> _parser = new pb::MessageParser<BatchCreateSessionsResponse>(() => new BatchCreateSessionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchCreateSessionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCreateSessionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCreateSessionsResponse(BatchCreateSessionsResponse other) : this() {
      session_ = other.session_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchCreateSessionsResponse Clone() {
      return new BatchCreateSessionsResponse(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Spanner.V1.Session> _repeated_session_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Spanner.V1.Session.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Spanner.V1.Session> session_ = new pbc::RepeatedField<global::Google.Cloud.Spanner.V1.Session>();
    /// <summary>
    /// The freshly created sessions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Spanner.V1.Session> Session {
      get { return session_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchCreateSessionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchCreateSessionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!session_.Equals(other.session_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= session_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      session_.WriteTo(output, _repeated_session_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      session_.WriteTo(ref output, _repeated_session_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += session_.CalculateSize(_repeated_session_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchCreateSessionsResponse other) {
      if (other == null) {
        return;
      }
      session_.Add(other.session_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            session_.AddEntriesFrom(input, _repeated_session_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            session_.AddEntriesFrom(ref input, _repeated_session_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A session in the Cloud Spanner API.
  /// </summary>
  public sealed partial class Session : pb::IMessage<Session>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Session> _parser = new pb::MessageParser<Session>(() => new Session());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Session> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Session() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Session(Session other) : this() {
      name_ = other.name_;
      labels_ = other.labels_.Clone();
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      approximateLastUseTime_ = other.approximateLastUseTime_ != null ? other.approximateLastUseTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Session Clone() {
      return new Session(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The name of the session. This is always system-assigned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The labels for the session.
    ///
    ///  * Label keys must be between 1 and 63 characters long and must conform to
    ///    the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.
    ///  * Label values must be between 0 and 63 characters long and must conform
    ///    to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
    ///  * No more than 64 labels can be associated with a given session.
    ///
    /// See https://goo.gl/xmQnxf for more information on and examples of labels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The timestamp when the session is created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "approximate_last_use_time" field.</summary>
    public const int ApproximateLastUseTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp approximateLastUseTime_;
    /// <summary>
    /// Output only. The approximate timestamp when the session is last used. It is
    /// typically earlier than the actual last use time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ApproximateLastUseTime {
      get { return approximateLastUseTime_; }
      set {
        approximateLastUseTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Session);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Session other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(ApproximateLastUseTime, other.ApproximateLastUseTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (approximateLastUseTime_ != null) hash ^= ApproximateLastUseTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (approximateLastUseTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ApproximateLastUseTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (approximateLastUseTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ApproximateLastUseTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (approximateLastUseTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApproximateLastUseTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Session other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      labels_.Add(other.labels_);
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.approximateLastUseTime_ != null) {
        if (approximateLastUseTime_ == null) {
          ApproximateLastUseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ApproximateLastUseTime.MergeFrom(other.ApproximateLastUseTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (approximateLastUseTime_ == null) {
              ApproximateLastUseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ApproximateLastUseTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (approximateLastUseTime_ == null) {
              ApproximateLastUseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ApproximateLastUseTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [GetSession][google.spanner.v1.Spanner.GetSession].
  /// </summary>
  public sealed partial class GetSessionRequest : pb::IMessage<GetSessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetSessionRequest> _parser = new pb::MessageParser<GetSessionRequest>(() => new GetSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSessionRequest(GetSessionRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSessionRequest Clone() {
      return new GetSessionRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the session to retrieve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [ListSessions][google.spanner.v1.Spanner.ListSessions].
  /// </summary>
  public sealed partial class ListSessionsRequest : pb::IMessage<ListSessionsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListSessionsRequest> _parser = new pb::MessageParser<ListSessionsRequest>(() => new ListSessionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListSessionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSessionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSessionsRequest(ListSessionsRequest other) : this() {
      database_ = other.database_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSessionsRequest Clone() {
      return new ListSessionsRequest(this);
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 1;
    private string database_ = "";
    /// <summary>
    /// Required. The database in which to list sessions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// Number of sessions to be returned in the response. If 0 or less, defaults
    /// to the server's maximum allowed page size.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// If non-empty, `page_token` should contain a
    /// [next_page_token][google.spanner.v1.ListSessionsResponse.next_page_token] from a previous
    /// [ListSessionsResponse][google.spanner.v1.ListSessionsResponse].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// An expression for filtering the results of the request. Filter rules are
    /// case insensitive. The fields eligible for filtering are:
    ///
    ///   * `labels.key` where key is the name of a label
    ///
    /// Some examples of using filters are:
    ///
    ///   * `labels.env:*` --> The session has the label "env".
    ///   * `labels.env:dev` --> The session has the label "env" and the value of
    ///                        the label contains the string "dev".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListSessionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListSessionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Database != other.Database) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListSessionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response for [ListSessions][google.spanner.v1.Spanner.ListSessions].
  /// </summary>
  public sealed partial class ListSessionsResponse : pb::IMessage<ListSessionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListSessionsResponse> _parser = new pb::MessageParser<ListSessionsResponse>(() => new ListSessionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListSessionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSessionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSessionsResponse(ListSessionsResponse other) : this() {
      sessions_ = other.sessions_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSessionsResponse Clone() {
      return new ListSessionsResponse(this);
    }

    /// <summary>Field number for the "sessions" field.</summary>
    public const int SessionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Spanner.V1.Session> _repeated_sessions_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Spanner.V1.Session.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Spanner.V1.Session> sessions_ = new pbc::RepeatedField<global::Google.Cloud.Spanner.V1.Session>();
    /// <summary>
    /// The list of requested sessions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Spanner.V1.Session> Sessions {
      get { return sessions_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// `next_page_token` can be sent in a subsequent
    /// [ListSessions][google.spanner.v1.Spanner.ListSessions] call to fetch more of the matching
    /// sessions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListSessionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListSessionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sessions_.Equals(other.sessions_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sessions_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sessions_.WriteTo(output, _repeated_sessions_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sessions_.WriteTo(ref output, _repeated_sessions_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sessions_.CalculateSize(_repeated_sessions_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListSessionsResponse other) {
      if (other == null) {
        return;
      }
      sessions_.Add(other.sessions_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [DeleteSession][google.spanner.v1.Spanner.DeleteSession].
  /// </summary>
  public sealed partial class DeleteSessionRequest : pb::IMessage<DeleteSessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteSessionRequest> _parser = new pb::MessageParser<DeleteSessionRequest>(() => new DeleteSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSessionRequest(DeleteSessionRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSessionRequest Clone() {
      return new DeleteSessionRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the session to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Common request options for various APIs.
  /// </summary>
  public sealed partial class RequestOptions : pb::IMessage<RequestOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestOptions> _parser = new pb::MessageParser<RequestOptions>(() => new RequestOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOptions(RequestOptions other) : this() {
      priority_ = other.priority_;
      requestTag_ = other.requestTag_;
      transactionTag_ = other.transactionTag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOptions Clone() {
      return new RequestOptions(this);
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 1;
    private global::Google.Cloud.Spanner.V1.RequestOptions.Types.Priority priority_ = global::Google.Cloud.Spanner.V1.RequestOptions.Types.Priority.Unspecified;
    /// <summary>
    /// Priority for the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.RequestOptions.Types.Priority Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "request_tag" field.</summary>
    public const int RequestTagFieldNumber = 2;
    private string requestTag_ = "";
    /// <summary>
    /// A per-request tag which can be applied to queries or reads, used for
    /// statistics collection.
    /// Both request_tag and transaction_tag can be specified for a read or query
    /// that belongs to a transaction.
    /// This field is ignored for requests where it's not applicable (e.g.
    /// CommitRequest).
    /// Legal characters for `request_tag` values are all printable characters
    /// (ASCII 32 - 126) and the length of a request_tag is limited to 50
    /// characters. Values that exceed this limit are truncated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestTag {
      get { return requestTag_; }
      set {
        requestTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transaction_tag" field.</summary>
    public const int TransactionTagFieldNumber = 3;
    private string transactionTag_ = "";
    /// <summary>
    /// A tag used for statistics collection about this transaction.
    /// Both request_tag and transaction_tag can be specified for a read or query
    /// that belongs to a transaction.
    /// The value of transaction_tag should be the same for all requests belonging
    /// to the same transaction.
    /// If this request doesn’t belong to any transaction, transaction_tag will be
    /// ignored.
    /// Legal characters for `transaction_tag` values are all printable characters
    /// (ASCII 32 - 126) and the length of a transaction_tag is limited to 50
    /// characters. Values that exceed this limit are truncated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionTag {
      get { return transactionTag_; }
      set {
        transactionTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Priority != other.Priority) return false;
      if (RequestTag != other.RequestTag) return false;
      if (TransactionTag != other.TransactionTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Priority != global::Google.Cloud.Spanner.V1.RequestOptions.Types.Priority.Unspecified) hash ^= Priority.GetHashCode();
      if (RequestTag.Length != 0) hash ^= RequestTag.GetHashCode();
      if (TransactionTag.Length != 0) hash ^= TransactionTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Priority != global::Google.Cloud.Spanner.V1.RequestOptions.Types.Priority.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Priority);
      }
      if (RequestTag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestTag);
      }
      if (TransactionTag.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TransactionTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Priority != global::Google.Cloud.Spanner.V1.RequestOptions.Types.Priority.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Priority);
      }
      if (RequestTag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestTag);
      }
      if (TransactionTag.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TransactionTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Priority != global::Google.Cloud.Spanner.V1.RequestOptions.Types.Priority.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Priority);
      }
      if (RequestTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestTag);
      }
      if (TransactionTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionTag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestOptions other) {
      if (other == null) {
        return;
      }
      if (other.Priority != global::Google.Cloud.Spanner.V1.RequestOptions.Types.Priority.Unspecified) {
        Priority = other.Priority;
      }
      if (other.RequestTag.Length != 0) {
        RequestTag = other.RequestTag;
      }
      if (other.TransactionTag.Length != 0) {
        TransactionTag = other.TransactionTag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Priority = (global::Google.Cloud.Spanner.V1.RequestOptions.Types.Priority) input.ReadEnum();
            break;
          }
          case 18: {
            RequestTag = input.ReadString();
            break;
          }
          case 26: {
            TransactionTag = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Priority = (global::Google.Cloud.Spanner.V1.RequestOptions.Types.Priority) input.ReadEnum();
            break;
          }
          case 18: {
            RequestTag = input.ReadString();
            break;
          }
          case 26: {
            TransactionTag = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RequestOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The relative priority for requests. Note that priority is not applicable
      /// for [BeginTransaction][google.spanner.v1.Spanner.BeginTransaction].
      ///
      /// The priority acts as a hint to the Cloud Spanner scheduler and does not
      /// guarantee priority or order of execution. For example:
      ///
      /// * Some parts of a write operation always execute at `PRIORITY_HIGH`,
      ///   regardless of the specified priority. This may cause you to see an
      ///   increase in high priority workload even when executing a low priority
      ///   request. This can also potentially cause a priority inversion where a
      ///   lower priority request will be fulfilled ahead of a higher priority
      ///   request.
      /// * If a transaction contains multiple operations with different priorities,
      ///   Cloud Spanner does not guarantee to process the higher priority
      ///   operations first. There may be other constraints to satisfy, such as
      ///   order of operations.
      /// </summary>
      public enum Priority {
        /// <summary>
        /// `PRIORITY_UNSPECIFIED` is equivalent to `PRIORITY_HIGH`.
        /// </summary>
        [pbr::OriginalName("PRIORITY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// This specifies that the request is low priority.
        /// </summary>
        [pbr::OriginalName("PRIORITY_LOW")] Low = 1,
        /// <summary>
        /// This specifies that the request is medium priority.
        /// </summary>
        [pbr::OriginalName("PRIORITY_MEDIUM")] Medium = 2,
        /// <summary>
        /// This specifies that the request is high priority.
        /// </summary>
        [pbr::OriginalName("PRIORITY_HIGH")] High = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// The request for [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] and
  /// [ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql].
  /// </summary>
  public sealed partial class ExecuteSqlRequest : pb::IMessage<ExecuteSqlRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecuteSqlRequest> _parser = new pb::MessageParser<ExecuteSqlRequest>(() => new ExecuteSqlRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecuteSqlRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecuteSqlRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecuteSqlRequest(ExecuteSqlRequest other) : this() {
      session_ = other.session_;
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      sql_ = other.sql_;
      params_ = other.params_ != null ? other.params_.Clone() : null;
      paramTypes_ = other.paramTypes_.Clone();
      resumeToken_ = other.resumeToken_;
      queryMode_ = other.queryMode_;
      partitionToken_ = other.partitionToken_;
      seqno_ = other.seqno_;
      queryOptions_ = other.queryOptions_ != null ? other.queryOptions_.Clone() : null;
      requestOptions_ = other.requestOptions_ != null ? other.requestOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecuteSqlRequest Clone() {
      return new ExecuteSqlRequest(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private string session_ = "";
    /// <summary>
    /// Required. The session in which the SQL query should be performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 2;
    private global::Google.Cloud.Spanner.V1.TransactionSelector transaction_;
    /// <summary>
    /// The transaction to use.
    ///
    /// For queries, if none is provided, the default is a temporary read-only
    /// transaction with strong concurrency.
    ///
    /// Standard DML statements require a read-write transaction. To protect
    /// against replays, single-use transactions are not supported.  The caller
    /// must either supply an existing transaction ID or begin a new transaction.
    ///
    /// Partitioned DML requires an existing Partitioned DML transaction ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.TransactionSelector Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "sql" field.</summary>
    public const int SqlFieldNumber = 3;
    private string sql_ = "";
    /// <summary>
    /// Required. The SQL string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sql {
      get { return sql_; }
      set {
        sql_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Struct params_;
    /// <summary>
    /// Parameter names and values that bind to placeholders in the SQL string.
    ///
    /// A parameter placeholder consists of the `@` character followed by the
    /// parameter name (for example, `@firstName`). Parameter names must conform
    /// to the naming requirements of identifiers as specified at
    /// https://cloud.google.com/spanner/docs/lexical#identifiers.
    ///
    /// Parameters can appear anywhere that a literal value is expected.  The same
    /// parameter name can be used more than once, for example:
    ///
    /// `"WHERE id > @msg_id AND id &lt; @msg_id + 100"`
    ///
    /// It is an error to execute a SQL statement with unbound parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Params {
      get { return params_; }
      set {
        params_ = value;
      }
    }

    /// <summary>Field number for the "param_types" field.</summary>
    public const int ParamTypesFieldNumber = 5;
    private static readonly pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type>.Codec _map_paramTypes_codec
        = new pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Spanner.V1.Type.Parser), 42);
    private readonly pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type> paramTypes_ = new pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type>();
    /// <summary>
    /// It is not always possible for Cloud Spanner to infer the right SQL type
    /// from a JSON value.  For example, values of type `BYTES` and values
    /// of type `STRING` both appear in [params][google.spanner.v1.ExecuteSqlRequest.params] as JSON strings.
    ///
    /// In these cases, `param_types` can be used to specify the exact
    /// SQL type for some or all of the SQL statement parameters. See the
    /// definition of [Type][google.spanner.v1.Type] for more information
    /// about SQL types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type> ParamTypes {
      get { return paramTypes_; }
    }

    /// <summary>Field number for the "resume_token" field.</summary>
    public const int ResumeTokenFieldNumber = 6;
    private pb::ByteString resumeToken_ = pb::ByteString.Empty;
    /// <summary>
    /// If this request is resuming a previously interrupted SQL statement
    /// execution, `resume_token` should be copied from the last
    /// [PartialResultSet][google.spanner.v1.PartialResultSet] yielded before the interruption. Doing this
    /// enables the new SQL statement execution to resume where the last one left
    /// off. The rest of the request parameters must exactly match the
    /// request that yielded this token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ResumeToken {
      get { return resumeToken_; }
      set {
        resumeToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query_mode" field.</summary>
    public const int QueryModeFieldNumber = 7;
    private global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode queryMode_ = global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode.Normal;
    /// <summary>
    /// Used to control the amount of debugging information returned in
    /// [ResultSetStats][google.spanner.v1.ResultSetStats]. If [partition_token][google.spanner.v1.ExecuteSqlRequest.partition_token] is set, [query_mode][google.spanner.v1.ExecuteSqlRequest.query_mode] can only
    /// be set to [QueryMode.NORMAL][google.spanner.v1.ExecuteSqlRequest.QueryMode.NORMAL].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode QueryMode {
      get { return queryMode_; }
      set {
        queryMode_ = value;
      }
    }

    /// <summary>Field number for the "partition_token" field.</summary>
    public const int PartitionTokenFieldNumber = 8;
    private pb::ByteString partitionToken_ = pb::ByteString.Empty;
    /// <summary>
    /// If present, results will be restricted to the specified partition
    /// previously created using PartitionQuery().  There must be an exact
    /// match for the values of fields common to this message and the
    /// PartitionQueryRequest message used to create this partition_token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PartitionToken {
      get { return partitionToken_; }
      set {
        partitionToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seqno" field.</summary>
    public const int SeqnoFieldNumber = 9;
    private long seqno_;
    /// <summary>
    /// A per-transaction sequence number used to identify this request. This field
    /// makes each request idempotent such that if the request is received multiple
    /// times, at most one will succeed.
    ///
    /// The sequence number must be monotonically increasing within the
    /// transaction. If a request arrives for the first time with an out-of-order
    /// sequence number, the transaction may be aborted. Replays of previously
    /// handled requests will yield the same response as the first execution.
    ///
    /// Required for DML statements. Ignored for queries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Seqno {
      get { return seqno_; }
      set {
        seqno_ = value;
      }
    }

    /// <summary>Field number for the "query_options" field.</summary>
    public const int QueryOptionsFieldNumber = 10;
    private global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryOptions queryOptions_;
    /// <summary>
    /// Query optimizer configuration to use for the given query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryOptions QueryOptions {
      get { return queryOptions_; }
      set {
        queryOptions_ = value;
      }
    }

    /// <summary>Field number for the "request_options" field.</summary>
    public const int RequestOptionsFieldNumber = 11;
    private global::Google.Cloud.Spanner.V1.RequestOptions requestOptions_;
    /// <summary>
    /// Common options for this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.RequestOptions RequestOptions {
      get { return requestOptions_; }
      set {
        requestOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecuteSqlRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecuteSqlRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (Sql != other.Sql) return false;
      if (!object.Equals(Params, other.Params)) return false;
      if (!ParamTypes.Equals(other.ParamTypes)) return false;
      if (ResumeToken != other.ResumeToken) return false;
      if (QueryMode != other.QueryMode) return false;
      if (PartitionToken != other.PartitionToken) return false;
      if (Seqno != other.Seqno) return false;
      if (!object.Equals(QueryOptions, other.QueryOptions)) return false;
      if (!object.Equals(RequestOptions, other.RequestOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (Sql.Length != 0) hash ^= Sql.GetHashCode();
      if (params_ != null) hash ^= Params.GetHashCode();
      hash ^= ParamTypes.GetHashCode();
      if (ResumeToken.Length != 0) hash ^= ResumeToken.GetHashCode();
      if (QueryMode != global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode.Normal) hash ^= QueryMode.GetHashCode();
      if (PartitionToken.Length != 0) hash ^= PartitionToken.GetHashCode();
      if (Seqno != 0L) hash ^= Seqno.GetHashCode();
      if (queryOptions_ != null) hash ^= QueryOptions.GetHashCode();
      if (requestOptions_ != null) hash ^= RequestOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (transaction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transaction);
      }
      if (Sql.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Sql);
      }
      if (params_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Params);
      }
      paramTypes_.WriteTo(output, _map_paramTypes_codec);
      if (ResumeToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(ResumeToken);
      }
      if (QueryMode != global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode.Normal) {
        output.WriteRawTag(56);
        output.WriteEnum((int) QueryMode);
      }
      if (PartitionToken.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(PartitionToken);
      }
      if (Seqno != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Seqno);
      }
      if (queryOptions_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(QueryOptions);
      }
      if (requestOptions_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RequestOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (transaction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transaction);
      }
      if (Sql.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Sql);
      }
      if (params_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Params);
      }
      paramTypes_.WriteTo(ref output, _map_paramTypes_codec);
      if (ResumeToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(ResumeToken);
      }
      if (QueryMode != global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode.Normal) {
        output.WriteRawTag(56);
        output.WriteEnum((int) QueryMode);
      }
      if (PartitionToken.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(PartitionToken);
      }
      if (Seqno != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Seqno);
      }
      if (queryOptions_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(QueryOptions);
      }
      if (requestOptions_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RequestOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (Sql.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sql);
      }
      if (params_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Params);
      }
      size += paramTypes_.CalculateSize(_map_paramTypes_codec);
      if (ResumeToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ResumeToken);
      }
      if (QueryMode != global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode.Normal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QueryMode);
      }
      if (PartitionToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PartitionToken);
      }
      if (Seqno != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Seqno);
      }
      if (queryOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryOptions);
      }
      if (requestOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecuteSqlRequest other) {
      if (other == null) {
        return;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.Sql.Length != 0) {
        Sql = other.Sql;
      }
      if (other.params_ != null) {
        if (params_ == null) {
          Params = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Params.MergeFrom(other.Params);
      }
      paramTypes_.Add(other.paramTypes_);
      if (other.ResumeToken.Length != 0) {
        ResumeToken = other.ResumeToken;
      }
      if (other.QueryMode != global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode.Normal) {
        QueryMode = other.QueryMode;
      }
      if (other.PartitionToken.Length != 0) {
        PartitionToken = other.PartitionToken;
      }
      if (other.Seqno != 0L) {
        Seqno = other.Seqno;
      }
      if (other.queryOptions_ != null) {
        if (queryOptions_ == null) {
          QueryOptions = new global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryOptions();
        }
        QueryOptions.MergeFrom(other.QueryOptions);
      }
      if (other.requestOptions_ != null) {
        if (requestOptions_ == null) {
          RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
        }
        RequestOptions.MergeFrom(other.RequestOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (transaction_ == null) {
              Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 26: {
            Sql = input.ReadString();
            break;
          }
          case 34: {
            if (params_ == null) {
              Params = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Params);
            break;
          }
          case 42: {
            paramTypes_.AddEntriesFrom(input, _map_paramTypes_codec);
            break;
          }
          case 50: {
            ResumeToken = input.ReadBytes();
            break;
          }
          case 56: {
            QueryMode = (global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode) input.ReadEnum();
            break;
          }
          case 66: {
            PartitionToken = input.ReadBytes();
            break;
          }
          case 72: {
            Seqno = input.ReadInt64();
            break;
          }
          case 82: {
            if (queryOptions_ == null) {
              QueryOptions = new global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryOptions();
            }
            input.ReadMessage(QueryOptions);
            break;
          }
          case 90: {
            if (requestOptions_ == null) {
              RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
            }
            input.ReadMessage(RequestOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (transaction_ == null) {
              Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 26: {
            Sql = input.ReadString();
            break;
          }
          case 34: {
            if (params_ == null) {
              Params = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Params);
            break;
          }
          case 42: {
            paramTypes_.AddEntriesFrom(ref input, _map_paramTypes_codec);
            break;
          }
          case 50: {
            ResumeToken = input.ReadBytes();
            break;
          }
          case 56: {
            QueryMode = (global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode) input.ReadEnum();
            break;
          }
          case 66: {
            PartitionToken = input.ReadBytes();
            break;
          }
          case 72: {
            Seqno = input.ReadInt64();
            break;
          }
          case 82: {
            if (queryOptions_ == null) {
              QueryOptions = new global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryOptions();
            }
            input.ReadMessage(QueryOptions);
            break;
          }
          case 90: {
            if (requestOptions_ == null) {
              RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
            }
            input.ReadMessage(RequestOptions);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ExecuteSqlRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Mode in which the statement must be processed.
      /// </summary>
      public enum QueryMode {
        /// <summary>
        /// The default mode. Only the statement results are returned.
        /// </summary>
        [pbr::OriginalName("NORMAL")] Normal = 0,
        /// <summary>
        /// This mode returns only the query plan, without any results or
        /// execution statistics information.
        /// </summary>
        [pbr::OriginalName("PLAN")] Plan = 1,
        /// <summary>
        /// This mode returns both the query plan and the execution statistics along
        /// with the results.
        /// </summary>
        [pbr::OriginalName("PROFILE")] Profile = 2,
      }

      /// <summary>
      /// Query optimizer configuration.
      /// </summary>
      public sealed partial class QueryOptions : pb::IMessage<QueryOptions>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<QueryOptions> _parser = new pb::MessageParser<QueryOptions>(() => new QueryOptions());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<QueryOptions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Spanner.V1.ExecuteSqlRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryOptions() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryOptions(QueryOptions other) : this() {
          optimizerVersion_ = other.optimizerVersion_;
          optimizerStatisticsPackage_ = other.optimizerStatisticsPackage_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QueryOptions Clone() {
          return new QueryOptions(this);
        }

        /// <summary>Field number for the "optimizer_version" field.</summary>
        public const int OptimizerVersionFieldNumber = 1;
        private string optimizerVersion_ = "";
        /// <summary>
        /// An option to control the selection of optimizer version.
        ///
        /// This parameter allows individual queries to pick different query
        /// optimizer versions.
        ///
        /// Specifying `latest` as a value instructs Cloud Spanner to use the
        /// latest supported query optimizer version. If not specified, Cloud Spanner
        /// uses the optimizer version set at the database level options. Any other
        /// positive integer (from the list of supported optimizer versions)
        /// overrides the default optimizer version for query execution.
        ///
        /// The list of supported optimizer versions can be queried from
        /// SPANNER_SYS.SUPPORTED_OPTIMIZER_VERSIONS.
        ///
        /// Executing a SQL statement with an invalid optimizer version fails with
        /// an `INVALID_ARGUMENT` error.
        ///
        /// See
        /// https://cloud.google.com/spanner/docs/query-optimizer/manage-query-optimizer
        /// for more information on managing the query optimizer.
        ///
        /// The `optimizer_version` statement hint has precedence over this setting.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OptimizerVersion {
          get { return optimizerVersion_; }
          set {
            optimizerVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "optimizer_statistics_package" field.</summary>
        public const int OptimizerStatisticsPackageFieldNumber = 2;
        private string optimizerStatisticsPackage_ = "";
        /// <summary>
        /// An option to control the selection of optimizer statistics package.
        ///
        /// This parameter allows individual queries to use a different query
        /// optimizer statistics package.
        ///
        /// Specifying `latest` as a value instructs Cloud Spanner to use the latest
        /// generated statistics package. If not specified, Cloud Spanner uses
        /// the statistics package set at the database level options, or the latest
        /// package if the database option is not set.
        ///
        /// The statistics package requested by the query has to be exempt from
        /// garbage collection. This can be achieved with the following DDL
        /// statement:
        ///
        /// ```
        /// ALTER STATISTICS &lt;package_name> SET OPTIONS (allow_gc=false)
        /// ```
        ///
        /// The list of available statistics packages can be queried from
        /// `INFORMATION_SCHEMA.SPANNER_STATISTICS`.
        ///
        /// Executing a SQL statement with an invalid optimizer statistics package
        /// or with a statistics package that allows garbage collection fails with
        /// an `INVALID_ARGUMENT` error.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OptimizerStatisticsPackage {
          get { return optimizerStatisticsPackage_; }
          set {
            optimizerStatisticsPackage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as QueryOptions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(QueryOptions other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OptimizerVersion != other.OptimizerVersion) return false;
          if (OptimizerStatisticsPackage != other.OptimizerStatisticsPackage) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OptimizerVersion.Length != 0) hash ^= OptimizerVersion.GetHashCode();
          if (OptimizerStatisticsPackage.Length != 0) hash ^= OptimizerStatisticsPackage.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (OptimizerVersion.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(OptimizerVersion);
          }
          if (OptimizerStatisticsPackage.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(OptimizerStatisticsPackage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (OptimizerVersion.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(OptimizerVersion);
          }
          if (OptimizerStatisticsPackage.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(OptimizerStatisticsPackage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OptimizerVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OptimizerVersion);
          }
          if (OptimizerStatisticsPackage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OptimizerStatisticsPackage);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(QueryOptions other) {
          if (other == null) {
            return;
          }
          if (other.OptimizerVersion.Length != 0) {
            OptimizerVersion = other.OptimizerVersion;
          }
          if (other.OptimizerStatisticsPackage.Length != 0) {
            OptimizerStatisticsPackage = other.OptimizerStatisticsPackage;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                OptimizerVersion = input.ReadString();
                break;
              }
              case 18: {
                OptimizerStatisticsPackage = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                OptimizerVersion = input.ReadString();
                break;
              }
              case 18: {
                OptimizerStatisticsPackage = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// The request for [ExecuteBatchDml][google.spanner.v1.Spanner.ExecuteBatchDml].
  /// </summary>
  public sealed partial class ExecuteBatchDmlRequest : pb::IMessage<ExecuteBatchDmlRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecuteBatchDmlRequest> _parser = new pb::MessageParser<ExecuteBatchDmlRequest>(() => new ExecuteBatchDmlRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecuteBatchDmlRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecuteBatchDmlRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecuteBatchDmlRequest(ExecuteBatchDmlRequest other) : this() {
      session_ = other.session_;
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      statements_ = other.statements_.Clone();
      seqno_ = other.seqno_;
      requestOptions_ = other.requestOptions_ != null ? other.requestOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecuteBatchDmlRequest Clone() {
      return new ExecuteBatchDmlRequest(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private string session_ = "";
    /// <summary>
    /// Required. The session in which the DML statements should be performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 2;
    private global::Google.Cloud.Spanner.V1.TransactionSelector transaction_;
    /// <summary>
    /// Required. The transaction to use. Must be a read-write transaction.
    ///
    /// To protect against replays, single-use transactions are not supported. The
    /// caller must either supply an existing transaction ID or begin a new
    /// transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.TransactionSelector Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "statements" field.</summary>
    public const int StatementsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement> _repeated_statements_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement> statements_ = new pbc::RepeatedField<global::Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement>();
    /// <summary>
    /// Required. The list of statements to execute in this batch. Statements are executed
    /// serially, such that the effects of statement `i` are visible to statement
    /// `i+1`. Each statement must be a DML statement. Execution stops at the
    /// first failed statement; the remaining statements are not executed.
    ///
    /// Callers must provide at least one statement.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement> Statements {
      get { return statements_; }
    }

    /// <summary>Field number for the "seqno" field.</summary>
    public const int SeqnoFieldNumber = 4;
    private long seqno_;
    /// <summary>
    /// Required. A per-transaction sequence number used to identify this request. This field
    /// makes each request idempotent such that if the request is received multiple
    /// times, at most one will succeed.
    ///
    /// The sequence number must be monotonically increasing within the
    /// transaction. If a request arrives for the first time with an out-of-order
    /// sequence number, the transaction may be aborted. Replays of previously
    /// handled requests will yield the same response as the first execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Seqno {
      get { return seqno_; }
      set {
        seqno_ = value;
      }
    }

    /// <summary>Field number for the "request_options" field.</summary>
    public const int RequestOptionsFieldNumber = 5;
    private global::Google.Cloud.Spanner.V1.RequestOptions requestOptions_;
    /// <summary>
    /// Common options for this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.RequestOptions RequestOptions {
      get { return requestOptions_; }
      set {
        requestOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecuteBatchDmlRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecuteBatchDmlRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if(!statements_.Equals(other.statements_)) return false;
      if (Seqno != other.Seqno) return false;
      if (!object.Equals(RequestOptions, other.RequestOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      hash ^= statements_.GetHashCode();
      if (Seqno != 0L) hash ^= Seqno.GetHashCode();
      if (requestOptions_ != null) hash ^= RequestOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (transaction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transaction);
      }
      statements_.WriteTo(output, _repeated_statements_codec);
      if (Seqno != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Seqno);
      }
      if (requestOptions_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RequestOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (transaction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transaction);
      }
      statements_.WriteTo(ref output, _repeated_statements_codec);
      if (Seqno != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Seqno);
      }
      if (requestOptions_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RequestOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      size += statements_.CalculateSize(_repeated_statements_codec);
      if (Seqno != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Seqno);
      }
      if (requestOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecuteBatchDmlRequest other) {
      if (other == null) {
        return;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      statements_.Add(other.statements_);
      if (other.Seqno != 0L) {
        Seqno = other.Seqno;
      }
      if (other.requestOptions_ != null) {
        if (requestOptions_ == null) {
          RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
        }
        RequestOptions.MergeFrom(other.RequestOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (transaction_ == null) {
              Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 26: {
            statements_.AddEntriesFrom(input, _repeated_statements_codec);
            break;
          }
          case 32: {
            Seqno = input.ReadInt64();
            break;
          }
          case 42: {
            if (requestOptions_ == null) {
              RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
            }
            input.ReadMessage(RequestOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (transaction_ == null) {
              Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 26: {
            statements_.AddEntriesFrom(ref input, _repeated_statements_codec);
            break;
          }
          case 32: {
            Seqno = input.ReadInt64();
            break;
          }
          case 42: {
            if (requestOptions_ == null) {
              RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
            }
            input.ReadMessage(RequestOptions);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ExecuteBatchDmlRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A single DML statement.
      /// </summary>
      public sealed partial class Statement : pb::IMessage<Statement>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Statement> _parser = new pb::MessageParser<Statement>(() => new Statement());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Statement> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Statement() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Statement(Statement other) : this() {
          sql_ = other.sql_;
          params_ = other.params_ != null ? other.params_.Clone() : null;
          paramTypes_ = other.paramTypes_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Statement Clone() {
          return new Statement(this);
        }

        /// <summary>Field number for the "sql" field.</summary>
        public const int SqlFieldNumber = 1;
        private string sql_ = "";
        /// <summary>
        /// Required. The DML string.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Sql {
          get { return sql_; }
          set {
            sql_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "params" field.</summary>
        public const int ParamsFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Struct params_;
        /// <summary>
        /// Parameter names and values that bind to placeholders in the DML string.
        ///
        /// A parameter placeholder consists of the `@` character followed by the
        /// parameter name (for example, `@firstName`). Parameter names can contain
        /// letters, numbers, and underscores.
        ///
        /// Parameters can appear anywhere that a literal value is expected.  The
        /// same parameter name can be used more than once, for example:
        ///
        /// `"WHERE id > @msg_id AND id &lt; @msg_id + 100"`
        ///
        /// It is an error to execute a SQL statement with unbound parameters.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Struct Params {
          get { return params_; }
          set {
            params_ = value;
          }
        }

        /// <summary>Field number for the "param_types" field.</summary>
        public const int ParamTypesFieldNumber = 3;
        private static readonly pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type>.Codec _map_paramTypes_codec
            = new pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Spanner.V1.Type.Parser), 26);
        private readonly pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type> paramTypes_ = new pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type>();
        /// <summary>
        /// It is not always possible for Cloud Spanner to infer the right SQL type
        /// from a JSON value.  For example, values of type `BYTES` and values
        /// of type `STRING` both appear in [params][google.spanner.v1.ExecuteBatchDmlRequest.Statement.params] as JSON strings.
        ///
        /// In these cases, `param_types` can be used to specify the exact
        /// SQL type for some or all of the SQL statement parameters. See the
        /// definition of [Type][google.spanner.v1.Type] for more information
        /// about SQL types.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type> ParamTypes {
          get { return paramTypes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Statement);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Statement other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Sql != other.Sql) return false;
          if (!object.Equals(Params, other.Params)) return false;
          if (!ParamTypes.Equals(other.ParamTypes)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Sql.Length != 0) hash ^= Sql.GetHashCode();
          if (params_ != null) hash ^= Params.GetHashCode();
          hash ^= ParamTypes.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Sql.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Sql);
          }
          if (params_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Params);
          }
          paramTypes_.WriteTo(output, _map_paramTypes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Sql.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Sql);
          }
          if (params_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Params);
          }
          paramTypes_.WriteTo(ref output, _map_paramTypes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Sql.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Sql);
          }
          if (params_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Params);
          }
          size += paramTypes_.CalculateSize(_map_paramTypes_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Statement other) {
          if (other == null) {
            return;
          }
          if (other.Sql.Length != 0) {
            Sql = other.Sql;
          }
          if (other.params_ != null) {
            if (params_ == null) {
              Params = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            Params.MergeFrom(other.Params);
          }
          paramTypes_.Add(other.paramTypes_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Sql = input.ReadString();
                break;
              }
              case 18: {
                if (params_ == null) {
                  Params = new global::Google.Protobuf.WellKnownTypes.Struct();
                }
                input.ReadMessage(Params);
                break;
              }
              case 26: {
                paramTypes_.AddEntriesFrom(input, _map_paramTypes_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Sql = input.ReadString();
                break;
              }
              case 18: {
                if (params_ == null) {
                  Params = new global::Google.Protobuf.WellKnownTypes.Struct();
                }
                input.ReadMessage(Params);
                break;
              }
              case 26: {
                paramTypes_.AddEntriesFrom(ref input, _map_paramTypes_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// The response for [ExecuteBatchDml][google.spanner.v1.Spanner.ExecuteBatchDml]. Contains a list
  /// of [ResultSet][google.spanner.v1.ResultSet] messages, one for each DML statement that has successfully
  /// executed, in the same order as the statements in the request. If a statement
  /// fails, the status in the response body identifies the cause of the failure.
  ///
  /// To check for DML statements that failed, use the following approach:
  ///
  /// 1. Check the status in the response message. The [google.rpc.Code][google.rpc.Code] enum
  ///    value `OK` indicates that all statements were executed successfully.
  /// 2. If the status was not `OK`, check the number of result sets in the
  ///    response. If the response contains `N` [ResultSet][google.spanner.v1.ResultSet] messages, then
  ///    statement `N+1` in the request failed.
  ///
  /// Example 1:
  ///
  /// * Request: 5 DML statements, all executed successfully.
  /// * Response: 5 [ResultSet][google.spanner.v1.ResultSet] messages, with the status `OK`.
  ///
  /// Example 2:
  ///
  /// * Request: 5 DML statements. The third statement has a syntax error.
  /// * Response: 2 [ResultSet][google.spanner.v1.ResultSet] messages, and a syntax error (`INVALID_ARGUMENT`)
  ///   status. The number of [ResultSet][google.spanner.v1.ResultSet] messages indicates that the third
  ///   statement failed, and the fourth and fifth statements were not executed.
  /// </summary>
  public sealed partial class ExecuteBatchDmlResponse : pb::IMessage<ExecuteBatchDmlResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecuteBatchDmlResponse> _parser = new pb::MessageParser<ExecuteBatchDmlResponse>(() => new ExecuteBatchDmlResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecuteBatchDmlResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecuteBatchDmlResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecuteBatchDmlResponse(ExecuteBatchDmlResponse other) : this() {
      resultSets_ = other.resultSets_.Clone();
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecuteBatchDmlResponse Clone() {
      return new ExecuteBatchDmlResponse(this);
    }

    /// <summary>Field number for the "result_sets" field.</summary>
    public const int ResultSetsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Spanner.V1.ResultSet> _repeated_resultSets_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Spanner.V1.ResultSet.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Spanner.V1.ResultSet> resultSets_ = new pbc::RepeatedField<global::Google.Cloud.Spanner.V1.ResultSet>();
    /// <summary>
    /// One [ResultSet][google.spanner.v1.ResultSet] for each statement in the request that ran successfully,
    /// in the same order as the statements in the request. Each [ResultSet][google.spanner.v1.ResultSet] does
    /// not contain any rows. The [ResultSetStats][google.spanner.v1.ResultSetStats] in each [ResultSet][google.spanner.v1.ResultSet] contain
    /// the number of rows modified by the statement.
    ///
    /// Only the first [ResultSet][google.spanner.v1.ResultSet] in the response contains valid
    /// [ResultSetMetadata][google.spanner.v1.ResultSetMetadata].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Spanner.V1.ResultSet> ResultSets {
      get { return resultSets_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Google.Rpc.Status status_;
    /// <summary>
    /// If all DML statements are executed successfully, the status is `OK`.
    /// Otherwise, the error status of the first failed statement.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecuteBatchDmlResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecuteBatchDmlResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resultSets_.Equals(other.resultSets_)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resultSets_.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      resultSets_.WriteTo(output, _repeated_resultSets_codec);
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      resultSets_.WriteTo(ref output, _repeated_resultSets_codec);
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resultSets_.CalculateSize(_repeated_resultSets_codec);
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecuteBatchDmlResponse other) {
      if (other == null) {
        return;
      }
      resultSets_.Add(other.resultSets_);
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Google.Rpc.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            resultSets_.AddEntriesFrom(input, _repeated_resultSets_codec);
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            resultSets_.AddEntriesFrom(ref input, _repeated_resultSets_codec);
            break;
          }
          case 18: {
            if (status_ == null) {
              Status = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Options for a PartitionQueryRequest and
  /// PartitionReadRequest.
  /// </summary>
  public sealed partial class PartitionOptions : pb::IMessage<PartitionOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PartitionOptions> _parser = new pb::MessageParser<PartitionOptions>(() => new PartitionOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PartitionOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionOptions(PartitionOptions other) : this() {
      partitionSizeBytes_ = other.partitionSizeBytes_;
      maxPartitions_ = other.maxPartitions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionOptions Clone() {
      return new PartitionOptions(this);
    }

    /// <summary>Field number for the "partition_size_bytes" field.</summary>
    public const int PartitionSizeBytesFieldNumber = 1;
    private long partitionSizeBytes_;
    /// <summary>
    /// **Note:** This hint is currently ignored by PartitionQuery and
    /// PartitionRead requests.
    ///
    /// The desired data size for each partition generated.  The default for this
    /// option is currently 1 GiB.  This is only a hint. The actual size of each
    /// partition may be smaller or larger than this size request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PartitionSizeBytes {
      get { return partitionSizeBytes_; }
      set {
        partitionSizeBytes_ = value;
      }
    }

    /// <summary>Field number for the "max_partitions" field.</summary>
    public const int MaxPartitionsFieldNumber = 2;
    private long maxPartitions_;
    /// <summary>
    /// **Note:** This hint is currently ignored by PartitionQuery and
    /// PartitionRead requests.
    ///
    /// The desired maximum number of partitions to return.  For example, this may
    /// be set to the number of workers available.  The default for this option
    /// is currently 10,000. The maximum value is currently 200,000.  This is only
    /// a hint.  The actual number of partitions returned may be smaller or larger
    /// than this maximum count request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxPartitions {
      get { return maxPartitions_; }
      set {
        maxPartitions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PartitionOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PartitionOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PartitionSizeBytes != other.PartitionSizeBytes) return false;
      if (MaxPartitions != other.MaxPartitions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PartitionSizeBytes != 0L) hash ^= PartitionSizeBytes.GetHashCode();
      if (MaxPartitions != 0L) hash ^= MaxPartitions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PartitionSizeBytes != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PartitionSizeBytes);
      }
      if (MaxPartitions != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxPartitions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PartitionSizeBytes != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PartitionSizeBytes);
      }
      if (MaxPartitions != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxPartitions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PartitionSizeBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PartitionSizeBytes);
      }
      if (MaxPartitions != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPartitions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PartitionOptions other) {
      if (other == null) {
        return;
      }
      if (other.PartitionSizeBytes != 0L) {
        PartitionSizeBytes = other.PartitionSizeBytes;
      }
      if (other.MaxPartitions != 0L) {
        MaxPartitions = other.MaxPartitions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PartitionSizeBytes = input.ReadInt64();
            break;
          }
          case 16: {
            MaxPartitions = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PartitionSizeBytes = input.ReadInt64();
            break;
          }
          case 16: {
            MaxPartitions = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [PartitionQuery][google.spanner.v1.Spanner.PartitionQuery]
  /// </summary>
  public sealed partial class PartitionQueryRequest : pb::IMessage<PartitionQueryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PartitionQueryRequest> _parser = new pb::MessageParser<PartitionQueryRequest>(() => new PartitionQueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PartitionQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionQueryRequest(PartitionQueryRequest other) : this() {
      session_ = other.session_;
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      sql_ = other.sql_;
      params_ = other.params_ != null ? other.params_.Clone() : null;
      paramTypes_ = other.paramTypes_.Clone();
      partitionOptions_ = other.partitionOptions_ != null ? other.partitionOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionQueryRequest Clone() {
      return new PartitionQueryRequest(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private string session_ = "";
    /// <summary>
    /// Required. The session used to create the partitions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 2;
    private global::Google.Cloud.Spanner.V1.TransactionSelector transaction_;
    /// <summary>
    /// Read only snapshot transactions are supported, read/write and single use
    /// transactions are not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.TransactionSelector Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "sql" field.</summary>
    public const int SqlFieldNumber = 3;
    private string sql_ = "";
    /// <summary>
    /// Required. The query request to generate partitions for. The request will fail if
    /// the query is not root partitionable. The query plan of a root
    /// partitionable query has a single distributed union operator. A distributed
    /// union operator conceptually divides one or more tables into multiple
    /// splits, remotely evaluates a subquery independently on each split, and
    /// then unions all results.
    ///
    /// This must not contain DML commands, such as INSERT, UPDATE, or
    /// DELETE. Use [ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql] with a
    /// PartitionedDml transaction for large, partition-friendly DML operations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sql {
      get { return sql_; }
      set {
        sql_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Struct params_;
    /// <summary>
    /// Parameter names and values that bind to placeholders in the SQL string.
    ///
    /// A parameter placeholder consists of the `@` character followed by the
    /// parameter name (for example, `@firstName`). Parameter names can contain
    /// letters, numbers, and underscores.
    ///
    /// Parameters can appear anywhere that a literal value is expected.  The same
    /// parameter name can be used more than once, for example:
    ///
    /// `"WHERE id > @msg_id AND id &lt; @msg_id + 100"`
    ///
    /// It is an error to execute a SQL statement with unbound parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Params {
      get { return params_; }
      set {
        params_ = value;
      }
    }

    /// <summary>Field number for the "param_types" field.</summary>
    public const int ParamTypesFieldNumber = 5;
    private static readonly pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type>.Codec _map_paramTypes_codec
        = new pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Spanner.V1.Type.Parser), 42);
    private readonly pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type> paramTypes_ = new pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type>();
    /// <summary>
    /// It is not always possible for Cloud Spanner to infer the right SQL type
    /// from a JSON value.  For example, values of type `BYTES` and values
    /// of type `STRING` both appear in [params][google.spanner.v1.PartitionQueryRequest.params] as JSON strings.
    ///
    /// In these cases, `param_types` can be used to specify the exact
    /// SQL type for some or all of the SQL query parameters. See the
    /// definition of [Type][google.spanner.v1.Type] for more information
    /// about SQL types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.Spanner.V1.Type> ParamTypes {
      get { return paramTypes_; }
    }

    /// <summary>Field number for the "partition_options" field.</summary>
    public const int PartitionOptionsFieldNumber = 6;
    private global::Google.Cloud.Spanner.V1.PartitionOptions partitionOptions_;
    /// <summary>
    /// Additional options that affect how many partitions are created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.PartitionOptions PartitionOptions {
      get { return partitionOptions_; }
      set {
        partitionOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PartitionQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PartitionQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (Sql != other.Sql) return false;
      if (!object.Equals(Params, other.Params)) return false;
      if (!ParamTypes.Equals(other.ParamTypes)) return false;
      if (!object.Equals(PartitionOptions, other.PartitionOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (Sql.Length != 0) hash ^= Sql.GetHashCode();
      if (params_ != null) hash ^= Params.GetHashCode();
      hash ^= ParamTypes.GetHashCode();
      if (partitionOptions_ != null) hash ^= PartitionOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (transaction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transaction);
      }
      if (Sql.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Sql);
      }
      if (params_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Params);
      }
      paramTypes_.WriteTo(output, _map_paramTypes_codec);
      if (partitionOptions_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PartitionOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (transaction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transaction);
      }
      if (Sql.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Sql);
      }
      if (params_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Params);
      }
      paramTypes_.WriteTo(ref output, _map_paramTypes_codec);
      if (partitionOptions_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PartitionOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (Sql.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sql);
      }
      if (params_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Params);
      }
      size += paramTypes_.CalculateSize(_map_paramTypes_codec);
      if (partitionOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PartitionQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.Sql.Length != 0) {
        Sql = other.Sql;
      }
      if (other.params_ != null) {
        if (params_ == null) {
          Params = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Params.MergeFrom(other.Params);
      }
      paramTypes_.Add(other.paramTypes_);
      if (other.partitionOptions_ != null) {
        if (partitionOptions_ == null) {
          PartitionOptions = new global::Google.Cloud.Spanner.V1.PartitionOptions();
        }
        PartitionOptions.MergeFrom(other.PartitionOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (transaction_ == null) {
              Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 26: {
            Sql = input.ReadString();
            break;
          }
          case 34: {
            if (params_ == null) {
              Params = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Params);
            break;
          }
          case 42: {
            paramTypes_.AddEntriesFrom(input, _map_paramTypes_codec);
            break;
          }
          case 50: {
            if (partitionOptions_ == null) {
              PartitionOptions = new global::Google.Cloud.Spanner.V1.PartitionOptions();
            }
            input.ReadMessage(PartitionOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (transaction_ == null) {
              Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 26: {
            Sql = input.ReadString();
            break;
          }
          case 34: {
            if (params_ == null) {
              Params = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Params);
            break;
          }
          case 42: {
            paramTypes_.AddEntriesFrom(ref input, _map_paramTypes_codec);
            break;
          }
          case 50: {
            if (partitionOptions_ == null) {
              PartitionOptions = new global::Google.Cloud.Spanner.V1.PartitionOptions();
            }
            input.ReadMessage(PartitionOptions);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [PartitionRead][google.spanner.v1.Spanner.PartitionRead]
  /// </summary>
  public sealed partial class PartitionReadRequest : pb::IMessage<PartitionReadRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PartitionReadRequest> _parser = new pb::MessageParser<PartitionReadRequest>(() => new PartitionReadRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PartitionReadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionReadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionReadRequest(PartitionReadRequest other) : this() {
      session_ = other.session_;
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      table_ = other.table_;
      index_ = other.index_;
      columns_ = other.columns_.Clone();
      keySet_ = other.keySet_ != null ? other.keySet_.Clone() : null;
      partitionOptions_ = other.partitionOptions_ != null ? other.partitionOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionReadRequest Clone() {
      return new PartitionReadRequest(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private string session_ = "";
    /// <summary>
    /// Required. The session used to create the partitions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 2;
    private global::Google.Cloud.Spanner.V1.TransactionSelector transaction_;
    /// <summary>
    /// Read only snapshot transactions are supported, read/write and single use
    /// transactions are not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.TransactionSelector Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 3;
    private string table_ = "";
    /// <summary>
    /// Required. The name of the table in the database to be read.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Table {
      get { return table_; }
      set {
        table_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 4;
    private string index_ = "";
    /// <summary>
    /// If non-empty, the name of an index on [table][google.spanner.v1.PartitionReadRequest.table]. This index is
    /// used instead of the table primary key when interpreting [key_set][google.spanner.v1.PartitionReadRequest.key_set]
    /// and sorting result rows. See [key_set][google.spanner.v1.PartitionReadRequest.key_set] for further information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Index {
      get { return index_; }
      set {
        index_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_columns_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> columns_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The columns of [table][google.spanner.v1.PartitionReadRequest.table] to be returned for each row matching
    /// this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "key_set" field.</summary>
    public const int KeySetFieldNumber = 6;
    private global::Google.Cloud.Spanner.V1.KeySet keySet_;
    /// <summary>
    /// Required. `key_set` identifies the rows to be yielded. `key_set` names the
    /// primary keys of the rows in [table][google.spanner.v1.PartitionReadRequest.table] to be yielded, unless [index][google.spanner.v1.PartitionReadRequest.index]
    /// is present. If [index][google.spanner.v1.PartitionReadRequest.index] is present, then [key_set][google.spanner.v1.PartitionReadRequest.key_set] instead names
    /// index keys in [index][google.spanner.v1.PartitionReadRequest.index].
    ///
    /// It is not an error for the `key_set` to name rows that do not
    /// exist in the database. Read yields nothing for nonexistent rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.KeySet KeySet {
      get { return keySet_; }
      set {
        keySet_ = value;
      }
    }

    /// <summary>Field number for the "partition_options" field.</summary>
    public const int PartitionOptionsFieldNumber = 9;
    private global::Google.Cloud.Spanner.V1.PartitionOptions partitionOptions_;
    /// <summary>
    /// Additional options that affect how many partitions are created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.PartitionOptions PartitionOptions {
      get { return partitionOptions_; }
      set {
        partitionOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PartitionReadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PartitionReadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (Table != other.Table) return false;
      if (Index != other.Index) return false;
      if(!columns_.Equals(other.columns_)) return false;
      if (!object.Equals(KeySet, other.KeySet)) return false;
      if (!object.Equals(PartitionOptions, other.PartitionOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (Table.Length != 0) hash ^= Table.GetHashCode();
      if (Index.Length != 0) hash ^= Index.GetHashCode();
      hash ^= columns_.GetHashCode();
      if (keySet_ != null) hash ^= KeySet.GetHashCode();
      if (partitionOptions_ != null) hash ^= PartitionOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (transaction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transaction);
      }
      if (Table.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Table);
      }
      if (Index.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Index);
      }
      columns_.WriteTo(output, _repeated_columns_codec);
      if (keySet_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(KeySet);
      }
      if (partitionOptions_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PartitionOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (transaction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transaction);
      }
      if (Table.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Table);
      }
      if (Index.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Index);
      }
      columns_.WriteTo(ref output, _repeated_columns_codec);
      if (keySet_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(KeySet);
      }
      if (partitionOptions_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PartitionOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (Table.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Table);
      }
      if (Index.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Index);
      }
      size += columns_.CalculateSize(_repeated_columns_codec);
      if (keySet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KeySet);
      }
      if (partitionOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartitionOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PartitionReadRequest other) {
      if (other == null) {
        return;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.Table.Length != 0) {
        Table = other.Table;
      }
      if (other.Index.Length != 0) {
        Index = other.Index;
      }
      columns_.Add(other.columns_);
      if (other.keySet_ != null) {
        if (keySet_ == null) {
          KeySet = new global::Google.Cloud.Spanner.V1.KeySet();
        }
        KeySet.MergeFrom(other.KeySet);
      }
      if (other.partitionOptions_ != null) {
        if (partitionOptions_ == null) {
          PartitionOptions = new global::Google.Cloud.Spanner.V1.PartitionOptions();
        }
        PartitionOptions.MergeFrom(other.PartitionOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (transaction_ == null) {
              Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 26: {
            Table = input.ReadString();
            break;
          }
          case 34: {
            Index = input.ReadString();
            break;
          }
          case 42: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
          case 50: {
            if (keySet_ == null) {
              KeySet = new global::Google.Cloud.Spanner.V1.KeySet();
            }
            input.ReadMessage(KeySet);
            break;
          }
          case 74: {
            if (partitionOptions_ == null) {
              PartitionOptions = new global::Google.Cloud.Spanner.V1.PartitionOptions();
            }
            input.ReadMessage(PartitionOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (transaction_ == null) {
              Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 26: {
            Table = input.ReadString();
            break;
          }
          case 34: {
            Index = input.ReadString();
            break;
          }
          case 42: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
          case 50: {
            if (keySet_ == null) {
              KeySet = new global::Google.Cloud.Spanner.V1.KeySet();
            }
            input.ReadMessage(KeySet);
            break;
          }
          case 74: {
            if (partitionOptions_ == null) {
              PartitionOptions = new global::Google.Cloud.Spanner.V1.PartitionOptions();
            }
            input.ReadMessage(PartitionOptions);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Information returned for each partition returned in a
  /// PartitionResponse.
  /// </summary>
  public sealed partial class Partition : pb::IMessage<Partition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Partition> _parser = new pb::MessageParser<Partition>(() => new Partition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Partition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Partition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Partition(Partition other) : this() {
      partitionToken_ = other.partitionToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Partition Clone() {
      return new Partition(this);
    }

    /// <summary>Field number for the "partition_token" field.</summary>
    public const int PartitionTokenFieldNumber = 1;
    private pb::ByteString partitionToken_ = pb::ByteString.Empty;
    /// <summary>
    /// This token can be passed to Read, StreamingRead, ExecuteSql, or
    /// ExecuteStreamingSql requests to restrict the results to those identified by
    /// this partition token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PartitionToken {
      get { return partitionToken_; }
      set {
        partitionToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Partition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Partition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PartitionToken != other.PartitionToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PartitionToken.Length != 0) hash ^= PartitionToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PartitionToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PartitionToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PartitionToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PartitionToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PartitionToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PartitionToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Partition other) {
      if (other == null) {
        return;
      }
      if (other.PartitionToken.Length != 0) {
        PartitionToken = other.PartitionToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PartitionToken = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PartitionToken = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response for [PartitionQuery][google.spanner.v1.Spanner.PartitionQuery]
  /// or [PartitionRead][google.spanner.v1.Spanner.PartitionRead]
  /// </summary>
  public sealed partial class PartitionResponse : pb::IMessage<PartitionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PartitionResponse> _parser = new pb::MessageParser<PartitionResponse>(() => new PartitionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PartitionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionResponse(PartitionResponse other) : this() {
      partitions_ = other.partitions_.Clone();
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionResponse Clone() {
      return new PartitionResponse(this);
    }

    /// <summary>Field number for the "partitions" field.</summary>
    public const int PartitionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Spanner.V1.Partition> _repeated_partitions_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Spanner.V1.Partition.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Spanner.V1.Partition> partitions_ = new pbc::RepeatedField<global::Google.Cloud.Spanner.V1.Partition>();
    /// <summary>
    /// Partitions created by this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Spanner.V1.Partition> Partitions {
      get { return partitions_; }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 2;
    private global::Google.Cloud.Spanner.V1.Transaction transaction_;
    /// <summary>
    /// Transaction created by this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PartitionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PartitionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!partitions_.Equals(other.partitions_)) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= partitions_.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      partitions_.WriteTo(output, _repeated_partitions_codec);
      if (transaction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      partitions_.WriteTo(ref output, _repeated_partitions_codec);
      if (transaction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += partitions_.CalculateSize(_repeated_partitions_codec);
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PartitionResponse other) {
      if (other == null) {
        return;
      }
      partitions_.Add(other.partitions_);
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Google.Cloud.Spanner.V1.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            partitions_.AddEntriesFrom(input, _repeated_partitions_codec);
            break;
          }
          case 18: {
            if (transaction_ == null) {
              Transaction = new global::Google.Cloud.Spanner.V1.Transaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            partitions_.AddEntriesFrom(ref input, _repeated_partitions_codec);
            break;
          }
          case 18: {
            if (transaction_ == null) {
              Transaction = new global::Google.Cloud.Spanner.V1.Transaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [Read][google.spanner.v1.Spanner.Read] and
  /// [StreamingRead][google.spanner.v1.Spanner.StreamingRead].
  /// </summary>
  public sealed partial class ReadRequest : pb::IMessage<ReadRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadRequest> _parser = new pb::MessageParser<ReadRequest>(() => new ReadRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRequest(ReadRequest other) : this() {
      session_ = other.session_;
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      table_ = other.table_;
      index_ = other.index_;
      columns_ = other.columns_.Clone();
      keySet_ = other.keySet_ != null ? other.keySet_.Clone() : null;
      limit_ = other.limit_;
      resumeToken_ = other.resumeToken_;
      partitionToken_ = other.partitionToken_;
      requestOptions_ = other.requestOptions_ != null ? other.requestOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRequest Clone() {
      return new ReadRequest(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private string session_ = "";
    /// <summary>
    /// Required. The session in which the read should be performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 2;
    private global::Google.Cloud.Spanner.V1.TransactionSelector transaction_;
    /// <summary>
    /// The transaction to use. If none is provided, the default is a
    /// temporary read-only transaction with strong concurrency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.TransactionSelector Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 3;
    private string table_ = "";
    /// <summary>
    /// Required. The name of the table in the database to be read.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Table {
      get { return table_; }
      set {
        table_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 4;
    private string index_ = "";
    /// <summary>
    /// If non-empty, the name of an index on [table][google.spanner.v1.ReadRequest.table]. This index is
    /// used instead of the table primary key when interpreting [key_set][google.spanner.v1.ReadRequest.key_set]
    /// and sorting result rows. See [key_set][google.spanner.v1.ReadRequest.key_set] for further information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Index {
      get { return index_; }
      set {
        index_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_columns_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> columns_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. The columns of [table][google.spanner.v1.ReadRequest.table] to be returned for each row matching
    /// this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "key_set" field.</summary>
    public const int KeySetFieldNumber = 6;
    private global::Google.Cloud.Spanner.V1.KeySet keySet_;
    /// <summary>
    /// Required. `key_set` identifies the rows to be yielded. `key_set` names the
    /// primary keys of the rows in [table][google.spanner.v1.ReadRequest.table] to be yielded, unless [index][google.spanner.v1.ReadRequest.index]
    /// is present. If [index][google.spanner.v1.ReadRequest.index] is present, then [key_set][google.spanner.v1.ReadRequest.key_set] instead names
    /// index keys in [index][google.spanner.v1.ReadRequest.index].
    ///
    /// If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is empty, rows are yielded
    /// in table primary key order (if [index][google.spanner.v1.ReadRequest.index] is empty) or index key order
    /// (if [index][google.spanner.v1.ReadRequest.index] is non-empty).  If the [partition_token][google.spanner.v1.ReadRequest.partition_token] field is not
    /// empty, rows will be yielded in an unspecified order.
    ///
    /// It is not an error for the `key_set` to name rows that do not
    /// exist in the database. Read yields nothing for nonexistent rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.KeySet KeySet {
      get { return keySet_; }
      set {
        keySet_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 8;
    private long limit_;
    /// <summary>
    /// If greater than zero, only the first `limit` rows are yielded. If `limit`
    /// is zero, the default is no limit. A limit cannot be specified if
    /// `partition_token` is set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "resume_token" field.</summary>
    public const int ResumeTokenFieldNumber = 9;
    private pb::ByteString resumeToken_ = pb::ByteString.Empty;
    /// <summary>
    /// If this request is resuming a previously interrupted read,
    /// `resume_token` should be copied from the last
    /// [PartialResultSet][google.spanner.v1.PartialResultSet] yielded before the interruption. Doing this
    /// enables the new read to resume where the last read left off. The
    /// rest of the request parameters must exactly match the request
    /// that yielded this token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ResumeToken {
      get { return resumeToken_; }
      set {
        resumeToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "partition_token" field.</summary>
    public const int PartitionTokenFieldNumber = 10;
    private pb::ByteString partitionToken_ = pb::ByteString.Empty;
    /// <summary>
    /// If present, results will be restricted to the specified partition
    /// previously created using PartitionRead().    There must be an exact
    /// match for the values of fields common to this message and the
    /// PartitionReadRequest message used to create this partition_token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PartitionToken {
      get { return partitionToken_; }
      set {
        partitionToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_options" field.</summary>
    public const int RequestOptionsFieldNumber = 11;
    private global::Google.Cloud.Spanner.V1.RequestOptions requestOptions_;
    /// <summary>
    /// Common options for this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.RequestOptions RequestOptions {
      get { return requestOptions_; }
      set {
        requestOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (Table != other.Table) return false;
      if (Index != other.Index) return false;
      if(!columns_.Equals(other.columns_)) return false;
      if (!object.Equals(KeySet, other.KeySet)) return false;
      if (Limit != other.Limit) return false;
      if (ResumeToken != other.ResumeToken) return false;
      if (PartitionToken != other.PartitionToken) return false;
      if (!object.Equals(RequestOptions, other.RequestOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (Table.Length != 0) hash ^= Table.GetHashCode();
      if (Index.Length != 0) hash ^= Index.GetHashCode();
      hash ^= columns_.GetHashCode();
      if (keySet_ != null) hash ^= KeySet.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (ResumeToken.Length != 0) hash ^= ResumeToken.GetHashCode();
      if (PartitionToken.Length != 0) hash ^= PartitionToken.GetHashCode();
      if (requestOptions_ != null) hash ^= RequestOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (transaction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transaction);
      }
      if (Table.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Table);
      }
      if (Index.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Index);
      }
      columns_.WriteTo(output, _repeated_columns_codec);
      if (keySet_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(KeySet);
      }
      if (Limit != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Limit);
      }
      if (ResumeToken.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(ResumeToken);
      }
      if (PartitionToken.Length != 0) {
        output.WriteRawTag(82);
        output.WriteBytes(PartitionToken);
      }
      if (requestOptions_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RequestOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (transaction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Transaction);
      }
      if (Table.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Table);
      }
      if (Index.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Index);
      }
      columns_.WriteTo(ref output, _repeated_columns_codec);
      if (keySet_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(KeySet);
      }
      if (Limit != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Limit);
      }
      if (ResumeToken.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(ResumeToken);
      }
      if (PartitionToken.Length != 0) {
        output.WriteRawTag(82);
        output.WriteBytes(PartitionToken);
      }
      if (requestOptions_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RequestOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (Table.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Table);
      }
      if (Index.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Index);
      }
      size += columns_.CalculateSize(_repeated_columns_codec);
      if (keySet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KeySet);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (ResumeToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ResumeToken);
      }
      if (PartitionToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PartitionToken);
      }
      if (requestOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadRequest other) {
      if (other == null) {
        return;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.Table.Length != 0) {
        Table = other.Table;
      }
      if (other.Index.Length != 0) {
        Index = other.Index;
      }
      columns_.Add(other.columns_);
      if (other.keySet_ != null) {
        if (keySet_ == null) {
          KeySet = new global::Google.Cloud.Spanner.V1.KeySet();
        }
        KeySet.MergeFrom(other.KeySet);
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.ResumeToken.Length != 0) {
        ResumeToken = other.ResumeToken;
      }
      if (other.PartitionToken.Length != 0) {
        PartitionToken = other.PartitionToken;
      }
      if (other.requestOptions_ != null) {
        if (requestOptions_ == null) {
          RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
        }
        RequestOptions.MergeFrom(other.RequestOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (transaction_ == null) {
              Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 26: {
            Table = input.ReadString();
            break;
          }
          case 34: {
            Index = input.ReadString();
            break;
          }
          case 42: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
          case 50: {
            if (keySet_ == null) {
              KeySet = new global::Google.Cloud.Spanner.V1.KeySet();
            }
            input.ReadMessage(KeySet);
            break;
          }
          case 64: {
            Limit = input.ReadInt64();
            break;
          }
          case 74: {
            ResumeToken = input.ReadBytes();
            break;
          }
          case 82: {
            PartitionToken = input.ReadBytes();
            break;
          }
          case 90: {
            if (requestOptions_ == null) {
              RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
            }
            input.ReadMessage(RequestOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (transaction_ == null) {
              Transaction = new global::Google.Cloud.Spanner.V1.TransactionSelector();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 26: {
            Table = input.ReadString();
            break;
          }
          case 34: {
            Index = input.ReadString();
            break;
          }
          case 42: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
          case 50: {
            if (keySet_ == null) {
              KeySet = new global::Google.Cloud.Spanner.V1.KeySet();
            }
            input.ReadMessage(KeySet);
            break;
          }
          case 64: {
            Limit = input.ReadInt64();
            break;
          }
          case 74: {
            ResumeToken = input.ReadBytes();
            break;
          }
          case 82: {
            PartitionToken = input.ReadBytes();
            break;
          }
          case 90: {
            if (requestOptions_ == null) {
              RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
            }
            input.ReadMessage(RequestOptions);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [BeginTransaction][google.spanner.v1.Spanner.BeginTransaction].
  /// </summary>
  public sealed partial class BeginTransactionRequest : pb::IMessage<BeginTransactionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BeginTransactionRequest> _parser = new pb::MessageParser<BeginTransactionRequest>(() => new BeginTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BeginTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeginTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeginTransactionRequest(BeginTransactionRequest other) : this() {
      session_ = other.session_;
      options_ = other.options_ != null ? other.options_.Clone() : null;
      requestOptions_ = other.requestOptions_ != null ? other.requestOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeginTransactionRequest Clone() {
      return new BeginTransactionRequest(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private string session_ = "";
    /// <summary>
    /// Required. The session in which the transaction runs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 2;
    private global::Google.Cloud.Spanner.V1.TransactionOptions options_;
    /// <summary>
    /// Required. Options for the new transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.TransactionOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    /// <summary>Field number for the "request_options" field.</summary>
    public const int RequestOptionsFieldNumber = 3;
    private global::Google.Cloud.Spanner.V1.RequestOptions requestOptions_;
    /// <summary>
    /// Common options for this request.
    /// Priority is ignored for this request. Setting the priority in this
    /// request_options struct will not do anything. To set the priority for a
    /// transaction, set it on the reads and writes that are part of this
    /// transaction instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.RequestOptions RequestOptions {
      get { return requestOptions_; }
      set {
        requestOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BeginTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BeginTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (!object.Equals(Options, other.Options)) return false;
      if (!object.Equals(RequestOptions, other.RequestOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (requestOptions_ != null) hash ^= RequestOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (options_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Options);
      }
      if (requestOptions_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RequestOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (options_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Options);
      }
      if (requestOptions_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RequestOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (requestOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BeginTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          Options = new global::Google.Cloud.Spanner.V1.TransactionOptions();
        }
        Options.MergeFrom(other.Options);
      }
      if (other.requestOptions_ != null) {
        if (requestOptions_ == null) {
          RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
        }
        RequestOptions.MergeFrom(other.RequestOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (options_ == null) {
              Options = new global::Google.Cloud.Spanner.V1.TransactionOptions();
            }
            input.ReadMessage(Options);
            break;
          }
          case 26: {
            if (requestOptions_ == null) {
              RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
            }
            input.ReadMessage(RequestOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            if (options_ == null) {
              Options = new global::Google.Cloud.Spanner.V1.TransactionOptions();
            }
            input.ReadMessage(Options);
            break;
          }
          case 26: {
            if (requestOptions_ == null) {
              RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
            }
            input.ReadMessage(RequestOptions);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [Commit][google.spanner.v1.Spanner.Commit].
  /// </summary>
  public sealed partial class CommitRequest : pb::IMessage<CommitRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommitRequest> _parser = new pb::MessageParser<CommitRequest>(() => new CommitRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitRequest(CommitRequest other) : this() {
      session_ = other.session_;
      mutations_ = other.mutations_.Clone();
      returnCommitStats_ = other.returnCommitStats_;
      requestOptions_ = other.requestOptions_ != null ? other.requestOptions_.Clone() : null;
      switch (other.TransactionCase) {
        case TransactionOneofCase.TransactionId:
          TransactionId = other.TransactionId;
          break;
        case TransactionOneofCase.SingleUseTransaction:
          SingleUseTransaction = other.SingleUseTransaction.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitRequest Clone() {
      return new CommitRequest(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private string session_ = "";
    /// <summary>
    /// Required. The session in which the transaction to be committed is running.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 2;
    /// <summary>
    /// Commit a previously-started transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransactionId {
      get { return transactionCase_ == TransactionOneofCase.TransactionId ? (pb::ByteString) transaction_ : pb::ByteString.Empty; }
      set {
        transaction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        transactionCase_ = TransactionOneofCase.TransactionId;
      }
    }

    /// <summary>Field number for the "single_use_transaction" field.</summary>
    public const int SingleUseTransactionFieldNumber = 3;
    /// <summary>
    /// Execute mutations in a temporary transaction. Note that unlike
    /// commit of a previously-started transaction, commit with a
    /// temporary transaction is non-idempotent. That is, if the
    /// `CommitRequest` is sent to Cloud Spanner more than once (for
    /// instance, due to retries in the application, or in the
    /// transport library), it is possible that the mutations are
    /// executed more than once. If this is undesirable, use
    /// [BeginTransaction][google.spanner.v1.Spanner.BeginTransaction] and
    /// [Commit][google.spanner.v1.Spanner.Commit] instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.TransactionOptions SingleUseTransaction {
      get { return transactionCase_ == TransactionOneofCase.SingleUseTransaction ? (global::Google.Cloud.Spanner.V1.TransactionOptions) transaction_ : null; }
      set {
        transaction_ = value;
        transactionCase_ = value == null ? TransactionOneofCase.None : TransactionOneofCase.SingleUseTransaction;
      }
    }

    /// <summary>Field number for the "mutations" field.</summary>
    public const int MutationsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Spanner.V1.Mutation> _repeated_mutations_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Spanner.V1.Mutation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Spanner.V1.Mutation> mutations_ = new pbc::RepeatedField<global::Google.Cloud.Spanner.V1.Mutation>();
    /// <summary>
    /// The mutations to be executed when this transaction commits. All
    /// mutations are applied atomically, in the order they appear in
    /// this list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Spanner.V1.Mutation> Mutations {
      get { return mutations_; }
    }

    /// <summary>Field number for the "return_commit_stats" field.</summary>
    public const int ReturnCommitStatsFieldNumber = 5;
    private bool returnCommitStats_;
    /// <summary>
    /// If `true`, then statistics related to the transaction will be included in
    /// the [CommitResponse][google.spanner.v1.CommitResponse.commit_stats]. Default value is
    /// `false`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReturnCommitStats {
      get { return returnCommitStats_; }
      set {
        returnCommitStats_ = value;
      }
    }

    /// <summary>Field number for the "request_options" field.</summary>
    public const int RequestOptionsFieldNumber = 6;
    private global::Google.Cloud.Spanner.V1.RequestOptions requestOptions_;
    /// <summary>
    /// Common options for this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.V1.RequestOptions RequestOptions {
      get { return requestOptions_; }
      set {
        requestOptions_ = value;
      }
    }

    private object transaction_;
    /// <summary>Enum of possible cases for the "transaction" oneof.</summary>
    public enum TransactionOneofCase {
      None = 0,
      TransactionId = 2,
      SingleUseTransaction = 3,
    }
    private TransactionOneofCase transactionCase_ = TransactionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionOneofCase TransactionCase {
      get { return transactionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransaction() {
      transactionCase_ = TransactionOneofCase.None;
      transaction_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (TransactionId != other.TransactionId) return false;
      if (!object.Equals(SingleUseTransaction, other.SingleUseTransaction)) return false;
      if(!mutations_.Equals(other.mutations_)) return false;
      if (ReturnCommitStats != other.ReturnCommitStats) return false;
      if (!object.Equals(RequestOptions, other.RequestOptions)) return false;
      if (TransactionCase != other.TransactionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (transactionCase_ == TransactionOneofCase.TransactionId) hash ^= TransactionId.GetHashCode();
      if (transactionCase_ == TransactionOneofCase.SingleUseTransaction) hash ^= SingleUseTransaction.GetHashCode();
      hash ^= mutations_.GetHashCode();
      if (ReturnCommitStats != false) hash ^= ReturnCommitStats.GetHashCode();
      if (requestOptions_ != null) hash ^= RequestOptions.GetHashCode();
      hash ^= (int) transactionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (transactionCase_ == TransactionOneofCase.TransactionId) {
        output.WriteRawTag(18);
        output.WriteBytes(TransactionId);
      }
      if (transactionCase_ == TransactionOneofCase.SingleUseTransaction) {
        output.WriteRawTag(26);
        output.WriteMessage(SingleUseTransaction);
      }
      mutations_.WriteTo(output, _repeated_mutations_codec);
      if (ReturnCommitStats != false) {
        output.WriteRawTag(40);
        output.WriteBool(ReturnCommitStats);
      }
      if (requestOptions_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RequestOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (transactionCase_ == TransactionOneofCase.TransactionId) {
        output.WriteRawTag(18);
        output.WriteBytes(TransactionId);
      }
      if (transactionCase_ == TransactionOneofCase.SingleUseTransaction) {
        output.WriteRawTag(26);
        output.WriteMessage(SingleUseTransaction);
      }
      mutations_.WriteTo(ref output, _repeated_mutations_codec);
      if (ReturnCommitStats != false) {
        output.WriteRawTag(40);
        output.WriteBool(ReturnCommitStats);
      }
      if (requestOptions_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RequestOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (transactionCase_ == TransactionOneofCase.TransactionId) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransactionId);
      }
      if (transactionCase_ == TransactionOneofCase.SingleUseTransaction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SingleUseTransaction);
      }
      size += mutations_.CalculateSize(_repeated_mutations_codec);
      if (ReturnCommitStats != false) {
        size += 1 + 1;
      }
      if (requestOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitRequest other) {
      if (other == null) {
        return;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      mutations_.Add(other.mutations_);
      if (other.ReturnCommitStats != false) {
        ReturnCommitStats = other.ReturnCommitStats;
      }
      if (other.requestOptions_ != null) {
        if (requestOptions_ == null) {
          RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
        }
        RequestOptions.MergeFrom(other.RequestOptions);
      }
      switch (other.TransactionCase) {
        case TransactionOneofCase.TransactionId:
          TransactionId = other.TransactionId;
          break;
        case TransactionOneofCase.SingleUseTransaction:
          if (SingleUseTransaction == null) {
            SingleUseTransaction = new global::Google.Cloud.Spanner.V1.TransactionOptions();
          }
          SingleUseTransaction.MergeFrom(other.SingleUseTransaction);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            TransactionId = input.ReadBytes();
            break;
          }
          case 26: {
            global::Google.Cloud.Spanner.V1.TransactionOptions subBuilder = new global::Google.Cloud.Spanner.V1.TransactionOptions();
            if (transactionCase_ == TransactionOneofCase.SingleUseTransaction) {
              subBuilder.MergeFrom(SingleUseTransaction);
            }
            input.ReadMessage(subBuilder);
            SingleUseTransaction = subBuilder;
            break;
          }
          case 34: {
            mutations_.AddEntriesFrom(input, _repeated_mutations_codec);
            break;
          }
          case 40: {
            ReturnCommitStats = input.ReadBool();
            break;
          }
          case 50: {
            if (requestOptions_ == null) {
              RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
            }
            input.ReadMessage(RequestOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            TransactionId = input.ReadBytes();
            break;
          }
          case 26: {
            global::Google.Cloud.Spanner.V1.TransactionOptions subBuilder = new global::Google.Cloud.Spanner.V1.TransactionOptions();
            if (transactionCase_ == TransactionOneofCase.SingleUseTransaction) {
              subBuilder.MergeFrom(SingleUseTransaction);
            }
            input.ReadMessage(subBuilder);
            SingleUseTransaction = subBuilder;
            break;
          }
          case 34: {
            mutations_.AddEntriesFrom(ref input, _repeated_mutations_codec);
            break;
          }
          case 40: {
            ReturnCommitStats = input.ReadBool();
            break;
          }
          case 50: {
            if (requestOptions_ == null) {
              RequestOptions = new global::Google.Cloud.Spanner.V1.RequestOptions();
            }
            input.ReadMessage(RequestOptions);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [Rollback][google.spanner.v1.Spanner.Rollback].
  /// </summary>
  public sealed partial class RollbackRequest : pb::IMessage<RollbackRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RollbackRequest> _parser = new pb::MessageParser<RollbackRequest>(() => new RollbackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RollbackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.SpannerReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackRequest(RollbackRequest other) : this() {
      session_ = other.session_;
      transactionId_ = other.transactionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackRequest Clone() {
      return new RollbackRequest(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private string session_ = "";
    /// <summary>
    /// Required. The session in which the transaction to roll back is running.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 2;
    private pb::ByteString transactionId_ = pb::ByteString.Empty;
    /// <summary>
    /// Required. The transaction to roll back.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RollbackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RollbackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (TransactionId != other.TransactionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (TransactionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(TransactionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Session.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Session);
      }
      if (TransactionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(TransactionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransactionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RollbackRequest other) {
      if (other == null) {
        return;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            TransactionId = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Session = input.ReadString();
            break;
          }
          case 18: {
            TransactionId = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
